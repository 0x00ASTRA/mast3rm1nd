{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Player.ts","webpack:///./src/ui/numeralFormat.ts","webpack:///./src/Constants.ts","webpack:///./src/Augmentation/data/AugmentationNames.ts","webpack:///./src/BitNode/BitNodeMultipliers.ts","webpack:///./src/Locations/data/LocationNames.ts","webpack:///./src/ui/React/DialogBox.tsx","webpack:///./src/Netscript/RamCostGenerator.ts","webpack:///./src/Settings/Settings.ts","webpack:///./src/ui/React/Money.tsx","webpack:///./src/utils/StringHelperFunctions.ts","webpack:///./src/Augmentation/Augmentations.ts","webpack:///./src/utils/JSONReviver.ts","webpack:///./src/Locations/data/CityNames.ts","webpack:///./src/utils/helpers/getRandomInt.ts","webpack:///./src/Faction/Factions.ts","webpack:///./src/Company/data/companypositionnames.ts","webpack:///./src/ui/Context.ts","webpack:///./src/ui/Router.ts","webpack:///./src/Augmentation/Augmentation.tsx","webpack:///./src/Server/AllServers.ts","webpack:///./src/Hacknet/data/Constants.ts","webpack:///./src/Bladeburner/data/ActionTypes.ts","webpack:///./src/InteractiveTutorial.ts","webpack:///./src/Corporation/data/Constants.ts","webpack:///./src/ui/React/Table.tsx","webpack:///./src/Corporation/ui/Context.ts","webpack:///./src/ui/React/Modal.tsx","webpack:///./src/Server/ServerHelpers.ts","webpack:///./src/PersonObjects/Player/PlayerObjectGeneralMethods.tsx","webpack:///./src/Corporation/EmployeePositions.ts","webpack:///./src/Corporation/IndustryData.tsx","webpack:///./src/Locations/LocationTypeEnum.ts","webpack:///./src/Bladeburner/data/Constants.ts","webpack:///./src/Literature/data/LiteratureNames.ts","webpack:///./src/Server/Server.ts","webpack:///./src/Hacknet/HacknetHelpers.tsx","webpack:///./src/Company/Companies.ts","webpack:///./src/SourceFile/SourceFileFlags.ts","webpack:///./src/Server/SpecialServerIps.ts","webpack:///./src/StockMarket/data/PositionTypes.ts","webpack:///./src/Corporation/Actions.ts","webpack:///./src/Programs/Programs.ts","webpack:///./src/PersonObjects/Sleeve/SleeveTaskTypesEnum.ts","webpack:///./src/Crime/Crimes.ts","webpack:///./src/Casino/utils.ts","webpack:///./src/Gang/AllGangs.ts","webpack:///./src/Company/CompanyPositions.ts","webpack:///./src/StockMarket/data/StockSymbols.ts","webpack:///./src/Hacknet/HacknetServer.ts","webpack:///./src/StockMarket/StockMarket.tsx","webpack:///./src/utils/helpers/keyCodes.ts","webpack:///./src/CodingContracts.ts","webpack:///./src/StockMarket/data/OrderTypes.ts","webpack:///./src/Hacking.ts","webpack:///./src/ui/React/Reputation.tsx","webpack:///./src/Script/isScriptFilename.ts","webpack:///./src/ui/React/MoneyRate.tsx","webpack:///./src/ui/GameRoot.tsx","webpack:///./src/utils/helpers/isString.ts","webpack:///./src/Corporation/data/BaseResearchTree.ts","webpack:///./src/Faction/FactionHelpers.tsx","webpack:///./src/Terminal/DirectoryHelpers.ts","webpack:///./src/ui/React/StatsTable.tsx","webpack:///./src/Bladeburner/BlackOperation.ts","webpack:///./src/Terminal.ts","webpack:///./src/Corporation/ui/MoneyCost.tsx","webpack:///./src/Message/Message.ts","webpack:///./src/Bladeburner/data/SkillNames.ts","webpack:///./src/StockMarket/Stock.ts","webpack:///./src/Netscript/killWorkerScript.ts","webpack:///./src/Locations/Cities.ts","webpack:///./src/utils/EventEmitter.ts","webpack:///./src/DevMenu/ui/Adjuster.tsx","webpack:///./src/Alias.ts","webpack:///./src/NetscriptEvaluator.ts","webpack:///./src/Literature/Literature.ts","webpack:///./src/ui/React/CopyableText.tsx","webpack:///./src/Augmentation/AugmentationHelpers.tsx","webpack:///./src/Missions.jsx","webpack:///./src/Gang/data/upgrades.ts","webpack:///./src/Corporation/MaterialSizes.ts","webpack:///./src/Faction/FactionWorkTypeEnum.ts","webpack:///./src/NetscriptWorker.ts","webpack:///./src/utils/helpers/createProgressBarText.ts","webpack:///./src/Corporation/Material.ts","webpack:///./src/ui/React/createPopup.tsx","webpack:///./src/Faction/Faction.ts","webpack:///./src/Settings/SettingEnums.ts","webpack:///./src/Infiltration/ui/KeyHandler.tsx","webpack:///./src/Infiltration/ui/GameTimer.tsx","webpack:///./src/Infiltration/ui/Difficulty.ts","webpack:///./src/Netscript/WorkerScripts.ts","webpack:///./src/Casino/Game.tsx","webpack:///./src/StockMarket/StockMarketHelpers.ts","webpack:///./src/Gang/GangMemberUpgrades.ts","webpack:///./src/PersonObjects/Person.ts","webpack:///./src/Crime/Crime.ts","webpack:///./src/BitNode/BitNode.tsx","webpack:///./src/Bladeburner/Bladeburner.tsx","webpack:///./src/Company/Company.ts","webpack:///./src/Server/ServerPurchases.ts","webpack:///./src/Corporation/Warehouse.ts","webpack:///./src/Gang/GangMemberTasks.ts","webpack:///./src/Hacknet/formulas/HacknetServers.ts","webpack:///./src/StockMarket/BuyingAndSelling.tsx","webpack:///./src/Bladeburner/Skill.ts","webpack:///./src/utils/SetTimeoutRef.ts","webpack:///./src/ui/React/Hashes.tsx","webpack:///./src/utils/helpers/addOffset.ts","webpack:///./src/PersonObjects/formulas/reputation.ts","webpack:///./src/Bladeburner/Skills.ts","webpack:///./src/Casino/CardDeck/Card.ts","webpack:///./src/Bladeburner/ActionIdentifier.ts","webpack:///./src/Locations/Locations.ts","webpack:///./src/Infiltration/utils.ts","webpack:///./src/RedPill.tsx","webpack:///./src/Script/ScriptHelpers.ts","webpack:///./src/TextFile.ts","webpack:///./src/utils/helpers/exceptionAlert.ts","webpack:///./src/Message/MessageHelpers.ts","webpack:///./src/PersonObjects/formulas/skill.ts","webpack:///./src/Hacknet/formulas/HacknetNodes.ts","webpack:///./src/Bladeburner/BlackOperations.tsx","webpack:///./src/Bladeburner/GeneralActions.tsx","webpack:///./src/SourceFile/SourceFile.ts","webpack:///./src/ui/React/LogBoxManager.tsx","webpack:///./src/Hacknet/HacknetNode.ts","webpack:///./src/Hacknet/HashUpgrades.ts","webpack:///./src/utils/helpers/arrayToString.ts","webpack:///./src/StockMarket/StockMarketCosts.ts","webpack:///./src/Locations/ui/ApplyToJobButton.tsx","webpack:///./src/Exploits/Exploit.ts","webpack:///./src/Netscript/WorkerScriptStartStopEventEmitter.ts","webpack:///./src/DarkWeb/DarkWebItems.ts","webpack:///./src/Script/RamCalculationErrorCodes.ts","webpack:///./src/Gang/data/Constants.ts","webpack:///./src/utils/IPAddress.ts","webpack:///./src/utils/helpers/compareArrays.ts","webpack:///./src/ui/React/Theme.tsx","webpack:///./src/Bladeburner/Action.tsx","webpack:///./src/SaveObject.tsx","webpack:///./src/PersonObjects/Sleeve/Sleeve.ts","webpack:///./src/Terminal/ITerminal.ts","webpack:///./src/Terminal/TerminalEvents.ts","webpack:///./src/Netscript/WorkerScript.ts","webpack:///./src/DarkWeb/DarkWebItem.ts","webpack:///./src/StockMarket/OrderProcessing.tsx","webpack:///./src/Corporation/Corporation.tsx","webpack:///./src/ui/uiHelpers/createElement.ts","webpack:///./src/Bladeburner/Operation.ts","webpack:///./src/Prestige.ts","webpack:///./src/Augmentation/PlayerOwnedAugmentation.ts","webpack:///./src/Casino/RNG.ts","webpack:///./src/Company/CompanyPosition.ts","webpack:///./src/SourceFile/SourceFiles.tsx","webpack:///./src/Bladeburner/ui/StartButton.tsx","webpack:///./src/Script/RunningScript.ts","webpack:///./src/Script/Script.ts","webpack:///./src/Corporation/ResearchMap.ts","webpack:///./src/ExportBonus.tsx","webpack:///./src/ui/InteractiveTutorial/ITutorialEvents.ts","webpack:///./src/CodingContractGenerator.ts","webpack:///./src/Corporation/OfficeSpace.ts","webpack:///./src/Corporation/IndustryUpgrades.ts","webpack:///./src/Hacknet/HashManager.ts","webpack:///./src/ui/React/Favor.tsx","webpack:///./src/utils/MoneySourceTracker.ts","webpack:///./src/Faction/ui/Option.tsx","webpack:///./src/utils/helpers/getTimestamp.ts","webpack:///./src/utils/helpers/roundToTwo.ts","webpack:///./src/ui/React/AlertManager.tsx","webpack:///./src/PersonObjects/formulas/intelligence.ts","webpack:///./src/Hospital/Hospital.ts","webpack:///./src/db.tsx","webpack:///./src/Corporation/Product.ts","webpack:///./src/Bladeburner/City.ts","webpack:///./src/Locations/City.ts","webpack:///./src/StockMarket/ui/StockTickersConfig.tsx","webpack:///./src/PersonObjects/Player/PlayerObjectGangMethods.ts","webpack:///./src/Corporation/data/CorporationUnlockUpgrades.ts","webpack:///./src/Corporation/data/CorporationUpgrades.ts","webpack:///./src/ui/uiHelpers/getElementById.ts","webpack:///./src/ui/React/WorldMap.tsx","webpack:///./src/Bladeburner/ui/SuccessChance.tsx","webpack:///./src/ui/uiHelpers/removeElementById.ts","webpack:///./src/ui/React/ReputationRate.tsx","webpack:///./src/Crime/CrimeHelpers.ts","webpack:///./src/PersonObjects/Sleeve/SleeveCovenantPurchases.tsx","webpack:///./src/PersonObjects/Player/PlayerObjectServerMethods.ts","webpack:///./src/DarkWeb/DarkWeb.tsx","webpack:///./src/Company/GetJobRequirementText.ts","webpack:///./src/NetscriptFunctions.ts","webpack:///./src/Gang/Gang.ts","webpack:///./src/StockMarket/PlayerInfluencing.ts","webpack:///./src/Netscript/Pid.ts","webpack:///./src/ui/React/CinematicText.tsx","webpack:///./src/utils/helpers/getRandomByte.ts","webpack:///./src/Locations/createCityMap.ts","webpack:///./src/Casino/CardDeck/Hand.ts","webpack:///./src/Hacking/netscriptCanHack.ts","webpack:///./src/StockMarket/ui/StockTickerTxButton.tsx","webpack:///./src/Server/BaseServer.ts","webpack:///./src/ui/React/CodingContractModal.tsx","webpack:///./src/Script/RamCalculations.ts","webpack:///./src/Server/formulas/grow.ts","webpack:///./src/utils/helpers/isValidIPAddress.ts","webpack:///./src/BitNode/ui/BitFlumeModal.tsx","webpack:///./src/Literature/LiteratureHelpers.ts","webpack:///./src/Faction/FactionInfo.tsx","webpack:///./src/ui/React/Snackbar.tsx","webpack:///./src/Programs/ProgramHelpers.ts","webpack:///./src/ui/React/AugmentationAccordion.tsx","webpack:///./src/SourceFile/PlayerOwnedSourceFile.ts","webpack:///./src/Bladeburner/data/Icons.tsx","webpack:///./src/Bladeburner/ui/ActionLevel.tsx","webpack:///./src/Bladeburner/ui/Autolevel.tsx","webpack:///./src/Bladeburner/ui/TeamSizeButton.tsx","webpack:///./src/Gang/GangMemberTask.ts","webpack:///./src/ui/React/StaticModal.tsx","webpack:///./src/Infiltration/ui/BlinkingCursor.tsx","webpack:///./src/PersonObjects/Resleeving/Resleeving.ts","webpack:///./src/PersonObjects/Sleeve/SleeveHelpers.ts","webpack:///./src/ui/React/HashRate.tsx","webpack:///./src/Locations/ui/TravelAgencyRoot.tsx","webpack:///./src/ThirdParty/JSInterpreter.js","webpack:///./src/Script/RunningScriptHelpers.ts","webpack:///./src/ui/React/TablePaginationActionsAll.tsx","webpack:///./src/Faction/ui/InvitationModal.tsx","webpack:///./src/Faction/formulas/favor.ts","webpack:///./src/PersonObjects/Player/PlayerObjectBladeburnerMethods.ts","webpack:///./src/Bladeburner/Contract.ts","webpack:///./src/Bladeburner/data/Help.ts","webpack:///./src/Corporation/ResearchTree.ts","webpack:///./src/StockMarket/StockMarketConstants.ts","webpack:///./src/PersonObjects/Player/PlayerObjectCorporationMethods.ts","webpack:///./src/Company/GetNextCompanyPosition.ts","webpack:///./src/engine.tsx","webpack:///./src/ui/LoadingScreen.tsx","webpack:///./src/utils/helpers/isValidNumber.ts","webpack:///./src/Bladeburner/data/Growths.ts","webpack:///./src/StockMarket/Order.ts","webpack:///./src/Locations/Location.ts","webpack:///./src/ui/React/ServerDropdown.tsx","webpack:///./src/Locations/ui/GenericLocation.tsx","webpack:///./src/Casino/CardDeck/ReactCard.tsx","webpack:///./src/ScriptEditor/CursorPositions.ts","webpack:///./src/ScriptEditor/NetscriptDefinitions.ts","webpack:///./src/Milestones/Milestones.ts","webpack:///./src/Faction/formulas/donation.ts","webpack:///./src/StockMarket/data/TickerHeaderFormatData.ts","webpack:///./src/Terminal/Parser.ts","webpack:///./src/Terminal/HelpText.ts","webpack:///./src/Terminal/Terminal.ts","webpack:///./src/data/codingcontracttypes.ts","webpack:///./src/utils/helpers/createRandomString.ts","webpack:///./src/Programs/Program.ts","webpack:///./src/Programs/data/ProgramsMetadata.ts","webpack:///./src/Server/data/servers.ts","webpack:///./src/Corporation/CorporationState.ts","webpack:///./src/Literature/Literatures.ts","webpack:///./src/PersonObjects/Player/PlayerObject.ts","webpack:///./src/PersonObjects/Player/PlayerObjectAugmentationMethods.ts","webpack:///./src/utils/helpers/clearObject.ts","webpack:///./src/Company/data/CompaniesMetadata.ts","webpack:///./src/Corporation/Research.ts","webpack:///./src/Corporation/data/ResearchMetadata.ts","webpack:///./src/ui/uiHelpers/clearEventListeners.ts","webpack:///./src/StockMarket/data/InitStockMetadata.ts","webpack:///./src/Locations/data/LocationsMetadata.ts","webpack:///./src/ui/InteractiveTutorial/InteractiveTutorialRoot.tsx","webpack:///./src/ui/React/Overview.tsx","webpack:///./src/Sidebar/ui/SidebarRoot.tsx","webpack:///./src/Augmentation/ui/AugmentationsRoot.tsx","webpack:///./src/Augmentation/ui/InstalledAugmentations.tsx","webpack:///./src/Augmentation/ui/PlayerMultipliers.tsx","webpack:///./src/Augmentation/ui/PurchasedAugmentations.tsx","webpack:///./src/Augmentation/ui/SourceFiles.tsx","webpack:///./src/Augmentation/ui/SourceFileMinus1.tsx","webpack:///./src/Augmentation/ui/OwnedSourceFiles.tsx","webpack:///./src/ui/React/SourceFileAccordion.tsx","webpack:///./src/DevMenu.tsx","webpack:///./src/DevMenu/ui/General.tsx","webpack:///./src/DevMenu/ui/Stats.tsx","webpack:///./src/DevMenu/ui/Factions.tsx","webpack:///./src/DevMenu/ui/Augmentations.tsx","webpack:///./src/DevMenu/ui/SourceFiles.tsx","webpack:///./src/DevMenu/ui/Programs.tsx","webpack:///./src/DevMenu/ui/Servers.tsx","webpack:///./src/DevMenu/ui/Companies.tsx","webpack:///./src/DevMenu/ui/Bladeburner.tsx","webpack:///./src/DevMenu/ui/Gang.tsx","webpack:///./src/DevMenu/ui/Corporation.tsx","webpack:///./src/DevMenu/ui/CodingContracts.tsx","webpack:///./src/DevMenu/ui/StockMarket.tsx","webpack:///./src/DevMenu/ui/Sleeves.tsx","webpack:///./src/DevMenu/ui/TimeSkip.tsx","webpack:///./src/Bladeburner/ui/BladeburnerRoot.tsx","webpack:///./src/Bladeburner/ui/Stats.tsx","webpack:///./src/Bladeburner/ui/TravelModal.tsx","webpack:///./src/Bladeburner/ui/Console.tsx","webpack:///./src/Bladeburner/ui/AllPages.tsx","webpack:///./src/Bladeburner/ui/GeneralActionPage.tsx","webpack:///./src/Bladeburner/ui/GeneralActionList.tsx","webpack:///./src/Bladeburner/ui/GeneralActionElem.tsx","webpack:///./src/Bladeburner/data/GeneralActions.tsx","webpack:///./src/Bladeburner/ui/ContractPage.tsx","webpack:///./src/Bladeburner/ui/ContractList.tsx","webpack:///./src/Bladeburner/ui/ContractElem.tsx","webpack:///./src/Bladeburner/data/Contracts.tsx","webpack:///./src/Bladeburner/ui/StealthIcon.tsx","webpack:///./src/Bladeburner/ui/KillIcon.tsx","webpack:///./src/Bladeburner/ui/OperationPage.tsx","webpack:///./src/Bladeburner/ui/OperationList.tsx","webpack:///./src/Bladeburner/ui/OperationElem.tsx","webpack:///./src/Bladeburner/ui/TeamSizeModal.tsx","webpack:///./src/Bladeburner/data/Operations.tsx","webpack:///./src/Bladeburner/ui/BlackOpPage.tsx","webpack:///./src/Bladeburner/ui/BlackOpList.tsx","webpack:///./src/Bladeburner/ui/BlackOpElem.tsx","webpack:///./src/Bladeburner/data/BlackOperations.tsx","webpack:///./src/Bladeburner/ui/SkillPage.tsx","webpack:///./src/Bladeburner/ui/SkillList.tsx","webpack:///./src/Bladeburner/ui/SkillElem.tsx","webpack:///./src/Gang/ui/GangRoot.tsx","webpack:///./src/Gang/ui/ManagementSubpage.tsx","webpack:///./src/Gang/ui/GangStats.tsx","webpack:///./src/Gang/ui/BonusTime.tsx","webpack:///./src/Gang/ui/GangMemberList.tsx","webpack:///./src/Gang/ui/GangMemberUpgradePopup.tsx","webpack:///./src/Gang/GangMemberUpgrade.ts","webpack:///./src/ui/React/Popup.tsx","webpack:///./src/ui/uiHelpers/removeElement.ts","webpack:///./src/Gang/ui/GangMemberAccordion.tsx","webpack:///./src/ui/React/BBAccordion.tsx","webpack:///./src/Gang/ui/GangMemberAccordionContent.tsx","webpack:///./src/Gang/ui/GangMemberStats.tsx","webpack:///./src/Gang/ui/AscensionPopup.tsx","webpack:///./src/Gang/ui/TaskSelector.tsx","webpack:///./src/Gang/ui/TaskDescription.tsx","webpack:///./src/Gang/data/tasks.ts","webpack:///./src/Gang/ui/RecruitButton.tsx","webpack:///./src/Gang/ui/RecruitPopup.tsx","webpack:///./src/Gang/ui/TerritorySubpage.tsx","webpack:///./src/Corporation/ui/CorporationRoot.tsx","webpack:///./src/Corporation/ui/MainPanel.tsx","webpack:///./src/Corporation/ui/CityTabs.tsx","webpack:///./src/Corporation/ui/Industry.tsx","webpack:///./src/Corporation/ui/IndustryOffice.tsx","webpack:///./src/Corporation/ui/UpgradeOfficeSizeModal.tsx","webpack:///./src/Corporation/Industry.ts","webpack:///./src/utils/calculateEffectWithFactors.ts","webpack:///./src/Corporation/Employee.ts","webpack:///./src/Corporation/ProductRatingWeights.ts","webpack:///./src/Corporation/ui/ThrowPartyModal.tsx","webpack:///./src/Corporation/ui/IndustryOverview.tsx","webpack:///./src/Corporation/ui/MakeProductModal.tsx","webpack:///./src/Corporation/ui/ResearchPopup.tsx","webpack:///./src/Corporation/ui/IndustryWarehouse.tsx","webpack:///./src/Corporation/ui/SmartSupplyModal.tsx","webpack:///./src/Corporation/ui/ProductElem.tsx","webpack:///./src/Corporation/ui/DiscontinueProductModal.tsx","webpack:///./src/Corporation/ui/LimitProductProductionModal.tsx","webpack:///./src/Corporation/ui/SellProductModal.tsx","webpack:///./src/Corporation/ui/ProductMarketTaModal.tsx","webpack:///./src/Corporation/ui/MaterialElem.tsx","webpack:///./src/Corporation/ui/ExportModal.tsx","webpack:///./src/Corporation/ui/MaterialMarketTaModal.tsx","webpack:///./src/Corporation/ui/SellMaterialModal.tsx","webpack:///./src/Corporation/ui/PurchaseMaterialModal.tsx","webpack:///./src/Corporation/ui/Helpers.tsx","webpack:///./src/Corporation/ui/IndustryProductEquation.tsx","webpack:///./src/Corporation/ui/ExpandNewCity.tsx","webpack:///./src/Corporation/ui/ExpandIndustryTab.tsx","webpack:///./src/Corporation/ui/Overview.tsx","webpack:///./src/Corporation/ui/LevelableUpgrade.tsx","webpack:///./src/Corporation/ui/UnlockUpgrade.tsx","webpack:///./src/Corporation/ui/BribeFactionModal.tsx","webpack:///./src/Corporation/ui/SellSharesModal.tsx","webpack:///./src/Corporation/ui/BuybackSharesModal.tsx","webpack:///./src/Corporation/ui/IssueDividendsModal.tsx","webpack:///./src/Corporation/ui/IssueNewSharesModal.tsx","webpack:///./src/Corporation/ui/FindInvestorsModal.tsx","webpack:///./src/Corporation/ui/GoPublicModal.tsx","webpack:///./src/Infiltration/ui/InfiltrationRoot.tsx","webpack:///./src/Infiltration/ui/Intro.tsx","webpack:///./src/Infiltration/ui/Game.tsx","webpack:///./src/Infiltration/ui/Countdown.tsx","webpack:///./src/Infiltration/ui/BracketGame.tsx","webpack:///./src/Infiltration/ui/SlashGame.tsx","webpack:///./src/Infiltration/ui/BackwardGame.tsx","webpack:///./src/Infiltration/ui/BribeGame.tsx","webpack:///./src/Infiltration/ui/CheatCodeGame.tsx","webpack:///./src/Infiltration/ui/Cyberpunk2077Game.tsx","webpack:///./src/Infiltration/ui/MinesweeperGame.tsx","webpack:///./src/Infiltration/ui/WireCuttingGame.tsx","webpack:///./src/Infiltration/ui/Victory.tsx","webpack:///./src/PersonObjects/Resleeving/ui/ResleeveRoot.tsx","webpack:///./src/PersonObjects/Resleeving/Resleeve.ts","webpack:///./src/PersonObjects/Resleeving/ui/ResleeveElem.tsx","webpack:///./src/ui/WorkInProgressRoot.tsx","webpack:///./src/ui/React/GameOptionsRoot.tsx","webpack:///./src/Diagnostic/FileDiagnosticModal.tsx","webpack:///./src/ui/React/ConfirmationModal.tsx","webpack:///./src/ui/React/ThemeEditorModal.tsx","webpack:///./src/PersonObjects/Sleeve/ui/SleeveRoot.tsx","webpack:///./src/PersonObjects/Sleeve/ui/SleeveElem.tsx","webpack:///./src/PersonObjects/Sleeve/ui/SleeveAugmentationsModal.tsx","webpack:///./src/PersonObjects/Sleeve/ui/TravelModal.tsx","webpack:///./src/PersonObjects/Sleeve/ui/StatsElement.tsx","webpack:///./src/PersonObjects/Sleeve/ui/MoreStatsModal.tsx","webpack:///./src/PersonObjects/Sleeve/ui/MoreEarningsModal.tsx","webpack:///./src/PersonObjects/Sleeve/ui/TaskSelector.tsx","webpack:///./src/PersonObjects/Sleeve/ui/FAQModal.tsx","webpack:///./src/Hacknet/ui/HacknetRoot.tsx","webpack:///./src/Hacknet/ui/GeneralInfo.tsx","webpack:///./src/Hacknet/ui/HacknetNodeElem.tsx","webpack:///./src/Hacknet/HashUpgrade.ts","webpack:///./src/Hacknet/data/HashUpgradesMetadata.tsx","webpack:///./src/Hacknet/ui/HacknetServerElem.tsx","webpack:///./src/Hacknet/ui/HashUpgradeModal.tsx","webpack:///./src/Hacknet/ui/HacknetUpgradeElem.tsx","webpack:///./src/Hacknet/ui/MultiplierButtons.tsx","webpack:///./src/Hacknet/ui/PlayerInfo.tsx","webpack:///./src/Hacknet/ui/PurchaseButton.tsx","webpack:///./src/Locations/ui/CompanyLocation.tsx","webpack:///./src/Company/data/CompanyPositionsMetadata.ts","webpack:///./src/Company/ui/QuitJobModal.tsx","webpack:///./src/Locations/ui/GymLocation.tsx","webpack:///./src/Locations/ui/HospitalLocation.tsx","webpack:///./src/Locations/ui/SlumsLocation.tsx","webpack:///./src/Locations/ui/SpecialLocation.tsx","webpack:///./src/Corporation/ui/CreateCorporationModal.tsx","webpack:///./src/Locations/ui/TechVendorLocation.tsx","webpack:///./src/Locations/ui/RamButton.tsx","webpack:///./src/utils/helpers/isPowerOfTwo.ts","webpack:///./src/Locations/ui/TorButton.tsx","webpack:///./src/Locations/LocationsHelpers.tsx","webpack:///./src/Locations/ui/CoresButton.tsx","webpack:///./src/Locations/ui/PurchaseServerModal.tsx","webpack:///./src/Locations/ui/TravelConfirmationModal.tsx","webpack:///./src/Locations/ui/UniversityLocation.tsx","webpack:///./src/Locations/ui/CasinoLocation.tsx","webpack:///./src/Casino/Blackjack.tsx","webpack:///./src/Casino/CardDeck/Deck.ts","webpack:///./src/Casino/CoinFlip.tsx","webpack:///./src/Casino/Roulette.tsx","webpack:///./src/Casino/SlotMachine.tsx","webpack:///./src/ui/React/CorruptableText.tsx","webpack:///./src/Locations/ui/City.tsx","webpack:///./src/Programs/ui/ProgramsRoot.tsx","webpack:///./src/ScriptEditor/ui/Root.tsx","webpack:///./src/ScriptEditor/ui/OptionsModal.tsx","webpack:///./src/Gang/GangMember.ts","webpack:///./src/Netscript/Environment.ts","webpack:///./src/NetscriptJSEvaluator.ts","webpack:///./src/Script/ScriptUrl.ts","webpack:///./src/NetscriptPort.ts","webpack:///./src/utils/helpers/is2DArray.ts","webpack:///./src/ui/uiHelpers/createPopup.ts","webpack:///./src/Milestones/ui/MilestonesRoot.tsx","webpack:///./src/Terminal/ui/TerminalRoot.tsx","webpack:///./src/Terminal/ui/TerminalInput.tsx","webpack:///./src/Terminal/determineAllPossibilitiesForTabCompletion.ts","webpack:///./src/Terminal/DirectoryServerHelpers.ts","webpack:///./src/Terminal/tabCompletion.ts","webpack:///./src/Tutorial/ui/TutorialRoot.tsx","webpack:///./src/ui/ActiveScripts/ActiveScriptsRoot.tsx","webpack:///./src/ui/ActiveScripts/ScriptProduction.tsx","webpack:///./src/ui/ActiveScripts/ServerAccordions.tsx","webpack:///./src/ui/ActiveScripts/ServerAccordion.tsx","webpack:///./src/ui/ActiveScripts/ServerAccordionContent.tsx","webpack:///./src/ui/ActiveScripts/WorkerScriptAccordion.tsx","webpack:///./src/Faction/ui/FactionsRoot.tsx","webpack:///./src/HackingMission/ui/HackingMissionRoot.tsx","webpack:///./src/Faction/ui/FactionRoot.tsx","webpack:///./src/Faction/ui/AugmentationsPage.tsx","webpack:///./src/Faction/ui/PurchaseableAugmentation.tsx","webpack:///./src/Faction/ui/PurchaseAugmentationModal.tsx","webpack:///./src/ui/React/Augmentation.tsx","webpack:///./src/Faction/ui/DonateOption.tsx","webpack:///./src/Faction/ui/Info.tsx","webpack:///./src/Faction/ui/CreateGangModal.tsx","webpack:///./src/PersonObjects/Sleeve/ui/CovenantPurchasesRoot.tsx","webpack:///./src/PersonObjects/Sleeve/ui/CovenantSleeveMemoryUpgrade.tsx","webpack:///./src/ui/CharacterStats.tsx","webpack:///./src/StockMarket/ui/StockMarketRoot.tsx","webpack:///./src/StockMarket/ui/InfoAndPurchases.tsx","webpack:///./src/StockMarket/ui/StockTickers.tsx","webpack:///./src/StockMarket/ui/StockTicker.tsx","webpack:///./src/StockMarket/ui/StockTickerHeaderText.tsx","webpack:///./src/StockMarket/ui/StockTickerOrderList.tsx","webpack:///./src/StockMarket/ui/StockTickerOrder.tsx","webpack:///./src/StockMarket/ui/StockTickerPositionText.tsx","webpack:///./src/StockMarket/ui/PlaceOrderModal.tsx","webpack:///./src/BitNode/ui/BitverseRoot.tsx","webpack:///./src/BitNode/ui/PortalModal.tsx","webpack:///./src/ui/React/CinematicLine.tsx","webpack:///./src/ui/React/CharacterOverview.tsx","webpack:///./src/Bladeburner/ui/BladeburnerCinematic.tsx","webpack:///./src/Exploits/Unclickable.tsx","webpack:///./src/SourceFile/applySourceFile.ts","webpack:///./src/Exploits/applyExploits.ts","webpack:///./src/Terminal/commands/alias.ts","webpack:///./src/Terminal/commands/analyze.ts","webpack:///./src/Terminal/commands/backdoor.ts","webpack:///./src/Terminal/commands/buy.ts","webpack:///./src/Terminal/commands/cat.ts","webpack:///./src/Terminal/commands/cd.ts","webpack:///./src/Terminal/commands/check.ts","webpack:///./src/Terminal/commands/connect.ts","webpack:///./src/Terminal/commands/download.ts","webpack:///./src/Terminal/commands/expr.ts","webpack:///./src/Terminal/commands/free.ts","webpack:///./src/Terminal/commands/hack.ts","webpack:///./src/Terminal/commands/help.ts","webpack:///./src/Terminal/commands/home.ts","webpack:///./src/Terminal/commands/hostname.ts","webpack:///./src/Terminal/commands/ifconfig.ts","webpack:///./src/Terminal/commands/kill.ts","webpack:///./src/Terminal/commands/killall.ts","webpack:///./src/Terminal/commands/ls.tsx","webpack:///./src/Terminal/commands/lscpu.ts","webpack:///./src/Terminal/commands/mem.ts","webpack:///./src/Terminal/commands/mv.ts","webpack:///./src/Terminal/commands/nano.ts","webpack:///./src/Terminal/commands/ps.ts","webpack:///./src/Terminal/commands/rm.ts","webpack:///./src/Terminal/commands/run.ts","webpack:///./src/Terminal/commands/runScript.ts","webpack:///./src/Terminal/commands/runProgram.ts","webpack:///./src/Terminal/commands/scan.ts","webpack:///./src/Terminal/commands/scananalyze.ts","webpack:///./src/Terminal/commands/scp.ts","webpack:///./src/Terminal/commands/sudov.ts","webpack:///./src/Terminal/commands/tail.ts","webpack:///./src/Terminal/commands/top.ts","webpack:///./src/Terminal/commands/unalias.ts","webpack:///./src/Terminal/commands/wget.ts","webpack:///./src/Exploits/tampering.ts","webpack:///./src/index.tsx","webpack:///./src/engineStyle.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Player","PlayerObject","loadPlayer","saveString","JSON","parse","Reviver","money","Decimal","corporation","Corporation","funds","revenue","expenses","divisions","ind","lastCycleRevenue","lastCycleExpenses","thisCycleRevenue","thisCycleExpenses","exploits","sanitizeExploits","extraFormats","extraNotations","numeralWrapper","constructor","this","defaultLocale","updateLocale","numeral","locale","console","warn","format","Math","abs","answer","formatBigNumber","formatReallyBigNumber","decimalPlaces","Infinity","repeat","str","formatHp","formatMoney","formatSkill","formatExp","formatHashes","formatReputation","formatFavor","formatRAM","formatPercentage","formatter","formatServerSecurity","formatRespect","formatWanted","formatMultiplier","formatSleeveShock","formatSleeveSynchro","formatSleeveMemory","formatPopulation","formatStamina","formatShares","formatInfiltrationSecurity","formatThreads","parseMoney","numeralValue","parsed","parseFloat","isNaN","NaN","max","CONSTANTS","Version","_idleSpeed","MaxSkillLevel","MilliPerCycle","CorpFactionRepRequirement","BaseCostFor1GBOfRamHome","BaseCostFor1GBOfRamServer","TravelCost","BaseFavorToDonate","DonateMoneyToRepDivisor","FactionReputationToFavorBase","FactionReputationToFavorMult","CompanyReputationToFavorBase","CompanyReputationToFavorMult","NeuroFluxGovernorLevelMult","NumNetscriptPorts","HomeComputerMaxRam","ServerBaseGrowthRate","ServerMaxGrowthRate","ServerFortifyAmount","ServerWeakenAmount","PurchasedServerLimit","PurchasedServerMaxRam","MultipleAugMultiplier","TorRouterCost","InfiltrationBribeBaseAmount","InfiltrationMoneyValue","InfiltrationRepValue","InfiltrationExpPow","WSEAccountCost","TIXAPICost","MarketData4SCost","MarketDataTixApi4SCost","StockMarketCommission","HospitalCostPerHp","IntelligenceCrimeWeight","IntelligenceInfiltrationWeight","IntelligenceCrimeBaseExpGain","IntelligenceProgramBaseExpGain","IntelligenceTerminalHackBaseExpGain","IntelligenceSingFnBaseExpGain","IntelligenceClassBaseExpGain","IntelligenceHackingMissionBaseExpGain","HackingMissionRepToDiffConversion","HackingMissionRepToRewardConversion","HackingMissionSpamTimeIncrease","HackingMissionTransferAttackIncrease","HackingMissionMiscDefenseIncrease","HackingMissionDifficultyToHacking","HackingMissionHowToPlay","MillisecondsPer20Hours","GameCyclesPer20Hours","MillisecondsPer10Hours","GameCyclesPer10Hours","MillisecondsPer8Hours","GameCyclesPer8Hours","MillisecondsPer4Hours","GameCyclesPer4Hours","MillisecondsPer2Hours","GameCyclesPer2Hours","MillisecondsPerHour","GameCyclesPerHour","MillisecondsPerHalfHour","GameCyclesPerHalfHour","MillisecondsPerQuarterHour","GameCyclesPerQuarterHour","MillisecondsPerFiveMinutes","GameCyclesPerFiveMinutes","BaseFocusBonus","FactionWorkHacking","FactionWorkField","FactionWorkSecurity","WorkTypeCompany","WorkTypeCompanyPartTime","WorkTypeFaction","WorkTypeCreateProgram","WorkTypeStudyClass","WorkTypeCrime","ClassStudyComputerScience","ClassDataStructures","ClassNetworks","ClassAlgorithms","ClassManagement","ClassLeadership","ClassGymStrength","ClassGymDefense","ClassGymDexterity","ClassGymAgility","ClassDataStructuresBaseCost","ClassNetworksBaseCost","ClassAlgorithmsBaseCost","ClassManagementBaseCost","ClassLeadershipBaseCost","ClassGymBaseCost","ClassStudyComputerScienceBaseExp","ClassDataStructuresBaseExp","ClassNetworksBaseExp","ClassAlgorithmsBaseExp","ClassManagementBaseExp","ClassLeadershipBaseExp","CrimeShoplift","CrimeRobStore","CrimeMug","CrimeLarceny","CrimeDrugs","CrimeBondForgery","CrimeTraffickArms","CrimeHomicide","CrimeGrandTheftAuto","CrimeKidnap","CrimeAssassination","CrimeHeist","CodingContractBaseFactionRepGain","CodingContractBaseCompanyRepGain","CodingContractBaseMoneyGain","TotalNumBitNodes","LatestUpdate","AugmentationNames","Targeting1","Targeting2","Targeting3","SyntheticHeart","SynfibrilMuscle","CombatRib1","CombatRib2","CombatRib3","NanofiberWeave","SubdermalArmor","WiredReflexes","GrapheneBoneLacings","BionicSpine","GrapheneBionicSpine","BionicLegs","GrapheneBionicLegs","SpeechProcessor","TITN41Injection","EnhancedSocialInteractionImplant","BitWire","ArtificialBioNeuralNetwork","ArtificialSynapticPotentiation","EnhancedMyelinSheathing","SynapticEnhancement","NeuralRetentionEnhancement","DataJack","ENM","ENMCore","ENMCoreV2","ENMCoreV3","ENMAnalyzeEngine","ENMDMA","Neuralstimulator","NeuralAccelerator","CranialSignalProcessorsG1","CranialSignalProcessorsG2","CranialSignalProcessorsG3","CranialSignalProcessorsG4","CranialSignalProcessorsG5","NeuronalDensification","NeuroreceptorManager","NuoptimalInjectorImplant","SpeechEnhancement","FocusWire","PCDNI","PCDNIOptimizer","PCDNINeuralNetwork","PCMatrix","ADRPheromone1","ADRPheromone2","ShadowsSimulacrum","HacknetNodeCPUUpload","HacknetNodeCacheUpload","HacknetNodeNICUpload","HacknetNodeKernelDNI","HacknetNodeCoreDNI","NeuroFluxGovernor","Neurotrainer1","Neurotrainer2","Neurotrainer3","Hypersight","LuminCloaking1","LuminCloaking2","HemoRecirculator","SmartSonar","PowerRecirculator","QLink","TheRedPill","SPTN97","HiveMind","CordiARCReactor","SmartJaw","Neotra","Xanipher","nextSENS","OmniTekInfoLoad","PhotosyntheticCells","Neurolink","TheBlackHand","UnstableCircadianModulator","CRTX42AA","Neuregen","CashRoot","NutriGen","INFRARet","DermaForce","GrapheneBrachiBlades","GrapheneBionicArms","BrachiBlades","BionicArms","SNA","HydroflameLeftArm","EsperEyewear","EMS4Recombination","OrionShoulder","HyperionV1","HyperionV2","GolemSerum","VangelisVirus","VangelisVirus3","INTERLINKED","BladeRunner","BladeArmor","BladeArmorPowerCells","BladeArmorEnergyShielding","BladeArmorUnibeam","BladeArmorOmnibeam","BladeArmorIPU","BladesSimulacrum","BitNodeMultipliers","HackingLevelMultiplier","StrengthLevelMultiplier","DefenseLevelMultiplier","DexterityLevelMultiplier","AgilityLevelMultiplier","CharismaLevelMultiplier","ServerGrowthRate","ServerMaxMoney","ServerStartingMoney","ServerStartingSecurity","ServerWeakenRate","HomeComputerRamCost","PurchasedServerCost","CompanyWorkMoney","CrimeMoney","HacknetNodeMoney","ManualHackMoney","ScriptHackMoney","ScriptHackMoneyGain","CodingContractMoney","ClassGymExpGain","CompanyWorkExpGain","CrimeExpGain","FactionWorkExpGain","HackExpGain","FactionPassiveRepGain","FactionWorkRepGain","RepToDonateToFaction","AugmentationMoneyCost","AugmentationRepCost","InfiltrationMoney","InfiltrationRep","FourSigmaMarketDataCost","FourSigmaMarketDataApiCost","CorporationValuation","BladeburnerRank","BladeburnerSkillCost","DaedalusAugsRequirement","GangKarmaRequirement","LocationName","dialogBoxCreate","txt","AlertEvents","emit","dangerouslySetInnerHTML","__html","RamCostConstants","ScriptBaseRamCost","ScriptDomRamCost","ScriptHackRamCost","ScriptHackAnalyzeRamCost","ScriptGrowRamCost","ScriptGrowthAnalyzeRamCost","ScriptWeakenRamCost","ScriptScanRamCost","ScriptPortProgramRamCost","ScriptRunRamCost","ScriptExecRamCost","ScriptSpawnRamCost","ScriptScpRamCost","ScriptKillRamCost","ScriptHasRootAccessRamCost","ScriptGetHostnameRamCost","ScriptGetHackingLevelRamCost","ScriptGetMultipliersRamCost","ScriptGetServerRamCost","ScriptGetServerMaxRam","ScriptGetServerUsedRam","ScriptFileExistsRamCost","ScriptIsRunningRamCost","ScriptHacknetNodesRamCost","ScriptHNUpgLevelRamCost","ScriptHNUpgRamRamCost","ScriptHNUpgCoreRamCost","ScriptGetStockRamCost","ScriptBuySellStockRamCost","ScriptGetPurchaseServerRamCost","ScriptPurchaseServerRamCost","ScriptGetPurchasedServerLimit","ScriptGetPurchasedServerMaxRam","ScriptRoundRamCost","ScriptReadWriteRamCost","ScriptArbScriptRamCost","ScriptGetScriptRamCost","ScriptGetRunningScriptRamCost","ScriptGetHackTimeRamCost","ScriptGetFavorToDonate","ScriptCodingContractBaseRamCost","ScriptSleeveBaseRamCost","ScriptSingularityFn1RamCost","ScriptSingularityFn2RamCost","ScriptSingularityFn3RamCost","ScriptGangApiBaseRamCost","ScriptBladeburnerApiBaseRamCost","RamCosts","hacknet","numNodes","purchaseNode","getPurchaseNodeCost","getNodeStats","upgradeLevel","upgradeRam","upgradeCore","upgradeCache","getLevelUpgradeCost","getRamUpgradeCost","getCoreUpgradeCost","getCacheUpgradeCost","numHashes","hashCost","spendHashes","sprintf","vsprintf","scan","hack","hackAnalyzeThreads","hackAnalyzePercent","hackChance","sleep","grow","growthAnalyze","weaken","print","tprint","clearLog","disableLog","enableLog","isLogEnabled","getScriptLogs","nuke","brutessh","ftpcrack","relaysmtp","httpworm","sqlinject","run","exec","spawn","kill","killall","exit","scp","ls","ps","hasRootAccess","getIp","getHostname","getHackingLevel","getHackingMultipliers","getHacknetMultipliers","getBitNodeMultipliers","getServer","getServerMoneyAvailable","getServerSecurityLevel","getServerBaseSecurityLevel","getServerMinSecurityLevel","getServerRequiredHackingLevel","getServerMaxMoney","getServerGrowth","getServerNumPortsRequired","getServerRam","getServerMaxRam","getServerUsedRam","serverExists","fileExists","isRunning","getStockSymbols","getStockPrice","getStockAskPrice","getStockBidPrice","getStockPosition","getStockMaxShares","getStockPurchaseCost","getStockSaleGain","buyStock","sellStock","shortStock","sellShort","placeOrder","cancelOrder","getOrders","getStockVolatility","getStockForecast","purchase4SMarketData","purchase4SMarketDataTixApi","getPurchasedServerLimit","getPurchasedServerMaxRam","getPurchasedServerCost","purchaseServer","deleteServer","getPurchasedServers","write","tryWrite","read","peek","clear","getPortHandle","rm","scriptRunning","scriptKill","getScriptName","getScriptRam","getHackTime","getGrowTime","getWeakenTime","getScriptIncome","getScriptExpGain","getRunningScript","nFormat","getTimeSinceLastAug","prompt","wget","getFavorToDonate","universityCourse","gymWorkout","travelToCity","purchaseTor","purchaseProgram","getCurrentServer","connect","manualHack","installBackdoor","getStats","getCharacterInformation","getPlayer","hospitalize","isBusy","stopAction","upgradeHomeRam","getUpgradeHomeRamCost","workForCompany","applyToCompany","getCompanyRep","getCompanyFavor","getCompanyFavorGain","checkFactionInvitations","joinFaction","workForFaction","getFactionRep","getFactionFavor","getFactionFavorGain","donateToFaction","createProgram","commitCrime","getCrimeChance","getCrimeStats","getOwnedAugmentations","getOwnedSourceFiles","getAugmentationsFromFaction","getAugmentationCost","getAugmentationPrereq","getAugmentationPrice","getAugmentationRepReq","getAugmentationStats","purchaseAugmentation","softReset","installAugmentations","gang","createGang","inGang","getMemberNames","getGangInformation","getOtherGangInformation","getMemberInformation","canRecruitMember","recruitMember","getTaskNames","getTaskStats","setMemberTask","getEquipmentNames","getEquipmentCost","getEquipmentType","getEquipmentStats","purchaseEquipment","ascendMember","setTerritoryWarfare","getChanceToWinClash","getBonusTime","bladeburner","getContractNames","getOperationNames","getBlackOpNames","getBlackOpRank","getGeneralActionNames","getSkillNames","startAction","stopBladeburnerAction","getCurrentAction","getActionTime","getActionEstimatedSuccessChance","getActionRepGain","getActionCountRemaining","getActionMaxLevel","getActionCurrentLevel","getActionAutolevel","setActionAutolevel","setActionLevel","getRank","getSkillPoints","getSkillLevel","getSkillUpgradeCost","upgradeSkill","getTeamSize","setTeamSize","getCityEstimatedPopulation","getCityEstimatedCommunities","getCityChaos","getCity","switchCity","getStamina","joinBladeburnerFaction","joinBladeburnerDivision","codingcontract","attempt","getContractType","getData","getDescription","getNumTriesRemaining","sleeve","getNumSleeves","setToShockRecovery","setToSynchronize","setToCommitCrime","setToUniversityCourse","travel","setToCompanyWork","setToFactionWork","setToGymWorkout","getSleeveStats","getTask","getInformation","getSleeveAugmentations","getSleevePurchasableAugs","purchaseSleeveAug","heart","break","getRamCost","args","curr","currType","defaultSettings","ActiveScriptsServerPageSize","ActiveScriptsScriptPageSize","AutosaveInterval","CodeInstructionRunTime","DisableASCIIArt","DisableHotkeys","DisableTextEffects","EnableBashHotkeys","EnableTimestamps","Locale","MaxLogCapacity","MaxPortCapacity","MaxTerminalCapacity","SuppressBuyAugmentationConfirmation","SuppressFactionInvites","SuppressHospitalizationPopup","SuppressMessages","SuppressTravelConfirmation","SuppressBladeburnerPopup","theme","primarylight","primary","primarydark","errorlight","error","errordark","secondarylight","secondary","secondarydark","warninglight","warning","warningdark","infolight","info","infodark","welllight","well","white","black","hp","combat","cha","int","rep","disabled","Settings","OwnedAugmentationsOrder","OwnedAugmentationsOrderSetting","AcquirementTime","PurchaseAugmentationsOrder","PurchaseAugmentationsOrderSetting","Default","MonacoTheme","MonacoInsertSpaces","init","assign","load","useStyles","makeStyles","createStyles","unbuyable","color","palette","action","colors","Money","props","classes","undefined","player","Error","canAfford","className","convertTimeMsToTimeElapsedString","time","showMilli","floor","totalSeconds","days","secondPerHours","secTruncDays","hours","secondPerMinute","secTruncHours","minutes","secTruncMinutes","milliTruncSec","res","longestCommonStart","strings","containsAllStrings","A","concat","sort","a1","a2","L","a","charAt","b","toUpperCase","substring","arr","every","isString","formatNumber","num","numFractionDigits","toLocaleString","maximumFractionDigits","minimumFractionDigits","generateRandomString","chars","random","Augmentations","log","ctor","constructors","fromJSON","Generic_toJSON","ctorName","obj","keys","index","Generic_fromJSON","CityName","getRandomInt","min","lower","upper","Factions","loadFactions","faction","getInfo","err","factionExists","initFactions","FactionInfos","resetFaction","Faction","newFactionObject","factionName","favor","AddToFactions","SoftwareCompanyPositions","ITCompanyPositions","SecurityEngineerCompanyPositions","NetworkEngineerCompanyPositions","BusinessCompanyPositions","SecurityCompanyPositions","AgentCompanyPositions","MiscCompanyPositions","SoftwareConsultantCompanyPositions","BusinessConsultantCompanyPositions","PartTimeCompanyPositions","Context","React","createContext","Router","use","useContext","Page","Augmentation","params","moneyCost","repCost","prereqs","baseRepRequirement","baseCost","startingCost","isSpecial","level","hacking_mult","mults","strength_mult","defense_mult","dexterity_mult","agility_mult","charisma_mult","hacking_exp_mult","strength_exp_mult","defense_exp_mult","dexterity_exp_mult","agility_exp_mult","charisma_exp_mult","hacking_chance_mult","hacking_speed_mult","hacking_money_mult","hacking_grow_mult","company_rep_mult","faction_rep_mult","crime_money_mult","crime_success_mult","work_money_mult","hacknet_node_money_mult","hacknet_node_purchase_cost_mult","hacknet_node_ram_cost_mult","hacknet_node_core_cost_mult","hacknet_node_level_cost_mult","bladeburner_max_stamina_mult","bladeburner_stamina_gain_mult","bladeburner_analysis_mult","bladeburner_success_chance_mult","stats","programs","startingMoney","f","x","decimals","desc","join","generateStatsDescription","addToFactions","factionList","augmentations","addToAllFactions","fac","facObj","toJSON","AllServers","ipExists","ip","createUniqueRandomIp","createRandomIp","AddToAllServers","server","serverIp","hostname","initForeignServers","homeComputer","networkLayers","propertiesToPatternMatch","toNumber","metadata","serverMetadata","serverParams","numOpenPortsRequired","organizationName","maxRamExponent","maxRam","pow","prop","Server","filename","literature","messages","specialName","SpecialServerIps","addIp","networkLayer","linkNetworkLayers","network1","selectServer","server1","server2","serversOnNetwork","getRandomArrayItem","prestigeAllServers","member","loadAllServers","HacknetNodeConstants","MoneyGainPerLevel","BaseCost","LevelBaseCost","RamBaseCost","CoreBaseCost","PurchaseNextMult","UpgradeLevelMult","UpgradeRamMult","UpgradeCoreMult","MaxLevel","MaxRam","MaxCores","PurchaseMultipliers","x1","x5","x10","MAX","HacknetServerConstants","HashesPerLevel","CacheBaseCost","PurchaseMult","UpgradeCacheMult","MaxServers","MaxCache","ActionTypes","Idle","Contract","Operation","BlackOp","BlackOperation","Training","Recruitment","FieldAnalysis","Diplomacy","iTutorialSteps","ITutorial","currStep","Start","stepIsDone","GoToCharacterPage","CharacterPage","CharacterGoToTerminalPage","TerminalIntro","TerminalHelp","TerminalLs","TerminalScan","TerminalScanAnalyze1","TerminalScanAnalyze2","TerminalConnect","TerminalAnalyze","TerminalNuke","TerminalManualHack","TerminalHackingMechanics","TerminalGoHome","TerminalCreateScript","TerminalTypeScript","TerminalFree","TerminalRunScript","TerminalGoToActiveScriptsPage","ActiveScriptsPage","ActiveScriptsToTerminal","TerminalTailScript","GoToHacknetNodesPage","HacknetNodesIntroduction","HacknetNodesGoToWorldPage","WorldDescription","TutorialPageInfo","End","iTutorialStart","iTutorialNextStep","iTutorialEnd","ITutorialEvents","iTutorialPrevStep","getHomeComputer","LiteratureNames","HackersStartingHandbook","AllCorporationStates","CorporationConstants","INITIALSHARES","SHARESPERPRICEUPDATE","IssueNewSharesCooldown","SellSharesCooldown","CyclesPerMarketCycle","CyclesPerIndustryStateCycle","SecsPerMarketCycle","Cities","WarehouseInitialCost","WarehouseInitialSize","WarehouseUpgradeBaseCost","OfficeInitialCost","OfficeInitialSize","OfficeUpgradeBaseCost","BribeThreshold","BribeToRepRatio","ProductProductionCostRatio","DividendMaxPercentage","EmployeeSalaryMultiplier","CyclesPerEmployeeRaise","EmployeeRaiseAmount","BaseMaxProducts","AllMaterials","root","borderBottom","small","width","TableCell","Table","Division","useCorporation","useDivision","modal","display","alignItems","justifyContent","paper","backgroundColor","background","default","border","main","boxShadow","dark","padding","maxWidth","maxHeight","overflow","scrollbarWidth","Modal","disableRestoreFocus","disableScrollLock","disableEnforceFocus","disableAutoFocus","open","onClose","closeAfterTransition","in","sx","children","safetlyCreateUniqueServer","GetServerByHostname","numCycleForGrowth","growth","ajdGrowthRate","hackDifficulty","serverGrowthPercentage","serverGrowth","processSingleServerGrowth","threads","cores","calculateServerGrowth","oldMoneyAvailable","moneyAvailable","isValidNumber","moneyMax","usedCycles","fortify","ceil","prestigeHomeComputer","homeComp","hasBitflume","includes","Programs","BitFlume","runningScripts","isConnectedTo","ramUsed","NukeProgram","scripts","forEach","script","updateRamUsage","isValidIPAddress","getServerOnNetwork","isBackdoorInstalled","backdoorInstalled","t_homeComp","adminRights","purchasedByPlayer","currentServer","prestigeAugmentation","numPeopleKilled","karma","hacking_skill","strength","defense","dexterity","agility","charisma","hacking_exp","strength_exp","defense_exp","dexterity_exp","agility_exp","charisma_exp","city","Sector12","location","TravelAgency","companyName","jobs","purchasedServers","factions","factionInvitations","queuedAugmentations","resleeves","numSleeves","SourceFileFlags","bitNodeN","sleevesFromCovenant","sleeves","Sleeve","shock","synchronize","shockRecovery","isWorking","currentWorkFactionName","currentWorkFactionDescription","createProgramName","crimeType","workHackExpGainRate","workStrExpGainRate","workDefExpGainRate","workDexExpGainRate","workAgiExpGainRate","workChaExpGainRate","workRepGainRate","workMoneyGainRate","workHackExpGained","workStrExpGained","workDefExpGained","workDexExpGained","workAgiExpGained","workChaExpGained","workRepGained","workMoneyGained","timeWorked","lastUpdate","Date","getTime","playtimeSinceLastAug","scriptProdSinceLastAug","moneySourceA","reset","hacknetNodes","hashManager","prestige","reapplyAllAugmentations","max_hp","prestigeSourceFile","sync","resetGangs","hasWseAccount","hasTixApiAccess","has4SData","has4SDataTixApi","moneySourceB","playtimeSinceLastBitnode","receiveInvite","calculateSkill","exp","mult","calculateSkillF","updateSkillLevels","intelligence","intelligence_exp","ratio","round","resetMultipliers","hasProgram","programName","home","toLowerCase","setMoney","gainMoney","plus","loseMoney","eq","minus","cost","gte","recordMoneySource","amt","source","MoneySourceTracker","record","gainHackingExp","gainStrengthExp","gainDefenseExp","gainDexterityExp","gainAgilityExp","gainCharismaExp","gainIntelligenceExp","queryStatFromString","tempStr","resetWorkStatus","generalType","group","workType","factionWorkType","singularityStopWork","workMoneyLossRate","timeWorkedCreateProgram","processWorkEarnings","numCycles","focusBonus","hasAugmentation","focus","hackExpGain","strExpGain","defExpGain","dexExpGain","agiExpGain","chaExpGain","moneyGain","startWork","router","getWorkHackExpGain","getWorkStrExpGain","getWorkDefExpGain","getWorkDexExpGain","getWorkAgiExpGain","getWorkChaExpGain","getWorkRepGain","getWorkMoneyGain","timeNeededToCompleteWork","toWork","cancelationPenalty","specialIp","work","overMax","comp","Companies","influenceStockThroughCompanyWork","finishWork","cancelled","sing","playerReputation","content","reputation","startWorkPartTime","workPartTime","finishWorkPartTime","startFocusing","stopFocusing","startFactionWork","favorMult","startFactionHackWork","getIntelligenceBonus","startFactionFieldWork","getFactionFieldWorkRepGain","startFactionSecurityWork","getFactionSecurityWorkRepGain","getHackingWorkRepGain","finishFactionWork","bn11Mult","company","companyPositionName","companyPosition","CompanyPositions","baseSalary","salaryMultiplier","hackingExpGain","expMultiplier","strengthExpGain","defenseExpGain","dexterityExpGain","agilityExpGain","charismaExpGain","jobPerformance","calculateJobPerformance","startCreateProgramWork","reqLevel","createProgramReqLvl","programFile","startsWith","endsWith","split","percComplete","Number","createProgramWork","reqLvl","skillMult","finishCreateProgramWork","incompleteName","toString","startClass","costMult","expMult","gameCPS","hackExp","strExp","defExp","dexExp","agiExp","chaExp","getStudyMult","getTrainingMult","takeClass","finishClass","startCrime","workerscript","committingCrimeThruSingFn","singFnCrimeWorkerScript","finishCrime","determineCrimeSuccess","crime","Crimes","type","kills","ws","disableLogs","ALL","scriptRef","takeDamage","regenerateHp","getHospitalizationCost","applyForJob","entryPosType","currCompany","currPositionName","Company","pos","isQualified","reqText","getJobRequirementText","newPos","getNextCompanyPositionHelper","hasPosition","nextPos","getNextCompanyPosition","currentPositionName","currentPosition","isSoftwareJob","isITJob","isBusinessJob","isSecurityEngineerJob","isNetworkEngineerJob","isSecurityJob","isAgentJob","isSoftwareConsultantJob","isBusinessConsultantJob","isPartTimeJob","quitJob","applyForSoftwareJob","posNames","applyForSoftwareConsultantJob","applyForItJob","applyForSecurityEngineerJob","applyForNetworkEngineerJob","applyForBusinessJob","applyForBusinessConsultantJob","applyForSecurityJob","applyForAgentJob","applyForEmployeeJob","applyForPartTimeEmployeeJob","applyForWaiterJob","applyForPartTimeWaiterJob","position","offset","jobStatReqOffset","reqHacking","requiredHacking","reqStrength","requiredStrength","reqDefense","requiredDefense","reqDexterity","requiredDexterity","reqAgility","reqCharisma","requiredCharisma","requiredReputation","augName","aug","owned","applyAugmentation","reapplyAllSourceFiles","sourceFiles","srcFileKey","SourceFiles","applySourceFile","applyExploit","checkForFactionInvitations","invitedFactions","numAugmentations","allCompanies","allPositions","values","checkMegacorpRequirements","repNeeded","illuminatiFac","isBanned","isMember","alreadyInvited","daedalusFac","covenantFac","ecorpFac","AevumECorp","megacorpFac","Sector12MegaCorp","bachmanandassociatesFac","AevumBachmanAndAssociates","bladeindustriesFac","Sector12BladeIndustries","nwoFac","VolhavenNWO","clarkeincorporatedFac","AevumClarkeIncorporated","omnitekincorporatedFac","VolhavenOmniTekIncorporated","foursigmaFac","Sector12FourSigma","kuaigonginternationalFac","ChongqingKuaiGongInternational","fulcrumsecrettechonologiesFac","fulcrumIP","SpecialServerNames","BitRunnersServer","fulcrumSecretServer","AevumFulcrumTechnologies","bitrunnersFac","bitrunnerIP","bitrunnersServer","theblackhandFac","tbhIP","TheBlackHandServer","blackhandServer","nitesecFac","nitesecIP","NiteSecServer","nitesecServer","chongqingFac","Chongqing","sector12Fac","newtokyoFac","NewTokyo","aevumFac","Aevum","ishimaFac","Ishima","volhavenFac","Volhaven","speakersforthedeadFac","Sector12CIA","Sector12NSA","thedarkarmyFac","thesyndicateFac","silhouetteFac","tetradsFac","slumsnakesFac","netburnersFac","totalHacknetRam","totalHacknetCores","totalHacknetLevels","v","hserver","ram","tiandihuiFac","cybersecFac","cyberSecIP","CyberSecServer","cybersecServer","setBitNodeNumber","queueAugmentation","PlayerOwnedAugmentation","gainCodingContractReward","reward","difficulty","CodingContractRewardType","FactionReputation","FactionReputationAll","repGain","totalGain","specialFactions","filter","gainPerFaction","facName","CompanyReputation","to","gotoLocation","Locations","canAccessResleeving","giveExploit","exploit","weight","calculateIntelligenceBonus","getCasinoWinnings","casino","getMult","setMult","EmployeePositions","Operations","Engineer","Business","Management","RandD","Unassigned","Industries","Energy","Utilities","Agriculture","Fishing","Mining","Food","Tobacco","Chemical","Pharmaceutical","Computer","Robotics","Software","Healthcare","RealEstate","IndustryStartingCosts","IndustryDescriptions","corp","IndustryResearchTrees","getBaseResearchTreeCopy","getProductIndustryResearchTreeCopy","resetIndustryResearchTrees","LocationType","BladeburnerConstants","CityNames","CyclesPerSecond","StaminaGainPerSecond","BaseStaminaLoss","MaxStaminaToGainFactor","DifficultyToTimeFactor","DiffMultExponentialFactor","DiffMultLinearFactor","EffAgiLinearFactor","EffDexLinearFactor","EffAgiExponentialFactor","EffDexExponentialFactor","BaseRecruitmentTimeNeeded","PopulationThreshold","PopulationExponent","ChaosThreshold","BaseStatGain","BaseIntGain","ActionCountGrowthPeriod","RankToFactionRepFactor","RankNeededForFaction","ContractSuccessesPerLevel","OperationSuccessesPerLevel","RanksPerSkillPoint","ContractBaseMoneyGain","HrcHpGain","HrcStaminaGain","CorporationManagementHandbook","HistoryOfSynthoids","AGreenTomorrow","AlphaOmega","SimulatedReality","BeyondMan","BrighterThanTheSun","DemocracyIsDead","Sector12Crime","ManAndMachine","SecretSocieties","TheFailedFrontier","CodedIntelligence","SyntheticMuscles","TensionsInTechRace","CostOfImmortality","TheHiddenWorld","TheNewGod","NewTriads","TheSecretWar","BaseServer","super","createRandomString","requiredHackingSkill","baseDifficulty","minDifficulty","capDifficulty","changeMinimumSecurity","perc","changeMaximumMoney","hasHacknetServers","purchaseHacknet","numOwned","getCostOfNextHacknetServer","createHacknetServer","updateHashManagerCapacity","getCostOfNextHacknetNode","node","HacknetNode","hasMaxNumberHacknetServers","calculateNodeCost","calculateServerCost","getMaxNumberLevelUpgrades","nodeObj","maxLevel","lt","calculateLevelUpgradeCost","levelsToMax","gt","getMaxNumberRamUpgrades","calculateRamUpgradeCost","HacknetServer","log2","getMaxNumberCoreUpgrades","calculateCoreUpgradeCost","getMaxNumberCacheUpgrades","calculateCacheUpgradeCost","cache","purchaseLevelUpgrade","levels","sanitizedLevels","isServer","purchaseRamUpgrade","purchaseCoreUpgrade","purchaseCacheUpgrade","processHacknetEarnings","HashManager","hashes","updateHashRate","h","process","totalHashesGenerated","storeHashes","processAllHacknetServerEarnings","total","processSingleHacknetNodeEarnings","processAllHacknetNodeEarnings","totalEarnings","nodes","updateCapacity","hashCapacity","purchaseHashUpgrade","upgName","upgTarget","upgrade","upg","HashUpgrades","refundUpgrade","target","e","division","sciResearch","qty","changeRank","skillPoints","generateRandomContract","initCompanies","oldCompanies","companiesMetadata","loadCompanies","Array","updateSourceFileFlags","sf","lvl","FulcrumSecretTechnologies","TheDarkArmyServer","DaedalusServer","WorldDaemon","SpecialServerIpsMap","prestigeSpecialServerIps","loadSpecialServerIps","initSpecialServerIps","PositionTypes","NewIndustry","industry","Industry","NewCity","offices","OfficeSpace","loc","size","UnlockUpgrade","unlock","LevelUpgrade","priceMult","upgrades","IssueDividends","percent","dividendPercentage","SellMaterial","mat","price","replace","temp","bCost","eval","sCost","q","tempQty","sllman","SellProduct","product","all","cities","tempCity","SetSmartSupply","warehouse","smartSupply","smartSupplyEnabled","SetSmartSupplyUseLeftovers","material","useLeftover","smartSupplyUseLeftovers","BuyMaterial","buy","AssignJob","employee","job","UpgradeOfficeSize","office","initialPriceMult","ThrowParty","costPerEmployee","totalCost","employees","throwParty","PurchaseWarehouse","warehouses","Warehouse","UpgradeWarehouse","sizeUpgradeCost","updateSize","BuyCoffee","IndustryUpgrades","HireAdVert","MakeProduct","productName","designInvest","marketingInvest","Product","createCity","designCost","advCost","products","Research","researchName","researchTree","getAllNodes","research","ResearchMap","researched","ExportMaterial","divisionName","cityName","sanitizedAmt","exportObj","CancelExportMaterial","LimitProductProduction","prdman","SetMaterialMarketTA1","on","marketTa1","SetMaterialMarketTA2","marketTa2","SetProductMarketTA1","SetProductMarketTA2","programsMetadata","Program","SleeveTaskType","Shoplift","Crime","dexterity_success_weight","agility_success_weight","RobStore","hacking_success_weight","Mug","strength_success_weight","defense_success_weight","Larceny","DealDrugs","charisma_success_weight","BondForgery","TraffickArms","Homicide","GrandTheftAuto","Kidnap","Assassination","Heist","trusted","event","isTrusted","AllGangs","power","territory","Tetrads","NiteSec","loadAllGangs","companyPositionMetadata","CompanyPosition","StockSymbols","IshimaStormTechnologies","NewTokyoDefComm","VolhavenHeliosLabs","NewTokyoVitaLife","Sector12IcarusMicrosystems","Sector12UniversalEnergy","AevumAeroCorp","VolhavenOmniaCybersystems","ChongqingSolarisSpaceSystems","NewTokyoGlobalPharmaceuticals","IshimaNovaMedical","AevumWatchdogSecurity","VolhavenLexoCorp","AevumRhoConstruction","Sector12AlphaEnterprises","VolhavenSysCoreSecurities","VolhavenCompuTek","AevumNetLinkTechnologies","IshimaOmegaSoftware","Sector12FoodNStuff","updateHashCapacity","seconds","hashRate","prodMult","runScript","calculateHashGainRate","StockMarket","Orders","storedCycles","ticksUntilCycle","SymbolToStockMap","stock","shares","workerScript","Stock","order","Order","symbol","orders","stk","processOrderRefs","stockMarket","symbolToStockMap","processOrders","stockOrders","stockSymbol","orderTxt","loadStockMarket","deleteStockMarket","initStockMarket","InitStockMetadata","TicksPerCycle","initSymbolToStockMap","cyclesPerStockUpdate","processStockPrices","timeNow","flipForecastForecast","stockMarketCycle","av","mv","chc","otlkMag","cap","changePrice","OrderTypes","LimitBuy","Short","LimitSell","Long","StopBuy","StopSell","otlkMagChange","cycleForecast","cycleForecastForecast","shareTxUntilMovement","shareTxForMovement","initStockMarketFnForReact","eventEmitterForUiReset","EventEmitter","KEY","CTRL","DOWNARROW","ENTER","ESC","TAB","UPARROW","B","C","D","E","F","G","H","I","J","K","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","CodingContractType","gen","solver","diff","numTries","generate","CodingContractTypes","md","codingContractTypesMetadata","CodingContractResult","CodingContract","fn","getDifficulty","getMaxNumTries","getType","isSolution","solution","Promise","resolve","Cancelled","onAttempt","val","Success","Failure","CodingContractEvent","calculateHackingChance","difficultyMult","chance","calculateHackingExpGain","expGain","calculatePercentMoneyHacked","percentMoneyHacked","calculateHackingTime","skillFactor","calculateGrowTime","calculateWeakenTime","Reputation","isScriptFilename","MoneyRate","margin","spacing","code","page","toActiveScripts","toAugmentations","toBitVerse","toBladeburner","toStats","toCity","toCorporation","toCreateProgram","toDevMenu","toFaction","toFactions","toGameOptions","toGang","toHacknetNodes","toInfiltration","toJob","toMilestones","toResleeves","toScriptEditor","toSleeves","toStockMarket","toTerminal","toTravel","toTutorial","toBladeburnerCinematic","toLocation","toHackingMission","GameRoot","engine","terminal","setPage","useState","Work","Terminal","determineStartPage","setRerender","setFaction","flume","setFlume","quick","setQuick","setLocation","Infiltration","Location","Job","cinematicText","setCinematicText","rerender","old","useEffect","subscribe","ActiveScripts","Bladeburner","Stats","CreateProgram","DevMenu","Options","Gang","Hacknet","Milestones","Resleeves","CreateScript","Sleeves","Tutorial","City","Travel","BitVerse","BladeburnerCinematic","HackingMission","scrollTo","Provider","save","saveObject","saveGame","enter","enterBitNode","flexDirection","flexGrow","px","height","workerScripts","buyStockLong","buyStockShort","eventEmitterForReset","sellStockLong","sellStockShort","export","exportGame","forceKill","exportGameFn","onExport","installAugmentationsFn","String","makeNode","Node","text","createBaseResearchTreeNodes","rootNode","autoBrew","autoParty","autoDrugs","bulkPurchasing","cph4","drones","dronesAssembly","dronesTransport","goJuice","hrRecruitment","hrTraining","joywire","marketta1","marketta2","overclock","scAssemblers","stimu","addChild","baseResearchTree","ResearchTree","setRoot","upgradeFulcrum","upgradeCapacity1","upgradeCapacity2","upgradeDashboard","inviteToFaction","InvitationEvent","factionInfo","enemies","enemy","startHackingMission","mission","setInMission","hasAugmentationPrereqs","hasPrereqs","prereqAug","augmentationPriceMult","queuedAugmentation","getNextNeurofluxLevel","nextLevel","currLevel","processPassiveFactionRepGain","offersWork","getGangName","hRep","sRep","fRep","rate","removeLeadingSlash","removeTrailingSlash","isValidFilename","match","isValidDirectoryPath","path","t_path","dirs","dir","isValidFilePath","fnSeparator","lastIndexOf","getFirstParentDirectory","getAllParentDirectories","lastSlash","isInRootDirectory","evaluateDirectoryPath","currPath","reconstructedPath","pop","evaluateFilePath","StatsTable","rows","title","wide","MuiTable","map","row","elem","align","noWrap","count","getActionTimePenalty","getChaosCompetencePenalty","getChaosDifficultyBonus","TTerminal","MoneyCost","Message","msg","recvd","SkillNames","BladesIntuition","Cloak","Marksman","WeaponProficiency","ShortCircuit","DigitalObserver","Tracer","Overclock","Reaper","EvasiveSystem","Datamancer","CybersEdge","HandsOfMidas","Hyperdrive","defaultConstructorParams","initPrice","marketCap","spreadPerc","range","divisor","lastPrice","playerShares","playerAvgPx","playerShortShares","playerAvgShortPx","otlkMagForecast","getAbsoluteForecast","totalSharesUnrounded","totalShares","maxShares","changeForecastForecast","newff","newPrice","changeAmt","increaseChance","getForecastIncreaseChance","getAskPrice","getBidPrice","influenceForecast","change","influenceForecastForecast","killWorkerScript","rerenderUi","WorkerScript","stopAndCleanUpWorkerScript","RunningScript","killWorkerScriptByPid","pid","compareArrays","env","stopFlag","delay","clearTimeout","delayResolve","killNetscriptDelay","roundToTwo","ramUsage","runningScript","delete","WorkerScriptStartStopEventEmitter","removeWorkerScript","uuidv4","uuid","subscribers","sub","Adjuster","setValue","label","placeholder","add","subtract","tons","onChange","InputProps","startAdornment","onClick","style","transform","endAdornment","Aliases","GlobalAliases","loadAliases","loadGlobalAliases","printAliases","parseAliasDeclaration","dec","global","matches","trim","addGlobalAlias","addAlias","getGlobalAlias","removeAlias","substituteAliases","origCommand","commandArray","somethingSubstituted","depth","alias","netscriptDelay","setTimeoutRef","makeRuntimeRejectMsg","resolveNetscriptRequestedThreads","functionName","requestedThreads","requestedThreadsAsInt","isScriptErrorMessage","Literature","CopyableText","setOpen","variant","copyText","document","createElement","body","appendChild","select","setSelectionRange","execCommand","removeChild","setTimeout","AddToAugmentations","initAugmentations","clearObject","randomBonuses","bonuses","description","randomNumber","WHRNG","step","getRandomBonus","UnstableCircadianModulatorParams","augmentationExists","RedPill","FTPCrackProgram","RelaySMTPProgram","BruteSSHProgram","DeepscanV1","AutoLink","resetAugmentation","newAugObject","reapply","augObj","ownedAug","augmentationList","nfgIndex","isRepeatableAug","inMission","currMission","bool","$","keydown","selectedNode","keyCode","actionButtons","click","NodeTypes","NodeActions","atk","def","maxhp","plyrCtrl","enmyCtrl","el","targetedCount","conn","started","playerCores","playerNodes","playerAtk","playerDef","enemyCores","enemyDatabases","enemyNodes","enemyAtk","enemyDef","miscNodes","availablePositions","jsplumbinstance","clearAllSelectedNodes","hackMissionInst","deselect","setPosition","y","setControlledByPlayer","classList","remove","setControlledByEnemy","untarget","id","createPageDom","cpuCores","setNodePosition","removeAvailablePosition","numFirewalls","numDatabases","totalNodes","xlimit","randMult","addOffset","setNodeRandomPosition","calculateDefenses","calculateAttacks","createMap","container","getElementById","gain","headerText","ReactDOM","render","inGameGuideBtn","innerText","addEventListener","startBtn","innerHTML","setAttribute","start","forfeitMission","finishMission","timer","actionsContainer","atkTooltip","scanTooltip","WeakenTooltip","fortifyTooltip","overflowTooltip","dropconnTooltip","playerStats","enemyStats","setActionButtonsActive","setActionButton","nodeType","endpoints","detachFrom","timeDisplay","setActionButtonsInactive","active","averageAttack","createNodeDomElement","configurePlayerNodeElement","nodeDiv","txtEl","updateNodeDomElement","getNodeFromElement","selectNodeWrapper","selectNode","multiselectNode","firstChild","configureEnemyNodeElement","nodeReachable","nodeReachableByEnemy","initJsPlumb","clearEventListeners","instance","jsPlumb","getInstance","DragOptions","cursor","zIndex","PaintStyle","gradient","stops","stroke","strokeWidth","makeSource","deleteEndpointsOnEmpty","maxConnections","anchor","connector","makeTarget","targetNode","connection","sourceEndpoint","targetEndpoint","dropAllConnectionsFromNode","allConns","getAllConnections","dropAllConnectionsToNode","beingTargeted","processNode","enemyAISelectAction","updateTimer","targetId","calcStats","plyr","enmyHacking","dmg","calculateAttackDamage","eff","calculateScanEffect","calculateWeakenEffect","calculateFortifyEffect","calculateOverflowEffect","conqueredByPlayer","isMiscNode","swapNodes","orig","dest","unmakeTarget","unmakeSource","rand","hacking","trunc","win","UpgradeType","gangMemberUpgradesMetadata","upgType","Weapon","dex","agi","Armor","Vehicle","Rootkit","MaterialSizes","Water","Plants","Metal","Hardware","Chemicals","Drugs","Robots","AICores","FactionWorkType","NetscriptPorts","NetscriptPort","prestigeWorkerScripts","startNetscript1Script","codeWithImports","codeLineOffset","running","importProcessingRes","ast","ecmaVersion","allowReserved","sourceType","generatedCode","hasImports","walksimple","ImportDeclaration","scriptName","getScript","scriptAst","specifiers","namespace","local","fnNames","fnDeclarations","FunctionDeclaration","fnName","fnsToImport","lineOffset","linesRemoved","processNetscript1Imports","interpreterInitialization","scope","NetscriptFunctions","entry","tempWrapper","fnArgs","pseudoToNative","cb","then","catch","setProperty","createAsyncFunction","createNativeFunction","nativeToPseudo","interpreter","Interpreter","reject","runInterpreter","errorMessage","startWorkerScript","parent","createAndAddWorkerScript","runningScriptObj","getRamUsageFromRunningScript","arrayToString","generateNextPid","set","runningFn","wrap","propName","finally","vars","executeJSScript","message","stack","startNetscript2Script","w","onlineExpGained","onlineMoneyMade","errorTextArray","errorMsg","updateOnlineScriptTimes","onlineRunningTime","loadAllRunningScripts","skipScriptLoad","href","indexOf","markUpdated","scriptCalculateOfflineProduction","runScriptFromScript","caller","scriptname","isArray","ramAvailable","hasAdminRights","createProgressBarText","derived","progress","totalTicks","bars","dashes","Material","getMarkupLimit","qlt","mku","dmd","dmdR","cmp","cmpR","processMarket","priceChange","compChange","dmdChange","copy","sll","prd","imp","totalExp","marketTa2Price","gameContainer","getGameContainer","removeEventListener","deepestPopupId","createPopup","rootComponent","class","mouseDown","srcElement","HTMLElement","removePopup","removeElementById","gainFavor","rolloverRep","getFavorGain","totalRep","favorToRep","newFavor","repToFavor","newRep","KeyHandler","press","onKeyDown","TimerProgress","withStyles","bar","transition","LinearProgress","GameTimer","setV","intervalId","setInterval","onExpire","millis","clearInterval","item","xs","interpolate","settings","out","lerpD","lerp","Trivial","Normal","Hard","Impossible","Map","reachedLimit","reached","Game","getBuyTransactionCost","posType","getSellTransactionGain","processTransactionForecastMovement","firstShares","remainingShares","numIterations","forecastChange","forecastForecastChange","calculateBuyMaxAmount","isLong","remainingMoney","currPrice","GangMemberUpgrades","GangMemberUpgrade","createTaskTracker","Person","calculateStat","getFactionHackingWorkRepGain","updateStatLevels","commit","div","successRate","BitNode","number","BitNodes","initBitNodeMultipliers","sf12Lvl","inc","ActionIdentifier","general","contracts","ops","blackops","events","updateSkillMultipliers","calculateMaxStamina","stamina","maxStamina","getCurrentCity","calculateStaminaPenalty","actionId","actionTimeCurrent","actionTimeToComplete","getActionObject","resetAction","exceptionAlert","commsEst","getRecruitmentTime","skill","skillName","skills","executeConsoleCommands","commands","consoleHistory","arrayOfCommands","executeConsoleCommand","postToConsole","input","saveToLogs","consoleLogs","getTimestamp","clearConsole","bladeburnerFac","rank","storeCycles","getActionIdFromTypeAndName","convertedType","convertedName","operations","BlackOperations","executeStartConsoleCommand","GeneralActions","executeSkillConsoleCommand","skillNames","Skills","multKeys","skillMultipliers","Skill","currentLevel","pointCost","calculateCost","executeLogConsoleCommand","flag","logging","executeHelpConsoleCommand","line","ConsoleHelpText","helpList","helpText","executeAutomateConsoleCommand","variable","highLow","automateActionHigh","automateActionLow","automateThreshHigh","automateThreshLow","automateEnabled","parseCommandArguments","command","endQuote","substr","triggerMigration","sourceCityName","destCityName","destCity","sourceCity","percentage","comms","triggerPotentialMigration","randomEvent","chaos","gainActionStats","success","successMult","unweightedGain","unweightedIntGain","weights","intExp","getDiplomacyEffectiveness","getRecruitmentSuccessChance","teamSize","effCharisma","effCha","charismaFactor","resetSkillMultipliers","successChanceAll","successChanceStealth","successChanceKill","successChanceContract","successChanceOperation","successChanceEstimate","actionTime","effHack","effStr","effDef","effDex","effAgi","effInt","multiplierNames","multiplierName","getMultiplier","multiplierValue","completeOperation","teamCount","losses","teamLost","improvePopulationEstimateByPercentage","improveCommunityEstimate","changePopulationByPercentage","changeEstEqually","nonZero","changeChaosByCount","changeChaosByPercentage","changePopulationByCount","estChange","estOffset","completeContract","improvePopulationEstimateByCount","completeAction","isOperation","difficultyMultiplier","rewardMultiplier","rewardFac","successes","setMaxLevel","rankGain","failures","loss","damage","rankLoss","hpLoss","hpLost","calculateHospitalizationCost","numHosp","moneyLost","logLossText","autoLevel","teamLossMax","staminaGain","staminaBonus","successChance","maxRank","favorBonus","rankNeededForSp","totalSkillPoints","gainedSkillPoints","processAction","actionTimeOverflow","calculateStaminaGainPerSecond","effAgility","maxStaminaBonus","oldMax","difficultyFac","decays","isStealth","isKill","reqdRank","redPillFlag","contract","growthF","Growths","op","randomEventCounter","getTypeAndNameFromActionId","types","getContractNamesNetscriptFn","getOperationNamesNetscriptFn","getBlackOpNamesNetscriptFn","getGeneralActionNamesNetscriptFn","getSkillNamesNetscriptFn","startActionNetscriptFn","errorLogText","nm","getActionTimeNetscriptFn","actionObj","getActionEstimatedSuccessChanceNetscriptFn","getEstSuccessChance","recChance","getActionCountRemainingNetscriptFn","getSkillLevelNetscriptFn","getSkillUpgradeCostNetscriptFn","upgradeSkillNetscriptFn","maxLvl","getTeamSizeNetscriptFn","setTeamSizeNetscriptFn","sanitizedSize","joinBladeburnerFactionNetscriptFn","DefaultConstructorParams","companyPositions","isPlayerEmployed","isMegacorp","hasAgentPositions","hasBusinessConsultantPositions","hasBusinessPositions","hasEmployeePositions","hasITPositions","hasSecurityPositions","hasSoftwareConsultantPositions","hasSoftwarePositions","hasWaiterPositions","favorGain","reqdRep","getPurchaseServerCost","sanitizedRam","isPowerOfTwo","getPurchaseServerMaxRam","getPurchaseServerLimit","clz32","newServ","purchaseRamForHomeComputer","materials","unlockUpgrades","updateMaterialSizeUsed","sizeUsed","matName","getStorageMultiplier","GangMemberTasks","gangMemberTasksMetadata","GangMemberTask","isHacking","isCombat","startingLevel","extraLevels","totalMultiplier","startingRam","numUpgrades","currentRam","startingCores","currentCores","startingCache","currentCache","opts","suppressDialog","totalPrice","origTotal","newTotal","rerenderFn","resultTxt","gains","netProfit","origCost","profit","costInc","Hashes","midpoint","Suit","Card","suit","formatValue","isRedSuit","Hearts","Diamonds","getStringRepresentation","constructLocation","asciiArt","LocationsMetadata","addLocation","getArrow","setRedPillFlag","destroyedBitNode","newBitNode","bitNodeNumber","sourceFileKey","sourceFile","alreadyOwned","ownedSourceFile","playerSrcFile","PlayerOwnedSourceFile","giveSourceFile","timePassed","confidence","dataMap","serv","timesGrown","host","offlineRunningTime","offlineExpGained","timesWeakened","coreBonus","findRunningScript","findRunningScriptByPid","TextFile","append","download","file","Blob","navigator","msSaveOrOpenBlob","url","URL","createObjectURL","revokeObjectURL","show","getTextFile","textFiles","createTextFile","fileName","lineNumber","sendMessage","forced","showMessage","serverHostname","other","addMessageToServer","checkForMessagesToSend","jumper0","Messages","MessageFilenames","Jumper0","jumper1","Jumper1","jumper2","Jumper2","jumper3","Jumper3","jumper4","Jumper4","cybersecTest","CyberSecTest","nitesecTest","NiteSecTest","bitrunnersTest","BitRunnersTest","redpill","redpillOwned","flightName","Flight","AddToAllMessages","loadMessages","initMessages","calculateExp","calculateMoneyGainRate","startingCore","sanitizedCores","coreBaseCost","actionName","Action","SourceFile","bitnodeKey","bitnode","LogBoxEvents","LogBoxManager","logs","setLogs","LogWindow","close","useRef","closeHandler","flexFlow","left","top","ref","onMouseDown","current","preventDefault","clientX","clientY","offsetLeft","clientWidth","offsetTop","mouseMove","right","bottom","mouseUp","component","marginLeft","whiteSpace","updateMoneyGainRate","moneyGainRatePerSecond","totalMoneyGenerated","onlineTimeSeconds","HashUpgradesMetadata","HashUpgrade","vals","getStockMarket4SDataCost","getStockMarket4STixApiCost","ApplyToJobButton","getJobRequirementTooltip","Exploit","names","UndocumentedFunctionCall","EditSaveFile","PrototypeTampering","Unclickable","Bypass","ExploitName","DarkWebItems","DarkWebItem","HTTPWormProgram","SQLInjectProgram","DeepscanV2","AutolinkProgram","ServerProfilerProgram","ServerProfiler","RamCalculationErrorCode","GangConstants","GangRespectToReputationRatio","MaximumGangMembers","CyclesPerTerritoryAndPowerUpdate","AscensionMultiplierRatio","Names","getRandomByte","ThemeEvents","refreshTheme","createTheme","light","typography","fontFamily","button","textTransform","components","MuiInputBase","styleOverrides","userSelect","MuiInput","borderBottomColor","underline","MuiInputLabel","MuiButton","borderRadius","MuiSelect","icon","defaultProps","MuiTextField","MuiMenu","list","MuiMenuItem","MuiAccordionSummary","MuiAccordionDetails","MuiIconButton","MuiTooltip","tooltip","fontSize","disableInteractive","MuiSlider","valueLabel","MuiDrawer","paperAnchorDockedLeft","borderRight","MuiDivider","MuiFormControlLabel","MuiSwitch","switchBase","track","MuiPaper","MuiTablePagination","MuiTab","textColorPrimary","TTheme","injectFirst","sum","EPSILON","decay","inst","getSuccessChance","baseTime","skillFac","effDexterity","statFac","getTeamSuccessBonus","getActionTypeSkillSuccessBonus","est","popEst","clamp","real","low","high","competence","stat","playerStatLvl","effMultiplier","getSuccessesNeededForNextLevel","baseSuccessesPerLevel","BitburnerSaveObject","getSaveString","PlayerSave","stringify","TempAllServers","AllServersSave","CompaniesSave","FactionsSave","SpecialServerIpsSave","AliasesSave","GlobalAliasesSave","MessagesSave","StockMarketSave","SettingsSave","VersionSave","LastExportBonus","ExportBonus","AllGangsSave","btoa","unescape","encodeURIComponent","GameSavedEvents","epochTime","now","bn","loadGame","decodeURIComponent","escape","atob","saveObj","ver","anyPlayer","positionName","evaluateVersionCompatibility","createNewUpdateText","None","crimeKey","currentTask","finishTask","resetTaskStatus","gainRatesForTask","currentTaskLocation","currentTaskMaxTime","retValue","currentTaskTime","successGainRates","keysForIteration","gainExperience","fromOtherSleeve","multFac","pHackExp","pStrExp","pDefExp","pDexExp","pAgiExp","pChaExp","earningsForPlayer","earningsForTask","earningsForSleeves","task","getMemoryUpgradeCost","memory","currCost","currMemory","getRepGain","Hacking","Field","Security","installAugmentation","cyclesUsed","Class","Gym","updateTaskGainRates","Recovery","Synchro","gymStatType","takeUniversityCourse","universityName","AevumSummitUniversity","Sector12RothmanUniversity","VolhavenZBInstituteOfTechnology","newCity","tryBuyAugmentation","some","AevumCrushFitnessGym","AevumSnapFitnessGym","Sector12IronGym","Sector12PowerhouseGym","VolhavenMilleniumFitnessGym","baseGymExp","totalExpMultiplier","sanitizedStat","totalExpMult","upgradeMemory","sanitizedWorkType","offerHackingWork","offerFieldWork","offerSecurityWork","workoutAtGym","gymName","Output","Link","TTimer","timeLeft","TerminalEvents","TerminalClearEvents","nsFuncsGenerator","sanitizedPid","found","Environment","getScriptOnServer","shouldLog","func","program","orderType","refs","orderBook","executeOrder","isBuy","CorporationState","numUnlockUpgrades","CorporationUnlockUpgrades","CorporationUpgrades","fill","upgradeMultipliers","addFunds","isFinite","getState","state","marketCycles","gameCycles","shareSaleCooldown","issueNewSharesCooldown","cycleProfit","times","totalDividends","retainedEarnings","dividendsPerShare","numShares","dividendTaxPercentage","updateSharePrice","nextState","determineValuation","public","getTargetSharePrice","targetPrice","sharePrice","immediatelyUpdateSharePrice","calculateShareSale","sharesTracker","sharesUntilUpdate","shareSalesUntilPriceUpdate","sharesSold","maxIterations","convertCooldownToString","cd","upgN","basePrice","upgradeAmt","getProductionMultiplier","getDreamSenseGain","getAdvertisingMultiplier","getEmployeeCreMultiplier","getEmployeeChaMultiplier","getEmployeeIntMultiplier","getEmployeeEffMultiplier","getSalesMultiplier","getScientificResearchMultiplier","getStarterGuide","hasHandbook","handbookFn","showLiterature","tagName","tabIndex","setElementAnchor","checked","pattern","maxLength","setElementInput","for","htmlFor","setElementLabel","clickListener","inputListener","changeListener","onkeyup","onkeydown","onfocus","setElementListeners","visibility","marginTop","float","cssFloat","setElementStyle","tooltipleft","tooltipsmall","tooltiplow","setElementTooltip","maintainMembership","keep","finishAction","WorldDaemonIP","DaedalusServerIP","resetPidCounter","setMaxRam","BadRNG","totalPlaytime","s1","s2","s3","nextPosition","repMultiplier","reqdHacking","reqdStrength","reqdDefense","reqdDexterity","requiredAgility","reqdAgility","reqdCharisma","reqdReputation","hackingEffectiveness","strengthEffectiveness","defenseEffectiveness","dexterityEffectiveness","agilityEffectiveness","charismaEffectiveness","hackRatio","strRatio","defRatio","dexRatio","agiRatio","chaRatio","reputationGain","StartButton","mx","logEntry","logUpd","displayLog","recordHack","moneyGained","recordGrow","recordWeaken","globalModuleSequenceNumber","Script","otherScripts","moduleSequenceNumber","saveScript","calculateRamUsage","researchMetadata","canGetBonus","setLastExportBonus","unixTime","problemType","getRandomProblemType","getRandomReward","randServer","getRandomServer","contractFn","getRandomFilename","addContract","generateRandomContractOnHome","generateContract","problemTypes","rewardType","factionsThatAllowHacking","sanitizeRewardType","numFactions","randFaction","allJobs","servers","randIndex","atCapacity","hasResearch","emp","hireRandomEmployee","maxEne","maxHap","maxMor","perfMult","hasAutobrew","hasAutoparty","salaryPaid","mor","hap","ene","calculateEmployeeProductivity","employeeProd","prod","calculateProductivity","cre","sal","Employee","experience","creativity","efficiency","salary","assignEmployeeToJob","unassignEmployeeFromJob","minEne","minHap","getUpgrade","getUpgradeCost","getCost","capacity","newCap","Favor","sanitizedSource","Option","my","buttonText","infoText","formattedHours","getHours","formattedMinutes","getMinutes","getMonth","getDate","decimal","AlertManager","alerts","setAlerts","oldhp","getDB","indexedDB","indexedDbRequest","onupgradeneeded","createObjectStore","onerror","ev","onsuccess","db","transaction","objectStore","async","request","put","deleteGame","createCityMap","demand","competition","markup","quality","per","performance","dur","durability","rel","reliability","aes","aesthetics","fea","features","siz","reqMats","req","createProduct","empWorkMult","fin","prog","finishProduct","progrMult","engrRatio","mgmtRatio","rndRatio","opsRatio","busRatio","totalMult","sciFac","calculateRating","advMult","awareness","popularity","reqMat","ProductRatingWeights","rat","Quality","Performance","Durability","Reliability","Aesthetics","Features","locations","TickerDisplayMode","DisplayModeButton","tickerDisplayMode","Portfolio","changeDisplayMode","StockTickersConfig","changeWatchlistFilter","canAccessGang","getGangFaction","hasGangWith","startGang","elementId","currentCity","onTravel","lineHeight","WorldMap","SuccessChance","estimatedSuccessChance","removeElement","ReputationRate","findCrime","roughName","MaxSleevesFromCovenant","BaseCostPerSleeve","hasTorRouter","checkIfConnectedToDarkweb","darkwebIp","listAllDarkwebItems","buyDarkwebItem","itemName","tooltiptext","reqRep","defaultInterpreter","toNative","pseudoObj","nativeObj","getProperty","hasProperty","properties","updateDynamicRam","ramCost","dynamicLoadedFns","dynamicRamUsage","safeGetServer","callingFnName","makeRuntimeErrorMsg","scriptArgs","getRunningScriptByPid","getCannotFindRunningScriptErrorMessage","checkTixApiAccess","callingFn","getStockFromSymbol","failOnHacknetServer","getHacknetNode","hi","errstack","userstack","stackline","dependency","dependencies","parseChromeStackline","lineMatch","funcMatch","chromeCall","parseFirefoxStackline","lio","firefoxCall","rejectMsg","checkFormulasAccess","extra","checkSingularityAccess","checkBladeburnerAccess","skipjoined","checkBladeburnerCity","checkSleeveAPIAccess","checkSleeveNumber","sleeveNumber","getCodingContract","getContract","checkGangApiAccess","getGangMember","members","getBladeburnerActionObject","getCompany","getFaction","getAugmentation","getDivision","find","getOffice","getWarehouse","getMaterial","materialName","getProduct","getEmployee","employeeName","runAfterReset","cbScript","manual","hackingTime","canHack","netscriptCanHack","expGainedOnSuccess","expGainedOnFailure","percentHacked","maxThreadNeeded","moneyDrained","influenceStockThroughServerHack","argsToString","arg","functions","maxNumNodes","hasUpgraded","production","timeOnline","totalProduction","getHashUpgradeLevel","hostnames","hackAmount","netscriptCanGrow","growTime","moneyBefore","moneyAfter","logGrowPercent","influenceStockThroughServerGrow","netscriptCanWeaken","weakenTime","tprintf","possibleLogs","tail","arguments","openPortCount","sshPortOpen","ftpPortOpen","smtpPortOpen","httpPortOpen","sqlPortOpen","scriptServer","spawnDelay","killByPid","scriptsRunning","ip1","ip2","destServer","currServ","txtFile","newFile","sourceScript","oldScript","newScript","grep","allFiles","processes","speed","purchaseCost","coreCost","levelCost","sanitizedPosType","orderPos","ltype","lpos","stockMarketOrders","forecast","hostnameStr","port","iport","status","removeFile","suc","offlineMoneyMade","tFormat","milliseconds","milliPrecision","popupId","textElement","yesBtn","noBtn","writeToScriptFile","writeToTextFile","overwritten","fail","cityname","darkweb","setcwd","baseserver","installTime","jobTitles","maxHp","agilityExp","companyRep","crimeMoney","crimeSuccess","defenseExp","dexterityExp","factionRep","hackingExp","strengthExp","workMoney","tor","workHackExpGain","workStrExpGain","workDefExpGain","workDexExpGain","workAgiExpGain","workChaExpGain","workRepGain","workMoneyGain","charismaExp","field","hackAvailable","fdWkAvailable","scWkAvailable","repNeededToDonate","crimeRoughName","Slums","purchased","facname","augs","isHackingGang","moneyGainRate","getPower","respect","respectGainRate","getTerritory","territoryClashChance","territoryWarfareEngaged","wantedLevel","wanted","wantedLevelGainRate","wantedGainRate","cpy","earnedRespect","hack_exp","str_exp","def_exp","dex_exp","agi_exp","cha_exp","hack_mult","str_mult","def_mult","dex_mult","agi_mult","cha_mult","hack_asc_mult","calculateAscensionMult","hack_asc_points","str_asc_mult","str_asc_points","def_asc_mult","def_asc_points","dex_asc_mult","dex_asc_points","agi_asc_mult","agi_asc_points","cha_asc_mult","cha_asc_points","recruited","tasks","getAllTaskNames","unshift","memberName","taskName","assignToTask","getGangTask","equipName","equipment","buyUpgrade","canAscend","engage","otherGang","playerPower","worldHeader","expandIndustry","industryName","expandCity","unlockUpgrade","upgradeName","levelUpgrade","issueDividends","sellMaterial","sellProduct","discontinueProduct","setSmartSupply","enabled","buyMaterial","assignJob","hireEmployee","upgradeOfficeSize","purchaseWarehouse","upgradeWarehouse","buyCoffee","hireAdVert","makeProduct","exportMaterial","sourceDivision","targetDivision","targetCity","cancelExportMaterial","setMaterialMarketTA1","setMaterialMarketTA2","setProductMarketTA1","setProductMarketTA2","returnReward","is2DArray","answerComponents","creward","removeContract","tries","crimeName","sl","jobTitle","purchasableAugs","findSleevePurchasableAugs","formulas","basic","hackPercent","growPercent","hackTime","levelUpgradeCost","ramUpgradeCost","coreUpgradeCost","extraCores","hacknetNodeCost","constants","hacknetServers","hashGainRate","HScalculateHashGainRate","HScalculateLevelUpgradeCost","HScalculateRamUpgradeCost","HScalculateCoreUpgradeCost","cacheUpgradeCost","extraCache","HScalculateCacheUpgradeCost","hashUpgradeCost","hacknetServerCost","HScalculateServerCost","bypass","doc","completely_unused_field","real_document","flags","Boolean","numDashes","ret","libarg","argv","fromEntries","getFunctionNames","functionNames","entries","storedTerritoryAndPowerCycles","notifyMemberDeath","cycles","processGains","processExperienceGains","processTerritoryAndPowerGains","moneyGains","respectGains","wantedLevelGains","justice","calculateRespectGain","calculateMoneyGain","calculateWantedLevelGain","baseWanted","recordEarnedRespect","oldWanted","newWanted","gangName","calculatePower","gainRoll","multiplicativeGain","additiveGain","others","thisGang","thisPwr","thisChance","calculateTerritoryGain","winGang","loseGang","powerBonus","territoryGain","clash","won","baseDeathChance","modifiedDeathChance","killMember","getRespectNeededToRecruitMember","GangMember","getWantedPenalty","memberTotal","totalRespect","lostRespect","ascend","getDiscount","discount","moneyHacked","orgName","percTotalMoneyHacked","moneyGrown","percTotalMoneyGrown","performanceMult","cyclesOfWork","compName","pidCounter","tempCounter","has","MAX_SAFE_INTEGER","CinematicText","setI","done","setDone","lines","onDone","newI","auto","initValue","Hand","cards","addCards","removeByIndex","baseCheck","initialCheck","StockTickerTxButton","contractName","rs","CodingContractModal","setProps","setAnswer","contractType","autoFocus","specialReferenceIF","specialReferenceFOR","specialReferenceWHILE","memCheckGlobalKey","parseOnlyRamCalculate","dependencyMap","completedParses","Set","parseQueue","parseCode","moduleName","parseOnlyCalculateDeps","additionalModules","initialModule","nextModule","URLImportError","ImportError","unresolvedRefs","resolvedRefs","prefix","ident","k","dep","applyFuncRam","loadedFns","SyntaxError","currentModule","globalKey","internalToExternal","addRef","external","objectPrototypeProperties","getOwnPropertyNames","commonVisitors","Identifier","st","WhileStatement","walkDeeper","test","DoWhileStatement","ForStatement","update","IfStatement","consequent","alternate","MemberExpression","walk","importModuleName","spec","imported","codeCopy","numServerGrowthCycles","adjGrowthRate","numServerGrowthCyclesAdjusted","ipaddress","byteRange","RegExp","BitFlumeEvent","BitFlumeModal","litObj","Literatures","FactionInfo","offerHackingMission","augmentationRepRequirementMult","Illuminati","Daedalus","ECorp","MegaCorp","NWO","BitRunners","Silhouette","Netburners","CyberSec","Bladeburners","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","getAvailableCreatePrograms","AugmentationAccordion","displayName","Paper","unmountOnExit","stealthIcon","xmlns","viewBox","killIcon","ActionLevel","isActive","canIncrease","canDecrease","Autolevel","TeamSizeButton","baseRespect","baseMoney","hackWeight","strWeight","defWeight","dexWeight","agiWeight","chaWeight","StaticModal","BlinkingCursor","setOn","purchaseResleeve","augKey","generateResleeves","Resleeve","baseNumAugs","numAugs","augKeys","randKey","randAug","ownedAugNames","availableAugs","isAvailableForSleeve","HashRate","TravelAgencyRoot","destination","setDestination","startTravel","Fragment","opt_initFunc","sourceCode","sourceCodeLineOffset","acorn","PARSE_OPTIONS","initFunc_","paused_","polyfills_","functionCounter_","stepFunctions_","stepMatch","methodName","createScope","stripLocations_","State","stateStack","nodeConstructor","READONLY_DESCRIPTOR","configurable","writable","NONENUMERABLE_DESCRIPTOR","READONLY_NONENUMERABLE_DESCRIPTOR","VARIABLE_DESCRIPTOR","STEP_ERROR","SCOPE_REFERENCE","VALUE_IN_DESCRIPTOR","toStringCycles_","getErrorLineNumber","getErrorLineNumberMessage","appendCode","populateScope_","initGlobalScope","OBJECT_PROTO","FUNCTION_PROTO","initFunction","initObject","proto","OBJECT","initArray","initString","initBoolean","initNumber","initDate","initRegExp","initError","initMath","initJSON","thisInterpreter","EvalError","parseInt","strFunctions","decodeURI","encodeURI","wrapper","nativeFunc","throwException","URI_ERROR","FUNCTION","ARRAY","ARRAY_PROTO","REGEXP","REGEXP_PROTO","DATE","DATE_PROTO","identifierRegexp","var_args","calledWithNew","newFunc","createObjectProto","argsStr","SYNTAX_ERROR","parentScope","boxThis","isObject","getScope","strict","box","getPrototype","thisArg","func_","funcThis_","arguments_","arrayPseudoToNative","TYPE_ERROR","doneExec_","setNativeFunctionPrototype","valueOf","throwIfNullUndefined","arrayNativeToPseudo","descriptor","preventExtensions","getOwnPropertyDescriptor","setter","hasValue","pseudoDescriptor","propertyIsEnumerable","newArray","first","legalArrayLength","RANGE_ERROR","reverse","howmany","opt_begin","opt_end","opt_separator","iLength","element","isa","jLength","searchElement","opt_fromIndex","STRING","fromCharCode","compareString","locales","options","localeCompare","separator","limit","jsList","regexp","search","newSubstr","BOOLEAN","NUMBER","numConsts","fractionDigits","toExponential","ERROR","digits","toFixed","precision","toPrecision","radix","from","Function","UTC","rgx","populateRegExp","lastIndex","opt_message","newError","createObject","createErrorSubclass","EVAL_ERROR","REFERENCE_ERROR","myMath","mathConsts","numFunctions","myJSON","child","legalArrayIndex","Value","strs","pseudoRegexp","nativeRegexp","ignoreCase","multiline","createFunction","opt_constructor","illegalConstructor","asyncFunc","pseudoDate","opt_cycles","pseudo","native","nativeArray","pseudoArray","lineNum","charCodeAt","isGetter","TypeError","opt_descriptor","ReferenceError","defObj","firstNode","expression","createSpecialScope","opt_scope","getValueFromScope","prevNode","setValueToScope","nodeClass","end","isConstructor","getValue","Completion","NORMAL","BREAK","CONTINUE","RETURN","THROW","errorClass","lineNumErrorMsg","unwind","lineNumberMsg","cv","labels","isLoop","isSwitch","realError","errorTable","RangeError","URIError","createGetter_","funcThis","doneCallee_","doneArgs_","createSetter_","elements","n_","array_","doneLeft_","doneRight_","leftReference_","doneGetter_","leftValue_","leftValue","doneSetter_","setterValue_","rightValue","directEval_","funcNode","paramName","paramValue","argsList","evalNode","argsWithCallback","done_","throwValue","mode_","test_","doneInit_","doneObject_","variable_","object_","visited_","name_","gotPropName","props_","doneVariable_","doneProperty_","properties_","kinds","switchValue_","defaultCase_","index_","switchCase","matched_","tested_","doneBlock_","doneHandler_","doneFinalizer_","leftSide_","changeValue","returnValue","declarations","declarationNode","init_","doneBody_","TablePaginationActionsAll","useTheme","rowsPerPage","onPageChange","flexShrink","ml","aria-label","direction","InvitationModal","findIndex","fma","ex","canAccessBladeburner","inBladeburner","startBladeburner","automate","cls","help","stop","createTreantMarkup","childrenArray","htmlClass","HTMLclass","findNode","setParent","chart","nodeStructure","queue","getMultiplierHelper","getProductProductionMultiplier","canAccessCorporation","hasCorporation","startCorporation","corpName","additionalShares","currPos","nextPosName","Engine","_lastUpdate","updateGame","expForOtherSleeves","decrementAllCounters","checkCounters","Counters","autoSaveCounter","updateSkillLevelsCounter","updateDisplays","updateDisplaysLong","updateActiveScriptsDisplay","createProgramNotifications","augmentationsNotifications","passiveFactionGrowth","mechanicProcess","contractGeneration","counterName","counter","adjustedCycles","startTampering","timeOffline","numCyclesOffline","offlineReputation","offlineHackingIncome","offlineProductionFromHacknetNodes","hacknetProdInfo","timeOfflineString","_thisUpdate","requestAnimationFrame","LoadingScreen","setShow","loaded","setLoaded","reason","doLoad","minHeight","Tracking","Retirement","Investigation","Raid","typ","invalidArgs","Void","infiltrationData","techVendorMaxRam","techVendorMinRam","ServerType","All","Foreign","Owned","Purchased","ServerDropdown","isValidServer","serverType","serverName","GenericLocation","locContent","locName","Hospital","Special","TechVendor","University","Casino","getLocationSpecificContent","card","textAlign","fontWeight","red","ReactCard","hidden","Clubs","Spades","CursorPositions","positions","saveCursor","getCursor","column","libSource","allFactionAugs","factionAugs","factionAug","repFromDonation","TickerHeaderFormatData","longestName","longestSymbol","isNumber","ParseCommands","allCommands","flat","ParseCommand","inQuote","prevChar","escaped","TerminalHelpText","HelpTexts","analyze","backdoor","cat","check","expr","free","ifconfig","lscpu","mem","nano","sudov","unalias","outputHistory","startHack","startBackdoor","startAnalyze","finishHack","finishBackdoor","finishAnalyze","isHacknet","org","hackingSkill","security","hackingChance","numPort","getProgressText","getFile","getLitFile","getFilepath","cwd","filepath","lit","currDir","contractOpen","executeScanAnalyzeCommand","visited","depthQueue","newS","titleDashes","connectToServer","executeCommands","commandHistory","commandHistoryIndex","executeCommand","n00dlesServ","commandName","scananalyze","removeBracketsFromArrayString","strCpy","removeQuotesFromString","convert2DArrayToString","ans","len","nums","ways","padStart","matrix","spiral","u","col","playerAns","reach","intervals","numIntervals","interval","sanitizedResult","sanitizedAns","ansArr","ipInAns","maxCur","maxSoFar","hold1","MIN_SAFE_INTEGER","hold2","release1","release2","prices","hold","rele","cur","createTriangleRecurse","numLevels","createTriangle","triangle","dp","numRows","numColumns","currentRow","gridString","grid","obstacleGrid","roll","dfs","pair","playerAnsArray","resultInAnswer","numDigits","digitsArray","sanitizedPlayerAnsArr","helper","evaluated","multed","htmlID","requireHackingLevel","targetServer","numAugReq","AevumGalacticCybersystems","Sector12DeltaOne","AevumPolice","NewTokyoNoodleBar","Sector12JoesGuns","generalMethods","augmentationMethods","bladeburnerMethods","corporationMethods","gangMethods","serverMethods","AllSoftwarePositions","AllITPositions","AllNetworkEngineerPositions","SecurityEngineerPositions","AllTechnologyPositions","AllBusinessPositions","AllAgentPositions","AllSecurityPositions","AllSoftwareConsultantPositions","AllBusinessConsultantPositions","SoftwarePositionsUpToHeadOfEngineering","SoftwarePositionsUpToLeadDeveloper","BusinessPositionsUpToOperationsManager","WaiterOnly","EmployeeOnly","PartTimeWaiterOnly","PartTimeEmployeeOnly","OperationsManagerOnly","CEOOnly","Sector12CarmichaelSecurity","advertisingMult","employeeChaMult","employeeCreMult","employeeEffMult","employeeIntMult","productionMult","productProductionMult","salesMult","sciResearchMult","storageMult","elemId","newElem","cloneNode","parentNode","replaceChild","maxClearanceLevel","startingSecurityLevel","AevumCasino","Sector12CityHall","WorldStockExchange","textfield","InteractiveTutorialRoot","contents","canNext","square","nobackground","Overview","Loading","openedMixin","transitions","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","breakpoints","up","Drawer","styled","shouldForwardProp","boxSizing","borderLeft","listitem","SidebarRoot","hackingOpen","setHackingOpen","characterOpen","setCharacterOpen","worldOpen","setWorldOpen","helpOpen","setHelpOpen","flashTerminal","flashStats","flashActiveScripts","flashHacknet","flashCity","flashTutorial","augmentationCount","invitationsCount","programCount","canCreateProgram","canOpenFactions","canOpenAugmentations","canOpenSleeves","canCorporation","canGang","canJob","canStockMarket","canBladeburner","clickTerminal","clickCreateScripts","clickStats","clickActiveScripts","clickCreateProgram","clickFactions","clickAugmentations","clickHacknet","clickCity","clickTravel","clickJob","clickBladeburner","clickGang","clickTutorial","handleShortcuts","altKey","timeout","clsx","badgeContent","AugmentationsRoot","InstalledAugmentations","sourceAugs","Alphabetically","aug1","aug2","dense","Improvements","MultiplierTable","PlayerMultipliers","augP","calculateAugmentedStats","PurchasedAugmentations","SourceFileMinus1","OwnedSourceFiles","sourceSfs","sf1","sf2","sfObj","SourceFileAccordion","DevMenuRoot","General","addMoney","TransitionProps","expandIcon","bigNumber","modifyExp","modifier","modifyKarma","resetExperience","modifyFactionRep","AllFaction","modifyFactionFavor","labelId","arial-label","augmentation","setAugmentation","validSFN","setSF","sfN","sfLvl","setAllSF","setProgram","AllPrograms","Servers","setServer","colSpan","setCompany","modifyCompanyRep","AllCompanies","modifyCompanyFavor","modifyBladeburnerRank","modify","modifyBladeburnerCycles","modifyGangCycles","modifyCorporationCycles","CodingContracts","setCodingcontract","cc","stockPrice","setStockPrice","setStockSymbol","processStocks","inputSymbols","SM","stocks","TimeSkip","timeskip","reload","BladeburnerRoot","travelOpen","setTravelOpen","inFaction","TravelModal","nopadding","preformatted","Line","Console","scrollHook","setCommand","consoleHistoryIndex","setConsoleHistoryIndex","scrollToBottom","scrollTop","scrollHeight","id2","prevCommand","currentTarget","spellCheck","AllPages","tab","GeneralActionPage","GeneralActionList","actions","GeneralActionElem","computedActionTimeCurrent","actionData","ContractPage","ContractList","ContractElem","Contracts","StealthIcon","KillIcon","OperationPage","OperationList","OperationElem","TeamSizeModal","BlackOpPage","BlackOpList","blackopName","blackop","BlackOpElem","hasReqdRank","SkillPage","valid","onUpgrade","SkillList","SkillElem","canLevel","GangRoot","management","setManagement","ManagementSubpage","GangStats","territoryMult","territoryStr","BonusTime","CyclerPerSecond","bonusMillis","GangMemberList","setFilter","onRecruit","GangMemberUpgradePopup","NextReveal","GangMemberUpgradePanel","filterUpgrades","weaponUpgrades","armorUpgrades","vehicleUpgrades","rootkitUpgrades","augUpgrades","purchasedUpgrade","upgradeButton","asc","closePopup","createDescription","Popup","keyDown","Element","debug","GangMemberAccordion","panelInitiallyOpened","headerContent","panelContent","BBAccordion","handleHeaderClick","panelOpened","setState","headerClass","AccordionPanel","opened","panelClass","shouldComponentUpdate","nextProps","GangMemberAccordionContent","onAscend","onTaskChange","GangMemberStats","AscensionPopup","preAscend","getCurrentAscensionMults","postAscend","getAscensionMultsAfterAscend","TaskSelector","setCurrentTask","TaskDescription","RecruitButton","RecruitPopup","setName","recruit","onKeyUp","TerritorySubpage","formatTerritory","gangNames","g","clashVictoryChance","otherGangTerritory","CorporationRoot","setDivisionName","canExpand","industryType","MainPanel","CityTabs","setCity","cityStateSetter","countEmployee","SwitchButton","manualMode","switchMode","ManualManagement","setEmployee","employeePositionSelectorInitialValue","employeePositions","positionNames","nf","effCre","effEff","AutoAssignJob","numJob","numUnassigned","AutoManagement","vechain","totalMorale","totalHappiness","totalEnergy","totalSalary","avgMorale","avgHappiness","avgEnergy","getOfficeProductivity","forProduct","getBusinessFactor","IndustryOffice","upgradeOfficeSizeOpen","setUpgradeOfficeSizeOpen","throwPartyOpen","setThrowPartyOpen","employeeManualAssignMode","setEmployeeManualAssignMode","UpgradeSizeButton","upgradeSize","UpgradeOfficeSizeModal","upgradeCost","upgradeCost15","maxMult","dividedBy","maxNum","multIncrease","upgradeCostMax","reFac","robFac","aiFac","advFac","prodMats","hwFac","makesProducts","getProductDescriptionText","getMaximumNumberProducts","additional","hasMaximumNumberProducts","calculateProductionFactors","multSum","cityMult","updateWarehouseSizeUsed","prodName","newInd","employeeSalary","officeLoc","processMaterialMarket","processProductMarket","popularityGain","awarenessGain","processMaterials","processProducts","wh","foo","buyAmt","maxAmt","smartBuy","smartSupplyStore","worseAmt","totalSize","freeSpace","maxProd","totalMatSize","tmp","reqMatName","normQty","producableFrac","reqMatQtyNeeded","fooProd","fooI","businessFactor","advertisingFactor","getAdvertisingFactors","marketFactor","getMarketFactor","markupLimit","numerator","sqrtNumerator","sqrtDenominator","denominator","sqrt","optimalPrice","maxSell","sellAmt","expI","amtStr","expIndustry","expWarehouse","engrProd","mgmtProd","opProd","mgmtFactor","processProduct","totalProfit","netStorageSize","pCost","sCostString","businessProd","calculateEffectWithFactors","awarenessFac","popularityFac","ratioFac","updateResearchTree","expFac","linearFac","morale","happiness","energy","det","cyclesUntilRaise","trainingEff","prodBase","pro","ThrowPartyModal","setCost","canParty","MakeProductButton","makeOpen","setMakeOpen","hasMaxProducts","createProductButtonText","Text","advertisingInfo","advertisingFactors","totalAdvertisingFac","convertEffectFacToGraphic","ResearchPopup","Upgrades","IndustryOverview","MakeProductModal","allCities","design","setDesign","marketing","setMarketing","createProductPopupText","defaultValue","tpe","boxContent","nodeAlign","rootOrientation","siblingSeparation","connectors","Treant","allResearch","sanitizedName","WarehouseRoot","smartSupplyOpen","setSmartSupplyOpen","canAffordUpgrade","stateText","mats","isRelevantMaterial","breakdown","IndustryWarehouse","EmptyWarehouse","Leftover","setChecked","control","SmartSupplyModal","ProductElem","sellOpen","setSellOpen","limitOpen","setLimitOpen","discontinueOpen","setDiscontinueOpen","marketTaOpen","setMarketTaOpen","nfB","hasUpgradeDashboard","sellButtonText","limitProductionButtonText","DiscontinueProductModal","LimitProductProductionModal","setLimit","limitProductProduction","SellProductModal","iQty","setQty","setPx","initialPrice","MarketTA2","ProductMarketTaModal","MaterialElem","purchaseMaterialOpen","setPurchaseMaterialOpen","exportOpen","setExportOpen","sellMaterialOpen","setSellMaterialOpen","materialMarketTaOpen","setMaterialMarketTaOpen","tutorial","purchaseButtonText","ExportModal","setIndustry","setAmt","removeExport","currentDivision","possibleCities","newCost","setNewCost","MaterialMarketTaModal","SellMaterialModal","setPrice","BulkPurchaseText","parsedAmt","amount","matSize","BulkPurchase","setBuyAmt","bulkPurchase","PurchaseMaterialModal","purchaseMaterial","IndustryProductEquation","reqs","reqAmt","raw","tex","ExpandNewCity","ExpandIndustryTab","possibleIndustries","newIndustry","multRows","appendMult","issuedShares","DividendsStats","PublicButtons","PrivateButtons","BribeButton","findInvestorsopen","setFindInvestorsopen","goPublicopen","setGoPublicopen","fundingAvailable","fundingRound","findInvestorsTooltip","upgradeData","sellSharesOpen","setSellSharesOpen","buybackSharesOpen","setBuybackSharesOpen","issueNewSharesOpen","setIssueNewSharesOpen","issueDividendsOpen","setIssueDividendsOpen","sellSharesOnCd","sellSharesTooltip","issueNewSharesOnCd","issueNewSharesTooltip","canBribe","playerEarnings","storedTime","LevelableUpgrade","UU","BribeFactionModal","setStock","selectedFaction","setSelectedFaction","getRepText","bribe","SellSharesModal","setShares","sell","stockSaleResults","newSharePrice","newSharesUntilUpdate","BuybackSharesModal","buybackPrice","IssueDividendsModal","setPercent","canIssue","EffectText","maxNewSharesUnrounded","maxNewShares","newShares","IssueNewSharesModal","issueNewShares","privateShares","FindInvestorsModal","percShares","roundMultiplier","funding","investShares","GoPublicModal","initialSharePrice","goPublic","InfiltrationRoot","setStart","startingDifficulty","totalStats","calcDifficulty","StartingDifficulty","Difficulty","cancel","arrowPart","arrow","Intro","Stage","minigames","SlashGame","BracketGame","BackwardGame","BribeGame","CheatCodeGame","Cyberpunk2077Game","MinesweeperGame","WireCuttingGame","setLevel","stage","setStage","Countdown","results","setResults","gameIds","setGameIds","lastGames","nextGameId","ids","setupNextGame","pushResult","next","stageComponent","onFinish","Minigame","MiniGame","onSuccess","Sell","onFailure","automated","setX","difficulties","setRight","generateLeftSide","char","shiftKey","getChar","guarding","setGuarding","words","makeAnswer","guess","setGuess","nextGuess","choices","positive","option","negative","array","shuffleArray","makeChoices","setIndex","newIndex","arrows","generateCode","symbols","puzzle","randChar","generatePuzzle","generateAnswer","setPos","cell","move","mines","minefield","generateEmptyField","generateMinefield","memoryPhase","setMemoryPhase","reduce","fieldEquals","wiresmin","wiresmax","rules","colorNames","blue","wires","numWires","wireColors","generateWires","cutWires","setCutWires","questions","numQuestions","questionGenerators","randomPositionQuestion","randomColorQuestion","generateQuestion","question","_","wire","wireNum","shouldCut","wiresToBeCut","shouldBeCut","cutColor","Victory","quitInfiltration","levelBonus","SortOption","Cost","Strength","Defense","Dexterity","Agility","Charisma","AverageCombatStats","AverageAllStats","TotalNumAugmentations","getAverage","SortFunctions","ResleeveRoot","setSort","sortFunction","opt","resleeve","totalAugmentationCost","ResleeveElem","setAug","currentAug","CYCLES_PER_SEC","WorkInProgressRoot","unfocus","stopText","penaltyString","numBars","progressBar","GameOptionsRoot","importInput","execTime","setExecTime","logSize","setLogSize","portSize","setPortSize","terminalSize","setTerminalSize","autosaveInterval","setAutosaveInterval","suppressMessages","setSuppressMessages","suppressFactionInvites","setSuppressFactionInvites","suppressTravelConfirmations","setSuppressTravelConfirmations","suppressBuyAugmentationConfirmation","setSuppressBuyAugmentationConfirmation","suppressHospitalizationPopup","setSuppressHospitalizationPopup","suppressBladeburnerPopup","setSuppressBladeburnerPopup","disableHotkeys","setDisableHotkeys","disableASCIIArt","setDisableASCIIArt","disableTextEffects","setDisableTextEffects","enableBashHotkeys","setEnableBashHotkeys","enableTimestamps","setEnableTimestamps","setLocale","diagnosticOpen","setDiagnosticOpen","deleteGameOpen","setDeleteOpen","themeEditorOpen","setThemeEditorOpen","gutterBottom","sm","newValue","valueLabelDisplay","marks","method","src","alt","File","FileReader","FileList","ii","files","reader","onload","readAsText","onConfirm","confirmationText","ServerAccordion","FileDiagnosticModal","ips","ConfirmationModal","ColorEditor","onColorChange","defaultColor","hideTextfield","newColor","hex","ThemeEditorModal","customTheme","setCustomTheme","importedTheme","SleeveRoot","FAQOpen","setFAQOpen","SleeveElem","statsOpen","setStatsOpen","earningsOpen","setEarningsOpen","augmentationsOpen","setAugmentationsOpen","abc","setABC","doing","SleeveAugmentationsModal","StatsElement","MoreStatsModal","MoreEarningsModal","universitySelectorOptions","gymSelectorOptions","possibleJobs","forbiddenCompanies","otherSleeve","possibleFactions","forbiddenFactions","second","facInfo","universities","gyms","Synchronize","canDo","getABC","s0","setS0","setS1","setS2","validActions","detailsF","details","details2","detail","FAQModal","HacknetRoot","purchaseMultiplier","setPurchaseMultiplier","purchaseMultiplierOnClicks","multiplier","onClicks","GeneralInfo","HacknetNodeElem","purchaseMult","upgradeLevelContent","upgradeRamContent","upgradeCoresContent","upgradeLevelCost","upgradeRamCost","upgradeCoreCost","effectText","costPerLevel","hasTargetServer","HacknetServerElem","upgradeCacheContent","upgradeCacheCost","HashUpgradeModal","HacknetUpgradeElem","selectedServer","setSelectedServer","effect","canPurchase","MultiplierButton","MultiplierButtons","buttons","btnProps","PlayerInfo","hasServers","PurchaseButton","CompanyLocation","quitOpen","setQuitOpen","isEmployedHere","onQuit","QuitJobModal","GymLocation","train","HospitalLocation","btnStyle","getHealed","currHp","SlumsLocation","shopliftChance","robStoreChance","mugChance","larcenyChance","drugsChance","bondChance","armsChance","homicideChance","gtaChance","kidnapChance","assassinateChance","heistChance","SpecialLocation","handleBladeburner","new","handleResleeving","renderBladeburner","CreateCorporationModal","canSelfFund","ServerButton","TechVendorLocation","purchaseServerButtons","RamButton","TorButton","purchaseTorRouter","CoresButton","maxCores","PurchaseServerModal","setHostname","tryToPurchaseServer","TravelConfirmationModal","UniversityLocation","take","dataStructuresCost","networksCost","algorithmsCost","managementCost","leadershipCost","GameType","CasinoLocation","game","setGame","Coin","Slots","Roulette","Blackjack","Result","bet","canStartGame","playerHand","deck","safeDrawCard","dealerHand","gameInProgress","Pending","getTrueHandValue","finishGame","Tie","PlayerWonByBlackjack","DealerWon","hand","flatMap","handValues","getHandValue","valuesUnder21","isHandBusted","newHand","newDealerHand","PlayerWon","dealerHandValue","playerHandValue","isPlayerWinResult","betInput","wager","wagerInvalid","wagerInvalidHelperText","startGame","Deck","playerHandValues","getHandDisplayValues","dealerHandValues","wagerOnChange","helperText","playerHit","playerStay","startOnClick","elevation","numDecks","shuffle","drawCard","isEmpty","CoinFlip","investment","setInvestment","setResult","setStatus","playLock","setPlayLock","play","letter","correct","redNumbers","strategies","Red","payout","Black","Odd","Even","High","Low","Third1","Third2","Third3","Single","rng","canPlay","setCanPlay","setN","lock","setLock","strategy","setStrategy","playerWin","isRed","currentNumber","getPayout","payLines","SlotMachine","locks","setLocks","stoppedOne","getTable","getPaylineData","payline","point","countSequence","checkWinnings","CorruptableText","setContent","randFrom","randomize","LocationLetter","ASCIICity","locationLettersRegex","letterMap","lineElems","elems","startI","endI","locationI","ListCity","locationButtons","LocationCity","ProgramsRoot","populate","exclude","lastFilename","lastCode","lastPosition","Root","editorRef","setFilename","setCode","setRAM","optionsOpen","setOptionsOpen","setOptions","insertSpaces","getPosition","textFile","updateRAM","maybeSave","ctrlKey","metaKey","beforeMount","monaco","languages","registerCompletionItemProvider","provideCompletionItems","suggestions","kind","CompletionItemKind","insertText","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","typescript","javascriptDefaults","addExtraLib","typescriptDefaults","onMount","editor","loading","defaultLanguage","newCode","pretty","beautifyCode","indent_with_tabs","indent_size","brace_style","OptionsModal","setTheme","setInsertSpaces","points","unassignFromTask","statWeight","respectMult","calc","difficultyPerCycles","getGainedAscensionPoints","getAscensionResults","applyUpgrade","respectToDeduct","lookup","makeScriptBlob","uurls","shouldCompile","_getScriptUrls","loadedModule","depScript","seen","urlStack","transformedCode","unmodified","suffix","importedScript","urls","ScriptUrl","full","empty","MilestonesRoot","milestones","highestMilestone","milestone","ActionTimer","paragraph","overflowWrap","TerminalRoot","setKey","doScroll","hook","scrollIntoView","debounce","maxWait","TerminalInput","terminalInput","possibilities","setPossibilities","saveValue","moveTextCursor","inputLength","selectionStart","autoComplete","inputRef","semiColonIndex","allPos","determineAllPossibilitiesForTabCompletion","tabCompletion","selectionEnd","mod","inputText","delStart","modifyInput","parentDirPath","evaledParentDirPath","addAllCodingContracts","cct","addAllLitFiles","addAllPrograms","addAllScripts","processFilepath","addAllTextFiles","addAllDirectories","subdirs","getSubdirectories","t_parentDirPath","convertParentPath","isCommand","cmd","t_cmd","iphostname","addAllMessages","t_dir","processFile","subdir","remaining","allPossibilities","oldValue","longestStartSubstr","TutorialRoot","ActiveScriptsRoot","ScriptProduction","prodRateSinceLastAug","ServerAccordions","setRowsPerPage","serverToScriptMap","filtered","rowsPerPageOptions","newPage","onRowsPerPageChange","ActionsComponent","paddedName","barOptions","headerTxt","ServerAccordionContent","disablePadding","noborder","WorkerScriptAccordion","killScript","onlineMps","onlineEps","FactionsRoot","openFaction","acceptInvitation","HackingMissionRoot","GangNames","MainPage","onAugmentations","sleevesOpen","setSleevesOpen","gangOpen","setGangOpen","isPlayersGang","favorToDonate","canDonate","canPurchaseSleeves","startHackingContracts","startFieldWork","startSecurityWork","FactionRoot","purchasingAugs","setPurchasingAugs","routeToMainPage","AugmentationsPage","getAugs","switchSortOrder","newOrder","augName1","augName2","getAugsSortedByCost","getAugsSortedByReputation","Purchasable","canBuy","hasReq","hasRep","cantBuy","getAugsSortedByPurchasable","getAugsSorted","purchasable","purchaseableAugmentation","augListElems","ownedElem","Requirements","PurchaseableAugmentation","hasCost","btnTxt","placement","PurchaseAugmentationModal","DonateOption","donateAmt","setDonateAmt","noformat","Info","CreateGangModal","CovenantPurchasesRoot","setUpdate","purchaseDisabled","upgradePanels","CovenantSleeveMemoryUpgrade","getPurchaseCost","maxMemory","purchaseBtnDisabled","purchaseBtnContent","LastEmployer","LastJob","Employers","Intelligence","bn5Stat","BladeburnerMults","CurrentBitNode","MoneyModal","convertMoneySourceTrackerToString","parts","hacknetnode","hospitalization","infiltration","CharacterStats","moneyOpen","setMoneyOpen","timeRows","StockMarketRoot","Purchase4SMarketDataTixApiAccessButton","PurchaseWseAccountButton","PurchaseTixApiAccessButton","Purchase4SMarketDataButton","InfoAndPurchases","StockTickers","setTickerDisplayMode","AllStocks","watchlistSymbols","setWatchlistSymbols","tickers","stockMarketProp","rerenderAllTickers","sanitizedWatchlist","SelectorOrderType","StockTicker","setOrderType","Market","tickerOpen","setTicketOpen","modalProps","setModalProps","placeText","place","getQuantity","hasOrderAccess","Limit","Stop","getBuyTransactionCostContent","getSellTransactionCostContent","playerMoney","localesWithLongPriceFormat","StockTickerHeaderText","stockPriceFormat","spacesAllottedForStockPrice","spacesAfterStockName","spacesBeforePrice","hdrText","plusOrMinus","StockTickerOrderList","StockTickerOrder","posTxt","LongPosition","percentageGains","ShortPosition","StockTickerPositionText","PlaceOrderModal","level0","level1","level2","level3","BitNodePortal","portalOpen","setPortalOpen","bitNode","cssClass","BitverseRoot","destroyed","destroySequence","setDestroySequence","nextSourceFileFlags","PortalModal","bitNodeKey","maxSourceFileLevel","newLevel","CinematicLine","setLength","ms","newLength","advance","cellNone","CharacterOverview","getComputedStyle","srcFile","sourceFileObject","incMult","decMult","normalServer","evaledDir","zip","JSZip","zipFn","generateAsync","FileSaver","saveAs","sanitizedExpr","used","avail","usedPercent","numArgs","incorrectUsage","newPath","allPrograms","allScripts","allTextFiles","allContracts","allMessages","folders","handleFn","parsedFn","firstParentDir","msgOrLit","postSegments","segments","filesPerRow","groups","numThreads","sourcePath","destPath","destFile","rsObj","delTarget","executableName","runContract","runProgram","commandArgs","runArgs","permissive","threadFlag","tailFlag","hasRoot","maxHostname","maxIP","tRes","sRes","candidates","args2","candidate","headers","currRunningScripts","numSpacesScript","spacesScript","numSpacesPid","spacesPid","numSpacesThread","spacesThread"],"mappings":"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GACX39E,KAAK49E,KAAO,CAAC,GAAI,IACjB59E,KAAK69E,IAAM,GACX79E,KAAK89E,KAAO,CAAC,GAAI,IACjB99E,KAAK2nD,MAAQ,KACb3nD,KAAKgyD,GAAK,GACVhyD,KAAK09E,IAAM,EACX,MACF,IAAK,SACH19E,KAAK29E,IAAM,GACX39E,KAAK49E,KAAO,CAAC,GAAI,IACjB59E,KAAK69E,IAAM,GACX79E,KAAK89E,KAAO,CAAC,GAAI,IACjB99E,KAAK2nD,MAAQ,IACb3nD,KAAKgyD,GAAK,GACVhyD,KAAK09E,IAAM,EACX,MACF,IAAK,OACH19E,KAAK29E,IAAM,GACX39E,KAAK49E,KAAO,CAAC,GAAI,IACjB59E,KAAK69E,IAAM,GACX79E,KAAK89E,KAAO,CAAC,GAAI,IACjB99E,KAAK2nD,MAAQ,IACb3nD,KAAKgyD,GAAK,EACVhyD,KAAK09E,IAAM,EACX,MACF,IAAK,SACH19E,KAAK29E,IAAM,GACX39E,KAAK49E,KAAO,CAAC,GAAI,IACjB59E,KAAK69E,IAAM,GACX79E,KAAK89E,KAAO,CAAC,GAAI,IACjB99E,KAAK2nD,MAAQ,IACb3nD,KAAKgyD,GAAK,GACVhyD,KAAK09E,IAAM,KACX,MACF,IAAK,QACH19E,KAAK29E,IAAM,GACX39E,KAAK49E,KAAO,CAAC,GAAI,IACjB59E,KAAK69E,IAAM,GACX79E,KAAK89E,KAAO,CAAC,GAAI,IACjB99E,KAAK2nD,MAAQ,KACb3nD,KAAKgyD,GAAK,EACVhyD,KAAK09E,IAAM,EACX,MACF,IAAK,WACH19E,KAAK29E,IAAM,GACX39E,KAAK49E,KAAO,CAAC,GAAI,IACjB59E,KAAK69E,IAAM,GACX79E,KAAK89E,KAAO,CAAC,GAAI,IACjB99E,KAAK2nD,MAAQ,IACb3nD,KAAKgyD,GAAK,GACVhyD,KAAK09E,IAAM,EACX,MACF,IAAK,YACH19E,KAAK29E,IAAM,GACX39E,KAAK49E,KAAO,CAAC,GAAI,IACjB59E,KAAK69E,IAAM,GACX79E,KAAK89E,KAAO,CAAC,GAAI,IACjB99E,KAAK2nD,MAAQ,IACb3nD,KAAKgyD,GAAK,IACVhyD,KAAK09E,IAAM,EACX,MACF,IAAK,cACH19E,KAAK29E,IAAM,GACX39E,KAAK49E,KAAO,CAAC,EAAG,IAChB59E,KAAK69E,IAAM,GACX79E,KAAK89E,KAAO,CAAC,GAAI,IACjB99E,KAAK2nD,MAAQ,IACb3nD,KAAKgyD,GAAK,IACVhyD,KAAK09E,IAAM,IACX,MACF,IAAK,QACH19E,KAAK29E,IAAM,GACX39E,KAAK49E,KAAO,CAAC,GAAI,IACjB59E,KAAK69E,IAAM,GACX79E,KAAK89E,KAAO,CAAC,GAAI,IACjB99E,KAAK2nD,MAAQ,IACb3nD,KAAKgyD,GAAK,IACVhyD,KAAK09E,IAAM,EACX,MACF,IAAK,SACH19E,KAAK29E,IAAM,GACX39E,KAAK49E,KAAO,CAAC,GAAI,GACjB59E,KAAK69E,IAAM,GACX79E,KAAK89E,KAAO,CAAC,GAAI,GACjB99E,KAAK2nD,MAAQ,KACb3nD,KAAKgyD,GAAK,GACVhyD,KAAK09E,IAAM,EACX,MACF,IAAK,WACH19E,KAAK29E,IAAM,GACX39E,KAAK49E,KAAO,CAAC,GAAI,IACjB59E,KAAK69E,IAAM,GACX79E,KAAK89E,KAAO,CAAC,GAAI,GACjB99E,KAAK2nD,MAAQ,KACb3nD,KAAKgyD,GAAK,GACVhyD,KAAK09E,IAAM,GACX,MACF,IAAK,sBACL,IAAK,WACH,MACF,QACEr9E,QAAQ2nB,MAAO,oCAAmChoB,KAAKnD,OAM7DkhF,gBAGE,MACMC,EAAsB,EADKx9E,KAAKitB,SAAWztB,KAAKgyD,GAAM,IAKtDisB,EAAqB,EADKz9E,KAAKitB,SAAWztB,KAAKgyD,GAAM,IAEvDxxD,KAAKitB,SAAW,IAClBztB,KAAK69E,KAAOI,EACRj+E,KAAK69E,IAAM79E,KAAK89E,KAAK,KACvB99E,KAAK69E,IAAM79E,KAAK89E,KAAK,IAEvB99E,KAAK2nD,OAAS,EAAIq2B,IAElBh+E,KAAK69E,KAAO,EAAII,EACZj+E,KAAK69E,IAAM79E,KAAK89E,KAAK,KACvB99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ACA,IACA,wBACA,4BACA,yCACA,uDACA,IACA,8BACA,aACA,oBACA,qBACA,+CACA,YACA,IACA,OACA,IACA,aACA,KACA,sBACA,iBACA,MACA,IAIA,oDACA,8CACA,gCACA,kEACA,YACA,wBACA,4BACA,yCACA,SACA,oBACA,4CACA,OACA,IACA,IACA,MAIA,uDACA,8CACA,sBACA,0DACA,IACA,yCACA,wBACA,mDACA,4BACA,mCACA,mBACA,gBACA,IACA,yCACA,qEACA,yBACA,uBACA,qBACA,oBACA,2BACA,+BACA,uDACA,iCACA,8FACA,IACA,8BACA,oBACA,+DACA,wEACA,4CACA,eACA,IACA,0BACA,OACA,IACA,qBACA,gBACA,IACA,MAIA,gDACA,8CACA,gCACA,8DACA,eACA,wBACA,4BACA,yCACA,sBACA,SACA,oBACA,mDACA,OACA,IACA,YACA,IACA,MAIA,mDACA,8CACA,0CACA,kEACA,4DACA,gCACA,wBACA,WACA,oCACA,kBACA,kEACA,IACA,kBACA,IACA,yBACA,mDACA,IACA,gBACA,IACA,MAIA,wDACA,8CACA,0CACA,yGACA,kEACA,+BACA,wBACA,WACA,mCACA,eACA,kEACA,IACA,kBACA,IACA,wBACA,mDACA,IACA,gBACA,IACA,MAIA,iDACA,8CACA,+BACA,6DACA,wBACA,4BACA,+DACA,kCACA,iDACA,eACA,IACA,IACA,gBACA,IACA,MAEA,gBACA,oCACA,8CAEA,wCACA,2BACA,IAEA,0CACA,mBACA,kDACA,4CACA,sBACA,yBACA,sBACA,aACA,IACA,IACA,uBACA,IACA,eACA,KACA,QAEA,2DACA,8CACA,eACA,gBACA,0CACA,wFACA,IACA,wBACA,IACA,MACA,KAQJm/E,EAAYv/E,UAAUyjI,WAAa,SAAUhlD,GAC3C,IACI8lD,EADAN,EAAkBn/H,KAGtBy/H,EAAU,SAAUniI,GAElB,OADAA,EAAQogE,OAAOpgE,GACX6hI,EAAgBmB,iBAElBtgI,KAAKxF,KAAO8C,EACL0C,MAGA1C,GAGX0C,KAAKmjI,OAASnj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AMuuH,EAA6B,CACxC,oDACA,GACA,0EACA,kFACA,kFACA,+EACA,0EACA,iEACA,yEACA,uEACA,4DACA,mEACA,wFACA,0EACA,8EACA,gEACA,8FACA,gEACA,4EACA,8EACA,yFACA,wFACA,yEACA,uFACA,6FACA,yEACA,4FACA,sFACA,qEACA,mEACA,4FACA,6FACA,6EACA,2FACA,sFACA,wFACA,mEACA,8EAGWC,EAA4B,CACvCjrE,MAAO,CACL,6BACA,IACA,4FACA,uGACA,yHACA,kGACA,IACA,4BACA,IACA,mHACA,yHACA,4CACA,IACA,4BACA,IACA,6DACA,IACA,WACA,IACA,2HACA,4HACA,IACA,+BACA,IACA,8GACA,IACA,uHACA,uCACA,IACA,uDACA,KAEFkrE,QAAS,CACP,SACA,IACA,0GACA,mHACA,kHACA,iCAEFC,SAAU,CACR,WACA,IACA,6FACA,IACA,+BACA,KAEF/rF,IAAK,CACH,qBACA,IACA,yEACA,IACA,oHACA,oDACA,IACA,yGAEFgsF,IAAK,CACH,aACA,IACA,6EACA,IACA,aACA,IACA,cACA,IACA,mBAEFvpC,GAAI,CACF,WACA,IACA,yGACA,iFACA,IACA,qBACA,IACA,WACA,IACA,UAEFwpC,MAAO,CACL,gCACA,IACA,+HACA,uDACA,kIACA,IACA,gCACA,IACA,gGACA,IACA,mCAEF13H,MAAO,CACL,QACA,IACA,mIACA,wIAEFkwH,IAAK,CACH,MACA,IACA,mIACA,0IAEF1uH,QAAS,CACP,wBACA,IACA,6GACA,sIACA,kEAEFi3E,SAAU,CACR,8BACA,IACA,mFACA,IACA,4GACA,IACA,kDACA,IACA,0CACA,IACA,0CACA,KAEFk/C,KAAM,CACJ,iCACA,IACA,oFACA,IACA,oBACA,IACA,WACA,IACA,oBACA,IACA,sFAEFC,KAAM,CACJ,OACA,IACA,iIACA,iCAEF78H,KAAM,CACJ,OACA,IACA,uHACA,KAEFo1H,KAAM,CACJ,iBACA,IACA,yHACA,0HACA,mEACA,IACA,aACA,IACA,qBAEF9lG,KAAM,CACJ,2GAEFhT,SAAU,CAAC,WAAY,IAAK,6CAC5BwgH,SAAU,CAAC,WAAY,IAAK,+CAC5Bt7H,KAAM,CACJ,+BACA,IACA,aACA,IACA,4EACA,IACA,6EACA,4EACA,iFACA,4DACA,IACA,mCACA,IACA,qEACA,IACA,oCACA,IACA,sFAEFC,QAAS,CACP,UACA,IACA,4CACA,2HACA,uHACA,4EAEFG,GAAI,CACF,4BACA,IACA,iIACA,sDACA,IACA,8FACA,IACA,yHACA,IACA,YACA,IACA,wEACA,IACA,oBACA,IACA,iEACA,IACA,kBACA,IACA,uFACA,IACA,8BAEFm7H,MAAO,CAAC,QAAS,IAAK,yDAEtBC,IAAK,CACH,qCACA,IACA,6HACA,2HACA,gFACA,IACA,iBACA,IACA,uBACA,IACA,4HACA,kFAEFrjF,GAAI,CACF,kBACA,IACA,6FACA,6FACA,kCACA,IACA,kFACA,kBACA,aACA,IACA,iEACA,IACA,iCAEFsjF,KAAM,CACJ,mBACA,IACA,sGACA,2FACA,mBAEFp7H,GAAI,CAAC,KAAM,IAAK,6DAEhBsD,GAAI,CACF,YACA,IACA,6GACA,IACA,mDAEF9D,IAAK,CACH,+CACA,IACA,iCACA,IACA,sHACA,2GACA,gEACA,2DACA,2FACA,IACA,kHACA,iFACA,KAEFtB,KAAM,CACJ,OACA,IACA,6HACA,4CAEF,eAAgB,CACd,4BACA,IACA,kGACA,wGACA,4EACA,IACA,uGACA,qGACA,0BACA,IACA,iHACA,yGACA,UACA,IACA,2GACA,uEAEF4B,IAAK,CACH,iCACA,IACA,2EACA,oGACA,oCACA,kFAEFu7H,MAAO,CAAC,QAAS,IAAK,qEAEtB5zB,KAAM,CACJ,+BACA,IACA,oHACA,uHACA,oEACA,IACA,0BACA,IACA,gFACA,IACA,4BAEFznB,IAAK,CACH,MACA,IACA,yGACA,gCAEFs7C,QAAS,CACP,uBACA,IACA,mFACA,IACA,iDACA,IACA,gBACA,IACA,kCACA,IACA,YACA,IACA,mGAEFl3H,KAAM,CACJ,2BACA,IACA,iGACA,oGACA,0CACA,IACA,mGACA,iDACA,IACA,kG,8wBClVG,MAAMy7C,GAA8B,+BAEjB,MAFiB,yBAId,IAJc,8BAKnB,GALmB,wBAON,CAAC,IAAIkuC,IAAQ,cAAanlG,IAAUC,QAAW,aAPzC,wBAU1B,GAV0B,kBAc/B,KAEV4gD,QAAQnZ,EAAiB3f,EAAiB8kG,GACpB,OAAhB3vH,KAAKuqB,SACTvqB,KAAKuqB,OAAO69E,UAAatlG,IAAUE,WAAa2sH,EAAU,IACtD3vH,KAAKuqB,OAAO69E,SAAW,KAAMpoG,KAAKquG,aAAa7jE,EAAQ3f,GAAQ,GACnEw9E,IAAev0F,QAGjBgiF,OAAOlV,GACL5gF,KAAKy1I,cAAcn6I,KAAKslF,GACpB5gF,KAAKy1I,cAAcz6I,OAASquB,IAASjC,qBACvCpnB,KAAKy1I,cAAcv5I,OAAO,EAAG8D,KAAKy1I,cAAcz6I,OAASquB,IAASjC,qBAEpEihF,IAAev0F,OAGjB+E,MAAMzc,GACJ4D,KAAK81F,OAAO,IAAImS,IAAO7rG,EAAG,YAG5B4rB,MAAM5rB,GACJ4D,KAAK81F,OAAO,IAAImS,IAAO7rG,EAAG,UAG5Bs5I,UAAU7qH,GAER,MAAM4J,EAAS5J,EAAOhM,mBAClB4V,aAAkB+tB,IACpBxiD,KAAKgoB,MAAM,mCAGbhoB,KAAKgjB,YAAYm0C,YAAqB1iC,EAAQ5J,GAAU,EAAG,KAG7D8qH,cAAc9qH,GAEZ,MAAM4J,EAAS5J,EAAOhM,mBAClB4V,aAAkB+tB,IACpBxiD,KAAKgoB,MAAM,uCAGbhoB,KAAKgjB,YAAYm0C,YAAqB1iC,EAAQ5J,GAAU,EAAG,KAG7D+qH,eACE51I,KAAK6Y,MAAM,uBACX7Y,KAAKgjB,YAAY,EAAG,KAGtBA,YAAYllB,EAAWysB,GACrBvqB,KAAKuqB,OAAS,IAAI49E,IAAOrqG,EAAGysB,GAI9BsrH,WAAWrrG,EAAiB3f,EAAiB8gB,GAAY,GACvD,GAAIA,EAAW,OACf,MAAMlX,EAAS5J,EAAOhM,mBACtB,GAAI4V,aAAkB+tB,IAEpB,YADAxiD,KAAKgoB,MAAM,mCAKb,MAAMxP,EAAao+C,YAAuBniC,EAAQ5J,GAC5CwrD,EAAO71E,KAAKitB,SACZuyF,EAAqBjpD,YAAwBtiC,EAAQ5J,GACrDo1F,EAAqBD,EAAqB,EAChD,GAAI3pC,EAAO79D,EAAY,CAErB,GACEud,IAAiBkhB,IAAmB+O,cACpCjwB,IAAiBkhB,IAAmB+O,cAAgBvxB,EAAOJ,GAM3D,OAJuB,MAAnBxJ,EAAO+Y,WACT/Y,EAAO+Y,SAAW,QAEpB4G,EAAOwtB,YAAW,GAAO,GAG3BvjC,EAAOkN,mBAAoB,EAC3B,IAAIivE,EAAc35C,YAA4BxiC,EAAQ5J,GACtD+lF,EAAcpwG,KAAK4qB,MAAMqJ,EAAO2L,eAAiBwwE,GAE7CA,GAAe,IACjBA,EAAc,GAGhBn8E,EAAO2L,gBAAkBwwE,EACzB/lF,EAAOid,UAAU8oE,GACjB/lF,EAAOwd,kBAAkBuoE,EAAa,WACtC/lF,EAAO6d,eAAes3E,GACtBn1F,EAAOme,oBAAoBg3E,EAAqBl9G,IAAUwC,qCAE1DmvB,EAAO+L,QAAQ19B,IAAUoB,qBAEzBlE,KAAK6Y,MACF,2BAA0B/Y,IAAeoB,YAAY0vG,UAAoB9wG,IAAesB,UACvF4+G,uBAMJn1F,EAAO6d,eAAeu3E,GACtBjgH,KAAK6Y,MACF,kBAAiB4b,EAAOE,oBAAoB70B,IAAesB,UAAU6+G,kBAK5E61B,eAAetrG,EAAiB3f,EAAiB8gB,GAAY,GAC3D,IAAKA,EAAW,CACd,MAAMlX,EAAS5J,EAAOhM,mBACtB,GAAI4V,aAAkB+tB,IAEpB,YADAxiD,KAAKgoB,MAAM,mCAGb,GACE+N,IAAiBkhB,IAAmB+O,cACpCjwB,IAAiBkhB,IAAmB+O,cAAgBvxB,EAAOJ,GAM3D,OAJuB,MAAnBxJ,EAAO+Y,WACT/Y,EAAO+Y,SAAW,QAEpB4G,EAAOwtB,YAAW,GAAO,GAG3BvjC,EAAOkN,mBAAoB,EAC3B3hC,KAAK6Y,MAAM,yBAIfk9H,cAAclrH,EAAiB8gB,GAAY,GACzC,IAAKA,EAAW,CACd,MAAM+2E,EAAW73F,EAAOhM,mBAClBm3H,EAAYtzB,aAAoBlgE,IACtCxiD,KAAK6Y,MAAM6pG,EAAS/tF,SAAW,MAC/B,MAAMshH,EAAMvzB,EAASrtF,iBACrBr1B,KAAK6Y,MAAM,uBAA0Bm9H,EAAkB,SAANC,IACjD,MAAMj5D,GAAmBg5D,GAAatzB,EAAS1lC,gBAAmBg5D,EAElE,GADAh2I,KAAK6Y,MAAM,iBAAmBmkE,EAAiB,MAAQ,OACnD0lC,aAAoBhtF,IAAQ,CAC9B,MAAMwgH,EAAexzB,EAAS9hE,qBAC9B5gD,KAAK6Y,MAAM,4BAA+Bm9H,EAA2B,MAAfE,IACtD,MAAMC,EAAWzzB,EAAS9iF,eAC1B5/B,KAAK6Y,MAAM,2BAA8Bm9H,EAA4D,MAAhDl2I,IAAe6B,qBAAqBw0I,KACzF,MAAMC,EAAgBx/E,YAAuB8rD,EAAU73F,GACvD7qB,KAAK6Y,MAAM,oBAAuBm9H,EAA6D,MAAjDl2I,IAAe2B,iBAAiB20I,KAC9E,MAAMv2B,EAAuD,IAAzC1oD,YAAqBurD,EAAU73F,GACnD7qB,KAAK6Y,MAAM,kBAAqBm9H,EAAkE,MAAtD/qH,YAAiC40F,GAAa,KAO5F,GALA7/G,KAAK6Y,MACF,qCACG6pG,aAAoBlgE,IAAuE,MAAtD1iD,IAAeoB,YAAYwhH,EAAStiF,kBAG3EsiF,aAAoBhtF,IAAQ,CAC9B,MAAM2gH,EAAU3zB,EAASttF,qBACzBp1B,KAAK6Y,MAAM,4CAA+Cm9H,EAAsB,MAAVK,IACtEr2I,KAAK6Y,MAAM,cAAgB6pG,EAASZ,YAAc,OAAS,WAC3D9hH,KAAK6Y,MAAM,cAAgB6pG,EAASX,YAAc,OAAS,WAC3D/hH,KAAK6Y,MAAM,eAAiB6pG,EAASV,aAAe,OAAS,WAC7DhiH,KAAK6Y,MAAM,eAAiB6pG,EAAST,aAAe,OAAS,WAC7DjiH,KAAK6Y,MAAM,cAAgB6pG,EAASR,YAAc,OAAS,aAKjE7T,aAAa7jE,EAAiB3f,EAAiB8gB,GAAY,GACzD,GAAoB,OAAhB3rC,KAAKuqB,OAITvqB,KAAK6Y,MAAM7Y,KAAKs2I,mBACW,MAAvBt2I,KAAKuqB,OAAOA,OACdvqB,KAAK61I,WAAWrrG,EAAQ3f,EAAQ8gB,GACA,MAAvB3rC,KAAKuqB,OAAOA,OACrBvqB,KAAK81I,eAAetrG,EAAQ3f,EAAQ8gB,GACJ,MAAvB3rC,KAAKuqB,OAAOA,QACrBvqB,KAAK+1I,cAAclrH,EAAQ8gB,GAEzBA,GACF3rC,KAAK6Y,MAAM,aAEb7Y,KAAKuqB,OAAS,KACd89E,IAAev0F,YAfb,IAAK63B,EAAW,MAAM,IAAI7gB,MAAM,iDAkBpCyrH,QAAQ1rH,EAAiB8K,GACvB,OAAI6hC,YAAiB7hC,GACZ31B,KAAK64E,UAAUhuD,EAAQ8K,GAG5BA,EAASyY,SAAS,QACbpuC,KAAKw2I,WAAW3rH,EAAQ8K,GAG7BA,EAASyY,SAAS,QACbpuC,KAAKy2F,YAAY5rE,EAAQ8K,GAG3B,KAGT8gH,YAAY9gH,GACV,MAAM0rC,EAAOe,YAAiBzsC,EAAU31B,KAAK02I,OAC7C,GAAY,MAARr1E,EACF,MAAM,IAAIv2C,MAAO,gCAA+B6K,GAGlD,OAAIosC,YAAkBV,GACbL,YAAmBK,GAGrBA,EAGTwX,UAAUhuD,EAAiB8K,GACzB,MAAMv5B,EAAIyuB,EAAOhM,mBACX83H,EAAW32I,KAAKy2I,YAAY9gH,GAClC,IAAK,MAAM2L,KAAUllC,EAAEglC,QACrB,GAAIu1G,IAAar1G,EAAO3L,SACtB,OAAO2L,EAIX,OAAO,KAGTm1D,YAAY5rE,EAAiB8K,GAC3B,MAAMv5B,EAAIyuB,EAAOhM,mBACX83H,EAAW32I,KAAKy2I,YAAY9gH,GAClC,IAAK,MAAM/hB,KAAOxX,EAAEs6F,UAClB,GAAIigD,IAAa/iI,EAAIkiD,GACnB,OAAOliD,EAIX,OAAO,KAGT4iI,WAAW3rH,EAAiB8K,GAC1B,MAAMv5B,EAAIyuB,EAAOhM,mBACX83H,EAAW32I,KAAKy2I,YAAY9gH,GAClC,IAAK,MAAMihH,KAAOx6I,EAAEy5B,SAClB,GAAmB,iBAAR+gH,GAAoBD,IAAaC,EAC1C,OAAOA,EAIX,OAAO,KAGTF,MACE,OAAO12I,KAAK62I,QAGd5xB,OAAOzjD,GACLxhE,KAAK62I,QAAUr1E,EACf6mC,IAAev0F,OAGA,kBAAC+W,EAAiBqpG,GAEjC,GAAIl0H,KAAK82I,aACP,OAAO92I,KAAKgoB,MAAM,iDAGpB,MAAMotE,EAAOvqE,EAAOhM,mBACdqvE,EAAWkH,EAAKqpB,YAAYyV,GAClC,GAAgB,MAAZhmC,EACF,OAAOluF,KAAKgoB,MAAM,oBAGpBhoB,KAAK82I,cAAe,EAGpB,aAFkB5oD,EAAS7vE,UAGzB,KAAKu3C,IAAqBa,QACxB,GAAwB,OAApBy3B,EAAS/zC,OAAiB,CAC5B,MAAMA,EAAStvB,EAAOqvB,yBAAyBg0C,EAAS/zC,OAAQ+zC,EAASn4B,iBACzE/1D,KAAK6Y,MAAO,sBAAqBshC,GAEnCi7C,EAAKy3B,eAAe3+B,GACpB,MACF,KAAKt4B,IAAqBc,UACtBw3B,EAAS4+B,MACP5+B,EAAS4+B,OAAS5+B,EAASl4B,kBAC7Bh2D,KAAK6Y,MAAM,sDACXu8E,EAAKy3B,eAAe3+B,IAEpBluF,KAAK6Y,MAAO,qBAAoBq1E,EAASl4B,iBAAmBk4B,EAAS4+B,yBAEvE,MACF,KAAKl3D,IAAqBU,UAC1B,QACEt2D,KAAK6Y,MAAM,sBAGf7Y,KAAK82I,cAAe,EAGtBC,0BAA0BlsH,EAAiB6+C,EAAQ,EAAGvhB,GAAM,GAE1DnoD,KAAK6Y,MAAM,gDACX7Y,KAAK6Y,MAAM,KAGX,MAAMm+H,EAEF,GACJ,IAAK,MAAM3iH,KAAMF,IACf6iH,EAAQ3iH,GAAM,EAGhB,MAAMunD,EAAsB,GACtBq7D,EAAuB,CAAC,GACxBv0B,EAAW73F,EAAOhM,mBAExB,IADA+8D,EAAMtgF,KAAKonH,GACY,GAAhB9mC,EAAM5gF,QAAa,CACxB,MAAMoB,EAAIw/E,EAAMzZ,MAChB,IAAK/lE,EAAG,SACR,MAAMQ,EAAIq6I,EAAW90E,MACrB,QAAUv3C,IAANhuB,EAAiB,SACrB,MAAMo5I,EAAY55I,aAAaomD,IAC/B,IAAK2F,GAAQ/rD,EAAU0lC,mBAAmC,QAAd1lC,EAAEu4B,SAC5C,SACK,GAAIqiH,EAAQ56I,EAAEi4B,KAAOz3B,EAAI8sE,EAC9B,SACK,IAAKvhB,GAAO6tF,EACjB,SAEAgB,EAAQ56I,EAAEi4B,IAAM,EAElB,IAAK,IAAIv5B,EAAIsB,EAAEm6B,iBAAiBv7B,OAAS,EAAGF,GAAK,IAAKA,EAAG,CACvD,MAAMo8I,EAAOz1G,YAAmBrlC,EAAGtB,GACtB,OAATo8I,IACJt7D,EAAMtgF,KAAK47I,GACXD,EAAW37I,KAAKsB,EAAI,IAEtB,GAAS,GAALA,EACF,SAEF,MAAMu6I,EAAc1xF,MAAgB,GAAT7oD,EAAI,GAAS,GAAG82B,KAAK,KAC5C7I,EAAO4c,WAAW3G,IAASqrC,SAAStvE,MACtCmD,KAAK81F,OAAO,IAAIoS,IAAKivC,EAAa/6I,EAAEu4B,WAEpC30B,KAAK6Y,MAAMs+H,EAAc/6I,EAAEu4B,UAG7B,MAAM2oD,EAAS65D,EAAc,KAC7B,IAAIx6I,EAAI,KACJP,EAAE4gF,iBACJrgF,EAAI,OAENqD,KAAK6Y,MACF,GAAEykE,iBAAsB3gF,IAAKq5I,EAA6E,GAAjE,6BAAgC55I,EAAUwkD,wBAElFxkD,EAAEjB,eAAe,yBACnB6E,KAAK6Y,MAAMykE,EAAS,0CAA6ClhF,EAAUg5B,sBAE7Ep1B,KAAK6Y,MAAMykE,EAAS,QAAUx9E,IAAe0B,UAAUpF,EAAEm5B,SACzDv1B,KAAK6Y,MAAM,MAIfu+H,gBAAgBvsH,EAAiB4J,GAC/B,MAAM2gE,EAAO16E,YAAU+Z,GACX,MAAR2gE,GAIJvqE,EAAOhM,mBAAmBoiB,eAAgB,EAC1CpW,EAAOkX,cAAgBqzD,EAAK/gE,GAC5BxJ,EAAOhM,mBAAmBoiB,eAAgB,EAC1CjhC,KAAK6Y,MAAM,gBAAkBu8E,EAAKzgE,UAClC30B,KAAKilH,OAAO,KAC8B,WAAtCp6F,EAAOhM,mBAAmB8V,UAC5BymF,eATAp7G,KAAKgoB,MAAM,sCAafqvH,gBAAgB7sG,EAAiB3f,EAAiBm6D,GAGhDA,GADAA,EAAWA,EAAS/b,QACAxhB,QAAQ,SAAU,KAGlCznD,KAAKs3I,eAAet3I,KAAKs3I,eAAet8I,OAAS,IAAMgqF,IACzDhlF,KAAKs3I,eAAeh8I,KAAK0pF,GACrBhlF,KAAKs3I,eAAet8I,OAAS,IAC/BgF,KAAKs3I,eAAep7I,OAAO,EAAG,IAGlC8D,KAAKu3I,oBAAsBv3I,KAAKs3I,eAAet8I,OAC/C,MAAMq5I,EAAcD,YAAcpvD,GAElC,IAAK,IAAIlqF,EAAI,EAAGA,EAAIu5I,EAAYr5I,OAAQF,IACtCkF,KAAKw3I,eAAehtG,EAAQ3f,EAAQwpH,EAAYv5I,IAIpDwiB,QAEEtd,KAAKy1I,cAAgB,CAAC,IAAIxtC,IAAQ,cAAanlG,IAAUC,QAAW,YACpEslG,IAAev0F,OACfw0F,IAAoBx0F,OAGtBoyB,WACElmC,KAAKuqB,OAAS,KACdvqB,KAAKsd,QAGPk6H,eAAehtG,EAAiB3f,EAAiBi9D,GAC/C,GAAoB,OAAhB9nF,KAAKuqB,OAEP,YADAvqB,KAAKgoB,MAAO,2BAA0B8/D,qCAIpCA,EAAQ35C,WAAW,QACrB25C,EAAU,OAASA,EAAQzpF,MAAM,IAGnC,MAAMmrE,EAAe+qE,YAAazsD,GAClC,GAA2B,GAAvBte,EAAaxuE,OACf,OAEF,MAAMoB,EAAIyuB,EAAOhM,mBAEjB,GAAIma,IAAUxd,UAAW,CACvB,MAAMi8H,EAAcj4G,YAAoB,WACxC,GAAmB,MAAfi4G,EACF,MAAM,IAAI3sH,MAAM,gCAGlB,OAAQkO,IAAUC,UAChB,KAAKF,IAAeS,aAClB,GAA4B,IAAxBgwC,EAAaxuE,QAAmC,QAAnBwuE,EAAa,GAI5C,YADAxpE,KAAK6Y,MAAM,2CAFXqiB,cAKF,MACF,KAAKnC,IAAeU,WAClB,GAA4B,IAAxB+vC,EAAaxuE,QAAmC,MAAnBwuE,EAAa,GAI5C,YADAxpE,KAAK6Y,MAAM,2CAFXqiB,cAKF,MACF,KAAKnC,IAAeW,aAClB,GAA4B,IAAxB8vC,EAAaxuE,QAAmC,QAAnBwuE,EAAa,GAI5C,YADAxpE,KAAK6Y,MAAM,2CAFXqiB,cAKF,MACF,KAAKnC,IAAeY,qBAClB,GAA2B,GAAvB6vC,EAAaxuE,QAAkC,gBAAnBwuE,EAAa,GAI3C,YADAxpE,KAAK6Y,MAAM,2CAFXqiB,cAKF,MACF,KAAKnC,IAAea,qBAClB,GAA2B,GAAvB4vC,EAAaxuE,QAAkC,gBAAnBwuE,EAAa,IAA4C,IAApBA,EAAa,GAIhF,YADAxpE,KAAK6Y,MAAM,2CAFXqiB,cAKF,MACF,KAAKnC,IAAec,gBAClB,GAA2B,GAAvB2vC,EAAaxuE,OASf,YADAgF,KAAK6Y,MAAM,2CAPX,GAAuB,WAAnB2wD,EAAa,IAAuC,WAAnBA,EAAa,IAAmBA,EAAa,IAAMiuE,EAAYpjH,GAIlG,YADAr0B,KAAK6Y,MAAM,6BAFXqiB,cASJ,MACF,KAAKnC,IAAee,gBAClB,GAA4B,IAAxB0vC,EAAaxuE,QAAoC,YAApBwuE,EAAa,GAI5C,YADAxpE,KAAK6Y,MAAM,2CAFXqiB,cAKF,MACF,KAAKnC,IAAegB,aAClB,GAA2B,GAAvByvC,EAAaxuE,QAAkC,OAAnBwuE,EAAa,IAAkC,YAAnBA,EAAa,GAIvE,YADAxpE,KAAK6Y,MAAM,2CAFXqiB,cAKF,MACF,KAAKnC,IAAeiB,mBAClB,GAA2B,GAAvBwvC,EAAaxuE,QAAkC,QAAnBwuE,EAAa,GAI3C,YADAxpE,KAAK6Y,MAAM,2CAFXqiB,cAKF,MACF,KAAKnC,IAAemB,eAClB,GAA2B,GAAvBsvC,EAAaxuE,QAAkC,QAAnBwuE,EAAa,GAI3C,YADAxpE,KAAK6Y,MAAM,2CAFXqiB,cAKF,MACF,KAAKnC,IAAeoB,qBAClB,GAA2B,GAAvBqvC,EAAaxuE,QAAkC,QAAnBwuE,EAAa,IAAmC,kBAAnBA,EAAa,GAIxE,YADAxpE,KAAK6Y,MAAM,2CAFXqiB,cAKF,MACF,KAAKnC,IAAesB,aAClB,GAA2B,GAAvBmvC,EAAaxuE,QAAkC,QAAnBwuE,EAAa,GAI3C,YADAxpE,KAAK6Y,MAAM,2CAFXqiB,cAKF,MACF,KAAKnC,IAAeuB,kBAClB,GAA2B,GAAvBkvC,EAAaxuE,QAAkC,OAAnBwuE,EAAa,IAAkC,kBAAnBA,EAAa,GAIvE,YADAxpE,KAAK6Y,MAAM,2CAFXqiB,cAKF,MACF,KAAKnC,IAAe0B,wBAClB,GAA2B,GAAvB+uC,EAAaxuE,QAAkC,QAAnBwuE,EAAa,IAAmC,kBAAnBA,EAAa,GAIxE,YADAxpE,KAAK6Y,MAAM,2CAFXqiB,cAKF,MACF,QAEE,YADAl7B,KAAK6Y,MAAM,yEAMjB,MAAM6+H,EAAcluE,EAAa,GACjC,GAA2B,iBAAhBkuE,EAET,YADA13I,KAAKgoB,MAAO,WAAUwhD,EAAa,gBAIrC,MA+CMl2C,EAvCF,CACFq2C,MAAOA,IACPkrE,QAASA,IACTC,SAAUA,IACV/rF,IAAKA,IACLgsF,IAAKA,IACLvpC,GAAIA,IACJwpC,MAAOA,IACPxH,IAAK,IAAMxtI,KAAKsd,QAChBA,MAAO,IAAMtd,KAAKsd,QAClBwB,QAASA,IACTi3E,SAAUA,IACVk/C,KAAMA,IACNC,KAAMA,IACN78H,KAAMA,IACNo1H,KAAMA,IACN9lG,KAAMA,IACNhT,SAAUA,IACVwgH,SAAUA,IACVt7H,KAAMA,IACNC,QAASA,IACTG,GAAIA,IACJm7H,MAAOA,IACPC,IAAKA,IACLrjF,GAAIA,IACJsjF,KAAMA,IACNp7H,GAAIA,IACJsD,GAAIA,IACJ9D,IAAKA,IACLtB,KAAMA,IACN,eAAgBu/H,IAChB39H,IAAKA,IACLu7H,MAAOA,IACP5zB,KAAMA,IACNznB,IAAKA,KACLs7C,QAASA,KACTl3H,KAAMA,MAGWo5H,EAAY9vG,eAC1BtU,EAKLA,EAAEtzB,KAAMwqC,EAAQ3f,EAAQzuB,EAAGotE,EAAanrE,MAAM,IAJ5C2B,KAAKgoB,MAAO,WAAUwhD,EAAa,gBAOvC8sE,kBACE,GAAoB,OAAhBt2I,KAAKuqB,OAAiB,MAAM,IAAIO,MAAM,0DAC1C,OAAOmyD,YAAsB,CAC3BE,UAAWn9E,KAAKuqB,OAAOW,KAAOlrB,KAAKuqB,OAAO69E,UAAYpoG,KAAKuqB,OAAOW,KAClEkyD,WAAY,Q,6BCtsBlB,8CAwBA,SAASw6D,EAA8B52I,GACrC,IAAI62I,EAAiB72I,EAQrB,OAPI62I,EAAO1pG,WAAW,OACpB0pG,EAASA,EAAOx5I,MAAM,IAEpBw5I,EAAOzpG,SAAS,OAClBypG,EAASA,EAAOx5I,MAAM,GAAI,IAGrBw5I,EAGT,SAASC,EAAuB92I,GAC9B,IAAI62I,EAAiB72I,EAQrB,OAPI62I,EAAO1pG,WAAW,MAAQ0pG,EAAO1pG,WAAW,QAC9C0pG,EAASA,EAAOx5I,MAAM,KAEpBw5I,EAAOzpG,SAAS,MAAQypG,EAAOzpG,SAAS,QAC1CypG,EAASA,EAAOx5I,MAAM,GAAI,IAGrBw5I,EAGT,SAASE,EAAuBjrH,GAC9B,MAAMgxE,EAAuB,GAO7B,OANAhxE,EAAIuU,QAASyjB,IACX,IAAI1oD,EAAY0oD,EAAEjW,WAClBzyC,EAAI,CAAC,IAAKA,EAAG,KAAKs3B,KAAK,IACvBoqE,EAAWxiG,KAAKc,KAGX0hG,EAAWpqE,KAAK,KAAK+zB,QAAQ,MAAO,IAGtC,MAAMkO,EAA6D,CACxE,CACEliC,KAAO31B,GACE,CAAC,qDAAuD,uCAAsCA,MAAM41B,KACzG,KAGJ0mB,WAAY,EACZgb,IAAK,IACI9mC,YAAa,IAAK,KAE3BzxB,KAAM,4BACN04D,SAAU,GACVF,OAAQ,CAAC76D,EAAcw9I,KACrB,IAAIhkH,EAAM,EACNl2B,EAAYtD,EAChB,KAAOsD,GAAKk2B,EAAM,IAAMA,EAAM,IAAI,CAChC,KAAOl2B,EAAIk2B,GAAQ,GACjBl2B,EAAI0C,KAAK+mC,MAAMzpC,EAAIk2B,KAEnBA,EAGJ,OAAc,IAANl2B,EAAUk2B,EAAM,EAAIl2B,KAAOuhI,SAAS2Y,EAAK,MAGrD,CACEvkH,KAAO31B,GACE,CACL,kEACA,kFACA,gEACC,GAAEA,EAAE+wC,YACLnb,KAAK,KAET0mB,WAAY,EACZgb,IAAK,KACH,MAAM6iF,EAAc3pH,YAAa,EAAG,IAC9BxB,EAAgB,GACtBA,EAAI9xB,OAASi9I,EACb,IAAK,IAAIn9I,EAAI,EAAGA,EAAIm9I,IAAOn9I,EACzBgyB,EAAIhyB,GAAKwzB,aAAc,GAAI,IAG7B,OAAOxB,GAETjwB,KAAM,4BACN04D,SAAU,GACVF,OAAQ,CAAC76D,EAAgBw9I,KACvB,MAAME,EAAiB19I,EAAK6D,QAC5B,IAAK,IAAIvD,EAAI,EAAGA,EAAIo9I,EAAKl9I,OAAQF,IAC/Bo9I,EAAKp9I,GAAK0F,KAAKqC,IAAIq1I,EAAKp9I,GAAIo9I,EAAKp9I,GAAKo9I,EAAKp9I,EAAI,IAGjD,OAAOukI,SAAS2Y,EAAK,MAAQx3I,KAAKqC,OAAOq1I,KAG7C,CACEzkH,KAAO31B,GACE,CACL,yEACA,kCACA,kCACA,sCACA,4CACC,0CAAyCA,oCAC1C,0BACA41B,KAAK,KAET0mB,WAAY,IACZgb,IAAK,IACI9mC,YAAa,EAAG,KAEzBzxB,KAAM,oBACN04D,SAAU,GACVF,OAAQ,CAAC76D,EAAcw9I,KACrB,MAAMG,EAAiB,CAAC,GACxBA,EAAKn9I,OAASR,EAAO,EACrB29I,EAAK3uC,KAAK,EAAG,GACb,IAAK,IAAI1uG,EAAI,EAAGA,EAAIN,IAAQM,EAC1B,IAAK,IAAIkB,EAAYlB,EAAGkB,GAAKxB,IAAQwB,EACnCm8I,EAAKn8I,IAAMm8I,EAAKn8I,EAAIlB,GAIxB,OAAOq9I,EAAK39I,KAAU6kI,SAAS2Y,EAAK,MAGxC,CACEvkH,KAAO31B,IACL,IAAIlB,EAAY,CACd,0EACA,sEACA82B,KAAK,KA+BP,OA3BA92B,GAAK,8BACLA,GAAKkB,EACF4kE,IACEukB,GACC,oDACAA,EAAKvkB,IAAKnvC,IAAe,GAAEA,GAAI6kH,SAAS,EAAG,MAAM1kH,KAAK,KACtD,KAEHA,KAAK,MACR92B,GAAK,gCACLA,GAAK,CACH,2DACA,8BACA,8DACA,8DACA,8DACA,gCACA,0CACA,sDACA,8BACA,kGACA,kGACA,mFACA,gCACA,mDACA82B,KAAK,KAEA92B,GAETw9C,WAAY,EACZgb,IAAK,KACH,MAAM14D,EAAY4xB,YAAa,EAAG,IAC5BxwB,EAAYwwB,YAAa,EAAG,IAC5B+pH,EAAqB,GAC3BA,EAAOr9I,OAAS0B,EAChB,IAAK,IAAI5B,EAAI,EAAGA,EAAI4B,IAAK5B,EACvBu9I,EAAOv9I,GAAK,GACZu9I,EAAOv9I,GAAGE,OAAS8C,EAGrB,IAAK,IAAIhD,EAAI,EAAGA,EAAI4B,IAAK5B,EACvB,IAAK,IAAIkB,EAAI,EAAGA,EAAI8B,IAAK9B,EACvBq8I,EAAOv9I,GAAGkB,GAAKsyB,YAAa,EAAG,IAInC,OAAO+pH,GAETx7I,KAAM,mBACN04D,SAAU,GACVF,OAAQ,CAAC76D,EAAkBw9I,KACzB,MAAMM,EAAmB,GAGzB,IAAIC,EAAI,EACJ37I,EAHcpC,EAAKQ,OAGH,EAChByB,EAAI,EACJU,EAJc3C,EAAK,GAAGQ,OAIN,EAChB86H,EAAI,EACR,OAAa,CAEX,IAAK,IAAI0iB,EAAc/7I,EAAG+7I,GAAOr7I,EAAGq7I,IAClCF,EAAOxiB,GAAKt7H,EAAK+9I,GAAGC,KAClB1iB,EAEJ,KAAMyiB,EAAI37I,EACR,MAIF,IAAK,IAAI+lE,EAAc41E,EAAG51E,GAAO/lE,EAAG+lE,IAClC21E,EAAOxiB,GAAKt7H,EAAKmoE,GAAKxlE,KACpB24H,EAEJ,KAAM34H,EAAIV,EACR,MAIF,IAAK,IAAI+7I,EAAcr7I,EAAGq7I,GAAO/7I,EAAG+7I,IAClCF,EAAOxiB,GAAKt7H,EAAKoC,GAAG47I,KAClB1iB,EAEJ,KAAMl5H,EAAI27I,EACR,MAIF,IAAK,IAAI51E,EAAc/lE,EAAG+lE,GAAO41E,EAAG51E,IAClC21E,EAAOxiB,GAAKt7H,EAAKmoE,GAAKlmE,KACpBq5H,EAEJ,KAAMr5H,EAAIU,EACR,MAIJ,MACMs7I,EAD6Bb,EAA8BI,GAAKvwF,QAAQ,MAAO,IACzCpZ,MAAM,KAClD,IAAK,IAAIvzC,EAAI,EAAGA,EAAI29I,EAAUz9I,SAAUF,EACtC29I,EAAU39I,GAAKukI,SAASoZ,EAAU39I,GAAI,IAExC,GAAIw9I,EAAOt9I,SAAWy9I,EAAUz9I,OAC9B,OAAO,EAET,IAAK,IAAIF,EAAI,EAAGA,EAAIw9I,EAAOt9I,SAAUF,EACnC,GAAIw9I,EAAOx9I,KAAO29I,EAAU39I,GAC1B,OAAO,EAIX,OAAO,IAGX,CACE24B,KAAO3G,GACE,CACL,qDACGA,EAAF,OACD,gEACA,sEACA,8DACA,YACA,4CACA,uDACA,4CACA,uFACA4G,KAAK,KAET0mB,WAAY,IACZgb,IAAK,KACH,MAAM6iF,EAAc3pH,YAAa,EAAG,IAC9BxB,EAAgB,GACtBA,EAAI9xB,OAASi9I,EACb,IAAK,IAAIn9I,EAAI,EAAGA,EAAIgyB,EAAI9xB,SAAUF,EAC5B0F,KAAKitB,SAAW,GAClBX,EAAIhyB,GAAK,EAETgyB,EAAIhyB,GAAKwzB,YAAa,EAAG,IAI7B,OAAOxB,GAETjwB,KAAM,qBACN04D,SAAU,EACVF,OAAQ,CAAC76D,EAAgBw9I,KACvB,MAAMl6I,EAAYtD,EAAKQ,OACvB,IAAIF,EAAI,EACR,IAAK,IAAI49I,EAAQ,EAAG59I,EAAIgD,GAAKhD,GAAK49I,IAAS59I,EACzC49I,EAAQl4I,KAAKqC,IAAI/H,EAAIN,EAAKM,GAAI49I,GAEhC,MAAMviF,EAAoBr7D,IAAMgD,EAEhC,QAAY,MAARk6I,IAAe7hF,IAGP,MAAR6hF,IAAgB7hF,IAOxB,CACE1iC,KAAO3G,GACE,CACL,uEACA,kDACC,IAAGirH,EAAuBjrH,UAC3B,eACA,0CACA,0CACA,qDACA,sEACA,4BACA4G,KAAK,KAET0mB,WAAY,EACZgb,IAAK,KACH,MAAMujF,EAAwB,GACxBC,EAAuBtqH,YAAa,EAAG,IAC7C,IAAK,IAAIxzB,EAAI,EAAGA,EAAI89I,IAAgB99I,EAAG,CACrC,MAAMm2E,EAAgB3iD,YAAa,EAAG,IAChCq5G,EAAc12D,EAAQ3iD,YAAa,EAAG,IAC5CqqH,EAAUr9I,KAAK,CAAC21E,EAAO02D,IAGzB,OAAOgR,GAET97I,KAAM,8BACN04D,SAAU,GACVF,OAAQ,CAAC76D,EAAkBw9I,KACzB,MAAMW,EAAwBn+I,EAAK6D,QACnCs6I,EAAUtsH,KAAK,CAACI,EAAaE,IACpBF,EAAE,GAAKE,EAAE,IAGlB,MAAM9wB,EAAqB,GAC3B,IAAIo1E,EAAgB0nE,EAAU,GAAG,GAC7BhR,EAAcgR,EAAU,GAAG,GAC/B,IAAK,MAAME,KAAYF,EACjBE,EAAS,IAAMlR,EACjBA,EAAMnnI,KAAKqC,IAAI8kI,EAAKkR,EAAS,KAE7Bh9I,EAAOP,KAAK,CAAC21E,EAAO02D,IACpB12D,EAAQ4nE,EAAS,GACjBlR,EAAMkR,EAAS,IAGnBh9I,EAAOP,KAAK,CAAC21E,EAAO02D,IAEpB,MAAMmR,EAA0Bf,EAAuBl8I,GACjDk9I,EAAuBf,EAAIvwF,QAAQ,MAAO,IAEhD,OAAOqxF,IAAoBC,GAAgBD,IAAoBlB,EAA8BmB,KAGjG,CACEtlH,KAAOj5B,GACE,CACL,4DACA,2DACA,2CACGA,EAAF,OACD,+DACA,4EACA,gBACA,oDACA,iCACAk5B,KAAK,KAET0mB,WAAY,EACZgb,IAAK,KACH,IAAIp0D,EAAM,GACV,IAAK,IAAIlG,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAG1BkG,GAFoBstB,YAAa,EAAG,KACRugB,WAI9B,OAAO7tC,GAETnE,KAAM,wBACN04D,SAAU,GACVF,OAAQ,CAAC76D,EAAcw9I,KACrB,MAAM9oB,EAAgB,GACtB,IAAK,IAAIziG,EAAI,EAAGA,GAAK,IAAKA,EACxB,IAAK,IAAIE,EAAI,EAAGA,GAAK,IAAKA,EACxB,IAAK,IAAIhwB,EAAI,EAAGA,GAAK,IAAKA,EACxB,IAAK,IAAIC,EAAI,EAAGA,GAAK,IAAKA,EACxB,GAAI6vB,EAAIE,EAAIhwB,EAAIC,IAAMpC,EAAKQ,OAAQ,CACjC,MAAMmxB,EAAYkzG,SAAS7kI,EAAKqyB,UAAU,EAAGJ,GAAI,IAC3CknC,EAAY0rE,SAAS7kI,EAAKqyB,UAAUJ,EAAGA,EAAIE,GAAI,IAC/CinC,EAAYyrE,SAAS7kI,EAAKqyB,UAAUJ,EAAIE,EAAGF,EAAIE,EAAIhwB,GAAI,IACvDk3D,EAAYwrE,SAAS7kI,EAAKqyB,UAAUJ,EAAIE,EAAIhwB,EAAG8vB,EAAIE,EAAIhwB,EAAIC,GAAI,IACrE,GAAIuvB,GAAK,KAAOwnC,GAAK,KAAOC,GAAK,KAAOC,GAAK,IAAK,CAChD,MAAMx/B,EAAa,CAAClI,EAAE0iB,WAAY,IAAK8kB,EAAE9kB,WAAY,IAAK+kB,EAAE/kB,WAAY,IAAKglB,EAAEhlB,YAAYnb,KAAK,IAC5FW,EAAGr5B,SAAWR,EAAKQ,OAAS,GAC9Bk0H,EAAI5zH,KAAK+4B,IASvB,MACM2kH,EADuBpB,EAA8BI,GAAKvwF,QAAQ,MAAO,IACzCpZ,MAAM,KAC5C,GAAI2qG,EAAOh+I,SAAWk0H,EAAIl0H,OACxB,OAAO,EAET,IAAK,MAAMi+I,KAAWD,EACpB,IAAK9pB,EAAIruF,SAASo4G,GAChB,OAAO,EAIX,OAAO,IAGX,CACExlH,KAAOj5B,GACE,CACL,wEACA,kEACGA,EAAF,OACD,mEACA,4FACA,oCACA,yDACAk5B,KAAK,KAET0mB,WAAY,EACZgb,IAAK,KACH,MAAM6iF,EAAc3pH,YAAa,EAAG,IAC9BxB,EAAgB,GACtBA,EAAI9xB,OAASi9I,EACb,IAAK,IAAIn9I,EAAI,EAAGA,EAAIm9I,IAAOn9I,EACzBgyB,EAAIhyB,GAAKwzB,YAAa,EAAG,KAG3B,OAAOxB,GAETjwB,KAAM,6BACN04D,SAAU,EACVF,OAAQ,CAAC76D,EAAgBw9I,KACvB,IAAIkB,EAAS,EACTC,EAAW,EACf,IAAK,IAAIr+I,EAAI,EAAGA,EAAIN,EAAKQ,SAAUF,EACjCo+I,EAAS14I,KAAKqC,IAAI,EAAIq2I,GAAU1+I,EAAKM,GAAKN,EAAKM,EAAI,IACnDq+I,EAAW34I,KAAKqC,IAAIq2I,EAAQC,GAG9B,OAAOA,EAAStqG,aAAempG,IAGnC,CACEvkH,KAAOj5B,GACE,CACL,wEACA,kEACGA,EAAF,OACD,mEACA,iEACA,gEACA,+DACA,mDACA,yDACAk5B,KAAK,KAET0mB,WAAY,EACZgb,IAAK,KACH,MAAM6iF,EAAc3pH,YAAa,EAAG,IAC9BxB,EAAgB,GACtBA,EAAI9xB,OAASi9I,EACb,IAAK,IAAIn9I,EAAI,EAAGA,EAAIm9I,IAAOn9I,EACzBgyB,EAAIhyB,GAAKwzB,YAAa,EAAG,KAG3B,OAAOxB,GAETjwB,KAAM,8BACN04D,SAAU,GACVF,OAAQ,CAAC76D,EAAgBw9I,KACvB,IAAI3kD,EAAS,EACb,IAAK,IAAIp1F,EAAI,EAAGA,EAAIzD,EAAKQ,SAAUiD,EACjCo1F,GAAU7yF,KAAKqC,IAAIrI,EAAKyD,GAAKzD,EAAKyD,EAAI,GAAI,GAG5C,OAAOo1F,EAAOxkD,aAAempG,IAGjC,CACEvkH,KAAOj5B,GACE,CACL,wEACA,kEACGA,EAAF,OACD,mEACA,uDACA,gEACA,+DACA,mDACA,yDACAk5B,KAAK,KAET0mB,WAAY,EACZgb,IAAK,KACH,MAAM6iF,EAAc3pH,YAAa,EAAG,IAC9BxB,EAAgB,GACtBA,EAAI9xB,OAASi9I,EACb,IAAK,IAAIn9I,EAAI,EAAGA,EAAIm9I,IAAOn9I,EACzBgyB,EAAIhyB,GAAKwzB,YAAa,EAAG,KAG3B,OAAOxB,GAETjwB,KAAM,+BACN04D,SAAU,GACVF,OAAQ,CAAC76D,EAAgBw9I,KACvB,IAAIoB,EAAgB7qG,OAAO8qG,iBACvBC,EAAgB/qG,OAAO8qG,iBACvBE,EAAW,EACXC,EAAW,EACf,IAAK,MAAMhyF,KAAShtD,EAClBg/I,EAAWh5I,KAAKqC,IAAI22I,EAAUF,EAAQ9xF,GACtC8xF,EAAQ94I,KAAKqC,IAAIy2I,EAAOC,EAAW/xF,GACnC+xF,EAAW/4I,KAAKqC,IAAI02I,EAAUH,EAAQ5xF,GACtC4xF,EAAQ54I,KAAKqC,IAAIu2I,GAAgB,EAAT5xF,GAG1B,OAAOgyF,EAAS3qG,aAAempG,IAGnC,CACEvkH,KAAOj5B,GAGE,CACL,2DACC,IAJeA,EAAK,QACEA,EAAK,WAI5B,8DACA,mEACA,2CACA,mEACA,sEACA,kEACA,uEACA,4BACA,0DACAk5B,KAAK,KAET0mB,WAAY,EACZgb,IAAK,KACH,MAAM0gE,EAAYxnG,YAAa,EAAG,IAC5B2pH,EAAc3pH,YAAa,EAAG,IAC9BmrH,EAAmB,GACzBA,EAAOz+I,OAASi9I,EAChB,IAAK,IAAIn9I,EAAI,EAAGA,EAAIm9I,IAAOn9I,EACzB2+I,EAAO3+I,GAAKwzB,YAAa,EAAG,KAG9B,MAAO,CAACwnG,EAAG2jB,IAEb58I,KAAM,8BACN04D,SAAU,GACVF,OAAQ,CAAC76D,EAAaw9I,KACpB,MAAMliB,EAAYt7H,EAAK,GACjBi/I,EAAmBj/I,EAAK,GAExBy9I,EAAMwB,EAAOz+I,OACnB,GAAIi9I,EAAM,EACR,OAAyB,IAAlB5Y,SAAS2Y,GAElB,GAAIliB,EAAImiB,EAAM,EAAG,CACf,IAAIlsH,EAAM,EACV,IAAK,IAAIjxB,EAAI,EAAGA,EAAIm9I,IAAOn9I,EACzBixB,GAAOvrB,KAAKqC,IAAI42I,EAAO3+I,GAAK2+I,EAAO3+I,EAAI,GAAI,GAG7C,OAAOukI,SAAS2Y,KAASjsH,EAG3B,MAAM2tH,EAAiB,GACjBC,EAAiB,GACvBD,EAAK1+I,OAAS86H,EAAI,EAClB6jB,EAAK3+I,OAAS86H,EAAI,EAClB,IAAK,IAAIh7H,EAAI,EAAGA,GAAKg7H,IAAKh7H,EACxB4+I,EAAK5+I,GAAKyzC,OAAO8qG,iBACjBM,EAAK7+I,GAAK,EAGZ,IAAI8+I,EACJ,IAAK,IAAI9+I,EAAI,EAAGA,EAAIm9I,IAAOn9I,EAAG,CAC5B8+I,EAAMH,EAAO3+I,GACb,IAAK,IAAIkB,EAAI85H,EAAG95H,EAAI,IAAKA,EACvB29I,EAAK39I,GAAKwE,KAAKqC,IAAI82I,EAAK39I,GAAI09I,EAAK19I,GAAK49I,GACtCF,EAAK19I,GAAKwE,KAAKqC,IAAI62I,EAAK19I,GAAI29I,EAAK39I,EAAI,GAAK49I,GAI9C,OAAOva,SAAS2Y,KAAS2B,EAAK7jB,KAGlC,CACEriG,KAAOj5B,IACL,SAASq/I,EAAsBr/I,EAAkB22B,EAAQ,GACvD,MAAM2oH,EAAoBt/I,EAAKQ,OAC/B,GAAIm2B,GAAS2oH,EACX,MAAO,GAIT,IAAI94I,EAAc,CAAC,SAASD,OAFV+4I,EAAY3oH,EAAQ,GAES,IAAK32B,EAAK22B,GAAO0d,WAAY,KAAKnb,KAAK,IAKtF,OAJIvC,EAAQ2oH,EAAY,IACtB94I,GAAO,KAGFA,EAAM,KAAO64I,EAAsBr/I,EAAM22B,EAAQ,GAS1D,MAAO,CACL,+EACA,uEACA,4DATF,SAAwB32B,GACtB,MAAO,CAAC,MAAOq/I,EAAsBr/I,GAAO,KAAKk5B,KAAK,IAGvCqmH,CAAev/I,GAM7B,OACD,2DACA,uCACA,mCACA,+BACA,0BACA,QACA,kDACAk5B,KAAK,MAET0mB,WAAY,EACZgb,IAAK,KACH,MAAM4kF,EAAuB,GACvBh3F,EAAiB10B,YAAa,EAAG,IACvC0rH,EAASh/I,OAASgoD,EAElB,IAAK,IAAI2f,EAAM,EAAGA,EAAM3f,IAAU2f,EAAK,CACrCq3E,EAASr3E,GAAO,GAChBq3E,EAASr3E,GAAK3nE,OAAS2nE,EAAM,EAC7B,IAAK,IAAI7nE,EAAI,EAAGA,EAAIk/I,EAASr3E,GAAK3nE,SAAUF,EAC1Ck/I,EAASr3E,GAAK7nE,GAAKwzB,YAAa,EAAG,GAIvC,OAAO0rH,GAETn9I,KAAM,iCACN04D,SAAU,GACVF,OAAQ,CAAC76D,EAAkBw9I,KACzB,MAAMl6I,EAAYtD,EAAKQ,OACjBi/I,EAAez/I,EAAKsD,EAAI,GAAGO,QACjC,IAAK,IAAIvD,EAAIgD,EAAI,EAAGhD,GAAK,IAAKA,EAC5B,IAAK,IAAIkB,EAAI,EAAGA,EAAIxB,EAAKM,GAAGE,SAAUgB,EACpCi+I,EAAGj+I,GAAKwE,KAAK+tB,IAAI0rH,EAAGj+I,GAAIi+I,EAAGj+I,EAAI,IAAMxB,EAAKM,GAAGkB,GAIjD,OAAOi+I,EAAG,KAAO5a,SAAS2Y,KAG9B,CACEvkH,KAAOj5B,IACL,MAAM0/I,EAAU1/I,EAAK,GACf2/I,EAAa3/I,EAAK,GACxB,MAAO,CACL,yBACC,GAAE0/I,cAAoBC,yBACvB,oEACA,8DACA,sDACA,mDACA,wDACA,2CACC,IAAGD,MAAYC,MAChBzmH,KAAK,MAET0mB,WAAY,EACZgb,IAAK,IAII,CAHiB9mC,YAAa,EAAG,IACbA,YAAa,EAAG,KAI7CzxB,KAAM,2BACN04D,SAAU,GACVF,OAAQ,CAAC76D,EAAgBw9I,KACvB,MAAMl6I,EAAYtD,EAAK,GACjBkC,EAAYlC,EAAK,GACjB4/I,EAAuB,GAC7BA,EAAWp/I,OAAS8C,EAEpB,IAAK,IAAIhD,EAAI,EAAGA,EAAIgD,EAAGhD,IACrBs/I,EAAWt/I,GAAK,EAElB,IAAK,IAAI6nE,EAAM,EAAGA,EAAMjmE,EAAGimE,IACzB,IAAK,IAAI7nE,EAAI,EAAGA,EAAIgD,EAAGhD,IACrBs/I,EAAWt/I,IAAMs/I,EAAWt/I,EAAI,GAIpC,OAAOukI,SAAS2Y,KAASoC,EAAWt8I,EAAI,KAG5C,CACE21B,KAAOj5B,IACL,IAAI6/I,EAAa,GACjB,IAAK,MAAMpzD,KAAQzsF,EACjB6/I,GAAiBpzD,EAAKp4C,WAAP,MAEjB,MAAO,CACL,oEACGwrG,EAAF,KACD,6EACA,gFACA,6EACA,+BACA,sEACA,8FACA3mH,KAAK,MAET0mB,WAAY,EACZgb,IAAK,KACH,MAAM8kF,EAAkB5rH,YAAa,EAAG,IAClC6rH,EAAqB7rH,YAAa,EAAG,IAErCgsH,EAAmB,GACzBA,EAAKt/I,OAASk/I,EACd,IAAK,IAAIp/I,EAAI,EAAGA,EAAIo/I,IAAWp/I,EAC7Bw/I,EAAKx/I,GAAK,GACVw/I,EAAKx/I,GAAGE,OAASm/I,EACjBG,EAAKx/I,GAAG0uG,KAAK,GAGf,IAAK,IAAIrsG,EAAI,EAAGA,EAAI+8I,IAAW/8I,EAC7B,IAAK,IAAIR,EAAI,EAAGA,EAAIw9I,IAAcx9I,EACtB,IAANQ,GAAiB,IAANR,GAGXQ,IAAM+8I,EAAU,GAAKv9I,IAAMw9I,EAAa,GAKxC35I,KAAKitB,SAAW,MAClB6sH,EAAKn9I,GAAGR,GAAK,GAKnB,OAAO29I,GAETz9I,KAAM,4BACN04D,SAAU,GACVF,OAAQ,CAAC76D,EAAkBw9I,KACzB,MAAMuC,EAA2B,GACjCA,EAAav/I,OAASR,EAAKQ,OAC3B,IAAK,IAAIF,EAAI,EAAGA,EAAIy/I,EAAav/I,SAAUF,EACzCy/I,EAAaz/I,GAAKN,EAAKM,GAAGuD,QAG5B,IAAK,IAAIvD,EAAI,EAAGA,EAAIy/I,EAAav/I,OAAQF,IACvC,IAAK,IAAIkB,EAAI,EAAGA,EAAIu+I,EAAa,GAAGv/I,OAAQgB,IAChB,GAAtBu+I,EAAaz/I,GAAGkB,GAClBu+I,EAAaz/I,GAAGkB,GAAK,EACP,GAALlB,GAAe,GAALkB,EACnBu+I,EAAa,GAAG,GAAK,EAErBA,EAAaz/I,GAAGkB,IAAMlB,EAAI,EAAIy/I,EAAaz/I,EAAI,GAAGkB,GAAK,IAAMA,EAAI,EAAIu+I,EAAaz/I,GAAGkB,EAAI,GAAK,GAKpG,OAAOu+I,EAAaA,EAAav/I,OAAS,GAAGu/I,EAAa,GAAGv/I,OAAS,KAAOqkI,SAAS2Y,KAG1F,CACEvkH,KAAOj5B,GACE,CACL,kCACGA,EAAF,OACD,wEACA,yEACA,qEACA,qEACA,+DACA,mEACC,cACA,kCACA,qCACA,eACDk5B,KAAK,KAET0mB,WAAY,GACZgb,IAAK,KACH,MAAM6iF,EAAc3pH,YAAa,EAAG,IAC9Bd,EAAkB,GACxBA,EAAMxyB,OAASi9I,EAGfz3I,KAAKitB,SAAW,GAAOD,EAAM,GAAK,IAAQA,EAAM,GAAK,IAErD,IAAK,IAAI1yB,EAAI,EAAGA,EAAIm9I,IAAOn9I,EAAG,CAC5B,MAAM0/I,EAAOh6I,KAAKitB,SAEhBD,EAAM1yB,GADJ0/I,EAAO,GACE,IACFA,EAAO,GACL,IAEA,IAIf,OAAOhtH,EAAMkG,KAAK,KAEpB72B,KAAM,qCACN04D,SAAU,GACVF,OAAQ,CAAC76D,EAAcw9I,KACrB,IAAI/9C,EAAO,EACPY,EAAQ,EACZ,MAAM9uE,EAAgB,GAEtB,IAAK,IAAIjxB,EAAI,EAAGA,EAAIN,EAAKQ,SAAUF,EACjB,MAAZN,EAAKM,KACLm/F,EACmB,MAAZz/F,EAAKM,KACdm/F,EAAO,IAAMA,IAASY,IAI1B,SAAS4/C,EACPC,EACAvsH,EACA8rE,EACAY,EACAz+F,EACA+5D,EACApqC,GAEA,GAAI3vB,EAAEpB,SAAWmzB,EAYA,MAAb/xB,EAAE+xB,IACA8rE,EAAO,GACTwgD,EAAIC,EAAMvsH,EAAQ,EAAG8rE,EAAO,EAAGY,EAAOz+F,EAAG+5D,EAAUpqC,GAErD0uH,EAAIC,EAAO,EAAGvsH,EAAQ,EAAG8rE,EAAMY,EAAOz+F,EAAG+5D,EAAW/5D,EAAE+xB,GAAQpC,IACxC,MAAb3vB,EAAE+xB,IACP0sE,EAAQ,GAAG4/C,EAAIC,EAAMvsH,EAAQ,EAAG8rE,EAAMY,EAAQ,EAAGz+F,EAAG+5D,EAAUpqC,GAC9D2uH,EAAO,GAAGD,EAAIC,EAAO,EAAGvsH,EAAQ,EAAG8rE,EAAMY,EAAOz+F,EAAG+5D,EAAW/5D,EAAE+xB,GAAQpC,IAE5E0uH,EAAIC,EAAMvsH,EAAQ,EAAG8rE,EAAMY,EAAOz+F,EAAG+5D,EAAW/5D,EAAE+xB,GAAQpC,QApB1D,GAAa,IAATkuE,GAAwB,IAAVY,GAAwB,IAAT6/C,EAAY,CAC3C,IAAK,IAAI5/I,EAAI,EAAGA,EAAIixB,EAAI/wB,OAAQF,IAC9B,GAAIixB,EAAIjxB,KAAOq7D,EACb,OAGJpqC,EAAIzwB,KAAK66D,IAkBfskF,CAAI,EAAG,EAAGxgD,EAAMY,EAAOrgG,EAAM,GAAIuxB,GAEjC,MAEM4uH,EAFqB/C,EAA8BI,GAAKvwF,QAAQ,MAAO,IAEzBpZ,MAAM,KAC1D,GAAIssG,EAAe3/I,SAAW+wB,EAAI/wB,OAChC,OAAO,EAET,IAAK,MAAM4/I,KAAkB7uH,EAC3B,IAAK4uH,EAAe95G,SAAS+5G,GAC3B,OAAO,EAIX,OAAO,IAGX,CACEnnH,KAAOj5B,IACL,MAAM6pI,EAAiB7pI,EAAK,GACtBqqD,EAAiBrqD,EAAK,GAE5B,MAAO,CACL,qFACG6pI,EAAF,OACA,yCAAwCx/E,8BACzC,6EACA,4BACA,sFACA,qFACA,8EACC,KAAIw/E,OAAYx/E,SACjB,2EACC,mCACD,gBACC,sCACA,6BACA,sCACA,yBACDnxB,KAAK,MAET0mB,WAAY,GACZgb,IAAK,KACH,MAAMylF,EAAYvsH,YAAa,EAAG,IAC5BwsH,EAAwB,GAC9BA,EAAY9/I,OAAS6/I,EACrB,IAAK,IAAI//I,EAAI,EAAGA,EAAIggJ,EAAY9/I,SAAUF,EAEtCggJ,EAAYhgJ,GAAK4iE,OADT,IAAN5iE,EACsBwzB,YAAa,EAAG,GAEhBA,YAAa,EAAG,IAI5C,MAAMu2B,EAAiBv2B,aAAc,IAAK,KAG1C,MAAO,CAFgBwsH,EAAYpnH,KAAK,IAExBmxB,IAElBhoD,KAAM,kCACN04D,SAAU,GACVF,OAAQ,CAAC76D,EAAaw9I,KACpB,MAAM9qH,EAAc1yB,EAAK,GACnBqqD,EAAiBrqD,EAAK,GAkC5B,MACMugJ,EAD6BnD,EAA8BI,GACN3pG,MAAM,KACjE,IAAK,IAAIvzC,EAAI,EAAGA,EAAIigJ,EAAsB//I,SAAUF,EAClDigJ,EAAsBjgJ,GAAKg9I,EAAuBiD,EAAsBjgJ,IAAI2sD,QAAQ,MAAO,IAG7F,GAAW,MAAPv6B,GAA8B,IAAfA,EAAIlyB,OACrB,OAAqC,IAAjC+/I,EAAsB//I,QAGW,IAAjC+/I,EAAsB//I,QAA6C,KAA7B+/I,EAAsB,GAMlE,MAAMl/I,EAAmB,IAhDzB,SAASm/I,EACPjvH,EACAs1C,EACAn0C,EACA23B,EACA3T,EACA+pG,EACAC,GAEA,GAAIhqG,IAAQhkB,EAAIlyB,OAOhB,IAAK,IAAIF,EAAIo2C,EAAKp2C,EAAIoyB,EAAIlyB,SACpBF,GAAKo2C,GAAmB,KAAZhkB,EAAIgkB,MADcp2C,EAAG,CAIrC,MAAM8+I,EAAMva,SAASnyG,EAAIL,UAAUqkB,EAAKp2C,EAAI,IAEhC,IAARo2C,EACF8pG,EAAOjvH,EAAKs1C,EAAOu4E,EAAK1sH,EAAK23B,EAAQ/pD,EAAI,EAAG8+I,EAAKA,IAEjDoB,EAAOjvH,EAAKs1C,EAAO,IAAMu4E,EAAK1sH,EAAK23B,EAAQ/pD,EAAI,EAAGmgJ,EAAYrB,EAAKA,GACnEoB,EAAOjvH,EAAKs1C,EAAO,IAAMu4E,EAAK1sH,EAAK23B,EAAQ/pD,EAAI,EAAGmgJ,EAAYrB,GAAMA,GACpEoB,EAAOjvH,EAAKs1C,EAAO,IAAMu4E,EAAK1sH,EAAK23B,EAAQ/pD,EAAI,EAAGmgJ,EAAYC,EAASA,EAAStB,EAAKsB,EAAStB,SAjB5F/0F,IAAWo2F,GACblvH,EAAIzwB,KAAK+lE,GAsCf25E,CAAOn/I,EAAQ,GAAIqxB,EAAK23B,EAAQ,EAAG,EAAG,GAEtC,IAAK,MAAMowF,KAAQp5I,EACjB,IAAKk/I,EAAsBl6G,SAASo0G,GAClC,OAAO,EAIX,OAAO,M,6ECt/Bb,kCACA,MAAMznH,EAAQ,iEAEP,SAASmzB,EAAmB7iD,GACjC,IAAIkD,EAAM,GAEV,IAAK,IAAIlG,EAAI,EAAGA,EAAIgD,IAAKhD,EACvBkG,GAAOwsB,EAAMd,OAAOlsB,KAAK4qB,MAAM5qB,KAAKitB,SAAWD,EAAMxyB,SAGvD,OAAOgG,I,+DCEF,MAAMorD,EAKXrsD,YACElD,EACAc,EACA+b,G,YAPK,I,EAQL,U,EAAA,M,sFACA1Z,KAAKnD,KAAOA,EACZmD,KAAKrC,OAASA,EACdqC,KAAK0Z,IAAMA,EAGbyhI,SAEE,MAAO,mBADMn7I,KAAKnD,KAAKuxC,SAAS,QAAUpuC,KAAKnD,KAAKwB,MAAM,GAAI,OAAOrD,QAAUgF,KAAKnD,S,6BC3BxF,4GAcA,SAASu+I,EAAoBx1F,GAC3B,OAAO,SAAU3nD,GACf,OAAOA,EAAEkkC,eAAiByjB,GAiBvB,MAAMuG,EAA6C,CACxD,CACEvuD,IAAK,cACLf,KAAM,WACNc,OAAQ,CACNwzB,MAAO,EACPguE,QAAS,kFACT4Y,IAAKqjC,EAAoB,GACzBlwH,KAAMpoB,IAAUmE,4BAElByS,IAAK,CAAC8wB,EAAiBmvB,EAAqB9uC,EAAiB4J,KAC3D,GAAMA,aAAkBiB,IAAxB,CAIA,IAAIjB,EAAOuoD,eAIX,OAAIvoD,EAAOotF,eAAiBptF,EAAOW,sBACjCX,EAAOuoD,gBAAiB,OACxBrjB,EAAS9gD,MAAM,0CAA4C4b,EAAOE,gBAKpEglC,EAAS9gD,MAAM,wDAVb8gD,EAAS9gD,MAAM,0FAJf8gD,EAAS3xC,MAAM,sCAiBrB,CACEpqB,IAAK,kBACLf,KAAM,eACNc,OAAQ,CACNwzB,MAAO,GACPguE,QAAS,kEACT4Y,IAAKqjC,EAAoB,IACzBlwH,KAA6C,EAAvCpoB,IAAUmE,4BAElByS,IAAK,CAAC8wB,EAAiBmvB,EAAqB9uC,EAAiB4J,KACrDA,aAAkBiB,IAIpBjB,EAAOqtF,YACTnoD,EAAS9gD,MAAM,mCAIjB4b,EAAOqtF,aAAc,EACrBnoD,EAAS9gD,MAAM,wBACf4b,EAAOotF,iBAVLloD,EAAS3xC,MAAM,qDAarB,CACEpqB,IAAK,kBACLf,KAAM,eACNc,OAAQ,CACNwzB,MAAO,IACPguE,QAAS,qCACT4Y,IAAKqjC,EAAoB,KACzBlwH,KAAMpoB,IAAU+D,yBAElB6S,IAAK,CAAC8wB,EAAiBmvB,EAAqB9uC,EAAiB4J,KACrDA,aAAkBiB,IAIpBjB,EAAOstF,YACTpoD,EAAS9gD,MAAM,mCAIjB4b,EAAOstF,aAAc,EACrBpoD,EAAS9gD,MAAM,yBACf4b,EAAOotF,iBAVLloD,EAAS3xC,MAAM,qDAarB,CACEpqB,IAAK,mBACLf,KAAM,gBACNc,OAAQ,CACNwzB,MAAO,IACPguE,QAAS,oDACT4Y,IAAKqjC,EAAoB,KACzBlwH,KAAMpoB,IAAU2D,uBAElBiT,IAAK,CAAC8wB,EAAiBmvB,EAAqB9uC,EAAiB4J,KACrDA,aAAkBiB,IAIpBjB,EAAOutF,aACTroD,EAAS9gD,MAAM,oCAIjB4b,EAAOutF,cAAe,EACtBroD,EAAS9gD,MAAM,0BACf4b,EAAOotF,iBAVLloD,EAAS3xC,MAAM,sDAarB,CACEpqB,IAAK,kBACLf,KAAM,eACNc,OAAQ,CACNwzB,MAAO,IACPguE,QAAS,iCACT4Y,IAAKqjC,EAAoB,KACzBlwH,KAAMpoB,IAAUyD,uBAElBmT,IAAK,CAAC8wB,EAAiBmvB,EAAqB9uC,EAAiB4J,KACrDA,aAAkBiB,IAIpBjB,EAAOwtF,aACTtoD,EAAS9gD,MAAM,oCAIjB4b,EAAOwtF,cAAe,EACtBtoD,EAAS9gD,MAAM,0BACf4b,EAAOotF,iBAVLloD,EAAS3xC,MAAM,qDAarB,CACEpqB,IAAK,mBACLf,KAAM,gBACNc,OAAQ,CACNwzB,MAAO,IACPguE,QAAS,6BACT4Y,IAAKqjC,EAAoB,KACzBlwH,KAAMpoB,IAAUuD,uBAElBqT,IAAK,CAAC8wB,EAAiBmvB,EAAqB9uC,EAAiB4J,KACrDA,aAAkBiB,IAIpBjB,EAAOytF,YACTvoD,EAAS9gD,MAAM,qCAIjB4b,EAAOytF,aAAc,EACrBvoD,EAAS9gD,MAAM,2BACf4b,EAAOotF,iBAVLloD,EAAS3xC,MAAM,sDAarB,CACEpqB,IAAK,aACLf,KAAM,iBACNc,OAAQ,CACNwzB,MAAO,GACPguE,QAAS,+EACT4Y,IAAKqjC,EAAoB,IACzBlwH,KAAMpoB,IAAUiE,4BAElB2S,IAAK,CAAC8wB,EAAiBmvB,KACrBA,EAAS9gD,MAAM,kCACf8gD,EAAS9gD,MAAM,sEAGnB,CACEjb,IAAK,aACLf,KAAM,iBACNc,OAAQ,CACNwzB,MAAO,IACPguE,QAAS,gFACT4Y,IAAKqjC,EAAoB,KACzBlwH,KAAMpoB,IAAU2D,uBAElBiT,IAAK,CAAC8wB,EAAiBmvB,KACrBA,EAAS9gD,MAAM,kCACf8gD,EAAS9gD,MAAM,uEAGnB,CACEjb,IAAK,iBACLf,KAAM,qBACNc,OAAQ,CACNwzB,MAAO,GACPguE,QAAS,0FACT4Y,IAAKqjC,EAAoB,IACzBlwH,KAAMpoB,IAAU+D,yBAElB6S,IAAK,CAAC8wB,EAAiBmvB,EAAqB9uC,EAAiB4J,EAAoBrO,KAC/E,GAAoB,IAAhBA,EAAKprB,OAEP,YADA2+D,EAAS9gD,MAAM,2EAIjB,MAAMwiI,EAAe3gI,YAAU0L,EAAK,IAChB,MAAhBi1H,EAKAA,aAAwB74F,IAC1BmX,EAAS9gD,MAAO,0DAIlB8gD,EAAS9gD,MAAMwiI,EAAa1mH,SAAW,KACvCglC,EAAS9gD,MAAM,+BAAiCwiI,EAAax6F,gBAC7D8Y,EAAS9gD,MAAM,kCAAoCwiI,EAAaz7G,gBAChE+5B,EAAS9gD,MAAM,uBAAyBwiI,EAAav7G,cACrD65B,EAAS9gD,MACN,oCAAmCoS,YACW,IAA7CksC,YAAqBkkF,EAAcxwH,IACnC,IAGJ8uC,EAAS9gD,MACN,oCAAmCoS,YACQ,IAA1CosC,YAAkBgkF,EAAcxwH,IAChC,IAGJ8uC,EAAS9gD,MACN,sCAAqCoS,YACQ,IAA5CqsC,YAAoB+jF,EAAcxwH,IAClC,KA5BF8uC,EAAS9gD,MAAM,gCAiCrB,CACEjb,IAAK,WACLf,KAAM,eACNc,OAAQ,CACNwzB,MAAO,GACPguE,QAAS,kGACT4Y,IAAKqjC,EAAoB,IACzBlwH,KAAMpoB,IAAUiE,4BAElB2S,IAAK,CAAC8wB,EAAiBmvB,KACrBA,EAAS9gD,MAAM,kCACf8gD,EAAS9gD,MAAM,2FACf8gD,EAAS9gD,MAAM,6EAGnB,CACEjb,IAAK,WACLf,KAAM,gBACNc,OAAQ,CACNwzB,MAAO,EACPguE,QAAS,iGACT4Y,IApQG,SAAU95G,GACf,OAAOA,EAAEy2C,YAAY15C,OAAS,GAAKiD,EAAEkkC,eAAiB,GAoQpDjX,KAAMpoB,IAAUmE,2BAA6B,IAE/CyS,IAAK,CAAC8wB,EAAiBmvB,EAAqB9uC,KAC1CqtG,IAAcpkH,SAGlB,CACElW,IAAK,SACLf,KAAM,aACNc,OAAQ,KACR+b,IAAK,CAAC8wB,EAAiBmvB,EAAqB9uC,KAC1C,MAAMywH,EAAY96I,KAAK+mC,MAAmD,GAA7Cr2B,IAAmBsC,yBAGhD,KADEqX,EAAOiJ,cAAc94B,QAAUsgJ,GAAazwH,EAAOhsB,MAAMwjD,GAAG,OAASx3B,EAAOsX,eAAiB,MAK7F,OAHAw3B,EAAS9gD,MAAO,kBAAiBgS,EAAOiJ,cAAc94B,YAAYsgJ,KAClE3hF,EAAS9gD,MAAO,UAAS/Y,IAAeoB,YAAY2pB,EAAOhsB,MAAMm2B,4BACjE2kC,EAAS9gD,MAAO,kBAAiBgS,EAAOsX,wBAI1Cw3B,EAAS9gD,MAAM,wBACf8gD,EAAS9gD,MAAM,sB,6BCjTrB,qDA4EO,MAAMqc,EAAoC,CAC/C,CACE0K,eAAgB,GAChBjL,SAAU,QACVyL,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAaoiC,WAC/B8K,qBAAsB,CACpB/9C,IAAK,KACL0rB,IAAK,MAEPuR,aAAc,GACdhK,YAAapiB,IAAaoiC,YAE5B,CACElW,eAAgB,GAChBjL,SAAU,WACVyL,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAasiC,iBAC/B4K,qBAAsB,CACpB/9C,IAAK,KACL0rB,IAAK,MAEPuR,aAAc,GACdhK,YAAapiB,IAAasiC,kBAE5B,CACEpW,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,UACVyL,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAawiC,0BAC/B0K,qBAAsB,CACpB/9C,IAAK,KACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAawiC,2BAE5B,CACEtW,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,QACViB,WAAY,CAAC2F,IAAgBmkB,WAC7BpqB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa0iC,wBAC/BwK,qBAAsB,CACpB/9C,IAAK,KACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa0iC,yBAE5B,CACExW,eAAgB,GAChBjL,SAAU,MACViB,WAAY,CAAC2F,IAAgB8kB,gBAC7BjgB,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa4iC,YAC/BsK,qBAAsB,CACpB/9C,IAAK,KACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa4iC,aAE5B,CACE1W,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,WACViB,WAAY,CAAC2F,IAAgBmkB,UAAWnkB,IAAgB6kB,mBACxDhgB,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa8iC,wBAC/BoK,qBAAsB,CACpB/9C,IAAK,KACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa8iC,yBAE5B,CACE5W,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,UACViB,WAAY,CAAC2F,IAAgB0kB,kBAAmB1kB,IAAgB+jB,oBAChEhqB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAagjC,4BAC/BkK,qBAAsB,CACpB/9C,IAAK,KACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAagjC,6BAE5B,CACE9W,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,SACVyL,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAakjC,kBAC/BgK,qBAAsB,CACpB/9C,IAAK,KACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAakjC,mBAE5B,CACEhX,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,YACVyL,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAaojC,+BAC/B8J,qBAAsB,CACpB/9C,IAAK,KACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAaojC,gCAE5B,CACElX,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,cACViB,WAAY,CAAC2F,IAAgBkkB,kBAC7BnqB,eAAgB,CACdzyB,IAAK,GACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa0jC,yBAC/BwJ,qBAAsB,CACpB/9C,IAAK,KACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa0jC,0BAE5B,CACExX,eAAgB,GAChBjL,SAAU,gBACVyL,eAAgB,IAChBnK,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa0jC,yBAC/BwJ,qBAAsB,CACpB/9C,IAAK,KACL0rB,IAAK,MAEPuR,aAAc,EACdhK,YAAa,sCAEf,CACE8J,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,YACVyL,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,KAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa26C,wBAC/BzN,qBAAsB,CACpB/9C,IAAK,KACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa26C,yBAE5B,CACEzuB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,UACVyL,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa46C,gBAC/B1N,qBAAsB,CACpB/9C,IAAK,KACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa46C,iBAE5B,CACE1uB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,WACVyL,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,KAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB,WAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,KAGT,CACEqR,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,SACViB,WAAY,CAAC2F,IAAgBmkB,WAC7BpqB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa66C,mBAC/B3N,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa66C,oBAE5B,CACE3uB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,WACViB,WAAY,CAAC2F,IAAgBgkB,gBAC7BjqB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,KAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa86C,iBAC/B5N,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa86C,kBAE5B,CACE5uB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,SACVyL,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa+6C,2BAC/B7N,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa+6C,4BAE5B,CACE7uB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,cACVW,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAag7C,wBAC/B9N,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAag7C,yBAE5B,CACE9uB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,aACViB,WAAY,CAAC2F,IAAgB0kB,mBAC7B3qB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,MAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB,qBAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,KAGT,CACEqR,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,YACViB,WAAY,CAAC2F,IAAgB2kB,kBAC7B5qB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,KAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB,yBAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,KAGT,CACEqR,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,kBACViB,WAAY,CAAC2F,IAAgBgkB,eAAgBhkB,IAAgBokB,oBAC7Dvf,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,KAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB,kBAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,KAGT,CACEqR,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,iBACVyL,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa6nI,0BAC/B36F,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa6nI,2BAE5B,CACE37G,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,WACViB,WAAY,CAAC2F,IAAgBukB,eAC7B1f,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAai7C,cAC/B/N,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAai7C,eAE5B,CACE/uB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,QACViB,WAAY,CAAC2F,IAAgB+jB,oBAC7BhqB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAak7C,0BAC/BhO,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAak7C,2BAE5B,CACEhvB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,SACViB,WAAY,CAAC2F,IAAgB2kB,kBAC7B9f,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,KAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB,wBAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,KAGT,CACEqR,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,qBACVyL,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,KAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB,qBAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,KAGT,CACEqR,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,UACViB,WAAY,CAAC2F,IAAgBgkB,eAAgBhkB,IAAgBykB,mBAC7D1qB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAam7C,6BAC/BjO,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAam7C,8BAE5B,CACEjvB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,WACVyL,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa8nI,iBAC/B56F,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa8nI,kBAE5B,CACE57G,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,eACViB,WAAY,CAAC2F,IAAgBgkB,gBAC7BjqB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,MACL0rB,IAAK,MAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAao7C,8BAC/BlO,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAao7C,+BAE5B,CACElvB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,WACVyL,eAAgB,CACdv9B,IAAK,MACL0rB,IAAK,MAEP0H,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAaq7C,kBAC/BnO,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAaq7C,mBAE5B,CACEnvB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,WACVyL,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,eAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,KAGT,CACEqR,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,YACVW,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,kBAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,KAGT,CACEqR,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,YACVW,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAau7C,iBAC/BrO,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAau7C,kBAE5B,CACErvB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,mBACVW,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAaw7C,qBAC/BtO,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAaw7C,sBAE5B,CACEtvB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,YACViB,WAAY,CAAC2F,IAAgBskB,eAC7BvqB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAay7C,yBAC/BvO,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAay7C,0BAE5B,CACEvvB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,eACVW,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa+nI,YAC/B76F,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa+nI,aAE5B,CACE77G,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,cACViB,WAAY,CACV2F,IAAgBwkB,gBAChBxkB,IAAgBykB,kBAChBzkB,IAAgB4kB,oBAElB7qB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,OAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAakzF,0BAC/BhmD,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAakzF,2BAE5B,CACEhnE,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,eACVW,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAamzF,gCAC/BjmD,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAamzF,iCAE5B,CACEjnE,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,aACViB,WAAY,CAAC2F,IAAgBwkB,gBAAiBxkB,IAAgBykB,kBAAmBzkB,IAAgB2kB,kBACjG5qB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAaizF,sBAC/B/lD,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAaizF,uBAE5B,CACE/mE,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,UACVyL,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa07C,0BAC/BxO,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa07C,2BAE5B,CACExvB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,WACViB,WAAY,CAAC2F,IAAgB4kB,oBAC7B7qB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,oBAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,KAGT,CACEqR,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,UACVW,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,MAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,UAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,KAGT,CACEqR,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,UACViB,WAAY,CAAC2F,IAAgBukB,eAC7B1f,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,MAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa27C,iBAC/BzO,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa27C,kBAE5B,CACEzvB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,UACViB,WAAY,CAAC2F,IAAgBkkB,kBAC7BnqB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,MAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa47C,yBAC/B1O,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa47C,0BAE5B,CACE1vB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,gBACVyL,eAAgB,CACdv9B,IAAK,KACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,sBAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,KAGT,CACEqR,eAAgB,EAChBjL,SAAU,UACViB,WAAY,GACZN,eAAgB,EAChB8K,eAAgB,IAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAagoI,kBAC/B96F,qBAAsB,EACtB9gB,aAAc,IACdhK,YAAapiB,IAAagoI,mBAE5B,CACE97G,eAAgB,GAChBjL,SAAU,aACViB,WAAY,CAAC2F,IAAgBskB,eAC7BvqB,eAAgB,EAChB8K,eAAgB,IAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa87C,mBAC/B5O,qBAAsB,EACtB9gB,aAAc,EACdhK,YAAapiB,IAAa87C,oBAE5B,CACE5vB,eAAgB,GAChBjL,SAAU,kBACVW,eAAgB,EAChB8K,eAAgB,KAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,kBAClBurB,qBAAsB,EACtB9gB,aAAc,IAEhB,CACEF,eAAgB,GAChBjL,SAAU,WACVW,eAAgB,EAChB8K,eAAgB,KAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAaioI,iBAC/B/6F,qBAAsB,GACtB9gB,aAAc,GACdhK,YAAapiB,IAAaioI,kBAE5B,CACE/7G,eAAgB,GAChBjL,SAAU,OACVW,eAAgB,EAChB8K,eAAgB,KAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,iBAClBurB,qBAAsB,GACtB9gB,aAAc,IAEhB,CACEF,eAAgB,GAChBjL,SAAU,aACVW,eAAgB,EAChB8K,eAAgB,MAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,2BAClBurB,qBAAsB,GACtB9gB,aAAc,IAEhB,CACEF,eAAgB,GAChBjL,SAAU,UACViB,WAAY,CAAC2F,IAAgB8kB,gBAC7B/qB,eAAgB,EAChB8K,eAAgB,IAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,wBAClBurB,qBAAsB,GACtB9gB,aAAc,IAEhB,CACEF,eAAgB,GAChBjL,SAAU,eACViB,WAAY,CAAC2F,IAAgBglB,WAC7BjrB,eAAgB,EAChB8K,eAAgB,KAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,eAClBurB,qBAAsB,IACtB9gB,aAAc,IAEhB,CACEF,eAAgB,GAChBjL,SAAU,gBACViB,WAAY,CAAC2F,IAAgBokB,oBAC7BrqB,eAAgB,EAChB8K,eAAgB,IAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,oBAClBurB,qBAAsB,GACtB9gB,aAAc,IAEhB,CACEF,eAAgB,GAChBjL,SAAU,iBACVW,eAAgB,EAChB8K,eAAgB,IAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,6BAClBurB,qBAAsB,GACtB9gB,aAAc,IAEhB,CACEF,eAAgB,GAChBjL,SAAU,WACVW,eAAgB,EAChB8K,eAAgB,KAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,gBAClBurB,qBAAsB,IACtB9gB,aAAc,IAEhB,CACEF,eAAgB,GAChBjL,SAAU,eACVW,eAAgB,EAChB8K,eAAgB,IAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,qBAClBurB,qBAAsB,GACtB9gB,aAAc,IAEhB,CACEF,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,YACViB,WAAY,CAAC2F,IAAgB+kB,WAC7BhrB,eAAgB,EAChB8K,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB3hB,IAAa67C,oBAC/B3O,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa67C,qBAE5B,CACE3vB,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,gBACVyL,eAAgB,CACdv9B,IAAK,IACL0rB,IAAK,KAEP0H,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,gBAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAauzF,sBAE5B,CACErnE,eAAgB,GAChBjL,SAAU,WACVW,eAAgB,EAChB8K,eAAgB,IAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,mBAClBurB,qBAAsB,IACtB9gB,aAAc,GACdhK,YAAapiB,IAAayzF,iBAE5B,CACEvnE,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,oBACVW,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,KAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,4BAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa2zF,6BAE5B,CACEznE,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,qBACVW,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,IAChBnK,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB,qBAClBurB,qBAAsB,CACpB/9C,IAAK,KACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAa0zF,uBAE5B,CACExnE,eAAgB,CACd/8B,IAAK,GACL0rB,IAAK,IAEPoG,SAAU,eACVyL,eAAgB,KAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,eAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,CACZj9B,IAAK,GACL0rB,IAAK,IAEPuH,YAAapiB,IAAawzF,qBAE5B,CACEtnE,eAAgB,EAChBjL,SAAU,eACViB,WAAY,CAAC2F,IAAgBkkB,iBAAkBlkB,IAAgB+kB,WAC/DhrB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,EAChBnK,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB,cAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,EACdhK,YAAa,qBAEf,CACE8J,eAAgB,EAChBjL,SAAU,UACViB,WAAY,CAAC2F,IAAgBqkB,iBAC7BtqB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,EAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,UAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,EACdhK,YAAa,yBAEf,CACE8J,eAAgB,EAChBjL,SAAU,cACViB,WAAY,CAAC2F,IAAgBqkB,iBAC7BtqB,eAAgB,CACdzyB,IAAK,EACL0rB,IAAK,GAEP6R,eAAgB,EAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,UAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,EACdhK,YAAa,kBAEf,CACE8J,eAAgB,EAChBjL,SAAU,IACVW,eAAgB,EAChB8K,eAAgB,EAChBnK,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB,IAClBurB,qBAAsB,CACpB/9C,IAAK,IACL0rB,IAAK,KAEPuR,aAAc,EACdhK,YAAa,wBAEf,CACE8J,eAAgB,EAChBjL,SAAU,OACViB,WAAY,CAAC2F,IAAgBqkB,iBAC7BtqB,eAAgB,EAChB8K,eAAgB,EAChBnK,aAAc,EACdb,qBAAsB,EACtBC,iBAAkB,WAClBurB,qBAAsB,CACpB/9C,IAAK,GACL0rB,IAAK,IAEPuR,aAAc,EACdhK,YAAa,mBAEf,CACE8J,eAAgB,EAChBjL,SAAU,WACViB,WAAY,CAAC2F,IAAgBikB,YAC7Bpf,eAAgB,EAChBnK,aAAc,GACdb,qBAAsB,EACtBC,iBAAkB,SAClBurB,qBAAsB,IACtB9gB,aAAc,EACdhK,YAAa,mBAEf,CACE8J,eAAgB,EAChBjL,SAAU,eACVyL,eAAgB,EAChBhL,qBAAsB,EACtBC,iBAAkB,eAClBurB,qBAAsB,IACtB9gB,aAAc,EACdhK,YAAa,kB,2ECxhDjB,MAAM2F,EAAiC,CAAC,QAAS,WAAY,aAAc,OAAQ,UAE5E,MAAM2tE,EAAiB,c,YAGpB,G,EAHoB,W,EAAA,M,sFAQ5BQ,WACE,OAAOnuE,EAAqBz7B,KAAK6pG,OAInCa,aACM1qG,KAAK6pG,MAAQ,GAAK7pG,KAAK6pG,OAASpuE,EAAqBzgC,UACvDgF,KAAK6pG,MAAQ,KAGb7pG,KAAK6pG,MACH7pG,KAAK6pG,OAASpuE,EAAqBzgC,SACrCgF,KAAK6pG,MAAQ,GAKjB31E,SACE,OAAOnG,YAAe,mBAAoB/tB,MAK7B,gBAAC1C,GACd,OAAO8wB,YAAiBg7E,EAAkB9rG,EAAM9C,OAIpDoE,IAAQivB,aAAau7E,iBAAmBA,G,6BCzCxC,uDAIO,MAAMivB,EAAgC,IAE7C,WACE,IAAI91D,EAAOzM,EAAIliD,EACf2uD,EAAQ,kCACRzM,EAAKv6B,IAAgBC,wBACrB5nB,EACE,o5DAkBFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,8DACRzM,EAAKv6B,IAAgB8jB,8BACrBzrC,EACE,gqIA8CFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,+BACRzM,EAAKv6B,IAAgB+jB,mBACrB1rC,EACE,8qHAoCFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,mBACRzM,EAAKv6B,IAAgBgkB,eACrB3rC,EACE,kgEAkBFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,kBACRzM,EAAKv6B,IAAgBikB,WACrB5rC,EACE,kuCAaFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,0CACRzM,EAAKv6B,IAAgBkkB,iBACrB7rC,EACE,86CAcFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,aACRzM,EAAKv6B,IAAgBmkB,UACrB9rC,EACE,gvCAYFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,wBACRzM,EAAKv6B,IAAgBokB,mBACrB/rC,EACE,0wDAmBFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,2CACRzM,EAAKv6B,IAAgBqkB,gBACrBhsC,EACE,irBASFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,+CACRzM,EAAKv6B,IAAgBskB,cACrBjsC,EACE,2yBAUFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,sBACRzM,EAAKv6B,IAAgBukB,cACrBlsC,EACE,spCAcFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,mBACRzM,EAAKv6B,IAAgBwkB,gBACrBnsC,EACE,m0CAcFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,6BACRzM,EAAKv6B,IAAgBykB,kBACrBpsC,EACE,wnCAaFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,uCACRzM,EAAKv6B,IAAgB0kB,kBACrBrsC,EACE,+oCAYFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,oBACRzM,EAAKv6B,IAAgB2kB,iBACrBtsC,EACE,utBASFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,oCACRzM,EAAKv6B,IAAgB4kB,mBACrBvsC,EACE,2tBAUFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,0BACRzM,EAAKv6B,IAAgB6kB,kBACrBxsC,EACE,45CAoBFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,mBACRzM,EAAKv6B,IAAgB8kB,eACrBzsC,EACE,i3BAcFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,cACRzM,EAAKv6B,IAAgB+kB,UACrB1sC,EACE,+fAQFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,iBACRzM,EAAKv6B,IAAgBglB,UACrB3sC,EACE,6xCAcFykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GAE5C2uD,EAAQ,iBACRzM,EAAKv6B,IAAgBilB,aACrB5sC,EAAM,GACNykH,EAAYviE,GAAM,IAAIsU,IAAW7H,EAAOzM,EAAIliD,GA5a9C,I,6BCNA,6IAsCO,MAAMrV,EAsPXwB,cAEEC,KAAKmiC,cAAgB,EAGrBniC,KAAK+oB,GAAK,GACV/oB,KAAKomC,OAAS,GACdpmC,KAAKoiC,SAAW,EAChBpiC,KAAKqiC,QAAU,EACfriC,KAAKsiC,UAAY,EACjBtiC,KAAKuiC,QAAU,EAGfviC,KAAKwiC,SAAW,EAGhBxiC,KAAKonC,aAAe,EAGpBpnC,KAAKiyB,oBAAsB,EAC3BjyB,KAAKkyB,mBAAqB,EAC1BlyB,KAAKmyB,mBAAqB,EAC1BnyB,KAAKoyB,kBAAoB,EAGzBpyB,KAAKyiC,YAAc,EACnBziC,KAAK0iC,aAAe,EACpB1iC,KAAK2iC,YAAc,EACnB3iC,KAAK4iC,cAAgB,EACrB5iC,KAAK6iC,YAAc,EACnB7iC,KAAK8iC,aAAe,EACpB9iC,KAAKqnC,iBAAmB,EAExBrnC,KAAKoxB,aAAe,EACpBpxB,KAAKsxB,cAAgB,EACrBtxB,KAAKuxB,aAAe,EACpBvxB,KAAKwxB,eAAiB,EACtBxxB,KAAKyxB,aAAe,EACpBzxB,KAAK0xB,cAAgB,EAErB1xB,KAAK2xB,iBAAmB,EACxB3xB,KAAK4xB,kBAAoB,EACzB5xB,KAAK6xB,iBAAmB,EACxB7xB,KAAK8xB,mBAAqB,EAC1B9xB,KAAK+xB,iBAAmB,EACxB/xB,KAAKgyB,kBAAoB,EAEzBhyB,KAAKqyB,iBAAmB,EACxBryB,KAAKsyB,iBAAmB,EAGxBtyB,KAAKnB,MAAQ,IAAIC,IAAQ,KAGzBkB,KAAK60B,aAAe,GAGpB70B,KAAK+iC,KAAO1U,IAAS2U,SACrBhjC,KAAKijC,SAAWvvB,IAAawvB,aAK7BljC,KAAKojC,KAAO,GAGZpjC,KAAKmjC,YAAc,GAGnBnjC,KAAK+hC,cAAgB,GACrB/hC,KAAKqjC,iBAAmB,GAGxBrjC,KAAKgmC,aAAe,GACpBhmC,KAAKimC,YAAc,IAAIsd,IAGvBvjD,KAAKsjC,SAAW,GAChBtjC,KAAKujC,mBAAqB,GAG1BvjC,KAAKwjC,oBAAsB,GAC3BxjC,KAAK8zB,cAAgB,GAErB9zB,KAAK00C,YAAc,GAGnB10C,KAAKiiC,gBAAkB,EACvBjiC,KAAKkiC,MAAQ,EAEbliC,KAAKuyB,iBAAmB,EACxBvyB,KAAKwyB,mBAAqB,EAG1BxyB,KAAKmkC,WAAY,EACjBnkC,KAAK+pC,OAAQ,EACb/pC,KAAKspC,SAAW,GAEhBtpC,KAAKokC,uBAAyB,GAC9BpkC,KAAKqkC,8BAAgC,GAErCrkC,KAAKwkC,oBAAsB,EAC3BxkC,KAAKykC,mBAAqB,EAC1BzkC,KAAK0kC,mBAAqB,EAC1B1kC,KAAK2kC,mBAAqB,EAC1B3kC,KAAK4kC,mBAAqB,EAC1B5kC,KAAK6kC,mBAAqB,EAC1B7kC,KAAK8kC,gBAAkB,EACvB9kC,KAAK+kC,kBAAoB,EACzB/kC,KAAKypC,kBAAoB,EAEzBzpC,KAAKglC,kBAAoB,EACzBhlC,KAAKilC,iBAAmB,EACxBjlC,KAAKklC,iBAAmB,EACxBllC,KAAKmlC,iBAAmB,EACxBnlC,KAAKolC,iBAAmB,EACxBplC,KAAKqlC,iBAAmB,EACxBrlC,KAAKslC,cAAgB,EACrBtlC,KAAKulC,gBAAkB,EAEvBvlC,KAAKskC,kBAAoB,GACzBtkC,KAAKiuC,oBAAsB,EAE3BjuC,KAAKgrB,UAAY,GAEjBhrB,KAAKukC,UAAY,GAEjBvkC,KAAKwlC,WAAa,EAClBxlC,KAAK0pC,wBAA0B,EAC/B1pC,KAAKirC,yBAA2B,EAEhCjrC,KAAKyyB,gBAAkB,EAGvBzyB,KAAK0yB,wBAA0B,EAC/B1yB,KAAK2yB,gCAAkC,EACvC3yB,KAAK4yB,2BAA6B,EAClC5yB,KAAK6yB,4BAA8B,EACnC7yB,KAAK8yB,6BAA+B,EAGpC9yB,KAAKwmC,eAAgB,EACrBxmC,KAAKymC,iBAAkB,EACvBzmC,KAAK0mC,WAAY,EACjB1mC,KAAK2mC,iBAAkB,EAGvB3mC,KAAKohB,KAAO,KAGZphB,KAAKjB,YAAc,KAGnBiB,KAAKyiB,YAAc,KACnBziB,KAAK+yB,6BAA+B,EACpC/yB,KAAKgzB,8BAAgC,EACrChzB,KAAKizB,0BAA4B,EACjCjzB,KAAKkzB,gCAAkC,EAGvClzB,KAAK8jC,QAAU,GACf9jC,KAAKyjC,UAAY,GACjBzjC,KAAK6jC,oBAAsB,EAE3B7jC,KAAK4jC,SAAW,EAGhB5jC,KAAKylC,WAAa,EAClBzlC,KAAK2uG,cAAgB,EACrB3uG,KAAK4lC,qBAAuB,EAC5B5lC,KAAK6mC,yBAA2B,EAGhC7mC,KAAK8lC,aAAe,IAAI0C,IACxBxoC,KAAK4mC,aAAe,IAAI4B,IAExBxoC,KAAK6lC,uBAAyB,EAE9B7lC,KAAKN,SAAW,GAEhBM,KAAK8pB,KAAO8xH,KACZ57I,KAAKgiC,qBAAuB45G,KAC5B57I,KAAKqmC,mBAAqBu1G,KAC1B57I,KAAK8mC,cAAgB80G,KACrB57I,KAAK+mC,eAAiB60G,IACtB57I,KAAKmnC,kBAAoBy0G,KACzB57I,KAAKwnC,iBAAmBo0G,KACxB57I,KAAKynC,WAAam0G,IAClB57I,KAAK6nC,SAAW+zG,KAChB57I,KAAK8nC,UAAY8zG,IACjB57I,KAAKgoC,UAAY4zG,KACjB57I,KAAK+qB,UAAY6wH,IACjB57I,KAAKqoC,kBAAoBuzG,KACzB57I,KAAK0oC,eAAiBkzG,IACtB57I,KAAK2oC,gBAAkBizG,IACvB57I,KAAK4oC,eAAiBgzG,IACtB57I,KAAK6oC,iBAAmB+yG,IACxB57I,KAAK8oC,eAAiB8yG,IACtB57I,KAAK+oC,gBAAkB6yG,IACvB57I,KAAKgpC,oBAAsB4yG,IAC3B57I,KAAKipC,oBAAsB2yG,KAC3B57I,KAAKmpC,gBAAkByyG,KACvB57I,KAAK2pC,oBAAsBiyG,KAC3B57I,KAAKuqC,UAAYqxG,KACjB57I,KAAKmrC,mBAAqBywG,IAC1B57I,KAAKqrC,KAAOuwG,KACZ57I,KAAK0rC,WAAakwG,IAClB57I,KAAKgsC,kBAAoB4vG,KACzB57I,KAAKisC,aAAe2vG,KACpB57I,KAAKksC,mBAAqB0vG,IAC1B57I,KAAKmsC,cAAgByvG,KACrB57I,KAAKosC,aAAewvG,KACpB57I,KAAKqsC,iBAAmBuvG,KACxB57I,KAAKusC,qBAAuBqvG,KAC5B57I,KAAKysC,sBAAwBmvG,KAC7B57I,KAAK2sC,yBAA2BivG,KAChC57I,KAAKggB,eAAiB47H,KACtB57I,KAAK8sC,kBAAoB8uG,IACzB57I,KAAKgrC,iBAAmB4wG,IACxB57I,KAAKyqC,mBAAqBmxG,IAC1B57I,KAAK0qC,kBAAoBkxG,IACzB57I,KAAK2qC,kBAAoBixG,IACzB57I,KAAK4qC,kBAAoBgxG,IACzB57I,KAAK6qC,kBAAoB+wG,IACzB57I,KAAK8qC,kBAAoB8wG,IACzB57I,KAAK+qC,eAAiB6wG,IACtB57I,KAAK+tC,uBAAyB6tG,KAC9B57I,KAAKwuC,kBAAoBotG,IACzB57I,KAAK2uC,wBAA0BitG,IAC/B57I,KAAK8uC,WAAa8sG,KAClB57I,KAAK0vC,UAAYksG,KACjB57I,KAAK2vC,YAAcisG,IACnB57I,KAAK4vC,WAAagsG,KAClB57I,KAAKsgB,YAAcs7H,IACnB57I,KAAKgwC,YAAc4rG,IACnB57I,KAAKwpC,oBAAsBoyG,KAC3B57I,KAAK0wC,WAAakrG,KAClB57I,KAAK2wC,aAAeirG,KACpB57I,KAAKof,YAAcw8H,IACnB57I,KAAK6wC,YAAc+qG,IACnB57I,KAAK0xC,uBAAyBkqG,IAC9B57I,KAAKuyC,QAAUqpG,KACf57I,KAAKwyC,oBAAsBopG,IAC3B57I,KAAK0yC,8BAAgCkpG,IACrC57I,KAAK2yC,cAAgBipG,IACrB57I,KAAK4yC,4BAA8BgpG,IACnC57I,KAAK6yC,2BAA6B+oG,IAClC57I,KAAK8yC,oBAAsB8oG,IAC3B57I,KAAK+yC,8BAAgC6oG,IACrC57I,KAAKgzC,oBAAsB4oG,IAC3B57I,KAAKizC,iBAAmB2oG,IACxB57I,KAAKkzC,oBAAsB0oG,IAC3B57I,KAAKmzC,4BAA8ByoG,IACnC57I,KAAKozC,kBAAoBwoG,IACzB57I,KAAKqzC,0BAA4BuoG,IACjC57I,KAAKmxC,YAAcyqG,KACnB57I,KAAKmmC,wBAA0By1G,KAC/B57I,KAAKy0C,sBAAwBmnG,KAC7B57I,KAAK+0C,2BAA6B6mG,IAClC57I,KAAK+5C,iBAAmB6hG,KACxB57I,KAAKg6C,kBAAoB4hG,KACzB57I,KAAKk6C,yBAA2B0hG,IAChC57I,KAAKulB,OAASq2H,KACd57I,KAAKg7C,aAAe4gG,IACpB57I,KAAKk7C,oBAAsB0gG,IAC3B57I,KAAKm7C,YAAcygG,IACnB57I,KAAKwsC,qBAAuBovG,IAC5B57I,KAAKu7C,kBAAoBqgG,IACzB57I,KAAK8pC,gBAAkB+xG,IACvB77I,KAAKotI,qBAAuB0O,IAC5B97I,KAAKqtI,cAAgByO,IACrB97I,KAAKstI,iBAAmBwO,IACxB97I,KAAKsuI,qBAAuByN,IAC5B/7I,KAAKuuI,eAAiBwN,IACtB/7I,KAAKwuI,iBAAmBuN,IACxB/7I,KAAKk6G,cAAgB8hC,IACrBh8I,KAAKm6G,eAAiB6hC,IACtBh8I,KAAK2gE,YAAcq7E,IACnBh8I,KAAKo6G,YAAc4hC,IACnBh8I,KAAKshB,OAAS06H,IACdh8I,KAAKq6G,UAAY2hC,IAEjBh8I,KAAKm7G,aAAe8gC,IACpBj8I,KAAK6e,iBAAmBo9H,IACxBj8I,KAAKs7B,gBAAkB2gH,IACvBj8I,KAAKwf,sBAAwBy8H,IAC7Bj8I,KAAKuhD,oBAAsB06F,IAC3Bj8I,KAAKupC,gBAAkB,GACvBvpC,KAAK8vC,2BAA4B,EACjC9vC,KAAK+vC,wBAA0B,KAE/B/vC,KAAKy7C,QAAUmgG,IACf57I,KAAK07C,QAAUkgG,KAMjB1nH,SACE,OAAOnG,YAAe,eAAgB/tB,MAOzB,gBAAC1C,GACd,OAAO8wB,YAAiB7vB,EAAcjB,EAAM9C,OAIhDoE,IAAQivB,aAAatvB,aAAeA,G,6BCnlBpC,8CAOO,SAASurC,EAA+BwK,GAC7C,MAAMD,EAAkBC,aAAe5jB,IAAe4jB,EAAIz3C,KAAOy3C,EAEjE,IAAK,MAAMC,KAASv0C,KAAK8zB,cACvB,GAAIygB,EAAM13C,OAASw3C,EACjB,OAAO,EAIX,IAAK,MAAME,KAASv0C,KAAKwjC,oBACvB,GAAI+Q,EAAM13C,OAASw3C,EACjB,OAAO,EAIX,OAAO,I,6BCfF,SAAS+2B,EAAYn9C,GAC1B,IAAK,MAAMrwB,KAAOqwB,EACZA,EAAI9yB,eAAeyC,WAEdqwB,EAAIrwB,GAXjB,mC,6BCAA,qDAQA,MAAMs+I,EAAsC,GACtCC,EAAgC,GAChCC,EAA6C,GAC7CC,EAA2C,GAC3CC,EAAwC,GACxCC,EAAsC,GACtCC,EAAmC,GACnCC,EAAsC,GACtCC,EAAgD,GAChDC,EAAgD,GAChDC,EAAwD,GACxDC,EAAoD,GACpDC,EAAwD,GACxDC,EAA4B,GAC5BC,EAA8B,GAC9BC,EAAoC,GACpCC,EAAsC,GACtCC,EAAuC,GACvCC,EAAyB,GAE/B3qG,IAAkCpR,QAASyjB,IACzCo3F,EAAqBp3F,IAAK,EAC1Bw3F,EAAuBx3F,IAAK,IAG9BrS,IAA4BpR,QAASyjB,IACnCq3F,EAAer3F,IAAK,EACpBw3F,EAAuBx3F,IAAK,IAG9BrS,IAAyCpR,QAASyjB,IAChDs3F,EAA4Bt3F,IAAK,EACjCw3F,EAAuBx3F,IAAK,IAG9Bw3F,EAAuB7pG,IAA0C,KAAM,EACvE4pG,EAA0B5pG,IAA0C,KAAM,EAE1EA,IAAkCpR,QAASyjB,IACzCy3F,EAAqBz3F,IAAK,IAG5BrS,IAAkCpR,QAASyjB,IACzC23F,EAAqB33F,IAAK,IAG5BrS,IAA+BpR,QAASyjB,IACtC03F,EAAkB13F,IAAK,IAGzBrS,IAA4CpR,QAASyjB,IACnD43F,EAA+B53F,IAAK,IAGtCrS,IAA4CpR,QAASyjB,IACnD63F,EAA+B73F,IAAK,IAGtC,IAAK,IAAIhqD,EAAI,EAAGA,EAAI23C,IAAkCz3C,SAAUF,EAAG,CACjE,MAAMgqD,EAAIrS,IAAkC33C,GACxCA,GAAK,IACP8hJ,EAAuC93F,IAAK,GAE1ChqD,GAAK,IACP+hJ,EAAmC/3F,IAAK,GAG5C,IAAK,IAAIhqD,EAAI,EAAGA,EAAI23C,IAAkCz3C,SAAUF,EAAG,CACjE,MAAMgqD,EAAIrS,IAAkC33C,GACxCA,GAAK,IACPgiJ,EAAuCh4F,IAAK,GAIhDi4F,EAAWtqG,IAA8B,KAAM,EAC/CuqG,EAAavqG,IAA8B,KAAM,EACjDwqG,EAAmBxqG,IAAkC,KAAM,EAC3DyqG,EAAqBzqG,IAAkC,KAAM,EAC7D0qG,EAAsB1qG,IAAkC,KAAM,EAC9D2qG,EAAQ3qG,IAAkC,KAAM,EAGzC,MAAM8S,EAA0C,CACrD,CACE1oD,KAAM6W,IAAaoiC,WACnBrtB,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,EAAwBC,EAAsBE,GAClFlvG,cAAe,EACfF,iBAAkB,EAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAasiC,iBACnBvtB,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,EAAwBC,EAAsBE,GAClFlvG,cAAe,EACfF,iBAAkB,EAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAawiC,0BACnBztB,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,EAAwBC,EAAsBE,GAClFlvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAa0iC,wBACnB3tB,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,EAAwBC,EAAsBE,GAClFlvG,cAAe,KACfF,iBAAkB,KAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAa4iC,YACnB7tB,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,EAAwBC,EAAsBE,GAClFlvG,cAAe,KACfF,iBAAkB,KAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAa8iC,wBACnB/tB,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,EAAwBC,EAAsBE,GAClFlvG,cAAe,KACfF,iBAAkB,KAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAagjC,4BACnBjuB,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,EAAwBC,EAAsBE,GAClFlvG,cAAe,KACfF,iBAAkB,KAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAakjC,kBACnBnuB,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,EAAwBC,EAAsBE,GAClFlvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAaojC,+BACnBruB,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,EAAwBC,EAAsBE,GAClFlvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAa0jC,yBACnB3uB,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,EAAwBC,GAC5DhvG,cAAe,EACfF,iBAAkB,EAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAa26C,wBACnB5lC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,EAAwBI,EAAgCH,GAC5FhvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAa46C,gBACnB7lC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIqzH,EAASd,EAAwBI,GACrEnvG,cAAe,KACfF,iBAAkB,KAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAa66C,mBACnB9lC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIqzH,EAASd,EAAwBI,GACrEnvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAa86C,iBACnB/lC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,EAAwBC,EAAsBG,GAClFnvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAa+6C,2BACnBhmC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,EAAwBC,EAAsBG,GAClFnvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAag7C,wBACnBjmC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,EAAwBC,EAAsBG,GAClFnvG,cAAe,EACfF,iBAAkB,EAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAa6nI,0BACnB9yH,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,EAAwBC,EAAsBG,GAClFnvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAai7C,cACnBlmC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIqzH,EAASD,EAAuBb,EAAwBG,GAC5FlvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAak7C,0BACnBnmC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIqzH,EAASD,EAAuBb,EAAwBG,GAC5FlvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAam7C,6BACnBpmC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIqzH,EAASD,EAAuBb,EAAwBG,GAC5FlvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAa8nI,iBACnB/yH,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIqzH,EAASD,EAAuBb,EAAwBG,GAC5FlvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAao7C,8BACnBrmC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OACvB,GACAuyH,EACAC,EACAG,EACAD,GAEFlvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAaq7C,kBACnBtmC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OACvB,GACAuyH,EACAC,EACAG,EACAD,GAEFlvG,cAAe,KACfF,iBAAkB,KAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAaklC,YACnBnwB,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OACvB,GACA6yH,EACAR,EACAC,EACAF,EACAM,EACAD,GAEFjvG,cAAe,EACfF,iBAAkB,EAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAamlC,YACnBpwB,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OACvB,GACA6yH,EACAR,EACAC,EACAF,EACAM,EACAD,GAEFjvG,cAAe,EACfF,iBAAkB,EAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAas7C,sBACnBvmC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OACvB,GACA6yH,EACAR,EACAD,EACAM,EACAD,EACAE,GAEFnvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAau7C,iBACnBxmC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OACvB,GACAuyH,EACAI,EACAH,EACAE,GAEFlvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,IAEpB,CACE32C,KAAM6W,IAAaw7C,qBACnBzmC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAI8yH,EAAoCC,GACxEvvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,IAEpB,CACE32C,KAAM6W,IAAay7C,yBACnB1mC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OACvB,GACA8yH,EACAC,EACAJ,GAEFnvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,IAEpB,CACE32C,KAAM6W,IAAa+nI,YACnBhzH,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAI0yH,EAAsBI,GAC1DtvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,IAEpB,CACE32C,KAAM6W,IAAa07C,0BACnB3mC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,GACpC/uG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,KAEpB,CACE32C,KAAM6W,IAAa27C,iBACnB5mC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,GACpC/uG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,IAEpB,CACE32C,KAAM6W,IAAa47C,yBACnB7mC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIuyH,GACpC/uG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,IAEpB,CACE32C,KAAM6W,IAAa2pI,2BACnB50H,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OACvB,GACAuyH,EACAI,EACAF,EACAC,GAEFlvG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,IAEpB,CACE32C,KAAM6W,IAAa87C,mBACnB/mC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIizH,EAAcE,GAClD3vG,cAAe,EACfF,iBAAkB,EAClBmG,iBAAkB,GAEpB,CACE32C,KAAM6W,IAAaioI,iBACnBlzH,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIizH,EAAcE,GAClD3vG,cAAe,EACfF,iBAAkB,EAClBmG,iBAAkB,GAEpB,CACE32C,KAAM6W,IAAa67C,oBACnB9mC,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAImyH,EAAsBQ,EAAgCP,GAC1F5uG,cAAe,IACfF,iBAAkB,IAClBmG,iBAAkB,IAEpB,CACE32C,KAAM6W,IAAagoI,kBACnBjzH,KAAM,GACNunE,iBAAkB/0F,OAAO8uB,OAAO,GAAIgzH,EAAYE,GAChD1vG,cAAe,EACfF,iBAAkB,EAClBmG,iBAAkB,K,uLC9af,MAAMqX,EAsBX9qD,YAAY9B,EAAwB,CAAEpB,KAAM,GAAIsrC,KAAM,EAAG1U,KAAM,KAAM,cApB9D,IAoB8D,cAjB9D,GAiB8D,cAd9D,IAc8D,yBAXnD,GAWmD,yBAVnD,GAUmD,yBATnD,GASmD,yBARnD,GAQmD,yBAPnD,GAOmD,wBANpD,GAMoD,+BAL7C,GAK6C,mBAJzD,GAIyD,yBAHnD,GAGmD,qBAFvD,GAGZzzB,KAAKnD,KAAOoB,EAAEpB,KACdmD,KAAKmoC,KAAOlqC,EAAEkqC,KACdnoC,KAAKyzB,KAAOx1B,EAAEw1B,KACVx1B,EAAEq/I,kBACJt9I,KAAKs9I,gBAAkBr/I,EAAEq/I,iBAEvBr/I,EAAEs/I,kBACJv9I,KAAKu9I,gBAAkBt/I,EAAEs/I,iBAEvBt/I,EAAEu/I,kBACJx9I,KAAKw9I,gBAAkBv/I,EAAEu/I,iBAEvBv/I,EAAEw/I,kBACJz9I,KAAKy9I,gBAAkBx/I,EAAEw/I,iBAEvBx/I,EAAEy/I,kBACJ19I,KAAK09I,gBAAkBz/I,EAAEy/I,iBAEvBz/I,EAAE0/I,iBACJ39I,KAAK29I,eAAiB1/I,EAAE0/I,gBAEtB1/I,EAAE2/I,wBACJ59I,KAAK49I,sBAAwB3/I,EAAE2/I,uBAE7B3/I,EAAE4/I,YACJ79I,KAAK69I,UAAY5/I,EAAE4/I,WAEjB5/I,EAAE6/I,kBACJ99I,KAAK89I,gBAAkB7/I,EAAE6/I,iBAEvB7/I,EAAE8/I,cACJ/9I,KAAK+9I,YAAc9/I,EAAE8/I,gB,6BCpE3B,kCAAO,MAAM1sC,EAAyC,CACpD,CACEx0G,KAAM,WACNsrC,KAAM,KACN1U,KACE,0NAKJ,CACE52B,KAAM,mBACNsrC,KAAM,KACN1U,KACE,kRAMJ,CACE52B,KAAM,gCACNsrC,KAAM,IACN1U,KACE,qIAGJ,CACE52B,KAAM,kBACNsrC,KAAM,IACN1U,KACE,iHAGJ,CACE52B,KAAM,kBACNsrC,KAAM,KACN1U,KACE,+IAEF+pH,gBAAiB,IACjBD,gBAAiB,IACjBE,gBAAiB,IACjBC,gBAAiB,KAEnB,CACE7gJ,KAAM,SACNsrC,KAAM,IACN1U,KACE,2IAGJ,CACE52B,KAAM,oBACNsrC,KAAM,KACN1U,KACE,gIAEFkqH,eAAgB,KAElB,CACE9gJ,KAAM,qBACNsrC,KAAM,IACN1U,KACE,2IAGFsqH,YAAa,KAEf,CACElhJ,KAAM,WACNsrC,KAAM,KACN1U,KACE,yKAIJ,CACE52B,KAAM,yBACNsrC,KAAM,IACN1U,KACE,6NAIFqqH,gBAAiB,KAEnB,CACEjhJ,KAAM,sBACNsrC,KAAM,KACN1U,KACE,gLAIJ,CACE52B,KAAM,mBACNsrC,KAAM,IACN1U,KACE,4MAIJ,CACE52B,KAAM,UACNsrC,KAAM,IACN1U,KAAM,8FAER,CACE52B,KAAM,cACNsrC,KAAM,IACN1U,KACE,mTAMJ,CACE52B,KAAM,eACNsrC,KAAM,IACN1U,KACE,oZAOJ,CACE52B,KAAM,YACNsrC,KAAM,KACN1U,KACE,6NAIFgqH,gBAAiB,KACjBC,gBAAiB,MAEnB,CACE7gJ,KAAM,6BACNsrC,KAAM,KACN1U,KACE,4LAGFkqH,eAAgB,KAElB,CACE9gJ,KAAM,SACNsrC,KAAM,IACN1U,KACE,qKAIJ,CACE52B,KAAM,cACNsrC,KAAM,KACN1U,KAAM,mGAER,CACE52B,KAAM,sBACNsrC,KAAM,IACN1U,KACE,qKAIJ,CACE52B,KAAM,uBACNsrC,KAAM,IACN1U,KACE,qKAIJ,CACE52B,KAAM,qBACNsrC,KAAM,IACN1U,KACE,oMAIJ,CACE52B,KAAM,mBACNsrC,KAAM,IACN1U,KACE,kIAEFmqH,sBAAuB,Q,6BClM3B,+CAOO,SAASvqE,EAAoB2qE,GAClC,IACE,IAAIp7E,EAEFA,EADoB,iBAAXo7E,EACF1tE,YAAe0tE,GAEfA,EAGT,MAAMC,EAAuBr7E,EAAKs7E,WAAU,GAK5C,OAJwB,OAApBt7E,EAAKu7E,YACPv7E,EAAKu7E,WAAWC,aAAaH,EAASr7E,GAGjCq7E,EACP,MAAOn5F,GAIP,OAFAzkD,QAAQ2nB,MAAM88B,GAEP,Q,6BC1BX,qDAcO,MAAMyM,EAA0C,CACrD,CACE5kC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,MAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAaoiC,WACnBoc,QAAS,GACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,EACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,IACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa16C,IAAaoiC,aAGpC,CACEnpB,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,MAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAasiC,iBACnBkc,QAAS,GACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,EACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,IACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa16C,IAAasiC,mBAGpC,CACErpB,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,MAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAa0iC,wBACnB8b,QAAS,GACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,EACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,IACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa16C,IAAa0iC,0BAGpC,CACEzpB,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,KAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAa8iC,wBACnB0b,QAAS,GACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,EACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,IACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa16C,IAAa8iC,0BAGpC,CACE7pB,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,MAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAagjC,4BACnBwb,QAAS,GACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,EACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,IACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa16C,IAAagjC,8BAGpC,CACE/pB,GAAG,EACH63C,UAAW,CACT3hE,IAAK,IACL0rB,IAAK,KAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,IACL0rB,IAAK,KAEP1xB,KAAM6W,IAAakjC,kBACnBsb,QAAS,GACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,IACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa16C,IAAakjC,oBAGpC,CACEjqB,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,MAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAaojC,+BACnBob,QAAS,GACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,EACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,IACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa16C,IAAaojC,iCAGpC,CACEnqB,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,MAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,IACL0rB,IAAK,KAEP1xB,KAAM6W,IAAa0jC,yBACnB8a,QAAS,GACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,IACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa16C,IAAa0jC,2BAGpC,CACEzqB,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,KAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAa26C,wBACnB6D,QAAS,EACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa16C,IAAa26C,0BAGpC,CACE1hC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,KAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAa46C,gBACnB4D,QAAS,GACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa16C,IAAa46C,kBAGpC,CACE3hC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,KAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAa66C,mBACnB2D,QAAS,EACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa16C,IAAa66C,qBAGpC,CACE5hC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,KAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAa86C,iBACnB0D,QAAS,EACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa16C,IAAa86C,mBAGpC,CACE7hC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,MAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAa+6C,2BACnByD,QAAS,IACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa16C,IAAa+6C,6BAGpC,CACE9hC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,MAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAag7C,wBACnBwD,QAAS,GACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa16C,IAAag7C,0BAGpC,CACE/hC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,KAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAai7C,cACnBuD,QAAS,EACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa16C,IAAai7C,gBAGpC,CACEhiC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,KAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAak7C,0BACnBsD,QAAS,IACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa16C,IAAak7C,4BAGpC,CACEjiC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,MAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAam7C,6BACnBqD,QAAS,IACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa16C,IAAam7C,+BAGpC,CACEliC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,IACL0rB,IAAK,MAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAao7C,8BACnBoD,QAAS,KACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa16C,IAAao7C,gCAGpC,CACEniC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,MAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAaq7C,kBACnBmD,QAAS,EACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa16C,IAAaq7C,oBAGpC,CACEpiC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,KAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,IACL0rB,IAAK,KAEP1xB,KAAM6W,IAAas7C,sBACnBkD,QAAS,IACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,KACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa16C,IAAas7C,wBAGpC,CACEriC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,IACL0rB,IAAK,MAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,IACL0rB,IAAK,KAEP1xB,KAAM6W,IAAau7C,iBACnBiD,QAAS,EACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa16C,IAAau7C,mBAGpC,CACEtiC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,IACL0rB,IAAK,KAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAaw7C,qBACnBgD,QAAS,EACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa16C,IAAaw7C,uBAGpC,CACEviC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,KAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,IACL0rB,IAAK,KAEP1xB,KAAM6W,IAAay7C,yBACnB+C,QAAS,GACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,IACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa16C,IAAay7C,2BAGpC,CACExiC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,IACL0rB,IAAK,KAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,IACL0rB,IAAK,KAEP1xB,KAAM6W,IAAa07C,0BACnB8C,QAAS,EACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,IACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa16C,IAAa07C,4BAGpC,CACEziC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,IACL0rB,IAAK,KAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,IACL0rB,IAAK,IAEP1xB,KAAM6W,IAAa27C,iBACnB6C,QAAS,EACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa16C,IAAa27C,mBAGpC,CACE1iC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,IACL0rB,IAAK,KAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,IACL0rB,IAAK,KAEP1xB,KAAM6W,IAAa47C,yBACnB4C,QAAS,EACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,KACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa16C,IAAa47C,2BAGpC,CACE3iC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,IACL0rB,IAAK,KAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,IACL0rB,IAAK,IAEP1xB,KAAM6W,IAAa67C,oBACnB2C,QAAS,GACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,IACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa16C,IAAa67C,sBAGpC,CACE5iC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,KAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM6W,IAAa87C,mBACnB0C,QAAS,EACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,KACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa16C,IAAa87C,qBAGpC,CACE7iC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,MAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,IACL0rB,IAAK,KAEP1xB,KAAM,kBACNq1D,QAAS,EACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,IACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa,oBAGvB,CACEzhC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,KAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,IACL0rB,IAAK,KAEP1xB,KAAM,YACNq1D,QAAS,EACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,KACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa,cAGvB,CACEzhC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,KAEPk2C,UAAW,KACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,IACL0rB,IAAK,KAEP1xB,KAAM,oBACNq1D,QAAS,KACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,KACL0rB,IAAK,MAEPmiC,OAAQtC,IAAa,sBAGvB,CACEzhC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,IACL0rB,IAAK,MAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM,yBACNq1D,QAAS,EACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa,2BAGvB,CACEzhC,GAAG,EACH63C,UAAW,CACT3hE,IAAK,KACL0rB,IAAK,MAEPk2C,UAAW,MACXzS,GAAI,CACF4S,QAAS,IACT/hE,IAAK,GACL0rB,IAAK,IAEP1xB,KAAM,qBACNq1D,QAAS,GACTwS,WAAY,CACVE,QAAS,GACT/hE,IAAK,GACL0rB,IAAK,GAEPykC,mBAAoB,CAClBnwD,IAAK,MACL0rB,IAAK,KAEPmiC,OAAQtC,IAAa,yB,+BCt2BzB,6DASO,MAAM+lC,EAA0C,CACrD,CACEpxD,KAAM1U,IAASiqB,MACfm5F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAai7C,cACnB6/B,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAASiqB,MACfm5F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAawiC,0BACnBs4C,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAASiqB,MACfm5F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAa8iC,wBACnBg4C,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAASiqB,MACfvJ,SAAU,EACVC,QAAS,EACTnyC,KAAM6W,IAAauzF,qBACnBzY,MAAO,CAAChxC,IAAa4oD,MAEvB,CACErjE,KAAM1U,IAASiqB,MACfm5F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,OAEzBzhJ,KAAM6W,IAAaoiC,WACnB04C,MAAO,CAAChxC,IAAavM,QAASuM,IAAak1F,YAC3ChB,iBAAkB,IAClBC,iBAAkB,KAEpB,CACE5uG,KAAM1U,IAASiqB,MACfm5F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,OAEzBzhJ,KAAM6W,IAAa0jC,yBACnBo3C,MAAO,CAAChxC,IAAavM,QAASuM,IAAak1F,YAC3ChB,iBAAkB,KAClBC,iBAAkB,KAEpB,CACE5uG,KAAM1U,IAASiqB,MACfm5F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAa6nI,0BACnB/sD,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAASiqB,MACfm5F,iBAAkB,CAChB4M,kBAAmB,EACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAa47C,yBACnBk/B,MAAO,CAAChxC,IAAavM,QAASuM,IAAak1F,YAC3ChB,iBAAkB,GAClBC,iBAAkB,GAEpB,CACE5uG,KAAM1U,IAASiqB,MACfm5F,iBAAkB,CAChB4M,kBAAmB,EACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAa+nI,YACnBjtD,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAASiqB,MACfm5F,iBAAkB,CAChB4M,kBAAmB,EACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAaw7C,qBACnBs/B,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAASiqB,MACfvJ,SAAU,GACVC,QAAS,EACTnyC,KAAM6W,IAAawzF,oBACnB1Y,MAAO,CAAChxC,IAAa4oD,MAEvB,CACErjE,KAAM1U,IAASiqB,MACfvJ,SAAU,EACVC,QAAS,EACTnyC,KAAM6W,IAAaizF,sBACnBnY,MAAO,CAAChxC,IAAam1F,aAEvB,CACE5vG,KAAM1U,IAASiqB,MACfm5F,iBAAkB,CAChB4M,kBAAmB,EACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAas7C,sBACnBw/B,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAASiqB,MACfz7C,KAAM6W,IAAa6qI,YACnB/vD,MAAO,CAAChxC,IAAao1F,SAEvB,CACE7vG,KAAM1U,IAAS4pB,UACfw5F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,OAEzBzhJ,KAAM6W,IAAaojC,+BACnB03C,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAAS4pB,UACfw5F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,OAEzBzhJ,KAAM6W,IAAam7C,6BACnB2/B,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAASmqB,OACfi5F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAaq7C,kBACnBy/B,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAASmqB,OACfi5F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,KAEzBzhJ,KAAM6W,IAAa67C,oBACnBi/B,MAAO,CAAChxC,IAAavM,QAASuM,IAAak1F,YAC3ChB,iBAAkB,IAClBC,iBAAkB,GAEpB,CACE5uG,KAAM1U,IAASmqB,OACfi5F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAa26C,wBACnBmgC,MAAO,CAAChxC,IAAavM,QAASuM,IAAak1F,YAC3ChB,iBAAkB,IAClBC,iBAAkB,IAEpB,CACE5uG,KAAM1U,IAAS+pB,SACfq5F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAa46C,gBACnBkgC,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAAS+pB,SACfq5F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,KAEzBzhJ,KAAM6W,IAAao7C,8BACnB0/B,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAAS+pB,SACfq5F,iBAAkB,CAChB4M,kBAAmB,EACnBC,sBAAuB,KAEzBzhJ,KAAM6W,IAAagoI,kBACnBltD,MAAO,CAAChxC,IAAavM,QAASuM,IAAai1F,UAE7C,CACE1vG,KAAM1U,IAAS+pB,SACfq5F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAa86C,iBACnBggC,MAAO,CAAChxC,IAAavM,QAASuM,IAAai1F,UAE7C,CACE1vG,KAAM1U,IAAS2U,SACfyuG,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAay7C,yBACnBq/B,MAAO,CAAChxC,IAAavM,QAASuM,IAAak1F,YAC3ChB,iBAAkB,EAClBC,iBAAkB,GAEpB,CACE5uG,KAAM1U,IAAS2U,SACfyuG,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,OAEzBzhJ,KAAM6W,IAAa0iC,wBACnBo4C,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAAS2U,SACfnmC,KAAM6W,IAAaklC,YACnB41C,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAAS2U,SACfyuG,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAa2pI,2BACnB7uD,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAAS2U,SACfnmC,KAAM6W,IAAa8qI,iBACnBhwD,MAAO,CAAChxC,IAAai1F,UAEvB,CACE1vG,KAAM1U,IAAS2U,SACfyuG,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,KAEzBzhJ,KAAM6W,IAAa8nI,iBACnBhtD,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAAS2U,SACfnmC,KAAM6W,IAAa87C,mBACnBg/B,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAAS2U,SACfyuG,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAakjC,kBACnB43C,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAAS2U,SACfyuG,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAa+6C,2BACnB+/B,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAAS2U,SACfgM,QAAS,EACTD,SAAU,EACVlyC,KAAM6W,IAAayzF,gBACnB3Y,MAAO,CAAChxC,IAAa4oD,MAEvB,CACErjE,KAAM1U,IAAS2U,SACfyuG,iBAAkB,CAChB4M,kBAAmB,EACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAaioI,iBACnBntD,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAAS2U,SACfyuG,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,OAEzBzhJ,KAAM6W,IAAasiC,iBACnBw4C,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAAS2U,SACfnmC,KAAM6W,IAAamlC,YACnB21C,MAAO,CAAChxC,IAAavM,QAASuM,IAAai1F,UAE7C,CACE1vG,KAAM1U,IAAS2U,SACf+L,SAAU,GACVC,QAAS,GACTnyC,KAAM6W,IAAa0zF,sBACnB5Y,MAAO,CAAChxC,IAAa4oD,MAEvB,CACErjE,KAAM1U,IAAS2U,SACf+L,SAAU,EACVC,QAAS,EACTnyC,KAAM6W,IAAakzF,0BACnBpY,MAAO,CAAChxC,IAAam1F,aAEvB,CACE5vG,KAAM1U,IAAS2U,SACfyuG,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,KAEzBzhJ,KAAM6W,IAAag7C,wBACnB8/B,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAASqqB,SACf+4F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAa27C,iBACnBm/B,MAAO,CAAChxC,IAAavM,QAASuM,IAAak1F,YAC3ChB,iBAAkB,IAClBC,iBAAkB,GAEpB,CACE5uG,KAAM1U,IAASqqB,SACf+4F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAa66C,mBACnBigC,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAASqqB,SACf+4F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAau7C,iBACnBu/B,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAASqqB,SACf3J,SAAU,EACVC,QAAS,EACTnyC,KAAM6W,IAAa2zF,4BACnB7Y,MAAO,CAAChxC,IAAa4oD,MAEvB,CACErjE,KAAM1U,IAASqqB,SACf+4F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAa4iC,YACnBk4C,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAASqqB,SACf+4F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAagjC,4BACnB83C,MAAO,CAAChxC,IAAavM,QAASuM,IAAak1F,YAC3ChB,iBAAkB,KAClBC,iBAAkB,KAEpB,CACE5uG,KAAM1U,IAASqqB,SACf+4F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,GAEzBzhJ,KAAM6W,IAAak7C,0BACnB4/B,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAASqqB,SACf+4F,iBAAkB,CAChB4M,kBAAmB,GACnBC,sBAAuB,MAEzBzhJ,KAAM6W,IAAa07C,0BACnBo/B,MAAO,CAAChxC,IAAavM,UAEvB,CACElO,KAAM1U,IAASqqB,SACf3J,SAAU,EACVC,QAAS,EACTnyC,KAAM6W,IAAamzF,gCACnBrY,MAAO,CAAChxC,IAAam1F,aAEvB,CACE5vG,KAAM,KACNlmC,KAAM6W,IAAa8+H,SACnBhkD,MAAO,CAAChxC,IAAag1F,WAEvB,CACEzvG,KAAM,KACNlmC,KAAM6W,IAAaszG,MACnBx4B,MAAO,CAAChxC,IAAawpE,QAEvB,CACEjkF,KAAM,KACNlmC,KAAM6W,IAAawvB,aACnBsrD,MAAO,CAAChxC,IAAata,eAEvB,CACEH,KAAM,KACNlmC,KAAM6W,IAAa+qI,mBACnBjwD,MAAO,CAAChxC,IAAauS,gB,6BCxbzB,0RAmCA,MAAM9lC,EAAYC,YAAYvC,GAC5BwC,YAAa,CACXu0H,UAAW,CACTvhH,aAAc,aAAexV,EAAM2C,QAAQzC,QAAQuW,MAErDw5B,KAAM,CACJsjC,WAAY,MACZl9D,gBAAiBrW,EAAM2C,QAAQ2T,WAAWF,UAKzC,SAAS4gH,IACd,MAAMh0H,EAAUV,IAEV20H,EAAuD,CAC3D,CAAC7lH,IAAeG,OAAkB,CAChC4S,QACE,oCACE,kBAAC,IAAD,yIAGE,6BACA,6BAJF,+FASJ+yG,SAAS,GAEX,CAAC9lH,IAAeK,mBAA8B,CAC5C0S,QACE,oCACE,kBAAC,IAAD,wDACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAezhB,MAAO,UACtB,kBAAC,IAAD,CAAYA,MAAO,SAAnB,UAGF,kBAAC,IAAD,oEAGJw0H,SAAS,GAEX,CAAC9lH,IAAeM,eAA0B,CACxCyS,QACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAezhB,MAAO,YACtB,kBAAC,IAAD,CAAYA,MAAO,WAAnB,UAEF,kBAAC,IAAD,4GAKJw0H,SAAS,GAEX,CAAC9lH,IAAeO,2BAAsC,CACpDwS,QACE,oCACE,kBAAC,IAAD,2DACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAczhB,MAAO,UACrB,kBAAC,IAAD,CAAYA,MAAO,SAAnB,aAEF,kBAAC,IAAD,sCAGJw0H,SAAS,GAEX,CAAC9lH,IAAeQ,eAA0B,CACxCuS,QACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAczhB,MAAO,YACrB,kBAAC,IAAD,CAAYA,MAAO,WAAnB,aAEF,kBAAC,IAAD,6GAKJw0H,SAAS,GAEX,CAAC9lH,IAAeS,cAAyB,CACvCsS,QACE,oCACE,kBAAC,IAAD,4CACA,kBAAC,IAAD,CAAYnhB,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,mBACnD,kBAAC,IAAD,gEAGJG,SAAS,GAEX,CAAC9lH,IAAeU,YAAuB,CACrCqS,QACE,oCACE,kBAAC,IAAD,CAAYnhB,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,mBACnD,kBAAC,IAAD,+GAC0G,IACxG,6BACA,6BAHF,oCAOA,kBAAC,IAAD,CAAY/zH,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,kBAGvDG,SAAS,GAEX,CAAC9lH,IAAeW,cAAyB,CACvCoS,QACE,oCACE,kBAAC,IAAD,CAAYnhB,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,iBACnD,kBAAC,IAAD,KACG,IADH,0GAE0G,IAF1G,iEAGgE,6BAC9D,6BAJF,oIAQA,kBAAC,IAAD,CAAY/zH,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,oBAGvDG,SAAS,GAEX,CAAC9lH,IAAeY,sBAAiC,CAC/CmS,QACE,oCACE,kBAAC,IAAD,CAAYnhB,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,mBACnD,kBAAC,IAAD,+LAEkF,6BAChF,6BAHF,iFAIiF,KAGjF,kBAAC,IAAD,CAAY/zH,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,2BACnD,kBAAC,IAAD,wFAGJG,SAAS,GAEX,CAAC9lH,IAAea,sBAAiC,CAC/CkS,QACE,oCACE,kBAAC,IAAD,CAAYnhB,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,2BACnD,kBAAC,IAAD,kIAEkB,6BAChB,6BAHF,qHAIqB,KAGrB,kBAAC,IAAD,CAAY/zH,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,8BAGvDG,SAAS,GAEX,CAAC9lH,IAAec,iBAA4B,CAC1CiS,QACE,oCACE,kBAAC,IAAD,sPAKA,kBAAC,IAAD,CAAYnhB,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,+BAEnD,kBAAC,IAAD,6BACA,kBAAC,IAAD,CAAY/zH,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,6BAEnD,kBAAC,IAAD,KACG,IADH,4FAKA,kBAAC,IAAD,CAAY/zH,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,+BAGvDG,SAAS,GAEX,CAAC9lH,IAAee,iBAA4B,CAC1CgS,QACE,oCACE,kBAAC,IAAD,uFAEE,6BACA,6BAHF,gOAKc,6BACZ,6BANF,oEAOoE,KAEpE,kBAAC,IAAD,CAAYnhB,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,0BAGvDG,SAAS,GAEX,CAAC9lH,IAAegB,cAAyB,CACvC+R,QACE,oCACE,kBAAC,IAAD,cACA,kBAAC,IAAD,CAAYnhB,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,yBAEnD,kBAAC,IAAD,mFAC6E,6BAC3E,6BAFF,6TAOA,kBAAC,IAAD,CAAY/zH,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,yBAEnD,kBAAC,IAAD,KACG,IADH,oIAG0B,KAE1B,kBAAC,IAAD,CAAY/zH,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,8BAEnD,kBAAC,IAAD,OAGJG,SAAS,GAEX,CAAC9lH,IAAeiB,oBAA+B,CAC7C8R,QACE,oCACE,kBAAC,IAAD,iEACA,kBAAC,IAAD,CAAYnhB,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,mBAEnD,kBAAC,IAAD,8BAGJG,SAAS,GAEX,CAAC9lH,IAAekB,0BAAqC,CACnD6R,QACE,kBAAC,IAAD,sQAIE,6BACA,6BALF,wMAQE,6BACA,6BATF,6KAcF+yG,SAAS,GAEX,CAAC9lH,IAAemB,gBAA2B,CACzC4R,QACE,oCACE,kBAAC,IAAD,oDACA,kBAAC,IAAD,CAAYnhB,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,mBAEnD,kBAAC,IAAD,2DAGJG,SAAS,GAEX,CAAC9lH,IAAeoB,sBAAiC,CAC/C2R,QACE,oCACE,kBAAC,IAAD,oMAGE,6BACA,6BAJF,8DAK8D,KAE9D,kBAAC,IAAD,CAAYnhB,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,mBAEnD,kBAAC,IAAD,0FACA,kBAAC,IAAD,CAAY/zH,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,kCAEnD,kBAAC,IAAD,kHAKJG,SAAS,GAEX,CAAC9lH,IAAeqB,oBAA+B,CAC7C0R,QACE,oCACE,kBAAC,IAAD,gMAEmF,8BAGnF,kBAAC,IAAD,CAAYnhB,QAAS,CAAEuS,KAAMvS,EAAQitC,OACnC,kBAAC,IAAD,CACEt6D,MAAQ,0CAKZ,kBAAC,IAAD,iJAGE,6BACA,6BAJF,iGASJuhJ,SAAS,GAEX,CAAC9lH,IAAesB,cAAyB,CACvCyR,QACE,oCACE,kBAAC,IAAD,oPAIE,6BACA,6BALF,6DAQA,kBAAC,IAAD,CAAYnhB,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,oBAGvDG,SAAS,GAEX,CAAC9lH,IAAeuB,mBAA8B,CAC5CwR,QACE,oCACE,kBAAC,IAAD,+GAGA,kBAAC,IAAD,CAAYnhB,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,kCAGvDG,SAAS,GAEX,CAAC9lH,IAAewB,+BAA0C,CACxDuR,QACE,oCACE,kBAAC,IAAD,iNAEiG,6BAC/F,6BAHF,mLAKwE,6BACtE,6BANF,sEAOsE,KAEtE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAazhB,MAAO,UACpB,kBAAC,IAAD,CAAYA,MAAO,SAAnB,oBAINw0H,SAAS,GAEX,CAAC9lH,IAAeyB,mBAA8B,CAC5CsR,QACE,oCACE,kBAAC,IAAD,mLAIA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAczhB,MAAO,UACrB,kBAAC,IAAD,CAAYA,MAAO,SAAnB,cAINw0H,SAAS,GAEX,CAAC9lH,IAAe0B,yBAAoC,CAClDqR,QACE,oCACE,kBAAC,IAAD,oMAEsF,KAEtF,kBAAC,IAAD,CAAYnhB,QAAS,CAAEuS,KAAMvS,EAAQ+zH,YAAc,mCAGvDG,SAAS,GAEX,CAAC9lH,IAAe2B,oBAA+B,CAC7CoR,QACE,oCACE,kBAAC,IAAD,kKAEmD,6BACjD,6BAHF,kFAMA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUzhB,MAAO,YACjB,kBAAC,IAAD,CAAYA,MAAO,WAAnB,aAEF,kBAAC,IAAD,+NAGE,6BACA,6BAJF,8CASJw0H,SAAS,GAEX,CAAC9lH,IAAe4B,sBAAiC,CAC/CmR,QACE,oCACE,kBAAC,IAAD,mJAIA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAiBzhB,MAAO,UACxB,kBAAC,IAAD,CAAYA,MAAO,SAAnB,YAEF,kBAAC,IAAD,+CAGJw0H,SAAS,GAEX,CAAC9lH,IAAe6B,0BAAqC,CACnDkR,QACE,kBAAC,IAAD,8GAIF+yG,SAAS,GAEX,CAAC9lH,IAAe8B,2BAAsC,CACpDiR,QACE,oCACE,kBAAC,IAAD,kNAGE,6BACA,6BAJF,eAOA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAkBzhB,MAAO,UACzB,kBAAC,IAAD,CAAYA,MAAO,SAAnB,UAINw0H,SAAS,GAEX,CAAC9lH,IAAe+B,kBAA6B,CAC3CgR,QACE,oCACE,kBAAC,IAAD,+MAGE,6BACA,6BAJF,oBAOA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUzhB,MAAO,UACjB,kBAAC,IAAD,CAAYA,MAAO,SAAnB,cAINw0H,SAAS,GAEX,CAAC9lH,IAAegC,kBAA6B,CAC3C+Q,QACE,kBAAC,IAAD,yQAMF+yG,SAAS,GAEX,CAAC9lH,IAAeiC,KAAgB,CAC9B8Q,QAAS,kBAAC,IAAD,MACT+yG,SAAS,IAIP5kF,EAAcJ,oBAAS,GAAO,GACpC,SAASgB,IACPZ,EAAaa,IAASA,GAGxBC,oBAAU,IACD3/B,IAAgB4/B,UAAUH,GAChC,IACH,MAAM6Q,EAAO1yC,IAAUC,SACjB6S,EAAU8yG,EAASlzE,GACzB,QAAgB9gD,IAAZkhB,EAAuB,MAAM,IAAIhhB,MAAM,yBAC3C,OACE,kBAAC,IAAD,CAAOg0H,QAAM,EAACz/G,GAAI,CAAEb,SAAU,OAAQvgC,EAAG,IACtC6tC,EAAQA,QACR4/B,IAAS3yC,IAAegC,kBACvB,oCACE,kBAAC,IAAD,CAAYqtC,QAAS/sC,IAAmByxG,aAAW,YACjD,kBAAC,IAAD,OAEDhhG,EAAQ+yG,SACP,kBAAC,IAAD,CAAYz2E,QAASltC,IAAmB4xG,aAAW,QACjD,kBAAC,IAAD,QAKR,6BACA,6BACA,kBAAC,IAAD,CAAQ1kE,QAASjtC,KACduwC,IAAS3yC,IAAegC,iBAAmB,gBAAkB,sB,gCC1iBtE,8IAWA,MAAM9Q,EAAYC,YAAW,CAC3B60H,aAAc,CACZ/gH,gBAAiB,WAQd,SAASghH,GAAS,SAAE1/G,IACzB,MAAOL,EAAMqrC,GAAWzQ,oBAAS,GAC3BlvC,EAAUV,IACVugB,EAASja,IAAID,SACnB,GAAIka,EAAOqtB,SAAWpnC,IAAKurC,UAAYxxB,EAAOqtB,SAAWpnC,IAAKyrC,gBAAkB1xB,EAAOqtB,SAAWpnC,IAAKwuH,QACrG,OAAO,qCACT,IAAIxgD,EAMJ,OAJEA,EADEx/D,EACK,kBAAC,IAAD,CAAmB5U,MAAM,YAEzB,kBAAC,IAAD,CAAgBA,MAAM,YAG7B,yBAAKg+C,MAAO,CAAE/0B,SAAU,QAAS4mD,IAAK,EAAGW,MAAO,EAAGlnB,OAAQ,OACzD,kBAAC,IAAD,CAAK/1C,QAAQ,OAAOE,eAAe,WAAW4+B,cAAe,UAC3D,kBAAC,IAAD,CAAUt9B,GAAIH,GAAOK,GACrB,kBAAC,IAAD,CAAK1B,QAAQ,OAAOE,eAAe,YACjC,kBAAC,IAAD,CAAKnT,QAAS,CAAEuS,KAAMvS,EAAQo0H,cAAgB32E,QAAS,IAAMkC,EAASxP,IAASA,IAC5E2jC,Q,gCCvCb,kvBAuDA,MAAMygD,GAAev3H,IAAD,CAClB0V,MAAO1V,EAAMgwC,QAAQ,IACrBwoB,WAAYx4D,EAAMw3H,YAAYxhJ,OAAO,QAAS,CAC5CyhJ,OAAQz3H,EAAMw3H,YAAYC,OAAOC,MACjCC,SAAU33H,EAAMw3H,YAAYG,SAASC,iBAEvCC,UAAW,WAGPC,GAAe93H,IAAD,CAClBw4D,WAAYx4D,EAAMw3H,YAAYxhJ,OAAO,QAAS,CAC5CyhJ,OAAQz3H,EAAMw3H,YAAYC,OAAOC,MACjCC,SAAU33H,EAAMw3H,YAAYG,SAASI,gBAEvCF,UAAW,SACXniH,MAAQ,QAAO1V,EAAMgwC,QAAQ,YAC7B,CAAChwC,EAAMg4H,YAAYC,GAAG,OAAQ,CAC5BviH,MAAQ,QAAO1V,EAAMgwC,QAAQ,eAI3BkoF,GAASC,YAAOtgD,IAAW,CAAEugD,kBAAoBtqH,GAAkB,SAATA,GAAjDqqH,CAAoE,EAAGn4H,QAAOsX,WAAV,CACjF5B,MAAO1V,EAAMgwC,QAAQ,IACrBujC,WAAY,SACZ8kD,UAAW,gBACP/gH,GAAQ,IACPigH,GAAYv3H,GACf,qBAAsBu3H,GAAYv3H,QAE/BsX,GAAQ,IACRwgH,GAAY93H,GACf,qBAAsB83H,GAAY93H,OAIhCsC,GAAYC,YAAYvC,GAC5BwC,YAAa,CACXkoD,OAAQ,CACN4tE,WAAY,aAAet4H,EAAM2C,QAAQzC,QAAQuW,MAEnD8hH,SAAU,MAUP,SAASC,GAAYz1H,GAC1B,MAAMuvC,EAAcJ,oBAAS,GAAO,GACpC,SAASgB,IACPZ,EAAaa,IAASA,GAGxBC,oBAAU,KACR,MAAMuU,EAAKkR,YAAY3lB,EAAU,KACjC,MAAO,IAAM8lB,cAAcrR,IAC1B,IAEH,MAAO8wE,EAAaC,GAAkBxmF,oBAAS,IACxCymF,EAAeC,GAAoB1mF,oBAAS,IAC5C2mF,EAAWC,GAAgB5mF,oBAAS,IACpC6mF,EAAUC,GAAe9mF,oBAAS,GAEnC+mF,EACJ5nH,KAAUC,WAAaF,KAAeO,2BACtCN,KAAUC,WAAaF,KAAeyB,kBAElCqmH,EAAa7nH,KAAUC,WAAaF,KAAeK,kBAEnD0nH,EAAqB9nH,KAAUC,WAAaF,KAAewB,8BAE3DwmH,EAAe/nH,KAAUC,WAAaF,KAAe4B,qBAErDqmH,EAAYhoH,KAAUC,WAAaF,KAAe8B,0BAElDomH,EAAgBjoH,KAAUC,WAAaF,KAAe+B,iBAEtDomH,EAAoBx2H,EAAMG,OAAO2Y,oBAAoBxoC,OACrDmmJ,EAAmBz2H,EAAMG,OAAO0Y,mBAAmBvoC,OACnDomJ,EAAe5nB,aAA2B9uG,EAAMG,QAAQ7vB,OACxDqmJ,EACJD,EAAe,GACf12H,EAAMG,OAAOiJ,cAAc94B,OAAS,GACpC0vB,EAAMG,OAAO2Y,oBAAoBxoC,OAAS,GAC1C0vB,EAAMG,OAAO6pB,YAAY15C,OAAS,EAE9BsmJ,EACJ52H,EAAMG,OAAO0Y,mBAAmBvoC,OAAS,GACzC0vB,EAAMG,OAAOyY,SAAStoC,OAAS,GAC/B0vB,EAAMG,OAAOiJ,cAAc94B,OAAS,GACpC0vB,EAAMG,OAAO2Y,oBAAoBxoC,OAAS,GAC1C0vB,EAAMG,OAAO6pB,YAAY15C,OAAS,EAE9BumJ,EACJ72H,EAAMG,OAAOiJ,cAAc94B,OAAS,GACpC0vB,EAAMG,OAAO2Y,oBAAoBxoC,OAAS,GAC1C0vB,EAAMG,OAAO6pB,YAAY15C,OAAS,EAE9BwmJ,EAAiB92H,EAAMG,OAAOiZ,QAAQ9oC,OAAS,EAI/CymJ,IAAoB/2H,EAAMG,OAAO9rB,YACjC2iJ,KAAah3H,EAAMG,OAAOzJ,KAC1BugI,GAAsC,KAA7Bj3H,EAAMG,OAAOsY,YACtBy+G,GAAiBl3H,EAAMG,OAAO2b,cAC9Bq7G,KAAoBn3H,EAAMG,OAAOpI,YAEvC,SAASq/H,KACPp3H,EAAM8f,OAAO2uB,aACTynF,GAAe1lH,eAGrB,SAAS6mH,KACPr3H,EAAM8f,OAAOwuB,iBAGf,SAASgpF,KACPt3H,EAAM8f,OAAO0tB,UACT2oF,GAAY3lH,eAGlB,SAAS+mH,KACPv3H,EAAM8f,OAAOstB,kBACTgpF,GAAoB5lH,eAG1B,SAASgnH,KACPx3H,EAAM8f,OAAO6tB,kBAGf,SAAS8pF,KACPz3H,EAAM8f,OAAOguB,aAGf,SAAS4pF,KACP13H,EAAM8f,OAAOutB,kBAOf,SAASsqF,KACP33H,EAAM8f,OAAOmuB,iBACTooF,GAAc7lH,eAGpB,SAASonH,KACP53H,EAAM8f,OAAO2tB,SACT6oF,GAAW9lH,eAGjB,SAASqnH,KACP73H,EAAM8f,OAAO4uB,WAGf,SAASopF,KACP93H,EAAM8f,OAAOquB,QAOf,SAAS4pF,KACP/3H,EAAM8f,OAAOytB,gBAOf,SAASyqF,KACPh4H,EAAM8f,OAAOkuB,SAGf,SAASiqF,KACPj4H,EAAM8f,OAAO6uB,aACT4nF,GAAe/lH,eAcrB6/B,oBAAU,KAeR,SAAS6nF,EAAgCl1F,GACvC,IAAIrkC,KAASxC,kBACT6D,EAAMG,OAAOsZ,WAAa8pD,MAAerhB,MAC7C,GAAIlf,EAAMwf,SAAW9Z,KAAIwB,GAAKlH,EAAMm1F,OAClCn1F,EAAM4sC,iBACNwnD,UACK,GAAIp0F,EAAMwf,UAAY9Z,KAAIQ,GAAKlG,EAAMm1F,OAC1Cn1F,EAAM4sC,iBACN0nD,UACK,GAAIt0F,EAAMwf,UAAY9Z,KAAIU,GAAKpG,EAAMm1F,OAC1Cn1F,EAAM4sC,iBACNynD,UACK,GAAIr0F,EAAMwf,UAAY9Z,KAAIuB,GAAKjH,EAAMm1F,OAC1Cn1F,EAAM4sC,iBACN2nD,UACK,GAAIv0F,EAAMwf,UAAY9Z,KAAIa,GAAKvG,EAAMm1F,OAC1Cn1F,EAAM4sC,iBACN+nD,UACK,GAAI30F,EAAMwf,UAAY9Z,KAAI2B,GAAKrH,EAAMm1F,OAC1Cn1F,EAAM4sC,iBACNgoD,UACK,GAAI50F,EAAMwf,UAAY9Z,KAAIe,GAAKzG,EAAMm1F,OAC1Cn1F,EAAM4sC,iBACNkoD,UACK,GAAI90F,EAAMwf,UAAY9Z,KAAIsB,GAAKhH,EAAMm1F,OAC1Cn1F,EAAM4sC,iBACNioD,UACK,GAAI70F,EAAMwf,UAAY9Z,KAAIoB,GAAK9G,EAAMm1F,OAC1Cn1F,EAAM4sC,iBACN4nD,UACK,GAAIx0F,EAAMwf,UAAY9Z,KAAIW,GAAKrG,EAAMm1F,OAAQ,CAClD,GAAIn4H,EAAMmtC,MAAQpnC,KAAKspC,UAAY1wC,KAAStC,kBAC1C,OAEF2mC,EAAM4sC,iBACN6nD,UACSz0F,EAAMwf,UAAY9Z,KAAIjnC,GAAKuhC,EAAMm1F,QAC1Cn1F,EAAM4sC,iBACN8nD,MACS10F,EAAMwf,UAAY9Z,KAAIyB,GAAKnH,EAAMm1F,QAC1Cn1F,EAAM4sC,iBACNqoD,MACSj1F,EAAMwf,UAAY9Z,KAAIO,GAAKjG,EAAMm1F,QAC1Cn1F,EAAM4sC,iBACNmoD,MACS/0F,EAAMwf,UAAY9Z,KAAIY,GAAKtG,EAAMm1F,SAC1Cn1F,EAAM4sC,iBACNooD,MASJ,OADAj4E,SAASoG,iBAAiB,WAAY+xE,GAC/B,IAAMn4E,SAASkU,oBAAoB,WAAYikE,IACrD,IAEH,MAAMj4H,GAAUV,MACTgV,GAAMqrC,IAAWzQ,oBAAS,GAEjC,OACE,kBAACgmF,GAAD,CAAQ5gH,KAAMA,GAAMm1C,OAAO,OAAO7J,QAAQ,aACxC,kBAAC,IAAD,CAAU5/C,QAAS,CAAEuS,KAAMvS,GAAQu1H,UAAYtiD,QAAM,EAACx1B,QAHrC,IAAYkC,GAASxP,IAASA,IAI7C,kBAAC,IAAD,KACI77B,GAA8C,kBAAC,IAAD,CAAiB5U,MAAM,YAA9D,kBAAC,IAAD,CAAkBA,MAAM,aAEnC,kBAAC,IAAD,CAAcxC,QAAS,kBAAC,IAAD,mBAAwB/kB,KAAUC,YAE3D,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU4nB,QAAS,CAAEuS,KAAMvS,GAAQu1H,UAAYtiD,QAAM,EAACx1B,QAAS,IAAMi4E,EAAgBvlF,IAASA,IAC5F,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAczwC,MAAM,aAEtB,kBAAC,IAAD,CAAcxC,QAAS,kBAAC,IAAD,kBACtBu4H,EAAc,kBAAC,KAAD,CAAgB/1H,MAAM,YAAe,kBAAC,KAAD,CAAgBA,MAAM,aAE5E,kBAAC,IAAD,CAAU+U,GAAIghH,EAAa0C,QAAQ,OAAOlpB,eAAa,GACrD,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEjvG,QAAS,CAAEuS,KAAMvS,GAAQu1H,UACzBtiD,QAAM,EACNhgG,IAAK,WACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAKspC,WAExCqO,QAAS05E,IAET,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEz3H,MAAOu2H,EAAgB,QAAUl2H,EAAMmtC,OAASpnC,KAAKspC,SAAW,YAAc,aAGlF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY1vC,MAAOu2H,EAAgB,QAAUl2H,EAAMmtC,OAASpnC,KAAKspC,SAAW,YAAc,WAA1F,cAKJ,kBAAC,IAAD,CACEpvC,QAAS,CAAEuS,KAAMvS,GAAQu1H,UACzBtiD,QAAM,EACNhgG,IAAK,iBACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAKkrC,eAExCyM,QAAS25E,IAET,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY13H,MAAOK,EAAMmtC,OAASpnC,KAAKkrC,aAAe,YAAc,aAEtE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYtxC,MAAOK,EAAMmtC,OAASpnC,KAAKkrC,aAAe,YAAc,WAApE,mBAKJ,kBAAC,IAAD,CACEhxC,QAAS,CAAEuS,KAAMvS,GAAQu1H,UACzBtiD,QAAM,EACNhgG,IAAK,iBACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAKwqC,gBAExCmN,QAAS65E,IAET,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE53H,MAAOy2H,EAAqB,QAAUp2H,EAAMmtC,OAASpnC,KAAKwqC,cAAgB,YAAc,aAG5F,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE5wC,MAAOy2H,EAAqB,QAAUp2H,EAAMmtC,OAASpnC,KAAKwqC,cAAgB,YAAc,WAD1F,oBAOHomF,GACC,kBAAC,IAAD,CACEzjD,QAAM,EACNhgG,IAAK,iBACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAK2qC,gBAExCgN,QAAS85E,IAET,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOc,aAAc5B,EAAe,EAAIA,OAAex2H,EAAWP,MAAM,SACtE,kBAAC,IAAD,CAAeA,MAAOK,EAAMmtC,OAASpnC,KAAK2qC,cAAgB,YAAc,cAG5E,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY/wC,MAAOK,EAAMmtC,OAASpnC,KAAK2qC,cAAgB,YAAc,WAArE,sBASV,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAUzwC,QAAS,CAAEuS,KAAMvS,GAAQu1H,UAAYtiD,QAAM,EAACx1B,QAAS,IAAMm4E,EAAkBzlF,IAASA,IAC9F,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAgBzwC,MAAM,aAExB,kBAAC,IAAD,CAAcxC,QAAS,kBAAC,IAAD,oBACtBy4H,EAAgB,kBAAC,KAAD,CAAgBj2H,MAAM,YAAe,kBAAC,KAAD,CAAgBA,MAAM,aAE9E,kBAAC,IAAD,CAAU+U,GAAIkhH,EAAewC,QAAQ,OAAOlpB,eAAa,GACvD,kBAAC,IAAD,CACEh8B,QAAM,EACNhgG,IAAK,QACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAK0qC,QAExCiN,QAAS45E,IAET,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAe33H,MAAOw2H,EAAa,QAAUn2H,EAAMmtC,OAASpnC,KAAK0qC,MAAQ,YAAc,aAEzF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY9wC,MAAOw2H,EAAa,QAAUn2H,EAAMmtC,OAASpnC,KAAK0qC,MAAQ,YAAc,WAApF,WAKHmmF,GACC,kBAAC,IAAD,CACE32H,QAAS,CAAEuS,KAAMvS,GAAQu1H,UACzBtiD,QAAM,EACNhgG,IAAK,WACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS,CAAC5hD,KAAK/B,SAAU+B,KAAKtB,SAAS0R,SAASnW,EAAMmtC,QAEjEuQ,QAAS+5E,IAET,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOa,aAAmC,IAArB7B,EAAyBA,OAAmBv2H,EAAWP,MAAM,SAChF,kBAAC,IAAD,CAAcA,MAAQ,CAACoG,KAAK/B,SAAU+B,KAAKtB,SAAS0R,SAASnW,EAAMmtC,MAAsB,UAAd,gBAG/E,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYxtC,MAAQ,CAACoG,KAAK/B,SAAU+B,KAAKtB,SAAS0R,SAASnW,EAAMmtC,MAAsB,UAAd,aAAzE,cAML0pF,GACC,kBAAC,IAAD,CACE52H,QAAS,CAAEuS,KAAMvS,GAAQu1H,UACzBtiD,QAAM,EACNhgG,IAAK,gBACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAK/C,gBAExC06C,QAASg6E,IAET,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOY,aAAoC,IAAtB9B,EAA0BA,OAAoBt2H,EAAWP,MAAM,SAClF,kBAAC,IAAD,CACEg+C,MAAO,CAAEC,UAAW,kBACpBj+C,MAAOK,EAAMmtC,OAASpnC,KAAK/C,cAAgB,YAAc,cAI/D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYrD,MAAOK,EAAMmtC,OAASpnC,KAAK/C,cAAgB,YAAc,WAArE,mBAMN,kBAAC,IAAD,CACEkwE,QAAM,EACNhgG,IAAK,UACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAK+qC,UAExC4M,QAASi6E,IAET,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAiBh4H,MAAO02H,EAAe,QAAUr2H,EAAMmtC,OAASpnC,KAAK+qC,QAAU,YAAc,aAE/F,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYnxC,MAAO02H,EAAe,QAAUr2H,EAAMmtC,OAASpnC,KAAK+qC,QAAU,YAAc,WAAxF,aAKHgmF,GACC,kBAAC,IAAD,CACE72H,QAAS,CAAEuS,KAAMvS,GAAQu1H,UACzBtiD,QAAM,EACNhgG,IAAK,UACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAKmrC,UAExCwM,QA5UZ,WACE19C,EAAM8f,OAAOyuB,cA6UH,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAe5uC,MAAOK,EAAMmtC,OAASpnC,KAAKmrC,QAAU,YAAc,aAEpE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYvxC,MAAOK,EAAMmtC,OAASpnC,KAAKmrC,QAAU,YAAc,WAA/D,cAMR,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAUjxC,QAAS,CAAEuS,KAAMvS,GAAQu1H,UAAYtiD,QAAM,EAACx1B,QAAS,IAAMq4E,EAAc3lF,IAASA,IAC1F,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAYzwC,MAAM,aAEpB,kBAAC,IAAD,CAAcxC,QAAS,kBAAC,IAAD,gBACtB24H,EAAY,kBAAC,KAAD,CAAgBn2H,MAAM,YAAe,kBAAC,KAAD,CAAgBA,MAAM,aAE1E,kBAAC,IAAD,CAAU+U,GAAIohH,EAAWsC,QAAQ,OAAOlpB,eAAa,GACnD,kBAAC,IAAD,CACEh8B,QAAM,EACNhgG,IAAK,OACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QACP3nD,EAAMmtC,OAASpnC,KAAKqrC,MAAQpxC,EAAMmtC,OAASpnC,KAAKirC,WAAahxC,EAAMmtC,OAASpnC,KAAKgqC,WAErF2N,QAASk6E,IAET,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAkBj4H,MAAO22H,EAAY,QAAUt2H,EAAMmtC,OAASpnC,KAAKqrC,KAAO,YAAc,aAE1F,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYzxC,MAAO22H,EAAY,QAAUt2H,EAAMmtC,OAASpnC,KAAKqrC,KAAO,YAAc,WAAlF,UAKJ,kBAAC,IAAD,CACE8hC,QAAM,EACNhgG,IAAK,SACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAKsrC,SAExCqM,QAASm6E,IAET,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAwBl4H,MAAOK,EAAMmtC,OAASpnC,KAAKsrC,OAAS,YAAc,aAE5E,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY1xC,MAAOK,EAAMmtC,OAASpnC,KAAKsrC,OAAS,YAAc,WAA9D,YAGH4lF,IACC,kBAAC,IAAD,CACEh3H,QAAS,CAAEuS,KAAMvS,GAAQu1H,UACzBtiD,QAAM,EACNhgG,IAAK,MACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAKiqC,MAExC0N,QAASo6E,IAET,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUn4H,MAAOK,EAAMmtC,OAASpnC,KAAKiqC,IAAM,YAAc,aAE3D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYrwC,MAAOK,EAAMmtC,OAASpnC,KAAKiqC,IAAM,YAAc,WAA3D,SAILknF,IACC,kBAAC,IAAD,CACEj3H,QAAS,CAAEuS,KAAMvS,GAAQu1H,UACzBtiD,QAAM,EACNhgG,IAAK,eACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAKs/B,cAExCqY,QAtYZ,WACE19C,EAAM8f,OAAO0uB,kBAuYH,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAgB7uC,MAAOK,EAAMmtC,OAASpnC,KAAKs/B,YAAc,YAAc,aAEzE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY1lC,MAAOK,EAAMmtC,OAASpnC,KAAKs/B,YAAc,YAAc,WAAnE,kBAIL8xF,IACC,kBAAC,IAAD,CACEl3H,QAAS,CAAEuS,KAAMvS,GAAQu1H,UACzBtiD,QAAM,EACNhgG,IAAK,cACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAKyqC,cAExCkN,QAASq6E,IAET,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAgBp4H,MAAOK,EAAMmtC,OAASpnC,KAAKyqC,YAAc,YAAc,aAEzE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY7wC,MAAOK,EAAMmtC,OAASpnC,KAAKyqC,YAAc,YAAc,WAAnE,iBAILumF,GACC,kBAAC,IAAD,CACE92H,QAAS,CAAEuS,KAAMvS,GAAQu1H,UACzBtiD,QAAM,EACNhgG,IAAK,OACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAKzxB,cAExCopE,QAlaZ,WACE19C,EAAM8f,OAAO4tB,kBAmaH,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAc/tC,MAAOK,EAAMmtC,OAASpnC,KAAKzxB,YAAc,YAAc,aAEvE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYqrB,MAAOK,EAAMmtC,OAASpnC,KAAKzxB,YAAc,YAAc,WAAnE,UAIL0iJ,IACC,kBAAC,IAAD,CACE/2H,QAAS,CAAEuS,KAAMvS,GAAQu1H,UACzBtiD,QAAM,EACNhgG,IAAK,OACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAK8qC,OAExC6M,QAASs6E,IAET,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAer4H,MAAOK,EAAMmtC,OAASpnC,KAAK8qC,KAAO,YAAc,aAEjE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYlxC,MAAOK,EAAMmtC,OAASpnC,KAAK8qC,KAAO,YAAc,WAA5D,WAMR,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAU5wC,QAAS,CAAEuS,KAAMvS,GAAQu1H,UAAYtiD,QAAM,EAACx1B,QAAS,IAAMu4E,EAAa7lF,IAASA,IACzF,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAczwC,MAAM,aAEtB,kBAAC,IAAD,CAAcxC,QAAS,kBAAC,IAAD,eACtB64H,EAAW,kBAAC,KAAD,CAAgBr2H,MAAM,YAAe,kBAAC,KAAD,CAAgBA,MAAM,aAEzE,kBAAC,IAAD,CAAU+U,GAAIshH,EAAUoC,QAAQ,OAAOlpB,eAAa,GAClD,kBAAC,IAAD,CACEh8B,QAAM,EACNhgG,IAAK,aACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAKgrC,aAExC2M,QAlcV,WACE19C,EAAM8f,OAAOsuB,iBAmcL,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAWzuC,MAAOK,EAAMmtC,OAASpnC,KAAKgrC,WAAa,YAAc,aAEnE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYpxC,MAAOK,EAAMmtC,OAASpnC,KAAKgrC,WAAa,YAAc,WAAlE,gBAGJ,kBAAC,IAAD,CACEmiC,QAAM,EACNhgG,IAAK,WACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAKorC,WAExCuM,QAASu6E,IAET,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAUt4H,MAAO42H,EAAgB,QAAUv2H,EAAMmtC,OAASpnC,KAAKorC,SAAW,YAAc,aAE1F,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYxxC,MAAO42H,EAAgB,QAAUv2H,EAAMmtC,OAASpnC,KAAKorC,SAAW,YAAc,WAA1F,cAKJ,kBAAC,IAAD,CACE+hC,QAAM,EACNhgG,IAAK,UACLotB,UAAW+3H,YAAK,CACd,CAACp4H,GAAQ0nD,QAAS3nD,EAAMmtC,OAASpnC,KAAK6qC,UAExC8M,QA/dV,WACE19C,EAAM8f,OAAOiuB,kBAgeL,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAcpuC,MAAOK,EAAMmtC,OAASpnC,KAAK6qC,QAAU,YAAc,aAEnE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYjxC,MAAOK,EAAMmtC,OAASpnC,KAAK6qC,QAAU,YAAc,WAA/D,cAGH3X,O,8CC3tBX,kIAuBO,SAASs/F,EAAkBv4H,GAChC,MAAMuvC,EAAcJ,oBAAS,GAAO,GACpC,SAASgB,IACPZ,EAAal9D,IAAOA,GAiBtB,OAfAg+D,oBAAU,KACR,MAAMuU,EAAKkR,YAAY3lB,EAAU,KACjC,MAAO,IAAM8lB,cAAcrR,IAC1B,IAaD,oCACE,kBAAC,IAAD,CAAY/E,QAAQ,MAApB,iBACA,kBAAC,IAAD,CAAKgmC,GAAI,GACP,kBAAC,IAAD,+HAIA,kBAAC,IAAD,wFACA,6BACA,kBAAC,IAAD,4CACA,kBAAC,IAAD,gBACA,kBAAC,IAAD,2DACA,kBAAC,IAAD,4BACA,kBAAC,IAAD,wBACA,kBAAC,IAAD,qCACA,kBAAC,IAAD,iBACA,6BACA,kBAAC,IAAD,6QAMF,kBAAC,IAAD,CAAYhmC,QAAQ,KAAKlgD,MAAM,WAA/B,2BAGA,kBAAC,IAAD,CAAKkmF,GAAI,GACP,kBAAC,IAAD,CAAShuC,MAAO,4BACd,kBAAC,IAAD,CAAQ6F,QAAS19C,EAAM+yC,wBAAvB,0BAEF,kBAAC,IAAD,CAAS8E,MAAO,uDACd,kBAAC,IAAD,CAAQljC,GAAI,CAAEkxE,GAAI,GAAKnoC,QA1C/B,WACE19C,EAAM6yC,eACN1C,KAwCgDxwC,MAAM,SAAhD,eApCFinF,cAAsB,6BACnB,KAuCH,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAY/mC,QAAQ,MAApB,2BACA,kBAAC,IAAD,CAAKgmC,GAAI,GACP,kBAAC,IAAD,kGAGA,kBAAC,IAAD,OAEF,kBAAC,IAAD,MACA,kBAAC,IAAD,S,6BCzFN,gIAoBO,SAAS2yC,IACd,MAAMjpF,EAAcJ,oBAAS,GAAM,GAG7BspF,EAFS5yH,IAAIjyB,SAEOw1B,cAAcz1B,QAQxC,SAASw8D,IACPZ,EAAaa,IAASA,GAaxB,OApBIzxC,IAASC,0BAA4BC,IAA+B65H,gBACtED,EAAW92H,KAAK,CAACg3H,EAAMC,IACdD,EAAKxmJ,MAAQymJ,EAAKzmJ,MAAQ,EAAI,GAmBvC,oCACE,kBAAC,IAAD,CAAS0lE,MAAO,2DACd,kBAAC,IAAD,CAAQ6F,QARd,WACE/+C,IAASC,wBAA0BC,IAA+B65H,eAClEvoF,MAMI,kBAEF,kBAAC,IAAD,CAAS0H,MAAO,6EACd,kBAAC,IAAD,CAAQljC,GAAI,CAAEkxE,GAAI,GAAKnoC,QAhB7B,WACE/+C,IAASC,wBAA0BC,IAA+BC,gBAClEqxC,MAcI,6BAIF,kBAAC,IAAD,CAAM0oF,OAAK,GACRJ,EAAWzgF,IAAK5d,IACf,MAAMxQ,EAAM5mB,IAAco3B,EAAEjoD,MAE5B,IAAIs0B,EAAQ,KAKZ,OAJI2zB,EAAEjoD,OAASuN,IAAkByD,oBAC/BsjB,EAAQ2zB,EAAE3zB,OAGL,kBAAC,IAAD,CAAuBvzB,IAAK02C,EAAIz3C,KAAMy3C,IAAKA,EAAKnjB,MAAOA,U,6BCjExE,2GA0BA,SAASqyH,GAAa,EAAErmJ,IACtB,OAAIA,EAEA,gCACE,gBAAC,IAAD,CAAWS,IAAI,KACb,gBAAC,IAAD,SAAmB,KAAnB,MAEF,gBAAC,IAAD,CAAWA,IAAI,KACb,gBAAC,IAAD,KAAakC,IAAe2B,iBAAiBtE,MAK9C,iCAGT,SAASsmJ,GAAgB,KAAEnhF,IACzB,OACE,gBAAC,IAAD,CAAOzb,KAAK,QAAQtoB,QAAQ,QAC1B,gBAAC,IAAD,KACG+jC,EAAKI,IAAKvlE,GACT,gBAAC,IAAD,CAAUS,IAAKT,EAAE,IACf,gBAAC,IAAD,CAAWS,IAAI,KACb,gBAAC,IAAD,CAAYklE,QAAM,GAAE3lE,EAAE,GAAtB,kBAEF,gBAAC,IAAD,CAAWS,IAAI,IAAIyqE,MAAO,CAAE0qE,UAAW,UACrC,gBAAC,IAAD,CAAYjwE,QAAM,GAAEhjE,IAAe2B,iBAAiBtE,EAAE,MAExD,gBAACqmJ,EAAD,CAAcrmJ,EAAGA,EAAE,SAQxB,SAASumJ,IACd,MAAMryH,EAjDR,WACE,MAAMsyH,EAAY,GAClB,IAAK,MAAMrvG,KAAOh2C,IAAOklC,oBAAqB,CAC5C,MAAM+oC,EAAS7+C,IAAc4mB,EAAIz3C,MACjC,IAAK,MAAMoqC,KAAQslC,EAAOl7C,MAAO,CAC/B,MAAMkoB,EAAIoqG,EAAK18G,GAAQ08G,EAAK18G,GAAQ,EACpC08G,EAAK18G,GAAQsS,EAAIgzB,EAAOl7C,MAAM4V,IAGlC,OAAO08G,EAwCOC,GAmCd,OACE,gCACE,gBAAC,IAAD,CAAYr5E,QAAQ,MAApB,eACA,gBAAC,IAAD,CAAKgmC,GAAI,GACP,gBAACkzC,EAAD,CACEnhF,KAAM,CACJ,CAAC,kBAAmBhkE,IAAO2zB,oBAAqB3zB,IAAO2zB,oBAAsBZ,EAAMY,qBACnF,CAAC,iBAAkB3zB,IAAO4zB,mBAAoB5zB,IAAO4zB,mBAAqBb,EAAMa,oBAChF,CAAC,iBAAkB5zB,IAAO6zB,mBAAoB7zB,IAAO6zB,mBAAqBd,EAAMc,oBAChF,CAAC,kBAAmB7zB,IAAO8zB,kBAAmB9zB,IAAO8zB,kBAAoBf,EAAMe,sBAGnF,2BAEA,gBAACqxH,EAAD,CACEnhF,KAAM,CACJ,CAAC,iBAAkBhkE,IAAO8yB,aAAc9yB,IAAO8yB,aAAeC,EAAMD,cACpE,CAAC,sBAAuB9yB,IAAOqzB,iBAAkBrzB,IAAOqzB,iBAAmBN,EAAMM,qBAGrF,2BAEA,gBAAC8xH,EAAD,CACEnhF,KAAM,CACJ,CAAC,kBAAmBhkE,IAAOgzB,cAAehzB,IAAOgzB,cAAgBD,EAAMC,eACvE,CAAC,uBAAwBhzB,IAAOszB,kBAAmBtzB,IAAOszB,kBAAoBP,EAAMO,sBAGxF,2BAEA,gBAAC6xH,EAAD,CACEnhF,KAAM,CACJ,CAAC,iBAAkBhkE,IAAOizB,aAAcjzB,IAAOizB,aAAeF,EAAME,cACpE,CAAC,sBAAuBjzB,IAAOuzB,iBAAkBvzB,IAAOuzB,iBAAmBR,EAAMQ,qBAGrF,2BAEA,gBAAC4xH,EAAD,CACEnhF,KAAM,CACJ,CAAC,mBAAoBhkE,IAAOkzB,eAAgBlzB,IAAOkzB,eAAiBH,EAAMG,gBAC1E,CAAC,wBAAyBlzB,IAAOwzB,mBAAoBxzB,IAAOwzB,mBAAqBT,EAAMS,uBAG3F,2BAEA,gBAAC2xH,EAAD,CACEnhF,KAAM,CACJ,CAAC,iBAAkBhkE,IAAOmzB,aAAcnzB,IAAOmzB,aAAeJ,EAAMI,cACpE,CAAC,sBAAuBnzB,IAAOyzB,iBAAkBzzB,IAAOyzB,iBAAmBV,EAAMU,qBAGrF,2BAEA,gBAAC0xH,EAAD,CACEnhF,KAAM,CACJ,CAAC,kBAAmBhkE,IAAOozB,cAAepzB,IAAOozB,cAAgBL,EAAMK,eACvE,CAAC,uBAAwBpzB,IAAO0zB,kBAAmB1zB,IAAO0zB,kBAAoBX,EAAMW,sBAGxF,2BAEA,gBAACyxH,EAAD,CACEnhF,KAAM,CACJ,CACE,2BACAhkE,IAAOo0B,wBACPp0B,IAAOo0B,wBAA0BrB,EAAMqB,yBAEzC,CACE,8BACAp0B,IAAOq0B,gCACPr0B,IAAOq0B,gCAAkCtB,EAAMsB,iCAEjD,CACE,iCACAr0B,IAAOs0B,2BACPt0B,IAAOs0B,2BAA6BvB,EAAMuB,4BAE5C,CACE,mCACAt0B,IAAOu0B,4BACPv0B,IAAOu0B,4BAA8BxB,EAAMwB,6BAE7C,CACE,mCACAv0B,IAAOw0B,6BACPx0B,IAAOw0B,6BAA+BzB,EAAMyB,iCAIlD,2BAEA,gBAAC2wH,EAAD,CACEnhF,KAAM,CACJ,CAAC,2BAA4BhkE,IAAO+zB,iBAAkB/zB,IAAO+zB,iBAAmBhB,EAAMgB,kBACtF,CAAC,2BAA4B/zB,IAAOg0B,iBAAkBh0B,IAAOg0B,iBAAmBjB,EAAMiB,kBACtF,CAAC,UAAWh0B,IAAOm0B,gBAAiBn0B,IAAOm0B,gBAAkBpB,EAAMoB,oBAGvE,2BAEA,gBAACgxH,EAAD,CACEnhF,KAAM,CACJ,CAAC,iBAAkBhkE,IAAOk0B,mBAAoBl0B,IAAOk0B,mBAAqBnB,EAAMmB,oBAChF,CAAC,eAAgBl0B,IAAOi0B,iBAAkBj0B,IAAOi0B,iBAAmBlB,EAAMkB,qBAG9E,2BAEA,iBA/IN,WACE,OAAKj0B,IAAO8uI,uBAEV,gCACE,gBAACqW,EAAD,CACEnhF,KAAM,CACJ,CACE,6BACAhkE,IAAO40B,gCACP50B,IAAO40B,gCAAkC7B,EAAM6B,iCAEjD,CACE,0BACA50B,IAAOy0B,6BACPz0B,IAAOy0B,6BAA+B1B,EAAM0B,8BAE9C,CACE,2BACAz0B,IAAO00B,8BACP10B,IAAO00B,8BAAgC3B,EAAM2B,+BAE/C,CACE,6BACA10B,IAAO20B,0BACP30B,IAAO20B,0BAA4B5B,EAAM4B,8BAI/C,4BA3BuC,mCA8IvC,U,+BChNR,qFAaO,SAAS4wH,IACd,MAAM18B,EAA6B,GAEnC,IAAIz6C,GAAY,EAChB,IAAK,IAAI5xE,EAAIwD,IAAOklC,oBAAoBxoC,OAAS,EAAGF,GAAK,EAAGA,IAC1D,GAAIwD,IAAOklC,oBAAoB1oC,GAAG+B,OAASuN,IAAkByD,kBAAmB,CAC9E6+D,EAAW5xE,EACX,MAGJ,IAAK,IAAIA,EAAI,EAAGA,EAAIwD,IAAOklC,oBAAoBxoC,OAAQF,IAAK,CAC1D,MAAM0xE,EAAWluE,IAAOklC,oBAAoB1oC,GAC5C,GAAI0xE,EAAS3vE,OAASuN,IAAkByD,mBAAqB/S,IAAM4xE,EAAU,SAC7E,MAAMp4B,EAAM5mB,IAAc8+C,EAAS3vE,MACnC,IAAIs0B,EAAQ,KACRq7C,EAAS3vE,OAASuN,IAAkByD,oBACtCsjB,EAAQq7C,EAASr7C,OAGnBg2F,EAAK7rH,KAAK,gBAAC,IAAD,CAAuBsC,IAAK02C,EAAIz3C,KAAMy3C,IAAKA,EAAKnjB,MAAOA,KAGnE,OAAO,gBAAC,IAAD,CAAMoyH,OAAK,GAAEp8B,K,6BCnCtB,gGAQO,SAASvyE,IACd,OACE,oCACE,kBAAC,IAAD,CAAY21B,QAAQ,MAApB,gBACA,kBAAC,IAAD,CAAKgmC,GAAI,GACP,kBAAC,IAAD,CAAMgzC,OAAK,GACT,kBAAC,IAAD,MACA,kBAAC,IAAD,W,6BCfV,2JAkBO,SAASO,IACd,MAAO7kH,EAAMqrC,GAAWzQ,oBAAS,GAC3Bn6D,EAAWpB,IAAOoB,SAExB,OAAwB,IAApBA,EAAS1E,OACJ,qCAIP,kBAAC,IAAD,CAAKggG,UAAW2+B,KACd,kBAAC,IAAD,CAAgBvxD,QAAS,IAAMkC,EAASxP,IAASA,IAC/C,kBAAC,IAAD,CACEjzC,QACE,kBAAC,IAAD,CAAYwgD,MAAO,CAAE6yB,WAAY,aAAjC,2CAEE,6BAFF,SAGSx7F,EAAS1E,OAHlB,UAOHikC,EAAO,kBAAC,IAAD,CAAY5U,MAAM,YAAe,kBAAC,IAAD,CAAYA,MAAM,aAE7D,kBAAC,IAAD,CAAU+U,GAAIH,EAAM26F,eAAa,GAC/B,kBAAC,IAAD,CAAKl9H,EAAG,GACN,kBAAC,IAAD,qHAGA,kBAAC,IAAD,6DACA,6BAEA,kBAAC,IAAD,+CACA,kBAAC,IAAD,CAAK6zG,GAAI,GACN7wG,EAASgjE,IAAK/lE,GACb,kBAAC,IAAD,CAAYiB,IAAKjB,GAAjB,KAAuB0/F,YAAY1/F,W,6BCnDjD,uFAaO,SAASonJ,IACd,MAAMC,EAAY1lJ,IAAOo2C,YAAYr2C,QAQrC,OANIgrB,IAASC,0BAA4BC,IAA+B65H,gBACtEY,EAAU33H,KAAK,CAAC43H,EAAKC,IACZD,EAAInmJ,EAAIomJ,EAAIpmJ,GAKrB,gCACGkmJ,EAAUthF,IAAK5d,IACd,MAAMnQ,EAAa,aAAemQ,EAAEhnD,EAC9BqmJ,EAAQvvG,IAAYD,GAC1B,OAAa,MAATwvG,GACF9jJ,QAAQ2nB,MAAO,+BAA8B88B,EAAEhnD,GACxC,MAGF,gBAAC,IAAD,CAAqBF,IAAKknD,EAAEhnD,EAAGqzB,MAAO2zB,EAAEc,IAAKD,GAAIw+F,S,6BChChE,2IAwBO,SAASC,EAAoB15H,GAClC,MAAOuU,EAAMqrC,GAAWzQ,oBAAS,GAC3B5X,EAA0B,KAAfv3B,EAAMi7B,GAAG7nD,EAAW,IAAM,IAE3C,OACE,kBAAC,IAAD,CAAKk9F,UAAW2+B,KACd,kBAAC,IAAD,CAAgBvxD,QAAS,IAAMkC,EAASxP,IAASA,IAC/C,kBAAC,IAAD,CACEjzC,QACE,kBAAC,IAAD,CAAYwgD,MAAO,CAAE6yB,WAAY,aAC9BxwE,EAAMi7B,GAAG9oD,KACV,6BACE,SAAQ6tB,EAAMyG,WAAW8wB,OAIhChjB,EAAO,kBAAC,IAAD,CAAY5U,MAAM,YAAe,kBAAC,IAAD,CAAYA,MAAM,aAE7D,kBAAC,IAAD,CAAU+U,GAAIH,EAAM26F,eAAa,GAC/B,kBAAC,IAAD,CAAKl9H,EAAG,GACN,kBAAC,IAAD,KAAaguB,EAAMi7B,GAAGl9B,W,6BC3ChC,sMA4BO,SAAS47H,EAAY35H,GAC1B,OACE,oCACE,8FACA,kBAAC,IAAD,CAASG,OAAQH,EAAMG,OAAQ2f,OAAQ9f,EAAM8f,SAC7C,kBAAC,IAAD,CAAO3f,OAAQH,EAAMG,SACrB,kBAAC,IAAD,CAAUA,OAAQH,EAAMG,SACxB,kBAAC,IAAD,CAAeA,OAAQH,EAAMG,SAC7B,kBAAC,IAAD,CAAaA,OAAQH,EAAMG,SAC3B,kBAAC,IAAD,CAAUA,OAAQH,EAAMG,SACxB,kBAAC,IAAD,MACA,kBAAC,IAAD,MAECH,EAAMG,OAAOpI,uBAAuBy4C,KAAe,kBAAC,IAAD,CAAiBrwC,OAAQH,EAAMG,SAElFH,EAAMG,OAAOvJ,UAAY,kBAAC,IAAD,CAAMuJ,OAAQH,EAAMG,SAE7CH,EAAMG,OAAO0jH,kBAAoB,kBAAC,IAAD,CAAa1jH,OAAQH,EAAMG,SAE7D,kBAAC,IAAD,MAECH,EAAMG,OAAO2b,eAAiB,kBAAC,IAAD,MAE9B9b,EAAMG,OAAOiZ,QAAQ9oC,OAAS,GAAK,kBAAC,IAAD,CAAS6vB,OAAQH,EAAMG,SAE3D,kBAAC,IAAD,CAAUA,OAAQH,EAAMG,OAAQ6uC,OAAQhvC,EAAMgvC,Y,6BCtDpD,kHAiBO,SAAS4qF,EAAQ55H,GACtB,SAAS65H,EAASzmJ,GAChB,OAAO,WACL4sB,EAAMG,OAAOid,UAAUhqC,IAwB3B,OACE,kBAAC,IAAD,CAAW0mJ,gBAAiB,CAAE5qB,eAAe,IAC3C,kBAAC,IAAD,CAAkB6qB,WAAY,kBAAC,IAAD,OAC5B,wCAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQr8E,QAASm8E,EAAS,MACxB,kCACI,kBAAC,IAAD,CAAO1lJ,MAAO,QAGpB,kBAAC,IAAD,CAAQupE,QAASm8E,EAAS,MACxB,kCACI,kBAAC,IAAD,CAAO1lJ,MAAO,QAGpB,kBAAC,IAAD,CAAQupE,QAASm8E,EAAS,OACxB,kCACI,kBAAC,IAAD,CAAO1lJ,MAAO,SAGpB,kBAAC,IAAD,CAAQupE,QAASm8E,EAAS,OACxB,kCACI,kBAAC,IAAD,CAAO1lJ,MAAO,SAGpB,kBAAC,IAAD,CAAQupE,QAASm8E,EAASzjJ,MACxB,kCACI,kBAAC,IAAD,CAAOjC,MAAOiC,QAGpB,kBAAC,IAAD,CAAQsnE,QAnDd,WACE19C,EAAMG,OAAOyQ,kBAAkB/F,QAAU,IAkDrC,SACA,6BAEA,kBAAC,IAAD,CAAQ6yC,QAlDd,WACE19C,EAAM8f,OAAOwtB,YAAW,GAAM,KAiD1B,uBACA,kBAAC,IAAD,CAAQoQ,QA/Cd,WACE19C,EAAM8f,OAAOwtB,YAAW,GAAM,KA8C1B,qBACA,kBAAC,IAAD,CAAQoQ,QA5Cd,WACE19C,EAAM8f,OAAOwtB,YAAW,GAAO,KA2C3B,sBACA,kBAAC,IAAD,CAAQoQ,QAzCd,WACE19C,EAAM8f,OAAOwtB,YAAW,GAAO,KAwC3B,yB,8BCjFR,0HAYA,MAAM0sF,EAAY,KAMX,SAASvpF,EAAMzwC,GACpB,SAASi6H,EAAUnjD,EAAcojD,GAC/B,OAAO,SAAU59G,GACf,OAAQw6D,GACN,IAAK,UACCx6D,GACFtc,EAAMG,OAAO6d,eAAe1B,EAAM49G,GAEpC,MACF,IAAK,WACC59G,GACFtc,EAAMG,OAAO8d,gBAAgB3B,EAAM49G,GAErC,MACF,IAAK,UACC59G,GACFtc,EAAMG,OAAO+d,eAAe5B,EAAM49G,GAEpC,MACF,IAAK,YACC59G,GACFtc,EAAMG,OAAOge,iBAAiB7B,EAAM49G,GAEtC,MACF,IAAK,UACC59G,GACFtc,EAAMG,OAAOie,eAAe9B,EAAM49G,GAEpC,MACF,IAAK,WACC59G,GACFtc,EAAMG,OAAOke,gBAAgB/B,EAAM49G,GAErC,MACF,IAAK,eACC59G,GACFtc,EAAMG,OAAOme,oBAAoBhC,EAAM49G,GAI7Cl6H,EAAMG,OAAOsc,qBAIjB,SAAS09G,EAAYD,GACnB,OAAO,SAAUt8G,GACf5d,EAAMG,OAAOqX,OAASoG,EAAMs8G,GA0BhC,SAASE,EAAgBtjD,GACvB,OAAO,WACL,OAAQA,GACN,IAAK,UACH92E,EAAMG,OAAO4X,YAAc,EAC3B,MACF,IAAK,WACH/X,EAAMG,OAAO6X,aAAe,EAC5B,MACF,IAAK,UACHhY,EAAMG,OAAO8X,YAAc,EAC3B,MACF,IAAK,YACHjY,EAAMG,OAAO+X,cAAgB,EAC7B,MACF,IAAK,UACHlY,EAAMG,OAAOgY,YAAc,EAC3B,MACF,IAAK,WACHnY,EAAMG,OAAOiY,aAAe,EAC5B,MACF,IAAK,eACHpY,EAAMG,OAAOwc,iBAAmB,EAGpC3c,EAAMG,OAAOsc,qBAuBjB,OACE,kBAAC,IAAD,CAAWq9G,gBAAiB,CAAE5qB,eAAe,IAC3C,kBAAC,IAAD,CAAkB6qB,WAAY,kBAAC,IAAD,OAC5B,mDAEF,kBAAC,IAAD,KACE,+BACE,+BACE,4BACE,4BACE,kBAAC,IAAD,cAEF,4BACE,kBAAC,IAAD,CAAQr8E,QAnFtB,WACE19C,EAAMG,OAAO6d,eAAeg8G,GAC5Bh6H,EAAMG,OAAO8d,gBAAgB+7G,GAC7Bh6H,EAAMG,OAAO+d,eAAe87G,GAC5Bh6H,EAAMG,OAAOge,iBAAiB67G,GAC9Bh6H,EAAMG,OAAOie,eAAe47G,GAC5Bh6H,EAAMG,OAAOke,gBAAgB27G,GAC7Bh6H,EAAMG,OAAOme,oBAAoB07G,GACjCh6H,EAAMG,OAAOsc,sBA2ED,eACA,kBAAC,IAAD,CAAQihC,QAzEtB,WACE19C,EAAMG,OAAO4X,YAAc,EAC3B/X,EAAMG,OAAO6X,aAAe,EAC5BhY,EAAMG,OAAO8X,YAAc,EAC3BjY,EAAMG,OAAO+X,cAAgB,EAC7BlY,EAAMG,OAAOgY,YAAc,EAC3BnY,EAAMG,OAAOiY,aAAe,EAC5BpY,EAAMG,OAAOwc,iBAAmB,EAChC3c,EAAMG,OAAOsc,sBAiED,WAGJ,4BACE,4BACE,kBAAC,IAAD,kBAEF,4BACE,kBAAC,IAAD,CACEygC,MAAM,UACNC,YAAY,MACZG,KAAM,IAAM28E,EAAU,UAAW,EAArBA,CAAwBD,GACpC58E,IAAK68E,EAAU,UAAW,GAC1B58E,SAAU48E,EAAU,WAAY,GAChC5+G,MAAO++G,EAAgB,eAI7B,4BACE,4BACE,kBAAC,IAAD,mBAEF,4BACE,kBAAC,IAAD,CACEl9E,MAAM,WACNC,YAAY,MACZG,KAAM,IAAM28E,EAAU,WAAY,EAAtBA,CAAyBD,GACrC58E,IAAK68E,EAAU,WAAY,GAC3B58E,SAAU48E,EAAU,YAAa,GACjC5+G,MAAO++G,EAAgB,gBAI7B,4BACE,4BACE,kBAAC,IAAD,kBAEF,4BACE,kBAAC,IAAD,CACEl9E,MAAM,UACNC,YAAY,MACZG,KAAM,IAAM28E,EAAU,UAAW,EAArBA,CAAwBD,GACpC58E,IAAK68E,EAAU,UAAW,GAC1B58E,SAAU48E,EAAU,WAAY,GAChC5+G,MAAO++G,EAAgB,eAI7B,4BACE,4BACE,kBAAC,IAAD,oBAEF,4BACE,kBAAC,IAAD,CACEl9E,MAAM,YACNC,YAAY,MACZG,KAAM,IAAM28E,EAAU,YAAa,EAAvBA,CAA0BD,GACtC58E,IAAK68E,EAAU,YAAa,GAC5B58E,SAAU48E,EAAU,aAAc,GAClC5+G,MAAO++G,EAAgB,iBAI7B,4BACE,4BACE,kBAAC,IAAD,kBAEF,4BACE,kBAAC,IAAD,CACEl9E,MAAM,UACNC,YAAY,MACZG,KAAM,IAAM28E,EAAU,UAAW,EAArBA,CAAwBD,GACpC58E,IAAK68E,EAAU,UAAW,GAC1B58E,SAAU48E,EAAU,WAAY,GAChC5+G,MAAO++G,EAAgB,eAI7B,4BACE,4BACE,kBAAC,IAAD,mBAEF,4BACE,kBAAC,IAAD,CACEl9E,MAAM,WACNC,YAAY,MACZG,KAAM,IAAM28E,EAAU,WAAY,EAAtBA,CAAyBD,GACrC58E,IAAK68E,EAAU,WAAY,GAC3B58E,SAAU48E,EAAU,YAAa,GACjC5+G,MAAO++G,EAAgB,gBAI7B,4BACE,4BACE,kBAAC,IAAD,uBAEF,4BACE,kBAAC,IAAD,CACEl9E,MAAM,eACNC,YAAY,MACZG,KAAM,IAAM28E,EAAU,eAAgB,EAA1BA,CAA6BD,GACzC58E,IAAK68E,EAAU,eAAgB,GAC/B58E,SAAU48E,EAAU,gBAAiB,GACrC5+G,MAAO++G,EAAgB,mBAG3B,4BACE,kBAAC,IAAD,CAAQ18E,QAvItB,WACoC,IAA9B19C,EAAMG,OAAOuc,eACf1c,EAAMG,OAAOuc,aAAe,EAC5B1c,EAAMG,OAAOsc,uBAoIH,WAEF,4BACE,kBAAC,IAAD,CAAQihC,QAnItB,WACE19C,EAAMG,OAAOwc,iBAAmB,EAChC3c,EAAMG,OAAOuc,aAAe,EAC5B1c,EAAMG,OAAOsc,sBAgID,aAGJ,4BACE,4BACE,kBAAC,IAAD,gBAEF,4BACE,kBAAC,IAAD,CACEygC,MAAM,QACNC,YAAY,MACZG,KAAM,IAAM28E,EAAU,eAAgB,EAA1BA,CAA6B,KACzC78E,IAAK+8E,EAAY,GACjB98E,SAAU88E,GAAa,GACvB9+G,MA7JP,WACLrb,EAAMG,OAAOqX,MAAQ,a,8BCzH3B,oNA0BO,SAASxT,EAAShE,GACvB,MAAOkE,EAASsrC,GAAcL,mBAAS,cAgBvC,SAASkrF,EAAiBH,GACxB,OAAO,SAAU74G,GACf,MAAM/X,EAAMgxH,IAAWp2H,GACZ,MAAPoF,GAAgBrxB,MAAMopC,KACxB/X,EAAI6X,kBAAoBE,EAAa64G,IAY3C,SAASK,EAAmBL,GAC1B,OAAO,SAAUt1H,GACf,MAAM0E,EAAMgxH,IAAWp2H,GACZ,MAAPoF,GAAgBrxB,MAAM2sB,KACxB0E,EAAI1E,OAASA,EAAQs1H,IAoC3B,OACE,kBAAC,IAAD,CAAWJ,gBAAiB,CAAE5qB,eAAe,IAC3C,kBAAC,IAAD,CAAkB6qB,WAAY,kBAAC,IAAD,OAC5B,yCAEF,kBAAC,IAAD,KACE,+BACE,+BACE,4BACE,4BACE,kBAAC,IAAD,kBAEF,4BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYn1E,GAAG,mBAAf,WACA,kBAAC,IAAD,CACE41E,QAAQ,kBACR51E,GAAG,oBACHrH,SAxFlB,SAA4Bva,GAC1BwM,EAAWxM,EAAM7I,OAAOvnD,QAwFRA,MAAOsxB,EACPu5C,eACE,oCACE,kBAAC,IAAD,CAAYC,QApFlC,WACE,IAAK,MAAMttE,KAAKkqJ,IACdt6H,EAAMG,OAAOic,cAAck+G,IAAWlqJ,GAAG+B,OAkFiBgqD,KAAK,QAAQs+F,cAAY,0BAC/D,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAY/8E,QA3FlC,WACE19C,EAAMG,OAAOic,cAAclY,IA0F6Bi4B,KAAK,QAAQs+F,cAAY,0BAC3D,kBAAC,IAAD,SAKLlqJ,OAAOm6C,OAAO4vG,KAAYtiF,IAAK9zC,GAC9B,kBAAC,IAAD,CAAUhxB,IAAKgxB,EAAQ/xB,KAAMS,MAAOsxB,EAAQ/xB,MACzC+xB,EAAQ/xB,WAOrB,4BACE,4BACE,kBAAC,IAAD,qBAEF,4BACE,kBAAC,IAAD,CACE+qE,MAAM,aACNC,YAAY,MACZG,KAAM,IAAM+8E,EAAiB,EAAjBA,CA/HZ,MAgIAj9E,IAAKi9E,EAAiB,GACtBh9E,SAAUg9E,GAAkB,GAC5Bh/G,MAlGhB,WACE,MAAM/R,EAAMgxH,IAAWp2H,GACZ,MAAPoF,IACFA,EAAI6X,iBAAmB,QAmGjB,4BACE,4BACE,kBAAC,IAAD,gBAEF,4BACE,kBAAC,IAAD,CACE+7B,MAAM,QACNC,YAAY,MACZG,KAAM,IAAMi9E,EAAmB,EAAnBA,CAAsB,KAClCn9E,IAAKm9E,EAAmB,GACxBl9E,SAAUk9E,GAAoB,GAC9Bl/G,MAjGhB,WACE,MAAM/R,EAAMgxH,IAAWp2H,GACZ,MAAPoF,IACFA,EAAI1E,MAAQ,QAkGN,4BACE,4BACE,kBAAC,IAAD,yBAEF,4BACE,kBAAC,IAAD,CAAQ84C,QAnGtB,WACE,IAAK,MAAMttE,KAAKkqJ,IACdA,IAAWlqJ,GAAG+wC,iBAzDF,OA0JF,QACA,kBAAC,IAAD,CAAQu8B,QA9FtB,WACE,IAAK,MAAMttE,KAAKkqJ,IACdA,IAAWlqJ,GAAG+wC,iBAAmB,IA4FvB,WAGJ,4BACE,4BACE,kBAAC,IAAD,oBAEF,4BACE,kBAAC,IAAD,CAAQu8B,QAhGtB,WACE,IAAK,MAAMttE,KAAKkqJ,IACdA,IAAWlqJ,GAAGw0B,MArEF,OAmKF,QACA,kBAAC,IAAD,CAAQ84C,QA3FtB,WACE,IAAK,MAAMttE,KAAKkqJ,IACdA,IAAWlqJ,GAAGw0B,MAAQ,IAyFZ,iB,6BCxLhB,gMAqBO,SAAS5B,EAAchD,GAC5B,MAAO06H,EAAcC,GAAmBxrF,mBAAS,yBAoBjD,OACE,kBAAC,IAAD,CAAW2qF,gBAAiB,CAAE5qB,eAAe,IAC3C,kBAAC,IAAD,CAAkB6qB,WAAY,kBAAC,IAAD,OAC5B,8CAEF,kBAAC,IAAD,KACE,+BACE,+BACE,4BACE,4BACE,kBAAC,IAAD,cAEF,4BACE,kBAAC,IAAD,CACEx8E,SAhChB,SAAiCva,GAC/B23F,EAAgB33F,EAAM7I,OAAOvnD,QAgCfA,MAAO8nJ,EACPj9E,eACE,oCACE,kBAAC,IAAD,CAAYC,QA7BhC,WACE,IAAK,MAAMttE,KAAKsP,IAAmB,CACjC,MAAMiqC,EAAUjqC,IAAkBtP,GAClC4vB,EAAMG,OAAOmvB,kBAAkB3F,KA0BoBwS,KAAK,SACtC,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAYuhB,QApChC,WACE19C,EAAMG,OAAOmvB,kBAAkBorG,IAmCkBv+F,KAAK,SAClC,kBAAC,IAAD,QAIN0hB,aACE,oCACE,kBAAC,IAAD,CAAYH,QAhChC,WACE19C,EAAMG,OAAOiJ,cAAgB,IA+BqB+yB,KAAK,SACnC,kBAAC,IAAD,SAKL5rD,OAAOm6C,OAAOhrC,KAAmBs4D,IAAKpuB,GACrC,kBAAC,IAAD,CAAU12C,IAAK02C,EAAKh3C,MAAOg3C,GACxBA,a,6BC9EvB,oIAcA,MAAMgxG,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAM9C,SAAS1wG,EAAYlqB,GAC1B,SAAS66H,EAAMC,EAAaC,GAC1B,OAAO,WACL,GAAc,IAAVA,EAKJ,GAAK/6H,EAAMG,OAAO6pB,YAAYsyD,KAAMrhD,GAAOA,EAAG7nD,IAAM0nJ,GAKpD,IAAK,IAAI1qJ,EAAI,EAAGA,EAAI4vB,EAAMG,OAAO6pB,YAAY15C,OAAQF,IAC/C4vB,EAAMG,OAAO6pB,YAAY55C,GAAGgD,IAAM0nJ,IACpC96H,EAAMG,OAAO6pB,YAAY55C,GAAG8qD,IAAM6/F,QANpC/6H,EAAMG,OAAO6pB,YAAYp5C,KAAK,IAAIy5F,IAAsBywD,EAAKC,SAL7D/6H,EAAMG,OAAO6pB,YAAchqB,EAAMG,OAAO6pB,YAAYiG,OAAQgL,GAAOA,EAAG7nD,IAAM0nJ,IAiBlF,SAASE,EAASD,GAChB,MAAO,KACL,IAAK,IAAI3qJ,EAAI,EAAGA,EAAIwqJ,EAAStqJ,OAAQF,IACnCyqJ,EAAMD,EAASxqJ,GAAI2qJ,EAAnBF,IASN,OACE,kBAAC,IAAD,CAAWf,gBAAiB,CAAE5qB,eAAe,IAC3C,kBAAC,IAAD,CAAkB6qB,WAAY,kBAAC,IAAD,OAC5B,6CAEF,kBAAC,IAAD,KACE,+BACE,+BACE,4BACE,4BACE,kBAAC,IAAD,mBAEF,4BACE,kBAAC,IAAD,CAAQr8E,QAjBtB,WACE19C,EAAMG,OAAOnrB,SAAW,KAgBZ,WAGJ,wBAAI9B,IAAK,UACP,4BACE,kBAAC,IAAD,cAEF,4BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQkvI,aAAW,WAAW1kE,QAASs9E,EAAS,IAAhD,KAGA,kBAAC,IAAD,CAAQ5Y,aAAW,WAAW1kE,QAASs9E,EAAS,IAAhD,KAGA,kBAAC,IAAD,CAAQ5Y,aAAW,WAAW1kE,QAASs9E,EAAS,IAAhD,KAGA,kBAAC,IAAD,CAAQ5Y,aAAW,WAAW1kE,QAASs9E,EAAS,IAAhD,QAMLJ,EAAS5iF,IAAK5nE,GACb,wBAAI8C,IAAK,MAAQ9C,GACf,4BACE,kBAAC,IAAD,WAAgBA,EAAhB,MAEF,4BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQstE,QAASm9E,EAAMzqJ,EAAG,IAA1B,KACA,kBAAC,IAAD,CAAQstE,QAASm9E,EAAMzqJ,EAAG,IAA1B,KACA,kBAAC,IAAD,CAAQstE,QAASm9E,EAAMzqJ,EAAG,IAA1B,KACA,kBAAC,IAAD,CAAQstE,QAASm9E,EAAMzqJ,EAAG,IAA1B,e,6BCpGpB,0IAkBO,SAASgmC,EAASpW,GACvB,MAAOo+E,EAAS68C,GAAc9rF,mBAAS,YAkBvC,OACE,kBAAC,IAAD,CAAW2qF,gBAAiB,CAAE5qB,eAAe,IAC3C,kBAAC,IAAD,CAAkB6qB,WAAY,kBAAC,IAAD,OAC5B,yCAEF,kBAAC,IAAD,KACE,+BACE,+BACE,4BACE,4BACE,kBAAC,IAAD,kBAEF,4BACE,kBAAC,IAAD,CAAQx8E,SA9BtB,SAA4Bva,GAC1Bi4F,EAAWj4F,EAAM7I,OAAOvnD,QA6B0BA,MAAOwrG,GAC1C7tG,OAAOm6C,OAAOwwG,KAAaljF,IAAKomC,GAC/B,kBAAC,IAAD,CAAUlrG,IAAKkrG,EAAQjsG,KAAMS,MAAOwrG,EAAQjsG,MACzCisG,EAAQjsG,UAMnB,4BACE,4BACE,kBAAC,IAAD,cAEF,4BACE,kBAAC,IAAD,CAAQurE,QAzCtB,WACO19C,EAAMG,OAAO4c,WAAWqhE,IAC3Bp+E,EAAMG,OAAOyQ,kBAAkBlI,SAAS93B,KAAKwtG,KAuCnC,OACA,kBAAC,IAAD,CAAQ1gC,QApCtB,WACE,IAAK,MAAMttE,KAAK8qJ,IACTl7H,EAAMG,OAAO4c,WAAWm+G,IAAY9qJ,GAAG+B,OAC1C6tB,EAAMG,OAAOyQ,kBAAkBlI,SAAS93B,KAAKsqJ,IAAY9qJ,GAAG+B,QAiCpD,e,6BCjEhB,0JAeO,SAASgpJ,IACd,MAAOpxH,EAAQqxH,GAAajsF,mBAAS,QA6DrC,OACE,kBAAC,IAAD,CAAW2qF,gBAAiB,CAAE5qB,eAAe,IAC3C,kBAAC,IAAD,CAAkB6qB,WAAY,kBAAC,IAAD,OAC5B,wCAEF,kBAAC,IAAD,KACE,+BACE,+BACE,4BACE,4BACE,kBAAC,IAAD,iBAEF,wBAAIsB,QAAS,GACX,kBAAC,IAAD,CAAQz2E,GAAG,uBAAuBrH,SAzEhD,SAA2Bva,GACzBo4F,EAAUp4F,EAAM7I,OAAOvnD,QAwEoDA,MAAOm3B,GACnEx5B,OAAOm6C,OAAOjhB,KAAYuuC,IAAKjuC,GAC9B,kBAAC,IAAD,CAAU72B,IAAK62B,EAAOE,SAAUr3B,MAAOm3B,EAAOE,UAC3CF,EAAOE,cAMlB,4BACE,4BACE,kBAAC,IAAD,eAEF,4BACE,kBAAC,IAAD,CAAQyzC,QApFtB,WACE,MAAMhsE,EAAIojC,YAAoB/K,GACpB,OAANr4B,IACAA,aAAaomD,MACjBpmD,EAAE4gF,gBAAiB,EACnB5gF,EAAE0lH,aAAc,EAChB1lH,EAAE2lH,aAAc,EAChB3lH,EAAE4lH,cAAe,EACjB5lH,EAAE6lH,cAAe,EACjB7lH,EAAE8lH,aAAc,EAChB9lH,EAAEylH,cAAgB,MA0EN,aAEF,4BACE,kBAAC,IAAD,CAAQz5C,QA1EtB,WACE,IAAK,MAAMttE,KAAKq5B,IAAY,CAC1B,MAAM/3B,EAAI+3B,IAAWr5B,GACrB,GAAIsB,aAAaomD,IAAe,OAChCpmD,EAAE4gF,gBAAiB,EACnB5gF,EAAE0lH,aAAc,EAChB1lH,EAAE2lH,aAAc,EAChB3lH,EAAE4lH,cAAe,EACjB5lH,EAAE6lH,cAAe,EACjB7lH,EAAE8lH,aAAc,EAChB9lH,EAAEylH,cAAgB,KAgER,cAGJ,4BACE,4BACE,kBAAC,IAAD,mBAEF,4BACE,kBAAC,IAAD,CAAQz5C,QApEtB,WACE,MAAMhsE,EAAIojC,YAAoB/K,GACpB,OAANr4B,IACAA,aAAaomD,MACjBpmD,EAAEwjC,eAAiBxjC,EAAE0kD,kBAgET,YAEF,4BACE,kBAAC,IAAD,CAAQsnB,QAhEtB,WACE,IAAK,MAAMttE,KAAKq5B,IAAY,CAC1B,MAAMM,EAASN,IAAWr5B,GACtB25B,aAAkB+tB,MACtB/tB,EAAOmL,eAAiBnL,EAAOqsB,kBA4DrB,aAGJ,4BACE,4BACE,kBAAC,IAAD,gBAEF,4BACE,kBAAC,IAAD,CAAQsnB,QAhEtB,WACE,MAAMhsE,EAAIojC,YAAoB/K,GACpB,OAANr4B,IACAA,aAAaomD,MACjBpmD,EAAEgkC,eAAiBhkC,EAAEkkC,aA4DT,YAEF,4BACE,kBAAC,IAAD,CAAQ8nC,QA5DtB,WACE,IAAK,MAAMttE,KAAKq5B,IAAY,CAC1B,MAAMM,EAASN,IAAWr5B,GACtB25B,aAAkB+tB,MACtB/tB,EAAO2L,eAAiB3L,EAAO6L,aAwDrB,mB,6BCjIhB,mJAgBO,SAASkL,IACd,MAAOwB,EAASg5G,GAAcnsF,mBAAS,SAQvC,SAASosF,EAAiBrB,GACxB,OAAO,SAAU74G,GACf,MAAMpvC,EAAIupJ,IAAal5G,GACd,MAALrwC,GAAcgG,MAAMopC,KACtBpvC,EAAEkvC,kBAAoBE,EAAa64G,IAKzC,SAASuB,EAAmBvB,GAC1B,OAAO,SAAUt1H,GACf,MAAM3yB,EAAIupJ,IAAal5G,GACd,MAALrwC,GAAcgG,MAAM2sB,KACtB3yB,EAAE2yB,OAASA,EAAQs1H,IAiCzB,OACE,kBAAC,IAAD,CAAWJ,gBAAiB,CAAE5qB,eAAe,IAC3C,kBAAC,IAAD,CAAkB6qB,WAAY,kBAAC,IAAD,OAC5B,0CAEF,kBAAC,IAAD,KACE,+BACE,+BACE,4BACE,4BACE,kBAAC,IAAD,kBAEF,wBAAIsB,QAAS,GACX,kBAAC,IAAD,CAAQz2E,GAAG,yBAAyBrH,SAlElD,SAA4Bva,GAC1Bs4F,EAAWt4F,EAAM7I,OAAOvnD,QAiEsDA,MAAO0vC,GACtE/xC,OAAOm6C,OAAO8wG,KAAcxjF,IAAK11B,GAChC,kBAAC,IAAD,CAAUpvC,IAAKovC,EAAQnwC,KAAMS,MAAO0vC,EAAQnwC,MACzCmwC,EAAQnwC,UAMnB,4BACE,4BACE,kBAAC,IAAD,qBAEF,4BACE,kBAAC,IAAD,CACE+qE,MAAM,aACNC,YAAY,MACZG,KAAM,IAAMi+E,EAAiB,EAAjBA,CAvFZ,MAwFAn+E,IAAKm+E,EAAiB,GACtBl+E,SAAUk+E,GAAkB,GAC5BlgH,MAnFhB,WACEmgH,IAAal5G,GAASnB,iBAAmB,OAsFjC,4BACE,4BACE,kBAAC,IAAD,gBAEF,4BACE,kBAAC,IAAD,CACE+7B,MAAM,QACNC,YAAY,MACZG,KAAM,IAAMm+E,EAAmB,EAAnBA,CAAsB,KAClCr+E,IAAKq+E,EAAmB,GACxBp+E,SAAUo+E,GAAoB,GAC9BpgH,MA5EhB,WACEmgH,IAAal5G,GAAS1d,MAAQ,OA+EtB,4BACE,4BACE,kBAAC,IAAD,yBAEF,4BACE,kBAAC,IAAD,CAAQ84C,QAjFtB,WACE,IAAK,MAAMzrE,KAAKupJ,IACdA,IAAavpJ,GAAGkvC,iBAnCJ,OAkHF,QACA,kBAAC,IAAD,CAAQu8B,QA5EtB,WACE,IAAK,MAAMzrE,KAAKupJ,IACdA,IAAavpJ,GAAGkvC,iBAAmB,IA0EzB,WAGJ,4BACE,4BACE,kBAAC,IAAD,oBAEF,4BACE,kBAAC,IAAD,CAAQu8B,QA9EtB,WACE,IAAK,MAAMzrE,KAAKupJ,IACdA,IAAavpJ,GAAG2yB,MA/CJ,OA2HF,QACA,kBAAC,IAAD,CAAQ84C,QAzEtB,WACE,IAAK,MAAMzrE,KAAKupJ,IACdA,IAAavpJ,GAAG2yB,MAAQ,IAuEd,iB,6BC1IhB,kHAiBO,SAAS4rC,EAAYxwC,GAC1B,MAAMjI,EAAciI,EAAMG,OAAOpI,YACjC,GAAoB,OAAhBA,EAAsB,OAAO,qCACjC,SAAS2jI,EAAsBC,GAC7B,OAAO,SAAU1gE,GACVljE,GACLA,EAAYyiC,WAAWx6B,EAAMG,OAAQ86D,EAAO0gE,IAgBhD,SAASC,EAAwBD,GAC/B,OAAO,SAAU12B,GACVltG,IACLA,EAAYwtC,cAAgB0/D,EAAS02B,IAczC,OACE,kBAAC,IAAD,CAAW7B,gBAAiB,CAAE5qB,eAAe,IAC3C,kBAAC,IAAD,CAAkB6qB,WAAY,kBAAC,IAAD,OAC5B,4CAEF,kBAAC,IAAD,KACE,+BACE,+BACE,4BACE,4BACE,kBAAC,IAAD,eAEF,4BACE,kBAAC,IAAD,CACE78E,MAAM,OACNC,YAAY,MACZG,KAvChB,WACOvlD,GAELA,EAAYyiC,WAAWx6B,EAAMG,OAzBf,OA8DAi9C,IAAKs+E,EAAsB,GAC3Br+E,SAAUq+E,GAAuB,GACjCrgH,MAhDhB,WACOtjB,IACLA,EAAYkjE,KAAO,EACnBljE,EAAYwqE,QAAU,QAiDd,4BACE,4BACE,kBAAC,IAAD,iBAEF,4BACE,kBAAC,IAAD,CACErlB,MAAM,SACNC,YAAY,MACZG,KApChB,WACOvlD,IACLA,EAAYwtC,cA1CE,OA6EA6X,IAAKw+E,EAAwB,GAC7Bv+E,SAAUu+E,GAAyB,GACnCvgH,MA5ChB,WACOtjB,IACLA,EAAYwtC,aAAe,c,6BChD/B,kHAiBO,SAASsL,EAAK7wC,GAOnB,SAAS67H,EAAiBF,GACxB,OAAO,SAAU12B,GACXjlG,EAAMG,OAAOzJ,OACfsJ,EAAMG,OAAOzJ,KAAK6uC,cAAgB0/D,EAAS02B,IAWjD,OACE,kBAAC,IAAD,CAAW7B,gBAAiB,CAAE5qB,eAAe,IAC3C,kBAAC,IAAD,CAAkB6qB,WAAY,kBAAC,IAAD,OAC5B,qCAEF,kBAAC,IAAD,KACE,+BACE,+BACE,4BACE,4BACE,kBAAC,IAAD,iBAEF,4BACE,kBAAC,IAAD,CACE78E,MAAM,SACNC,YAAY,MACZG,KApChB,WACMt9C,EAAMG,OAAOzJ,OACfsJ,EAAMG,OAAOzJ,KAAK6uC,aATN,OA4CA6X,IAAKy+E,EAAiB,GACtBx+E,SAAUw+E,GAAkB,GAC5BxgH,MAzBhB,WACMrb,EAAMG,OAAOzJ,OACfsJ,EAAMG,OAAOzJ,KAAK6uC,aAAe,c,6BClCvC,0HAkBO,SAASjxD,EAAY0rB,GAmB1B,SAAS87H,EAAwBH,GAC/B,OAAO,SAAU12B,GACXjlG,EAAMG,OAAO9rB,cACf2rB,EAAMG,OAAO9rB,YAAYkxD,cAAgB0/D,EAAS02B,IA6BxD,OACE,kBAAC,IAAD,CAAW7B,gBAAiB,CAAE5qB,eAAe,IAC3C,kBAAC,IAAD,CAAkB6qB,WAAY,kBAAC,IAAD,OAC5B,4CAEF,kBAAC,IAAD,KACE,+BACE,+BACE,4BACE,4BACE,kBAAC,IAAD,CAAQr8E,QA5DtB,WACM19C,EAAMG,OAAO9rB,cACf2rB,EAAMG,OAAO9rB,YAAYE,MAAQyrB,EAAMG,OAAO9rB,YAAYE,MAAM8oC,KAAK,SA0D3D,iBACA,kBAAC,IAAD,CAAQqgC,QAvDtB,WACM19C,EAAMG,OAAO9rB,cACf2rB,EAAMG,OAAO9rB,YAAYE,MAAQyrB,EAAMG,OAAO9rB,YAAYE,MAAMipC,MAAMxd,EAAMG,OAAO9rB,YAAYE,UAqDrF,iBAGJ,4BACE,4BACE,kBAAC,IAAD,iBAEF,4BACE,kBAAC,IAAD,CACE2oE,MAAM,SACNC,YAAY,MACZG,KA5DhB,WACMt9C,EAAMG,OAAO9rB,cACf2rB,EAAMG,OAAO9rB,YAAYkxD,aArBb,OAgFA6X,IAAK0+E,EAAwB,GAC7Bz+E,SAAUy+E,GAAyB,GACnCzgH,MAjDhB,WACMrb,EAAMG,OAAO9rB,cACf2rB,EAAMG,OAAO9rB,YAAYkxD,aAAe,QAmDlC,4BACE,4BACE,kBAAC,IAAD,CAAQmY,QAjDtB,WACO19C,EAAMG,OAAO9rB,aAClB2rB,EAAMG,OAAO9rB,YAAYK,UAAUiiC,QAAS2hD,IAC1C/nF,OAAOizB,KAAK80D,EAAIp4B,UAAUvpB,QAASuyE,IACjC,MAAM1rD,EAAU86B,EAAIp4B,SAASgpD,GAC7B,QAAgBhpF,IAAZs9B,EAAuB,MAAM,IAAIp9B,MAAM,gCAC3Co9B,EAAQiwD,KAAO,WA2CP,qBAGJ,4BACE,4BACE,kBAAC,IAAD,CAAQ/vC,QA3CtB,WACO19C,EAAMG,OAAO9rB,aAClB2rB,EAAMG,OAAO9rB,YAAYK,UAAUiiC,QAAS2hD,IAC1CA,EAAIh+B,YAAYC,KAAO,SAwCb,4B,6BCzGhB,4IAaO,SAASwhG,IACd,MAAO9hI,EAAgB+hI,GAAqB7sF,mBAAS,6BAYrD,OACE,kBAAC,IAAD,CAAW2qF,gBAAiB,CAAE5qB,eAAe,IAC3C,kBAAC,IAAD,CAAkB6qB,WAAY,kBAAC,IAAD,OAC5B,iDAEF,kBAAC,IAAD,KACE,+BACE,+BACE,4BACE,4BACE,kBAAC,IAAD,CAAQr8E,QAAShjB,KAAjB,4BACA,kBAAC,IAAD,CAAQgjB,QAAS6pC,KAAjB,2CAGJ,4BACE,4BACE,kBAAC,IAAD,CAAQhqC,SA3BtB,SAAmCva,GACjCg5F,EAAkBh5F,EAAM7I,OAAOvnD,QA0B0BA,MAAOqnB,GACjD1pB,OAAOm6C,OAAOqgB,KAAqBiN,IAAKikF,GACvC,kBAAC,IAAD,CAAU/oJ,IAAK+oJ,EAAG9pJ,KAAMS,MAAOqpJ,EAAG9pJ,MAC/B8pJ,EAAG9pJ,QAIV,kBAAC,IAAD,CAAQurE,QA9BtB,WACE8pC,YAAiB,CACfT,YAAa9sF,EACb8P,OAAQ,WA2BE,yD,6BCjDhB,0JAeO,SAASs7B,IACd,MAAO62F,EAAYC,GAAiBhtF,mBAAS,IACtC3I,EAAa41F,GAAkBjtF,mBAAS,IAU/C,SAASktF,EAAct/E,GACrB,MAAMu/E,EAAe91F,EAAYzJ,QAAQ,MAAO,IAEhD,IAAI0Z,EAAqC,KAChC,EAGY,KAAjB6lF,GAAwC,QAAjBA,IACzB7lF,EAAQ,SAAUzQ,GAChB,OAAOs2F,EAAa34G,MAAM,KAAKxN,SAAS6vB,KAI5C,IAAK,MAAM7zD,KAAQoqJ,IACjB,GAAIA,IAAG9rJ,eAAe0B,GAAO,CAC3B,MAAMuzD,EAAQ62F,IAAGpqJ,GACbuzD,aAAiBG,KAAS4Q,EAAM/Q,EAAMM,SACxC+W,EAAIrX,IAsCZ,OACE,kBAAC,IAAD,CAAWo0F,gBAAiB,CAAE5qB,eAAe,IAC3C,kBAAC,IAAD,CAAkB6qB,WAAY,kBAAC,IAAD,OAC5B,6CAEF,kBAAC,IAAD,KACE,+BACE,+BACE,4BACE,4BACE,kBAAC,IAAD,iBAEF,4BACE,kBAAC,IAAD,CAAW58E,YAAY,eAAeI,SAxEpD,SAA6Bva,GAC3Bo5F,EAAep5F,EAAM7I,OAAOvnD,YA0EpB,4BACE,4BACE,kBAAC,IAAD,gBAEF,4BACE,kBAAC,IAAD,CAAWuqE,YAAY,MAAMI,SApF3C,SAA4Bva,GAC1Bm5F,EAAcnkJ,WAAWgrD,EAAM7I,OAAOvnD,WAoF1B,kBAAC,IAAD,CAAQ8qE,QAtDtB,WACOzlE,MAAMikJ,IACTG,EAAe32F,IACbA,EAAM5I,MAAQo/F,MAmDN,SAGJ,4BACE,4BACE,kBAAC,IAAD,eAEF,4BACE,kBAAC,IAAD,CAAQx+E,QAtDtB,WACE,MAAM8+E,EAAwB,GAC9BH,EAAe32F,IACb82F,EAAO5rJ,KACL,wBAAIsC,IAAKwyD,EAAMM,QACb,4BAAKN,EAAMM,QACX,wBAAI2X,MAAO,CAAE0qE,UAAW,UACtB,kBAAC,IAAD,CAAOl0I,MAAOuxD,EAAM+B,WAK5Bx+C,YACE,+BACE,+BACE,4BACE,qCACA,0CAEDuzI,OAmCK,2B,6BChHhB,iHAeO,SAAStrF,EAAQlxC,GAyBtB,OACE,kBAAC,IAAD,CAAW85H,gBAAiB,CAAE5qB,eAAe,IAC3C,kBAAC,IAAD,CAAkB6qB,WAAY,kBAAC,IAAD,OAC5B,wCAEF,kBAAC,IAAD,KACE,+BACE,+BACE,4BACE,4BACE,kBAAC,IAAD,gBAEF,4BACE,kBAAC,IAAD,CAAQr8E,QArCtB,WACE,IAAK,IAAIttE,EAAI,EAAGA,EAAI4vB,EAAMG,OAAOiZ,QAAQ9oC,SAAUF,EACjD4vB,EAAMG,OAAOiZ,QAAQhpC,GAAGkpC,MAAQ,IAmCtB,YAEF,4BACE,kBAAC,IAAD,CAAQokC,QAlCtB,WACE,IAAK,IAAIttE,EAAI,EAAGA,EAAI4vB,EAAMG,OAAOiZ,QAAQ9oC,SAAUF,EACjD4vB,EAAMG,OAAOiZ,QAAQhpC,GAAGkpC,MAAQ,MAgCtB,eAGJ,4BACE,4BACE,kBAAC,IAAD,eAEF,4BACE,kBAAC,IAAD,CAAQokC,QApCtB,WACE,IAAK,IAAIttE,EAAI,EAAGA,EAAI4vB,EAAMG,OAAOiZ,QAAQ9oC,SAAUF,EACjD4vB,EAAMG,OAAOiZ,QAAQhpC,GAAGwrC,KAAO,MAkCrB,YAEF,4BACE,kBAAC,IAAD,CAAQ8hC,QAjCtB,WACE,IAAK,IAAIttE,EAAI,EAAGA,EAAI4vB,EAAMG,OAAOiZ,QAAQ9oC,SAAUF,EACjD4vB,EAAMG,OAAOiZ,QAAQhpC,GAAGwrC,KAAO,IA+BrB,qB,6BCnEhB,mHAmBO,SAAS6gH,EAASz8H,GACvB,SAAS08H,EAASl8H,GAChB,MAAO,KACLR,EAAMG,OAAO4a,YAAcva,EAC3BR,EAAMgvC,OAAOo1E,aAAe5jH,EAC5BoxC,IAAWC,WACX0O,WAAW,IAAMhoC,SAASokH,SAAU,MAIxC,OACE,kBAAC,IAAD,CAAW7C,gBAAiB,CAAE5qB,eAAe,IAC3C,kBAAC,IAAD,CAAkB6qB,WAAY,kBAAC,IAAD,OAC5B,0CAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQr8E,QAASg/E,EAAS,MAA1B,YACA,kBAAC,IAAD,CAAQh/E,QAASg/E,EAAS,OAA1B,UACA,kBAAC,IAAD,CAAQh/E,QAASg/E,EAAS,QAA1B,a,6BCrCR,yGASO,SAASE,IACd,MAAMz8H,EAAS0F,IAAIjyB,SACbksC,EAASja,IAAID,SACb2pC,EAAcJ,oBAAS,GAAO,GACpC,SAASgB,IACPZ,EAAaa,IAASA,GAGxBC,oBAAU,KACR,MAAMuU,EAAKkR,YAAY3lB,EAAU,KACjC,MAAO,IAAM8lB,cAAcrR,IAC1B,IAEH,MAAM7sD,EAAcoI,EAAOpI,YAC3B,OAAoB,OAAhBA,EAA6B,qCAE/B,kBAAC,IAAD,CAAKmb,QAAQ,OAAO8+B,cAAc,UAChC,kBAAC,IAAD,CAAM2T,WAAS,GACb,kBAAC,IAAD,CAAMuQ,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CAAOp+D,YAAaA,EAAaoI,OAAQA,EAAQ2f,OAAQA,KAE3D,kBAAC,IAAD,CAAMo2C,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CAASp+D,YAAaA,EAAaoI,OAAQA,MAI/C,kBAAC,IAAD,CAAUpI,YAAaA,EAAaoI,OAAQA,O,6BCnClD,+JAyBO,SAASswC,EAAMzwC,GACpB,MAAO68H,EAAYC,GAAiB3tF,oBAAS,GACvCI,EAAcJ,oBAAS,GAAO,GAE9B4tF,EAAY/8H,EAAMjI,YAAYkjE,MAAQloC,IAAqBqB,qBAgBjE,OAfAic,oBAAU,KACR,MAAMuU,EAAKkR,YAAY,IAAMvmB,EAAaa,IAASA,GAAM,KACzD,MAAO,IAAM6lB,cAAcrR,IAC1B,IAaD,kBAAC,IAAD,CAAOjwC,GAAI,CAAEphC,EAAG,IACd,kBAAC,IAAD,CAAK2/B,QAAQ,QACX,kBAAC,IAAD,CAAS2kC,MAAO,kBAAC,IAAD,oDACd,kBAAC,IAAD,cAAmBt1C,YAAavC,EAAMjI,YAAYkjE,KAAM,MAG5D,6BACA,kBAAC,IAAD,CAAK/nD,QAAQ,QACX,kBAAC,IAAD,CACE2kC,MACE,kBAAC,IAAD,oDAEE,6BACA,6BAHF,iEAKE,6BACA,6BANF,kIASE,6BACA,6BAVF,gRAcE,6BACA,6BAfF,2HAqBF,kBAAC,IAAD,iBACYt1C,YAAavC,EAAMjI,YAAYuhE,QAAS,GADpD,MAC2D/2D,YAAavC,EAAMjI,YAAYwhE,WAAY,MAI1G,6BACA,kBAAC,IAAD,yBACoBh3D,YAAiE,KAAnD,EAAIvC,EAAMjI,YAAY0hE,2BAAkC,GAD1F,KAGA,6BACA,kBAAC,IAAD,mBAAwBl3D,YAAavC,EAAMjI,YAAY2mE,SAAU,IACjE,kBAAC,IAAD,2BAAgCn8D,YAAavC,EAAMjI,YAAYooE,SAAU,IACzE,6BACA,kBAAC,IAAD,gCAAqCngE,EAAMjI,YAAYgqE,SACvD,kBAAC,IAAD,0CACoC,kBAAC,IAAD,CAAO5tF,MAAO6rB,EAAMjI,YAAYiqE,aAEpE,6BACA,kBAAC,IAAD,sBAA2BhiE,EAAMjI,YAAYsgB,MAC7C,kBAAC,IAAD,CAAKnF,QAAQ,QACX,kBAAC,IAAD,CACE2kC,MACE,kBAAC,IAAD,uKAMF,kBAAC,IAAD,kCAC6BziE,IAAeoC,iBAAiBwoB,EAAMjI,YAAYyhE,iBAAiBgd,WAIpG,6BACA,kBAAC,IAAD,CAAKtjE,QAAQ,QACX,kBAAC,IAAD,CACE2kC,MACE,kBAAC,IAAD,kHAKF,kBAAC,IAAD,mCAC8Bt1C,YAAavC,EAAMjI,YAAYyhE,iBAAiBqE,MAAO,MAIzF,6BACA,kBAAC,IAAD,CAAK3qD,QAAQ,QACX,kBAAC,IAAD,CACE2kC,MACE,kBAAC,IAAD,uKAMF,kBAAC,IAAD,oBAAyBt1C,YAAavC,EAAMjI,YAAYyhE,iBAAiBwE,UAG7E,6BACEh+D,EAAMjI,YAAYwtC,aAAexS,IAAqBE,gBAAmB,IAAO,MAChF,oCACE,kBAAC,IAAD,CAAK/f,QAAQ,QACX,kBAAC,IAAD,CACE2kC,MACE,kBAAC,IAAD,2MAMF,kBAAC,IAAD,mBACc,IACXt3C,YACEP,EAAMjI,YAAYwtC,aAAexS,IAAqBE,gBAAmB,QAKlF,8BAGJ,kBAAC,IAAD,sBAA2B1wB,YAAavC,EAAMjI,YAAY0iC,YAAa,IACvE,6BACA,kBAAC,IAAD,CACEmd,KAAM,CACJ,CAAC,6BAA8Br1C,YAA4D,IAA/CvC,EAAMG,OAAOqI,gCAAuC,GAAK,KACrG,CAAC,0BAA2BjG,YAAyD,IAA5CvC,EAAMG,OAAOkI,6BAAoC,GAAK,KAC/F,CAAC,2BAA4B9F,YAA0D,IAA7CvC,EAAMG,OAAOmI,8BAAqC,GAAK,KACjG,CAAC,6BAA8B/F,YAAsD,IAAzCvC,EAAMG,OAAOoI,0BAAiC,GAAK,QAGnG,6BACA,kBAAC,IAAD,CAAQm1C,QAAS,IAAMo/E,GAAc,IAArC,UACA,kBAAC,IAAD,CAASjlF,MAAQklF,EAAyD,GAA7C,kBAAC,IAAD,2BAC3B,8BACE,kBAAC,IAAD,CAAQr+H,UAAWq+H,EAAWr/E,QA3ItC,WACE,IAAKq/E,EAAW,OAChB,MAAM74H,EAAUF,IAAQ,aACnBE,EAAQ6mB,UACX11B,YAAY6O,GAGdlE,EAAM8f,OAAO+tB,UAAU3pC,KAoIjB,aAKJ,kBAAC,IAAD,CAAaqQ,KAAMsoH,EAAYroH,QAAS,IAAMsoH,GAAc,GAAQ/kI,YAAaiI,EAAMjI,iB,6BCnL7F,sGAeO,SAASilI,EAAYh9H,GAC1B,SAASnF,EAAOwd,GACdrY,EAAMjI,YAAYsgB,KAAOA,EACzBrY,EAAMwU,UAGR,OACE,kBAAC,IAAD,CAAOD,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,oCACE,kBAAC,IAAD,uMAIC7V,IAASzC,gBACR3rB,OAAOm6C,OAAO/mB,KAAUq0C,IAAK3/B,GAC3B,kBAAC,IAAD,CAAQnlC,IAAKmlC,EAAMqlC,QAAS,IAAM7iD,EAAOwd,IACtCA,IAIL,kBAAC,IAAD,CAAUw3E,YAAa7vF,EAAMjI,YAAYsgB,KAAkBy3E,SAAWz3E,GAAmBxd,EAAOwd,S,6BCnC1G,wHAkBA,MAAM9Y,EAAYC,YAAYvC,GAC5BwC,YAAa,CACXu0H,UAAW,CACThnF,OAAQ/vC,EAAMgwC,QAAQ,GACtBt6B,MAAO,QAETgoD,MAAO,CACLrnD,gBAAiB,QAEnB2pH,UAAW,CACTppH,QAAS5W,EAAMgwC,QAAQ,IAEzBiwF,aAAc,CACZ1sD,WAAY,WACZxjC,OAAQ/vC,EAAMgwC,QAAQ,IAExBknC,KAAM,CACJtgE,QAAS5W,EAAMgwC,QAAQ,GACvBkF,OAAQ,WAKd,SAASgrF,EAAKn9H,GACZ,OACE,kBAAC,IAAD,CAAU2U,GAAI,CAAEphC,EAAG,IACjB,kBAAC,IAAD,KAAaysB,EAAMohB,UAUlB,SAASg8G,EAAQp9H,GACtB,MAAMC,EAAUV,IACV89H,EAAajuD,iBAAuB,OACnChS,EAASkgE,GAAcnuF,mBAAS,IACjCI,EAAcJ,oBAAS,GAAO,GAMpC,MAAOouF,EAAqBC,GAA0BruF,mBAASnvC,EAAMjI,YAAYwiE,eAAejqF,QAGhG,SAASmtJ,IACFJ,EAAW1tD,UAChB0tD,EAAW1tD,QAAQ+tD,UAAYL,EAAW1tD,QAAQguD,cAGpD,SAASxtF,IACPZ,EAAaa,IAASA,GAmExB,OAhEAC,oBAAU,KACR,MAAMuU,EAAKkR,YAAY3lB,EAAU,KAC3BytF,EAAM9nE,YAAY2nE,EAAgB,KACxC,MAAO,KACLxnE,cAAcrR,GACdqR,cAAc2nE,KAEf,IA0DD,kBAAC,IAAD,CAAKzrF,OAAQ,OAAQj/B,QAAS,OAAQC,WAAY,UAAWm9D,UAAW2+B,KACtE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMt6F,GAAI,CAAEw9B,OAAQ,OAAQn+B,SAAU,SACnChU,EAAMjI,YAAY8iE,YAAY7iB,IAAI,CAAC/0C,EAAU7yB,IAC5C,kBAAC+sJ,EAAD,CAAMjqJ,IAAK9C,EAAGgxC,QAASne,KAEzB,kBAAC,IAAD,CACEhD,QAAS,CAAEuS,KAAMvS,EAAQ+zH,WACzBlqB,WAAS,EACT9nB,SAAU,EACVt8D,KAAK,OACL9yC,MAAOwqF,EACP7f,SA7FV,SAA6Bva,GAC3Bs6F,EAAWt6F,EAAM7I,OAAOvnD,QA6FhByiF,UArEV,SAAuBryB,GACC,KAAlBA,EAAMwf,UACRxf,EAAM4sC,iBACFxS,EAAQ9sF,OAAS,IACnB0vB,EAAMjI,YAAY2iE,cAAc,KAAO0C,GACvCp9D,EAAMjI,YAAYsiE,uBAAuBr6D,EAAMG,OAAQi9D,GACvDogE,EAAuBx9H,EAAMjI,YAAYwiE,eAAejqF,QACxDgtJ,EAAW,MAIf,MAAM/iE,EAAiBv6D,EAAMjI,YAAYwiE,eAEzC,GAAsB,KAAlBv3B,EAAMwf,QAAgB,CAExB,IAAIpyE,EAAImtJ,EACR,MAAMhQ,EAAMhzD,EAAejqF,OAC3B,GAAY,IAARi9I,EACF,QAEEn9I,EAAI,GAAKA,EAAIm9I,IACfiQ,EAAuBjQ,GAGf,IAANn9I,IACFA,GAAQ,GAEVotJ,EAAuBptJ,GACvB,MAAMytJ,EAActjE,EAAenqF,GACnC4yD,EAAM86F,cAAclrJ,MAAQirJ,EAG9B,GAAsB,KAAlB76F,EAAMwf,QAAgB,CACxB,MAAMpyE,EAAImtJ,EACJhQ,EAAMhzD,EAAejqF,OAE3B,GAAW,GAAPi9I,EACF,OAOF,IALIn9I,EAAI,GAAKA,EAAIm9I,IACfiQ,EAAuBjQ,GAIrBn9I,GAAKm9I,GAAOn9I,GAAKm9I,EAAM,EACzBiQ,EAAuBjQ,GACvBvqF,EAAM86F,cAAclrJ,MAAQ,OACvB,CACL4qJ,EAAuBD,EAAsB,GAC7C,MAAMM,EAActjE,EAAegjE,EAAsB,GACzDv6F,EAAM86F,cAAclrJ,MAAQirJ,KAoBxBrgF,WAAY,CAEVl9C,UAAWL,EAAQ06D,MACnBld,eACE,oCACE,kBAAC,IAAD,YAGJsgF,YAAY,MAIlB,yBAAKtuD,IAAK4tD,Q,6BCvKlB,6HAmBO,SAASW,EAASh+H,GACvB,MAAOptB,EAAOqqE,GAAYv3C,IAAMypC,SAAS,GAMzC,OACE,oCACE,kBAAC,IAAD,CAAM0Q,QAAQ,YAAYjtE,MAAOA,EAAO2qE,SAN5C,SAAsBva,EAA6Bi7F,GACjDhhF,EAASghF,KAML,kBAAC,IAAD,CAAK/gF,MAAM,YACX,kBAAC,IAAD,CAAKA,MAAM,cACX,kBAAC,IAAD,CAAKA,MAAM,eACX,kBAAC,IAAD,CAAKA,MAAM,aACX,kBAAC,IAAD,CAAKA,MAAM,YAEb,kBAAC,IAAD,CAAKvoC,GAAI,CAAEphC,EAAG,IACD,IAAVX,GAAe,kBAAC,IAAD,CAAmBmlB,YAAaiI,EAAMjI,YAAaoI,OAAQH,EAAMG,SACtE,IAAVvtB,GAAe,kBAAC,IAAD,CAAcmlB,YAAaiI,EAAMjI,YAAaoI,OAAQH,EAAMG,SACjE,IAAVvtB,GAAe,kBAAC,IAAD,CAAemlB,YAAaiI,EAAMjI,YAAaoI,OAAQH,EAAMG,SAClE,IAAVvtB,GAAe,kBAAC,IAAD,CAAamlB,YAAaiI,EAAMjI,YAAaoI,OAAQH,EAAMG,SAChE,IAAVvtB,GAAe,kBAAC,IAAD,CAAWmlB,YAAaiI,EAAMjI,kB,6BCxCtD,6DAWO,SAASmmI,EAAkBl+H,GAChC,OACE,gCACE,gBAAC,IAAD,mFACA,gBAAC,IAAD,CAAmBjI,YAAaiI,EAAMjI,YAAaoI,OAAQH,EAAMG,Y,6BCfvE,wEAYO,SAASg+H,EAAkBn+H,GAChC,MAAMo+H,EAAoB,GAC1B,IAAK,MAAMjsJ,KAAQspF,IACbA,IAAehrF,eAAe0B,IAChCisJ,EAAQxtJ,KAAK6qF,IAAetpF,IAGhC,OACE,oCACGisJ,EAAQpmF,IAAKn4C,GACZ,kBAAC,IAAD,CAAmB3sB,IAAK2sB,EAAO1tB,KAAM4lB,YAAaiI,EAAMjI,YAAa8H,OAAQA,EAAQM,OAAQH,EAAMG,a,6BCtB3G,iIAsBO,SAASk+H,EAAkBr+H,GAChC,MAAMuvC,EAAcJ,oBAAS,GAAO,GAIpC,MAAMqgE,EAAWxvG,EAAMH,OAAO1tB,OAAS6tB,EAAMjI,YAAY8H,OAAO1tB,KAC1DmsJ,EAA4BxoJ,KAAK+tB,IACrC7D,EAAMjI,YAAY4hE,kBAAoB35D,EAAMjI,YAAY8qE,mBACxD7iE,EAAMjI,YAAY6hE,sBAEdyF,EAAc,WAClB,OAAQr/D,EAAMH,OAAO1tB,MACnB,IAAK,WACL,IAAK,iBACH,OAAO,GACT,IAAK,YACL,IAAK,kCACH,OAAO,GACT,IAAK,cACH,OAAO6tB,EAAMjI,YAAYkiE,mBAAmBj6D,EAAMG,QAEtD,OAAQ,EAXU,GAadmiE,EACkB,gBAAtBtiE,EAAMH,OAAO1tB,KACT2D,KAAKqC,IAAI,EAAGrC,KAAK+tB,IAAI7D,EAAMjI,YAAY0mE,4BAA4Bz+D,EAAMG,QAAS,KACjF,EAEDo+H,EAAa9iE,IAAez7D,EAAMH,OAAO1tB,MAC/C,QAAmB+tB,IAAfq+H,EACF,MAAM,IAAIn+H,MAAO,wBAAuBJ,EAAMH,OAAO1tB,MAGvD,OACE,kBAAC,IAAD,CAAOwiC,GAAI,CAAE41E,GAAI,EAAGh3G,EAAG,IACpBi8H,EACC,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAc58H,MAAOotB,EAAMH,OAAO1tB,OADpC,mBAC6DowB,YAAa+7H,EAA2B,GADrG,KAC2G,IACxG/7H,YAAavC,EAAMjI,YAAY6hE,qBAAsB,GAFxD,KAIA,kBAAC,IAAD,KACGrH,YAAsB,CACrBE,SAAU6rE,EAA4Bt+H,EAAMjI,YAAY6hE,yBAK9D,kBAAC,IAAD,CAAK1mD,QAAQ,OAAO8+B,cAAc,MAAM7+B,WAAW,UACjD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcvgC,MAAOotB,EAAMH,OAAO1tB,QAEpC,kBAAC,IAAD,CACE4lB,YAAaiI,EAAMjI,YACnB2tB,KAAM/X,IAAY3N,EAAMH,OAAO1tB,MAC/BA,KAAM6tB,EAAMH,OAAO1tB,KACnBg+D,SAtDV,WACEZ,EAAaa,IAASA,OAyDpB,6BACA,6BACA,kBAAC,IAAD,KAAamuF,EAAWx1H,MACxB,6BACA,6BACA,kBAAC,IAAD,uBACkBxI,YAA8C,IAAb8+D,IAC7B,IAAnBiD,GACC,oCACE,6BADF,6BAE6B//D,YAA6B,IAAhB+/D,EAAqB,GAF/D,S,6BC1FV,sDAMO,MAAM7G,EAET,CACFxtD,SAAU,CACRlF,KACE,4MAOJ,iBAAkB,CAChBA,KACE,kRAIE,6BACA,6BALF,8BAWJmF,YAAa,CACXnF,KACE,2IAEE,6BACA,6BAHF,8BASJqF,UAAW,CACTrF,KACE,0KAGE,6BACA,6BAJF,8BAUJ,kCAAmC,CACjCA,KACE,kMAGE,6BACA,iC,6BC5DR,6DAWO,SAASy1H,EAAax+H,GAC3B,OACE,gCACE,gBAAC,IAAD,sKAGE,2BACA,2BAJF,iKAQA,gBAAC,IAAD,CAAcjI,YAAaiI,EAAMjI,YAAaoI,OAAQH,EAAMG,Y,6BCtBlE,+DAUO,SAASs+H,EAAaz+H,GAC3B,MAAMqxE,EAAQ9gG,OAAOizB,KAAKxD,EAAMjI,YAAYihE,WACtCA,EAAYh5D,EAAMjI,YAAYihE,UACpC,OACE,oCACGqY,EAAMr5B,IAAK7lE,GACV,kBAAC,IAAD,CAAce,IAAKf,EAAM4lB,YAAaiI,EAAMjI,YAAa8H,OAAQm5D,EAAU7mF,GAAOguB,OAAQH,EAAMG,a,6BChBxG,oJAuBO,SAASu+H,EAAa1+H,GAC3B,MAAMuvC,EAAcJ,oBAAS,GAAO,GACpC,SAASgB,IACPZ,EAAaa,IAASA,GAExB,MAAMo/D,EACJxvG,EAAMjI,YAAY8H,OAAO6lB,OAAS/X,IAAW,UAAgB3N,EAAMH,OAAO1tB,OAAS6tB,EAAMjI,YAAY8H,OAAO1tB,KACxGmsJ,EAA4BxoJ,KAAK+tB,IACrC7D,EAAMjI,YAAY4hE,kBAAoB35D,EAAMjI,YAAY8qE,mBACxD7iE,EAAMjI,YAAY6hE,sBAEdyF,EAAar/D,EAAMH,OAAOpH,cAAcuH,EAAMjI,aAE9CwmI,EAAaI,IAAU3+H,EAAMH,OAAO1tB,MAC1C,QAAmB+tB,IAAfq+H,EACF,MAAM,IAAIn+H,MAAO,wBAAuBJ,EAAMH,OAAO1tB,MAGvD,OACE,kBAAC,IAAD,CAAOwiC,GAAI,CAAE41E,GAAI,EAAGh3G,EAAG,IACpBi8H,EACC,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAc58H,MAAOotB,EAAMH,OAAO1tB,OADpC,mBAC6DowB,YAAa+7H,EAA2B,GADrG,KAC2G,IACxG/7H,YAAavC,EAAMjI,YAAY6hE,qBAAsB,GAFxD,KAIA,kBAAC,IAAD,KACGrH,YAAsB,CACrBE,SAAU6rE,EAA4Bt+H,EAAMjI,YAAY6hE,yBAK9D,oCACE,kBAAC,IAAD,CAAchnF,MAAOotB,EAAMH,OAAO1tB,OAClC,kBAAC,IAAD,CACE4lB,YAAaiI,EAAMjI,YACnB2tB,KAAM/X,IAAYE,SAClB17B,KAAM6tB,EAAMH,OAAO1tB,KACnBg+D,SAAUA,KAIhB,6BACA,6BACA,kBAAC,IAAD,CAAatwC,OAAQG,EAAMH,OAAQ9H,YAAaiI,EAAMjI,YAAay3G,SAAUA,EAAUr/D,SAAUA,IACjG,6BACA,6BACA,kBAAC,IAAD,KACGouF,EAAWx1H,KACZ,6BACA,6BACA,kBAAC,IAAD,CAAelJ,OAAQG,EAAMH,OAAQ9H,YAAaiI,EAAMjI,cACxD,6BALF,kBAMkBwI,YAA8C,IAAb8+D,GACjD,6BAPF,wBAQwBvpF,KAAK4qB,MAAMV,EAAMH,OAAOw4C,OAC9C,6BATF,cAUcr4C,EAAMH,OAAOwhE,UACzB,6BAXF,aAYarhE,EAAMH,OAAO2hE,UAE1B,6BACA,kBAAC,IAAD,CAAWrxB,SAAUA,EAAUtwC,OAAQG,EAAMH,Y,6BCtFnD,sDAMO,MAAM8+H,EAET,CACFnY,SAAU,CACRz9G,KACE,+LAGE,6BACA,6BAJF,+IAUJ,gBAAiB,CACfA,KACE,kHAEE,6BACA,6BAHF,6IASJ09G,WAAY,CACV19G,KACE,mFAEE,6BACA,6BAHF,4I,6BClCN,8EAMO,SAAS61H,IACd,OAAO,kBAAC,IAAD,CAAS/mF,MAAO,kBAAC,IAAD,sCAAwDs3D,O,6BCPjF,8EAMO,SAAS0vB,IACd,OAAO,kBAAC,IAAD,CAAShnF,MAAO,kBAAC,IAAD,yCAA2Dy3D,O,+BCPpF,6DAWO,SAASwvB,EAAc9+H,GAC5B,OACE,gCACE,gBAAC,IAAD,0RAIE,2BACA,2BALF,2IAQE,2BACA,2BATF,uIAYE,2BACA,2BAbF,2JAiBA,gBAAC,IAAD,CAAejI,YAAaiI,EAAMjI,YAAaoI,OAAQH,EAAMG,Y,6BC/BnE,+DAUO,SAAS4+H,EAAc/+H,GAC5B,MAAMqxE,EAAQ9gG,OAAOizB,KAAKxD,EAAMjI,YAAYujE,YACtCA,EAAat7D,EAAMjI,YAAYujE,WACrC,OACE,oCACG+V,EAAMr5B,IAAK7lE,GACV,kBAAC,IAAD,CAAee,IAAKf,EAAM4lB,YAAaiI,EAAMjI,YAAa8H,OAAQy7D,EAAWnpF,GAAOguB,OAAQH,EAAMG,a,6BChB1G,6JAwBO,SAAS6+H,EAAch/H,GAC5B,MAAMuvC,EAAcJ,oBAAS,GAAO,GACpC,SAASgB,IACPZ,EAAaa,IAASA,GAExB,MAAMo/D,EACJxvG,EAAMjI,YAAY8H,OAAO6lB,OAAS/X,IAAW,WAAiB3N,EAAMH,OAAO1tB,OAAS6tB,EAAMjI,YAAY8H,OAAO1tB,KACzGmsJ,EAA4BxoJ,KAAK+tB,IACrC7D,EAAMjI,YAAY4hE,kBAAoB35D,EAAMjI,YAAY8qE,mBACxD7iE,EAAMjI,YAAY6hE,sBAEdyF,EAAar/D,EAAMH,OAAOpH,cAAcuH,EAAMjI,aAE9CwmI,EAAartG,IAAWlxB,EAAMH,OAAO1tB,MAC3C,QAAmB+tB,IAAfq+H,EACF,MAAM,IAAIn+H,MAAO,wBAAuBJ,EAAMH,OAAO1tB,MAGvD,OACE,kBAAC,IAAD,CAAOwiC,GAAI,CAAE41E,GAAI,EAAGh3G,EAAG,IACpBi8H,EACC,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAc58H,MAAOotB,EAAMH,OAAO1tB,OADpC,mBAC6DowB,YAAa+7H,EAA2B,GADrG,KAC2G,IACxG/7H,YAAavC,EAAMjI,YAAY6hE,qBAAsB,GAFxD,KAIA,kBAAC,IAAD,KACGrH,YAAsB,CACrBE,SAAU6rE,EAA4Bt+H,EAAMjI,YAAY6hE,yBAK9D,oCACE,kBAAC,IAAD,CAAchnF,MAAOotB,EAAMH,OAAO1tB,OAClC,kBAAC,IAAD,CACE4lB,YAAaiI,EAAMjI,YACnB2tB,KAAM/X,IAAYG,UAClB37B,KAAM6tB,EAAMH,OAAO1tB,KACnBg+D,SAAUA,IAEZ,kBAAC,IAAD,CAAgBtwC,OAAQG,EAAMH,OAAQ9H,YAAaiI,EAAMjI,eAG7D,6BACA,6BAEA,kBAAC,IAAD,CAAa8H,OAAQG,EAAMH,OAAQ9H,YAAaiI,EAAMjI,YAAay3G,SAAUA,EAAUr/D,SAAUA,IACjG,6BACA,6BACA,kBAAC,IAAD,KACGouF,EAAWx1H,KACZ,6BACA,6BACA,kBAAC,IAAD,CAAelJ,OAAQG,EAAMH,OAAQ9H,YAAaiI,EAAMjI,cACxD,6BALF,kBAMkBwI,YAA8C,IAAb8+D,GACjD,6BAPF,yBAQyBvpF,KAAK4qB,MAAMV,EAAMH,OAAOw4C,OAC/C,6BATF,cAUcr4C,EAAMH,OAAOwhE,UACzB,6BAXF,aAYarhE,EAAMH,OAAO2hE,UAE1B,6BACA,kBAAC,IAAD,CAAWrxB,SAAUA,EAAUtwC,OAAQG,EAAMH,Y,6BCzFnD,6FAgBO,SAASo/H,EAAcj/H,GAC5B,MAAO0+D,EAAUllE,GAAe21C,qBAmBhC,OACE,kBAAC,IAAD,CAAO56B,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,kOAIA,kBAAC,IAAD,CAAWs1F,WAAS,EAACpkF,KAAK,SAASy3B,YAAY,YAAYvqE,MAAO8rF,EAAUnhB,SAZhF,SAAoBva,GAClB,MAAMn6B,EAAI7wB,WAAWgrD,EAAM7I,OAAOvnD,OAC9Bi2B,EAAI7I,EAAMjI,YAAY2mE,SAAUllE,EAAYwG,EAAMjI,YAAY2mE,UAC7DllE,EAAYqP,MAUf,kBAAC,IAAD,CAAQ8L,GAAI,CAAEkxE,GAAI,GAAKnoC,QAxB3B,WACE,QAAiBx9C,IAAbw+D,EAAwB,OAC5B,MAAMl8D,EAAM1sB,KAAK+mC,MAAM6hD,GACnBzmF,MAAMuqB,IAAQA,EAAM,EACtBvZ,YAAgB,gFAEhB+W,EAAMH,OAAOogE,UAAYz9D,EAE3BxC,EAAMwU,YAgBJ,c,6BC3CN,sDAMO,MAAM0c,EAET,CACFw1F,cAAe,CACb39G,KACE,kIAEE,6BACA,6BAHF,iFAKE,6BACA,6BANF,wDAWJ,uBAAwB,CACtBA,KACE,+IAEE,6BACA,6BAHF,gFAQJ,kBAAmB,CACjBA,KAAM,iIAER49G,KAAM,CACJ59G,KACE,iNAMJ,+BAAgC,CAC9BA,KACE,0LAMJ85B,cAAe,CACb95B,KACE,+K,6BCrDN,6DAWO,SAASm2H,EAAYl/H,GAC1B,OACE,gCACE,gBAAC,IAAD,0JAGE,2BACA,2BACA,+HACA,2BACA,2BAPF,qHAWA,gBAAC,IAAD,CAAajI,YAAaiI,EAAMjI,YAAaoI,OAAQH,EAAMG,Y,6BCzBjE,wEAYO,SAASg/H,EAAYn/H,GAC1B,IAAIk5D,EAA6B,GACjC,IAAK,MAAMkmE,KAAe7jE,IACpBA,IAAgB9qF,eAAe2uJ,IACjClmE,EAAStoF,KAAK2qF,IAAgB6jE,IAkBlC,OAfAlmE,EAASv3D,MAAK,SAAUI,EAAGE,GACzB,OAAOF,EAAEuhE,SAAWrhE,EAAEqhE,YAGxBpK,EAAWA,EAASjpC,OAClB,CAACovG,EAAyBjvJ,MAE0B,MAAhD4vB,EAAMjI,YAAYmhE,SAASA,EAAS9oF,GAAG+B,OACjC,IAAN/B,GACoD,MAApD4vB,EAAMjI,YAAYmhE,SAASA,EAAS9oF,EAAI,GAAG+B,QAIjD+mF,EAAWA,EAAS4+C,UAGlB,oCACG5+C,EAASlhB,IAAKqnF,GACb,kBAAC,IAAD,CAAansJ,IAAKmsJ,EAAQltJ,KAAM4lB,YAAaiI,EAAMjI,YAAa8H,OAAQw/H,EAASl/H,OAAQH,EAAMG,a,6BCrCvG,2IAsBO,SAASm/H,EAAYt/H,GAC1B,MAAMuvC,EAAcJ,oBAAS,GAAO,GAKpC,GADqE,MAAjDnvC,EAAMjI,YAAYmhE,SAASl5D,EAAMH,OAAO1tB,MAE1D,OAAO,wBAAIwrE,MAAO,CAAEzqC,QAAS,UAAYlT,EAAMH,OAAO1tB,KAA/C,gBAGT,MAAMq9H,EACJxvG,EAAMjI,YAAY8H,OAAO6lB,OAAS/X,IAAW,gBAC7C3N,EAAMH,OAAO1tB,OAAS6tB,EAAMjI,YAAY8H,OAAO1tB,KAC3CktF,EAAar/D,EAAMH,OAAOpH,cAAcuH,EAAMjI,aAC9CwnI,EAAcv/H,EAAMjI,YAAYkjE,MAAQj7D,EAAMH,OAAOyjE,SACrDg7D,EAA4BxoJ,KAAK+tB,IACrC7D,EAAMjI,YAAY4hE,kBAAoB35D,EAAMjI,YAAY8qE,mBACxD7iE,EAAMjI,YAAY6hE,sBAGd2kE,EAAahjE,IAAgBv7D,EAAMH,OAAO1tB,MAChD,QAAmB+tB,IAAfq+H,EACF,MAAM,IAAIn+H,MAAO,wBAAuBJ,EAAMH,OAAO1tB,MAGvD,OACE,kBAAC,IAAD,CAAOwiC,GAAI,CAAE41E,GAAI,EAAGh3G,EAAG,IACrB,kBAAC,IAAD,KACGi8H,EACC,oCACE,oCACE,kBAAC,IAAD,CAAc58H,MAAOotB,EAAMH,OAAO1tB,OADpC,mBAC6DowB,YAAa+7H,EAA2B,GADrG,KAC2G,IACxG/7H,YAAavC,EAAMjI,YAAY6hE,qBAAsB,GAFxD,IAGE,uBAAGjc,MAAO,CAAEzqC,QAAS,UAClBq/C,YAAsB,CACrBE,SAAU6rE,EAA4Bt+H,EAAMjI,YAAY6hE,0BAMhE,oCACE,kBAAC,IAAD,CAAchnF,MAAOotB,EAAMH,OAAO1tB,OAElC,kBAAC,IAAD,CACE4lB,YAAaiI,EAAMjI,YACnB2tB,KAAM/X,IAAYK,eAClB77B,KAAM6tB,EAAMH,OAAO1tB,KACnBg+D,SA9CZ,WACEZ,EAAaa,IAASA,MA+Cd,kBAAC,IAAD,CAAgBvwC,OAAQG,EAAMH,OAAQ9H,YAAaiI,EAAMjI,gBAI/D,6BACA,6BACA,kBAAC,IAAD,KAAawmI,EAAWx1H,MACxB,6BACA,6BACA,kBAAC,IAAD,CAAYpJ,MAAO4/H,EAAc,UAAY,SAA7C,kBACkBh9H,YAAavC,EAAMH,OAAOyjE,SAAU,IAEtD,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAezjE,OAAQG,EAAMH,OAAQ9H,YAAaiI,EAAMjI,cACxD,6BAFF,kBAGkBwI,YAA8C,IAAb8+D,O,6BCxFzD,sDAMO,MAAM9D,EAET,CACF,oBAAqB,CACnBxyD,KACE,8MAGE,6BACA,6BAJF,8LAWJ,iBAAkB,CAChBA,KACE,mMAGE,6BACA,6BAJF,2VAYJ,cAAe,CACbA,KACE,uYAKE,6BACA,6BANF,mSAaJ,kBAAmB,CACjBA,KACE,qXAKE,6BACA,6BANF,gQAaJ,iBAAkB,CAChBA,KACE,kVAIE,6BACA,6BALF,4DAUJ,sBAAuB,CACrBA,KACE,sRAIE,6BACA,6BALF,8LAWJ,uBAAwB,CACtBA,KACE,ueAME,6BACA,6BAPF,+DAYJ,uBAAwB,CACtBA,KACE,iSAIE,6BACA,6BALF,mLAWJ,cAAe,CACbA,KACE,4eAME,6BACA,6BAPF,6OAcJ,oBAAqB,CACnBA,KACE,uYAKE,6BACA,6BANF,0IAYJ,mBAAoB,CAClBA,KACE,kVAIE,6BACA,6BALF,2KAWJ,oBAAqB,CACnBA,KACE,iiBAME,6BACA,6BAPF,uMAaJ,8BAA+B,CAC7BA,KACE,8NAGE,6BACA,6BAJF,2UAWJ,kBAAmB,CACjBA,KACE,scAKE,6BACA,6BANF,8FAQE,6BACA,6BATF,wOAgBJ,qBAAsB,CACpBA,KACE,+bAKE,6BACA,6BANF,4GAWJ,sBAAuB,CACrBA,KACE,kUAIE,6BACA,6BALF,6GAUJ,sBAAuB,CACrBA,KACE,wWAOJ,mBAAoB,CAClBA,KACE,8XAKE,6BACA,6BANF,0OAUE,6BACA,6BAXF,yNAcE,6BACA,6BAfF,6CAoBJ,sBAAuB,CACrBA,KACE,oCACG,6DACD,6BACA,6BAHF,6OAOE,6BACA,6BARF,8DAUE,6BACA,6BACC,+DAIP,sBAAuB,CACrBA,KACE,oCACG,6DACD,6BACA,6BAHF,sHAME,6BACA,6BACC,+DAIP,qBAAsB,CACpBA,KAAM,kI,6BCxSV,6FAWO,SAASy2H,EAAUx/H,GACxB,MAAMuvC,EAAcJ,oBAAS,GAAO,GAC9BxoC,EAAQ3G,EAAMjI,YAAY+jE,iBAEhC,SAAS2jE,EAAMljH,GACb,OAAOA,GAAiB,IAATA,EAGjB,OACE,oCACE,kBAAC,IAAD,KACE,iDAAuBha,YAAavC,EAAMjI,YAAY0iC,YAAa,KAErE,kBAAC,IAAD,2CACsC,IACnC1H,IAAqBwB,mBAAqB/tC,IAAmBqC,qBAFhE,UAGE,6BACA,6BAJF,wJAOE,8BAEF,6BACC42I,EAAM94H,EAAK,mBACV,kBAAC,IAAD,+BAAoCpE,YAAaoE,EAAK,iBAAsB,IAE7E84H,EAAM94H,EAAK,uBACV,kBAAC,IAAD,iCAAsCpE,YAAaoE,EAAK,qBAA0B,IAEnF84H,EAAM94H,EAAK,oBACV,kBAAC,IAAD,oCAAyCpE,YAAaoE,EAAK,kBAAuB,IAEnF84H,EAAM94H,EAAK,wBACV,kBAAC,IAAD,kCAAuCpE,YAAaoE,EAAK,sBAA2B,IAErF84H,EAAM94H,EAAK,yBACV,kBAAC,IAAD,mCAAwCpE,YAAaoE,EAAK,uBAA4B,IAEvF84H,EAAM94H,EAAK,wBACV,kBAAC,IAAD,iCAAsCpE,YAAaoE,EAAK,sBAA2B,IAEpF84H,EAAM94H,EAAK,aAAmB,kBAAC,IAAD,sBAA2BpE,YAAaoE,EAAK,WAAgB,IAC3F84H,EAAM94H,EAAK,UAAgB,kBAAC,IAAD,wBAA6BpE,YAAaoE,EAAK,QAAa,IACvF84H,EAAM94H,EAAK,SAAe,kBAAC,IAAD,mBAAwBpE,YAAaoE,EAAK,OAAY,IAChF84H,EAAM94H,EAAK,SAAe,kBAAC,IAAD,kBAAuBpE,YAAaoE,EAAK,OAAY,IAC/E84H,EAAM94H,EAAK,SAAe,kBAAC,IAAD,oBAAyBpE,YAAaoE,EAAK,OAAY,IACjF84H,EAAM94H,EAAK,SAAe,kBAAC,IAAD,kBAAuBpE,YAAaoE,EAAK,OAAY,IAC/E84H,EAAM94H,EAAK,SAAe,kBAAC,IAAD,mBAAwBpE,YAAaoE,EAAK,OAAY,IAChF84H,EAAM94H,EAAK,SAAe,kBAAC,IAAD,uBAA4BpE,YAAaoE,EAAK,OAAY,IACpF84H,EAAM94H,EAAK,UAAgB,kBAAC,IAAD,kBAAuBpE,YAAaoE,EAAK,QAAa,IACjF84H,EAAM94H,EAAK,QAAc,kBAAC,IAAD,yBAA8BpE,YAAaoE,EAAK,MAAW,IACpF84H,EAAM94H,EAAK,UAAgB,kBAAC,IAAD,mBAAwBpE,YAAaoE,EAAK,QAAa,IACnF,6BACA,kBAAC,IAAD,CAAW5O,YAAaiI,EAAMjI,YAAa2nI,UAAW,IAAMnwF,EAAaa,IAASA,Q,6BChExF,+DAUO,SAASuvF,EAAU3/H,GACxB,OACE,gCACGzvB,OAAOizB,KAAKo4D,KAAQ5jB,IAAKkiB,GACxB,gBAAC,IAAD,CAAWhnF,IAAKgnF,EAAOniE,YAAaiI,EAAMjI,YAAamiE,MAAO0B,IAAO1B,GAAQwlE,UAAW1/H,EAAM0/H,gB,6BCdtG,2IAkBO,SAASE,EAAU5/H,GACxB,MAAMm6D,EAAYn6D,EAAMk6D,MAAM/nF,KAC9B,IAAI6pF,EAAe,EACfh8D,EAAMjI,YAAYqiE,OAAOD,KAAeliF,MAAM+nB,EAAMjI,YAAYqiE,OAAOD,MACzE6B,EAAeh8D,EAAMjI,YAAYqiE,OAAOD,IAE1C,MAAM8B,EAAYj8D,EAAMk6D,MAAMgC,cAAcF,GAEtC6jE,EAAW7/H,EAAMjI,YAAY0iC,aAAewhC,EAC5C+I,IAAShlE,EAAMk6D,MAAM8K,QAAShJ,GAAgBh8D,EAAMk6D,MAAM8K,OAShE,OACE,kBAAC,IAAD,CAAOrwD,GAAI,CAAE41E,GAAI,EAAGh3G,EAAG,IACrB,kBAAC,IAAD,CAAK2/B,QAAQ,OAAO8+B,cAAc,MAAM7+B,WAAW,UACjD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcvgC,MAAOotB,EAAMk6D,MAAM/nF,SAEjC0tJ,GAAY76D,EACZ,kBAAC,IAAD,CAAYtmE,UAAQ,GAClB,kBAAC,IAAD,OAGF,kBAAC,IAAD,CAAYg/C,QAlBpB,WACM19C,EAAMjI,YAAY0iC,YAAcwhC,IACpCj8D,EAAMjI,YAAY0iC,aAAewhC,EACjCj8D,EAAMjI,YAAYuB,aAAa0G,EAAMk6D,OACrCl6D,EAAM0/H,eAeE,kBAAC,IAAD,QAIN,6BACA,6BACA,kBAAC,IAAD,eAAoB1jE,GACnBgJ,EACC,kBAAC,IAAD,kBAEA,kBAAC,IAAD,+BAAoCziE,YAAa05D,EAAW,IAE9D,kBAAC,IAAD,KAAaj8D,EAAMk6D,MAAMnxD,S,gCC5D/B,wFASO,SAAS+2H,IACd,MAAM3/H,EAAS0F,IAAIjyB,SACbksC,EAASja,IAAID,SACblP,EAAQ,WACZ,GAAoB,OAAhByJ,EAAOzJ,KAAe,MAAM,IAAI0J,MAAM,2BAC1C,OAAOD,EAAOzJ,KAFF,IAIPqpI,EAAYC,GAAiB7wF,oBAAS,GACvCI,EAAcJ,oBAAS,GAAO,GAWpC,OATAkB,oBAAU,KACR,MAAMuU,EAAKkR,YAAY,IAAMvmB,EAAaa,IAASA,GAAM,KACzD,MAAO,IAAM6lB,cAAcrR,IAC1B,IAOD,yBAAKtkD,UAAU,kBACb,uBAAGA,UAAU,gBAAgBq9C,MAAO,CAAEzqC,QAAS,gBAAkBwqC,QANrE,WACE59B,EAAO+tB,UAAU7pC,IAAStN,EAAKy5B,YAK7B,QAGA,uBACE7vB,UAAWy/H,EAAa,yBAA2B,gBACnDpiF,MAAO,CAAEzqC,QAAS,gBAClBwqC,QAAS,IAAMsiF,GAAc,IAH/B,mBAOA,uBACE1/H,UAAYy/H,EAAwC,gBAA3B,yBACzBpiF,MAAO,CAAEzqC,QAAS,gBAClBwqC,QAAS,IAAMsiF,GAAc,IAH/B,kBAOCD,EAAa,kBAAC,IAAD,CAAmBrpI,KAAMA,EAAMyJ,OAAQA,IAAa,kBAAC,IAAD,CAAkBzJ,KAAMA,O,6BC/ChG,wEAcO,SAASupI,EAAkBjgI,GAChC,OACE,yBAAK29C,MAAO,CAAEzqC,QAAS,UACrB,uBAAG5S,UAAU,WAAWq9C,MAAO,CAAEhrC,MAAO,QAAxC,0FAEE,6BACA,6BAHF,gaAQG3S,EAAMtJ,KAAKgmG,cAAgB,kBAAoB,oBARlD,qCASE,6BACA,6BAVF,wMAaE,6BACA,6BAdF,uFAiBA,6BACA,kBAAC,IAAD,CAAWhmG,KAAMsJ,EAAMtJ,OACvB,6BACA,kBAAC,IAAD,CAAgBA,KAAMsJ,EAAMtJ,KAAMyJ,OAAQH,EAAMG,Y,6BCrCtD,+GAmBO,SAAS+/H,EAAUlgI,GACxB,MAAMmgI,EAAyD,IAAzCj9F,IAASljC,EAAMtJ,KAAKy5B,SAASiT,UACnD,IAAIg9F,EASJ,OAPEA,EADED,GAAiB,EACJ59H,YAAa,EAAG,GACtB49H,GAAiB,IACX59H,YAAa,IAAK,GAElBA,YAAa49H,EAAe,GAI3C,oCACE,uBAAG7/H,UAAU,UAAUq9C,MAAO,CAAEzqC,QAAS,iBAAzC,YACY99B,IAAe8B,cAAc8oB,EAAMtJ,KAAKmmG,SADpD,KAEGznH,IAAe8B,cAAc,EAAI8oB,EAAMtJ,KAAKomG,iBAF/C,UAGE,0BAAMx8F,UAAU,eAAhB,sQAMF,6BACA,uBAAGA,UAAU,UAAUq9C,MAAO,CAAEzqC,QAAS,iBAAzC,iBACiB99B,IAAe+B,aAAa6oB,EAAMtJ,KAAKymG,QADxD,KAEG/nH,IAAe+B,aAAa,EAAI6oB,EAAMtJ,KAAK2mG,gBAF9C,UAGE,0BAAM/8F,UAAU,eAAhB,yNAKF,6BACA,uBAAGA,UAAU,UAAUq9C,MAAO,CAAEzqC,QAAS,iBAAzC,0BAC0B3Q,YAAmD,KAArC,EAAIvC,EAAMtJ,KAAK2wG,oBAA2B,GADlF,IAEE,0BAAM/mG,UAAU,eAAhB,iEAEF,6BACA,6BACE,uBAAGq9C,MAAO,CAAEzqC,QAAS,iBAArB,oBACmB,kBAAC,IAAD,CAAW/+B,MAAO,EAAI6rB,EAAMtJ,KAAKimG,kBAGtD,6BACA,uBAAGr8F,UAAU,UAAUq9C,MAAO,CAAEzqC,QAAS,iBAAzC,cACcktH,EADd,IAEE,0BAAM9/H,UAAU,eAAhB,yDAEF,6BACA,uBAAGq9C,MAAO,CAAEzqC,QAAS,iBAArB,uBACsB,kBAAC,IAAD,CAAYmO,WAAYrd,IAAShE,EAAMtJ,KAAKy5B,SAAShP,oBAE3E,6BACA,kBAAC,IAAD,CAAWzqB,KAAMsJ,EAAMtJ,U,6BCvE7B,4DAYO,SAAS2pI,EAAUrgI,GACxB,MAAMsgI,EAAkB,IAAOloJ,IAAUE,WACzC,GAAK0nB,EAAMtJ,KAAK6uC,aAAe+6F,EAAmB,KAAQ,IAAM,OAAO,iCACvE,MAAMC,EAAevgI,EAAMtJ,KAAK6uC,aAAe+6F,EAAmB,IAClE,OACE,gCACE,qBAAGhgI,UAAU,UAAUq9C,MAAO,CAAEzqC,QAAS,iBAAzC,eACe3S,YAAiCggI,GAC9C,wBAAMjgI,UAAU,wBAAhB,mMAKF,8B,6BCzBN,0FAiBO,SAASkgI,EAAexgI,GAC7B,MAAOiwB,EAAQwwG,GAAatxF,mBAAS,IAC/BI,EAAcJ,oBAAS,GAAO,GAepC,MAAM+kD,EAAUl0F,EAAMtJ,KAAKw9F,QAAQjkE,OAChCjkB,GAAuBA,EAAO75B,KAAK2/E,QAAQ7hC,IAAW,GAAKjkB,EAAO8uE,KAAKhpB,QAAQ7hC,IAAW,GAG7F,OACE,oCACE,kBAAC,IAAD,CAAeywG,UAAW,IAAMnxF,EAAaa,IAASA,GAAM15C,KAAMsJ,EAAMtJ,OACxE,6BACA,2BACE4J,UAAU,sBACV68C,YAAY,qBACZQ,MAAO,CAAE3Q,OAAQ,MAAOn5B,QAAS,OACjCjhC,MAAOq9C,EACPstB,SAjBN,SAAwBva,GACtBy9F,EAAUz9F,EAAM7I,OAAOvnD,UAkBrB,uBAAG0tB,UAAU,gBAAgBq9C,MAAO,CAAEzqC,QAAS,gBAAkBwqC,QA5BrE,WAEEyW,YADiB,qBACIwsE,IAAwB,CAC3CjqI,KAAMsJ,EAAMtJ,KACZyJ,OAAQH,EAAMG,OACd05F,QAJe,yBA2Bf,oBAGA,4BACG3F,EAAQl8C,IAAKhsC,GACZ,wBAAI94B,IAAK84B,EAAO75B,MACd,kBAAC,IAAD,CAAqBukB,KAAMsJ,EAAMtJ,KAAMsV,OAAQA,U,6BCvD3D,wGAsBA,SAAS40H,EAAW5gI,GAClB,MAAMw8B,EAAWjsD,OAAOizB,KAAKs0D,KAC1B7nC,OAAQ4J,IACP,MAAMG,EAAM89B,IAAmBj+B,GAC/B,OAAI75B,EAAMG,OAAOhsB,MAAMwjD,GAAG33B,EAAMtJ,KAAKszF,eAAehwD,MAChDA,EAAItU,OAAS1lB,EAAM0lB,OACnB1lB,EAAMw8B,SAASrmB,SAAS0jB,MAG7Bme,IAAKne,GAAoBi+B,IAAmBj+B,IAE/C,OAAwB,IAApB2C,EAASlsD,OAAqB,qCAEhC,sCACU,kBAAC,IAAD,CAAO6D,MAAOqoD,EAAS,GAAG/e,QAWxC,SAASojH,EAAuB7gI,GAC9B,MAAMuvC,EAAcJ,oBAAS,GAAO,GACpC,SAAS2xF,EAAe3sD,EAAgBzuD,GACtC,OAAOn1C,OAAOizB,KAAKs0D,KAChB7nC,OAAQ4J,IACP,MAAMG,EAAM89B,IAAmBj+B,GAC/B,OAAI75B,EAAMG,OAAOhsB,MAAMqjD,GAAGx3B,EAAMtJ,KAAKszF,eAAehwD,MAChDA,EAAItU,OAASA,IACbyuD,EAAKh+D,SAAS0jB,MAGnBme,IAAKne,GAAoBi+B,IAAmBj+B,IAEjD,MAAMknG,EAAiBD,EAAe9gI,EAAMgM,OAAOwwB,SAAUuvB,IAAYG,QACnE80E,EAAgBF,EAAe9gI,EAAMgM,OAAOwwB,SAAUuvB,IAAYM,OAClE40E,EAAkBH,EAAe9gI,EAAMgM,OAAOwwB,SAAUuvB,IAAYO,SACpE40E,EAAkBJ,EAAe9gI,EAAMgM,OAAOwwB,SAAUuvB,IAAYQ,SACpE40E,EAAcL,EAAe9gI,EAAMgM,OAAO5C,cAAe2iD,IAAY/lD,cAE3E,SAASo7H,EAAiBvnG,GACxB,MAAMG,EAAM89B,IAAmBj+B,GAC/B,OACE,yBAAK3mD,IAAK2mD,EAASv5B,UAAU,8BAC1B05B,EAAI7nD,KACL,0BAAMmuB,UAAU,cAAcjX,wBAAyB,CAAEC,OAAQ0wC,EAAIjxB,SAK3E,SAASs4H,EAAcrnG,EAAwBu1C,GAAO,GAKpD,OACE,uBACEr8F,IAAK8mD,EAAI7nD,KACTmuB,UAAU,wBACVq9C,MAAO,CACL3Q,OAAQ,MACRn5B,QAAS,MACTX,QAAS,QACTwhE,SAAU,QAEZh3B,QAdJ,WACE19C,EAAMgM,OAAO2zF,WAAW3lE,EAAKh6B,EAAMG,OAAQH,EAAMtJ,MACjD64C,EAAaa,IAASA,KAcnBpW,EAAI7nD,KAXP,MAWe,kBAAC,IAAD,CAAOgC,MAAO6rB,EAAMtJ,KAAKszF,eAAehwD,GAAM75B,OAAQH,EAAMG,SACzE,0BAAMG,UAAWivE,EAAO,kBAAoB,cAAelmF,wBAAyB,CAAEC,OAAQ0wC,EAAIjxB,SAKxG,MAAMu4H,EACEthI,EAAMgM,OAAOqyF,uBAAuBr+F,EAAMgM,OAAOsyF,iBADnDgjC,EAECthI,EAAMgM,OAAOqyF,uBAAuBr+F,EAAMgM,OAAOwyF,gBAFlD8iC,EAGCthI,EAAMgM,OAAOqyF,uBAAuBr+F,EAAMgM,OAAO0yF,gBAHlD4iC,EAICthI,EAAMgM,OAAOqyF,uBAAuBr+F,EAAMgM,OAAO4yF,gBAJlD0iC,EAKCthI,EAAMgM,OAAOqyF,uBAAuBr+F,EAAMgM,OAAO8yF,gBALlDwiC,EAMCthI,EAAMgM,OAAOqyF,uBAAuBr+F,EAAMgM,OAAOgzF,gBAExD,OACE,yBAAKrhD,MAAO,CAAElqC,OAAQ,oBACpB,4BACGzT,EAAMgM,OAAO75B,KADhB,IACuB6tB,EAAMgM,OAAO8uE,KADpC,KAGA,yBAAKn9B,MAAO,CAAE+2B,SAAU,OAAQxhE,QAAS,eAAgBP,MAAO,QAAhE,SACS3S,EAAMgM,OAAOre,KADtB,MAEG4U,YAAavC,EAAMgM,OAAO8xF,UAAYwjC,EAAU,GAFnD,IAEuD,6BAFvD,QAGQthI,EAAMgM,OAAO11B,IAHrB,MAIGisB,YAAavC,EAAMgM,OAAO+xF,SAAWujC,EAAS,GAJjD,IAIqD,6BAJrD,QAKQthI,EAAMgM,OAAO82C,IALrB,MAMGvgD,YAAavC,EAAMgM,OAAOgyF,SAAWsjC,EAAS,GANjD,IAMqD,6BANrD,QAOQthI,EAAMgM,OAAOmgD,IAPrB,MAQG5pD,YAAavC,EAAMgM,OAAOiyF,SAAWqjC,EAAS,GARjD,IAQqD,6BARrD,QASQthI,EAAMgM,OAAOogD,IATrB,MAUG7pD,YAAavC,EAAMgM,OAAOkyF,SAAWojC,EAAS,GAVjD,IAUqD,6BAVrD,QAWQthI,EAAMgM,OAAOzN,IAXrB,MAYGgE,YAAavC,EAAMgM,OAAOmyF,SAAWmjC,EAAS,GAZjD,KAcA,yBAAKhhI,UAAU,oCAAf,uBACuBN,EAAMgM,OAAOwwB,SAASwb,IAAKhe,GAAgBonG,EAAiBpnG,IAChFh6B,EAAMgM,OAAO5C,cAAc4uC,IAAKhe,GAAgBonG,EAAiBpnG,KAEpE,yBAAK15B,UAAU,WAAWq9C,MAAO,CAAEhrC,MAAO,MAAOO,QAAS,iBACxD,uCACC6tH,EAAe/oF,IAAKhe,GAAQqnG,EAAcrnG,IAC3C,kBAAC4mG,EAAD,CACElqI,KAAMsJ,EAAMtJ,KACZgvB,KAAMqmC,IAAYG,OAClB/rD,OAAQH,EAAMG,OACdq8B,SAAUx8B,EAAMgM,OAAOwwB,YAG3B,yBAAKl8B,UAAU,WAAWq9C,MAAO,CAAEhrC,MAAO,MAAOO,QAAS,iBACxD,qCACC8tH,EAAchpF,IAAKhe,GAAQqnG,EAAcrnG,IAC1C,kBAAC4mG,EAAD,CAAYlqI,KAAMsJ,EAAMtJ,KAAMgvB,KAAMqmC,IAAYM,MAAOlsD,OAAQH,EAAMG,OAAQq8B,SAAUx8B,EAAMgM,OAAOwwB,YAEtG,yBAAKl8B,UAAU,WAAWq9C,MAAO,CAAEhrC,MAAO,MAAOO,QAAS,iBACxD,wCACC+tH,EAAgBjpF,IAAKhe,GAAQqnG,EAAcrnG,IAC5C,kBAAC4mG,EAAD,CACElqI,KAAMsJ,EAAMtJ,KACZgvB,KAAMqmC,IAAYO,QAClBnsD,OAAQH,EAAMG,OACdq8B,SAAUx8B,EAAMgM,OAAOwwB,YAG3B,yBAAKl8B,UAAU,WAAWq9C,MAAO,CAAEhrC,MAAO,MAAOO,QAAS,iBACxD,wCACCguH,EAAgBlpF,IAAKhe,GAAQqnG,EAAcrnG,GAAK,IACjD,kBAAC4mG,EAAD,CACElqI,KAAMsJ,EAAMtJ,KACZgvB,KAAMqmC,IAAYQ,QAClBpsD,OAAQH,EAAMG,OACdq8B,SAAUx8B,EAAMgM,OAAOwwB,YAG3B,yBAAKl8B,UAAU,WAAWq9C,MAAO,CAAEhrC,MAAO,MAAOO,QAAS,iBACxD,6CACCiuH,EAAYnpF,IAAKhe,GAAQqnG,EAAcrnG,GAAK,IAC7C,kBAAC4mG,EAAD,CACElqI,KAAMsJ,EAAMtJ,KACZgvB,KAAMqmC,IAAY/lD,aAClB7F,OAAQH,EAAMG,OACdq8B,SAAUx8B,EAAMgM,OAAOwwB,aAa1B,SAASmkG,EAAuB3gI,GACrC,MAAMuvC,EAAcJ,oBAAS,GAAO,IAC7Blf,EAAQwwG,GAAatxF,mBAAS,IAErC,SAASoyF,EAAyB51C,GACb,KAAfA,EAAGnpC,SACPiS,YAAYz0D,EAAM65F,SAYpB,OATAxpD,oBAAU,KACR58D,OAAO0yE,iBAA4B,UAAWo7E,GAC9C,MAAM38E,EAAKkR,YAAY,IAAMvmB,EAAaa,IAASA,GAAM,KACzD,MAAO,KACL6lB,cAAcrR,GACdnxE,OAAOwgF,oBAA+B,UAAWstE,KAElD,IAGD,oCACE,2BACEjhI,UAAU,sBACV1tB,MAAOq9C,EACPktB,YAAY,qBACZI,SAAWva,GAAUy9F,EAAUz9F,EAAM7I,OAAOvnD,SAE9C,uBAAG0tB,UAAU,UAAUq9C,MAAO,CAAE4yB,WAAY,MAAOr9D,QAAS,iBAA5D,cACc99B,IAAe2B,iBAAiB,EAAI,EAAIipB,EAAMtJ,KAAKgxG,eAC/D,0BAAMpnG,UAAU,wBAAhB,yIAKDN,EAAMtJ,KAAKw9F,QAAQl8C,IAAKhsC,GACvB,kBAAC60H,EAAD,CAAwB3tJ,IAAK84B,EAAO75B,KAAMguB,OAAQH,EAAMG,OAAQzJ,KAAMsJ,EAAMtJ,KAAMsV,OAAQA,Q,6BC3NlG,sDAGO,MAAM+rD,EAOX1iF,YAAYlD,EAAO,GAAIsrC,EAAO,EAAGiI,EAAoBqmC,IAAYG,OAAQvlD,EAAgB,IACvFrxB,KAAKnD,KAAOA,EACZmD,KAAKmoC,KAAOA,EACZnoC,KAAKowC,KAAOA,EACZpwC,KAAKqxB,MAAQA,EAEbrxB,KAAKyzB,KAAOzzB,KAAKksJ,oBAGnBA,oBACE,MAAM54B,EAAQ,CAAC,YAyBf,OAxBsB,MAAlBtzH,KAAKqxB,MAAMrwB,MACbsyH,EAAMh4H,KAAM,IAAGwE,IAAe2B,iBAAiBzB,KAAKqxB,MAAMrwB,IAAM,EAAG,qBACnEsyH,EAAMh4H,KAAM,IAAGwE,IAAe2B,kBAAkBzB,KAAKqxB,MAAMrwB,IAAM,GAAK,EAAG,oBAErD,MAAlBhB,KAAKqxB,MAAMm8C,MACb8lD,EAAMh4H,KAAM,IAAGwE,IAAe2B,iBAAiBzB,KAAKqxB,MAAMm8C,IAAM,EAAG,oBACnE8lD,EAAMh4H,KAAM,IAAGwE,IAAe2B,kBAAkBzB,KAAKqxB,MAAMm8C,IAAM,GAAK,EAAG,mBAErD,MAAlBxtE,KAAKqxB,MAAMwlD,MACby8C,EAAMh4H,KAAM,IAAGwE,IAAe2B,iBAAiBzB,KAAKqxB,MAAMwlD,IAAM,EAAG,sBACnEy8C,EAAMh4H,KAAM,IAAGwE,IAAe2B,kBAAkBzB,KAAKqxB,MAAMwlD,IAAM,GAAK,EAAG,qBAErD,MAAlB72E,KAAKqxB,MAAMylD,MACbw8C,EAAMh4H,KAAM,IAAGwE,IAAe2B,iBAAiBzB,KAAKqxB,MAAMylD,IAAM,EAAG,oBACnEw8C,EAAMh4H,KAAM,IAAGwE,IAAe2B,kBAAkBzB,KAAKqxB,MAAMylD,IAAM,GAAK,EAAG,mBAErD,MAAlB92E,KAAKqxB,MAAMpI,MACbqqG,EAAMh4H,KAAM,IAAGwE,IAAe2B,iBAAiBzB,KAAKqxB,MAAMpI,IAAM,EAAG,qBACnEqqG,EAAMh4H,KAAM,IAAGwE,IAAe2B,kBAAkBzB,KAAKqxB,MAAMpI,IAAM,GAAK,EAAG,oBAEpD,MAAnBjpB,KAAKqxB,MAAMhZ,OACbi7G,EAAMh4H,KAAM,IAAGwE,IAAe2B,iBAAiBzB,KAAKqxB,MAAMhZ,KAAO,EAAG,oBACpEi7G,EAAMh4H,KAAM,IAAGwE,IAAe2B,kBAAkBzB,KAAKqxB,MAAMhZ,KAAO,GAAK,EAAG,mBAErEi7G,EAAM5/F,KAAK,QAIpBuiC,UACE,OAAQj2D,KAAKowC,MACX,KAAKqmC,IAAYG,OACf,MAAO,SACT,KAAKH,IAAYM,MACf,MAAO,QACT,KAAKN,IAAYO,QACf,MAAO,UACT,KAAKP,IAAYQ,QACf,MAAO,UACT,KAAKR,IAAY/lD,aACf,MAAO,eACT,QACE,MAAO,O,6BC9Df,sDAcO,SAASy7H,EAASzhI,GACvB,SAAS0hI,EAAQ1+F,GACG,WAAdA,EAAM9vD,KAAkB8sB,EAAMy0D,cAUpC,OAPApkB,oBAAU,KACR0P,SAASoG,iBAAiB,UAAWu7E,GAC9B,KACL3hF,SAASkU,oBAAoB,UAAWytE,MAK1C,yBAAKphI,UAAW,oBAAqBskD,GAAO5kD,EAAM4kD,GAAR,YACvCl/C,IAAMs6C,cAAchgD,EAAMohB,QAASphB,EAAMA,U,6BCxBzC,SAASmwF,EAAcj4C,GAC5B,GAAa,OAATA,EAMJ,GAAMA,aAAgBypF,QAAtB,CAOA,KAA2B,OAApBzpF,EAAKoQ,YACVpQ,EAAKoI,YAAYpI,EAAKoQ,YAGA,OAApBpQ,EAAKu7E,YACPv7E,EAAKu7E,WAAWnzE,YAAYpI,QAV5BviE,QAAQisJ,MAAM,mFANdjsJ,QAAQisJ,MAAM,qDAPlB,mC,6BCAA,wEAcO,SAASC,EAAoB7hI,GAClC,OACE,kBAAC,IAAD,CACE8hI,sBAAsB,EACtBC,cAAe,oCAAG/hI,EAAMgM,OAAO75B,MAC/B6vJ,aAAc,kBAAC,IAAD,CAA4BtrI,KAAMsJ,EAAMtJ,KAAMsV,OAAQhM,EAAMgM,a,6BCnBhF,6CAkBO,MAAMi2H,UAAoBv8H,YAC/BrwB,YAAY2qB,GACVg2B,MAAMh2B,GAEN1qB,KAAK4sJ,kBAAoB5sJ,KAAK4sJ,kBAAkB/uJ,KAAKmC,MAErDA,KAAK6pG,MAAQ,CACXgjD,cAAaniI,EAAM8hI,sBAAuB9hI,EAAM8hI,sBAIpDI,oBACE5sJ,KAAK8sJ,SAAS,CACZD,aAAc7sJ,KAAK6pG,MAAMgjD,cAI7Bn8E,SACE,IAAI1lD,EAAY,mBAOhB,MANsC,iBAA3BhrB,KAAK0qB,MAAMqiI,cACpB/hI,EAAYhrB,KAAK0qB,MAAMqiI,aAGrB/sJ,KAAK6pG,MAAMgjD,cAAa7hI,GAAa,WAGvC,gCACE,0BAAQA,UAAWA,EAAWo9C,QAASpoE,KAAK4sJ,mBACzC5sJ,KAAK0qB,MAAM+hI,eAEd,gBAACO,EAAD,CACEC,OAAQjtJ,KAAK6pG,MAAMgjD,YACnBK,WAAYltJ,KAAK0qB,MAAMwiI,WACvBR,aAAc1sJ,KAAK0qB,MAAMgiI,iBAanC,MAAMM,UAAuB58H,YAC3B+8H,sBAAsBC,GACpB,OAAOptJ,KAAK0qB,MAAMuiI,QAAUG,EAAUH,OAGxCv8E,SACE,IAAI1lD,EAAY,kBAKhB,MAJqC,iBAA1BhrB,KAAK0qB,MAAMwiI,aACpBliI,EAAYhrB,KAAK0qB,MAAMwiI,YAGpBltJ,KAAK0qB,MAAMuiI,OAGd,uBAAKjiI,UAAWA,EAAWq9C,MAAO,CAAEzqC,QAAS,UAC1C59B,KAAK0qB,MAAMgiI,cAJe,oC,6BC3EnC,iFAgBO,SAASW,EAA2B3iI,GACzC,MAAMuvC,EAAcJ,oBAAS,GAAO,GACpC,OACE,oCACE,yBAAK7uC,UAAW,gCACd,kBAAC,IAAD,CAAiBsiI,SAAU,IAAMrzF,EAAaa,IAASA,GAAM15C,KAAMsJ,EAAMtJ,KAAMsV,OAAQhM,EAAMgM,UAE/F,yBAAK1L,UAAW,wBACd,kBAAC,IAAD,CAAcuiI,aAAc,IAAMtzF,EAAaa,IAASA,GAAM15C,KAAMsJ,EAAMtJ,KAAMsV,OAAQhM,EAAMgM,UAEhG,yBAAK1L,UAAW,wBACd,kBAAC,IAAD,CAAiB0L,OAAQhM,EAAMgM,a,6BC3BvC,+FAmBO,SAAS82H,EAAgB9iI,GA4B9B,MAAMshI,EAAM,CACV3zI,KAAMqS,EAAMgM,OAAOqyF,uBAAuBr+F,EAAMgM,OAAOsyF,iBACvDhoH,IAAK0pB,EAAMgM,OAAOqyF,uBAAuBr+F,EAAMgM,OAAOwyF,gBACtD17C,IAAK9iD,EAAMgM,OAAOqyF,uBAAuBr+F,EAAMgM,OAAO0yF,gBACtDvyC,IAAKnsD,EAAMgM,OAAOqyF,uBAAuBr+F,EAAMgM,OAAO4yF,gBACtDxyC,IAAKpsD,EAAMgM,OAAOqyF,uBAAuBr+F,EAAMgM,OAAO8yF,gBACtDvgG,IAAKyB,EAAMgM,OAAOqyF,uBAAuBr+F,EAAMgM,OAAOgzF,iBAGxD,OACE,oCACE,0BAAM1+F,UAAU,yBAAhB,QACQlrB,IAAegC,iBAAiB4oB,EAAMgM,OAAO8xF,UAAYwjC,EAAI3zI,MADrE,KAEGvY,IAAegC,iBAAiB4oB,EAAMgM,OAAO8xF,WAFhD,SAEkE1oH,IAAegC,iBAAiBkqJ,EAAI3zI,MAFtG,QAGE,6BAHF,QAIQvY,IAAegC,iBAAiB4oB,EAAMgM,OAAO+xF,SAAWujC,EAAIhrJ,KAJpE,KAKKlB,IAAegC,iBAAiB4oB,EAAMgM,OAAO+xF,UALlD,SAKmE3oH,IAAegC,iBAAiBkqJ,EAAIhrJ,KALvG,QAME,6BANF,QAOQlB,IAAegC,iBAAiB4oB,EAAMgM,OAAOgyF,SAAWsjC,EAAIx+E,KAPpE,KAQK1tE,IAAegC,iBAAiB4oB,EAAMgM,OAAOgyF,UARlD,SAQmE5oH,IAAegC,iBAAiBkqJ,EAAIx+E,KARvG,QASE,6BATF,QAUQ1tE,IAAegC,iBAAiB4oB,EAAMgM,OAAOiyF,SAAWqjC,EAAIn1E,KAVpE,KAWK/2E,IAAegC,iBAAiB4oB,EAAMgM,OAAOiyF,UAXlD,SAWmE7oH,IAAegC,iBAAiBkqJ,EAAIn1E,KAXvG,QAYE,6BAZF,QAaQ/2E,IAAegC,iBAAiB4oB,EAAMgM,OAAOkyF,SAAWojC,EAAIl1E,KAbpE,KAcKh3E,IAAegC,iBAAiB4oB,EAAMgM,OAAOkyF,UAdlD,SAcmE9oH,IAAegC,iBAAiBkqJ,EAAIl1E,KAdvG,QAeE,6BAfF,QAgBQh3E,IAAegC,iBAAiB4oB,EAAMgM,OAAOmyF,SAAWmjC,EAAI/iI,KAhBpE,KAiBKnpB,IAAegC,iBAAiB4oB,EAAMgM,OAAOmyF,UAjBlD,SAiBmE/oH,IAAegC,iBAAiBkqJ,EAAI/iI,KAjBvG,SAmBA,yCACYgE,YAAavC,EAAMgM,OAAOre,KAAM,GAD5C,KACkDvY,IAAesB,UAAUspB,EAAMgM,OAAOwxF,UADxF,QAEE,6BAFF,aAGaj7F,YAAavC,EAAMgM,OAAO11B,IAAK,GAH5C,KAGkDlB,IAAesB,UAAUspB,EAAMgM,OAAOyxF,SAHxF,QAIE,6BAJF,YAKYl7F,YAAavC,EAAMgM,OAAO82C,IAAK,GAL3C,KAKiD1tE,IAAesB,UAAUspB,EAAMgM,OAAO0xF,SALvF,QAME,6BANF,cAOcn7F,YAAavC,EAAMgM,OAAOmgD,IAAK,GAP7C,KAOmD/2E,IAAesB,UAAUspB,EAAMgM,OAAO2xF,SAPzF,QAQE,6BARF,YASYp7F,YAAavC,EAAMgM,OAAOogD,IAAK,GAT3C,KASiDh3E,IAAesB,UAAUspB,EAAMgM,OAAO4xF,SATvF,QAUE,6BAVF,aAWar7F,YAAavC,EAAMgM,OAAOzN,IAAK,GAX5C,KAWkDnpB,IAAesB,UAAUspB,EAAMgM,OAAO6xF,SAXxF,QAYE,8BAEF,6BACC79F,EAAMgM,OAAO4zF,aACZ,oCACE,4BAAQt/F,UAAU,4BAA4Bo9C,QA1EtD,WACE,MAAMm8C,EAAW,iCAAgC75F,EAAMgM,OAAO75B,KAC9DgiF,YAAY0lC,EAASkpC,IAAgB,CACnC/2H,OAAQhM,EAAMgM,OACdtV,KAAMsJ,EAAMtJ,KACZmjG,QAASA,EACT+oC,SAAU5iI,EAAM4iI,aAoEZ,UAGA,yBAAKtiI,UAAU,oBAAoBq9C,MAAO,CAAEslC,UAAW,OAASvlC,QAnExE,WACEz0D,YACE,kKAGE,6BACA,6BAJF,oHAOE,6BACA,6BARF,kKAiEI,S,6BCjGV,8EAkBO,SAAS85I,EAAe/iI,GAC7B,MAAMuvC,EAAcJ,oBAAS,GAAO,GAEpCkB,oBAAU,KACR,MAAMuU,EAAKkR,YAAY,IAAMvmB,EAAaa,IAASA,GAAM,KACzD,MAAO,IAAM6lB,cAAcrR,IAC1B,IAoCH,MAAMo+E,EAAYhjI,EAAMgM,OAAOi3H,2BACzBC,EAAaljI,EAAMgM,OAAOm3H,+BAEhC,OACE,oCACE,kGAEE,6BAFF,wEAIE,6BACA,6BALF,oCAMoC/tJ,IAAe8B,cAAc8oB,EAAMgM,OAAOuxF,eAN9E,WAOE,6BACA,6BARF,+EAUE,6BAVF,aAWanoH,IAAeS,OAAOmtJ,EAAUr1I,KAAM,SAXnD,QAYGvY,IAAeS,OAAOqtJ,EAAWv1I,KAAM,SACxC,6BAbF,cAccvY,IAAeS,OAAOmtJ,EAAU1sJ,IAAK,SAdnD,QAeGlB,IAAeS,OAAOqtJ,EAAW5sJ,IAAK,SACvC,6BAhBF,aAiBalB,IAAeS,OAAOmtJ,EAAUlgF,IAAK,SAjBlD,QAkBG1tE,IAAeS,OAAOqtJ,EAAWpgF,IAAK,SACvC,6BAnBF,eAoBe1tE,IAAeS,OAAOmtJ,EAAU72E,IAAK,SApBpD,QAqBG/2E,IAAeS,OAAOqtJ,EAAW/2E,IAAK,SACvC,6BAtBF,aAuBa/2E,IAAeS,OAAOmtJ,EAAU52E,IAAK,SAvBlD,QAwBGh3E,IAAeS,OAAOqtJ,EAAW92E,IAAK,SACvC,6BAzBF,cA0Bch3E,IAAeS,OAAOmtJ,EAAUzkI,IAAK,SA1BnD,QA2BGnpB,IAAeS,OAAOqtJ,EAAW3kI,IAAK,SACvC,8BAEF,4BAAQ+B,UAAU,aAAao9C,QArEnC,WACE19C,EAAM4iI,WACN,MAAMvhI,EAAMrB,EAAMtJ,KAAKiB,aAAaqI,EAAMgM,QAC1C/iB,YACE,2CACgB+W,EAAMgM,OAAO75B,KAD7B,IACmC,6BACjC,6BAFF,kBAGkBiD,IAAe8B,cAAcmqB,EAAIw7F,SAHnD,YAIE,6BACA,6BACC78F,EAAMgM,OAAO75B,KANhB,wDAOE,6BAPF,aAQaiD,IAAeS,OAAOwrB,EAAI1T,KAAM,SAC3C,6BATF,cAUcvY,IAAeS,OAAOwrB,EAAI/qB,IAAK,SAC3C,6BAXF,aAYalB,IAAeS,OAAOwrB,EAAIyhD,IAAK,SAC1C,6BAbF,eAce1tE,IAAeS,OAAOwrB,EAAI8qD,IAAK,SAC5C,6BAfF,aAgBa/2E,IAAeS,OAAOwrB,EAAI+qD,IAAK,SAC1C,6BAjBF,cAkBch3E,IAAeS,OAAOwrB,EAAI9C,IAAK,SAC3C,+BAGJk2D,YAAYz0D,EAAM65F,WA2ChB,UAGA,4BAAQv5F,UAAU,aAAao9C,QA3CnC,WACE+W,YAAYz0D,EAAM65F,WA0ChB,a,6BClGN,+EAiBO,SAASupC,EAAapjI,GAC3B,MAAOw5E,EAAa6pD,GAAkBl0F,mBAASnvC,EAAMgM,OAAO8uE,MAS5D,MAAMokB,EAAQl/F,EAAMtJ,KAAKyoG,kBAEnBrvH,EAAO,CACX,CAAE,SAAS,kBAAC,IAAD,CAAWqE,MAAO,EAAI6rB,EAAMgM,OAAO05F,mBAAmB1lG,EAAMtJ,SACvE,CAAE,WAActhB,IAAe8B,cAAc,EAAI8oB,EAAMgM,OAAOy5F,qBAAqBzlG,EAAMtJ,OAA3E,UACd,CAAE,gBAAmBthB,IAAe+B,aAAa,EAAI6oB,EAAMgM,OAAO25F,yBAAyB3lG,EAAMtJ,OAA9E,UACnB,CAAE,iBAAkB,GAAEthB,IAAe8B,cAAc8oB,EAAMgM,OAAOuxF,iBAGlE,OACE,oCACE,4BAAQhgD,SAlBZ,SAAkBva,GAChB,MAAM83C,EAAO93C,EAAM7I,OAAOvnD,MAC1BotB,EAAMgM,OAAOuzF,aAAazkB,GAC1BuoD,EAAevoD,GACf96E,EAAM6iI,gBAcwBviI,UAAU,oBAAoB1tB,MAAO4mG,GAC/D,4BAAQtmG,IAAK,EAAGN,MAAO,OAAvB,OAGCssH,EAAMlnD,IAAI,CAAC8iC,EAAc1qG,IACxB,4BAAQ8C,IAAK9C,EAAI,EAAGwC,MAAOkoG,GACxBA,KAIP,6BACE,kBAAC,IAAD,CAAYljC,KAAM9nE,Q,6BCjD1B,+DAYO,SAASwzJ,EAAgBtjI,GAC9B,MAAM86E,EAAO5T,IAAgBlnE,EAAMgM,OAAO8uE,MACpC/xE,EAAO+xE,EAAOA,EAAK/xE,KAAOm+D,IAAe,WAAen+D,KAE9D,OAAO,uBAAGzI,UAAU,kBAAkBjX,wBAAyB,CAAEC,OAAQyf,O,6BCf3E,kCAsCO,MAAMo+D,EAAqD,CAChE,CACEp+D,KAAM,qCACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,aACN8zB,OAAQ,CAAE8pG,WAAY,MAExB,CACEhnG,KAAM,gJACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,aACN8zB,OAAQ,CACN4pG,YAAa,KACbjK,WAAY,KACZkK,UAAW,EACXC,WAAY,IACZrgF,WAAY,IAGhB,CACE3mB,KAAM,kJACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,WACN8zB,OAAQ,CACN4pG,YAAa,KACbjK,WAAY,KACZkK,UAAW,IACXC,WAAY,GACZK,UAAW,GACX1gF,WAAY,MAGhB,CACE3mB,KAAM,oHACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,iBACN8zB,OAAQ,CACN4pG,YAAa,KACbjK,WAAY,KACZkK,UAAW,EACXC,WAAY,GACZK,UAAW,GACX1gF,WAAY,IAGhB,CACE3mB,KAAM,sGACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,eACN8zB,OAAQ,CACN4pG,YAAa,KACbjK,WAAY,GACZmK,WAAY,IACZrgF,WAAY,IAGhB,CACE3mB,KAAM,uHACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,cACN8zB,OAAQ,CACN4pG,YAAa,KACbjK,WAAY,GACZmK,WAAY,IACZrgF,WAAY,KAGhB,CACE3mB,KAAM,iKACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,yBACN8zB,OAAQ,CACN4pG,YAAa,KACbjK,WAAY,GACZkK,UAAW,GACXC,WAAY,GACZK,UAAW,GACX1gF,WAAY,KAGhB,CACE3mB,KAAM,2GACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,mBACN8zB,OAAQ,CACN4pG,YAAa,KACbjK,WAAY,KACZkK,UAAW,IACXC,WAAY,GACZK,UAAW,GACX1gF,WAAY,KAGhB,CACE3mB,KAAM,6HACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,iBACN8zB,OAAQ,CACN4pG,YAAa,IACbjK,WAAY,EACZmK,WAAY,GACZK,UAAW,GACX1gF,WAAY,KAGhB,CACE3mB,KAAM,4GACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,kBACN8zB,OAAQ,CACN2/F,YAAa,KACbkK,UAAW,EACXC,WAAY,GACZK,UAAW,GACX1gF,WAAY,IAGhB,CACE3mB,KAAM,qJACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,aACN8zB,OAAQ,CACN4pG,YAAa,KACbjK,WAAY,KACZkK,UAAW,IACXE,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,UAAW,GACX1gF,WAAY,IAGhB,CACE3mB,KAAM,2JACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,aACN8zB,OAAQ,CACN4pG,YAAa,KACbjK,WAAY,KACZkK,UAAW,EACXK,UAAW,GACXD,UAAW,GACXE,UAAW,GACX1gF,WAAY,IACZ0T,UAAW,CACTjvD,MAAO,IACP0oH,QAAS,EACTM,OAAQ,QAId,CACEp0F,KAAM,mKACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,sBACN8zB,OAAQ,CACN4pG,YAAa,KACbjK,WAAY,IACZkK,UAAW,IACXC,WAAY,GACZC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,UAAW,GACX1gF,WAAY,EACZ0T,UAAW,CACTjvD,MAAO,IACP0oH,QAAS,IACTM,OAAQ,OAId,CACEp0F,KAAM,sGACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,YACN8zB,OAAQ,CACN4pG,YAAa,MACbjK,WAAY,IACZkK,UAAW,GACXE,UAAW,EACXC,UAAW,EACXE,UAAW,GACXD,UAAW,GACXE,UAAW,GACX1gF,WAAY,KAGhB,CACE3mB,KAAM,oJACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,gBACN8zB,OAAQ,CACN4pG,YAAa,MACbjK,WAAY,GACZkK,UAAW,GACXC,WAAY,GACZC,UAAW,GACXC,UAAW,GACXE,UAAW,GACXD,UAAW,GACXE,UAAW,GACX1gF,WAAY,KAGhB,CACE3mB,KAAM,mJACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,wBACN8zB,OAAQ,CACN4pG,YAAa,KACbjK,WAAY,IACZkK,UAAW,GACXC,WAAY,GACZC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXE,UAAW,GACX1gF,WAAY,GACZ0T,UAAW,CACTjvD,MAAO,IACP0oH,QAAS,IACTM,OAAQ,QAId,CACEp0F,KAAM,4JACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,uBACN8zB,OAAQ,CACN4pG,YAAa,KACbjK,WAAY,KACZkK,UAAW,GACXC,WAAY,GACZC,UAAW,GACXE,UAAW,GACXE,UAAW,GACX1gF,WAAY,KAGhB,CACE3mB,KAAM,oKACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,oBACN8zB,OAAQ,CACN4pG,YAAa,KACbjK,WAAY,KACZkK,UAAW,IACXC,WAAY,GACZC,UAAW,EACXC,UAAW,EACXC,UAAW,GACXE,UAAW,GACX1gF,WAAY,GACZ0T,UAAW,CACTjvD,MAAO,IACP0oH,QAAS,IACTM,OAAQ,OAId,CACEp0F,KAAM,wJACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,YACN8zB,OAAQ,CACN4pG,YAAa,IACbjK,WAAY,EACZmK,WAAY,GACZC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXE,UAAW,GACX1gF,WAAY,GACZ0T,UAAW,CACTjvD,MAAO,EACP0oH,QAAS,EACTM,OAAQ,KAId,CACEp0F,KAAM,8GACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,oBACN8zB,OAAQ,CACN2/F,YAAa,KACbmK,WAAY,GACZC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXzgF,WAAY,EACZ0T,UAAW,CACTjvD,MAAO,EACP0oH,QAAS,EACTM,OAAQ,MAId,CACEp0F,KAAM,8EACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,eACN8zB,OAAQ,CACN+pG,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXzgF,WAAY,MAGhB,CACE3mB,KAAM,wDACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,gBACN8zB,OAAQ,CAAE8pG,WAAY,IAAKrgF,WAAY,KAEzC,CACE3mB,KAAM,kDACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,iBACN8zB,OAAQ,CAAEmqG,UAAW,IAAK1gF,WAAY,IAExC,CACE3mB,KAAM,qMACNu+D,UAAU,EACVD,WAAW,EACXl1F,KAAM,oBACN8zB,OAAQ,CACN8pG,WAAY,GACZC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,UAAW,EACX1gF,WAAY,M,6BCjZlB,yFAeO,SAAS6zG,EAAcvjI,GAC5B,GAAIA,EAAMtJ,KAAKw9F,QAAQ5jH,QAAU+hG,IAAcE,mBAC7C,OAAO,qCAGT,IAAKvyE,EAAMtJ,KAAKO,mBAAoB,CAClC,MAAM4lG,EAAU78F,EAAMtJ,KAAKywG,kCAC3B,OACE,oCACE,uBAAG7mG,UAAU,yBAAyBq9C,MAAO,CAAEzqC,QAAS,eAAgB85B,OAAQ,SAAhF,uBAGA,uBAAG2Q,MAAO,CAAE3Q,OAAQ,OAAQrtC,MAAO,MAAOuT,QAAS,iBAChD3Q,YAAas6F,EAAS,GADzB,2CAgBN,OACE,oCACE,uBAAGv8F,UAAU,gBAAgBo9C,QAXjC,WACE,MAAMm8C,EAAU,4BAChB1lC,YAAY0lC,EAAS2pC,IAAc,CACjC9sI,KAAMsJ,EAAMtJ,KACZmjG,QAASA,EACT6mC,UAAW1gI,EAAM0gI,aAM8B/iF,MAAO,CAAEzqC,QAAS,eAAgB85B,OAAQ,SAAzF,0B,6BC7CN,uEAcO,SAASw2F,EAAaxjI,GAC3B,MAAO7tB,EAAMsxJ,GAAWt0F,mBAAS,IAEjC,SAASu0F,IACM,KAATvxJ,EAIC6tB,EAAMtJ,KAAKO,mBAOX+I,EAAMtJ,KAAKQ,cAAc/kB,IAK9B6tB,EAAM0gI,YACNjsE,YAAYz0D,EAAM65F,UALhB5wG,YAAgB,kDAPhBA,YAAgB,2CAJhBA,YAAgB,+CA2BpB,OACE,oCACE,uBAAGqX,UAAU,YAAb,0CACA,6BACA,2BACEwpG,WAAS,EACT65B,QAdN,SAAiB3gG,GACO,KAAlBA,EAAMwf,SAAgBkhF,KActBnmF,SAXN,SAAkBva,GAChBygG,EAAQzgG,EAAM7I,OAAOvnD,QAWjB0tB,UAAU,sBACVolB,KAAK,OACLy3B,YAAY,gBAEd,uBAAG78C,UAAU,aAAao9C,QAASgmF,GAAnC,0B,6BC1DN,qFAcO,SAASE,EAAiB5jI,GAU/B,SAAS6jI,EAAgBzwJ,GACvB,MAAMy7C,EAAQ,IAAJz7C,EACV,OAAIy7C,GAAK,EACAtsB,YAAa,EAAG,GACdssB,GAAK,IACPtsB,YAAa,IAAK,GAElBA,YAAassB,EAAG,GAI3B,MAAMkxE,EAAc78D,IAASljC,EAAMtJ,KAAKy5B,SAASgT,MAkBjD,MAAM2gG,EAAYvzJ,OAAOizB,KAAK0/B,KAAUjT,OAAQ8zG,GAAMA,GAAK/jI,EAAMtJ,KAAKy5B,SAEtE,OACE,yBAAKwtB,MAAO,CAAEhrC,MAAO,QACnB,uBAAGrS,UAAU,YAAb,iKAGE,6BACA,6BAJF,gfAUE,6BACA,6BAXF,qOAeE,6BACA,6BAhBF,2LAmBE,6BACA,8BAEF,2BACE4hF,QAASliF,EAAMtJ,KAAKumG,wBACpBr4C,GAAG,UACHl/B,KAAK,WACLi4B,MAAO,CAAEzqC,QAAS,eAAgB85B,OAAQ,OAC1CuQ,SAAWva,GAAWhjC,EAAMtJ,KAAKumG,wBAA0Bj6D,EAAM7I,OAAO+nD,UAE1E,2BAAOK,QAAQ,UAAUjiF,UAAU,mBAAmBq9C,MAAO,CAAEh+C,MAAO,QAASuT,QAAS,iBAAxF,8BAEE,0BAAM5S,UAAU,cAAcq9C,MAAO,CAAEzqC,QAAS,iBAAhD,sJAKF,6BACA,uBAAGyqC,MAAO,CAAEzqC,QAAS,iBAArB,2BAC2B99B,IAAe2B,iBAAiBipB,EAAMtJ,KAAKsmG,qBAAsB,IAE5F,yBAAK18F,UAAU,oBAAoBq9C,MAAO,CAAEzqC,QAAS,gBAAkBwqC,QAlF3E,WACEz0D,YACE,2MAgFA,KAGA,6BAEA,2BACEi5F,QAASliF,EAAMtJ,KAAKsuG,kBACpBpgD,GAAG,SACHl/B,KAAK,WACLi4B,MAAO,CAAEzqC,QAAS,eAAgB85B,OAAQ,OAC1CuQ,SAAWva,GAAWhjC,EAAMtJ,KAAKsuG,kBAAoBhiE,EAAM7I,OAAO+nD,UAEpE,2BAAOK,QAAQ,UAAUjiF,UAAU,mBAAmBq9C,MAAO,CAAEh+C,MAAO,QAASuT,QAAS,iBAAxF,kCAEE,0BAAM5S,UAAU,cAAcq9C,MAAO,CAAEzqC,QAAS,iBAAhD,kIAKF,6BACA,8BAAUyqC,MAAO,CAAEzqC,QAAS,QAAS85B,OAAQ,QAC3C,2BACE,2BACE,2BAAIhtC,EAAMtJ,KAAKy5B,UAEjB,6BAJF,UAKU5tB,YAAa2gC,IAASljC,EAAMtJ,KAAKy5B,SAASgT,MAAO,GACzD,6BANF,cAOc0gG,EAAgB3gG,IAASljC,EAAMtJ,KAAKy5B,SAASiT,WAP3D,IAQE,6BACA,6BACC0gG,EAAU9rF,IAAK7lE,GA5FxB,SAA4BA,GAC1B,MAAMgxD,EAAQD,IAAS/wD,GAAMgxD,MACvB6gG,EAAqBjkC,GAAe58D,EAAQ48D,GAClD,OACE,0BAAM7sH,IAAKf,GACT,2BAAIA,GACJ,6BAFF,UAGUowB,YAAa4gC,EAAO,GAC5B,6BAJF,cAKc0gG,EAAgB3gG,IAAS/wD,GAAMixD,WAL7C,IAKyD,6BALzD,uCAMuChuD,IAAe2B,iBAAiBitJ,EAAoB,GACzF,6BACA,8BAgF2BC,CAAmB9xJ,S,6BChItD,2HAeO,SAAS+xJ,IACd,MACM7vJ,EADSwxB,IAAIjyB,SACQS,YAC3B,GAAoB,OAAhBA,EAAsB,OAAO,qCACjC,MAAMk7D,EAAcJ,oBAAS,GAAO,GACpC,SAASgB,IACPZ,EAAaa,IAASA,GAExB,MAAOzP,EAAcwjG,GAAmBh1F,mBAA0B,YAIlEkB,oBAAU,KACR,MAAMuU,EAAKkR,YAAY3lB,EAAU,KACjC,MAAO,IAAM8lB,cAAcrR,IAC1B,IAEH,MAAMw/E,EACJ7zJ,OAAOizB,KAAKguB,KAAYvB,OACrBo0G,QACyFnkI,IAAxF7rB,EAAYK,UAAU8/G,KAAMn6D,GAAwBA,EAAS3U,OAAS2+G,IACxE/zJ,OAAS,EAEb,OACE,kBAAC,IAAQgE,YAAYo9D,SAArB,CAA8B9+D,MAAOyB,GACnC,kBAAC,IAAD,CAAMwrE,QAAQ,YAAYjtE,MAAO+tD,EAAc4c,SAhBnD,SAAsBva,EAA6Bi7F,GACjDkG,EAAgBlG,KAgBZ,kBAAC,IAAD,CAAK/gF,MAAO7oE,EAAYlC,KAAMS,MAAO,aACpCyB,EAAYK,UAAUsjE,IAAKsgB,GAC1B,kBAAC,IAAD,CAAKplF,IAAKolF,EAAInmF,KAAM+qE,MAAOob,EAAInmF,KAAMS,MAAO0lF,EAAInmF,QAEjDiyJ,GAAa,kBAAC,IAAD,CAAKlnF,MAAO,SAAUtqE,OAAQ,KAE5B,aAAjB+tD,GAA+B,kBAAC,IAAD,CAAUwP,SAAUA,KACjC,IAAlBxP,GAAuB,kBAAC,IAAD,CAAmBwjG,gBAAiBA,IACnC,iBAAjBxjG,GAA8C,aAAjBA,GACnC,kBAAC,IAAD,CAAWwP,SAAUA,EAAUxP,aAAcA,EAAe,Q,6BClDpE,+EAiBO,SAAS2jG,EAAUtkI,GACxB,MAAMyyB,EAAO1f,cACPsnB,EACmB,aAAvBr6B,EAAM2gC,aACFlO,EAAK/9C,UAAU8/G,KAAMn6D,GAAwBA,EAASloD,OAAS6tB,EAAM2gC,mBACrEzgC,EAEN,QAAiBA,IAAbm6B,EAAwB,MAAM,IAAIj6B,MAAM,wBAC5C,OACE,kBAAC,IAAQ0S,SAAS4+B,SAAlB,CAA2B9+D,MAAOynD,GAChC,kBAAC,IAAD,CAAU8V,SAAUnwC,EAAMmwC,SAAU93B,KAAM1U,IAAS2U,c,6BC3BzD,kGAeO,SAASisH,EAASvkI,GACvB,MAAMq6B,EAAWrnB,eACVqF,EAAMmsH,GAAWr1F,mBAASnvC,EAAMqY,MAEjCqmB,EAASrE,EAAS2B,QAAQ3jB,GAChC,GAAe,IAAXqmB,EAEF,OADA8lG,EAAQ,aACD,qCAGT,MAAMJ,EACJ7zJ,OAAOizB,KAAK62B,EAAS2B,SAAS/L,OAAQ2Q,GAAoD,IAA/BvG,EAAS2B,QAAQ4E,IAAiBtwD,OAAS,EAIxG,OACE,oCACE,kBAAC,IAAD,CAAMuvE,QAAQ,YAAYjtE,MAAOylC,EAAMklC,SAL3C,SAAsBva,EAA6Bi7F,GACjDuG,EAAQvG,KAKH1tJ,OAAOm6C,OAAO2P,EAAS2B,SAASgc,IAC9BtZ,GAAuC,IAAXA,GAAgB,kBAAC,IAAD,CAAKxrD,IAAKwrD,EAAOxC,IAAKghB,MAAOxe,EAAOxC,IAAKtpD,MAAO8rD,EAAOxC,OAErGkoG,GAAa,kBAAC,IAAD,CAAKlnF,MAAO,SAAUtqE,MAAO,YAGnC,WAATylC,EACC,kBAAC,IAAD,CAAU83B,SAAUnwC,EAAMmwC,SAAU93B,KAAMA,EAAMwlB,UAAWxD,EAAS6E,WAAW7mB,GAAOqmB,OAAQA,IAE9F,kBAAC,IAAD,CAAe+lG,gBAAiBD,O,6BC1CxC,yGAoBO,SAAS1oG,EAAS97B,GACvB,MAAMG,EAAS0F,IAAIjyB,SACb6+C,EAAO1f,cACPsnB,EAAWrnB,cACjB,OACE,kBAAC,IAAD,CAAKE,QAAQ,QACX,kBAAC,IAAD,CAAKyB,GAAI,CAAEhC,MAAO,QAChB,kBAAC,IAAD,CAAkBw9B,SAAUnwC,EAAMmwC,SAAU0/C,YAAa7vF,EAAMqY,KAAMqmB,OAAQ1+B,EAAM0+B,SACnF,kBAAC,IAAD,CAAgByR,SAAUnwC,EAAMmwC,SAAUzR,OAAQ1+B,EAAM0+B,UAE1D,kBAAC,IAAD,CAAK/pB,GAAI,CAAEhC,MAAO,QAChB,kBAAC,IAAD,CACEw9B,SAAUnwC,EAAMmwC,SAChBhwC,OAAQA,EACRsyB,KAAMA,EACNo9D,YAAa7vF,EAAMqY,KACnBgiB,SAAUA,EACVwD,UAAW79B,EAAM69B,gB,6BCrC3B,sOAkCA,SAAS6mG,EAAc3lG,EAAuBP,GAC5C,IAAIprD,EAAI,EACR,IAAK,IAAIhD,EAAI,EAAGA,EAAI2uD,EAAUzuD,SAAUF,EAClC2uD,EAAU3uD,GAAGo2C,MAAQgY,GAAKprD,IAEhC,OAAOA,EAQT,SAASuxJ,EAAa3kI,GACpB,OAAIA,EAAM4kI,WAEN,kBAAC,IAAD,CACE/sF,MACE,kBAAC,IAAD,gLAMF,kBAAC,IAAD,CAAQ6F,QAAS,IAAM19C,EAAM6kI,WAAYz0F,IAASA,IAAlD,wBAKF,kBAAC,IAAD,CACEyH,MACE,kBAAC,IAAD,6GAKF,kBAAC,IAAD,CAAQ6F,QAAS,IAAM19C,EAAM6kI,WAAYz0F,IAASA,IAAlD,0BAMR,SAAS00F,EAAiB9kI,GACxB,MAAMyyB,EAAO1f,cACPsnB,EAAWrnB,eACVurB,EAAUwmG,GAAe51F,mBAC9BnvC,EAAM0+B,OAAOK,UAAUzuD,OAAS,EAAI0vB,EAAM0+B,OAAOK,UAAU,GAAK,MAI5DA,EAAY,GAClB,IAAK,IAAI3uD,EAAI,EAAGA,EAAI4vB,EAAM0+B,OAAOK,UAAUzuD,SAAUF,EACnD2uD,EAAUnuD,KACR,kBAAC,IAAD,CAAUsC,IAAK8sB,EAAM0+B,OAAOK,UAAU3uD,GAAG+B,KAAMS,MAAOotB,EAAM0+B,OAAOK,UAAU3uD,GAAG+B,MAC7E6tB,EAAM0+B,OAAOK,UAAU3uD,GAAG+B,OAkBjC,MAAMi2G,EAAM7pD,EACZ,IAAIymG,EAAuC,GAC3C,MAAMC,EAAoB,GACpBC,EAAgB30J,OAAOm6C,OAAOuG,KACpC,IAAK,IAAI7gD,EAAI,EAAGA,EAAI80J,EAAc50J,SAAUF,EAC1C60J,EAAkBr0J,KAChB,kBAAC,IAAD,CAAUsC,IAAKgyJ,EAAc90J,GAAIwC,MAAOsyJ,EAAc90J,IACnD80J,EAAc90J,KAGR,MAAPg4G,GAAeA,EAAI5hE,MAAQ0+G,EAAc90J,KAC3C40J,EAAuCE,EAAc90J,IAWzD,MAAM+0J,EAAK,QAGLC,EAASh9C,EAAMA,EAAIgB,IAAM32D,EAAK4uD,2BAA6BhnD,EAASgnD,2BAA6B,EACjGziB,EAASwpB,EAAMA,EAAI7pF,IAAMk0B,EAAK6uD,2BAA6BjnD,EAASinD,2BAA6B,EACjG3hB,EAASyoB,EAAMA,EAAI5pF,IAAMi0B,EAAK8uD,2BAA6BlnD,EAASknD,2BAA6B,EACjG8jD,EAASj9C,EAAMA,EAAIr9B,IAAMt4B,EAAK+uD,2BAA6BnnD,EAASmnD,2BAA6B,EAEvG,OACE,oCACE,6BACA,kBAAC,IAAD,CAAQ5uG,MAAoB,OAAb2rD,EAAoBA,EAASpsD,KAAO,GAAIorE,SA9C3D,SAAkCnjB,GAChC,MAAMjoD,EAAOioD,EAAED,OAAOvnD,MACtB,IAAK,IAAIxC,EAAI,EAAGA,EAAI4vB,EAAM0+B,OAAOK,UAAUzuD,SAAUF,EACnD,GAAI+B,IAAS6tB,EAAM0+B,OAAOK,UAAU3uD,GAAG+B,KAAM,CAC3C4yJ,EAAY/kI,EAAM0+B,OAAOK,UAAU3uD,IACnC,MAIJ4vB,EAAMmwC,aAsCDpR,GAEU,MAAZR,GACC,kBAAC,IAAD,gBACWnpD,IAAeS,OAAO0oD,EAASsqD,IAAKs8C,GAC7C,6BAFF,cAGc/vJ,IAAeS,OAAO0oD,EAASuqD,IAAKq8C,GAChD,6BAJF,WAKW/vJ,IAAeS,OAAO0oD,EAASwqD,IAAKo8C,GAC7C,6BANF,iBAOiB/vJ,IAAeS,OAAO8pF,EAAQwlE,GAC7C,6BARF,aASa/vJ,IAAeS,OAAO+oF,EAAQumE,GACzC,6BAVF,eAWe/vJ,IAAeS,OAAO0oD,EAASjiB,IAAK6oH,GACjD,6BAZF,eAae/vJ,IAAeS,OAAOuvJ,EAAQD,GAC3C,6BAdF,eAee/vJ,IAAeS,OAAOwvJ,EAAQF,GAC3C,6BAhBF,WAiBU,kBAAC,IAAD,CAAOhxJ,MAAOoqD,EAAS8qD,OAGtB,MAAZ9qD,GACC,kBAAC,IAAD,CAAQgf,SA3Cd,SAA0CnjB,GACvB,OAAbmE,IACJA,EAAS/X,IAAM4T,EAAED,OAAOvnD,MACxBotB,EAAMmwC,aAwCkDv9D,MAAOoyJ,GACxDC,IAcX,SAASK,EAActlI,GACrB,MAAMyyB,EAAO1f,cACPsnB,EAAWrnB,cACXuyH,EAASb,EAAc1kI,EAAM0+B,OAAOK,UAAW/+B,EAAMw+B,KACrDgnG,EAAgBd,EAAc1kI,EAAM0+B,OAAOK,UAAW9N,IAAkBM,YAiB9E,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASsmB,MAAO73C,EAAM+I,MACpB,kBAAC,IAAD,KACG/I,EAAMw+B,IADT,KACgB+mG,EADhB,OAKJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY7mI,SAA4B,IAAlB8mI,EAAqB9nF,QA1BjD,WACM8nF,GAAiB,EACnB7vJ,QAAQC,KAAK,8DAIfoqB,EAAM0+B,OAAOirD,oBAAoB3pF,EAAMw+B,KACvCx+B,EAAM0+B,OAAOsqD,8BAA8Bv2D,EAAM4H,GACjDr6B,EAAMmwC,cAmBA,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAYzxC,SAAqB,IAAX6mI,EAAc7nF,QAlB1C,WACE19C,EAAM0+B,OAAOkrD,wBAAwB5pF,EAAMw+B,KAC3Cx+B,EAAM0+B,OAAOsqD,8BAA8Bv2D,EAAM4H,GACjDr6B,EAAMmwC,aAgBA,kBAAC,IAAD,SAOV,SAASs1F,EAAezlI,GACtB,MAAMyyB,EAAO1f,cACPsnB,EAAWrnB,cACXwyH,EAAgBd,EAAc1kI,EAAM0+B,OAAOK,UAAW9N,IAAkBM,YACxEm0G,EAAqC,IAA3BjzG,EAAKo0C,eAAe,GAGpC,IAAI8+D,EAAc,EAChBC,EAAiB,EACjBC,EAAc,EACdC,EAAc,EAChB,IAAK,IAAI11J,EAAI,EAAGA,EAAI4vB,EAAM0+B,OAAOK,UAAUzuD,SAAUF,EACnDu1J,GAAe3lI,EAAM0+B,OAAOK,UAAU3uD,GAAGy4G,IACzC+8C,GAAkB5lI,EAAM0+B,OAAOK,UAAU3uD,GAAG04G,IAC5C+8C,GAAe7lI,EAAM0+B,OAAOK,UAAU3uD,GAAG24G,IACzC+8C,GAAe9lI,EAAM0+B,OAAOK,UAAU3uD,GAAGi5G,IAG3C,IAAI08C,EAAY,EACdC,EAAe,EACfC,EAAY,EAOd,OANIjmI,EAAM0+B,OAAOK,UAAUzuD,OAAS,IAClCy1J,EAAYJ,EAAc3lI,EAAM0+B,OAAOK,UAAUzuD,OACjD01J,EAAeJ,EAAiB5lI,EAAM0+B,OAAOK,UAAUzuD,OACvD21J,EAAYJ,EAAc7lI,EAAM0+B,OAAOK,UAAUzuD,QAIjD,oCACE,kBAAC,IAAD,CAAOujC,QAAQ,QACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,+BAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAa2xH,KAGjB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,8BAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAapwJ,IAAeS,OAAOkwJ,EAAW,YAGlD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,iCAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAa3wJ,IAAeS,OAAOmwJ,EAAc,YAGrD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,8BAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAa5wJ,IAAeS,OAAOowJ,EAAW,YAGlD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,gCAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO9xJ,MAAO2xJ,OAInBJ,GACC,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE7tF,MACE,kBAAC,IAAD,sOAOF,kBAAC,IAAD,+BAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGziE,IAAeS,OAAOwkD,EAAS6rG,sBAAsBlmI,EAAM0+B,QAAS,YAI3E,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEmZ,MACE,kBAAC,IAAD,+OAOF,kBAAC,IAAD,8BAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGziE,IAAeS,OACdwkD,EAAS6rG,sBAAsBlmI,EAAM0+B,OAAQ,CAC3CynG,YAAY,IAEd,YAKR,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEtuF,MAAO,kBAAC,IAAD,6EAEP,kBAAC,IAAD,gCAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,SAAcziE,IAAeS,OAAOwkD,EAAS+rG,kBAAkBpmI,EAAM0+B,QAAS,eAQ1F,kBAAC,IAAD,CAAO7qB,QAAQ,QACb,kBAAC,IAAD,KACE,kBAACyxH,EAAD,CACEn1F,SAAUnwC,EAAMmwC,SAChBzR,OAAQ1+B,EAAM0+B,OACdF,IAAKvN,IAAkBC,WACvBnoB,KAAM,gGAGR,kBAACu8H,EAAD,CACEn1F,SAAUnwC,EAAMmwC,SAChBzR,OAAQ1+B,EAAM0+B,OACdF,IAAKvN,IAAkBE,SACvBpoB,KACE,wLAIJ,kBAACu8H,EAAD,CACEn1F,SAAUnwC,EAAMmwC,SAChBzR,OAAQ1+B,EAAM0+B,OACdF,IAAKvN,IAAkBG,SACvBroB,KAAM,4FAGR,kBAACu8H,EAAD,CACEn1F,SAAUnwC,EAAMmwC,SAChBzR,OAAQ1+B,EAAM0+B,OACdF,IAAKvN,IAAkBI,WACvBtoB,KACE,yHAIJ,kBAACu8H,EAAD,CACEn1F,SAAUnwC,EAAMmwC,SAChBzR,OAAQ1+B,EAAM0+B,OACdF,IAAKvN,IAAkBK,MACvBvoB,KAAM,wFAGR,kBAACu8H,EAAD,CACEn1F,SAAUnwC,EAAMmwC,SAChBzR,OAAQ1+B,EAAM0+B,OACdF,IAAKvN,IAAkBhjB,SACvBlF,KACE,sIASP,SAASs9H,EAAermI,GAC7B,MAAMyyB,EAAO1f,cACPsnB,EAAWrnB,eACVszH,EAAuBC,GAA4Bp3F,oBAAS,IAC5Dq3F,EAAgBC,GAAqBt3F,oBAAS,IAC9Cu3F,EAA0BC,GAA+Bx3F,oBAAS,GAQzE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,qBACA,kBAAC,IAAD,cACSnvC,EAAM0+B,OAAOK,UAAUzuD,OADhC,MAC2C0vB,EAAM0+B,OAAOvC,KADxD,cAGA,kBAAC,IAAD,CAAS0b,MAAO,kBAAC,IAAD,yEACd,8BACE,kBAAC,IAAD,CAAQn5C,SAAUsB,EAAM0+B,OAAOwpD,aAAcxqC,QAdrD,WACM19C,EAAM0+B,OAAOwpD,eACjBloF,EAAM0+B,OAAO2pD,qBACbroF,EAAMmwC,cAWA,mBAKJ,6BACA,kBAAC,IAAD,CAAS0H,MAAO,kBAAC,IAAD,uEACd,8BACE,kBAAC,IAAD,CAAQn5C,SAAU+zB,EAAKl+C,MAAMijD,GAAG,GAAIkmB,QAAS,IAAM6oF,GAAyB,IAA5E,kBAKJ,kBAAC,IAAD,CACEp2F,SAAUnwC,EAAMmwC,SAChBzR,OAAQ1+B,EAAM0+B,OACdnqB,KAAM+xH,EACN9xH,QAAS,IAAM+xH,GAAyB,MAGxClsG,EAAS8tD,YAAY,qBACrB,oCACE,kBAAC,IAAD,CACEtwC,MAAO,kBAAC,IAAD,gFAEP,8BACE,kBAAC,IAAD,CAAQn5C,SAAU+zB,EAAKl+C,MAAMijD,GAAG,GAAIkmB,QAAS,IAAM+oF,GAAkB,IAArE,iBAKJ,kBAAC,IAAD,CACEt2F,SAAUnwC,EAAMmwC,SAChBzR,OAAQ1+B,EAAM0+B,OACdnqB,KAAMiyH,EACNhyH,QAAS,IAAMiyH,GAAkB,MAKvC,6BAEA,kBAAC9B,EAAD,CAAcC,WAAY8B,EAA0B7B,WAAY8B,IAC/DD,EACC,kBAAC5B,EAAD,CAAkB30F,SAAUnwC,EAAMmwC,SAAUzR,OAAQ1+B,EAAM0+B,SAE1D,kBAAC+mG,EAAD,CAAgBt1F,SAAUnwC,EAAMmwC,SAAUzR,OAAQ1+B,EAAM0+B,Y,6BChehE,4HAsBA,SAASkoG,EAAkB5mI,GACzB,MAAMyyB,EAAO1f,cAUb,OACE,kBAAC,IAAD,CAAS8kC,MAAOziE,IAAeoB,YAAYwpB,EAAMyd,OAC/C,8BACE,kBAAC,IAAD,CAAQ/e,SAAU+zB,EAAKl+C,MAAMijD,GAAGx3B,EAAMyd,MAAOigC,QAAS,KAAMmpF,OAZ7CppH,EAYyDzd,EAAMyd,KAZjD0e,EAYuDn8B,EAAMm8B,UAX1F1J,EAAKl+C,MAAMijD,GAAG/Z,KAIlBghB,YAAkBhM,EAAMzyB,EAAM0+B,OAAQvC,GACtCn8B,EAAMmwC,WACNnwC,EAAMwU,YAPR,IAAqBiJ,EAAc0e,IAY7B,IACIn8B,EAAMm8B,QAcX,SAAS2qG,EAAuB9mI,GACrC,MAAMyyB,EAAO1f,cACP4rB,EAAmB7oD,KAAK+mC,MAAM7c,EAAM0+B,OAAOvC,KAAOnrB,IAAqBa,mBAEvEk1H,EAAc/1H,IAAqBY,kBAAoB97B,KAAKg1B,IAD3C,KAC+D6zB,GAGtF,IAAIpiB,EAAO,EACX,IAAK,IAAInsC,EAAI,EAAGA,EAAI,IAAKA,EACvBmsC,GAAQzmC,KAAKg1B,IANQ,KAMY6zB,EAAmBvuD,GAEtD,MAAM42J,EAAgBh2H,IAAqBY,kBAAoB2K,EAGzD0qH,EAAUx0G,EAAKl+C,MAAM2yJ,UAAUl2H,IAAqBY,mBAAmBtH,WAC7E,IAAI68H,EAAS,EAEb,IADA5qH,EAAOzmC,KAAKg1B,IAbW,KAaS6zB,GACzBwoG,EAAS,MAEV5qH,GAAQ0qH,IAFM,CAGlB,MAAMG,EAAetxJ,KAAKg1B,IAjBL,KAiByB6zB,EAAmBwoG,GACjE,GAAI5qH,EAAO6qH,EAAeH,EACxB,MAEA1qH,GAAQ6qH,IAERD,EAEJ,MAAME,EAAiBr2H,IAAqBY,kBAAoB2K,EAEhE,OACE,kBAAC,IAAD,CAAOhI,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,4EACA,kBAAC,IAAD,CAAKtB,QAAQ,OAAOC,WAAW,UAC7B,kBAAC,IAAD,uBACA,kBAACyzH,EAAD,CACEpyH,QAASxU,EAAMwU,QACf27B,SAAUnwC,EAAMmwC,SAChBzR,OAAQ1+B,EAAM0+B,OACdjM,KAAMA,EACNhV,KAAMspH,EACN5qG,KAAMnrB,IAAqBa,oBAE7B,kBAAC+0H,EAAD,CACEpyH,QAASxU,EAAMwU,QACf27B,SAAUnwC,EAAMmwC,SAChBzR,OAAQ1+B,EAAM0+B,OACdjM,KAAMA,EACNhV,KAAMupH,EACN7qG,KAA+C,EAAzCnrB,IAAqBa,oBAE7B,kBAAC+0H,EAAD,CACEpyH,QAASxU,EAAMwU,QACf27B,SAAUnwC,EAAMmwC,SAChBzR,OAAQ1+B,EAAM0+B,OACdjM,KAAMA,EACNhV,KAAM4pH,EACNlrG,KAAMgrG,EAASn2H,IAAqBa,wB,25CClFvC,MAAMiqB,SA2DXzmD,YAAY4wB,EAAkB,IAAI,4BA1D3B,IA0D2B,4BAzD3BurB,6CAAWG,aAyDgB,mCAxDpB,IAAIkhC,yCAAS,CAAE1gF,KAAM,yBAwDD,kCAvDmB,IAuDnB,+BAtDe,IAsDf,gCAnDb,IAmDa,gCAjDiB,IAiDjB,sCAhDlB,GAgDkB,iCA9CtB,GA8CsB,kCA7CrB,GA6CqB,oCA5CnB,GA4CmB,6BArC1B,GAqC0B,8BApCzB,GAoCyB,6BAnC1B,GAmC0B,8BAlCzB,GAkCyB,6BAjC1B,GAiC0B,8BAhCzB,GAgCyB,gCA9BvB,GA8BuB,gCArBb4oD,MAAMxqD,OAAOizB,KAAKg8B,mDAAkBlvD,QAAQwuG,KAAK,IAqBpC,6BAnB1B,SAmB0B,+BAlBzB,GAkByB,+BAZY,CAC5C,CAACn7E,yDAASiqB,OAAQ,EAClB,CAACjqB,yDAAS4pB,WAAY,EACtB,CAAC5pB,yDAAS2U,UAAW,IAAI2jB,4CAAY,CACnCC,IAAKv4B,yDAAS2U,SACd6jB,KAAMnrB,+CAAqBa,oBAE7B,CAAClO,yDAAS+pB,UAAW,EACrB,CAAC/pB,yDAASmqB,QAAS,EACnB,CAACnqB,yDAASqqB,UAAW,IAIrB14C,KAAKnD,KAAO8zB,EAAO9zB,KAAO8zB,EAAO9zB,KAAO,GACxCmD,KAAKowC,KAAOzf,EAAOyf,KAAOzf,EAAOyf,KAAO8L,6CAAWG,YAGnDr8C,KAAKV,iBAAmB,IAAIR,0CAAQ,GACpCkB,KAAKT,kBAAoB,IAAIT,0CAAQ,GACrCkB,KAAKR,iBAAmB,IAAIV,0CAAQ,GACpCkB,KAAKP,kBAAoB,IAAIX,0CAAQ,GAErCkB,KAAK4pD,WAAa,CAChB,CAACv7B,yDAASiqB,OAAQ,EAClB,CAACjqB,yDAAS4pB,WAAY,EACtB,CAAC5pB,yDAAS2U,UAAW,IAAI6mB,2CAAU,CACjC1M,KAAMxsB,EAAOwsB,KACboJ,SAAUvmD,KACV4mD,IAAKv4B,yDAAS2U,SACd6jB,KAAMnrB,+CAAqBU,uBAE7B,CAAC/N,yDAAS+pB,UAAW,EACrB,CAAC/pB,yDAASmqB,QAAS,EACnB,CAACnqB,yDAASqqB,UAAW,GAGvB14C,KAAK8pB,OAGPA,OAEE,MAAMmH,EAAegsB,6CAAsBj9C,KAAKowC,MAChD,QAAqBxlB,IAAjBqG,EAA4B,MAAM,IAAInG,MAAO,sBAAqB9qB,KAAKowC,SAE3E,OADApwC,KAAKixB,aAAeA,EACZjxB,KAAKowC,MACX,KAAK8L,6CAAWC,OACdn8C,KAAKgyJ,MAAQ,IACbhyJ,KAAK44G,OAAS,GACd54G,KAAKiyJ,OAAS,IACdjyJ,KAAKkyJ,MAAQ,GACblyJ,KAAKmyJ,OAAS,IACdnyJ,KAAK83G,QAAU,CACbxgC,SAAU,GACVD,MAAO,IAETr3E,KAAKoyJ,SAAW,CAAC,UACjB,MACF,KAAKl2G,6CAAWE,UAChB,IAAK,YACHp8C,KAAKgyJ,MAAQ,GACbhyJ,KAAK44G,OAAS,GACd54G,KAAKiyJ,OAAS,GACdjyJ,KAAKkyJ,MAAQ,GACblyJ,KAAKmyJ,OAAS,IACdnyJ,KAAK83G,QAAU,CACbxgC,SAAU,GACVD,MAAO,IAETr3E,KAAKoyJ,SAAW,CAAC,SACjB,MACF,KAAKl2G,6CAAWG,YACdr8C,KAAKgyJ,MAAQ,IACbhyJ,KAAK44G,OAAS,GACd54G,KAAKqyJ,MAAQ,GACbryJ,KAAKiyJ,OAAS,GACdjyJ,KAAKkyJ,MAAQ,GACblyJ,KAAKmyJ,OAAS,IACdnyJ,KAAK83G,QAAU,CACb3gC,MAAO,GACPh7B,OAAQ,IAEVn8C,KAAKoyJ,SAAW,CAAC,SAAU,QAC3B,MACF,KAAKl2G,6CAAWI,QACdt8C,KAAKgyJ,MAAQ,IACbhyJ,KAAK44G,OAAS,IACd54G,KAAKqyJ,MAAQ,IACbryJ,KAAKiyJ,OAAS,GACdjyJ,KAAKkyJ,MAAQ,GACblyJ,KAAKmyJ,OAAS,IACdnyJ,KAAK83G,QAAU,CACb37D,OAAQ,IAEVn8C,KAAKoyJ,SAAW,CAAC,QACjB,MACF,KAAKl2G,6CAAWK,OACdv8C,KAAKgyJ,MAAQ,GACbhyJ,KAAK44G,OAAS,IACd54G,KAAKqyJ,MAAQ,GACbryJ,KAAKiyJ,OAAS,IACdjyJ,KAAKkyJ,MAAQ,IACblyJ,KAAKmyJ,OAAS,IACdnyJ,KAAK83G,QAAU,CACb37D,OAAQ,IAEVn8C,KAAKoyJ,SAAW,CAAC,SACjB,MACF,KAAKl2G,6CAAWM,KAEdx8C,KAAK44G,OAAS,IACd54G,KAAKqyJ,MAAQ,IACbryJ,KAAKiyJ,OAAS,GACdjyJ,KAAKkyJ,MAAQ,IACblyJ,KAAKmyJ,OAAS,IACdnyJ,KAAKgyJ,MAAQ,IACbhyJ,KAAK83G,QAAU,CACbt7D,KAAM,GACN26B,MAAO,GACPh7B,OAAQ,IAEVn8C,KAAKsyJ,eAAgB,EACrB,MACF,KAAKp2G,6CAAWO,QACdz8C,KAAKgyJ,MAAQ,IACbhyJ,KAAK44G,OAAS,IACd54G,KAAKqyJ,MAAQ,IACbryJ,KAAKiyJ,OAAS,GACdjyJ,KAAKkyJ,MAAQ,IACblyJ,KAAKmyJ,OAAS,GACdnyJ,KAAK83G,QAAU,CACb1gC,OAAQ,EACRD,MAAO,IAETn3E,KAAKsyJ,eAAgB,EACrB,MACF,KAAKp2G,6CAAWQ,SACd18C,KAAKgyJ,MAAQ,IACbhyJ,KAAK44G,OAAS,IACd54G,KAAKqyJ,MAAQ,GACbryJ,KAAKiyJ,OAAS,IACdjyJ,KAAKkyJ,MAAQ,GACblyJ,KAAKmyJ,OAAS,IACdnyJ,KAAK83G,QAAU,CACb1gC,OAAQ,EACRj7B,OAAQ,GACRg7B,MAAO,IAETn3E,KAAKoyJ,SAAW,CAAC,aACjB,MACF,KAAKl2G,6CAAWS,eACd38C,KAAKgyJ,MAAQ,IACbhyJ,KAAK44G,OAAS,GACd54G,KAAKqyJ,MAAQ,IACbryJ,KAAKiyJ,OAAS,IACdjyJ,KAAKkyJ,MAAQ,GACblyJ,KAAKmyJ,OAAS,IACdnyJ,KAAK83G,QAAU,CACbvgC,UAAW,EACXp7B,OAAQ,EACRg7B,MAAO,IAETn3E,KAAKoyJ,SAAW,CAAC,SACjBpyJ,KAAKsyJ,eAAgB,EACrB,MACF,KAAKp2G,6CAAWU,SAChB,IAAK,WACH58C,KAAKgyJ,MAAQ,GACbhyJ,KAAK44G,OAAS,IACd54G,KAAKiyJ,OAAS,IACdjyJ,KAAKkyJ,MAAQ,IACblyJ,KAAKmyJ,OAAS,IACdnyJ,KAAK83G,QAAU,CACbzgC,MAAO,EACPl7B,OAAQ,GAEVn8C,KAAKoyJ,SAAW,CAAC,YACjBpyJ,KAAKsyJ,eAAgB,EACrB,MACF,KAAKp2G,6CAAWW,SACd78C,KAAKgyJ,MAAQ,IACbhyJ,KAAK44G,OAAS,IACd54G,KAAKkyJ,MAAQ,IACblyJ,KAAKmyJ,OAAS,IACdnyJ,KAAKqyJ,MAAQ,IACbryJ,KAAK83G,QAAU,CACbxgC,SAAU,EACVn7B,OAAQ,GAEVn8C,KAAKoyJ,SAAW,CAAC,UACjBpyJ,KAAKsyJ,eAAgB,EACrB,MACF,KAAKp2G,6CAAWY,SACd98C,KAAK44G,OAAS,IACd54G,KAAKmyJ,OAAS,IACdnyJ,KAAKqyJ,MAAQ,IACbryJ,KAAKgyJ,MAAQ,IACbhyJ,KAAKkyJ,MAAQ,IACblyJ,KAAKiyJ,OAAS,IACdjyJ,KAAK83G,QAAU,CACbxgC,SAAU,GACVn7B,OAAQ,IAEVn8C,KAAKoyJ,SAAW,CAAC,WACjBpyJ,KAAKsyJ,eAAgB,EACrB,MACF,KAAKp2G,6CAAWa,WACd/8C,KAAKgyJ,MAAQ,GACbhyJ,KAAK44G,OAAS,IACd54G,KAAKmyJ,OAAS,IACdnyJ,KAAKqyJ,MAAQ,GACbryJ,KAAKiyJ,OAAS,GACdjyJ,KAAKkyJ,MAAQ,GACblyJ,KAAK83G,QAAU,CACbrgC,OAAQ,GACRC,QAAS,EACTv7B,OAAQ,EACRg7B,MAAO,GAETn3E,KAAKsyJ,eAAgB,EACrB,MACF,KAAKp2G,6CAAWc,WACdh9C,KAAKiyJ,OAAS,GACdjyJ,KAAKkyJ,MAAQ,GACblyJ,KAAKmyJ,OAAS,IACdnyJ,KAAK44G,OAAS,IACd54G,KAAKqyJ,MAAQ,IACbryJ,KAAK83G,QAAU,CACbzgC,MAAO,EACPl7B,OAAQ,EACRg7B,MAAO,EACPG,SAAU,GAEZt3E,KAAKoyJ,SAAW,CAAC,cACjBpyJ,KAAKsyJ,eAAgB,EACrB,MACF,QAEE,YADAjyJ,QAAQ2nB,MAAO,sDAAqDhoB,KAAKowC,OAK/EmiH,4BACE,IAAKvyJ,KAAKsyJ,cAAe,MAAO,GAChC,OAAQtyJ,KAAKowC,MACX,KAAK8L,6CAAWM,KACd,MAAO,gCACT,KAAKN,6CAAWO,QACd,MAAO,8CACT,KAAKP,6CAAWS,eACd,MAAO,mCACT,KAAKT,6CAAWU,SAChB,IAAK,WACH,MAAO,8DACT,KAAKV,6CAAWW,SACd,MAAO,sDACT,KAAKX,6CAAWY,SACd,MAAO,4BACT,KAAKZ,6CAAWa,WACd,MAAO,6BACT,KAAKb,6CAAWc,WACd,MAAO,4CACT,QAEE,OADA38C,QAAQ2nB,MAAM,+DACP,IAIbwqI,2BACE,IAAKxyJ,KAAKsyJ,cAAe,OAAO,EAGhC,IAAIG,EAAa,EAIjB,OAHIzyJ,KAAK6yG,YAAY,0BAA0B4/C,EAC3CzyJ,KAAK6yG,YAAY,2BAA2B4/C,EAEzC/2H,+CAAqBsB,gBAAkBy1H,EAGhDC,2BACE,OAAOz3J,OAAOizB,KAAKluB,KAAK4qD,UAAU5vD,QAAUgF,KAAKwyJ,2BAKnDG,6BACE,IAAIC,EAAU,EACd,IAAK,IAAI93J,EAAI,EAAGA,EAAI4gC,+CAAqBQ,OAAOlhC,SAAUF,EAAG,CAC3D,MAAMioC,EAAOrH,+CAAqBQ,OAAOphC,GACnCytD,EAAYvoD,KAAK4pD,WAAW7mB,GAClC,KAAMwlB,aAAqBsB,4CACzB,SAGF,MAAMynC,EAAY/oC,EAAU+oC,UAEtBuhE,EACJryJ,KAAKg1B,IAAI,KAAQ87D,EAAUt0C,WAAWiI,IAAM,EAAGjlD,KAAKgyJ,OACpDxxJ,KAAKg1B,IAAI,KAAQ87D,EAAUha,SAASryB,IAAM,EAAGjlD,KAAKqyJ,OAClD7xJ,KAAKg1B,IAAI,KAAQ87D,EAAU7Z,OAAOxyB,IAAM,EAAGjlD,KAAKiyJ,QAChDzxJ,KAAKg1B,IAAI,KAAQ87D,EAAU5Z,QAAQzyB,IAAM,EAAGjlD,KAAKkyJ,OACnDU,GAAWpyJ,KAAKg1B,IAAIq9H,EAAU,KAGjB7yJ,KAAK4vD,SAApBgjG,EAAU,EAAqB,EAAsBA,EAGvDE,wBAAwBvqG,GACtBA,EAAUipC,yBAEV,IAAK,MAAMuhE,KAAY/yJ,KAAK4qD,SAC1B,GAAI5qD,KAAK4qD,SAASzvD,eAAe43J,GAAW,CAC1C,MAAMn/C,EAAO5zG,KAAK4qD,SAASmoG,GAC3B,QAAanoI,IAATgpF,EAAoB,SACxBrrD,EAAUkpC,UAAYmiB,EAAKp5G,KAAK+tD,EAAU3B,KAAK,GAAKgtD,EAAKiE,KAK/Dl0D,QAAQmmD,EAAe,EAAGD,EAAe9qG,GAKvC,GAJAiB,KAAK6pG,MAAQA,EAIC,UAAVA,EAAmB,EACjBlnG,MAAM3C,KAAKR,mBAAqBmD,MAAM3C,KAAKP,sBAC7CY,QAAQ2nB,MAAM,kDACdrU,4DACE,qHAEF3T,KAAKR,iBAAmB,IAAIV,0CAAQ,GACpCkB,KAAKP,kBAAoB,IAAIX,0CAAQ,IAEvCkB,KAAKV,iBAAmBU,KAAKR,iBAAiBoyJ,UAAU9nD,EAAepuE,+CAAqBO,oBAC5Fj8B,KAAKT,kBAAoBS,KAAKP,kBAAkBmyJ,UAAU9nD,EAAepuE,+CAAqBO,oBAC9Fj8B,KAAKR,iBAAmB,IAAIV,0CAAQ,GACpCkB,KAAKP,kBAAoB,IAAIX,0CAAQ,GAIjCkB,KAAKV,iBAAiB+iD,GAAG,KAC3BriD,KAAKgzJ,QAAS,GAIhB,IAAIC,EAAiB,EACrB,IAAK,MAAMC,KAAalzJ,KAAK0mD,QAAS,CACpC,MAAM0C,EAASppD,KAAK0mD,QAAQwsG,GACb,IAAX9pG,IACAA,aAAkBzC,8CACpBssG,GAAkB7pG,EAAOzF,QAAQmmD,EAAc/qG,EAAaiB,QAGhEA,KAAKP,kBAAoBO,KAAKP,kBAAkBsoC,KAAKkrH,GAGrDjzJ,KAAKmzJ,wBACLnzJ,KAAKozJ,qBAAqBtpD,GAG1B9pG,KAAKg5G,YAA6B,KAAflP,EACnB9pG,KAAKg5G,WAAax4G,KAAKqC,IAAI,EAAG7C,KAAKg5G,YAGnC,MAAMq6C,EAAiBt0J,EAAY8sG,oBACjCynD,EAAiC,EAAjBD,EAMlB,YALIA,EAAiB,IACnBrzJ,KAAKg5G,YAAcq6C,EAAiBvpD,EACpC9pG,KAAK+4G,WAAau6C,EAAgBxpD,IAOtC,IAAI/9E,EAAM/rB,KAAKuzJ,iBAAiBzpD,EAAc/qG,GAC1C0mD,MAAMq3B,QAAQ/wD,KAChB/rB,KAAKR,iBAAmBQ,KAAKR,iBAAiBuoC,KAAKhc,EAAI,IACvD/rB,KAAKP,kBAAoBO,KAAKP,kBAAkBsoC,KAAKhc,EAAI,KAI3DA,EAAM/rB,KAAKwzJ,gBAAgB1pD,EAAc/qG,GACrC0mD,MAAMq3B,QAAQ/wD,KAChB/rB,KAAKR,iBAAmBQ,KAAKR,iBAAiBuoC,KAAKhc,EAAI,IACvD/rB,KAAKP,kBAAoBO,KAAKP,kBAAkBsoC,KAAKhc,EAAI,KAK7DonI,wBAEE,MAAMr7C,EAAU93G,KAAK83G,QACnBs6C,EAAWpyJ,KAAKoyJ,SAGlB,IAAK,IAAIt3J,EAAI,EAAGA,EAAI4gC,+CAAqBQ,OAAOlhC,SAAUF,EAGxD,GAAIkF,KAAK4pD,WAAWluB,+CAAqBQ,OAAOphC,cAAe+uD,2CAAW,CACxE,MAAM4pG,EAAKzzJ,KAAK4pD,WAAWluB,+CAAqBQ,OAAOphC,IACvD,GAAW,IAAP24J,EAAU,SACd,IAAK,MAAM52J,KAAQi7G,EACbA,EAAQ38G,eAAe0B,IACzB42J,EAAGniE,UAAUz0F,GAAMkhF,gBAKvB,IAAK,IAAI21E,EAAM,EAAGA,EAAMtB,EAASp3J,SAAU04J,EACzCD,EAAGniE,UAAU8gE,EAASsB,IAAM31E,gBAI9B01E,EAAGniE,UAAH,SAAyBvT,gBACzB01E,EAAGniE,UAAH,OAAuBvT,gBACvB01E,EAAGniE,UAAH,QAAwBvT,gBACxB01E,EAAGniE,UAAH,WAA2BvT,iBAMjCq1E,qBAAqBtpD,EAAe,GAElC,IAAK,MAAMjtG,KAAQmD,KAAK4qD,SACtB,GAAI5qD,KAAK4qD,SAASzvD,eAAe0B,GAAO,CACtC,MAAMqrD,EAAUloD,KAAK4qD,SAAS/tD,GAC9B,QAAgB+tB,IAAZs9B,EAAuB,SAC3B,IAAI8d,EAA8B,KAArB13C,mEAAa,EAAG,GAC7B,GAAe,IAAX03C,EAAc,SAGhBhmE,KAAKowC,OAAS8L,6CAAWS,gBACzB38C,KAAKowC,OAAS8L,6CAAWY,UACzB98C,KAAKowC,OAAS8L,6CAAWW,WAEzBmpB,GAAU,GAEZA,GAAU8jC,EACV5hD,EAAQy1B,KAAO3X,EACf9d,EAAQ21B,KAAO7X,EACf9d,EAAQ21B,IAAMr9E,KAAK+tB,IAAI25B,EAAQ21B,IAAK,OACpC31B,EAAQy1B,IAAMn9E,KAAKqC,IAAIqlD,EAAQy1B,IAAK,OAM1C41E,iBAAiBzpD,aAAe,EAAG/qG,aACjC,IAAIG,QAAU,EACZC,SAAW,EAIb,GAHAa,KAAK2yJ,6BAGc,WAAf3yJ,KAAK6pG,MACP,IAAK,IAAI/uG,EAAI,EAAGA,EAAI4gC,+CAAqBQ,OAAOlhC,SAAUF,EAAG,CAC3D,MAAMioC,EAAOrH,+CAAqBQ,OAAOphC,GACzC,KAAMkF,KAAK4pD,WAAW7mB,aAAiB8mB,4CACrC,SAEF,MAAMtB,EAAYvoD,KAAK4pD,WAAW7mB,GAClC,GAAkB,IAAdwlB,EACJ,IAAK,MAAMmpC,KAAWnpC,EAAU+oC,UAC9B,GAAI/oC,EAAU+oC,UAAUn2F,eAAeu2F,GAAU,CAC/C,MAAMnqC,EAAMgB,EAAU+oC,UAAUI,GAChCnqC,EAAI+2B,IAAM,GAMlB,IAAK,IAAIxjF,EAAI,EAAGA,EAAI4gC,+CAAqBQ,OAAOlhC,SAAUF,EAAG,CAC3D,MAAMioC,KAAOrH,+CAAqBQ,OAAOphC,GACnCsuD,OAASppD,KAAK0mD,QAAQ3jB,MAC5B,GAAe,IAAXqmB,OAAJ,CAEA,GAAIppD,KAAK4pD,WAAW7mB,gBAAiB8mB,2CAAW,CAC9C,MAAMtB,UAAYvoD,KAAK4pD,WAAW7mB,MAClC,GAAkB,IAAdwlB,UAAiB,SAErB,OAAQvoD,KAAK6pG,OACX,IAAK,WAAY,CAEf,IAAK,MAAMnY,KAAWnpC,UAAU+oC,UAAW,CACzC,IAAK/oC,UAAU+oC,UAAUn2F,eAAeu2F,GAAU,SAClD,MAAMnqC,EAAMgB,UAAU+oC,UAAUI,GAChC,IAAIiiE,EAAS,EACTC,EAAS,EACTrrG,UAAUE,oBAAsBxtD,OAAOizB,KAAKluB,KAAK83G,SAASj3E,SAAS6wD,KAGvEiiE,EAASpsG,EAAIwB,IAAMrtB,+CAAqBO,mBAAqB6tE,aAG3D8pD,EADa,cAAXliE,EACOiiE,EAEAnzJ,KAAK4qB,OAAOm9B,UAAU1B,KAAO0B,UAAUkpC,UAAYva,+CAAcwa,IAE5EiiE,EAASnzJ,KAAK+tB,IAAIolI,EAAQC,GACtBD,EAAS,IACXpsG,EAAItC,KAAO0uG,EACXx0J,UAAYw0J,EAASpsG,EAAII,OAE3B3nD,KAAK8yJ,wBAAwBvqG,YAI/B,MAAMsrG,EAAkD,GACxD,IAAK,MAAMniE,KAAWnpC,UAAU+oC,UAAW,CACzC,IAAK/oC,UAAU+oC,UAAUn2F,eAAeu2F,GAAU,SAClD,IAAKnpC,UAAUE,qBAAuBxtD,OAAOizB,KAAKluB,KAAK83G,SAASj3E,SAAS6wD,GAAU,SACnF,MAAMnqC,EAAMgB,UAAU+oC,UAAUI,GAG1BunB,EAASj5G,KAAK83G,QAAQpmB,GAC5B,QAAe9mE,IAAXquF,EAAsB,MAAM,IAAInuF,MAAO,WAAU4mE,mBACrDnqC,EAAIwB,IAAMkwD,EAAS1wD,UAAUurG,iBAC7B,IAAIH,EAASpsG,EAAIwB,IAAMrtB,+CAAqBO,mBAAqB6tE,aACjE,MAAM8pD,EAASpzJ,KAAK4qB,OAAOm9B,UAAU1B,KAAO0B,UAAUkpC,UAAYva,+CAAcwa,IAChFiiE,EAASnzJ,KAAK+tB,IAAIolI,EAAQC,GACtBD,EAAS,IAAGE,EAASniE,GAAWiiE,GAItC,IAAII,EAAW,KACf,IAAK,MAAMriE,KAAWmiE,EAAU,CAC9B,MAAMF,EAASE,EAASniE,GACxB,QAAe9mE,IAAX+oI,EAAsB,MAAM,IAAI7oI,MAAO,yCAC3C,MAAMmuF,EAASj5G,KAAK83G,QAAQpmB,GAC5B,QAAe9mE,IAAXquF,EAAsB,MAAM,IAAInuF,MAAO,WAAU4mE,mBACrD,MAAMppD,EAAMqrH,EAAS16C,EACjB3wE,EAAMyrH,IAAUA,EAAWzrH,GAIjC,IAAK,MAAMopD,KAAWmiE,EAAU,CAC9B,MAAM56C,EAASj5G,KAAK83G,QAAQpmB,GAC5B,QAAe9mE,IAAXquF,EAAsB,MAAM,IAAInuF,MAAO,WAAU4mE,mBACrDmiE,EAASniE,GAAWqiE,EAAW96C,EAIjC,IAAI+6C,EAAY,EAChB,IAAK,MAAMtiE,KAAWmiE,EAAU,CAC9B,MAAMF,EAASE,EAASniE,GACxB,QAAe9mE,IAAX+oI,EAAsB,MAAM,IAAI7oI,MAAO,yCAC3CkpI,GAAaL,EAASz8E,+CAAcwa,GAItC,MAAMuiE,EAAY1rG,UAAU1B,KAAO0B,UAAUkpC,SAC7C,GAAIuiE,EAAYC,EACd,IAAK,MAAMviE,KAAWmiE,EAAU,CAC9B,MAAMF,EAASE,EAASniE,GACxB,QAAe9mE,IAAX+oI,EAAsB,MAAM,IAAI7oI,MAAO,yCAC3C+oI,EAASniE,GAAWlxF,KAAK4qB,MAAOuoI,EAASM,EAAaD,GAK1D,IAAK,MAAMtiE,KAAWmiE,EAAU,CAC9B,IAAKtrG,UAAUM,wBAAwB6oC,GAAU,SACjD,MAAMnqC,EAAMgB,UAAU+oC,UAAUI,GAC1BiiE,EAASE,EAASniE,GACxB,QAAe9mE,IAAX+oI,EAAsB,MAAM,IAAI7oI,MAAO,yCAC3C+oI,EAASniE,GAAWlxF,KAAKqC,IAAI,EAAG8wJ,EAASpsG,EAAItC,KAI/C,IAAK,MAAMysC,KAAWmiE,EAAU,CAC9B,MAAMtsG,EAAMgB,UAAU+oC,UAAUI,GAC1BiiE,EAASE,EAASniE,GACxB,QAAe9mE,IAAX+oI,EAAsB,MAAM,IAAI7oI,MAAO,yCAC3Cy8B,EAAItC,KAAO0uG,EACXx0J,UAAYw0J,EAASpsG,EAAII,MAE3B,MAEF,IAAK,aAIH,GAHAY,UAAUurG,iBAAmB,EAGzB9zJ,KAAKoyJ,SAASp3J,OAAS,EAAG,CAC5B,MAAMusD,EAAMgB,UAAU+oC,UAAUtxF,KAAKoyJ,SAAS,IAGxC8B,EACJl0J,KAAK4wJ,sBAAsBxnG,QAC3BppD,KAAK4vD,SACL7wD,YAAY6sG,0BACZ5rG,KAAK4rG,0BACP,IAAIgI,EAIFA,EAFErsD,EAAIoE,OAAO,GAENnrD,KAAK+tB,IAAI2lI,EAAS3sG,EAAIoE,OAAO,IAE7BuoG,EAETtgD,GAAQl4E,+CAAqBO,mBAAqB6tE,aAGlD,IAAIqqD,EAAe,EACnB,IAAK,IAAIC,EAAM,EAAGA,EAAMp0J,KAAKoyJ,SAASp3J,SAAUo5J,EAC9CD,GAAgBj9E,+CAAcl3E,KAAKoyJ,SAASgC,IAE9C,IAAK,MAAMC,KAAcr0J,KAAK83G,QAAS,CACrC,MAAMw8C,EAAUt0J,KAAK83G,QAAQu8C,QACbzpI,IAAZ0pI,IACJH,GAAgBj9E,+CAAcm9E,GAAcC,GAG9C,GAAIH,EAAe,EAAG,CACpB,MAAMP,EAASpzJ,KAAK4qB,OAAOm9B,UAAU1B,KAAO0B,UAAUkpC,UAAY0iE,GAClEvgD,EAAOpzG,KAAK+tB,IAAIqlI,EAAQhgD,GAGtBA,EAAO,IACTA,EAAO,GAITrrD,UAAUurG,kBAAoBlgD,GAAQl4E,+CAAqBO,mBAAqB6tE,cAGhF,IAAIyqD,EAAiB,EACrB,IAAK,MAAMF,KAAcr0J,KAAK83G,QAC5B,GAAI93G,KAAK83G,QAAQ38G,eAAek5J,GAAa,CAC3C,MAAMp7C,EAASj5G,KAAK83G,QAAQu8C,GAC5B,QAAezpI,IAAXquF,EAAsB,SAC1B,MAAMlB,EAAMkB,EAASrF,EACjBrrD,UAAU+oC,UAAU+iE,GAAYpvG,IAAM8yD,IACxCw8C,EAAiB/zJ,KAAK+tB,IAAIgmI,EAAgBhsG,UAAU+oC,UAAU+iE,GAAYpvG,IAAM8yD,IAUtF,GANIw8C,GAAkB,IACpBA,EAAiB,EACjB3gD,EAAO,GAIL2gD,EAAiB,GAAK3gD,EAAO,EAAG,CAClC,IAAK,MAAMygD,KAAcr0J,KAAK83G,QAAS,CACrC,MAAMmB,EAASj5G,KAAK83G,QAAQu8C,GAC5B,QAAezpI,IAAXquF,EAAsB,SAC1B,MAAMu7C,EAAkBv7C,EAASrF,EAAO2gD,EACxChsG,UAAU+oC,UAAU+iE,GAAYpvG,KAAOuvG,EACvCjsG,UAAU+oC,UAAU+iE,GAAYh2E,IAAM,EACtC91B,UAAU+oC,UAAU+iE,GAAYh2E,KAC9Bm2E,GAAmB94H,+CAAqBO,mBAAqB6tE,cAEjE,IAAK,IAAI9tG,EAAI,EAAGA,EAAIgE,KAAKoyJ,SAASp3J,SAAUgB,EAC1CusD,UAAU+oC,UAAUtxF,KAAKoyJ,SAASp2J,IAAIipD,KAAO2uD,EAAO2gD,EACpDhsG,UAAU+oC,UAAUtxF,KAAKoyJ,SAASp2J,IAAIyhF,IACpCr0B,OAAOuqD,aAAah4D,kDAAkBE,UAAY,GAClDr7C,KAAKg1B,IAAIx1B,KAAKglD,YAAYC,IAAKjlD,KAAK44G,QACpCp4G,KAAKg1B,IAAI+yB,UAAU+oC,UAAV,QAA+BrsC,IAAKjlD,KAAKkyJ,OAAS,SAG/D,IAAK,MAAMmC,KAAcr0J,KAAK83G,QACxB93G,KAAK83G,QAAQ38G,eAAek5J,KAC9B9rG,UAAU+oC,UAAU+iE,GAAYh2E,IAAM,GAM5C,MAAMo2E,EAAW7gD,EAAO2gD,GAAmB74H,+CAAqBO,mBAAqB6tE,cACrF,IAAK,IAAI4qD,EAAO,EAAGA,EAAO10J,KAAKoyJ,SAASp3J,SAAU05J,EAChDnsG,UAAU+oC,UAAUtxF,KAAKoyJ,SAASsC,IAAOr2E,IAAMo2E,OAMjD,IAAK,MAAMJ,KAAcr0J,KAAK83G,QAC5BvvD,UAAU+oC,UAAU+iE,GAAYh2E,IAAM,EAG1C,MAEF,IAAK,OAEH,IAAK,MAAMqT,WAAWnpC,UAAU+oC,UAC9B,GAAI/oC,UAAU+oC,UAAUn2F,eAAeu2F,SAAU,CAC/C,MAAMnqC,IAAMgB,UAAU+oC,UAAUI,SAChC,GAAInqC,IAAIM,MAAQ,IAAuB,IAAlBN,IAAIS,OAAO,GAAc,CAC5CT,IAAI62B,IAAM,EACV,SAIF,MAAMu2E,eAAiB30J,KAAK8wJ,kBAAkB1nG,QACxCwrG,kBAAoB50J,KAAK60J,wBAAwB,GACjDC,aAAe90J,KAAK+0J,gBAAgBxtG,KAGpCytG,YAAcztG,IAAIi2B,iBACxB,IAAI31B,MACJ,GAAIN,IAAIyE,UAAW,CACjB,MAAM4nD,EAAOrsD,IAAI82B,IAMX42E,EAAYD,YACZE,EAAgBthD,EAChBuhD,GACH5tG,IAAIk2B,IAAM,MACXq3E,aACAH,eACA51J,YAAYotG,qBACZyoD,kBACA50J,KAAKmsG,qBACDipD,EAAc50J,KAAK60J,KAAKH,EAAgBC,GAC9C,IAAIG,EACoB,IAApBH,GAAyC,IAAhBC,EACL,IAAlBF,EACFI,EAAe,GAEfA,EAAe/tG,IAAII,MAAQqtG,YAC3B30J,QAAQC,KAAM,kFAGhBg1J,EAAeL,EAAYG,EAAc7tG,IAAII,MAK/CJ,IAAIi3B,eAAiB82E,EAErBztG,MAAQytG,OACC/tG,IAAIuE,UACbjE,MAAQN,IAAII,MAAQqtG,YACXhoI,gEAASu6B,IAAIM,QACtBA,MAASN,IAAIM,MAAiBJ,QAAQ,MAAOF,IAAII,MAAQ,IACzDE,MAAQD,KAAKC,QAEbA,MAAQN,IAAIM,MAId,IAAIovD,OAAS,EACTpvD,MAAQN,IAAII,MAEVE,MAAQN,IAAII,MAAQqtG,cACtB/9C,OAASz2G,KAAKg1B,IAAIw/H,aAAentG,MAAQN,IAAII,OAAQ,IAE9CE,MAAQN,IAAII,QAEnBsvD,OADEpvD,OAAS,EACF,KAGAN,IAAII,MAAQE,OAIzB,MAAM0tG,SACHhuG,IAAIk2B,IAAM,MACXq3E,aACA79C,OACA09C,eACA51J,YAAYotG,qBACZyoD,kBACA50J,KAAKmsG,qBACP,IAAIqpD,QACJ,GAAIxoI,gEAASu6B,IAAIS,OAAO,IAAK,CAE3B,IAAIosG,IAAO7sG,IAAIS,OAAO,GAAcP,QAAQ,OAAQ8tG,QAAU,IAC9DnB,IAAMA,IAAI3sG,QAAQ,QAASF,IAAI82B,IAAM,IACrC,IACEm3E,QAAU5tG,KAAKwsG,KACf,MAAOtvG,GACPnxC,4DACE,kDACE4zC,IAAI1qD,KACJ,OACAmD,KAAKnD,KACL,MACAkmC,KALF,iDASFyyH,QAAU,EAEZA,QAAUh1J,KAAK+tB,IAAIgnI,QAASC,cAG5BA,SAF4B,IAAnBjuG,IAAIS,OAAO,GAEVutG,QAGA/0J,KAAK+tB,IAAIgnI,QAAShuG,IAAIS,OAAO,IAKzC,GAFAwtG,QAAUA,QAAU95H,+CAAqBO,mBAAqB6tE,aAC9D0rD,QAAUh1J,KAAK+tB,IAAIg5B,IAAItC,IAAKuwG,SACxBA,QAAU,EAAG,CACfn1J,QAAQC,KAAM,yCAAwCoxF,cAAc3uD,QACpEwkB,IAAI62B,IAAM,EACV,SAEEo3E,SAAW3tG,OAAS,GACtBN,IAAItC,KAAOuwG,QACXt2J,SAAWs2J,QAAU3tG,MACrBN,IAAI62B,IAAMo3E,SAAW95H,+CAAqBO,mBAAqB6tE,eAE/DviD,IAAI62B,IAAM,EAIhB,MAEF,IAAK,SACH,IAAK,MAAMsT,WAAWnpC,UAAU+oC,UAC9B,GAAI/oC,UAAU+oC,UAAUn2F,eAAeu2F,SAAU,CAC/C,MAAMnqC,IAAMgB,UAAU+oC,UAAUI,SAChCnqC,IAAIg3B,SAAW,EACf,IAAK,IAAIk3E,KAAO,EAAGA,KAAOluG,IAAIvgB,IAAIhsC,SAAUy6J,KAAM,CAChD,MAAMzuH,IAAMugB,IAAIvgB,IAAIyuH,MACdC,OAAS1uH,IAAIsB,IAAImf,QACrB,OACAF,IAAItC,KAAOvpB,+CAAqBO,mBAAqB6tE,cAAgB,IAEvE,IAAIxhE,IAAM,EACV,IACEA,IAAMsf,KAAK8tG,QACX,MAAO5wG,GACPnxC,4DACE,0BACE4zC,IAAI1qD,KACJ,OACAmD,KAAKnD,KACL,MACAkmC,KALF,gCAQE+hB,GAEJ,SAEF,GAAIniD,MAAM2lC,KACR30B,4DACE,uCACE4zC,IAAI1qD,KACJ,OACAmD,KAAKnD,KACL,MACAkmC,KACA,kBARN,CAiBA,GALAuF,IAAMA,IAAM5M,+CAAqBO,mBAAqB6tE,aAElDviD,IAAItC,IAAM3c,MACZA,IAAMif,IAAItC,KAEA,IAAR3c,IACF,MAEF,IAAK,IAAIorH,EAAM,EAAGA,EAAM30J,YAAYK,UAAUpE,SAAU04J,EACtD,GAAI30J,YAAYK,UAAUs0J,GAAK72J,OAASmqC,IAAI3nC,IAAK,CAC/C,MAAMs2J,EAAc52J,YAAYK,UAAUs0J,GACpCkC,EAAeD,EAAY/rG,WAAW5iB,IAAIjE,MAChD,KAAM6yH,aAAwB/rG,4CAAY,CACxCxpD,QAAQ2nB,MAAO,mBAAkB2tI,EAAY94J,QAAQmqC,IAAIjE,QACzD,MAIF,GAAI6yH,EAAankE,UAAYmkE,EAAa/uG,KAGxC,MAAO,CAAC,EAAG,GACN,CACL,MAAM+sG,EAASpzJ,KAAK4qB,OAAOwqI,EAAa/uG,KAAO+uG,EAAankE,UAAYva,+CAAcwa,UACtFppD,IAAM9nC,KAAK+tB,IAAIqlI,EAAQtrH,KAEzBstH,EAAatkE,UAAUI,SAASpT,KAC9Bh2C,KAAO5M,+CAAqBO,mBAAqB6tE,cACnD8rD,EAAatkE,UAAUI,SAASzsC,KAAO3c,IACvCstH,EAAatkE,UAAUI,SAASjU,IAAMl2B,IAAIk2B,IAC1Cl2B,IAAItC,KAAO3c,IACXif,IAAIg3B,UAAYj2C,IAChBqtH,EAAY7C,wBAAwB8C,GACpC,QAKNruG,IAAIg3B,UAAY7iD,+CAAqBO,mBAAqB6tE,aAI9D,MAEF,IAAK,QACH,MACF,QACEzpG,QAAQ2nB,MAAO,kBAAiBhoB,KAAK6pG,OAGzC7pG,KAAK8yJ,wBAAwBvqG,WAK3Ba,kBAAkBzC,8CACpB3mD,KAAKglD,YAAYC,KACf,KACAzkD,KAAKg1B,IAAI4zB,OAAOuqD,aAAah4D,kDAAkBK,OAAQ,IACvDj9C,YAAYqtG,kCACZpsG,KAAKosG,oCAGX,MAAO,CAACltG,QAASC,UAInBq0J,gBAAgB1pD,EAAe,EAAG/qG,GAChC,IAAIG,EAAU,EAId,GAAmB,eAAfc,KAAK6pG,MACP,IAAK,MAAMkpD,KAAY/yJ,KAAK4qD,SAAU,CACpC,MAAMgpD,EAAO5zG,KAAK4qD,SAASmoG,GAC3B,QAAanoI,IAATgpF,IACCA,EAAKsE,IAAK,CACb,MAAMn1E,EAAO6wE,EAAKnpD,WACZrB,EAASppD,KAAK0mD,QAAQ3jB,GAC5B,GAAe,IAAXqmB,EAAc,SAGlB,MAAMysG,EAAWzsG,EAAOuqD,aAAah4D,kDAAkBE,UACjDi6G,EAAW1sG,EAAOuqD,aAAah4D,kDAAkBI,YACjDg6G,EAAS3sG,EAAOuqD,aAAah4D,kDAAkBC,YAC/CmI,EAAQ8xG,EAAWC,EAAWC,EACpC,GAAIhyG,GAAS,EACX,MAIF,MAAMiyG,EAAa,EAAIF,GAAY,IAAM/xG,GAEnCo5B,GAAY38E,KAAKg1B,IAAIqgI,EAAU,KAAQr1J,KAAKg1B,IAAIugI,EAAQ,KAAQC,EAEtEpiD,EAAKoE,cAAclO,EAAc3sB,GAC7By2B,EAAKuE,MAAQ,KACfvE,EAAKwE,cAAchvD,EAAOuqD,aAAc3zG,MAE1C,OAMN,IAAK,MAAM+yJ,KAAY/yJ,KAAK4qD,SAC1B,GAAI5qD,KAAK4qD,SAASzvD,eAAe43J,GAAW,CAC1C,MAAMn/C,EAAO5zG,KAAK4qD,SAASmoG,GACvBn/C,aAAgBppD,0CAAWopD,EAAKsE,MAClCh5G,GAAWc,KAAKi2J,eAAensD,EAAc8J,EAAM70G,IAIzD,MAAO,CAACG,EA5CS,GAgDnB+2J,eAAensD,aAAe,EAAG5hD,QAAkBnpD,aACjD,IAAIm3J,YAAc,EAClB,IAAK,IAAIp7J,EAAI,EAAGA,EAAI4gC,+CAAqBQ,OAAOlhC,SAAUF,EAAG,CAC3D,MAAMioC,KAAOrH,+CAAqBQ,OAAOphC,GACnCsuD,OAASppD,KAAK0mD,QAAQ3jB,MAC5B,GAAe,IAAXqmB,OAAc,SAClB,MAAMb,UAAYvoD,KAAK4pD,WAAW7mB,MAClC,GAAIwlB,qBAAqBsB,2CACvB,OAAQ7pD,KAAK6pG,OACX,IAAK,aAAc,CAGjB,MAAMqqD,EACJl0J,KAAK4wJ,sBAAsBxnG,OAAQ,CAAEynG,YAAY,IACjD9xJ,YAAY6sG,0BACZ5rG,KAAK4vD,SACL5vD,KAAK4rG,0BACL5rG,KAAKquI,iCACP,IAAIz6B,EAIFA,EADE1rD,QAAQyD,OAAO5oB,MAAM,GAChBviC,KAAK+tB,IAAI2lI,EAAShsG,QAAQyD,OAAO5oB,MAAM,IAEvCmxH,EAETtgD,GAAQl4E,+CAAqBO,mBAAqB6tE,aAGlD,IAAIqsD,EAAiBjuG,QAAQ2vD,IAC7B,IAAK,MAAMw8C,KAAcnsG,QAAQ4vD,QAC/B,GAAI5vD,QAAQ4vD,QAAQ38G,eAAek5J,GAAa,CAC9C,MAAMC,EAAUpsG,QAAQ4vD,QAAQu8C,GAChC8B,GAAkBj/E,+CAAcm9E,GAAcC,EAKlD,GAAI6B,EAAiB,EAAG,CACtB,MAAMvC,EAASpzJ,KAAK4qB,OAAOm9B,UAAU1B,KAAO0B,UAAUkpC,UAAY0kE,GAClEviD,EAAOpzG,KAAK+tB,IAAIqlI,EAAQhgD,GAG1BrrD,UAAUurG,kBAAoBlgD,GAAQl4E,+CAAqBO,mBAAqB6tE,cAGhF,IAAIyqD,EAAiB,EACrB,IAAK,MAAMF,KAAcnsG,QAAQ4vD,QAC/B,GAAI5vD,QAAQ4vD,QAAQ38G,eAAek5J,GAAa,CAC9C,MAAMt8C,EAAM7vD,QAAQ4vD,QAAQu8C,GAAczgD,EACtCrrD,UAAU+oC,UAAU+iE,GAAYpvG,IAAM8yD,IACxCw8C,EAAiB/zJ,KAAK+tB,IAAIgmI,EAAgBhsG,UAAU+oC,UAAU+iE,GAAYpvG,IAAM8yD,IAMtF,GAAIw8C,EAAiB,GAAK3gD,EAAO,EAAG,CAClC,IAAK,MAAMygD,KAAcnsG,QAAQ4vD,QAC/B,GAAI5vD,QAAQ4vD,QAAQ38G,eAAek5J,GAAa,CAC9C,MAAMG,EAAkBtsG,QAAQ4vD,QAAQu8C,GAAczgD,EAAO2gD,EAC7DhsG,UAAU+oC,UAAU+iE,GAAYpvG,KAAOuvG,EACvCjsG,UAAU+oC,UAAU+iE,GAAYh2E,KAC9Bm2E,GAAmB94H,+CAAqBO,mBAAqB6tE,cAInE5hD,QAAQ1tD,KAAKuoC,MAAM,IAAM6wE,EAAO2gD,EAIlCrsG,QAAQ1tD,KAAKuoC,MAAM,GAAM6wE,EAAO2gD,GAAmB74H,+CAAqBO,mBAAqB6tE,cAC7F,MAEF,IAAK,OAAQ,CAEX5hD,QAAQkuG,MAAQ,EAChB,IAAK,MAAM/B,KAAcnsG,QAAQ4vD,QAC3B5vD,QAAQ4vD,QAAQ38G,eAAek5J,KACjCnsG,QAAQkuG,OAASluG,QAAQ4vD,QAAQu8C,GAAc9rG,UAAU+oC,UAAU+iE,GAAY1sG,OAKnFO,QAAQkuG,OAAS16H,+CAAqBiB,2BAGtC,MAAMg4H,eAAiB30J,KAAK8wJ,kBAAkB1nG,QACxCwrG,kBAAoB50J,KAAK60J,wBAAwB,GACjDC,aAAe90J,KAAK+0J,gBAAgB7sG,SAGpC8sG,YAAc9sG,QAAQixD,IAAMjxD,QAAQw1B,IAC1C,IAAI71B,MACJ,GAAIK,QAAQ8D,UAAW,CACrB,MAAM4nD,EAAO1rD,QAAQ1tD,KAAKuoC,MAAM,GAM1BkyH,EAAYD,YACZE,EAAgBthD,EAChBuhD,EACJ,GACA30J,KAAKg1B,IAAI0yB,QAAQixD,IAAK,KACtB27C,aACA/1J,YAAYotG,qBACZwoD,eACAC,kBACA50J,KAAKmsG,qBACDipD,EAAc50J,KAAK60J,KAAKH,EAAgBC,GAC9C,IAAIG,EACoB,IAApBH,GAAyC,IAAhBC,EACL,IAAlBF,EACFI,EAAe,GAEfA,EAAeptG,QAAQkuG,MAAQpB,YAC/B30J,QAAQC,KAAM,kFAGhBg1J,EAAeL,EAAYG,EAAcltG,QAAQkuG,MAInDluG,QAAQs2B,eAAez7C,MAAQuyH,EAC/BztG,MAAQytG,OACH,GAAIptG,QAAQ4D,UACjBjE,MAAQK,QAAQkuG,MAAQpB,iBACnB,GAAIhoI,gEAASk7B,QAAQL,OAAQ,CAClC,MAAMwuG,YAAcnuG,QAAQL,MACR,IAAhBK,QAAQw1B,MACVr9E,QAAQ2nB,MAAO,iDACfkgC,QAAQw1B,IAAM,GAEhB71B,MAAQwuG,YAAY5uG,QAAQ,MAAOS,QAAQkuG,MAAQluG,QAAQixD,IAAMjxD,QAAQw1B,IAAM,IAC/E71B,MAAQD,KAAKC,YAEbA,MAAQK,QAAQL,MAGlB,IAAIovD,OAAS,EACTpvD,MAAQK,QAAQkuG,OACdvuG,MAAQK,QAAQkuG,MAAQpB,cAC1B/9C,OAAS+9C,aAAentG,MAAQK,QAAQkuG,QAI5C,MAAMb,QACJ,GACA/0J,KAAKg1B,IAAI0yB,QAAQixD,IAAK,KACtB27C,aACA/1J,YAAYotG,qBACZ3rG,KAAKg1B,IAAIyhF,OAAQ,GACjB09C,eACAC,kBACA50J,KAAKmsG,qBACP,IAAIqpD,QACJ,GAAIttG,QAAQF,OAAOjlB,MAAM,IAAM/V,gEAASk7B,QAAQF,OAAOjlB,MAAM,IAAK,CAEhE,IAAIqxH,IAAMlsG,QAAQF,OAAOjlB,MAAM,GAAG0kB,QAAQ,OAAQ8tG,SAClDnB,IAAMA,IAAI3sG,QAAQ,QAASS,QAAQ1tD,KAAKuoC,MAAM,IAC9C,IACEqxH,IAAMxsG,KAAKwsG,KACX,MAAOtvG,GACPnxC,4DACE,mDACEu0C,QAAQrrD,KACR,OACAmD,KAAKnD,KACL,MACAkmC,KACA,2CAEJqxH,IAAMmB,QAERC,QAAUh1J,KAAK+tB,IAAIgnI,QAASnB,UAG5BoB,QAFSttG,QAAQF,OAAOjlB,MAAM,IAAMmlB,QAAQF,OAAOjlB,MAAM,GAAK,EAEpDviC,KAAK+tB,IAAIgnI,QAASrtG,QAAQF,OAAOjlB,MAAM,KACZ,IAA5BmlB,QAAQF,OAAOjlB,MAAM,GACpB,EAEAwyH,QAERC,QAAU,IACZA,QAAU,GAEZA,QAAUA,QAAU95H,+CAAqBO,mBAAqB6tE,aAC9D0rD,QAAUh1J,KAAK+tB,IAAI25B,QAAQ1tD,KAAKuoC,MAAM,GAAIyyH,SACtCA,SAAW3tG,OACbK,QAAQ1tD,KAAKuoC,MAAM,IAAMyyH,QACzBU,aAAeV,QAAU3tG,MACzBK,QAAQ1tD,KAAKuoC,MAAM,GAAKyyH,SAAW95H,+CAAqBO,mBAAqB6tE,eAE7E5hD,QAAQ1tD,KAAKuoC,MAAM,GAAK,EAE1B,MAEF,IAAK,QACL,IAAK,WACL,IAAK,SACH,MACF,QACE1iC,QAAQ2nB,MAAO,kBAAiBhoB,KAAK6pG,QAK7C,OAAOqsD,YAGT9qC,mBAAmBljE,GACjB,IAAK,MAAMmC,KAAerqD,KAAK4qD,SACzB5qD,KAAK4qD,SAASzvD,eAAekvD,IAC3BnC,IAAYloD,KAAK4qD,SAASP,WACrBrqD,KAAK4qD,SAASP,GAM7B5F,QAAQA,EAA0BukD,GAChC,MAAMjqG,EAAciqG,EAAKjqG,YACnBqqD,EAAS4/C,EAAK5/C,OACdqiD,EAAOhnD,EAAQ,GACrB,KAAOzkD,KAAKknD,SAASlsD,QAAUywG,GAC7BzrG,KAAKknD,SAAS5rD,KAAK,GAIrB,SAFE0E,KAAKknD,SAASukD,GAERA,GACN,KAAK,EAEH,IAAK,IAAI3wG,EAAI,EAAGA,EAAIsuD,EAAOK,UAAUzuD,SAAUF,EAC7CsuD,EAAOK,UAAU3uD,GAAG24G,IAAMjzG,KAAK+tB,IAA8B,KAA1B66B,EAAOK,UAAU3uD,GAAG24G,IAAYrqD,EAAO4pD,QAE5E,MAEF,KAAK,EAAG,CAEN,MAAM8F,EAAU/5G,EAAY+sG,2BAA6B9rG,KAAK8rG,2BAC9D9rG,KAAK+4G,WAAa,EAAID,EACtB94G,KAAKg5G,YAAc,EAAIF,EACvB94G,KAAK+4G,WAAa,KAAOD,EACzB94G,KAAKg5G,aAAe,EAAI1qF,mEAAa,EAAG,GAAK,KAAOwqF,EACpD,MAEF,QACEz4G,QAAQ2nB,MAAO,kCAAiCyjF,IAOtDmlD,sBAAsBxnG,EAAqBz4B,EAAmC,IAC5E,MAAMolI,EAAS3sG,EAAOuqD,aAAah4D,kDAAkBC,YAC/Ci6G,EAAWzsG,EAAOuqD,aAAah4D,kDAAkBE,UACjDi6G,EAAW1sG,EAAOuqD,aAAah4D,kDAAkBI,YACjDgI,EAAQgyG,EAASF,EAAWC,EAElC,GAAI/xG,GAAS,EAAG,OAAO,EAGvB,MAAMiyG,EAAa,EAAIF,GAAY,IAAM/xG,GAInC6vD,GAAQpzG,KAAKg1B,IAAIugI,EAAQ,IAAOv1J,KAAKg1B,IAAIqgI,EAAU,KAAQG,EAKjE,OAAIrlI,GAAUA,EAAOkgI,WAEZ,KAAsBj9C,EAJT,IAMGA,EAK3Bk9C,kBAAkB1nG,GAChB,MAAMktG,EAAe,EAAIltG,EAAOuqD,aAAah4D,kDAAkBG,UAE/D,OAAOy6G,yEAA2BD,EAAc,IAAM,KAMxDzB,wBACE,MAAM2B,EAAeh2J,KAAKg1B,IAAIx1B,KAAK+4G,UAAY,EAAG/4G,KAAKmyJ,QACjDsE,EAAgBj2J,KAAKg1B,IAAIx1B,KAAKg5G,WAAa,EAAGh5G,KAAKmyJ,QACnDuE,EAA8B,IAAnB12J,KAAK+4G,UAAkB,IAAOv4G,KAAKqC,KAAK7C,KAAKg5G,WAAa,MAASh5G,KAAK+4G,UAAW,KAEpG,MAAO,CADUv4G,KAAKg1B,IAAIghI,EAAeC,EAAgBC,EAAU,KACjDF,EAAcC,EAAeC,GAIjD3B,gBAAgBxtG,GACd,OAAO/mD,KAAKqC,IAAI,GAAM0kD,EAAIo2B,KAAO,IAAMp2B,EAAIs2B,KAAQ,KAIrDg1B,YAAYh2G,GACV,OAAiC,IAA1BmD,KAAKmrD,WAAWtuD,GAGzB85J,qBACE,MAAM5rG,EAAe3N,6CAAsBp9C,KAAKowC,MAChD,QAAqBxlB,IAAjBmgC,EAA4B,MAAM,IAAIjgC,MAAO,qBAAoB9qB,KAAKowC,SAI1E,GAAIn1C,OAAOizB,KAAK68B,EAAaI,YAAYnwD,SAAWC,OAAOizB,KAAKluB,KAAKmrD,YAAYnwD,OAC/E,IAAK,MAAMiwD,KAAYjrD,KAAKmrD,WAC1BJ,EAAaE,SAASA,GAM5B6gD,2BACE,MAAM/gD,EAAe3N,6CAAsBp9C,KAAKowC,MAChD,QAAqBxlB,IAAjBmgC,EAA4B,MAAM,IAAIjgC,MAAO,sBAAqB9qB,KAAKowC,SAE3E,OADApwC,KAAK22J,qBACE5rG,EAAa+gD,2BAGtBE,2BACE,MAAMjhD,EAAe3N,6CAAsBp9C,KAAKowC,MAChD,QAAqBxlB,IAAjBmgC,EAA4B,MAAM,IAAIjgC,MAAO,sBAAqB9qB,KAAKowC,SAE3E,OADApwC,KAAK22J,qBACE5rG,EAAaihD,2BAGtBD,2BACE,MAAMhhD,EAAe3N,6CAAsBp9C,KAAKowC,MAChD,QAAqBxlB,IAAjBmgC,EAA4B,MAAM,IAAIjgC,MAAO,sBAAqB9qB,KAAKowC,SAE3E,OADApwC,KAAK22J,qBACE5rG,EAAaghD,2BAGtBG,2BACE,MAAMnhD,EAAe3N,6CAAsBp9C,KAAKowC,MAChD,QAAqBxlB,IAAjBmgC,EAA4B,MAAM,IAAIjgC,MAAO,sBAAqB9qB,KAAKowC,SAE3E,OADApwC,KAAK22J,qBACE5rG,EAAamhD,2BAGtBD,2BACE,MAAMlhD,EAAe3N,6CAAsBp9C,KAAKowC,MAChD,QAAqBxlB,IAAjBmgC,EAA4B,MAAM,IAAIjgC,MAAO,sBAAqB9qB,KAAKowC,SAE3E,OADApwC,KAAK22J,qBACE5rG,EAAakhD,2BAGtBL,0BACE,MAAM7gD,EAAe3N,6CAAsBp9C,KAAKowC,MAChD,QAAqBxlB,IAAjBmgC,EAA4B,MAAM,IAAIjgC,MAAO,sBAAqB9qB,KAAKowC,SAE3E,OADApwC,KAAK22J,qBACE5rG,EAAa6gD,0BAGtByiC,iCACE,MAAMtjF,EAAe3N,6CAAsBp9C,KAAKowC,MAChD,QAAqBxlB,IAAjBmgC,EAA4B,MAAM,IAAIjgC,MAAO,sBAAqB9qB,KAAKowC,SAE3E,OADApwC,KAAK22J,qBACE5rG,EAAasjF,iCAGtBliC,qBACE,MAAMphD,EAAe3N,6CAAsBp9C,KAAKowC,MAChD,QAAqBxlB,IAAjBmgC,EAA4B,MAAM,IAAIjgC,MAAO,sBAAqB9qB,KAAKowC,SAE3E,OADApwC,KAAK22J,qBACE5rG,EAAaohD,qBAGtBC,kCACE,MAAMrhD,EAAe3N,6CAAsBp9C,KAAKowC,MAChD,QAAqBxlB,IAAjBmgC,EAA4B,MAAM,IAAIjgC,MAAO,sBAAqB9qB,KAAKowC,SAE3E,OADApwC,KAAK22J,qBACE5rG,EAAaqhD,kCAGtBza,uBACE,MAAM5mC,EAAe3N,6CAAsBp9C,KAAKowC,MAChD,QAAqBxlB,IAAjBmgC,EAA4B,MAAM,IAAIjgC,MAAO,sBAAqB9qB,KAAKowC,SAE3E,OADApwC,KAAK22J,qBACE5rG,EAAa4mC,uBAGtBxT,OAmBE,MAAMp5B,EAAW,IAAIyB,SACrBzB,EAASC,YAAchlD,KAAKglD,YAAYm5B,OACxCp5B,EAASoG,WAAa,GACtB,IAAK,MAAM53B,KAAKt4B,OAAOizB,KAAKluB,KAAKmrD,YAC/BpG,EAASoG,WAAW53B,GAAKvzB,KAAKmrD,WAAW53B,GAE3CwxB,EAAS+yD,QAAU,GACnB,IAAK,MAAMvkF,KAAKt4B,OAAOizB,KAAKluB,KAAK83G,SAC/B/yD,EAAS+yD,QAAQvkF,GAAKvzB,KAAK83G,QAAQvkF,GAuBrC,OArBAwxB,EAASloD,KAAOmD,KAAKnD,KACrBkoD,EAAS3U,KAAOpwC,KAAKowC,KACrB2U,EAASutG,cAAgBtyJ,KAAKsyJ,cAC9BvtG,EAASg0D,UAAY/4G,KAAK+4G,UAC1Bh0D,EAASi0D,WAAah5G,KAAKg5G,WAC3Bj0D,EAAS9zB,aAAejxB,KAAKixB,aAC7B8zB,EAASitG,MAAQhyJ,KAAKgyJ,MACtBjtG,EAAS6zD,OAAS54G,KAAK44G,OACvB7zD,EAASstG,MAAQryJ,KAAKqyJ,MACtBttG,EAASktG,OAASjyJ,KAAKiyJ,OACvBltG,EAASmtG,MAAQlyJ,KAAKkyJ,MACtBntG,EAASotG,OAASnyJ,KAAKmyJ,OACvBptG,EAAS6K,SAAW5vD,KAAK4vD,SACzB7K,EAAS8kD,MAAQ7pG,KAAK6pG,MACtB9kD,EAASiuG,OAAShzJ,KAAKgzJ,OACvBjuG,EAASzlD,iBAAmBU,KAAKV,iBAAiByoC,KAAK,GACvDgd,EAASxlD,kBAAoBS,KAAKT,kBAAkBwoC,KAAK,GACzDgd,EAASvlD,iBAAmBQ,KAAKR,iBAAiBuoC,KAAK,GACvDgd,EAAStlD,kBAAoBO,KAAKP,kBAAkBsoC,KAAK,GACzDgd,EAASmC,SAAWlnD,KAAKknD,SAAS7oD,QAClC0mD,EAASqtG,SAAWpyJ,KAAKoyJ,SAAS/zJ,QAC3B0mD,EAMT7wB,SACE,OAAOnG,0DAAe,WAAY/tB,MAOrB,gBAAC1C,GACd,OAAO8wB,0DAAiBo4B,SAAUlpD,EAAM9C,OAI5CoE,kDAAQivB,aAAa24B,SAAWA,U,6BCr9CzB,SAAS+vG,EAA2Bz4J,EAAW84J,EAAgBC,GAQpE,OAPID,GAAU,GAAKA,GAAU,IAC3Bv2J,QAAQC,KAAM,yBAAwBs2J,2CAEpCC,EAAY,GACdx2J,QAAQC,KAAM,oBAAmBu2J,2CAG5Br2J,KAAKg1B,IAAI13B,EAAG84J,GAAU94J,EAAI+4J,EAtBnC,mC,2NCyBO,MAAM7iD,EAgBXj0G,YAAY4wB,EAAkB,IAAI,aAL5B,GAK4B,0BAJf+K,IAAqBoB,wBAKtC98B,KAAKnD,KAAO8zB,EAAO9zB,KAAO8zB,EAAO9zB,KAAO,QAGxCmD,KAAKuzG,IAAM5iF,EAAOmmI,OAASnmI,EAAOmmI,OAASxoI,YAAa,GAAI,KAC5DtuB,KAAKwzG,IAAM7iF,EAAOomI,UAAYpmI,EAAOomI,UAAYzoI,YAAa,GAAI,KAClEtuB,KAAKyzG,IAAM9iF,EAAOqmI,OAASrmI,EAAOqmI,OAAS1oI,YAAa,GAAI,KAE5DtuB,KAAKkpB,IAAMyH,EAAOyW,aAAezW,EAAOyW,aAAe9Y,YAAa,GAAI,IACxEtuB,KAAKipB,IAAM0H,EAAO6R,SAAW7R,EAAO6R,SAAWlU,YAAa,GAAI,IAChEtuB,KAAKgnC,IAAMrW,EAAOsjF,WAAatjF,EAAOsjF,WAAa3lF,YAAa,GAAI,IACpEtuB,KAAK8zG,IAAMnjF,EAAOujF,WAAavjF,EAAOujF,WAAa5lF,YAAa,GAAI,IACpEtuB,KAAKy1E,IAAM9kD,EAAOwjF,WAAaxjF,EAAOwjF,WAAa7lF,YAAa,GAAI,IACpEtuB,KAAK+zG,IAAMpjF,EAAOyjF,OAASzjF,EAAOyjF,OAAS9lF,YAAa,GAAK,GAE7DtuB,KAAK4mD,IAAMj2B,EAAOi2B,IAAMj2B,EAAOi2B,IAAM,GACrC5mD,KAAKkxC,IAAMyK,IAAkBM,WAI/B0H,QAAQmmD,EAAe,EAAG1gD,GACxB,MAAMmnB,EAAO,KAAQu5B,EACnBmtD,EAAM1mF,EAAO/vE,KAAKitB,SACpBztB,KAAKgnC,KAAOupC,EAGZvwE,KAAKk3J,kBAAoBptD,EACrB9pG,KAAKk3J,kBAAoB,IAC3Bl3J,KAAK+zG,KAAOr4E,IAAqBqB,oBACjC/8B,KAAKk3J,kBAAoBx7H,IAAqBoB,wBAIhD,MAAMq6H,EAAc5mF,EAAO/vE,KAAKitB,SAC5BztB,KAAKkxC,MAAQyK,IAAkBhjB,WAEjC34B,KAAKipB,KAAOkuI,EACZn3J,KAAKgnC,KAAOmwH,EACZn3J,KAAKy1E,KAAO0hF,GAGdn3J,KAAKyzG,KAAOwjD,EACZj3J,KAAKwzG,KAAOyjD,EAERj3J,KAAKyzG,IAAMrqD,EAAOmrD,SACpBv0G,KAAKyzG,IAAMrqD,EAAOmrD,QAEhBv0G,KAAKwzG,IAAMpqD,EAAOorD,SACpBx0G,KAAKwzG,IAAMpqD,EAAOorD,QAGpB,OADex0G,KAAK+zG,IAAMjK,EAAepuE,IAAqBO,mBAIhE43E,sBAAsB90G,EAA2BwnD,GAC/C,MAAMupG,EAAS9vJ,KAAK8zG,IAAM/0G,EAAYgtG,2BAA6BxlD,EAASwlD,2BAC1EziB,EAAStpF,KAAKipB,IAAMlqB,EAAYitG,2BAA6BzlD,EAASylD,2BACtE3hB,EAASrqF,KAAKkpB,IAAMnqB,EAAYktG,2BAA6B1lD,EAAS0lD,2BACtE8jD,EAAS/vJ,KAAKy1E,IAAM12E,EAAYmtG,2BAA6B3lD,EAAS2lD,2BAClEkrD,EAAWp3J,KAAKuzG,IAAMvzG,KAAKwzG,IAAMxzG,KAAKyzG,IAAM,KAClD,IAAI7jD,EAAW,EACf,OAAQ5vD,KAAKkxC,KAGX,KAAKyK,IAAkBC,WACrBgU,EAAW,GAAMy6B,EAAS,GAAMf,EAAStpF,KAAKgnC,IAAM,GAAM8oH,EAASC,EACnE,MACF,KAAKp0G,IAAkBE,SACrB+T,EAAWy6B,EAAS,GAAMf,EAAS,IAAMtpF,KAAKgnC,IAAM+oH,EACpD,MACF,KAAKp0G,IAAkBG,SACrB8T,EAAW,GAAMy6B,EAASf,EAAS,GAAMtpF,KAAKgnC,IAC9C,MACF,KAAK2U,IAAkBI,WACrB6T,EAAW,EAAI05B,EAAStpF,KAAKgnC,IAAM,GAAM8oH,EAAS,GAAMC,EACxD,MACF,KAAKp0G,IAAkBK,MACrB4T,EAAW,IAAMy6B,EAAS,GAAMrqF,KAAKgnC,IAAM8oH,EAAS,GAAMC,EAC1D,MACF,KAAKp0G,IAAkBM,WACvB,KAAKN,IAAkBhjB,SACrBi3B,EAAW,EACX,MACF,QACEvvD,QAAQ2nB,MAAO,8BAA6BhoB,KAAKkxC,KAGrD,OAAOkmH,EAAWxnG,EAIpBlG,WAAW7qD,GACT,MAAMooC,EAAO,EAAIpoC,EAAQ,IAKzB,OAJAmB,KAAKuzG,KAAOtsE,EACZjnC,KAAKuzG,IAAM/yG,KAAK+tB,IAAI,IAAKvuB,KAAKuzG,KAC9BvzG,KAAKwzG,KAAOvsE,EACZjnC,KAAKwzG,IAAMhzG,KAAK+tB,IAAI,IAAKvuB,KAAKwzG,KACvBvsE,EAGTk3C,OACE,MAAMl1B,EAAW,IAAI+qD,EAerB,OAdA/qD,EAASpsD,KAAOmD,KAAKnD,KACrBosD,EAASsqD,IAAMvzG,KAAKuzG,IACpBtqD,EAASuqD,IAAMxzG,KAAKwzG,IACpBvqD,EAASwqD,IAAMzzG,KAAKyzG,IACpBxqD,EAAS//B,IAAMlpB,KAAKkpB,IACpB+/B,EAAShgC,IAAMjpB,KAAKipB,IACpBggC,EAASjiB,IAAMhnC,KAAKgnC,IACpBiiB,EAAS6qD,IAAM9zG,KAAK8zG,IACpB7qD,EAASwsB,IAAMz1E,KAAKy1E,IACpBxsB,EAAS8qD,IAAM/zG,KAAK+zG,IACpB9qD,EAASouG,IAAMr3J,KAAKq3J,IACpBpuG,EAASiuG,iBAAmBl3J,KAAKk3J,iBACjCjuG,EAASrC,IAAM5mD,KAAK4mD,IACpBqC,EAAS/X,IAAMlxC,KAAKkxC,IACb+X,EAGT/0B,SACE,OAAOnG,YAAe,WAAY/tB,MAIrB,gBAAC1C,GACd,OAAO8wB,YAAiB4lF,EAAU12G,EAAM9C,OAI5CoE,IAAQivB,aAAammF,SAAWA,G,6BC1KhC,8CAYO,MAAMkF,EAAkC,CAC7C,CAACh9D,IAAWM,MAAO,CACjB48D,QAAS,GACTE,WAAY,GACZE,WAAY,IAEd,CAACt9D,IAAWO,SAAU,CACpB28D,QAAS,GACTE,WAAY,GACZC,YAAa,GACbC,WAAY,IAEd,CAACt9D,IAAWS,gBAAiB,CAC3By8D,QAAS,GACTC,YAAa,GACbC,WAAY,GACZC,YAAa,GACbE,SAAU,IAEZ,CAACv9D,IAAWU,UAAW,CACrBw8D,QAAS,IACTC,YAAa,IACbC,WAAY,IACZC,YAAa,GACbC,WAAY,IACZC,SAAU,IAEZ78D,SAAU,CAERw8D,QAAS,IACTC,YAAa,IACbC,WAAY,IACZC,YAAa,GACbC,WAAY,IACZC,SAAU,IAEZ,CAACv9D,IAAWW,UAAW,CACrBu8D,QAAS,GACTC,YAAa,GACbC,WAAY,GACZC,YAAa,GACbC,WAAY,GACZC,SAAU,IAEZ,CAACv9D,IAAWY,UAAW,CACrBs8D,QAAS,GACTC,YAAa,GACbE,YAAa,GACbD,WAAY,GACZG,SAAU,IAEZ,CAACv9D,IAAWa,YAAa,CACvBq8D,QAAS,GACTC,YAAa,GACbC,WAAY,GACZC,YAAa,GACbE,SAAU,IAEZ,CAACv9D,IAAWc,YAAa,CACvBo8D,QAAS,GACTE,WAAY,IACZC,YAAa,GACbC,WAAY,IACZC,SAAU,M,6BC3Ed,oIAoBO,SAAS69C,EAAgB5sI,GAC9B,MAAMyyB,EAAO1f,eACN0K,EAAMovH,GAAW19F,mBAAS,GAE3BrQ,EAAYrhB,EAAOzd,EAAM0+B,OAAOK,UAAUzuD,OAC1Cw8J,EAAWr6G,EAAKl+C,MAAMmpC,IAAIohB,GAOhC,SAASE,IACP,GAAa,OAATvhB,GAAiBxlC,MAAMwlC,IAASA,EAAO,EACzCx0B,YAAgB,8BAEhB,GAAK6jJ,EAEE,CACL,MAAMvwH,EAAOqiB,YAAWnM,EAAMzyB,EAAM0+B,OAAQjhB,GAC5Cx0B,YACE,4FAEE7T,IAAe2B,iBAAiBwlC,EAAO,IAE3Cvc,EAAMmwC,WACNnwC,EAAMwU,eATNvrB,YAAgB,yDA2BtB,OACE,kBAAC,IAAD,CAAOsrB,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,4FACA,mBAhBJ,WACE,OAAIv8B,MAAMwlC,IAASA,EAAO,EAAU,kBAAC,IAAD,+BAElC,kBAAC,IAAD,iDAC2C,kBAAC,IAAD,CAAOtpC,MAAO2qD,OAYzD,MACA,kBAAC,IAAD,CAAK5rB,QAAQ,OAAOC,WAAW,UAC7B,kBAAC,IAAD,CACE22F,WAAW,EACXpkF,KAAK,SACLy3B,YAAY,eACZvqE,MAAO6qC,EACP8/B,SAhDR,SAAoBva,GAClB,IAAIn6B,EAAI7wB,WAAWgrD,EAAM7I,OAAOvnD,OAC5BqF,MAAM4wB,KAAIA,EAAI,GAClBgkI,EAAQhkI,IA8CFwsD,UAfR,SAAmBryB,GACK,KAAlBA,EAAMwf,SAAgBxjB,OAgBtB,kBAAC,IAAD,CAAQtgC,UAAWouI,EAAUpvF,QAAS1e,GAAtC,mB,6BC7ER,wOA0BA,SAAS+tG,IACP,MAAMt6G,EAAO1f,cACPsnB,EAAWrnB,eACVg6H,EAAUC,GAAe99F,oBAAS,GAEnC+9F,EAAiB7yG,EAAS2tG,2BAMhC,IAAImF,EAA0B,GAC9B,OAAQ9yG,EAAS3U,MACf,KAAK8L,IAAWM,KACdq7G,EAA0B,mBAC1B,MACF,KAAK37G,IAAWO,QACdo7G,EAA0B,iBAC1B,MACF,KAAK37G,IAAWS,eACdk7G,EAA0B,cAC1B,MACF,KAAK37G,IAAWU,SAChB,IAAK,WACHi7G,EAA0B,iBAC1B,MACF,KAAK37G,IAAWW,SACdg7G,EAA0B,eAC1B,MACF,KAAK37G,IAAWY,SACd+6G,EAA0B,mBAC1B,MACF,KAAK37G,IAAWa,WACd86G,EAA0B,iBAC1B,MACF,KAAK37G,IAAWc,WACd66G,EAA0B,mBAC1B,MACF,QAEE,OADAA,EAA0B,iBACnB,qCAGX,OACE,oCACE,kBAAC,IAAD,CACEt1F,MACEq1F,EACE,kBAAC,IAAD,yDACoD7yG,EAASytG,4BAG7D,IAIJ,kBAAC,IAAD,CACEnoI,MAjD2C,IAA1CpvB,OAAOizB,KAAK62B,EAAS6F,UAAU5vD,OAiDT,QAAU,UACjCotE,QAAS,IAAMuvF,GAAY,GAC3BvuI,SAAU+zB,EAAKl+C,MAAMijD,GAAG,IAEvB21G,IAGL,kBAAC,IAAD,CAAkB54H,KAAMy4H,EAAUx4H,QAAS,IAAMy4H,GAAY,MAInE,SAASG,IACP,MAAM36G,EAAO1f,cACPsnB,EAAWrnB,eACVgjH,EAAUC,GAAe9mF,oBAAS,GACnCu2F,EAAqC,IAA3BjzG,EAAKo0C,eAAe,GAC9B8B,EAAStuC,EAASzlD,iBAAiB4oC,MAAM6c,EAASxlD,mBAAmBy1B,WAE3E,IAAI+iI,GAAkB,EACtB,MAAMC,EAAqBjzG,EAAS8vG,wBAC9B2B,EAAewB,EAAmB,GAClCvB,EAAgBuB,EAAmB,GACnCtB,EAAWsB,EAAmB,GAC9BC,EAAsBD,EAAmB,GAK/C,SAASE,EAA0BlkI,GACjC,OAAOipD,YAAsB,CAC3BE,SAAUnpD,EACVopD,WAAY,KAYhB,OAnBIgzE,IACF2H,GAAkB,GAmBlB,oCACE,kBAAC,IAAD,kBACahzG,EAAS3U,KADtB,iBACyC,kBAAC,IAAD,CAAOvxC,MAAOs+C,EAAKl+C,MAAM+1B,aADlE,KAGA,6BACA,kBAAC,IAAD,CACEstC,KAAM,CACJ,CAAC,aAAcxiE,IAAeS,OAAOwkD,EAASg0D,UAAW,UACzD,CAAC,cAAej5G,IAAeS,OAAOwkD,EAASi0D,WAAY,cAG1C,IAApB++C,GACC,kBAAC,IAAD,CACEx1F,MACE,oCACE,kBAAC,IAAD,sFACA,kBAAC,IAAD,CACED,KAAM,CACJ,CAAC,mBAAoB,IAAMxiE,IAAeS,OAAOC,KAAKg1B,IAAIghI,EAAc,KAAO,UAC/E,CAAC,oBAAqB,IAAM12J,IAAeS,OAAOC,KAAKg1B,IAAIihI,EAAe,KAAO,UACjF,CAAC,oBAAqB,IAAM32J,IAAeS,OAAOC,KAAKg1B,IAAIkhI,EAAU,KAAO,eAMpF,kBAAC,IAAD,iCAAsC52J,IAAeS,OAAO03J,EAAqB,WAGrF,6BACA,kBAAC,IAAD,CACE31F,KAAM,CACJ,CAAC,WAAY,kBAAC,IAAD,CAAWzjE,MAAOkmD,EAASzlD,iBAAiB01B,cACzD,CAAC,YAAa,kBAAC,IAAD,CAAWn2B,MAAOkmD,EAASxlD,kBAAkBy1B,cAC3D,CAAC,UAAW,kBAAC,IAAD,CAAWn2B,MAAOw0F,QAGlC,6BACA,kBAAC,IAAD,CAAKz1D,QAAQ,OAAOC,WAAW,UAC7B,kBAAC,IAAD,CACE0kC,MACE,kBAAC,IAAD,wHAMF,kBAAC,IAAD,+BAAoCziE,IAAeS,OAAOwkD,EAAS6K,SAAU,UAE/E,kBAAC,IAAD,CAAYwY,QAAS,IAAMu4E,GAAY,IACrC,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAa1hH,KAAMyhH,EAAUxhH,QAAS,IAAMyhH,GAAY,IACtD,kBAAC,IAAD,8QAIE,6BACA,6BALF,mUASE,6BACA,6BAVF,gJAaE,6BACA,6BAdF,gBAe+BuX,EAA0BnzG,EAASstG,OAChE,6BAhBF,gBAiByC6F,EAA0BnzG,EAASktG,QAC1E,6BAlBF,gBAmB+BiG,EAA0BnzG,EAASmtG,OAChE,6BApBF,gBAqBgBgG,EAA0BnzG,EAASitG,UAKvD,kBAAC,IAAD,CAAKp0H,QAAQ,OAAOC,WAAW,UAC7B,kBAAC,IAAD,CACE0kC,MACE,kBAAC,IAAD,mGAKF,kBAAC,IAAD,6BAAkCziE,IAAeS,OAAOwkD,EAASC,YAAYC,IAAK,YAEpF,kBAAC,IAAD,CAAQ5lB,GAAI,CAAEkxE,GAAI,GAAKnoC,QAlG7B,WACE,MAAMm8C,EAAU,iCAChB1lC,YAAY0lC,EAAS4zC,IAAe,CAClC5xG,SAAUxB,EACVw/D,QAASA,MA8FP,cAQR,SAAS6zC,EAAS1tI,GAChB,MAAMyyB,EAAO1f,cACPsnB,EAAWrnB,cACXwpB,EAAW,GACjB,IAAK,MAAM/4B,KAAS+7B,IAAkB,CACpC,MAAMzF,EAAUyF,IAAiB/7B,GAGjC,GAAI42B,EAAS8tD,YAAY,aAA8B,WAAfpuD,EAAQ,GAC9C,SAGF,MAAM3pD,EAAI2pD,EAAQ,GACZzzB,EAAWyzB,EAAQ,GACnBwC,EAAYxC,EAAQ,GAC1B,IAAItc,EAAO,EACX,OAAQrtC,GACN,KAAK,EACHqtC,EAAOzd,EAAM0+B,OAAOK,UAAUzuD,OAASg2B,EACvC,MACF,QACEmX,EAAOnX,EAAWxwB,KAAKg1B,IAAIyxB,EAAWlC,EAASmC,SAASpsD,IAI5D,SAASstE,IACHjrB,EAAKl+C,MAAMijD,GAAG/Z,KAClBgV,EAAKl+C,MAAQk+C,EAAKl+C,MAAMipC,MAAMC,GAC9B4c,EAASN,QAAQA,EAAS,CACxB1lD,YAAao+C,EACbiM,OAAQ1+B,EAAM0+B,SAEhB1+B,EAAMmwC,YAGR3T,EAAS5rD,KACP,kBAAC,IAAD,CAASsC,IAAKuwB,EAAOo0C,MAAO9d,EAAQ,IAClC,8BACE,kBAAC,IAAD,CAAQr7B,SAAU+zB,EAAKl+C,MAAMijD,GAAG/Z,GAAOigC,QAASA,GAC7C3jB,EAAQ,GADX,MAEE,kBAAC,IAAD,CAAW5lD,MAAOspC,EAAMgV,KAAMA,QAOxC,OAAO,oCAAG+J,GASL,SAASmxG,EAAiB3tI,GAC/B,MAAMq6B,EAAWrnB,cAEjB,OACE,kBAAC,IAAD,KACE,kBAACo6H,EAAD,MACA,6BACA,kBAAC,IAAD,6BACA,kBAACM,EAAD,CAAUhvG,OAAQ1+B,EAAM0+B,OAAQyR,SAAUnwC,EAAMmwC,WAJlD,IAI+D,6BAC5D9V,EAASutG,eAAiB,kBAACmF,EAAD,S,6BCjSjC,sIA6BO,SAASa,EAAiB5tI,GAC/B,MAAMyyB,EAAO1f,cACPsnB,EAAWrnB,cACX66H,EAAYt9J,OAAOizB,KAAK62B,EAAS2B,SAAS/L,OAAQ2Q,GAAoD,IAA/BvG,EAAS2B,QAAQ4E,KACvFvoB,EAAMmsH,GAAWr1F,mBAAS0+F,EAAUv9J,OAAS,EAAIu9J,EAAU,GAAK,KAChE17J,EAAMsxJ,GAAWt0F,mBAAS,KAC1B2+F,EAAQC,GAAa5+F,mBAAwB,OAC7C6+F,EAAWC,GAAgB9+F,mBAAwB,MAC1D,GAAI9U,EAAS2tG,2BAA4B,OAAO,qCAEhD,IAAIkG,EAAyB,qCAC7B,OAAQ7zG,EAAS3U,MACf,KAAK8L,IAAWM,KACdo8G,EACE,oCACGA,EACD,6BAFF,sCAMF,MACF,KAAK18G,IAAWO,QACdm8G,EACE,oCACGA,EACD,6BAFF,iCAMF,MACF,KAAK18G,IAAWS,eACdi8G,EACE,oCACGA,EACD,6BAFF,iDAMF,MACF,KAAK18G,IAAWU,SAChB,IAAK,WACHg8G,EACE,oCACGA,EACD,6BAFF,2DAMF,MACF,KAAK18G,IAAWW,SACd+7G,EACE,oCACGA,EACD,6BAFF,oDAMF,MACF,KAAK18G,IAAWY,SACd87G,EACE,oCACGA,EACD,6BAFF,oCAMF,MACF,KAAK18G,IAAWa,WACd67G,EACE,oCACGA,EACD,6BAFF,oCAMF,MACF,KAAK18G,IAAWc,WACd47G,EACE,oCACGA,EACD,6BAFF,gDAMF,MACF,QAQE,OAPAA,EACE,oCACGA,EACD,6BAFF,yBAMK,qCAgBX,SAAS7sC,IACP,GAAe,OAAXysC,GAAiC,OAAdE,EAAvB,CACA,IACEtuG,YAAYjN,EAAM4H,EAAUhiB,EAAMlmC,EAAM27J,EAAQE,GAChD,MAAO5pI,GACPnb,YAAgBmb,EAAM,IAExBpE,EAAMwU,WAyBR,OA9CA05H,EACE,oCACGA,EACD,6BACA,6BAHF,uOAME,6BACA,6BAPF,4NA8CA,kBAAC,IAAD,CAAO35H,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,KAAa05H,GACb,kBAAC,IAAD,CAAQvwF,MAAO,CAAE3Q,OAAQ,OAASuQ,SAzBtC,SAAsBva,GACpBwhG,EAAQxhG,EAAM7I,OAAOvnD,QAwBuCu7J,aAAc91H,GACrEw1H,EAAU71F,IAAKpX,GACd,kBAAC,IAAD,CAAU1tD,IAAK0tD,EAAUhuD,MAAOguD,GAC7BA,KAIP,kBAAC,IAAD,CAAW2c,SA5Bf,SAA6Bva,GAC3BygG,EAAQzgG,EAAM7I,OAAOvnD,QA2BuBuqE,aAnKpBixF,EAmKoD/zG,EAAS3U,KAlKnF0oH,IAAQ58G,IAAWM,KACd,kBACEs8G,IAAQ58G,IAAWa,WACrB,gBACE+7G,IAAQ58G,IAAWc,WACrB,gBAEF,kBA4JH,6BACA,kBAAC,IAAD,CAAWirB,SA1Bf,SAAwBva,GACK,KAAvBA,EAAM7I,OAAOvnD,MAAcm7J,EAAU,MACpCA,EAAU/1J,WAAWgrD,EAAM7I,OAAOvnD,SAwBAk3H,WAAW,EAAMpkF,KAAK,SAASy3B,YAAa,sBACjF,kBAAC,IAAD,CACEI,SAvBN,SAA2Bva,GACE,KAAvBA,EAAM7I,OAAOvnD,MAAcq7J,EAAa,MACvCA,EAAaj2J,WAAWgrD,EAAM7I,OAAOvnD,SAsBtCyiF,UAnBN,SAAmBryB,GACK,KAAlBA,EAAMwf,SAAgB6+C,KAmBtB37E,KAAK,SACLy3B,YAAa,yBAEf,kBAAC,IAAD,CAAQO,QAAS2jD,GAAjB,oBA5KN,IAA4B+sC,I,6BCjB5B,wGAgBO,SAASX,EAAcztI,GAC5B,MAAMqgC,EAAe3N,IAAsB1yB,EAAM67B,SAASnW,MAC1D,YAAqBxlB,IAAjBmgC,EAAmC,sCACvCgQ,oBAAU,KACR,CACE,MAAMg+F,EAAatuF,SAAS6F,eAAkB5lD,EAAM65F,QAAR,YAC1B,MAAdw0C,IACFA,EAAW1wF,MAAM4oE,UAAY,QAKjC,MAAMh6B,EAASlsD,EAAa4iF,qBAC5B12B,EAAOg3B,MAAM59D,UAAY,IAAM3lD,EAAM65F,QAAU,WAC/CtN,EAAOg3B,MAAM+qB,UAAY,SACzB/hD,EAAOg3B,MAAMgrB,gBAAkB,OAC/BhiD,EAAOg3B,MAAMirB,kBAAoB,GACjCjiD,EAAOg3B,MAAMkrB,WAAa,CACxB/oH,KAAM,OACNi4B,MAAO,CACL,YAAa,kBACb0L,OAAQ,QACR,eAAgB,IAIpBqlF,iBAAOniD,GAGP,MAAMoiD,EAActuG,EAAaC,cACjC,IAAK,IAAIlwD,EAAI,EAAGA,EAAIu+J,EAAYr+J,SAAUF,EAAG,CAE3C,IAAkD,IAA9C4vB,EAAM67B,SAAS4E,WAAWkuG,EAAYv+J,IACxC,SAIF,MAAMw+J,EAAgBD,EAAYv+J,GAAG2sD,QAAQ,MAAO,IAC9Cu7B,EAAMvY,SAAS6F,eAAegpF,EAAgB,iCACzC,MAAPt2E,EAKJA,EAAInS,iBAAiB,QAAS,KAC5B,IACEhmB,YAASngC,EAAM67B,SAAU8yG,EAAYv+J,IACrC,MAAOg0B,GAEP,YADAnb,YAAgBmb,EAAM,IAIxBnb,YACG,cAAa0lJ,EAAYv+J,oCACnB4gC,IAAqBO,yEAG9BkjD,YAAYz0D,EAAM65F,WAjBlBlkH,QAAQC,KAAM,wCAAuCg5J,MAuBzD,yBAAKhqF,GAAI5kD,EAAM65F,SACb,iDACoB75F,EAAM67B,SAASvB,YAAYC,IAC7C,6BAFF,6BAIE,6BAJF,8BAIoC8F,EAAa+gD,2BAC/C,6BALF,oCAK0C/gD,EAAaihD,2BACrD,6BANF,sCAM4CjhD,EAAaghD,2BACvD,6BAPF,sCAO4ChhD,EAAamhD,2BACvD,6BARF,wCAQ8CnhD,EAAakhD,2BACzD,6BATF,6BASmClhD,EAAa6gD,0BAC9C,6BAVF,wBAU8B7gD,EAAaohD,qBACzC,6BAXF,sCAW4CphD,EAAaqhD,kCACvD,6BAZF,0BAYgCrhD,EAAa4mC,4B,8BC5FnD,sNAuCA,SAAS4nE,EAAc7uI,GACrB,MAAMyyB,EAAO1f,cACPsnB,EAAWrnB,eACV87H,EAAiBC,GAAsB5/F,oBAAS,GACvD,GAAwB,IAApBnvC,EAAM69B,UAAiB,OAAO,qCAGlC,MAAMwB,EAAkBruB,IAAqBW,yBAA2B77B,KAAKg1B,IAAI,KAAM9K,EAAM69B,UAAUp3B,MAAQ,GACzGuoI,EAAmBv8G,EAAKl+C,MAAMojD,GAAG0H,GAYvC,IAAI4vG,EACJ,OAAQ50G,EAAS8kD,OACf,IAAK,QACH8vD,EAAY,8BACZ,MACF,IAAK,WACHA,EAAY,yCACZ,MACF,IAAK,aACHA,EAAY,wDACZ,MACF,IAAK,OACHA,EAAY,sDACZ,MACF,IAAK,SACHA,EAAY,wDACZ,MACF,QACEt5J,QAAQ2nB,MAAO,kBAAiB+8B,EAAS8kD,OAK7C,MAAM+vD,EAAO,GACb,IAAK,MAAMloE,KAAWhnE,EAAM69B,UAAU+oC,UAC9B5mE,EAAM69B,UAAU+oC,UAAUI,aAAoBnU,KAE/Cs8E,YAAmBnoE,EAAS3sC,IACjC60G,EAAKt+J,KACH,kBAAC,IAAD,CACEu/D,SAAUnwC,EAAMmwC,SAChB93B,KAAMrY,EAAM6vF,YACZ38G,IAAK8zF,EACLnqC,IAAK78B,EAAM69B,UAAU+oC,UAAUI,GAC/BnpC,UAAW79B,EAAM69B,aAMvB,MAAMqC,EAAW,GACjB,GAAI7F,EAASutG,eAAiBr3J,OAAOizB,KAAK62B,EAAS6F,UAAU5vD,OAAS,EACpE,IAAK,MAAMqvD,KAAetF,EAAS6F,SAAU,CAC3C,MAAM1C,EAAUnD,EAAS6F,SAASP,GAC5BnC,aAAmBsC,KACzBI,EAAStvD,KACP,kBAAC,IAAD,CAAau/D,SAAUnwC,EAAMmwC,SAAU93B,KAAMrY,EAAM6vF,YAAa38G,IAAKysD,EAAanC,QAASA,KAKjG,IAAI4xG,EAAY,qCAChB,IAAK,MAAMpoE,KAAWhnE,EAAM69B,UAAU+oC,UAAW,CAC/C,GAAgB,eAAZI,EAA0B,SAC9B,MAAMnqC,EAAM78B,EAAM69B,UAAU+oC,UAAUI,GACjCxa,IAAc/7E,eAAeu2F,KAClB,IAAZnqC,EAAItC,MACR60G,EACE,oCACGA,EACApoE,EAFH,KAEc5xF,IAAeS,OAAOgnD,EAAItC,IAAMiyB,IAAcwa,GAAU,SACpE,gCAKN,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK9zD,QAAQ,OAAOC,WAAW,UAC7B,kBAAC,IAAD,CAAS0kC,MAAoC,IAA7B73C,EAAM69B,UAAUkpC,SAAiBqoE,EAAY,IAC3D,kBAAC,IAAD,CAAYzvI,MAAOK,EAAM69B,UAAUkpC,UAAY/mE,EAAM69B,UAAU1B,KAAO,QAAU,WAAhF,YACY/mD,IAAea,gBAAgB+pB,EAAM69B,UAAUkpC,UAD3D,KACwE,IACrE3xF,IAAea,gBAAgB+pB,EAAM69B,UAAU1B,QAIpD,kBAAC,IAAD,CAAQz9B,UAAWswI,EAAkBtxF,QAvF3C,WACmB,OAAbrjB,GACoB,IAApBr6B,EAAM69B,WACLmxG,MACHhvI,EAAM69B,UAAUp3B,MAClBzG,EAAM69B,UAAUyB,WAAW7M,EAAM4H,GACjC5H,EAAKl+C,MAAQk+C,EAAKl+C,MAAMipC,MAAM6hB,GAC9Br/B,EAAMmwC,cAgFF,4BAEE,kBAAC,IAAD,CAAWh8D,MAAOkrD,EAAiB5M,KAAMA,MAI7C,kBAAC,IAAD,wEACA,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAyB4H,SAAUA,KAErC,6BACA,kBAAC,IAAD,kIAIA,6BAEA,kBAAC,IAAD,KAAa40G,GAEZx8G,EAAKo0C,eAAe,IACnB,oCACE,kBAAC,IAAD,CAAQnpB,QAAS,IAAMqxF,GAAmB,IAA1C,0BACA,kBAAC,IAAD,CACEx6H,KAAMu6H,EACNt6H,QAAS,IAAMu6H,GAAmB,GAClClxG,UAAW79B,EAAM69B,aAKtBqxG,EAEAhvG,GAKA,SAASmvG,EAAkBrvI,GAChC,OAAIA,EAAM69B,qBAAqBsB,IACtB,kBAAC0vG,EAAkB7uI,GAEnB,kBAACsvI,EAAD,CAAgBn/F,SAAUnwC,EAAMmwC,SAAU93B,KAAMrY,EAAM6vF,cASjE,SAASy/C,EAAetvI,GACtB,MAAMyyB,EAAO1f,cACPsnB,EAAWrnB,cACXtU,EAAW+zB,EAAKl+C,MAAMijD,GAAGxmB,IAAqBS,sBAMpD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQisC,QAPZ,WACMh/C,IACJugC,YAAkBxM,EAAM4H,EAAUr6B,EAAMqY,MACxCrY,EAAMmwC,aAIgCzxC,SAAUA,GAA9C,uBAEE,kBAAC,IAAD,CAAWvqB,MAAO68B,IAAqBS,qBAAsBghB,KAAMA,IAFrE,Q,6BCrMN,wHAiBA,SAAS88G,EAASvvI,GAChB,MAAOkiF,EAASstD,GAAcrgG,qBAAWnvC,EAAM69B,UAAUM,wBAAwBn+B,EAAMgnE,UAYvF,OACE,oCACE,kBAAC,IAAD,CACEyoE,QAAS,kBAAC,IAAD,CAAQvtD,QAASA,EAAS3kC,SAbzC,SAAkBva,GAChB,IACE,MAAM/E,EAAWj+B,EAAM69B,UAAU+oC,UAAU5mE,EAAMgnE,SACjDhpC,YAA2Bh+B,EAAM69B,UAAWI,EAAU+E,EAAM7I,OAAO+nD,SACnE,MAAO99E,GACPnb,YAAgBmb,EAAM,IAExBorI,EAAWxsG,EAAM7I,OAAO+nD,YAOpBhlC,MAAO,kBAAC,IAAD,KAAal9C,EAAM69B,UAAU+oC,UAAU5mE,EAAMgnE,SAAS70F,QAE/D,8BAWC,SAASu9J,EAAiB1vI,GAC/B,MAAMq6B,EAAWrnB,cACXu8B,EAAcJ,oBAAS,GAAO,GAYpC,MAAM+/F,EAAO,GACb,IAAK,MAAMloE,KAAWhnE,EAAM69B,UAAU+oC,UAC9B5mE,EAAM69B,UAAU+oC,UAAUI,aAAoBnU,KAC/CtiF,OAAOizB,KAAK62B,EAAS+yD,SAASj3E,SAAS6wD,IAC5CkoE,EAAKt+J,KAAK,kBAAC2+J,EAAD,CAAUr8J,IAAK8zF,EAASnpC,UAAW79B,EAAM69B,UAAWmpC,QAASA,KAGzE,OACE,kBAAC,IAAD,CAAOzyD,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,oCACE,kBAAC,IAAD,CACEi7H,QAAS,kBAAC,IAAD,CAAQvtD,QAASliF,EAAM69B,UAAUE,mBAAoBwf,SAjBtE,SAA6BnjB,GAC3BwD,YAAe59B,EAAM69B,UAAWzD,EAAED,OAAO+nD,SALzC3yC,EAAaa,IAASA,MAsBhB8M,MAAO,kBAAC,IAAD,8BAET,6BACA,kBAAC,IAAD,yFACCgyF,M,sEC7ET,4vCA4BO,SAASS,YAAY3vI,OAC1B,MAAMyyB,KAAO1f,kDACPsnB,SAAWrnB,mDACV48H,SAAUC,aAAe1gG,qDAAS,IAClC2gG,UAAWC,cAAgB5gG,qDAAS,IACpC6gG,gBAAiBC,oBAAsB9gG,qDAAS,IAChD+gG,aAAcC,iBAAmBhhG,qDAAS,GAC3C92B,KAAOrY,MAAMqY,KACbmlB,QAAUx9B,MAAMw9B,QAGhB2nG,GAAK,QACLiL,IAAM,SAENC,oBAAsBh2G,SAAS8tD,YAAY,sBAG3Cp4D,UAAYyN,QAAQ1tD,KAAKuoC,MAAM,GAAKmlB,QAAQ1tD,KAAKuoC,MAAM,GAG7D,IAAIi4H,eAoBJ,GAjBIA,eAFA9yG,QAAQF,OAAOjlB,MAAM,GACnB/V,+DAASk7B,QAAQF,OAAOjlB,MAAM,IAE9B,+HACSjjC,iDAAeS,OAAO2nD,QAAQ1tD,KAAKuoC,MAAM,GAAI+3H,KADtD,IAC6D5yG,QAAQF,OAAOjlB,MAAM,GADlF,KAMA,+HACSjjC,iDAAeS,OAAO2nD,QAAQ1tD,KAAKuoC,MAAM,GAAI+3H,KADtD,IAEGh7J,iDAAeS,OAAO2nD,QAAQF,OAAOjlB,MAAM,GAAI+3H,KAFlD,KAOa,4IAGf5yG,QAAQ8D,UACVgvG,eACE,sHACGA,eADH,MACqB,2DAAC,+CAAD,CAAOn8J,MAAOqpD,QAAQs2B,eAAez7C,cAGvD,GAAImlB,QAAQ4D,UAAW,CAC5B,MAAMkpG,EAAc9sG,QAAQixD,IAAMjxD,QAAQw1B,IAC1Cs9E,eACE,sHACGA,eADH,MACqB,2DAAC,+CAAD,CAAOn8J,MAAOqpD,QAAQkuG,MAAQpB,UAGhD,GAAI9sG,QAAQL,MACjB,GAAI76B,+DAASk7B,QAAQL,OAAQ,CAC3B,MAAMA,MAASK,QAAQL,MAAiBJ,QAAQ,MAAOS,QAAQkuG,MAAQ,IACvE4E,eACE,sHACGA,eADH,MACqB,2DAAC,+CAAD,CAAOn8J,MAAO+oD,KAAKC,eAI1CmzG,eACE,sHACGA,eADH,MACqB,2DAAC,+CAAD,CAAOn8J,MAAOqpD,QAAQL,SAOjD,IAAIozG,0BAA4B,mBAKhC,OAJI/yG,QAAQyD,OAAO5oB,MAAM,KACvBk4H,2BAA6B,KAAOn7J,iDAAeS,OAAO2nD,QAAQyD,OAAO5oB,MAAM,GAAI8sH,IAAM,KAIzF,2DAAC,oDAAD,KACI3nG,QAAQgwD,IASR,sHACE,2DAAC,kDAAD,CAAKt6E,QAAQ,QACX,2DAAC,sDAAD,CACE2kC,MACE,2DAAC,yDAAD,cACSziE,iDAAeS,OAAO2nD,QAAQ1tD,KAAKuoC,MAAM,GAAI+3H,KADtD,KAEE,sEAFF,SAGSh7J,iDAAeS,OAAO2nD,QAAQ1tD,KAAKuoC,MAAM,GAAI+3H,KAHtD,QAOF,2DAAC,yDAAD,KACG5yG,QAAQrrD,KADX,KACmBiD,iDAAeS,OAAO2nD,QAAQ1tD,KAAKuoC,MAAM,GAAI+3H,KADhE,KAEGh7J,iDAAeS,OAAOk6C,UAAWqgH,KAFpC,SAOJ,2DAAC,kDAAD,CAAKl9H,QAAQ,QACX,2DAAC,sDAAD,CACE2kC,MACE,2DAAC,yDAAD,iBACYziE,iDAAeS,OAAO2nD,QAAQu1B,IAAKoyE,IAD/C,IACoD,sEADpD,gBAEgB/vJ,iDAAeS,OAAO2nD,QAAQivD,IAAK04C,IAFnD,IAEwD,sEAFxD,eAGe/vJ,iDAAeS,OAAO2nD,QAAQmvD,IAAKw4C,IAHlD,IAGuD,sEAHvD,gBAIgB/vJ,iDAAeS,OAAO2nD,QAAQqvD,IAAKs4C,IAJnD,IAIwD,sEAJxD,eAKe/vJ,iDAAeS,OAAO2nD,QAAQuvD,IAAKo4C,IALlD,IAKuD,sEALvD,aAMa/vJ,iDAAeS,OAAO2nD,QAAQyvD,IAAKk4C,IAClB,IAA3B1yG,KAAKo0C,eAAe,IAAY,sEACL,IAA3Bp0C,KAAKo0C,eAAe,IAAY,WAAazxF,iDAAeS,OAAO2nD,QAAQy1B,IAAKkyE,IACrD,IAA3B1yG,KAAKo0C,eAAe,IAAY,sEACL,IAA3Bp0C,KAAKo0C,eAAe,IAAY,gBAAkBzxF,iDAAeS,OAAO2nD,QAAQ21B,IAAKgyE,MAI1F,2DAAC,yDAAD,gBAAqB/vJ,iDAAeS,OAAO2nD,QAAQixD,IAAK02C,OAG5D,2DAAC,kDAAD,CAAKjyH,QAAQ,QACX,2DAAC,sDAAD,CAAS2kC,MAAO,2DAAC,yDAAD,2EACd,2DAAC,yDAAD,6BACwB,IACrBziE,iDAAeoB,YAAYgnD,QAAQkuG,MAAQ16H,+CAAqBiB,+BAIvE,2DAAC,kDAAD,CAAKiB,QAAQ,QACX,2DAAC,sDAAD,CACE2kC,MACE,2DAAC,yDAAD,wMAMF,2DAAC,yDAAD,2BAAgCziE,iDAAeoB,YAAYgnD,QAAQkuG,WA/DzE,sHACE,2DAAC,yDAAD,kBACaluG,QAAQrrD,KADrB,kCAC0DqrD,QAAQuC,WADlE,QAGA,sEACA,2DAAC,yDAAD,KAAa3qD,iDAAeS,OAAO2nD,QAAQiwD,KAAM,QAAjD,gBAgEF4iD,qBAAuB7yG,QAAQgwD,MAC/B,sHACE,2DAAC,qDAAD,CAAQ9vC,QAAS,IAAMmyF,aAAY,IAAQS,gBAC3C,2DAAC,iDAAD,CAAkB9yG,QAASA,QAASnlB,KAAMA,KAAM9D,KAAMq7H,SAAUp7H,QAAS,IAAMq7H,aAAY,KAC3F,sEACA,2DAAC,qDAAD,CAAQnyF,QAAS,IAAMqyF,cAAa,IAAQQ,2BAC5C,2DAAC,4DAAD,CACE/yG,QAASA,QACTnlB,KAAMA,KACN9D,KAAMu7H,UACNt7H,QAAS,IAAMu7H,cAAa,KAE9B,2DAAC,qDAAD,CAAQryF,QAAS,IAAMuyF,oBAAmB,IAA1C,eAEA,2DAAC,wDAAD,CACEzyG,QAASA,QACT2S,SAAUnwC,MAAMmwC,SAChB57B,KAAMy7H,gBACNx7H,QAAS,IAAMy7H,oBAAmB,KAEnC51G,SAAS8tD,YAAY,gBACpB,sHACE,2DAAC,qDAAD,CAAQzqC,QAAS,IAAMyyF,iBAAgB,IAAvC,aACA,2DAAC,qDAAD,CAAsB3yG,QAASA,QAASjpB,KAAM27H,aAAc17H,QAAS,IAAM27H,iBAAgB,U,6BCvMzG,qFAgBO,SAASK,EAAwBxwI,GACtC,MAAMq6B,EAAWrnB,cAOjB,OACE,kBAAC,IAAD,CAAOuB,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,+MAIA,kBAAC,IAAD,CAAQkpC,QAZZ,WACErjB,EAASqmE,mBAAmB1gG,EAAMw9B,SAClCx9B,EAAMwU,UACNxU,EAAMmwC,aASJ,kB,6BC9BN,6FAgBO,SAASsgG,EAA4BzwI,GAC1C,MAAOg5G,EAAO03B,GAAYvhG,mBAAwB,MAElD,SAASwhG,IACP,IAAIp2G,EAAMy+E,EACE,OAARz+E,IAAcA,GAAO,GACzByG,YAAuBhhC,EAAMw9B,QAASx9B,EAAMqY,KAAMkiB,GAClDv6B,EAAMwU,UAYR,OACE,kBAAC,IAAD,CAAOD,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,+HAIA,kBAAC,IAAD,CAAWs1F,WAAW,EAAM3sD,YAAY,QAAQz3B,KAAK,SAAS63B,SAXlE,SAAkBva,GACW,KAAvBA,EAAM7I,OAAOvnD,MAAc89J,EAAS,MACnCA,EAAS14J,WAAWgrD,EAAM7I,OAAOvnD,SAS8CyiF,UAftF,SAAmBryB,GACK,KAAlBA,EAAMwf,SAAgBmuF,OAexB,kBAAC,IAAD,CAAQjzF,QAASizF,GAAjB,uB,6BC1CN,uHA8BO,SAASC,EAAiB5wI,GAC/B,MAAOkiF,EAASstD,GAAcrgG,oBAAS,IAChC0hG,EAAMC,GAAU3hG,mBACrBnvC,EAAMw9B,QAAQF,OAAOt9B,EAAMqY,MAAM,GAAKrY,EAAMw9B,QAAQF,OAAOt9B,EAAMqY,MAAM,GAAK,KAEvE65B,EAAI6+F,GAAS5hG,mBAvBtB,SAAsB3R,GACpB,IAAIsO,EAAMtO,EAAQL,MAAQK,EAAQL,MAAQ,GAAK,GAM/C,OALIK,EAAQ8D,UACVwK,GAAO,kBACEtO,EAAQ4D,YACjB0K,GAAO,kBAEFA,EAgB8BklG,CAAahxI,EAAMw9B,UAMxD,SAASijE,IACP,IACEljE,YAAYv9B,EAAMw9B,QAASx9B,EAAMqY,KAAMw4H,EAAM3+F,EAAIgwC,GACjD,MAAO99E,GACPnb,YAAgBmb,EAAM,IAGxBpE,EAAMwU,UAWR,SAAS6gD,EAAUryB,GACK,KAAlBA,EAAMwf,SAAgBi+C,IAG5B,OACE,kBAAC,IAAD,CAAOlsF,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,oCAC+BxU,EAAMw9B,QAAQrrD,KAD7C,kGAGE,6BACA,6BAJF,wIAOE,6BACA,6BARF,kHAUE,6BACA,6BAXF,mQAeE,6BACA,6BAhBF,mQAqBA,6BACA,kBAAC,IAAD,CACES,MAAOi+J,EACP/mC,WAAW,EACXpkF,KAAK,OACLy3B,YAAY,cACZI,SAzCN,SAAqBva,GACnB8tG,EAAO9tG,EAAM7I,OAAOvnD,QAyChByiF,UAAWA,IAEb,kBAAC,IAAD,CAAWziF,MAAOs/D,EAAIxsB,KAAK,OAAOy3B,YAAY,aAAaI,SAxC/D,SAAuBva,GACrB+tG,EAAM/tG,EAAM7I,OAAOvnD,QAuCmEyiF,UAAWA,IAC/F,kBAAC,IAAD,CAAQ3X,QAAS+iD,GAAjB,WACA,kBAAC,IAAD,CACEgvC,QAAS,kBAAC,IAAD,CAAQvtD,QAASA,EAAS3kC,SA7DzC,SAAyBva,GACvBwsG,EAAWxsG,EAAM7I,OAAO+nD,YA6DpBhlC,MAAO,kBAAC,IAAD,mD,6BCnGf,sHAeA,SAAS+zF,EAAUjxI,GAEjB,IADiBgT,cACHm1E,YAAY,gBAAiB,OAAO,qCAClD,MAAMmiD,EAActqI,EAAMw9B,QAAQixD,IAAMzuF,EAAMw9B,QAAQw1B,KAC/CpgF,EAAOqqE,GAAY9N,mBAASnvC,EAAMw9B,QAAQkuG,OAC3Cn8F,EAAcJ,oBAAS,GAAO,GAcpC,MAAMhS,EAAQvqD,EACd,IAAI25G,EAAS,EAOb,OANIpvD,EAAQn9B,EAAMw9B,QAAQkuG,OACpBvuG,EAAQn9B,EAAMw9B,QAAQkuG,MAAQpB,IAChC/9C,EAAS+9C,GAAentG,EAAQn9B,EAAMw9B,QAAQkuG,QAKhD,oCACE,kBAAC,IAAD,CAAY7rF,QAAQ,MAApB,gBACA,6BACA,kBAAC,IAAD,uBACkBzqE,IAAeoB,YAAY2mD,GAD7C,uBACyE,IACtE/nD,IAAeS,OAAO02G,EAAQ,WAFjC,sDAIA,kBAAC,IAAD,CAAW7mE,KAAK,SAAS63B,SAzB7B,SAAkBva,GAChBia,EAASjlE,WAAWgrD,EAAM7I,OAAOvnD,SAwBcA,MAAOA,IACpD,6BACA,kBAAC,IAAD,CACE68J,QAAS,kBAAC,IAAD,CAAQvtD,QAASliF,EAAMw9B,QAAQ8D,UAAWic,SAxBzD,SAAyBva,GACvBhjC,EAAMw9B,QAAQ8D,UAAY0B,EAAM7I,OAAO+nD,QARvC3yC,EAAaa,IAASA,MAgClB8M,MACE,kBAAC,IAAD,CACErF,MACE,kBAAC,IAAD,wPAOF,kBAAC,IAAD,gDAKN,kBAAC,IAAD,gJAeC,SAASq5F,EAAqBlxI,GAClBgT,cAAjB,MACMs3H,EAActqI,EAAMw9B,QAAQixD,IAAMzuF,EAAMw9B,QAAQw1B,IAChDzjB,EAAcJ,oBAAS,GAAO,GAUpC,OACE,kBAAC,IAAD,CAAO56B,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,CAAYqrC,QAAQ,MAApB,eACA,kBAAC,IAAD,yDACoD,IACjDzqE,IAAeoB,YAAYwpB,EAAMw9B,QAAQkuG,MAAQpB,GAFpD,wHAMA,kBAAC,IAAD,CACEmF,QAAS,kBAAC,IAAD,CAAQvtD,QAASliF,EAAMw9B,QAAQ4D,UAAWmc,SAfzD,SAAkBva,GAChBhjC,EAAMw9B,QAAQ4D,UAAY4B,EAAM7I,OAAO+nD,QAJvC3yC,EAAaa,IAASA,MAmBlB8M,MACE,kBAAC,IAAD,CACErF,MACE,kBAAC,IAAD,+IAMF,kBAAC,IAAD,+CAKN,kBAACo5F,EAAD,CAAWzzG,QAASx9B,EAAMw9B,a,sEC1HhC,2uCAgCO,SAAS2zG,aAAanxI,OAC3B,MAAMyyB,KAAO1f,kDACPsnB,SAAWrnB,mDACVo+H,qBAAsBC,yBAA2BliG,qDAAS,IAC1DmiG,WAAYC,eAAiBpiG,qDAAS,IACtCqiG,iBAAkBC,qBAAuBtiG,qDAAS,IAClDuiG,qBAAsBC,yBAA2BxiG,qDAAS,GAC3DtR,UAAY79B,MAAM69B,UAClBxlB,KAAOrY,MAAMqY,KACbwkB,IAAM78B,MAAM68B,IACZytG,YAAcztG,IAAIi2B,iBAClBp0B,OAASrE,SAAS2B,QAAQ3jB,MAChC,KAAMqmB,kBAAkBzC,6CACtB,MAAM,IAAI77B,MAAO,mDAAkDiY,SAIrE,MAAM8sH,GAAK,QACLiL,IAAM,SAGNrgH,UAAY8M,IAAIwB,IAAMxB,IAAI82B,IAAM92B,IAAI+2B,IAAM/2B,IAAI62B,IAAM72B,IAAIg3B,SAIxD+9E,SACJv3G,SAASiuG,QAAU/3J,OAAOizB,KAAK62B,SAAS+yD,SAASj3E,SAAS0mB,IAAI1qD,OAAqB,IAAZ0qD,IAAIwB,KAAyB,IAAZxB,IAAI+2B,IAGxFi+E,mBAAsB,QAAOz8J,iDAAeS,OAAOgnD,IAAIwB,IAAK+xG,QAGlE,IAAIE,eACJ,GAAIzzG,IAAIS,OAAO,IAeb,GAbEgzG,eADEhuI,+DAASu6B,IAAIS,OAAO,IAEpB,+HACSloD,iDAAeS,OAAOgnD,IAAI62B,IAAK08E,KADxC,IAC+CvzG,IAAIS,OAAO,GAD1D,KAMA,+HACSloD,iDAAeS,OAAOgnD,IAAI62B,IAAK08E,KADxC,IAC+Ch7J,iDAAeS,OAAOgnD,IAAIS,OAAO,GAAc8yG,KAD9F,KAMAvzG,IAAIyE,UACNgvG,eACE,sHACGA,eADH,MACqB,2DAAC,+CAAD,CAAOn8J,MAAO0oD,IAAIi3B,uBAGpC,GAAIj3B,IAAIuE,UACbkvG,eACE,sHACGA,eADH,MACqB,2DAAC,+CAAD,CAAOn8J,MAAO0oD,IAAII,MAAQqtG,oBAG5C,GAAIztG,IAAIM,MACb,GAAI76B,+DAASu6B,IAAIM,OAAQ,CACvB,MAAMA,MAASN,IAAIM,MAAiBJ,QAAQ,MAAOF,IAAII,MAAQ,IAC/DqzG,eACE,sHACGA,eADH,MACqB,2DAAC,+CAAD,CAAOn8J,MAAO+oD,KAAKC,eAI1CmzG,eACE,sHACGA,eADH,MACqB,2DAAC,+CAAD,CAAOn8J,MAAO0oD,IAAIM,cAM7CmzG,eAAiB,4IAGnB,OACE,2DAAC,oDAAD,KACE,2DAAC,kDAAD,CAAKp9H,QAAQ,QACX,2DAAC,kDAAD,KACE,2DAAC,sDAAD,CACE2kC,MACE,2DAAC,yDAAD,aACQziE,iDAAeS,OAAOgnD,IAAIwB,IAAK+xG,KADvC,IAC6C,sEAD7C,SAESh7J,iDAAeS,OAAOgnD,IAAI82B,IAAKy8E,KAFxC,IAE8C,sEAF9C,SAGSh7J,iDAAeS,OAAOgnD,IAAI62B,IAAK08E,KAHxC,IAG8C,sEAH9C,WAIWh7J,iDAAeS,OAAOgnD,IAAIg3B,SAAUu8E,KAJ/C,IAIqD,sEAJrD,WAKWh7J,iDAAeS,OAAOgnD,IAAI+2B,IAAKw8E,KACZ,IAA3B39G,KAAKo0C,eAAe,IAAY,sEACL,IAA3Bp0C,KAAKo0C,eAAe,IAAY,WAAazxF,iDAAeS,OAAOgnD,IAAIo2B,IAAKkyE,IACjD,IAA3B1yG,KAAKo0C,eAAe,IAAY,sEACL,IAA3Bp0C,KAAKo0C,eAAe,IAAY,gBAAkBzxF,iDAAeS,OAAOgnD,IAAIs2B,IAAKgyE,MAItF,2DAAC,yDAAD,KACGtoG,IAAI1qD,KADP,KACeiD,iDAAeS,OAAOgnD,IAAItC,IAAK61G,KAD9C,KACsDh7J,iDAAeS,OAAOk6C,UAAWqgH,KADvF,QAIF,2DAAC,sDAAD,CACEv4F,MACE,2DAAC,yDAAD,8FAKF,2DAAC,yDAAD,YAAiBziE,iDAAeoB,YAAYqmD,IAAII,SAElD,2DAAC,sDAAD,CACE4a,MAAO,2DAAC,yDAAD,8EAEP,2DAAC,yDAAD,iBAAsBziE,iDAAeS,OAAOgnD,IAAIk2B,IAAK,YAIzD,2DAAC,kDAAD,KACE,2DAAC,sDAAD,CACElb,MAAO+5F,SAAW,2DAAC,yDAAD,oEAAuF,IAEzG,uEACE,2DAAC,qDAAD,CACEjyI,MAAOiyI,SAAW,QAAU,UAC5Bl0F,QAAS,IAAM2zF,yBAAwB,GACvC3yI,SAAUsB,MAAM69B,UAAUE,oBAAsBxtD,OAAOizB,KAAK62B,SAAS+yD,SAASj3E,SAASnW,MAAM68B,IAAI1qD,OAEhG0/J,sBAIP,2DAAC,sDAAD,CACEh1G,IAAKA,IACLgB,UAAWA,UACXtpB,KAAM68H,qBACN58H,QAAS,IAAM68H,yBAAwB,KAGb,IAA3B5+G,KAAKo0C,eAAe,IACnB,sHACE,2DAAC,qDAAD,CAAQnpB,QAAS,IAAM6zF,eAAc,IAArC,UAEA,2DAAC,4CAAD,CAAa10G,IAAKA,IAAKtoB,KAAM+8H,WAAY98H,QAAS,IAAM+8H,eAAc,MAG1E,sEAEA,2DAAC,qDAAD,CACE5xI,MAAO06B,SAASqtG,SAASvxH,SAASnW,MAAM68B,IAAI1qD,QAAU0qD,IAAIS,OAAO,GAAK,QAAU,UAChFogB,QAAS,IAAM+zF,qBAAoB,IAElCnB,gBAEH,2DAAC,kDAAD,CAAmBzzG,IAAKA,IAAKtoB,KAAMi9H,iBAAkBh9H,QAAS,IAAMi9H,qBAAoB,KACvFp3G,SAAS8tD,YAAY,gBACpB,sHACE,2DAAC,qDAAD,CAAQzqC,QAAS,IAAMi0F,yBAAwB,IAA/C,aAEA,2DAAC,sDAAD,CACE90G,IAAKA,IACLtoB,KAAMm9H,qBACNl9H,QAAS,IAAMm9H,yBAAwB,W,6BCnMvD,sIAsBO,SAASG,EAAY9xI,GAC1B,MAAMyyB,EAAO1f,cACb,GAA8B,IAA1B0f,EAAK/9C,UAAUpE,OAAc,MAAM,IAAI8vB,MAAM,2CACjD,GAAyD,IAArD7vB,OAAOizB,KAAKivB,EAAK/9C,UAAU,GAAGwqD,YAAY5uD,OAC5C,MAAM,IAAI8vB,MAAM,0DAClB,MAAOy7B,EAAUk2G,GAAe5iG,mBAAiB1c,EAAK/9C,UAAU,GAAGvC,OAC5DkmC,EAAMmsH,GAAWr1F,mBAAiB5+D,OAAOizB,KAAKivB,EAAK/9C,UAAU,GAAGwqD,YAAY,KAC5EthB,EAAKo0H,GAAU7iG,mBAAS,IACzBI,EAAcJ,oBAAS,GAAO,GA2BpC,SAAS8iG,EAAa31H,GACpB,IAAK,IAAIlsC,EAAI,EAAGA,EAAI4vB,EAAM68B,IAAIvgB,IAAIhsC,SAAUF,EAC1C,GAAI4vB,EAAM68B,IAAIvgB,IAAIlsC,GAAGuE,MAAQ2nC,EAAI3nC,KAAOqrB,EAAM68B,IAAIvgB,IAAIlsC,GAAGioC,OAASiE,EAAIjE,MAAQrY,EAAM68B,IAAIvgB,IAAIlsC,GAAGwtC,MAAQtB,EAAIsB,IAA3G,CAEA5d,EAAM68B,IAAIvgB,IAAI9qC,OAAOpB,EAAG,GACxB,MA7BFm/D,EAAaa,IAASA,GAkCxB,MAAM8hG,EAAkBz/G,EAAK/9C,UAAU8/G,KAAMn6D,GAAwBA,EAASloD,OAAS0pD,GACvF,QAAwB37B,IAApBgyI,EACF,MAAM,IAAI9xI,MAAO,0DAAyD8xI,MAC5E,MAAMC,EAAiB5hK,OAAOizB,KAAK0uI,EAAgBhzG,YAAYjP,OAC5D5X,GAA8C,IAArC65H,EAAgBhzG,WAAW7mB,IAMvC,OAJI85H,EAAe7hK,OAAS,IAAM6hK,EAAeh8H,SAASkC,IACxDmsH,EAAQ2N,EAAe,IAIvB,kBAAC,IAAD,CAAO59H,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,qNAIA,kBAAC,IAAD,CAAQ+oC,SA3CZ,SAA0Bva,GACxB+uG,EAAY/uG,EAAM7I,OAAOvnD,QA0CaA,MAAOipD,GACxCpJ,EAAK/9C,UAAUsjE,IAAK3d,GACnB,kBAAC,IAAD,CAAUnnD,IAAKmnD,EAASloD,KAAMS,MAAOynD,EAASloD,MAC3CkoD,EAASloD,QAIhB,kBAAC,IAAD,CAAQorE,SAtDZ,SAAsBva,GACpBwhG,EAAQxhG,EAAM7I,OAAOvnD,QAqDaA,MAAOylC,GACpC85H,EAAen6F,IAAKpX,IACnB,GAA6C,IAAzCsxG,EAAgBhzG,WAAW0B,GAC/B,OACE,kBAAC,IAAD,CAAU1tD,IAAK0tD,EAAUhuD,MAAOguD,GAC7BA,MAKT,kBAAC,IAAD,CAAWuc,YAAY,oBAAoBI,SAxD/C,SAAqBva,GACnBgvG,EAAOhvG,EAAM7I,OAAOvnD,QAuDgDA,MAAOgrC,IACzE,kBAAC,IAAD,CAAQ8/B,QArDZ,WACE,IACEhd,YAAe7E,EAAUxjB,EAAMrY,EAAM68B,IAAKjf,GAC1C,MAAOxZ,GACPnb,YAAgBmb,EAAM,IAExBpE,EAAMwU,YA+CJ,UACA,kBAAC,IAAD,mJAICxU,EAAM68B,IAAIvgB,IAAI07B,IAAI,CAAC17B,EAAa7Y,IAC/B,kBAAC,IAAD,CAAKyP,QAAQ,OAAOC,WAAW,SAASjgC,IAAKuwB,GAC3C,kBAAC,IAAD,CAAQkR,GAAI,CAAEkxE,GAAI,GAAKnoC,QAAS,IAAMu0F,EAAa31H,IAAnD,UAGA,kBAAC,IAAD,kBACaA,EAAI3nC,IACf,6BAFF,SAGS2nC,EAAIjE,KACX,6BAJF,aAKaiE,EAAIsB,U,6BCpH3B,sHAeA,SAASqzH,EAAUjxI,GAEjB,IADiBgT,cACHm1E,YAAY,gBAAiB,OAAO,qCAElD,MAAOiqD,EAASC,GAAcljG,mBAAiBnvC,EAAM68B,IAAII,OACnDsS,EAAcJ,oBAAS,GAAO,GAIpC,MAAMm7F,EAActqI,EAAM68B,IAAIi2B,iBAO9B,MAAM31B,EAAQi1G,EACd,IAAI7lD,EAAS,EAoBb,OAnBIpvD,EAAQn9B,EAAM68B,IAAII,MAEhBE,EAAQn9B,EAAM68B,IAAII,MAAQqtG,IAC5B/9C,EAASz2G,KAAKg1B,IAAIw/H,GAAentG,EAAQn9B,EAAM68B,IAAII,OAAQ,IAEpDE,EAAQn9B,EAAM68B,IAAII,QAEzBsvD,EADEpvD,GAAS,EACF,KAGAn9B,EAAM68B,IAAII,MAAQE,GAU7B,oCACE,kBAAC,IAAD,CAAY0iB,QAAQ,MAApB,gBACA,6BACA,kBAAC,IAAD,uBACkBzqE,IAAeoB,YAAY2mD,GAD7C,uBACyE,IACtE/nD,IAAeS,OAAO02G,EAAQ,WAFjC,sDAIA,kBAAC,IAAD,CAAW7mE,KAAK,SAAS63B,SAlC7B,SAAkBva,GACW,KAAvBA,EAAM7I,OAAOvnD,MAAcy/J,EAAW,GACrCA,EAAWr6J,WAAWgrD,EAAM7I,OAAOvnD,SAgCOA,MAAOw/J,IACpD,6BACA,kBAAC,IAAD,CACE3C,QAAS,kBAAC,IAAD,CAAQvtD,QAASliF,EAAM68B,IAAIyE,UAAWic,SAhBrD,SAAqBva,GACnBhjC,EAAM68B,IAAIyE,UAAY0B,EAAM7I,OAAO+nD,QA1BnC3yC,EAAaa,IAASA,MA0ClB8M,MACE,kBAAC,IAAD,CACErF,MACE,kBAAC,IAAD,wPAOF,kBAAC,IAAD,gDAKN,kBAAC,IAAD,gJAeC,SAASy6F,EAAsBtyI,GACpC,MAAMuvC,EAAcJ,oBAAS,GAAO,GAIpC,MAAMm7F,EAActqI,EAAM68B,IAAIi2B,iBAO9B,OACE,kBAAC,IAAD,CAAOv+C,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,CAAYqrC,QAAQ,MAApB,eACA,kBAAC,IAAD,0DACqDzqE,IAAeoB,YAAYwpB,EAAM68B,IAAII,MAAQqtG,GADlG,wHAMA,kBAAC,IAAD,CACEmF,QAAS,kBAAC,IAAD,CAAQvtD,QAASliF,EAAM68B,IAAIuE,UAAWmc,SAfrD,SAAqBva,GACnBhjC,EAAM68B,IAAIuE,UAAY4B,EAAM7I,OAAO+nD,QALnC3yC,EAAaa,IAASA,MAoBlB8M,MACE,kBAAC,IAAD,CACErF,MACE,kBAAC,IAAD,+IAMF,kBAAC,IAAD,+CAIN,kBAACo5F,EAAD,CAAWp0G,IAAK78B,EAAM68B,S,6BClI5B,qGA0BO,SAAS01G,EAAkBvyI,GAChC,MAAO4d,EAAKo0H,GAAU7iG,mBAAiBnvC,EAAM68B,IAAIS,OAAO,GAAKt9B,EAAM68B,IAAIS,OAAO,GAAK,GAAK,KACjFR,EAAO01G,GAAYrjG,mBAnB5B,SAAsBtS,GACpB,IAAIiP,EAAMjP,EAAIM,MAAQN,EAAIM,MAAQ,GAAK,GAMvC,OALIN,EAAIyE,UACNwK,GAAO,kBACEjP,EAAIuE,YACb0K,GAAO,kBAEFA,EAYoCklG,CAAahxI,EAAM68B,MAE9D,SAAS2jE,IACP,IACE5jE,YAAa58B,EAAM68B,IAAKjf,EAAKkf,GAC7B,MAAO14B,GACPnb,YAAgBmb,EAAM,IAExBpE,EAAMwU,UAWR,SAAS6gD,EAAUryB,GACK,KAAlBA,EAAMwf,SAAgBg+C,IAG5B,OACE,kBAAC,IAAD,CAAOjsF,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,oCAC+BxU,EAAM68B,IAAI1qD,KADzC,+FAGE,6BACA,6BAJF,yIAOE,6BACA,6BARF,kHAUE,6BACA,6BAXF,mQAeE,6BACA,6BAhBF,uPAqBA,6BACA,kBAAC,IAAD,CACES,MAAOgrC,EACPksF,WAAW,EACXpkF,KAAK,OACLy3B,YAAY,cACZI,SAzCN,SAAqBva,GACnBgvG,EAAOhvG,EAAM7I,OAAOvnD,QAyChByiF,UAAWA,IAEb,kBAAC,IAAD,CAAWziF,MAAOkqD,EAAOpX,KAAK,OAAOy3B,YAAY,aAAaI,SAxClE,SAAuBva,GACrBwvG,EAASxvG,EAAM7I,OAAOvnD,QAuCmEyiF,UAAWA,IAClG,kBAAC,IAAD,CAAQ3X,QAAS8iD,GAAjB,c,6BCpFN,6HAmBA,SAASiyC,EAAiBzyI,GACxB,MAAM0yI,EAAY16J,WAAWgoB,EAAM2yI,QAC7Bl1H,EAAOi1H,EAAY1yI,EAAM68B,IAAII,MAE7B21G,EAAUpmF,IAAcxsD,EAAM68B,IAAI1qD,MAGxC,OAAIugK,EAAYE,GAFG5yI,EAAM69B,UAAU1B,KAAOn8B,EAAM69B,UAAUkpC,UAAY6rE,EAG7D,0FACE36J,MAAMwlC,GACR,4EAGL,kDACcroC,IAAeS,OAAO68J,EAAW,UAD/C,OAC8D1yI,EAAM68B,IAAI1qD,KADxE,aACwF,IACrFiD,IAAeoB,YAAYinC,IAYpC,SAASo1H,EAAa7yI,GACpB,MAAMyyB,EAAO1f,eACNk2H,EAAQ6J,GAAa3jG,mBAAS,IAErC,SAAS4jG,IACP,MAAMJ,EAAS36J,WAAWixJ,GAEpB2J,EAAUpmF,IAAcxsD,EAAM68B,IAAI1qD,MAExC,GAAIwgK,EAASC,GADM5yI,EAAM69B,UAAU1B,KAAOn8B,EAAM69B,UAAUkpC,UAAY6rE,EAEpE3pJ,YAAiB,mEAInB,GAAIhR,MAAM06J,GACR1pJ,YAAgB,4BACX,CACL,MAAMw0B,EAAOk1H,EAAS3yI,EAAM68B,IAAII,MAChC,IAAIxK,EAAKl+C,MAAMojD,GAAGla,GAKhB,YADAx0B,YAAiB,oCAHjBwpC,EAAKl+C,MAAQk+C,EAAKl+C,MAAMipC,MAAMC,GAC9Bzd,EAAM68B,IAAItC,KAAOo4G,EAKnB3yI,EAAMwU,WAYV,OACE,oCACE,kBAAC,IAAD,4BACuBxU,EAAM68B,IAAI1qD,KADjC,kGAIA,kBAACsgK,EAAD,CAAkB50G,UAAW79B,EAAM69B,UAAWhB,IAAK78B,EAAM68B,IAAK81G,OAAQ1J,IACtE,kBAAC,IAAD,CACEr2J,MAAOq2J,EACP1rF,SAbN,SAAkBva,GAChB8vG,EAAU9vG,EAAM7I,OAAOvnD,QAanB8yC,KAAK,SACLy3B,YAAY,uBACZkY,UApBN,SAAmBryB,GACK,KAAlBA,EAAMwf,SAAgBuwF,OAqBxB,kBAAC,IAAD,CAAQr1F,QAASq1F,GAAjB,0BAaC,SAASC,EAAsBhzI,GACpC,MAAMq6B,EAAWrnB,eACVi2H,EAAQ6J,GAAa3jG,mBAASnvC,EAAM68B,IAAIwB,IAAMr+B,EAAM68B,IAAIwB,IAAM,GAErE,SAAS40G,IACP,GAAe,OAAXhK,EAAJ,CACA,IACE7qG,YAAYp+B,EAAM68B,IAAKosG,GACvB,MAAO7kI,GACPnb,YAAgBmb,EAAM,IAGxBpE,EAAMwU,WAgBR,OACE,kBAAC,IAAD,CAAOD,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,oCACE,kBAAC,IAAD,4BACuBxU,EAAM68B,IAAI1qD,KADjC,oFAIA,kBAAC,IAAD,CACES,MAAOq2J,EACP1rF,SAbR,SAAkBva,GAChB8vG,EAAU96J,WAAWgrD,EAAM7I,OAAOvnD,SAa5Bk3H,WAAW,EACX3sD,YAAY,kBACZz3B,KAAK,SACL2vC,UArBR,SAAmBryB,GACK,KAAlBA,EAAMwf,SAAgBywF,OAsBtB,kBAAC,IAAD,CAAQv1F,QAASu1F,GAAjB,WACA,kBAAC,IAAD,CAAQv1F,QA7Bd,WACE19C,EAAM68B,IAAIwB,IAAM,EAChBr+B,EAAMwU,YA2BF,kBACC6lB,EAAS8tD,YAAY,oBACpB,kBAAC0qD,EAAD,CAAcr+H,QAASxU,EAAMwU,QAASqoB,IAAK78B,EAAM68B,IAAKgB,UAAW79B,EAAM69B,gB,6BCxJ1E,SAASsxG,EAAmBnoE,EAAiB3sC,GAIlD,QAAI9pD,OAAOizB,KAAK62B,EAAS+yD,SAASj3E,SAAS6wD,OAGvC3sC,EAASqtG,SAASvxH,SAAS6wD,MALJ,CAAC,WAAY,SAAU,UAAW,cAQtC7wD,SAAS6wD,IAZlC,mC,6BCFA,+DAQO,SAASksE,EAAwBlzI,GACtC,MAAMmzI,EAAO,GACb,IAAK,MAAM5kD,KAAUh+G,OAAOizB,KAAKxD,EAAMq6B,SAAS+yD,SAAU,CACxD,MAAMgmD,EAASpzI,EAAMq6B,SAAS+yD,QAAQmB,QACvBruF,IAAXkzI,GACJD,EAAKviK,KAAKoiE,OAAOqgG,GAAI,GAAED,YAAiB7kD,KAE1C,MAAMrF,EAAOlpF,EAAMq6B,SAASqtG,SAAS/zJ,QAKrC,OAJIqsB,EAAMq6B,SAASutG,eACjB1+C,EAAKt4G,KAAKovB,EAAMq6B,SAAS3U,MAIzB,kBAAC,IAAD,CACExS,SAAS,EACTogI,IAAKH,EAAKnqI,KAAK,KAAOgqC,OAAOqgG,GAAI,cAAenqD,EAAKlxC,IAAKzkE,GAAMy/D,OAAOqgG,GAAI,YAAW9/J,KAAKy1B,KAAK,S,iCCvBtG,+HAeO,SAASuqI,EAAcvzI,GAC5B,MAAMyyB,EAAO1f,cACPsnB,EAAWrnB,cACXm/H,EAAiB5hK,OAAOizB,KAAK62B,EAAS2B,SAAS/L,OAAQ2Q,GAAoD,IAA/BvG,EAAS2B,QAAQ4E,KAC5FvoB,EAAMmsH,GAAWr1F,mBAASgjG,EAAe,IAE1CzzI,EAAW+zB,EAAKl+C,MAAMijD,GAAGxmB,IAAqBY,mBAkBpD,OACE,oCACE,kBAAC,IAAD,sFACiF,IAC/E,kBAAC,IAAD,CAAWz9B,MAAO68B,IAAqBY,kBAAmB6gB,KAAMA,KAElE,kBAAC,IAAD,CAAQ7/C,MAAOylC,EAAMklC,SAtBzB,SAAsBva,GACpBwhG,EAAQxhG,EAAM7I,OAAOvnD,SAsBhBu/J,EAAen6F,IAAKpX,GACnB,kBAAC,IAAD,CAAU1tD,IAAK0tD,EAAUhuD,MAAOguD,GAC7BA,KAIP,kBAAC,IAAD,CAAQ8c,QAzBZ,WACE,IACE3hB,YAAQtJ,EAAM4H,EAAUhiB,GACxB,MAAOjU,GAEP,YADAnb,YAAgBmb,EAAM,IAIxBnb,YAAiB,0BAAyBovB,MAE1CrY,EAAMykI,gBAAgBpsH,IAeK3Z,SAAUA,GAAnC,c,6BCpDN,sIAkBO,SAAS80I,EAAkBxzI,GAChC,MAAMyyB,EAAO1f,cAEP0gI,EADgBljK,OAAOizB,KAAKguB,KAAY7vB,OAE3CsuB,OACEo0G,QACkFnkI,IAAjFuyB,EAAK/9C,UAAU8/G,KAAMn6D,GAAwBA,EAAS3U,OAAS2+G,IAElE1iI,QACIk6B,EAAUk2G,GAAe5iG,mBAASskG,EAAmBnjK,OAAS,EAAImjK,EAAmB,GAAK,KAC1FthK,EAAMsxJ,GAAWt0F,mBAAS,IAE3B1xB,EAAO8U,IAAsBsJ,GACnC,QAAa37B,IAATud,EACF,MAAM,IAAIrd,MAAO,sBAAqBy7B,MAExC,MAAMn9B,EAAW+zB,EAAKl+C,MAAMijD,GAAG/Z,IAAkB,KAATtrC,EAExC,SAASuhK,IACP,IAAIh1I,EAAJ,CACA,IACEk9B,YAAYnJ,EAAMoJ,EAAU1pD,GAC5B,MAAOiyB,GAEP,YADAnb,YAAgBmb,EAAM,IAKxBpE,EAAMmkI,gBAAgBhyJ,IAgBxB,MAAM42B,EAAOypB,IAAqBqJ,GAClC,QAAa37B,IAAT6I,EAAoB,MAAM,IAAI3I,MAAO,sDAAqDy7B,MAE9F,OACE,oCACE,kBAAC,IAAD,6DACA,kBAAC,IAAD,CAAQjpD,MAAOipD,EAAU0hB,SAV7B,SAA0Bva,GACxB+uG,EAAY/uG,EAAM7I,OAAOvnD,SAUpB6gK,EAAmBz7F,IAAKnc,GACvB,kBAAC,IAAD,CAAU3oD,IAAK2oD,EAAUjpD,MAAOipD,GAC7BA,KAIP,kBAAC,IAAD,KAAa9yB,EAAK0pB,IAClB,6BACA,6BAEA,kBAAC,IAAD,uBAEA,kBAAC,IAAD,CAAKvf,QAAQ,OAAOC,WAAW,UAC7B,kBAAC,IAAD,CAAW22F,WAAW,EAAMl3H,MAAOT,EAAMorE,SAjC/C,SAAsBva,GAEpBygG,EAAQzgG,EAAM7I,OAAOvnD,QA+BgDyiF,UA5BvE,SAAmBryB,GACK,KAAlBA,EAAMwf,SAAgBkxF,KA2BiEhuH,KAAK,SAC5F,kBAAC,IAAD,CAAQhnB,SAAUA,EAAUiW,GAAI,CAAEkxE,GAAI,GAAKnoC,QAASg2F,GAApD,uB,6BCnFR,wRAmCO,SAASpf,GAAS,SAAEnkF,IACzB,MAAMhwC,EAAS0F,IAAIjyB,SACb6+C,EAAO1f,cACP41D,EAAiBl2C,EAAKj+C,QAAQgpC,MAAMiV,EAAKh+C,UAAU61B,WAEnDqpI,EAAoB,GAC1B,SAASC,EAAWzhK,EAAcS,GAClB,IAAVA,GACJ+gK,EAAS/iK,KAAK,CAACuB,EAAMiD,IAAeS,OAAOjD,EAAO,WAYpD,OAVAghK,EAAW,0BAA2BnhH,EAAKyuD,2BAC3C0yD,EAAW,uBAAwBnhH,EAAKw0C,wBACxC2sE,EAAW,2BAA4BnhH,EAAK2uD,4BAC5CwyD,EAAW,gCAAiCnhH,EAAK4uD,4BACjDuyD,EAAW,8BAA+BnhH,EAAK6uD,4BAC/CsyD,EAAW,kCAAmCnhH,EAAK8uD,4BACnDqyD,EAAW,gCAAiCnhH,EAAK+uD,4BACjDoyD,EAAW,qBAAsBnhH,EAAKgvD,sBACtCmyD,EAAW,mCAAoCnhH,EAAKivD,mCAGlD,oCACE,kBAAC,IAAD,CACE9pC,KAAM,CACJ,CAAC,eAAgB,kBAAC,IAAD,CAAOzjE,MAAOs+C,EAAKl+C,MAAM+1B,cAC1C,CAAC,iBAAkB,kBAAC,IAAD,CAAWn2B,MAAOs+C,EAAKj+C,QAAQ81B,cAClD,CAAC,kBAAmB,kBAAC,IAAD,CAAWn2B,MAAOs+C,EAAKh+C,SAAS61B,cACpD,CAAC,mBAAoBmoB,EAAKytD,OAAS,MAAQ,MAC3C,CAAC,sBAAuB9qG,IAAeS,OAAO48C,EAAKotD,UAAW,WAC9D,CAAC,eAAgBptD,EAAKytD,OAAS,kBAAC,IAAD,CAAO/rG,MAAOs+C,EAAK4tD,aAAiB,UAGvE,6BACA,kBAAC,IAAD,CAAKntE,QAAQ,QACX,kBAAC,IAAD,CACE2kC,MACE,kBAAC,IAAD,CACED,KAAM,CACJ,CAAC,sBAAuBxiE,IAAeS,OAAO48C,EAAKohH,aAAc,WACjE,CACE,kBACAz+J,IAAeS,OAAO48C,EAAKkoB,YAAcloB,EAAKohH,aAAephH,EAAKotD,UAAW,eAMrF,kBAAC,IAAD,4BAAiCzqG,IAAeS,OAAO48C,EAAKkoB,YAAa,aAG7E,6BACA,kBAACm5F,EAAD,CAAgBnrE,OAAQA,IACxB,6BACA,kBAAC,IAAD,CAAY/wB,KAAM+7F,IAClB,6BACA,kBAACtT,EAAD,MACA,kBAAC,IAAD,CACExoF,MACE,kBAAC,IAAD,mQAOF,kBAAC,IAAD,CAAQ6F,QAAS,IAAMjrB,EAAKkvD,gBAAgBxhF,IAA5C,0BAEDsyB,EAAKytD,OAAS,kBAAC6zD,EAAD,CAAe5jG,SAAUA,IAAe,kBAAC6jG,EAAD,CAAgB7jG,SAAUA,IACjF,kBAAC8jG,EAAD,MACA,6BACA,kBAACvG,EAAD,CAAUv9F,SAAUA,KAS1B,SAAS6jG,GAAe,SAAE7jG,IACxB,MAAM1d,EAAO1f,eACNmhI,EAAmBC,GAAwBhlG,oBAAS,IACpDilG,EAAcC,GAAmBllG,oBAAS,GAE3CmlG,EAAmB7hH,EAAK8hH,aAAe,EACvCC,EAAuBF,EACzB,uHACA,GAEJ,OACE,oCACE,kBAAC,IAAD,CAASz8F,MAAO,kBAAC,IAAD,KAAa28F,IAC3B,8BACE,kBAAC,IAAD,CAAQ91I,UAAW41I,EAAkB52F,QAAS,IAAMy2F,GAAqB,IAAzE,oBAKJ,kBAAC,IAAD,CACEt8F,MACE,kBAAC,IAAD,oLAMF,kBAAC,IAAD,CAAQ6F,QAAS,IAAM22F,GAAgB,IAAvC,cAEF,kBAAC,IAAD,CAAoB9/H,KAAM2/H,EAAmB1/H,QAAS,IAAM2/H,GAAqB,GAAQhkG,SAAUA,IACnG,kBAAC,IAAD,CAAe57B,KAAM6/H,EAAc5/H,QAAS,IAAM6/H,GAAgB,GAAQlkG,SAAUA,IACpF,8BASN,SAASu9F,GAAS,SAAEv9F,IAClB,MAAM1d,EAAO1f,cAEb,OAAI0f,EAAK/9C,UAAUpE,QAAU,EACpB,kBAAC,IAAD,CAAYuvE,QAAQ,MAApB,sDAIP,oCACE,kBAAC,IAAD,CAAOlrC,GAAI,CAAEphC,EAAG,EAAGg3G,GAAI,IACrB,kBAAC,IAAD,CAAY1qC,QAAQ,MAApB,WACA,kBAAC,IAAD,CAAM8F,WAAS,GACZp1E,OAAOm6C,OAAOk0D,KACZ3uD,OAAQ8J,GAA0E,IAApCtH,EAAKo0C,eAAe9sC,EAAQ,KAC1Eie,IAAKje,GACJ,kBAAC,IAAD,CAAeoW,SAAUA,EAAUskG,YAAa16G,EAAS7mD,IAAK6mD,EAAQ,QAI9E,kBAAC,IAAD,CAAOplB,GAAI,CAAEphC,EAAG,EAAGg3G,GAAI,IACrB,kBAAC,IAAD,CAAY1qC,QAAQ,MAApB,YACA,kBAAC,IAAD,CAAM8F,WAAS,GACZlzB,EAAK+J,SACHwb,IAAI,CAACvxC,EAAer2B,IAAcyuG,IAAoBzuG,IACtD4nE,IAAKje,GACJ,kBAAC,IAAD,CAAkBoW,SAAUA,EAAUpW,QAASA,EAAS7mD,IAAK6mD,EAAQ,SAanF,SAASg6G,GAAc,SAAE5jG,IACvB,MAAM1d,EAAO1f,eACN2hI,EAAgBC,GAAqBxlG,oBAAS,IAC9CylG,EAAmBC,GAAwB1lG,oBAAS,IACpD2lG,EAAoBC,GAAyB5lG,oBAAS,IACtD6lG,EAAoBC,GAAyB9lG,oBAAS,GAEvD+lG,EAAiBziH,EAAK6sD,kBAAoB,EAC1C61D,EAAoBD,EACtB,0BAA4BziH,EAAKouD,wBAAwBpuD,EAAK6sD,mBAC9D,wMAIE81D,EAAqB3iH,EAAK8sD,uBAAyB,EACnD81D,EAAwBD,EAC1B,+BAAiC3iH,EAAKouD,wBAAwBpuD,EAAK8sD,wBACnE,4CAEJ,OACE,oCACE,kBAAC,IAAD,CAAS1nC,MAAO,kBAAC,IAAD,KAAas9F,IAC3B,8BACE,kBAAC,IAAD,CAAQz2I,SAAUw2I,EAAgBx3F,QAAS,IAAMi3F,GAAkB,IAAnE,iBAKJ,kBAAC,IAAD,CAAiBpgI,KAAMmgI,EAAgBlgI,QAAS,IAAMmgI,GAAkB,GAAQxkG,SAAUA,IAC1F,kBAAC,IAAD,CAAS0H,MAAO,kBAAC,IAAD,6EACd,8BACE,kBAAC,IAAD,CAAQn5C,SAAU+zB,EAAKohH,aAAe,GAAKn2F,QAAS,IAAMm3F,GAAqB,IAA/E,oBAKJ,kBAAC,IAAD,CAAoBtgI,KAAMqgI,EAAmBpgI,QAAS,IAAMqgI,GAAqB,GAAQ1kG,SAAUA,IACnG,6BACA,kBAAC,IAAD,CAAS0H,MAAO,kBAAC,IAAD,KAAaw9F,IAC3B,8BACE,kBAAC,IAAD,CAAQ32I,SAAU02I,EAAoB13F,QAAS,IAAMq3F,GAAsB,IAA3E,sBAKJ,kBAAC,IAAD,CAAqBxgI,KAAMugI,EAAoBtgI,QAAS,IAAMugI,GAAsB,KACpF,kBAAC,IAAD,CACEl9F,MAAO,kBAAC,IAAD,qFAEP,kBAAC,IAAD,CAAQ6F,QAAS,IAAMu3F,GAAsB,IAA7C,oBAEF,kBAAC,IAAD,CAAqB1gI,KAAMygI,EAAoBxgI,QAAS,IAAMygI,GAAsB,KACpF,8BAKN,SAAShB,IACP,MAAM9zI,EAAS0F,IAAIjyB,SACb6+C,EAAO1f,eACNwB,EAAMqrC,GAAWzQ,oBAAS,GAC3BmmG,EACJ7iH,EAAKwtD,sBAAwBjvE,IAAqBe,gBAClD5R,EAAOyY,SAASqX,OAAQrnB,GAAM5E,IAAS4E,GAAGzE,UAAU6xC,cAAc1lE,OAAS,EAO7E,OACE,oCACE,kBAAC,IAAD,CACEunE,MACEy9F,EACI,gGACA,oEAGN,8BACE,kBAAC,IAAD,CAAQ52I,UAAW42I,EAAU53F,QAfrC,WACO43F,GACL11F,GAAQ,KAaF,oBAKJ,kBAAC,IAAD,CAAmBrrC,KAAMA,EAAMC,QAAS,IAAMorC,GAAQ,MAQ5D,SAASk0F,GAAe,OAAEnrE,IACxB,MAAMl2C,EAAO1f,cACb,GAAI0f,EAAKkK,oBAAsB,GAAKgsC,GAAU,EAAG,OAAO,qCACxD,MAAM+W,EAAkBjtD,EAAKkK,mBAAqB,IAAOgsC,EACnDgX,EAAmBhX,EAAS+W,EAC5BE,EAAoBF,EAAiBjtD,EAAKkoB,YAC1C46F,EAAiB9iH,EAAKotD,UAAYD,EACxC,OACE,kBAAC,IAAD,CACEhoC,KAAM,CACJ,CAAC,sCAAuC,kBAAC,IAAD,CAAWzjE,MAAOwrG,KAC1D,CAAC,uBAAwBvqG,IAAeS,OAAO48C,EAAKkK,mBAAqB,IAAK,OAC9E,CAAC,uBAAwB,kBAAC,IAAD,CAAWxoD,MAAOyrG,KAC3C,CAAC,4CAA6C,kBAAC,IAAD,CAAWzrG,MAAOohK,KAChE,CAAC,qBAAsB,oCAAG9iH,EAAKqtD,sBAAR,MACvB,CACE,6CACA,kBAAC,IAAD,CAAW3rG,MAAOohK,GAAkB,EAAI9iH,EAAKqtD,sBAAwB,WAQ/E,SAASugD,IACP,MACMmV,EADOziI,cACWwyB,aAAentD,IAAUI,cACjD,OAAIg9J,GAAc,KAAc,qCAE9B,kBAAC,IAAD,oBACej1I,YAAiCi1I,GAC9C,6BACA,gC,6BC9TN,8HAmBO,SAASC,EAAiBz1I,GAC/B,MAAMyyB,EAAO1f,cACPjjC,EAAOkwB,EAAM+5B,QACbtzB,EAAQgsB,EAAK+J,SAAS1sD,EAAK,IAE3Bw2B,EAAWx2B,EAAK,GAChBysD,EAAYzsD,EAAK,GACjB2tC,EAAOnX,EAAWxwB,KAAKg1B,IAAIyxB,EAAW91B,GAEtCguE,EAAU3kG,EAAK,GAWrB,OACE,kBAAC,IAAD,CAAMomF,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CAAKjjD,QAAQ,OAAOC,WAAW,SAAS6+B,cAAc,eACpD,kBAAC,IAAD,CAAQtzC,SAAU+zB,EAAKl+C,MAAMijD,GAAG/Z,GAAO9I,GAAI,CAAEkxE,GAAI,GAAKnoC,QAb5D,WACE,IAAIjrB,EAAKl+C,MAAMijD,GAAG/Z,GAAlB,CACA,IACE6e,YAAa7J,EAAMzyB,EAAM+5B,SACzB,MAAO31B,GACPnb,YAAgBmb,EAAM,IAExBpE,EAAMmwC,cAOA,kBAAC,IAAD,CAAWh8D,MAAOspC,EAAMgV,KAAMA,KAEhC,kBAAC,IAAD,CAASolB,MAAO48B,GACd,kBAAC,IAAD,KAAa3kG,EAAK,GAAlB,U,6BC9CV,8HAmBO,SAASssD,EAAcp8B,GAC5B,MAAMyyB,EAAO1f,cACPjjC,EAAOkwB,EAAMy0I,YACbhgE,EAAU3kG,EAAK,GAWrB,OACE,kBAAC,IAAD,CAAMomF,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CAAKjjD,QAAQ,OAAOC,WAAW,SAAS6+B,cAAc,eACpD,kBAAC,IAAD,CAAQtzC,SAAU+zB,EAAKl+C,MAAMijD,GAAG1nD,EAAK,IAAK6kC,GAAI,CAAEkxE,GAAI,GAAKnoC,QAb/D,WACE,IAAIjrB,EAAKl+C,MAAMijD,GAAG1nD,EAAK,IAAvB,CACA,IACE4lK,YAAGjjH,EAAMzyB,EAAMy0I,aACf,MAAOrwI,GACPnb,YAAgBmb,EAAM,IAExBpE,EAAMmwC,cAOA,kBAAC,IAAD,CAAWh8D,MAAOrE,EAAK,GAAI2iD,KAAMA,KAEnC,kBAAC,IAAD,CAASolB,MAAO48B,GACd,kBAAC,IAAD,KAAa3kG,EAAK,S,6BCxC5B,6JAoBO,SAAS6lK,EAAkB31I,GAChC,MAAMG,EAAS0F,IAAIjyB,SACbglC,EAAWzY,EAAOyY,SAASqX,OAAQ99C,KAC1B6xB,IAAS7xB,GAAMgyB,UAClB6xC,eACN71C,EAAOuvF,YAAYv9G,IAGnBsgD,EAAO1f,eACN5+B,EAAOgpC,GAAYgyB,mBAAwB,IAC3CzJ,EAAOkwG,GAAYzmG,mBAAwB,IAC3C0mG,EAAiBC,GAAsB3mG,mBAASv2B,EAAStoC,OAAS,EAAIsoC,EAAS,GAAK,IACrFla,EACM,OAAVvqB,GACU,OAAVuxD,GACW,IAAVvxD,GAAyB,IAAVuxD,GAChBztD,MAAM9D,IACN8D,MAAMytD,IACNvxD,EAAQ,GACRuxD,EAAQ,GACRjT,EAAKl+C,MAAMijD,GAAGrjD,IACduxD,EAAQjT,EAAKotD,UAcf,SAAS/vD,EAAQ37C,EAAeuxD,GAC9B,OAAQvxD,EAAQuxD,EAAQjT,EAAK4tD,YAAcrvE,IAAqBgB,gBAmClE,OACE,kBAAC,IAAD,CAAOuC,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,mHAGA,kBAAC,IAAD,CAAKtB,QAAQ,OAAOC,WAAW,UAC7B,kBAAC,IAAD,iBACA,kBAAC,IAAD,CAAQvgC,MAAOijK,EAAiBt4F,SA/CtC,SAAuBva,GACrB8yG,EAAmB9yG,EAAM7I,OAAOvnD,SA+CzBgmC,EAASo/B,IAAK7lE,IAEb,GADa6xB,IAAS7xB,GAAMgyB,UAClB6xC,eACN71C,EAAOuvF,YAAYv9G,GACvB,OACE,kBAAC,IAAD,CAAUe,IAAKf,EAAMS,MAAOT,GACzBA,OAMX,kBAAC,IAAD,KApDJ,SAAoBgC,EAAeuxD,GACjC,OAAc,IAAVvxD,GAAyB,IAAVuxD,EAAoB,GACnCztD,MAAM9D,IAAU8D,MAAMytD,IAAUvxD,EAAQ,GAAKuxD,EAAQ,EAChD,kCACEjT,EAAKl+C,MAAMijD,GAAGrjD,GAChB,uDACEuxD,EAAQjT,EAAKotD,UACf,wDAGL,iBACAzqG,IAAewB,iBAAiBk5C,EAAQ37C,EAAOuxD,IAC/C,oBACAmwG,EACA,mBAsCWE,CAAW5hK,GAAgB,EAAGuxD,GAAgB,IAC3D,kBAAC,IAAD,CAAW6X,SArEf,SAAuBva,GACrB7lB,EAASnlC,WAAWgrD,EAAM7I,OAAOvnD,SAoEKuqE,YAAY,sBAChD,kBAAC,IAAD,CAAWxoC,GAAI,CAAEkxE,GAAI,GAAKtoC,SAlE9B,SAAuBva,GACrB4yG,EAAS59J,WAAWgrD,EAAM7I,OAAOvnD,SAiEoBuqE,YAAY,iBAC/D,kBAAC,IAAD,CAAQz+C,SAAUA,EAAUiW,GAAI,CAAEkxE,GAAI,GAAKnoC,QAAS,IApCxD,SAAevpE,EAAeuxD,GAC5B,MAAMp8B,EAAMtF,IAAS6xI,GACrB,GAAIn3I,EAAU,OACd,MAAMD,EAAMqxB,EAAQ37C,EAAOuxD,GAC3Bz8C,YACE,cAAgB7T,IAAewB,iBAAiB6nB,GAAO,oBAAsB6K,EAAIn3B,KAAO,qBAE1Fm3B,EAAI6X,kBAAoB1iB,EACxBg0B,EAAKl+C,MAAQk+C,EAAKl+C,MAAMipC,MAAMrpC,GAC9Bs+C,EAAKotD,WAAan6C,EAClB1lC,EAAMwU,UA0BsDwhI,CAAM7hK,GAAgB,EAAGuxD,GAAgB,IAAnG,Y,6BClHN,4HAoBO,SAASuwG,EAAgBj2I,GAC9B,MAAMG,EAAS0F,IAAIjyB,SACb6+C,EAAO1f,eACN4yB,EAAQuwG,GAAa/mG,mBAAwB,MAE9CzwC,EAAsB,OAAXinC,GAAmB1tD,MAAM0tD,IAAWA,GAAU,GAAKA,EAASlT,EAAKotD,UAwBlF,SAASs2D,IACP,GAAe,OAAXxwG,EAAiB,OACrB,GAAIjnC,EAAU,OACd,MAAM03I,EAAmB3jH,EAAK8tD,mBAAmB56C,GAC3CgjC,EAASytE,EAAiB,GAC1BC,EAAgBD,EAAiB,GACjCE,EAAuBF,EAAiB,GAG9C,GADA3jH,EAAKotD,WAAal6C,EACd1tD,MAAMw6C,EAAKohH,cAAe,CAC5Bl+J,QAAQ2nB,MAAO,oCAAmCm1B,EAAKohH,cACvD,MAAMxyI,EAAMoxB,EAAKohH,aACb57J,MAAMopB,GACRoxB,EAAKohH,aAAe,EAEpBphH,EAAKohH,aAAexyI,EAGxBoxB,EAAKohH,cAAgBluG,EACrBlT,EAAK4tD,WAAag2D,EAClB5jH,EAAKiuD,2BAA6B41D,EAClC7jH,EAAK6sD,kBAAoBtuE,IAAqBI,mBAC9CjR,EAAOid,UAAUurD,GACjBxoE,EAAOwd,kBAAkBgrD,EAAQ,eACjC3oE,EAAMwU,UACNvrB,YACG,wDACI7T,IAAeoB,YAAYmyF,GAA7B,KACA,yCAAwCvzF,IAAeoB,YAAYi8C,EAAK4tD,wCAI7ErgF,EAAMmwC,WAOR,OACE,kBAAC,IAAD,CAAO57B,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,6IAGE,6BACA,6BAJF,+MAOE,6BACA,6BARF,gDASgDp/B,IAAeoB,YAAYi8C,EAAK4tD,aAEhF,mBArEJ,SAAyBrgF,GACvB,GAAqB,OAAjBA,EAAM2lC,OAAiB,OAAO,qCAClC,GAAI1tD,MAAM+nB,EAAM2lC,SAAW3lC,EAAM2lC,QAAU,EACzC,OAAO,iGACF,GAAI3lC,EAAM2lC,OAASlT,EAAKotD,UAC7B,OAAO,gFACF,CACL,MACMlX,EADmBl2C,EAAK8tD,mBAAmBvgF,EAAM2lC,QACvB,GAChC,OACE,4CACQ3lC,EAAM2lC,OADd,0BAC6CvwD,IAAeoB,YAAYmyF,OA0D1E,CAAiBhjC,OAAQA,EAAQlT,KAAMA,IACvC,6BACA,kBAAC,IAAD,CACEotB,QAAQ,WACRiqD,WAAS,EACTpkF,KAAK,SACLy3B,YAAY,iBACZI,SAjFN,SAAsBva,GACO,KAAvBA,EAAM7I,OAAOvnD,MAAcsjK,EAAU,MACpCA,EAAUpgK,KAAK+mC,MAAM7kC,WAAWgrD,EAAM7I,OAAOvnD,UAgF9CyiF,UAzBN,SAAmBryB,GACK,KAAlBA,EAAMwf,SAAgB2zF,OA0BxB,kBAAC,IAAD,CAAQz3I,SAAUA,EAAUg/C,QAASy4F,EAAMxhI,GAAI,CAAEkxE,GAAI,IAArD,kB,6BC/GN,4GAkBO,SAAS0wD,EAAmBv2I,GACjC,MAAMG,EAAS0F,IAAIjyB,SACb6+C,EAAO1f,eACN4yB,EAAQuwG,GAAa/mG,mBAAwB,MAOpD,MACMqnG,EAAmC,IADf/jH,EAAK4tD,WAEzB3hF,EACO,OAAXinC,GACA1tD,MAAM0tD,IACNA,GAAU,GACVA,EAASlT,EAAKohH,cACdluG,EAAS6wG,EAAer2I,EAAOhsB,MAEjC,SAASkqD,IACP,GAAe,OAAXsH,EAAJ,CAEA,GADAlT,EAAKotD,WAAal6C,EACd1tD,MAAMw6C,EAAKohH,cAAe,CAC5Bl+J,QAAQC,KAAK,oCAAsC68C,EAAKohH,cACxDl+J,QAAQC,KAAK,4BACb,MAAMyrB,EAAMoxB,EAAKohH,aACb57J,MAAMopB,GACRoxB,EAAKohH,aAAe,EAEpBphH,EAAKohH,aAAexyI,EAGxBoxB,EAAKohH,cAAgBluG,EACrBxlC,EAAOmd,UAAUqoB,EAAS6wG,GAC1Bx2I,EAAMwU,UACNxU,EAAMmwC,YA2BR,OACE,kBAAC,IAAD,CAAO57B,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,kNAGE,6BACA,6BAJF,wFAME,6BACA,6BAPF,wDAQwDp/B,IAAeoB,YAAYggK,GARnF,gCASiBphK,IAAea,gBAAgBw8C,EAAKohH,cATrD,8BAWA,mBArCJ,WACE,OAAe,OAAXluG,EAAwB,qCACxB1tD,MAAM0tD,IAAWA,GAAU,EACtB,oGACEA,EAASlT,EAAKohH,aAErB,2GACuE,IACpEz+J,IAAea,gBAAgBw8C,EAAKohH,cAFvC,wBAOA,gDACYluG,EADZ,0BAC2CvwD,IAAeoB,YAAYmvD,EAAS6wG,MAuBjF,MACA,6BACA,kBAAC,IAAD,CACE1sC,WAAW,EACXpkF,KAAK,SACLy3B,YAAY,oBACZI,SA5EN,SAAsBva,GACO,KAAvBA,EAAM7I,OAAOvnD,MAAcsjK,EAAU,MACpCA,EAAUpgK,KAAK+mC,MAAM7kC,WAAWgrD,EAAM7I,OAAOvnD,UA2E9CyiF,UAxBN,SAAmBryB,GACK,KAAlBA,EAAMwf,SAAgBnkB,OAyBxB,kBAAC,IAAD,CAAQ3/B,SAAUA,EAAUg/C,QAASrf,GAArC,iB,6BCtGN,qHAgBO,SAASo4G,EAAoBz2I,GAClC,MAAMyyB,EAAO1f,eACN2pB,EAASg6G,GAAcvnG,mBAAS,GAEjCwnG,GAAY1+J,MAAMykD,IAAYA,GAAW,GAAKA,GAAwD,IAA7C1rB,IAAqBkB,sBACpF,SAASquF,IACP,GAAKo2C,GACW,OAAZj6G,EAAJ,CACA,IACED,YAAehK,EAAMiK,EAAU,KAC/B,MAAOt4B,GACPnb,YAAgBmb,EAAM,IAGxBpE,EAAMwU,WAiBR,OACE,kBAAC,IAAD,CAAOD,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,oIAGE,6BACA,6BAJF,6JAM+CxD,IAAqBkB,sBANpE,yDAQE,6BACA,6BATF,gCAWE,6BAXF,4EAaE,6BAbF,kEAeE,6BACA,6BAhBF,+VAsBA,kBAAC,IAAD,CACE43F,WAAS,EACTl3H,MAAO8pD,EACP6gB,SArCN,SAAkBva,GAChB,GAA2B,KAAvBA,EAAM7I,OAAOvnD,MAAc8jK,EAAW,OACrC,CACH,IAAInjK,EAAIyE,WAAWgrD,EAAM7I,OAAOvnD,OAC5BW,EAAI,KAAIA,EAAI,IACZA,EAAI,IAAGA,EAAI,GACfmjK,EAAWnjK,KAgCT8hF,UA1CN,SAAmBryB,GACK,KAAlBA,EAAMwf,SAAgB+9C,KA0CtBpjD,YAAY,aACZz3B,KAAK,WAEP,kBAAC,IAAD,CAAQhnB,UAAWi4I,EAAUhiI,GAAI,CAAEkxE,GAAI,GAAKnoC,QAAS6iD,GAArD,mC,6BC/EN,4HAeA,SAASq2C,EAAW52I,GAClB,MAAMyyB,EAAO1f,cACb,GAAqB,OAAjB/S,EAAM2lC,OAAiB,OAAO,qCAClC,MAAM0wG,EAAgBvgK,KAAK+mC,MAAwB,GAAlB4V,EAAK4tD,YAChCw2D,EAAwB/gK,KAAK+mC,MAAyB,GAAnB4V,EAAKkoB,aACxCm8F,EAAeD,EAAyBA,EAAwB,IACtE,IAAIE,EAAY/2I,EAAM2lC,OACtB,OAAI1tD,MAAM8+J,GACD,kBAAC,IAAD,uBAITA,GAAa,IACbA,EAAoC,IAAxBjhK,KAAK+mC,MAAMk6H,GAEnBA,EAAY,IACP,kBAAC,IAAD,kDAGLA,EAAYD,EACP,kBAAC,IAAD,0CAIP,kBAAC,IAAD,eACU1hK,IAAeS,OAAOkhK,EAAW,UAD3C,kBACqE,IAClE3hK,IAAeoB,YAAYugK,EAAYV,GAF1C,MAcG,SAASW,EAAoBh3I,GAClC,MAAMyyB,EAAO1f,eACN4yB,EAAQuwG,GAAa/mG,mBAAwB,MAC9C0nG,EAAwB/gK,KAAK+mC,MAAyB,GAAnB4V,EAAKkoB,aACxCm8F,EAAeD,EAAyBA,EAAwB,IAEhEE,EAA+C,IAAnCjhK,KAAK+mC,OAAO8oB,GAAU,GAAK,KACvCjnC,EAAsB,OAAXinC,GAAmB1tD,MAAM8+J,IAAcA,EAAY,KAAQA,EAAYD,EAExF,SAASG,IACP,GAAe,OAAXtxG,EAAiB,OACrB,GAAIjnC,EAAU,OAEd,MAAM23I,EAAgBvgK,KAAK+mC,MAAwB,GAAlB4V,EAAK4tD,YACtC,IAAI02D,EAAYpxG,EAGhBoxG,EAA2C,IAA/BjhK,KAAK+mC,MAAMk6H,EAAY,KAEnC,MAAMpuE,EAASouE,EAAYV,EAC3B5jH,EAAK8sD,uBAAyBvuE,IAAqBG,uBACnDshB,EAAKkoB,aAAeo8F,EAKpB,IAAIG,EAAgBtzI,YAAa,EAAG9tB,KAAK+mC,MAAMk6H,EAAY,IAC3DG,EAAkD,IAAlCphK,KAAK+mC,MAAMq6H,EAAgB,KAE3CzkH,EAAKohH,cAAgBkD,EAAYG,EACjCzkH,EAAKl+C,MAAQk+C,EAAKl+C,MAAM8oC,KAAKsrD,GAC7Bl2C,EAAK6tD,8BACLtgF,EAAMwU,UACNvrB,YACG,UAAS7T,IAAeS,OAAOkhK,EAAW,wBACtC3hK,IAAeoB,YAAYmyF,OAAYvzF,IAAeS,OAAOqhK,EAAe,+FAEnD9hK,IAAeoB,YAAYi8C,EAAK4tD,aAalE,OACE,kBAAC,IAAD,CAAO9rE,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,qGAEE,6BACA,6BAHF,4BAIiCp/B,IAAeoB,YAAYsgK,GAJ5D,cAKE,6BALF,2CAOE,6BAPF,uDASE,6BATF,8GAWE,6BAXF,kEAaE,6BACA,6BAdF,6PAmBA,kBAACF,EAAD,CAAYjxG,OAAQA,IACpB,kBAAC,IAAD,CAAWmkE,WAAS,EAAC3sD,YAAY,eAAeI,SA3BpD,SAAkBva,GACW,KAAvBA,EAAM7I,OAAOvnD,MAAcsjK,EAAU,MACpCA,EAAUl+J,WAAWgrD,EAAM7I,OAAOvnD,SAyB+ByiF,UA/BxE,SAAmBryB,GACK,KAAlBA,EAAMwf,SAAgBy0F,OA+BxB,kBAAC,IAAD,CAAQv4I,SAAUA,EAAUg/C,QAASu5F,EAAgBtiI,GAAI,CAAEkxE,GAAI,IAA/D,uB,6BC9HN,oGAgBO,SAASsxD,EAAmBn3I,GACjC,MAAMyyB,EAAO1f,cACP+4B,EAAMrZ,EAAKwtD,qBACjB,IAAIm3D,EAAa,EACbC,EAAkB,EACtB,OAAQ5kH,EAAK8hH,cACX,KAAK,EACH6C,EAAa,GACbC,EAAkB,EAClB,MACF,KAAK,EACHD,EAAa,IACbC,EAAkB,EAClB,MACF,KAAK,EACHD,EAAa,IACbC,EAAkB,EAClB,MACF,KAAK,EACHD,EAAa,GACbC,EAAkB,IAClB,MACF,QACE,OAAO,qCAEX,MAAMC,EAAUxrG,EAAMsrG,EAAaC,EAC7BE,EAAezhK,KAAK4qB,MAAMsQ,IAAqBC,cAAgBmmI,GASrE,OACE,kBAAC,IAAD,CAAO7iI,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,2CACsCp/B,IAAeoB,YAAY8gK,GADjE,gCACwG,IACrGliK,IAAeS,OAAoB,IAAbuhK,EAAkB,UAF3C,2BAGGhiK,IAAeS,OAAO0hK,EAAc,UAHvC,YAIE,6BACA,6BALF,sCAOE,6BACA,6BARF,wFAWA,kBAAC,IAAD,CAAQ75F,QApBZ,WACEjrB,EAAK8hH,eACL9hH,EAAKusD,SAASs4D,GACd7kH,EAAKotD,WAAa03D,EAClBv3I,EAAMmwC,WACNnwC,EAAMwU,YAeJ,a,6BChEN,oHAiBO,SAASgjI,EAAcx3I,GAC5B,MAAMyyB,EAAO1f,eACN4yB,EAAQuwG,GAAa/mG,mBAAS,IAC/BsoG,EAAoBhlH,EAAKwtD,qBAAuBxtD,EAAKkoB,YAE3D,SAAS+8F,IACP,MAAM73D,EAAY7nG,WAAW2tD,GACvB8xG,EAAoBhlH,EAAKwtD,qBAAuBxtD,EAAKkoB,YACvD1iE,MAAM4nG,GACR52F,YAAgB,6CAGd42F,EAAYptD,EAAKotD,UACnB52F,YAAgB,qDAGlBwpC,EAAKytD,QAAS,EACdztD,EAAK4tD,WAAao3D,EAClBhlH,EAAKohH,aAAeh0D,EACpBptD,EAAKotD,WAAaA,EAClBptD,EAAKusD,SAASa,EAAY43D,GAC1Bz3I,EAAMmwC,WACNlnD,YACG,iBAAgBwpC,EAAKtgD,0BACjBiD,IAAeoB,YAAYqpG,EAAY43D,GAAzC,gBAELz3I,EAAMwU,WAWR,OACE,kBAAC,IAAD,CAAOD,KAAMvU,EAAMuU,KAAMC,QAASxU,EAAMwU,SACtC,kBAAC,IAAD,2KAEqDp/B,IAAeoB,YAAYihK,GAFhF,uFAIE,6BACA,6BALF,uBAMuBriK,IAAeS,OAAO48C,EAAKotD,UAAW,UAN7D,kCAQA,kBAAC,IAAD,CAAK3sE,QAAQ,OAAOC,WAAW,UAC7B,kBAAC,IAAD,CACEvgC,MAAO+yD,EACP4X,SAjBR,SAAkBva,GAChBkzG,EAAUlzG,EAAM7I,OAAOvnD,QAiBjBk3H,WAAS,EACTpkF,KAAK,SACLy3B,YAAY,kBACZkY,UAzBR,SAAmBryB,GACK,KAAlBA,EAAMwf,SAAgBk1F,OA0BtB,kBAAC,IAAD,CAAQ/iI,GAAI,CAAEkxE,GAAI,GAAKnoC,QAASg6F,GAAhC,iB,6BCxER,gFAiBO,SAASC,EAAiB33I,GAC/B,MAAMG,EAAS0F,IAAIjyB,SACbksC,EAASja,IAAID,UACZ2gD,EAAOqxF,GAAYzoG,oBAAS,GAEnC,QAAwCjvC,IAApCF,EAAMuY,SAASwuG,iBAAgC,MAAM,IAAI3mH,MAAM,kDACnE,MAAMy3I,EAAqB73I,EAAMuY,SAASwuG,iBAAiB6M,sBACrDlkG,EAfR,SAAwBvvB,EAAiB03I,GACvC,MAAMC,EAAa33I,EAAOuX,SAAWvX,EAAOwX,QAAUxX,EAAOyX,UAAYzX,EAAO0X,QAAU1X,EAAO2X,SAC3F4X,EAAamoH,EAAqB/hK,KAAKg1B,IAAIgtI,EAAY,IAAO,IAAM33I,EAAOuc,aAAe,KAChG,OAAIgT,EAAa,EAAU,EACvBA,EAAa,EAAU,EACpBA,EAUYqoH,CAAe53I,EAAQ03I,GAM1C,OAAKtxF,EAaH,kBAAC,IAAD,CACEyxF,mBAAoBH,EACpBI,WAAYvoH,EACZ9iB,SAAU5M,EAAMuY,SAASwuG,iBAAiB4M,oBAd1C,kBAAC,IAAD,CACE5jF,SAAU/vC,EAAMuY,SAChB0/H,WAAYvoH,EACZ9iB,SAAU5M,EAAMuY,SAASwuG,iBAAiB4M,kBAC1CptE,MAAO,IAAMqxF,GAAS,GACtBM,OAXN,WACEp4H,EAAO2tB,c,6BC5BX,6EAcA,SAAS0qG,EAAUx4I,EAAervB,GAChC,IAAI8nK,EAAQ,GAOZ,OANI9nK,GAAU,EAAGA,EAAS,EACjBA,EAAS,GAAIA,EAAS,IAE7BA,IACA8nK,EAAQ,KAGR,0BAAMz6F,MAAO,CAAEh+C,MAAOA,IACnB,IAAItpB,OAAO/F,GACX8nK,EACA,IAAI/hK,OAAO,GAAK+hK,EAAM9nK,OAASA,IAwB/B,SAAS+nK,EAAMr4I,GACpB,OACE,oCACE,kBAAC,IAAD,CAAM2lD,WAAS,EAAC1Y,QAAS,GACvB,kBAAC,IAAD,CAAMipB,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAYtW,QAAQ,MAApB,gBAAuC7/C,EAAM+vC,SAAS59D,OAExD,kBAAC,IAAD,CAAM+jF,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAYtW,QAAQ,KAAKlgD,MAAM,WAA/B,kBACkBK,EAAM4M,WAG1B,kBAAC,IAAD,CAAMspD,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAYxhD,GAAI,CAAEo7E,WAAY,MAAOvf,WAAY,QAAjD,IA/BW,KADC9gD,EAgC6D1vB,EAAMi4I,YA7BnF,0BAAMt6F,MAAO,CAAEh+C,MAAO,UACnB,IACA,IAAItpB,OAAO,KAKd,oCACG8hK,EAAU,QAAsB,GAAbzoH,GACnByoH,EAAU,SAA6B,IAAlBzoH,EAAa,IAClCyoH,EAAU,MAA0B,IAAlBzoH,EAAa,KAmB9B,KACA,kBAAC,IAAD,CACE/a,GAAI,CAAEo7E,WAAY,MAAOvf,WAAY,QACpC,4CACH,kBAAC,IAAD,CACE77D,GAAI,CAAEo7E,WAAY,MAAOvf,WAAY,QACpC,iDAEL,kBAAC,IAAD,CAAMta,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,8MAIA,6BACA,kBAAC,IAAD,uGAGA,6BACA,kBAAC,IAAD,0CACA,6BACA,kBAAC,IAAD,uDACA,6BACA,kBAAC,IAAD,qDACA,6BACA,kBAAC,IAAD,qDAEF,kBAAC,IAAD,CAAMD,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CAAQzY,QAAS19C,EAAMumD,OAAvB,UAEF,kBAAC,IAAD,CAAM2P,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CAAQzY,QAAS19C,EAAMk4I,QAAvB,aA9DV,IAAsBxoH,I,6BC/BtB,sCAqBK4oH,EArBL,kI,SAqBKA,O,yBAAAA,I,uBAAAA,I,mBAAAA,I,gBAAAA,M,KAOL,MAAMC,EAAY,CAChBC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KAGK,SAAS/hF,EAAKh3D,GACnB,MAAMG,EAAS0F,IAAIjyB,SACbksC,EAASja,IAAID,UACZa,EAAOuyI,GAAY7pG,mBAAS,IAC5B8pG,EAAOC,GAAY/pG,mBAASmpG,EAAMa,YAClCC,EAASC,GAAclqG,mBAAS,KAChCmqG,EAASC,GAAcpqG,mBAAS,CACrCqqG,UAAW,EAAE,GAAI,GACjB50F,GAAI9uE,KAAK4qB,MAAM5qB,KAAKitB,SAAWw1I,EAAUjoK,UAG3C,SAASmpK,IACP,IAAI70F,EAAK00F,EAAQE,UAAU,GAC3B,MAAME,EAAM,CAACJ,EAAQE,UAAU,GAAIF,EAAQE,UAAU,GAAIF,EAAQ10F,IACjE,KAAO80F,EAAIvjI,SAASyuC,IAClBA,EAAK9uE,KAAK4qB,MAAM5qB,KAAKitB,SAAWw1I,EAAUjoK,QAE5C,OAAOs0E,EAGT,SAAS+0F,IACPJ,EAAW,CACTC,UAAW,CAACF,EAAQE,UAAU,GAAIF,EAAQ10F,IAC1CA,GAAI60F,MAeR,SAASG,EAAW9tF,GAClButF,EAAYjpG,IACV,IAAIypG,EAAOzpG,EAGX,OAFAypG,GAAQ/tF,EAAM,IAAM,IAChB+tF,EAAKvpK,OAAS,KAAIupK,EAAOA,EAAKlmK,MAAM,IACjCkmK,IAiBX,IAAIC,EACJ,OAAQb,GACN,KAAKX,EAAMa,UACTW,EAAiB,kBAAC,IAAD,CAAWC,SAAU,IAAMb,EAASZ,EAAM0B,YAC3D,MACF,KAAK1B,EAAM0B,SAAU,CACnB,MAAMC,EAAW1B,EAAUe,EAAQ10F,IACnCk1F,EAAiB,kBAACG,EAAD,CAAUC,UAxC/B,WACEN,GAAW,GACPnzI,IAAUzG,EAAM4M,SAClBssI,EAASZ,EAAM6B,OAEfjB,EAASZ,EAAMa,WACfH,EAASvyI,EAAQ,IAEnBkzI,KAgCiDS,UApBnD,SAAiBvhC,GACfqgC,EAASZ,EAAMa,WACfS,GAAW,GAGX,MAAMl4E,EAASm3C,WAASwhC,UAAYl6I,EAAO9B,GAAgC,EAA3B2B,EAAMg4I,mBAClD73I,EAAO6lB,WAAW07C,GACpB5hD,EAAO2tB,SAGTksG,KAUqEjqH,WAAY1vB,EAAMi4I,WAAaxxI,EAAQ,KAC1G,MAEF,KAAK6xI,EAAM6B,KACTL,EACE,kBAAC,IAAD,CACE9B,mBAAoBh4I,EAAMg4I,mBAC1BC,WAAYj4I,EAAMi4I,WAClBrrI,SAAU5M,EAAM4M,WAexB,OACE,oCACE,kBAAC,IAAD,CAAM+4C,WAAS,EAAC1Y,QAAS,GACvB,kBAAC,IAAD,CAAMipB,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,eACU1vD,EADV,MAC8BzG,EAAM4M,UAEpC,mBAhBR,WACE,OACE,4BACE,0BAAM+wC,MAAO,CAAEh+C,MAAO,SAAWy5I,EAAQzlK,MAAM,EAAGylK,EAAQ9oK,OAAS,IAClE8oK,EAAQA,EAAQ9oK,OAAS,MAYxB,OAGF,kBAAC,IAAD,CAAM4lF,MAAI,EAACC,GAAI,IACZ2jF,O,6BC5IX,qEAQO,SAASX,EAAUn5I,GACxB,MAAO6I,EAAGyxI,GAAQnrG,mBAAS,GAS3B,OARAkB,oBAAU,KACE,IAANxnC,EAIJ03C,WAAW,IAAM+5F,EAAKzxI,EAAI,GAAI,KAH5B7I,EAAM+5I,aAOR,oCACE,kBAAC,IAAD,CAAMp0F,WAAS,EAAC1Y,QAAS,GACvB,kBAAC,IAAD,CAAMipB,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAYtW,QAAQ,MAApB,cACA,kBAAC,IAAD,CAAYA,QAAQ,MAAMh3C,Q,6BCvBpC,kHAiBA,MAAM0xI,EAKF,CACF9jF,QAAS,CAAE/P,MAAO,IAAM7iD,IAAK,EAAG1rB,IAAK,GACrCu+E,OAAQ,CAAEhQ,MAAO,IAAM7iD,IAAK,EAAG1rB,IAAK,GACpCw+E,KAAM,CAAEjQ,MAAO,IAAM7iD,IAAK,EAAG1rB,IAAK,GAClCy+E,WAAY,CAAElQ,MAAO,KAAM7iD,IAAK,EAAG1rB,IAAK,IA8BnC,SAASsgK,EAAYz4I,GAC1B,MAAM0vB,EAAyB,CAAEg3B,MAAO,EAAG7iD,IAAK,EAAG1rB,IAAK,GACxDi+E,YAAYmkF,EAAcv6I,EAAM0vB,WAAYA,GAC5C,MAAMg3B,EAAQh3B,EAAWg3B,OAClBypB,EAAOqqE,GAAYrrG,mBAAS,KAC5BogC,GAAQpgC,mBAhCjB,SAA0Bzf,GACxB,IAAIp5C,EAAM,GACV,MAAMhG,EAASyyB,YAAO2sB,EAAW7rB,IAAK6rB,EAAWv3C,KACjD,IAAK,IAAI/H,EAAI,EAAGA,EAAIE,EAAQF,IAC1BkG,GAAO,CAAC,IAAK,IAAK,IAAK,KAAKR,KAAK4qB,MAAsB,EAAhB5qB,KAAKitB,WAG9C,OAAOzsB,EAyBiBmkK,CAAiB/qH,IAiBzC,OACE,kBAAC,IAAD,CAAMi2B,WAAS,EAAC1Y,QAAS,GACvB,kBAAC,IAAD,CAAW+oB,OAAQtP,EAAOqP,SAAU/1D,EAAMo6I,YAC1C,kBAAC,IAAD,CAAMlkF,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAYtW,QAAQ,MAApB,sBACA,kBAAC,IAAD,CAAYlC,MAAO,CAAE+2B,SAAU,QAC3B,GAAEnF,IAAOY,IACX,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAY9a,UAxBlB,SAA+BryB,GAC7BA,EAAM4sC,iBACN,MAAM8qE,EA1BV,SAAiB13G,GACf,OAAqB,IAAjBA,EAAMwf,SAAiBxf,EAAM23G,SAAiB,IAC7B,KAAjB33G,EAAMwf,SAAmBxf,EAAM23G,SACd,KAAjB33G,EAAMwf,SAAkBxf,EAAM23G,SAAiB,IAC9B,KAAjB33G,EAAMwf,SAAkBxf,EAAM23G,SAAiB,IAC5C,GAH6C,IAwBrCC,CAAQ53G,GAChB03G,KAnBT,SAAenrE,EAAcY,GAC3B,MACY,MAATZ,GAA0B,MAAVY,GACP,MAATZ,GAA0B,MAAVY,GACP,MAATZ,GAA0B,MAAVY,GACP,MAATZ,GAA0B,MAAVY,EAeZ15B,CAAM84B,EAAKA,EAAKj/F,OAAS6/F,EAAM7/F,OAAS,GAAIoqK,GAC/C16I,EAAMo6I,YAGJ7qE,EAAKj/F,SAAW6/F,EAAM7/F,OAAS,EAInCkqK,EAASrqE,EAAQuqE,GAHf16I,EAAMk6I,cAe0BE,UAAWp6I,EAAMo6I,gB,8BCvFvD,gGAaA,MAAMG,EAKF,CACF9jF,QAAS,CAAEhjF,OAAQ,KACnBijF,OAAQ,CAAEjjF,OAAQ,KAClBkjF,KAAM,CAAEljF,OAAQ,KAChBmjF,WAAY,CAAEnjF,OAAQ,MAGjB,SAAS+kK,EAAUx4I,GACxB,MAAM0vB,EAAyB,CAAEj8C,OAAQ,GACzC2iF,YAAYmkF,EAAcv6I,EAAM0vB,WAAYA,GAC5C,MAAOmrH,EAAUC,GAAe3rG,oBAAS,GAwBzC,OAZAkB,oBAAU,KACR,IAAIutF,GAAO,EACX,MAAMh5E,EAAKnxE,OAAO8sE,WAAW,KAC3Bu6F,GAAY,GACZld,EAAMnqJ,OAAO8sE,WAAW,IAAMu6F,GAAY,GAAOprH,EAAWj8C,SAC3C,KAAhBqC,KAAKitB,SAAkB,MAC1B,MAAO,KACLkzD,cAAcrR,IACD,IAATg5E,GAAY3nE,cAAc2nE,KAE/B,IAGD,kBAAC,IAAD,CAAMj4E,WAAS,EAAC1Y,QAAS,GACvB,kBAAC,IAAD,CAAW+oB,OAAQ,IAAMD,SAAU/1D,EAAMo6I,YACzC,kBAAC,IAAD,CAAMlkF,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAYtW,QAAQ,MAApB,iCACA,kBAAC,IAAD,CAAYA,QAAQ,MAAMg7F,EAAW,aAAe,eACpD,kBAAC,IAAD,CAAYxlF,UA5BlB,SAA+BryB,GAC7BA,EAAM4sC,iBACgB,KAAlB5sC,EAAMwf,UACNq4F,EACF76I,EAAMo6I,YAENp6I,EAAMk6I,cAsB0BE,UAAWp6I,EAAMo6I,gB,6BC1DvD,kHAiBA,MAAMG,EAKF,CACF9jF,QAAS,CAAE/P,MAAO,KAAO7iD,IAAK,EAAG1rB,IAAK,GACtCu+E,OAAQ,CAAEhQ,MAAO,MAAO7iD,IAAK,EAAG1rB,IAAK,GACrCw+E,KAAM,CAAEjQ,MAAO,KAAO7iD,IAAK,EAAG1rB,IAAK,GACnCy+E,WAAY,CAAElQ,MAAO,IAAM7iD,IAAK,EAAG1rB,IAAK,IAGnC,SAASugK,EAAa14I,GAC3B,MAAM0vB,EAAyB,CAAEg3B,MAAO,EAAG7iD,IAAK,EAAG1rB,IAAK,GACxDi+E,YAAYmkF,EAAcv6I,EAAM0vB,WAAYA,GAC5C,MAAMg3B,EAAQh3B,EAAWg3B,OAClB1wE,GAAUm5D,mBAgCnB,SAAoBzf,GAClB,MAAMp/C,EAASyyB,YAAO2sB,EAAW7rB,IAAK6rB,EAAWv3C,KACjD,IAAInC,EAAS,GACb,IAAK,IAAI5F,EAAI,EAAGA,EAAIE,EAAQF,IACtBA,EAAI,IAAG4F,GAAU,KACrBA,GAAU+kK,EAAMjlK,KAAK4qB,MAAM5qB,KAAKitB,SAAWg4I,EAAMzqK,SAGnD,OAAO0F,EAxCmBglK,CAAWtrH,KAC9BurH,EAAOC,GAAY/rG,mBAAS,IAWnC,OACE,kBAAC,IAAD,CAAMwW,WAAS,EAAC1Y,QAAS,GACvB,kBAAC,IAAD,CAAW+oB,OAAQtP,EAAOqP,SAAU/1D,EAAMo6I,YAC1C,kBAAC,IAAD,CAAMlkF,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CAAYtW,QAAQ,MAApB,oBACA,kBAAC,IAAD,CAAYwV,UAdlB,SAA+BryB,GAE7B,GADAA,EAAM4sC,iBACgB,KAAlB5sC,EAAMwf,QAAgB,OAC1B,MAAM24F,EAAYF,EAAQj4G,EAAM9vD,IAAIgvB,cAC/BlsB,EAAOytC,WAAW03H,GACdnlK,IAAWmlK,EAAWn7I,EAAMk6I,YAChCgB,EAASC,GAFqBn7I,EAAMo6I,aAUPA,UAAWp6I,EAAMo6I,aAEjD,kBAAC,IAAD,CAAMlkF,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CAAYxY,MAAO,CAAEC,UAAW,eAAiB5nE,IAEnD,kBAAC,IAAD,CAAMkgF,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,KACG8kF,EACD,kBAAC,IAAD,SAkBV,MAAMF,EAAQ,CACZ,YACA,SACA,MACA,cACA,QACA,SACA,YACA,SACA,MACA,OACA,SACA,OACA,UACA,WACA,OACA,YACA,UACA,SACA,MACA,MACA,OACA,QACA,YACA,UACA,KACA,SACA,SACA,YACA,QACA,YACA,UACA,UACA,WACA,WACA,YACA,SACA,OACA,MACA,aACA,aACA,YACA,OACA,SACA,WACA,QACA,aACA,SACA,UACA,cACA,UACA,OACA,MACA,WACA,SACA,cACA,MACA,aACA,WACA,OACA,MACA,UACA,QACA,WACA,UACA,aACA,QACA,UACA,MACA,OACA,SACA,WACA,WACA,UACA,QACA,cACA,cACA,YACA,SACA,OACA,SACA,QACA,WACA,WACA,WACA,OACA,SACA,WACA,YACA,OACA,OACA,YACA,YACA,OACA,QACA,UACA,YACA,WACA,aACA,YACA,OACA,WACA,WACA,SACA,MACA,WACA,UACA,SACA,gBACA,OACA,QACA,UACA,QACA,QACA,UACA,YACA,QACA,YACA,UACA,QACA,SACA,SACA,QACA,UACA,cACA,QACA,aACA,MACA,UACA,OACA,WACA,WACA,UACA,SACA,aACA,YACA,SACA,SACA,SACA,OACA,WACA,QACA,OACA,WACA,SACA,SACA,WACA,SACA,UACA,QACA,SACA,QACA,UACA,UACA,UACA,UACA,aACA,WACA,QACA,SACA,MACA,WACA,SACA,aACA,UACA,MACA,OACA,SACA,UACA,OACA,OACA,UACA,SACA,aACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,YACA,QACA,QACA,YACA,WACA,oBACA,WACA,OACA,UACA,cACA,UACA,SACA,UACA,gBACA,OACA,SACA,QACA,MACA,WACA,WACA,WACA,cACA,SACA,UACA,QACA,eACA,WACA,OACA,OACA,SACA,MACA,OACA,iBACA,WACA,UACA,UACA,UACA,iBACA,QACA,MACA,YACA,UACA,SACA,OACA,SACA,UACA,WACA,YACA,cACA,MACA,OACA,MACA,MACA,Q,6BCtTF,gGAcA,MAAMR,EAKF,CACF9jF,QAAS,CAAE/P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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1223,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Corporation } from \"./Corporation/Corporation\";\nimport { PlayerObject } from \"./PersonObjects/Player/PlayerObject\";\nimport { sanitizeExploits } from \"./Exploits/Exploit\";\n\nimport { Reviver } from \"./utils/JSONReviver\";\n\nimport Decimal from \"decimal.js\";\n\nexport let Player = new PlayerObject();\n\nexport function loadPlayer(saveString: string): void {\n  Player = JSON.parse(saveString, Reviver);\n\n  // Parse Decimal.js objects\n  Player.money = new Decimal(Player.money);\n\n  if (Player.corporation instanceof Corporation) {\n    Player.corporation.funds = new Decimal(Player.corporation.funds);\n    Player.corporation.revenue = new Decimal(Player.corporation.revenue);\n    Player.corporation.expenses = new Decimal(Player.corporation.expenses);\n\n    for (let i = 0; i < Player.corporation.divisions.length; ++i) {\n      const ind = Player.corporation.divisions[i];\n      ind.lastCycleRevenue = new Decimal(ind.lastCycleRevenue);\n      ind.lastCycleExpenses = new Decimal(ind.lastCycleExpenses);\n      ind.thisCycleRevenue = new Decimal(ind.thisCycleRevenue);\n      ind.thisCycleExpenses = new Decimal(ind.thisCycleExpenses);\n    }\n  }\n\n  Player.exploits = sanitizeExploits(Player.exploits);\n}\n","import numeral from \"numeral\";\nimport \"numeral/locales/bg\";\nimport \"numeral/locales/cs\";\nimport \"numeral/locales/da-dk\";\nimport \"numeral/locales/de\";\nimport \"numeral/locales/en-au\";\nimport \"numeral/locales/en-gb\";\nimport \"numeral/locales/es\";\nimport \"numeral/locales/fr\";\nimport \"numeral/locales/hu\";\nimport \"numeral/locales/it\";\nimport \"numeral/locales/lv\";\nimport \"numeral/locales/no\";\nimport \"numeral/locales/pl\";\nimport \"numeral/locales/ru\";\n\n/* eslint-disable class-methods-use-this */\n\nconst extraFormats = [1e15, 1e18, 1e21, 1e24, 1e27, 1e30];\nconst extraNotations = [\"q\", \"Q\", \"s\", \"S\", \"o\", \"n\"];\n\nclass NumeralFormatter {\n  // Default Locale\n  defaultLocale = \"en\";\n\n  constructor() {\n    this.defaultLocale = \"en\";\n  }\n\n  updateLocale(l: string): boolean {\n    if (numeral.locale(l) == null) {\n      console.warn(`Invalid locale for numeral: ${l}`);\n\n      numeral.locale(this.defaultLocale);\n      return false;\n    }\n    return true;\n  }\n\n  format(n: number, format: string): string {\n    // numeraljs doesnt properly format numbers that are too big or too small\n    if (Math.abs(n) < 1e-6) {\n      n = 0;\n    }\n    const answer = numeral(n).format(format);\n    if (answer === \"NaN\") {\n      return `${n}`;\n    }\n    return answer;\n  }\n\n  formatBigNumber(n: number): string {\n    return this.format(n, \"0.000a\");\n  }\n\n  // TODO: leverage numeral.js to do it. This function also implies you can\n  // use this format in some text field but you can't. ( \"1t\" will parse but\n  // \"1s\" will not)\n  formatReallyBigNumber(n: number, decimalPlaces = 3): string {\n    if (n === Infinity) return \"∞\";\n    for (let i = 0; i < extraFormats.length; i++) {\n      if (extraFormats[i] < n && n <= extraFormats[i] * 1000) {\n        return this.format(n / extraFormats[i], \"0.\" + \"0\".repeat(decimalPlaces)) + extraNotations[i];\n      }\n    }\n    if (Math.abs(n) < 1000) {\n      return this.format(n, \"0.\" + \"0\".repeat(decimalPlaces));\n    }\n    const str = this.format(n, \"0.\" + \"0\".repeat(decimalPlaces) + \"a\");\n    if (str === \"NaNt\") return this.format(n, \"0.\" + \" \".repeat(decimalPlaces) + \"e+0\");\n    return str;\n  }\n\n  formatHp(n: number): string {\n    if (n < 1e6) {\n      return this.format(n, \"0,0\");\n    }\n    return this.formatReallyBigNumber(n);\n  }\n\n  formatMoney(n: number): string {\n    return \"$\" + this.formatReallyBigNumber(n);\n  }\n\n  formatSkill(n: number): string {\n    if (n < 1e15) {\n      return this.format(n, \"0,0\");\n    }\n    return this.formatReallyBigNumber(n);\n  }\n\n  formatExp(n: number): string {\n    return this.formatReallyBigNumber(n);\n  }\n\n  formatHashes(n: number): string {\n    return this.formatReallyBigNumber(n);\n  }\n\n  formatReputation(n: number): string {\n    return this.formatReallyBigNumber(n);\n  }\n\n  formatFavor(n: number): string {\n    return this.format(n, \"0,0\");\n  }\n\n  formatRAM(n: number): string {\n    return this.format(n, \"0.00\") + \"GB\";\n  }\n\n  formatPercentage(n: number, decimalPlaces = 2): string {\n    const formatter: string = \"0.\" + \"0\".repeat(decimalPlaces) + \"%\";\n    return this.format(n, formatter);\n  }\n\n  formatServerSecurity(n: number): string {\n    return this.format(n, \"0,0.000\");\n  }\n\n  formatRespect(n: number): string {\n    return this.formatReallyBigNumber(n, 5);\n  }\n\n  formatWanted(n: number): string {\n    return this.formatReallyBigNumber(n, 5);\n  }\n\n  formatMultiplier(n: number): string {\n    return this.format(n, \"0,0.00\");\n  }\n\n  formatSleeveShock(n: number): string {\n    return this.format(n, \"0,0.000\");\n  }\n\n  formatSleeveSynchro(n: number): string {\n    return this.format(n, \"0,0.000\");\n  }\n\n  formatSleeveMemory(n: number): string {\n    return this.format(n, \"0\");\n  }\n\n  formatPopulation(n: number): string {\n    return this.format(n, \"0.000a\");\n  }\n\n  formatStamina(n: number): string {\n    return this.format(n, \"0.0\");\n  }\n\n  formatShares(n: number): string {\n    if (n < 1000) {\n      return this.format(n, \"0\");\n    }\n    return this.formatReallyBigNumber(n);\n  }\n\n  formatInfiltrationSecurity(n: number): string {\n    return this.formatReallyBigNumber(n);\n  }\n\n  formatThreads(n: number): string {\n    return this.format(n, \"0,0\");\n  }\n\n  parseMoney(s: string): number {\n    // numeral library does not handle formats like 1e10 well (returns 110),\n    // so if both return a valid number, return the biggest one\n    const numeralValue = numeral(s).value();\n    const parsed = parseFloat(s);\n    if (isNaN(parsed) && numeralValue === null) {\n      return NaN;\n    } else if (isNaN(parsed)) {\n      return numeralValue;\n    } else if (numeralValue === null) {\n      return parsed;\n    } else {\n      return Math.max(numeralValue, parsed);\n    }\n  }\n}\n\nexport const numeralWrapper = new NumeralFormatter();\n","/**\n * Generic Game Constants\n *\n * Constants for specific mechanics or features will NOT be here.\n */\nexport const CONSTANTS: {\n  Version: string;\n  _idleSpeed: number;\n  MaxSkillLevel: number;\n  MilliPerCycle: number;\n  CorpFactionRepRequirement: number;\n  BaseFocusBonus: number;\n  BaseCostFor1GBOfRamHome: number;\n  BaseCostFor1GBOfRamServer: number;\n  TravelCost: number;\n  BaseFavorToDonate: number;\n  DonateMoneyToRepDivisor: number;\n  FactionReputationToFavorBase: number;\n  FactionReputationToFavorMult: number;\n  CompanyReputationToFavorBase: number;\n  CompanyReputationToFavorMult: number;\n  NeuroFluxGovernorLevelMult: number;\n  NumNetscriptPorts: number;\n  HomeComputerMaxRam: number;\n  ServerBaseGrowthRate: number;\n  ServerMaxGrowthRate: number;\n  ServerFortifyAmount: number;\n  ServerWeakenAmount: number;\n  PurchasedServerLimit: number;\n  PurchasedServerMaxRam: number;\n  MultipleAugMultiplier: number;\n  TorRouterCost: number;\n  InfiltrationBribeBaseAmount: number;\n  InfiltrationMoneyValue: number;\n  InfiltrationRepValue: number;\n  InfiltrationExpPow: number;\n  WSEAccountCost: number;\n  TIXAPICost: number;\n  MarketData4SCost: number;\n  MarketDataTixApi4SCost: number;\n  StockMarketCommission: number;\n  HospitalCostPerHp: number;\n  IntelligenceCrimeWeight: number;\n  IntelligenceInfiltrationWeight: number;\n  IntelligenceCrimeBaseExpGain: number;\n  IntelligenceProgramBaseExpGain: number;\n  IntelligenceTerminalHackBaseExpGain: number;\n  IntelligenceSingFnBaseExpGain: number;\n  IntelligenceClassBaseExpGain: number;\n  IntelligenceHackingMissionBaseExpGain: number;\n  HackingMissionRepToDiffConversion: number;\n  HackingMissionRepToRewardConversion: number;\n  HackingMissionSpamTimeIncrease: number;\n  HackingMissionTransferAttackIncrease: number;\n  HackingMissionMiscDefenseIncrease: number;\n  HackingMissionDifficultyToHacking: number;\n  HackingMissionHowToPlay: string;\n  MillisecondsPer20Hours: number;\n  GameCyclesPer20Hours: number;\n  MillisecondsPer10Hours: number;\n  GameCyclesPer10Hours: number;\n  MillisecondsPer8Hours: number;\n  GameCyclesPer8Hours: number;\n  MillisecondsPer4Hours: number;\n  GameCyclesPer4Hours: number;\n  MillisecondsPer2Hours: number;\n  GameCyclesPer2Hours: number;\n  MillisecondsPerHour: number;\n  GameCyclesPerHour: number;\n  MillisecondsPerHalfHour: number;\n  GameCyclesPerHalfHour: number;\n  MillisecondsPerQuarterHour: number;\n  GameCyclesPerQuarterHour: number;\n  MillisecondsPerFiveMinutes: number;\n  GameCyclesPerFiveMinutes: number;\n  FactionWorkHacking: string;\n  FactionWorkField: string;\n  FactionWorkSecurity: string;\n  WorkTypeCompany: string;\n  WorkTypeCompanyPartTime: string;\n  WorkTypeFaction: string;\n  WorkTypeCreateProgram: string;\n  WorkTypeStudyClass: string;\n  WorkTypeCrime: string;\n  ClassStudyComputerScience: string;\n  ClassDataStructures: string;\n  ClassNetworks: string;\n  ClassAlgorithms: string;\n  ClassManagement: string;\n  ClassLeadership: string;\n  ClassGymStrength: string;\n  ClassGymDefense: string;\n  ClassGymDexterity: string;\n  ClassGymAgility: string;\n  ClassDataStructuresBaseCost: number;\n  ClassNetworksBaseCost: number;\n  ClassAlgorithmsBaseCost: number;\n  ClassManagementBaseCost: number;\n  ClassLeadershipBaseCost: number;\n  ClassGymBaseCost: number;\n  ClassStudyComputerScienceBaseExp: number;\n  ClassDataStructuresBaseExp: number;\n  ClassNetworksBaseExp: number;\n  ClassAlgorithmsBaseExp: number;\n  ClassManagementBaseExp: number;\n  ClassLeadershipBaseExp: number;\n  CrimeShoplift: string;\n  CrimeRobStore: string;\n  CrimeMug: string;\n  CrimeLarceny: string;\n  CrimeDrugs: string;\n  CrimeBondForgery: string;\n  CrimeTraffickArms: string;\n  CrimeHomicide: string;\n  CrimeGrandTheftAuto: string;\n  CrimeKidnap: string;\n  CrimeAssassination: string;\n  CrimeHeist: string;\n  CodingContractBaseFactionRepGain: number;\n  CodingContractBaseCompanyRepGain: number;\n  CodingContractBaseMoneyGain: number;\n  TotalNumBitNodes: number;\n  LatestUpdate: string;\n} = {\n  Version: \"0.54.0\",\n\n  // Speed (in ms) at which the main loop is updated\n  _idleSpeed: 200,\n\n  /** Max level for any skill, assuming no multipliers. Determined by max numerical value in javascript for experience\n   * and the skill level formula in Player.js. Note that all this means it that when experience hits MAX_INT, then\n   * the player will have this level assuming no multipliers. Multipliers can cause skills to go above this.\n   */\n  MaxSkillLevel: 975,\n\n  // Milliseconds per game cycle\n  MilliPerCycle: 200,\n\n  // How much reputation is needed to join a megacorporation's faction\n  CorpFactionRepRequirement: 200e3,\n\n  // Base RAM costs\n  BaseCostFor1GBOfRamHome: 32000,\n  BaseCostFor1GBOfRamServer: 55000, //1 GB of RAM\n\n  // Cost to travel to another city\n  TravelCost: 200e3,\n\n  // Faction and Company favor-related things\n  BaseFavorToDonate: 150,\n  DonateMoneyToRepDivisor: 1e6,\n  FactionReputationToFavorBase: 500,\n  FactionReputationToFavorMult: 1.02,\n  CompanyReputationToFavorBase: 500,\n  CompanyReputationToFavorMult: 1.02,\n\n  // NeuroFlux Governor Augmentation cost multiplier\n  NeuroFluxGovernorLevelMult: 1.14,\n\n  NumNetscriptPorts: 20,\n\n  // Server-related constants\n  HomeComputerMaxRam: 1073741824, // 2 ^ 30\n  ServerBaseGrowthRate: 1.03, // Unadjusted Growth rate\n  ServerMaxGrowthRate: 1.0035, // Maximum possible growth rate (max rate accounting for server security)\n  ServerFortifyAmount: 0.002, // Amount by which server's security increases when its hacked/grown\n  ServerWeakenAmount: 0.05, // Amount by which server's security decreases when weakened\n\n  PurchasedServerLimit: 25,\n  PurchasedServerMaxRam: 1048576, // 2^20\n\n  // Augmentation Constants\n  MultipleAugMultiplier: 1.9,\n\n  // TOR Router\n  TorRouterCost: 200e3,\n\n  // Infiltration\n  InfiltrationBribeBaseAmount: 100e3, //Amount per clearance level\n  InfiltrationMoneyValue: 5e3, //Convert \"secret\" value to money\n  InfiltrationRepValue: 1.4, //Convert \"secret\" value to faction reputation\n  InfiltrationExpPow: 0.8,\n\n  // Stock market\n  WSEAccountCost: 200e6,\n  TIXAPICost: 5e9,\n  MarketData4SCost: 1e9,\n  MarketDataTixApi4SCost: 25e9,\n  StockMarketCommission: 100e3,\n\n  // Hospital/Health\n  HospitalCostPerHp: 100e3,\n\n  // Intelligence-related constants\n  IntelligenceCrimeWeight: 0.025, // Weight for how much int affects crime success rates\n  IntelligenceInfiltrationWeight: 0.1, // Weight for how much int affects infiltration success rates\n  IntelligenceCrimeBaseExpGain: 0.05,\n  IntelligenceProgramBaseExpGain: 2.5, // Program required hack level divided by this to determine int exp gain\n  IntelligenceTerminalHackBaseExpGain: 200, // Hacking exp divided by this to determine int exp gain\n  IntelligenceSingFnBaseExpGain: 1.5,\n  IntelligenceClassBaseExpGain: 0.01,\n  IntelligenceHackingMissionBaseExpGain: 3, // Hacking Mission difficulty multiplied by this to get exp gain\n\n  // Hacking Missions\n  // TODO Move this into Hacking Mission implementation\n  HackingMissionRepToDiffConversion: 10000, // Faction rep is divided by this to get mission difficulty\n  HackingMissionRepToRewardConversion: 7, // Faction rep divided byt his to get mission rep reward\n  HackingMissionSpamTimeIncrease: 25000, // How much time limit increase is gained when conquering a Spam Node (ms)\n  HackingMissionTransferAttackIncrease: 1.05, // Multiplier by which the attack for all Core Nodes is increased when conquering a Transfer Node\n  HackingMissionMiscDefenseIncrease: 1.05, // The amount by which every misc node's defense is multiplied when one is conquered\n  HackingMissionDifficultyToHacking: 135, // Difficulty is multiplied by this to determine enemy's \"hacking\" level (to determine effects of scan/attack, etc)\n  HackingMissionHowToPlay:\n    \"Hacking missions are a minigame that, if won, will reward you with faction reputation.<br><br>\" +\n    \"In this game you control a set of Nodes and use them to try and defeat an enemy. Your Nodes \" +\n    \"are colored blue, while the enemy's are red. There are also other nodes on the map colored gray \" +\n    \"that initially belong to neither you nor the enemy. The goal of the game is \" +\n    \"to capture all of the enemy's Database nodes within the time limit. \" +\n    \"If you fail to do this, you will lose.<br><br>\" +\n    \"Each Node has three stats: Attack, Defense, and HP. There are five different actions that \" +\n    \"a Node can take:<br><br> \" +\n    \"Attack - Targets an enemy Node and lowers its HP. The effectiveness is determined by the owner's Attack, the Player's \" +\n    \"hacking level, and the enemy's defense.<br><br>\" +\n    \"Scan - Targets an enemy Node and lowers its Defense. The effectiveness is determined by the owner's Attack, the Player's hacking level, and the \" +\n    \"enemy's defense.<br><br>\" +\n    \"Weaken - Targets an enemy Node and lowers its Attack. The effectiveness is determined by the owner's Attack, the Player's hacking level, and the enemy's \" +\n    \"defense.<br><br>\" +\n    \"Fortify - Raises the Node's Defense. The effectiveness is determined by your hacking level.<br><br>\" +\n    \"Overflow - Raises the Node's Attack but lowers its Defense. The effectiveness is determined by your hacking level.<br><br>\" +\n    \"Note that when determining the effectiveness of the above actions, the TOTAL Attack or Defense of the team is used, not just the \" +\n    \"Attack/Defense of the individual Node that is performing the action.<br><br>\" +\n    \"To capture a Node, you must lower its HP down to 0.<br><br>\" +\n    \"There are six different types of Nodes:<br><br>\" +\n    \"CPU Core - These are your main Nodes that are used to perform actions. Capable of performing every action<br><br>\" +\n    \"Firewall - Nodes with high defense. These Nodes can 'Fortify'<br><br>\" +\n    \"Database - A special type of Node. The player's objective is to conquer all of the enemy's Database Nodes within \" +\n    \"the time limit. These Nodes cannot perform any actions<br><br>\" +\n    \"Spam - Conquering one of these Nodes will slow the enemy's trace, giving the player additional time to complete \" +\n    \"the mission. These Nodes cannot perform any actions<br><br>\" +\n    \"Transfer - Conquering one of these nodes will increase the Attack of all of your CPU Cores by a small fixed percentage. \" +\n    \"These Nodes are capable of performing every action except the 'Attack' action<br><br>\" +\n    \"Shield - Nodes with high defense. These Nodes can 'Fortify'<br><br>\" +\n    \"To assign an action to a Node, you must first select one of your Nodes. This can be done by simply clicking on it. Double-clicking \" +\n    \"a node will select all of your Nodes of the same type (e.g. select all CPU Core Nodes or all Transfer Nodes). Note that only Nodes \" +\n    \"that can perform actions (CPU Core, Transfer, Shield, Firewall) can be selected. Selected Nodes will be denoted with a white highlight. After selecting a Node or multiple Nodes, \" +\n    \"select its action using the Action Buttons near the top of the screen. Every action also has a corresponding keyboard \" +\n    \"shortcut.<br><br>\" +\n    \"For certain actions such as attacking, scanning, and weakening, the Node performing the action must have a target. To target \" +\n    \"another node, simply click-and-drag from the 'source' Node to a target. A Node can only have one target, and you can target \" +\n    \"any Node that is adjacent to one of your Nodes (immediately above, below, or to the side. NOT diagonal). Furthermore, only CPU Cores and Transfer Nodes \" +\n    \"can target, since they are the only ones that can perform the related actions. To remove a target, you can simply click on the line that represents \" +\n    \"the connection between one of your Nodes and its target. Alternatively, you can select the 'source' Node and click the 'Drop Connection' button, \" +\n    \"or press 'd'.<br><br>\" +\n    \"Other Notes:<br><br>\" +\n    \"-Whenever a miscellenaous Node (not owned by the player or enemy) is conquered, the defense of all remaining miscellaneous Nodes that \" +\n    \"are not actively being targeted will increase by a fixed percentage.<br><br>\" +\n    \"-Whenever a Node is conquered, its stats are significantly reduced<br><br>\" +\n    \"-Miscellaneous Nodes slowly raise their defense over time<br><br>\" +\n    \"-Nodes slowly regenerate health over time.\",\n\n  // Time-related constants\n  MillisecondsPer20Hours: 72000000,\n  GameCyclesPer20Hours: 72000000 / 200,\n\n  MillisecondsPer10Hours: 36000000,\n  GameCyclesPer10Hours: 36000000 / 200,\n\n  MillisecondsPer8Hours: 28800000,\n  GameCyclesPer8Hours: 28800000 / 200,\n\n  MillisecondsPer4Hours: 14400000,\n  GameCyclesPer4Hours: 14400000 / 200,\n\n  MillisecondsPer2Hours: 7200000,\n  GameCyclesPer2Hours: 7200000 / 200,\n\n  MillisecondsPerHour: 3600000,\n  GameCyclesPerHour: 3600000 / 200,\n\n  MillisecondsPerHalfHour: 1800000,\n  GameCyclesPerHalfHour: 1800000 / 200,\n\n  MillisecondsPerQuarterHour: 900000,\n  GameCyclesPerQuarterHour: 900000 / 200,\n\n  MillisecondsPerFiveMinutes: 300000,\n  GameCyclesPerFiveMinutes: 300000 / 200,\n\n  // Player Work & Action\n  BaseFocusBonus: 0.8,\n  FactionWorkHacking: \"Faction Hacking Work\",\n  FactionWorkField: \"Faction Field Work\",\n  FactionWorkSecurity: \"Faction Security Work\",\n\n  WorkTypeCompany: \"Working for Company\",\n  WorkTypeCompanyPartTime: \"Working for Company part-time\",\n  WorkTypeFaction: \"Working for Faction\",\n  WorkTypeCreateProgram: \"Working on Create a Program\",\n  WorkTypeStudyClass: \"Studying or Taking a class at university\",\n  WorkTypeCrime: \"Committing a crime\",\n\n  ClassStudyComputerScience: \"studying Computer Science\",\n  ClassDataStructures: \"taking a Data Structures course\",\n  ClassNetworks: \"taking a Networks course\",\n  ClassAlgorithms: \"taking an Algorithms course\",\n  ClassManagement: \"taking a Management course\",\n  ClassLeadership: \"taking a Leadership course\",\n  ClassGymStrength: \"training your strength at a gym\",\n  ClassGymDefense: \"training your defense at a gym\",\n  ClassGymDexterity: \"training your dexterity at a gym\",\n  ClassGymAgility: \"training your agility at a gym\",\n\n  ClassDataStructuresBaseCost: 40,\n  ClassNetworksBaseCost: 80,\n  ClassAlgorithmsBaseCost: 320,\n  ClassManagementBaseCost: 160,\n  ClassLeadershipBaseCost: 320,\n  ClassGymBaseCost: 120,\n\n  ClassStudyComputerScienceBaseExp: 0.5,\n  ClassDataStructuresBaseExp: 1,\n  ClassNetworksBaseExp: 2,\n  ClassAlgorithmsBaseExp: 4,\n  ClassManagementBaseExp: 2,\n  ClassLeadershipBaseExp: 4,\n\n  CrimeShoplift: \"shoplift\",\n  CrimeRobStore: \"rob a store\",\n  CrimeMug: \"mug someone\",\n  CrimeLarceny: \"commit larceny\",\n  CrimeDrugs: \"deal drugs\",\n  CrimeBondForgery: \"forge corporate bonds\",\n  CrimeTraffickArms: \"traffick illegal arms\",\n  CrimeHomicide: \"commit homicide\",\n  CrimeGrandTheftAuto: \"commit grand theft auto\",\n  CrimeKidnap: \"kidnap someone for ransom\",\n  CrimeAssassination: \"assassinate a high-profile target\",\n  CrimeHeist: \"pull off the ultimate heist\",\n\n  // Coding Contract\n  // TODO: Move this into Coding contract implementation?\n  CodingContractBaseFactionRepGain: 2500,\n  CodingContractBaseCompanyRepGain: 4000,\n  CodingContractBaseMoneyGain: 75e6,\n\n  // BitNode/Source-File related stuff\n  TotalNumBitNodes: 24,\n\n  LatestUpdate: `\n    v0.54.0 - 2021-09-20 One big react node (hydroflame & community)\n    -------------------------------------------\n\n    ** UI **\n\n    * The UI is now completely(ish) in react and I'm starting to implement\n      Material-UI everywhere. This will help make the game feel more consistent.\n    * Major help from (@threehams)\n    * New Terminal\n    * New Active Scripts page\n    * New sidebar.\n    * New Character overview\n    * New tutorial\n    * New options page\n    * New create program page (@Nolshine)\n\n    ** Netscript ** \n\n    * Add companyName to getPlayer\n\n    ** Factions **\n\n    * Megacorp factions are no longer removed when installing.\n\n    ** Corporation **\n\n    * All research tooltips are always visible.\n    * Smart supply is enabled by default if purchased (@Nolshine)\n\n    ** Misc. **\n\n    * Fix \"Game saved\" animation. (@Nolshine)\n    * Update commitCrime documentation (@Tryneus)\n    * Fix logbox scrolling weird (@Nolshine)\n    * Fix weird scrolling in corporations (@BartKoppelmans)\n    * Fix typo (@BartKoppelmans & @Nolshine)\n    * Delete game now has a confirmation modal (@Nolshine)\n    * Fix issue where skills would not get properly updated when entering new\n      BN. (@Nolshine)\n    * Convert create gang to popup (@vmesecher)\n    * Fixed a bug that prevented travel to Sector-12 and New Tokyo when not using\n      ASCII art.\n    * nerf noodle bar\n`,\n\n  /*\n\n\n*/\n};\n","import { IMap } from \"../../types\";\n\nexport const AugmentationNames: IMap<string> = {\n  Targeting1: \"Augmented Targeting I\",\n  Targeting2: \"Augmented Targeting II\",\n  Targeting3: \"Augmented Targeting III\",\n  SyntheticHeart: \"Synthetic Heart\",\n  SynfibrilMuscle: \"Synfibril Muscle\",\n  CombatRib1: \"Combat Rib I\",\n  CombatRib2: \"Combat Rib II\",\n  CombatRib3: \"Combat Rib III\",\n  NanofiberWeave: \"Nanofiber Weave\",\n  SubdermalArmor: \"NEMEAN Subdermal Weave\",\n  WiredReflexes: \"Wired Reflexes\",\n  GrapheneBoneLacings: \"Graphene Bone Lacings\",\n  BionicSpine: \"Bionic Spine\",\n  GrapheneBionicSpine: \"Graphene Bionic Spine Upgrade\",\n  BionicLegs: \"Bionic Legs\",\n  GrapheneBionicLegs: \"Graphene Bionic Legs Upgrade\",\n  SpeechProcessor: \"Speech Processor Implant\",\n  TITN41Injection: \"TITN-41 Gene-Modification Injection\",\n  EnhancedSocialInteractionImplant: \"Enhanced Social Interaction Implant\",\n  BitWire: \"BitWire\",\n  ArtificialBioNeuralNetwork: \"Artificial Bio-neural Network Implant\",\n  ArtificialSynapticPotentiation: \"Artificial Synaptic Potentiation\",\n  EnhancedMyelinSheathing: \"Enhanced Myelin Sheathing\",\n  SynapticEnhancement: \"Synaptic Enhancement Implant\",\n  NeuralRetentionEnhancement: \"Neural-Retention Enhancement\",\n  DataJack: \"DataJack\",\n  ENM: \"Embedded Netburner Module\",\n  ENMCore: \"Embedded Netburner Module Core Implant\",\n  ENMCoreV2: \"Embedded Netburner Module Core V2 Upgrade\",\n  ENMCoreV3: \"Embedded Netburner Module Core V3 Upgrade\",\n  ENMAnalyzeEngine: \"Embedded Netburner Module Analyze Engine\",\n  ENMDMA: \"Embedded Netburner Module Direct Memory Access Upgrade\",\n  Neuralstimulator: \"Neuralstimulator\",\n  NeuralAccelerator: \"Neural Accelerator\",\n  CranialSignalProcessorsG1: \"Cranial Signal Processors - Gen I\",\n  CranialSignalProcessorsG2: \"Cranial Signal Processors - Gen II\",\n  CranialSignalProcessorsG3: \"Cranial Signal Processors - Gen III\",\n  CranialSignalProcessorsG4: \"Cranial Signal Processors - Gen IV\",\n  CranialSignalProcessorsG5: \"Cranial Signal Processors - Gen V\",\n  NeuronalDensification: \"Neuronal Densification\",\n  NeuroreceptorManager: \"Neuroreceptor Management Implant\",\n  NuoptimalInjectorImplant: \"Nuoptimal Nootropic Injector Implant\",\n  SpeechEnhancement: \"Speech Enhancement\",\n  FocusWire: \"FocusWire\",\n  PCDNI: \"PC Direct-Neural Interface\",\n  PCDNIOptimizer: \"PC Direct-Neural Interface Optimization Submodule\",\n  PCDNINeuralNetwork: \"PC Direct-Neural Interface NeuroNet Injector\",\n  PCMatrix: \"PCMatrix\",\n  ADRPheromone1: \"ADR-V1 Pheromone Gene\",\n  ADRPheromone2: \"ADR-V2 Pheromone Gene\",\n  ShadowsSimulacrum: \"The Shadow's Simulacrum\",\n  HacknetNodeCPUUpload: \"Hacknet Node CPU Architecture Neural-Upload\",\n  HacknetNodeCacheUpload: \"Hacknet Node Cache Architecture Neural-Upload\",\n  HacknetNodeNICUpload: \"Hacknet Node NIC Architecture Neural-Upload\",\n  HacknetNodeKernelDNI: \"Hacknet Node Kernel Direct-Neural Interface\",\n  HacknetNodeCoreDNI: \"Hacknet Node Core Direct-Neural Interface\",\n  NeuroFluxGovernor: \"NeuroFlux Governor\",\n  Neurotrainer1: \"Neurotrainer I\",\n  Neurotrainer2: \"Neurotrainer II\",\n  Neurotrainer3: \"Neurotrainer III\",\n  Hypersight: \"HyperSight Corneal Implant\",\n  LuminCloaking1: \"LuminCloaking-V1 Skin Implant\",\n  LuminCloaking2: \"LuminCloaking-V2 Skin Implant\",\n  HemoRecirculator: \"HemoRecirculator\",\n  SmartSonar: \"SmartSonar Implant\",\n  PowerRecirculator: \"Power Recirculation Core\",\n  QLink: \"QLink\",\n  TheRedPill: \"The Red Pill\",\n  SPTN97: \"SPTN-97 Gene Modification\",\n  HiveMind: \"ECorp HVMind Implant\",\n  CordiARCReactor: \"CordiARC Fusion Reactor\",\n  SmartJaw: \"SmartJaw\",\n  Neotra: \"Neotra\",\n  Xanipher: \"Xanipher\",\n  nextSENS: \"nextSENS Gene Modification\",\n  OmniTekInfoLoad: \"OmniTek InfoLoad\",\n  PhotosyntheticCells: \"Photosynthetic Cells\",\n  Neurolink: \"BitRunners Neurolink\",\n  TheBlackHand: \"The Black Hand\",\n  UnstableCircadianModulator: \"Unstable Circadian Modulator\",\n  CRTX42AA: \"CRTX42-AA Gene Modification\",\n  Neuregen: \"Neuregen Gene Modification\",\n  CashRoot: \"CashRoot Starter Kit\",\n  NutriGen: \"NutriGen Implant\",\n  INFRARet: \"INFRARET Enhancement\",\n  DermaForce: \"DermaForce Particle Barrier\",\n  GrapheneBrachiBlades: \"Graphene BranchiBlades Upgrade\",\n  GrapheneBionicArms: \"Graphene Bionic Arms Upgrade\",\n  BrachiBlades: \"BrachiBlades\",\n  BionicArms: \"Bionic Arms\",\n  SNA: \"Social Negotiation Assistant (S.N.A)\",\n  HydroflameLeftArm: \"Hydroflame Left Arm\",\n  EsperEyewear: \"EsperTech Bladeburner Eyewear\",\n  EMS4Recombination: \"EMS-4 Recombination\",\n  OrionShoulder: \"ORION-MKIV Shoulder\",\n  HyperionV1: \"Hyperion Plasma Cannon V1\",\n  HyperionV2: \"Hyperion Plasma Cannon V2\",\n  GolemSerum: \"GOLEM Serum\",\n  VangelisVirus: \"Vangelis Virus\",\n  VangelisVirus3: \"Vangelis Virus 3.0\",\n  INTERLINKED: \"I.N.T.E.R.L.I.N.K.E.D\",\n  BladeRunner: \"Blade's Runners\",\n  BladeArmor: \"BLADE-51b Tesla Armor\",\n  BladeArmorPowerCells: \"BLADE-51b Tesla Armor: Power Cells Upgrade\",\n  BladeArmorEnergyShielding: \"BLADE-51b Tesla Armor: Energy Shielding Upgrade\",\n  BladeArmorUnibeam: \"BLADE-51b Tesla Armor: Unibeam Upgrade\",\n  BladeArmorOmnibeam: \"BLADE-51b Tesla Armor: Omnibeam Upgrade\",\n  BladeArmorIPU: \"BLADE-51b Tesla Armor: IPU Upgrade\",\n  BladesSimulacrum: \"The Blade's Simulacrum\",\n\n  //Wasteland Augs\n  //PepBoy:                             \"P.E.P-Boy\", Plasma Energy Projection System\n  //PepBoyForceField Generates plasma force fields\n  //PepBoyBlasts Generate high density plasma concussive blasts\n  //PepBoyDataStorage STore more data on pep boy,\n};\n","/**\n * Bitnode multipliers influence the difficulty of different aspects of the game.\n * Each Bitnode has a different theme/strategy to achieving the end goal, so these multipliers will can help drive the\n * player toward the intended strategy. Unless they really want to play the long, slow game of waiting...\n */\ninterface IBitNodeMultipliers {\n  /**\n   * Influences how quickly the player's agility level (not exp) scales\n   */\n  AgilityLevelMultiplier: number;\n\n  /**\n   * Influences the base cost to purchase an augmentation.\n   */\n  AugmentationMoneyCost: number;\n\n  /**\n   * Influences the base rep the player must have with a faction to purchase an augmentation.\n   */\n  AugmentationRepCost: number;\n\n  /**\n   * Influences how quickly the player can gain rank within Bladeburner.\n   */\n  BladeburnerRank: number;\n\n  /**\n   * Influences the cost of skill levels from Bladeburner.\n   */\n  BladeburnerSkillCost: number;\n\n  /**\n   * Influences how quickly the player's charisma level (not exp) scales\n   */\n  CharismaLevelMultiplier: number;\n\n  /**\n   * Influences the experience gained for each ability when a player completes a class.\n   */\n  ClassGymExpGain: number;\n\n  /**\n   * Influences the amount of money gained from completing Coding Contracts\n   **/\n  CodingContractMoney: number;\n\n  /**\n   * Influences the experience gained for each ability when the player completes working their job.\n   */\n  CompanyWorkExpGain: number;\n\n  /**\n   * Influences how much money the player earns when completing working their job.\n   */\n  CompanyWorkMoney: number;\n\n  /**\n   * Influences the valuation of corporations created by the player.\n   */\n  CorporationValuation: number;\n\n  /**\n   * Influences the base experience gained for each ability when the player commits a crime.\n   */\n  CrimeExpGain: number;\n\n  /**\n   * Influences the base money gained when the player commits a crime.\n   */\n  CrimeMoney: number;\n\n  /**\n   * Influences how many Augmentations you need in order to get invited to the Daedalus faction\n   */\n  DaedalusAugsRequirement: number;\n\n  /**\n   * Influences how quickly the player's defense level (not exp) scales\n   */\n  DefenseLevelMultiplier: number;\n\n  /**\n   * Influences how quickly the player's dexterity level (not exp) scales\n   */\n  DexterityLevelMultiplier: number;\n\n  /**\n   * Influences how much rep the player gains in each faction simply by being a member.\n   */\n  FactionPassiveRepGain: number;\n\n  /**\n   * Influences the experience gained for each ability when the player completes work for a Faction.\n   */\n  FactionWorkExpGain: number;\n\n  /**\n   * Influences how much rep the player gains when performing work for a faction.\n   */\n  FactionWorkRepGain: number;\n\n  /**\n   * Influences how much it costs to unlock the stock market's 4S Market Data API\n   */\n  FourSigmaMarketDataApiCost: number;\n\n  /**\n   * Influences how much it costs to unlock the stock market's 4S Market Data (NOT API)\n   */\n  FourSigmaMarketDataCost: number;\n\n  /**\n   * Influences how much negative karma is required to create a gang in this bitnode.\n   */\n  GangKarmaRequirement: number;\n\n  /**\n   * Influences the experienced gained when hacking a server.\n   */\n  HackExpGain: number;\n\n  /**\n   * Influences how quickly the player's hacking level (not experience) scales\n   */\n  HackingLevelMultiplier: number;\n\n  /**\n   * Influences how much money is produced by Hacknet Nodes.\n   * Influeces the hash rate of Hacknet Servers (unlocked in BitNode-9)\n   */\n  HacknetNodeMoney: number;\n\n  /**\n   * Influences how much money it costs to upgrade your home computer's RAM\n   */\n  HomeComputerRamCost: number;\n\n  /**\n   * Influences how much money is gained when the player infiltrates a company.\n   */\n  InfiltrationMoney: number;\n\n  /**\n   * Influences how much rep the player can gain from factions when selling stolen documents and secrets\n   */\n  InfiltrationRep: number;\n\n  /**\n   * Influences how much money can be stolen from a server when the player performs a hack against it through\n   * the Terminal.\n   */\n  ManualHackMoney: number;\n\n  /**\n   * Influence how much it costs to purchase a server\n   */\n  PurchasedServerCost: number;\n\n  /**\n   * Influences the maximum number of purchased servers you can have\n   */\n  PurchasedServerLimit: number;\n\n  /**\n   * Influences the maximum allowed RAM for a purchased server\n   */\n  PurchasedServerMaxRam: number;\n  /**\n   * Influences the minimum favor the player must have with a faction before they can donate to gain rep.\n   */\n  RepToDonateToFaction: number;\n\n  /**\n   * Influences how much money can be stolen from a server when a script performs a hack against it.\n   */\n  ScriptHackMoney: number;\n\n  /**\n   * The amount of money actually gained when script hack a server. This is\n   * different than the above because you can reduce the amount of money but\n   * not gain that same amount.\n   */\n  ScriptHackMoneyGain: number;\n\n  /**\n   * Influences the growth percentage per cycle against a server.\n   */\n  ServerGrowthRate: number;\n\n  /**\n   * Influences the maxmimum money that a server can grow to.\n   */\n  ServerMaxMoney: number;\n\n  /**\n   * Influences the initial money that a server starts with.\n   */\n  ServerStartingMoney: number;\n\n  /**\n   * Influences the initial security level (hackDifficulty) of a server.\n   */\n  ServerStartingSecurity: number;\n\n  /**\n   * Influences the weaken amount per invocation against a server.\n   */\n  ServerWeakenRate: number;\n\n  /**\n   * Influences how quickly the player's strength level (not exp) scales\n   */\n  StrengthLevelMultiplier: number;\n\n  // Index signature\n  [key: string]: number;\n}\n\n/**\n * The multipliers that are influenced by current Bitnode progression.\n */\n// tslint:disable-next-line:variable-name\nexport const BitNodeMultipliers: IBitNodeMultipliers = {\n  HackingLevelMultiplier: 1,\n  StrengthLevelMultiplier: 1,\n  DefenseLevelMultiplier: 1,\n  DexterityLevelMultiplier: 1,\n  AgilityLevelMultiplier: 1,\n  CharismaLevelMultiplier: 1,\n\n  ServerGrowthRate: 1,\n  ServerMaxMoney: 1,\n  ServerStartingMoney: 1,\n  ServerStartingSecurity: 1,\n  ServerWeakenRate: 1,\n\n  HomeComputerRamCost: 1,\n\n  PurchasedServerCost: 1,\n  PurchasedServerLimit: 1,\n  PurchasedServerMaxRam: 1,\n\n  CompanyWorkMoney: 1,\n  CrimeMoney: 1,\n  HacknetNodeMoney: 1,\n  ManualHackMoney: 1,\n  ScriptHackMoney: 1,\n  ScriptHackMoneyGain: 1,\n  CodingContractMoney: 1,\n\n  ClassGymExpGain: 1,\n  CompanyWorkExpGain: 1,\n  CrimeExpGain: 1,\n  FactionWorkExpGain: 1,\n  HackExpGain: 1,\n\n  FactionPassiveRepGain: 1,\n  FactionWorkRepGain: 1,\n  RepToDonateToFaction: 1,\n\n  AugmentationMoneyCost: 1,\n  AugmentationRepCost: 1,\n\n  InfiltrationMoney: 1,\n  InfiltrationRep: 1,\n\n  FourSigmaMarketDataCost: 1,\n  FourSigmaMarketDataApiCost: 1,\n\n  CorporationValuation: 1,\n\n  BladeburnerRank: 1,\n  BladeburnerSkillCost: 1,\n\n  DaedalusAugsRequirement: 1,\n  GangKarmaRequirement: 1,\n};\n","/**\n * Names of all locations\n */\nexport enum LocationName {\n  // Cities\n  Aevum = \"Aevum\",\n  Chongqing = \"Chongqing\",\n  Ishima = \"Ishima\",\n  NewTokyo = \"New Tokyo\",\n  Sector12 = \"Sector-12\",\n  Volhaven = \"Volhaven\",\n\n  // Aevum Locations\n  AevumAeroCorp = \"AeroCorp\",\n  AevumBachmanAndAssociates = \"Bachman & Associates\",\n  AevumClarkeIncorporated = \"Clarke Incorporated\",\n  AevumCrushFitnessGym = \"Crush Fitness Gym\",\n  AevumECorp = \"ECorp\",\n  AevumFulcrumTechnologies = \"Fulcrum Technologies\",\n  AevumGalacticCybersystems = \"Galactic Cybersystems\",\n  AevumNetLinkTechnologies = \"NetLink Technologies\",\n  AevumPolice = \"Aevum Police Headquarters\",\n  AevumRhoConstruction = \"Rho Construction\",\n  AevumSnapFitnessGym = \"Snap Fitness Gym\",\n  AevumSummitUniversity = \"Summit University\",\n  AevumWatchdogSecurity = \"Watchdog Security\",\n  AevumCasino = \"Iker Molina Casino\",\n\n  // Chongqing locations\n  ChongqingKuaiGongInternational = \"KuaiGong International\",\n  ChongqingSolarisSpaceSystems = \"Solaris Space Systems\",\n\n  // Sector 12\n  Sector12AlphaEnterprises = \"Alpha Enterprises\",\n  Sector12BladeIndustries = \"Blade Industries\",\n  Sector12CIA = \"Central Intelligence Agency\",\n  Sector12CarmichaelSecurity = \"Carmichael Security\",\n  Sector12CityHall = \"Sector-12 City Hall\",\n  Sector12DeltaOne = \"DeltaOne\",\n  Sector12FoodNStuff = \"FoodNStuff\",\n  Sector12FourSigma = \"Four Sigma\",\n  Sector12IcarusMicrosystems = \"Icarus Microsystems\",\n  Sector12IronGym = \"Iron Gym\",\n  Sector12JoesGuns = \"Joe's Guns\",\n  Sector12MegaCorp = \"MegaCorp\",\n  Sector12NSA = \"National Security Agency\",\n  Sector12PowerhouseGym = \"Powerhouse Gym\",\n  Sector12RothmanUniversity = \"Rothman University\",\n  Sector12UniversalEnergy = \"Universal Energy\",\n\n  // New Tokyo\n  NewTokyoDefComm = \"DefComm\",\n  NewTokyoGlobalPharmaceuticals = \"Global Pharmaceuticals\",\n  NewTokyoNoodleBar = \"Noodle Bar\",\n  NewTokyoVitaLife = \"VitaLife\",\n\n  // Ishima\n  IshimaNovaMedical = \"Nova Medical\",\n  IshimaOmegaSoftware = \"Omega Software\",\n  IshimaStormTechnologies = \"Storm Technologies\",\n\n  // Volhaven\n  VolhavenCompuTek = \"CompuTek\",\n  VolhavenHeliosLabs = \"Helios Labs\",\n  VolhavenLexoCorp = \"LexoCorp\",\n  VolhavenMilleniumFitnessGym = \"Millenium Fitness Gym\",\n  VolhavenNWO = \"NWO\",\n  VolhavenOmniTekIncorporated = \"OmniTek Incorporated\",\n  VolhavenOmniaCybersystems = \"Omnia Cybersystems\",\n  VolhavenSysCoreSecurities = \"SysCore Securities\",\n  VolhavenZBInstituteOfTechnology = \"ZB Institute of Technology\",\n\n  // Generic locations\n  Hospital = \"Hospital\",\n  Slums = \"The Slums\",\n  TravelAgency = \"Travel Agency\",\n  WorldStockExchange = \"World Stock Exchange\",\n\n  // Default name for Location objects\n  Void = \"The Void\",\n}\n","import { AlertEvents } from \"./AlertManager\";\n\nimport React from \"react\";\nimport { jsx } from \"@emotion/react\";\n\nexport function dialogBoxCreate(txt: string | JSX.Element): void {\n  if (typeof txt !== \"string\") {\n    AlertEvents.emit(txt);\n  } else {\n    AlertEvents.emit(<pre dangerouslySetInnerHTML={{ __html: txt }} />);\n  }\n}\n","import { IMap } from \"../types\";\n\n// TODO remember to update RamCalculations.js and WorkerScript.js\n\n// RAM costs for Netscript functions\nexport const RamCostConstants: IMap<number> = {\n  ScriptBaseRamCost: 1.6,\n  ScriptDomRamCost: 25,\n  ScriptHackRamCost: 0.1,\n  ScriptHackAnalyzeRamCost: 1,\n  ScriptGrowRamCost: 0.15,\n  ScriptGrowthAnalyzeRamCost: 1,\n  ScriptWeakenRamCost: 0.15,\n  ScriptScanRamCost: 0.2,\n  ScriptPortProgramRamCost: 0.05,\n  ScriptRunRamCost: 1.0,\n  ScriptExecRamCost: 1.3,\n  ScriptSpawnRamCost: 2.0,\n  ScriptScpRamCost: 0.6,\n  ScriptKillRamCost: 0.5,\n  ScriptHasRootAccessRamCost: 0.05,\n  ScriptGetHostnameRamCost: 0.05,\n  ScriptGetHackingLevelRamCost: 0.05,\n  ScriptGetMultipliersRamCost: 4.0,\n  ScriptGetServerRamCost: 0.1,\n  ScriptGetServerMaxRam: 0.05,\n  ScriptGetServerUsedRam: 0.05,\n  ScriptFileExistsRamCost: 0.1,\n  ScriptIsRunningRamCost: 0.1,\n  ScriptHacknetNodesRamCost: 4.0,\n  ScriptHNUpgLevelRamCost: 0.4,\n  ScriptHNUpgRamRamCost: 0.6,\n  ScriptHNUpgCoreRamCost: 0.8,\n  ScriptGetStockRamCost: 2.0,\n  ScriptBuySellStockRamCost: 2.5,\n  ScriptGetPurchaseServerRamCost: 0.25,\n  ScriptPurchaseServerRamCost: 2.25,\n  ScriptGetPurchasedServerLimit: 0.05,\n  ScriptGetPurchasedServerMaxRam: 0.05,\n  ScriptRoundRamCost: 0.05,\n  ScriptReadWriteRamCost: 1.0,\n  ScriptArbScriptRamCost: 1.0,\n  ScriptGetScriptRamCost: 0.1,\n  ScriptGetRunningScriptRamCost: 0.3,\n  ScriptGetHackTimeRamCost: 0.05,\n  ScriptGetFavorToDonate: 0.1,\n  ScriptCodingContractBaseRamCost: 10,\n  ScriptSleeveBaseRamCost: 4,\n\n  ScriptSingularityFn1RamCost: 2,\n  ScriptSingularityFn2RamCost: 3,\n  ScriptSingularityFn3RamCost: 5,\n\n  ScriptGangApiBaseRamCost: 4,\n\n  ScriptBladeburnerApiBaseRamCost: 4,\n};\n\nexport const RamCosts: IMap<any> = {\n  hacknet: {\n    numNodes: () => 0,\n    purchaseNode: () => 0,\n    getPurchaseNodeCost: () => 0,\n    getNodeStats: () => 0,\n    upgradeLevel: () => 0,\n    upgradeRam: () => 0,\n    upgradeCore: () => 0,\n    upgradeCache: () => 0,\n    getLevelUpgradeCost: () => 0,\n    getRamUpgradeCost: () => 0,\n    getCoreUpgradeCost: () => 0,\n    getCacheUpgradeCost: () => 0,\n    numHashes: () => 0,\n    hashCost: () => 0,\n    spendHashes: () => 0,\n  },\n  sprintf: () => 0,\n  vsprintf: () => 0,\n  scan: () => RamCostConstants.ScriptScanRamCost,\n  hack: () => RamCostConstants.ScriptHackRamCost,\n  hackAnalyzeThreads: () => RamCostConstants.ScriptHackAnalyzeRamCost,\n  hackAnalyzePercent: () => RamCostConstants.ScriptHackAnalyzeRamCost,\n  hackChance: () => RamCostConstants.ScriptHackAnalyzeRamCost,\n  sleep: () => 0,\n  grow: () => RamCostConstants.ScriptGrowRamCost,\n  growthAnalyze: () => RamCostConstants.ScriptGrowthAnalyzeRamCost,\n  weaken: () => RamCostConstants.ScriptWeakenRamCost,\n  print: () => 0,\n  tprint: () => 0,\n  clearLog: () => 0,\n  disableLog: () => 0,\n  enableLog: () => 0,\n  isLogEnabled: () => 0,\n  getScriptLogs: () => 0,\n  nuke: () => RamCostConstants.ScriptPortProgramRamCost,\n  brutessh: () => RamCostConstants.ScriptPortProgramRamCost,\n  ftpcrack: () => RamCostConstants.ScriptPortProgramRamCost,\n  relaysmtp: () => RamCostConstants.ScriptPortProgramRamCost,\n  httpworm: () => RamCostConstants.ScriptPortProgramRamCost,\n  sqlinject: () => RamCostConstants.ScriptPortProgramRamCost,\n  run: () => RamCostConstants.ScriptRunRamCost,\n  exec: () => RamCostConstants.ScriptExecRamCost,\n  spawn: () => RamCostConstants.ScriptSpawnRamCost,\n  kill: () => RamCostConstants.ScriptKillRamCost,\n  killall: () => RamCostConstants.ScriptKillRamCost,\n  exit: () => 0,\n  scp: () => RamCostConstants.ScriptScpRamCost,\n  ls: () => RamCostConstants.ScriptScanRamCost,\n  ps: () => RamCostConstants.ScriptScanRamCost,\n  hasRootAccess: () => RamCostConstants.ScriptHasRootAccessRamCost,\n  getIp: () => RamCostConstants.ScriptGetHostnameRamCost,\n  getHostname: () => RamCostConstants.ScriptGetHostnameRamCost,\n  getHackingLevel: () => RamCostConstants.ScriptGetHackingLevelRamCost,\n  getHackingMultipliers: () => RamCostConstants.ScriptGetMultipliersRamCost,\n  getHacknetMultipliers: () => RamCostConstants.ScriptGetMultipliersRamCost,\n  getBitNodeMultipliers: () => RamCostConstants.ScriptGetMultipliersRamCost,\n  getServer: () => RamCostConstants.ScriptGetMultipliersRamCost / 2,\n  getServerMoneyAvailable: () => RamCostConstants.ScriptGetServerRamCost,\n  getServerSecurityLevel: () => RamCostConstants.ScriptGetServerRamCost,\n  getServerBaseSecurityLevel: () => RamCostConstants.ScriptGetServerRamCost,\n  getServerMinSecurityLevel: () => RamCostConstants.ScriptGetServerRamCost,\n  getServerRequiredHackingLevel: () => RamCostConstants.ScriptGetServerRamCost,\n  getServerMaxMoney: () => RamCostConstants.ScriptGetServerRamCost,\n  getServerGrowth: () => RamCostConstants.ScriptGetServerRamCost,\n  getServerNumPortsRequired: () => RamCostConstants.ScriptGetServerRamCost,\n  getServerRam: () => RamCostConstants.ScriptGetServerRamCost,\n  getServerMaxRam: () => RamCostConstants.ScriptGetServerMaxRam,\n  getServerUsedRam: () => RamCostConstants.ScriptGetServerUsedRam,\n  serverExists: () => RamCostConstants.ScriptGetServerRamCost,\n  fileExists: () => RamCostConstants.ScriptFileExistsRamCost,\n  isRunning: () => RamCostConstants.ScriptIsRunningRamCost,\n  getStockSymbols: () => RamCostConstants.ScriptGetStockRamCost,\n  getStockPrice: () => RamCostConstants.ScriptGetStockRamCost,\n  getStockAskPrice: () => RamCostConstants.ScriptGetStockRamCost,\n  getStockBidPrice: () => RamCostConstants.ScriptGetStockRamCost,\n  getStockPosition: () => RamCostConstants.ScriptGetStockRamCost,\n  getStockMaxShares: () => RamCostConstants.ScriptGetStockRamCost,\n  getStockPurchaseCost: () => RamCostConstants.ScriptGetStockRamCost,\n  getStockSaleGain: () => RamCostConstants.ScriptGetStockRamCost,\n  buyStock: () => RamCostConstants.ScriptBuySellStockRamCost,\n  sellStock: () => RamCostConstants.ScriptBuySellStockRamCost,\n  shortStock: () => RamCostConstants.ScriptBuySellStockRamCost,\n  sellShort: () => RamCostConstants.ScriptBuySellStockRamCost,\n  placeOrder: () => RamCostConstants.ScriptBuySellStockRamCost,\n  cancelOrder: () => RamCostConstants.ScriptBuySellStockRamCost,\n  getOrders: () => RamCostConstants.ScriptBuySellStockRamCost,\n  getStockVolatility: () => RamCostConstants.ScriptBuySellStockRamCost,\n  getStockForecast: () => RamCostConstants.ScriptBuySellStockRamCost,\n  purchase4SMarketData: () => RamCostConstants.ScriptBuySellStockRamCost,\n  purchase4SMarketDataTixApi: () => RamCostConstants.ScriptBuySellStockRamCost,\n  getPurchasedServerLimit: () => RamCostConstants.ScriptGetPurchasedServerLimit,\n  getPurchasedServerMaxRam: () => RamCostConstants.ScriptGetPurchasedServerMaxRam,\n  getPurchasedServerCost: () => RamCostConstants.ScriptGetPurchaseServerRamCost,\n  purchaseServer: () => RamCostConstants.ScriptPurchaseServerRamCost,\n  deleteServer: () => RamCostConstants.ScriptPurchaseServerRamCost,\n  getPurchasedServers: () => RamCostConstants.ScriptPurchaseServerRamCost,\n  write: () => RamCostConstants.ScriptReadWriteRamCost,\n  tryWrite: () => RamCostConstants.ScriptReadWriteRamCost,\n  read: () => RamCostConstants.ScriptReadWriteRamCost,\n  peek: () => RamCostConstants.ScriptReadWriteRamCost,\n  clear: () => RamCostConstants.ScriptReadWriteRamCost,\n  getPortHandle: () => RamCostConstants.ScriptReadWriteRamCost * 10,\n  rm: () => RamCostConstants.ScriptReadWriteRamCost,\n  scriptRunning: () => RamCostConstants.ScriptArbScriptRamCost,\n  scriptKill: () => RamCostConstants.ScriptArbScriptRamCost,\n  getScriptName: () => 0,\n  getScriptRam: () => RamCostConstants.ScriptGetScriptRamCost,\n  getHackTime: () => RamCostConstants.ScriptGetHackTimeRamCost,\n  getGrowTime: () => RamCostConstants.ScriptGetHackTimeRamCost,\n  getWeakenTime: () => RamCostConstants.ScriptGetHackTimeRamCost,\n  getScriptIncome: () => RamCostConstants.ScriptGetScriptRamCost,\n  getScriptExpGain: () => RamCostConstants.ScriptGetScriptRamCost,\n  getRunningScript: () => RamCostConstants.ScriptGetRunningScriptRamCost,\n  nFormat: () => 0,\n  getTimeSinceLastAug: () => RamCostConstants.ScriptGetHackTimeRamCost,\n  prompt: () => 0,\n  wget: () => 0,\n  getFavorToDonate: () => RamCostConstants.ScriptGetFavorToDonate,\n\n  // Singularity Functions\n  universityCourse: () => RamCostConstants.ScriptSingularityFn1RamCost,\n  gymWorkout: () => RamCostConstants.ScriptSingularityFn1RamCost,\n  travelToCity: () => RamCostConstants.ScriptSingularityFn1RamCost,\n  purchaseTor: () => RamCostConstants.ScriptSingularityFn1RamCost,\n  purchaseProgram: () => RamCostConstants.ScriptSingularityFn1RamCost,\n  getCurrentServer: () => RamCostConstants.ScriptSingularityFn1RamCost,\n  connect: () => RamCostConstants.ScriptSingularityFn1RamCost,\n  manualHack: () => RamCostConstants.ScriptSingularityFn1RamCost,\n  installBackdoor: () => RamCostConstants.ScriptSingularityFn1RamCost,\n  getStats: () => RamCostConstants.ScriptSingularityFn1RamCost / 4,\n  getCharacterInformation: () => RamCostConstants.ScriptSingularityFn1RamCost / 4,\n  getPlayer: () => RamCostConstants.ScriptSingularityFn1RamCost / 4,\n  hospitalize: () => RamCostConstants.ScriptSingularityFn1RamCost / 4,\n  isBusy: () => RamCostConstants.ScriptSingularityFn1RamCost / 4,\n  stopAction: () => RamCostConstants.ScriptSingularityFn1RamCost / 2,\n  upgradeHomeRam: () => RamCostConstants.ScriptSingularityFn2RamCost,\n  getUpgradeHomeRamCost: () => RamCostConstants.ScriptSingularityFn2RamCost / 2,\n  workForCompany: () => RamCostConstants.ScriptSingularityFn2RamCost,\n  applyToCompany: () => RamCostConstants.ScriptSingularityFn2RamCost,\n  getCompanyRep: () => RamCostConstants.ScriptSingularityFn2RamCost / 3,\n  getCompanyFavor: () => RamCostConstants.ScriptSingularityFn2RamCost / 3,\n  getCompanyFavorGain: () => RamCostConstants.ScriptSingularityFn2RamCost / 4,\n  checkFactionInvitations: () => RamCostConstants.ScriptSingularityFn2RamCost,\n  joinFaction: () => RamCostConstants.ScriptSingularityFn2RamCost,\n  workForFaction: () => RamCostConstants.ScriptSingularityFn2RamCost,\n  getFactionRep: () => RamCostConstants.ScriptSingularityFn2RamCost / 3,\n  getFactionFavor: () => RamCostConstants.ScriptSingularityFn2RamCost / 3,\n  getFactionFavorGain: () => RamCostConstants.ScriptSingularityFn2RamCost / 4,\n  donateToFaction: () => RamCostConstants.ScriptSingularityFn3RamCost,\n  createProgram: () => RamCostConstants.ScriptSingularityFn3RamCost,\n  commitCrime: () => RamCostConstants.ScriptSingularityFn3RamCost,\n  getCrimeChance: () => RamCostConstants.ScriptSingularityFn3RamCost,\n  getCrimeStats: () => RamCostConstants.ScriptSingularityFn3RamCost,\n  getOwnedAugmentations: () => RamCostConstants.ScriptSingularityFn3RamCost,\n  getOwnedSourceFiles: () => RamCostConstants.ScriptSingularityFn3RamCost,\n  getAugmentationsFromFaction: () => RamCostConstants.ScriptSingularityFn3RamCost,\n  getAugmentationCost: () => RamCostConstants.ScriptSingularityFn3RamCost,\n  getAugmentationPrereq: () => RamCostConstants.ScriptSingularityFn3RamCost,\n  getAugmentationPrice: () => RamCostConstants.ScriptSingularityFn3RamCost / 2,\n  getAugmentationRepReq: () => RamCostConstants.ScriptSingularityFn3RamCost / 2,\n  getAugmentationStats: () => RamCostConstants.ScriptSingularityFn3RamCost,\n  purchaseAugmentation: () => RamCostConstants.ScriptSingularityFn3RamCost,\n  softReset: () => RamCostConstants.ScriptSingularityFn3RamCost,\n  installAugmentations: () => RamCostConstants.ScriptSingularityFn3RamCost,\n\n  // Gang API\n  gang: {\n    createGang: () => RamCostConstants.ScriptGangApiBaseRamCost / 4,\n    inGang: () => RamCostConstants.ScriptGangApiBaseRamCost / 4,\n    getMemberNames: () => RamCostConstants.ScriptGangApiBaseRamCost / 4,\n    getGangInformation: () => RamCostConstants.ScriptGangApiBaseRamCost / 2,\n    getOtherGangInformation: () => RamCostConstants.ScriptGangApiBaseRamCost / 2,\n    getMemberInformation: () => RamCostConstants.ScriptGangApiBaseRamCost / 2,\n    canRecruitMember: () => RamCostConstants.ScriptGangApiBaseRamCost / 4,\n    recruitMember: () => RamCostConstants.ScriptGangApiBaseRamCost / 2,\n    getTaskNames: () => RamCostConstants.ScriptGangApiBaseRamCost / 4,\n    getTaskStats: () => RamCostConstants.ScriptGangApiBaseRamCost / 4,\n    setMemberTask: () => RamCostConstants.ScriptGangApiBaseRamCost / 2,\n    getEquipmentNames: () => RamCostConstants.ScriptGangApiBaseRamCost / 4,\n    getEquipmentCost: () => RamCostConstants.ScriptGangApiBaseRamCost / 2,\n    getEquipmentType: () => RamCostConstants.ScriptGangApiBaseRamCost / 2,\n    getEquipmentStats: () => RamCostConstants.ScriptGangApiBaseRamCost / 2,\n    purchaseEquipment: () => RamCostConstants.ScriptGangApiBaseRamCost,\n    ascendMember: () => RamCostConstants.ScriptGangApiBaseRamCost,\n    setTerritoryWarfare: () => RamCostConstants.ScriptGangApiBaseRamCost / 2,\n    getChanceToWinClash: () => RamCostConstants.ScriptGangApiBaseRamCost,\n    getBonusTime: () => 0,\n  },\n\n  // Bladeburner API\n  bladeburner: {\n    getContractNames: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost / 10,\n    getOperationNames: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost / 10,\n    getBlackOpNames: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost / 10,\n    getBlackOpRank: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost / 2,\n    getGeneralActionNames: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost / 10,\n    getSkillNames: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost / 10,\n    startAction: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    stopBladeburnerAction: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost / 2,\n    getCurrentAction: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost / 4,\n    getActionTime: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getActionEstimatedSuccessChance: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getActionRepGain: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getActionCountRemaining: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getActionMaxLevel: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getActionCurrentLevel: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getActionAutolevel: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    setActionAutolevel: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    setActionLevel: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getRank: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getSkillPoints: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getSkillLevel: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getSkillUpgradeCost: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    upgradeSkill: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getTeamSize: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    setTeamSize: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getCityEstimatedPopulation: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getCityEstimatedCommunities: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getCityChaos: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getCity: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    switchCity: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getStamina: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    joinBladeburnerFaction: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    joinBladeburnerDivision: () => RamCostConstants.ScriptBladeburnerApiBaseRamCost,\n    getBonusTime: () => 0,\n  },\n\n  // Coding Contract API\n  codingcontract: {\n    attempt: () => RamCostConstants.ScriptCodingContractBaseRamCost,\n    getContractType: () => RamCostConstants.ScriptCodingContractBaseRamCost / 2,\n    getData: () => RamCostConstants.ScriptCodingContractBaseRamCost / 2,\n    getDescription: () => RamCostConstants.ScriptCodingContractBaseRamCost / 2,\n    getNumTriesRemaining: () => RamCostConstants.ScriptCodingContractBaseRamCost / 5,\n  },\n\n  // Duplicate Sleeve API\n  sleeve: {\n    getNumSleeves: () => RamCostConstants.ScriptSleeveBaseRamCost,\n    setToShockRecovery: () => RamCostConstants.ScriptSleeveBaseRamCost,\n    setToSynchronize: () => RamCostConstants.ScriptSleeveBaseRamCost,\n    setToCommitCrime: () => RamCostConstants.ScriptSleeveBaseRamCost,\n    setToUniversityCourse: () => RamCostConstants.ScriptSleeveBaseRamCost,\n    travel: () => RamCostConstants.ScriptSleeveBaseRamCost,\n    setToCompanyWork: () => RamCostConstants.ScriptSleeveBaseRamCost,\n    setToFactionWork: () => RamCostConstants.ScriptSleeveBaseRamCost,\n    setToGymWorkout: () => RamCostConstants.ScriptSleeveBaseRamCost,\n    getSleeveStats: () => RamCostConstants.ScriptSleeveBaseRamCost,\n    getTask: () => RamCostConstants.ScriptSleeveBaseRamCost,\n    getInformation: () => RamCostConstants.ScriptSleeveBaseRamCost,\n    getSleeveAugmentations: () => RamCostConstants.ScriptSleeveBaseRamCost,\n    getSleevePurchasableAugs: () => RamCostConstants.ScriptSleeveBaseRamCost,\n    purchaseSleeveAug: () => RamCostConstants.ScriptSleeveBaseRamCost,\n  },\n\n  heart: {\n    // Easter egg function\n    break: () => 0,\n  },\n};\n\nexport function getRamCost(...args: string[]): number {\n  if (args.length === 0) {\n    console.warn(`No arguments passed to getRamCost()`);\n    return 0;\n  }\n\n  let curr = RamCosts[args[0]];\n  for (let i = 1; i < args.length; ++i) {\n    if (curr == null) {\n      console.warn(`Invalid function passed to getRamCost: ${args}`);\n      return 0;\n    }\n\n    const currType = typeof curr;\n    if (currType === \"function\" || currType === \"number\") {\n      break;\n    }\n\n    curr = curr[args[i]];\n  }\n\n  const currType = typeof curr;\n  if (currType === \"function\") {\n    return curr();\n  }\n\n  if (currType === \"number\") {\n    return curr;\n  }\n\n  console.warn(`Unexpected type (${currType}) for value [${args}]`);\n  return 0;\n}\n","import { ISelfInitializer, ISelfLoading } from \"../types\";\nimport { OwnedAugmentationsOrderSetting, PurchaseAugmentationsOrderSetting } from \"./SettingEnums\";\n\n/**\n * Represents the default settings the player could customize.\n */\ninterface IDefaultSettings {\n  /**\n   * How many servers per page\n   */\n  ActiveScriptsServerPageSize: number;\n  /**\n   * How many scripts per page\n   */\n  ActiveScriptsScriptPageSize: number;\n  /**\n   * How often the game should autosave the player's progress, in seconds.\n   */\n  AutosaveInterval: number;\n\n  /**\n   * How many milliseconds between execution points for Netscript 1 statements.\n   */\n  CodeInstructionRunTime: number;\n\n  /**\n   * Render city as list of buttons.\n   */\n  DisableASCIIArt: boolean;\n\n  /**\n   * Whether global keyboard shortcuts should be recognized throughout the game.\n   */\n  DisableHotkeys: boolean;\n\n  /**\n   * Whether text effects such as corruption should be visible.\n   */\n  DisableTextEffects: boolean;\n\n  /**\n   * Enable bash hotkeys\n   */\n  EnableBashHotkeys: boolean;\n\n  /**\n   * Enable timestamps\n   */\n  EnableTimestamps: boolean;\n\n  /**\n   * Locale used for display numbers\n   */\n  Locale: string;\n\n  /**\n   * Limit the number of log entries for each script being executed on each server.\n   */\n  MaxLogCapacity: number;\n\n  /**\n   * Limit how many entries can be written to a Netscript Port before entries start to get pushed out.\n   */\n  MaxPortCapacity: number;\n\n  /**\n   * Limit the number of entries in the terminal.\n   */\n  MaxTerminalCapacity: number;\n\n  /**\n   * Whether the player should be asked to confirm purchasing each and every augmentation.\n   */\n  SuppressBuyAugmentationConfirmation: boolean;\n\n  /**\n   * Whether the user should be prompted to join each faction via a dialog box.\n   */\n  SuppressFactionInvites: boolean;\n\n  /**\n   * Whether to show a popup message when player is hospitalized from taking too much damage\n   */\n  SuppressHospitalizationPopup: boolean;\n\n  /**\n   * Whether the user should be shown a dialog box whenever they receive a new message file.\n   */\n  SuppressMessages: boolean;\n\n  /**\n   * Whether the user should be asked to confirm travelling between cities.\n   */\n  SuppressTravelConfirmation: boolean;\n\n  /**\n   * Whether the user should be displayed a popup message when his Bladeburner actions are cancelled.\n   */\n  SuppressBladeburnerPopup: boolean;\n\n  /*\n   * Theme colors\n   */\n  theme: {\n    [key: string]: string | undefined;\n    primarylight: string;\n    primary: string;\n    primarydark: string;\n    errorlight: string;\n    error: string;\n    errordark: string;\n    secondarylight: string;\n    secondary: string;\n    secondarydark: string;\n    warninglight: string;\n    warning: string;\n    warningdark: string;\n    infolight: string;\n    info: string;\n    infodark: string;\n    welllight: string;\n    well: string;\n    white: string;\n    black: string;\n    hp: string;\n    money: string;\n    hack: string;\n    combat: string;\n    cha: string;\n    int: string;\n    rep: string;\n    disabled: string;\n  };\n}\n\n/**\n * Represents all possible settings the player wants to customize to their play style.\n */\ninterface ISettings extends IDefaultSettings {\n  /**\n   * What order the player's owned Augmentations/Source Files should be displayed in\n   */\n  OwnedAugmentationsOrder: OwnedAugmentationsOrderSetting;\n\n  /**\n   * What order the Augmentations should be displayed in when purchasing from a Faction\n   */\n  PurchaseAugmentationsOrder: PurchaseAugmentationsOrderSetting;\n\n  MonacoTheme: string;\n\n  MonacoInsertSpaces: boolean;\n}\n\nexport const defaultSettings: IDefaultSettings = {\n  ActiveScriptsServerPageSize: 10,\n  ActiveScriptsScriptPageSize: 10,\n  AutosaveInterval: 60,\n  CodeInstructionRunTime: 50,\n  DisableASCIIArt: false,\n  DisableHotkeys: false,\n  DisableTextEffects: false,\n  EnableBashHotkeys: false,\n  EnableTimestamps: false,\n  Locale: \"en\",\n  MaxLogCapacity: 50,\n  MaxPortCapacity: 50,\n  MaxTerminalCapacity: 200,\n  SuppressBuyAugmentationConfirmation: false,\n  SuppressFactionInvites: false,\n  SuppressHospitalizationPopup: false,\n  SuppressMessages: false,\n  SuppressTravelConfirmation: false,\n  SuppressBladeburnerPopup: false,\n\n  theme: {\n    primarylight: \"#0f0\",\n    primary: \"#0c0\",\n    primarydark: \"#090\",\n    errorlight: \"#f00\",\n    error: \"#c00\",\n    errordark: \"#900\",\n    secondarylight: \"#AAA\",\n    secondary: \"#888\",\n    secondarydark: \"#666\",\n    warninglight: \"#ff0\",\n    warning: \"#cc0\",\n    warningdark: \"#990\",\n    infolight: \"#69f\",\n    info: \"#36c\",\n    infodark: \"#039\",\n    welllight: \"#444\",\n    well: \"#222\",\n    white: \"#fff\",\n    black: \"#000\",\n    hp: \"#dd3434\",\n    money: \"#ffd700\",\n    hack: \"#adff2f\",\n    combat: \"#faffdf\",\n    cha: \"#a671d1\",\n    int: \"#6495ed\",\n    rep: \"#faffdf\",\n    disabled: \"#66cfbc\",\n  },\n};\n\n/**\n * The current options the player has customized to their play style.\n */\n// tslint:disable-next-line:variable-name\nexport const Settings: ISettings & ISelfInitializer & ISelfLoading = {\n  ActiveScriptsServerPageSize: defaultSettings.ActiveScriptsServerPageSize,\n  ActiveScriptsScriptPageSize: defaultSettings.ActiveScriptsScriptPageSize,\n  AutosaveInterval: defaultSettings.AutosaveInterval,\n  CodeInstructionRunTime: 25,\n  DisableASCIIArt: defaultSettings.DisableASCIIArt,\n  DisableHotkeys: defaultSettings.DisableHotkeys,\n  DisableTextEffects: defaultSettings.DisableTextEffects,\n  EnableBashHotkeys: defaultSettings.EnableBashHotkeys,\n  EnableTimestamps: defaultSettings.EnableTimestamps,\n  Locale: \"en\",\n  MaxLogCapacity: defaultSettings.MaxLogCapacity,\n  MaxPortCapacity: defaultSettings.MaxPortCapacity,\n  MaxTerminalCapacity: defaultSettings.MaxTerminalCapacity,\n  OwnedAugmentationsOrder: OwnedAugmentationsOrderSetting.AcquirementTime,\n  PurchaseAugmentationsOrder: PurchaseAugmentationsOrderSetting.Default,\n  SuppressBuyAugmentationConfirmation: defaultSettings.SuppressBuyAugmentationConfirmation,\n  SuppressFactionInvites: defaultSettings.SuppressFactionInvites,\n  SuppressHospitalizationPopup: defaultSettings.SuppressHospitalizationPopup,\n  SuppressMessages: defaultSettings.SuppressMessages,\n  SuppressTravelConfirmation: defaultSettings.SuppressTravelConfirmation,\n  SuppressBladeburnerPopup: defaultSettings.SuppressBladeburnerPopup,\n  MonacoTheme: \"vs-dark\",\n  MonacoInsertSpaces: false,\n\n  theme: {\n    primarylight: defaultSettings.theme.primarylight,\n    primary: defaultSettings.theme.primary,\n    primarydark: defaultSettings.theme.primarydark,\n    errorlight: defaultSettings.theme.errorlight,\n    error: defaultSettings.theme.error,\n    errordark: defaultSettings.theme.errordark,\n    secondarylight: defaultSettings.theme.secondarylight,\n    secondary: defaultSettings.theme.secondary,\n    secondarydark: defaultSettings.theme.secondarydark,\n    warninglight: defaultSettings.theme.warninglight,\n    warning: defaultSettings.theme.warning,\n    warningdark: defaultSettings.theme.warningdark,\n    infolight: defaultSettings.theme.infolight,\n    info: defaultSettings.theme.info,\n    infodark: defaultSettings.theme.infodark,\n    welllight: defaultSettings.theme.welllight,\n    well: defaultSettings.theme.well,\n    white: defaultSettings.theme.white,\n    black: defaultSettings.theme.black,\n    hp: defaultSettings.theme.hp,\n    money: defaultSettings.theme.money,\n    hack: defaultSettings.theme.hack,\n    combat: defaultSettings.theme.combat,\n    cha: defaultSettings.theme.cha,\n    int: defaultSettings.theme.int,\n    rep: defaultSettings.theme.rep,\n    disabled: defaultSettings.theme.disabled,\n  },\n  init() {\n    Object.assign(Settings, defaultSettings);\n  },\n  load(saveString: string) {\n    Object.assign(Settings, JSON.parse(saveString));\n  },\n};\n","import * as React from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    unbuyable: {\n      color: theme.palette.action.disabled,\n    },\n    money: {\n      color: theme.colors.money,\n    },\n  }),\n);\n\ninterface IProps {\n  money: number | string;\n  player?: IPlayer;\n}\nexport function Money(props: IProps): React.ReactElement {\n  const classes = useStyles();\n  if (props.player !== undefined) {\n    if (typeof props.money !== \"number\") throw new Error(\"if player if provided, money should be number, contact dev\");\n    if (!props.player.canAfford(props.money))\n      return <span className={classes.unbuyable}>{numeralWrapper.formatMoney(props.money)}</span>;\n  }\n  return (\n    <span className={classes.money}>\n      {typeof props.money === \"number\" ? numeralWrapper.formatMoney(props.money) : props.money}\n    </span>\n  );\n}\n","import { EqualityFunc } from \"../types\";\nimport { isString } from \"./helpers/isString\";\n\n// Netburner String helper functions\n\n// Replaces the character at an index with a new character\nfunction replaceAt(base: string, index: number, character: string): string {\n  return base.substr(0, index) + character + base.substr(index + character.length);\n}\n\n/*\nConverts a date representing time in milliseconds to a string with the format H hours M minutes and S seconds\ne.g.    10000 -> \"10 seconds\"\n        120000 -> \"2 minutes and 0 seconds\"\n*/\nfunction convertTimeMsToTimeElapsedString(time: number, showMilli = false): string {\n  time = Math.floor(time);\n  const millisecondsPerSecond = 1000;\n  const secondPerMinute = 60;\n  const minutesPerHours = 60;\n  const secondPerHours: number = secondPerMinute * minutesPerHours;\n  const hoursPerDays = 24;\n  const secondPerDay: number = secondPerHours * hoursPerDays;\n\n  // Convert ms to seconds, since we only have second-level precision\n  const totalSeconds: number = Math.floor(time / millisecondsPerSecond);\n\n  const days: number = Math.floor(totalSeconds / secondPerDay);\n  const secTruncDays: number = totalSeconds % secondPerDay;\n\n  const hours: number = Math.floor(secTruncDays / secondPerHours);\n  const secTruncHours: number = secTruncDays % secondPerHours;\n\n  const minutes: number = Math.floor(secTruncHours / secondPerMinute);\n  const secTruncMinutes: number = secTruncHours % secondPerMinute;\n\n  const milliTruncSec: string = (() => {\n    let str = `${time % millisecondsPerSecond}`;\n    while (str.length < 3) str = \"0\" + str;\n    return str;\n  })();\n\n  const seconds: string = showMilli ? `${secTruncMinutes}.${milliTruncSec}` : `${secTruncMinutes}`;\n\n  let res = \"\";\n  if (days > 0) {\n    res += `${days} days `;\n  }\n  if (hours > 0) {\n    res += `${hours} hours `;\n  }\n  if (minutes > 0) {\n    res += `${minutes} minutes `;\n  }\n  res += `${seconds} seconds`;\n\n  return res;\n}\n\n// Finds the longest common starting substring in a set of strings\nfunction longestCommonStart(strings: string[]): string {\n  if (!containsAllStrings(strings)) {\n    return \"\";\n  }\n  if (strings.length === 0) {\n    return \"\";\n  }\n\n  const A: string[] = strings.concat().sort();\n  const a1: string = A[0];\n  const a2: string = A[A.length - 1];\n  const L: number = a1.length;\n  let i = 0;\n  const areEqualCaseInsensitive: EqualityFunc<string> = (a: string, b: string) => a.toUpperCase() === b.toUpperCase();\n  while (i < L && areEqualCaseInsensitive(a1.charAt(i), a2.charAt(i))) {\n    i++;\n  }\n\n  return a1.substring(0, i);\n}\n\n// Returns whether an array contains entirely of string objects\nfunction containsAllStrings(arr: string[]): boolean {\n  return arr.every(isString);\n}\n\n// Formats a number with commas and a specific number of decimal digits\nfunction formatNumber(num: number, numFractionDigits = 0): string {\n  return num.toLocaleString(undefined, {\n    maximumFractionDigits: numFractionDigits,\n    minimumFractionDigits: numFractionDigits,\n  });\n}\n\n// Checks if a string contains HTML elements\nfunction isHTML(str: string): boolean {\n  const element: HTMLDivElement = document.createElement(\"div\");\n  element.innerHTML = str;\n  const c: NodeListOf<Node & ChildNode> = element.childNodes;\n  for (let i: number = c.length - 1; i >= 0; i--) {\n    if (c[i].nodeType === 1) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Generates a random alphanumeric string with N characters\nfunction generateRandomString(n: number): string {\n  let str = \"\";\n  const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for (let i = 0; i < n; i++) {\n    str += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n\n  return str;\n}\n\nexport {\n  convertTimeMsToTimeElapsedString,\n  longestCommonStart,\n  containsAllStrings,\n  formatNumber,\n  isHTML,\n  generateRandomString,\n  replaceAt,\n};\n","import { Augmentation } from \"./Augmentation\";\nimport { IMap } from \"../types\";\n\nexport const Augmentations: IMap<Augmentation> = {};\n","/* Generic Reviver, toJSON, and fromJSON functions used for saving and loading objects */\n\nexport interface IReviverValue {\n  ctor: string;\n  data: any;\n}\n\n// A generic \"smart reviver\" function.\n// Looks for object values with a `ctor` property and\n// a `data` property. If it finds them, and finds a matching\n// constructor that has a `fromJSON` property on it, it hands\n// off to that `fromJSON` fuunction, passing in the value.\nexport function Reviver(key: string, value: IReviverValue | null): any {\n  if (value == null) {\n    console.log(\"Reviver WRONGLY called with key: \" + key + \", and value: \" + value);\n    return 0;\n  }\n\n  if (typeof value === \"object\" && typeof value.ctor === \"string\" && typeof value.data !== \"undefined\") {\n    // Compatibility for version v0.43.1\n    // TODO Remove this eventually\n    if (value.ctor === \"AllServersMap\") {\n      console.log(\"Converting AllServersMap for v0.43.1\");\n      return value.data;\n    }\n\n    const ctor = Reviver.constructors[value.ctor];\n\n    if (typeof ctor === \"function\" && typeof ctor.fromJSON === \"function\") {\n      return ctor.fromJSON(value);\n    }\n  }\n  return value;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Reviver {\n  export const constructors: { [key: string]: any } = {};\n}\n\n// A generic \"toJSON\" function that creates the data expected\n// by Reviver.\n// `ctorName`  The name of the constructor to use to revive it\n// `obj`       The object being serialized\n// `keys`      (Optional) Array of the properties to serialize,\n//             if not given then all of the objects \"own\" properties\n//             that don't have function values will be serialized.\n//             (Note: If you list a property in `keys`, it will be serialized\n//             regardless of whether it's an \"own\" property.)\n// Returns:    The structure (which will then be turned into a string\n//             as part of the JSON.stringify algorithm)\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function Generic_toJSON(ctorName: string, obj: any, keys?: string[]): IReviverValue {\n  if (!keys) {\n    keys = Object.keys(obj); // Only \"own\" properties are included\n  }\n\n  const data: any = {};\n  for (let index = 0; index < keys.length; ++index) {\n    const key = keys[index];\n    data[key] = obj[key];\n  }\n  return { ctor: ctorName, data: data };\n}\n\n// A generic \"fromJSON\" function for use with Reviver: Just calls the\n// constructor function with no arguments, then applies all of the\n// key/value pairs from the raw data to the instance. Only useful for\n// constructors that can be reasonably called without arguments!\n// `ctor`      The constructor to call\n// `data`      The data to apply\n// Returns:    The object\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function Generic_fromJSON<T>(ctor: new () => T, data: any): T {\n  const obj: any = new ctor();\n  for (const name in data) {\n    obj[name] = data[name];\n  }\n  return obj;\n}\n","/**\n * All possible Cities in the game. Names only, not actual \"City\" object\n * Implemented as an enum for typing purposes\n */\nexport enum CityName {\n  Aevum = \"Aevum\",\n  Chongqing = \"Chongqing\",\n  Ishima = \"Ishima\",\n  NewTokyo = \"New Tokyo\",\n  Sector12 = \"Sector-12\",\n  Volhaven = \"Volhaven\",\n}\n","/**\n * Gets a random integer bounded by the values passed in.\n * @param min The minimum value in the range.\n * @param max The maximum value in the range.\n */\nexport function getRandomInt(min: number, max: number): number {\n  const lower: number = Math.min(min, max);\n  const upper: number = Math.max(min, max);\n\n  return Math.floor(Math.random() * (upper - lower + 1)) + lower;\n}\n","/**\n * Initialization and manipulation of the Factions object, which stores data\n * about all Factions in the game\n */\nimport { Faction } from \"./Faction\";\nimport { FactionInfos } from \"./FactionInfo\";\n\nimport { IMap } from \"../types\";\n\nimport { Reviver } from \"../utils/JSONReviver\";\n\nexport let Factions: IMap<Faction> = {};\n\nexport function loadFactions(saveString: string): void {\n  Factions = JSON.parse(saveString, Reviver);\n  // safety check for when we load older save file that don't have newer factions\n  for (const faction of Object.keys(Factions)) {\n    try {\n      Factions[faction].getInfo();\n    } catch (err) {\n      console.error(\"deleting \" + faction);\n      delete Factions[faction];\n    }\n  }\n}\n\nexport function AddToFactions(faction: Faction): void {\n  const name: string = faction.name;\n  Factions[name] = faction;\n}\n\nexport function factionExists(name: string): boolean {\n  return Factions.hasOwnProperty(name);\n}\n\nexport function initFactions(): void {\n  for (const name in FactionInfos) {\n    resetFaction(new Faction(name));\n  }\n}\n\n//Resets a faction during (re-)initialization. Saves the favor in the new\n//Faction object and deletes the old Faction Object from \"Factions\". Then\n//reinserts the new Faction object\nexport function resetFaction(newFactionObject: Faction): void {\n  if (!(newFactionObject instanceof Faction)) {\n    throw new Error(\"Invalid argument 'newFactionObject' passed into resetFaction()\");\n  }\n  const factionName: string = newFactionObject.name;\n  if (factionExists(factionName)) {\n    newFactionObject.favor = Factions[factionName].favor;\n    delete Factions[factionName];\n  }\n  AddToFactions(newFactionObject);\n}\n","// Defs for job titles, stored in arrays and categorized by job \"type\"\n\nexport const SoftwareCompanyPositions: string[] = [\n  \"Software Engineering Intern\",\n  \"Junior Software Engineer\",\n  \"Senior Software Engineer\",\n  \"Lead Software Developer\",\n  \"Head of Software\",\n  \"Head of Engineering\",\n  \"Vice President of Technology\",\n  \"Chief Technology Officer\",\n];\n\nexport const ITCompanyPositions: string[] = [\"IT Intern\", \"IT Analyst\", \"IT Manager\", \"Systems Administrator\"];\n\nexport const SecurityEngineerCompanyPositions: string[] = [\"Security Engineer\"];\n\nexport const NetworkEngineerCompanyPositions: string[] = [\"Network Engineer\", \"Network Administrator\"];\n\nexport const BusinessCompanyPositions: string[] = [\n  \"Business Intern\",\n  \"Business Analyst\",\n  \"Business Manager\",\n  \"Operations Manager\",\n  \"Chief Financial Officer\",\n  \"Chief Executive Officer\",\n];\n\nexport const SecurityCompanyPositions: string[] = [\n  \"Police Officer\",\n  \"Police Chief\",\n  \"Security Guard\",\n  \"Security Officer\",\n  \"Security Supervisor\",\n  \"Head of Security\",\n];\n\nexport const AgentCompanyPositions: string[] = [\"Field Agent\", \"Secret Agent\", \"Special Operative\"];\n\nexport const MiscCompanyPositions: string[] = [\"Waiter\", \"Employee\"];\n\nexport const SoftwareConsultantCompanyPositions: string[] = [\"Software Consultant\", \"Senior Software Consultant\"];\n\nexport const BusinessConsultantCompanyPositions: string[] = [\"Business Consultant\", \"Senior Business Consultant\"];\n\nexport const PartTimeCompanyPositions: string[] = [\"Part-time Waiter\", \"Part-time Employee\"];\n","import React, { useContext } from \"react\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { IRouter } from \"./Router\";\n\nexport const Context: {\n  Player: React.Context<IPlayer>;\n  Router: React.Context<IRouter>;\n} = {\n  Player: React.createContext<IPlayer>({} as IPlayer),\n  Router: React.createContext<IRouter>({} as IRouter),\n};\n\nexport const use: {\n  Player: () => IPlayer;\n  Router: () => IRouter;\n} = {\n  Player: () => useContext(Context.Player),\n  Router: () => useContext(Context.Router),\n};\n","import { Faction } from \"../Faction/Faction\";\nimport { Location } from \"../Locations/Location\";\n\n/**\n * The full-screen page the player is currently be on.\n * These pages are mutually exclusive.\n */\nexport enum Page {\n  ActiveScripts,\n  Augmentations,\n  BitVerse,\n  Bladeburner,\n  City,\n  Corporation,\n  CreateProgram,\n  CreateScript,\n  DevMenu,\n  Faction,\n  Factions,\n  Gang,\n  Hacknet,\n  Infiltration,\n  Job,\n  Milestones,\n  Options,\n  Resleeves,\n  Sleeves,\n  Stats,\n  StockMarket,\n  Terminal,\n  Travel,\n  Tutorial,\n  Work,\n  BladeburnerCinematic,\n  Location,\n  HackingMission,\n  Loading,\n}\n\n/**\n * This class keeps track of player navigation/routing within the game.\n */\nexport interface IRouter {\n  // toCinematicText(): void;\n  // toInfiltration(): void;\n  // toMission(): void;\n  // toRedPill(): void;\n  // toworkInProgress(): void;\n  page(): Page;\n  toActiveScripts(): void;\n  toAugmentations(): void;\n  toBitVerse(flume: boolean, quick: boolean): void;\n  toBladeburner(): void;\n  toStats(): void;\n  toCity(): void; // travel ? city ?\n  toCorporation(): void;\n  toCreateProgram(): void;\n  toDevMenu(): void;\n  toFaction(faction?: Faction): void; // faction name\n  toFactions(): void;\n  toGameOptions(): void;\n  toGang(): void;\n  toHacknetNodes(): void;\n  toInfiltration(location: Location): void;\n  toJob(): void;\n  toMilestones(): void;\n  toResleeves(): void;\n  toScriptEditor(filename?: string, code?: string): void;\n  toSleeves(): void;\n  toStockMarket(): void;\n  toTerminal(): void;\n  toTravel(): void;\n  toTutorial(): void;\n  toWork(): void;\n  toBladeburnerCinematic(): void;\n  toLocation(location: Location): void;\n  toHackingMission(faction: Faction): void;\n}\n","// Class definition for a single Augmentation object\nimport * as React from \"react\";\nimport { IMap } from \"../types\";\n\nimport { BitNodeMultipliers } from \"../BitNode/BitNodeMultipliers\";\nimport { Faction } from \"../Faction/Faction\";\nimport { Factions } from \"../Faction/Factions\";\nimport { numeralWrapper } from \"../ui/numeralFormat\";\nimport { Money } from \"../ui/React/Money\";\n\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\n\nexport interface IConstructorParams {\n  info: string | JSX.Element;\n  stats?: JSX.Element | null;\n  isSpecial?: boolean;\n  moneyCost: number;\n  name: string;\n  prereqs?: string[];\n  repCost: number;\n\n  hacking_mult?: number;\n  strength_mult?: number;\n  defense_mult?: number;\n  dexterity_mult?: number;\n  agility_mult?: number;\n  charisma_mult?: number;\n  hacking_exp_mult?: number;\n  strength_exp_mult?: number;\n  defense_exp_mult?: number;\n  dexterity_exp_mult?: number;\n  agility_exp_mult?: number;\n  charisma_exp_mult?: number;\n  hacking_chance_mult?: number;\n  hacking_speed_mult?: number;\n  hacking_money_mult?: number;\n  hacking_grow_mult?: number;\n  company_rep_mult?: number;\n  faction_rep_mult?: number;\n  crime_money_mult?: number;\n  crime_success_mult?: number;\n  work_money_mult?: number;\n  hacknet_node_money_mult?: number;\n  hacknet_node_purchase_cost_mult?: number;\n  hacknet_node_ram_cost_mult?: number;\n  hacknet_node_core_cost_mult?: number;\n  hacknet_node_level_cost_mult?: number;\n  bladeburner_max_stamina_mult?: number;\n  bladeburner_stamina_gain_mult?: number;\n  bladeburner_analysis_mult?: number;\n  bladeburner_success_chance_mult?: number;\n\n  startingMoney?: number;\n  programs?: string[];\n}\n\nfunction generateStatsDescription(mults: IMap<number>, programs?: string[], startingMoney?: number): JSX.Element {\n  const f = (x: number, decimals = 0): string => {\n    // look, I don't know how to make a \"smart decimals\"\n    // todo, make it smarter\n    if (x === 1.0777 - 1) return \"7.77%\";\n    if (x === 1.777 - 1) return \"77.7%\";\n    return numeralWrapper.formatPercentage(x, decimals);\n  };\n  let desc = <>Effects:</>;\n\n  if (\n    mults.hacking_mult &&\n    mults.hacking_mult == mults.strength_mult &&\n    mults.hacking_mult == mults.defense_mult &&\n    mults.hacking_mult == mults.dexterity_mult &&\n    mults.hacking_mult == mults.agility_mult &&\n    mults.hacking_mult == mults.charisma_mult\n  ) {\n    desc = (\n      <>\n        {desc}\n        <br />+{f(mults.hacking_mult - 1)} all skills\n      </>\n    );\n  } else {\n    if (mults.hacking_mult)\n      desc = (\n        <>\n          {desc}\n          <br />+{f(mults.hacking_mult - 1)} hacking skill\n        </>\n      );\n\n    if (\n      mults.strength_mult &&\n      mults.strength_mult == mults.defense_mult &&\n      mults.strength_mult == mults.dexterity_mult &&\n      mults.strength_mult == mults.agility_mult\n    ) {\n      desc = (\n        <>\n          {desc}\n          <br />+{f(mults.strength_mult - 1)} combat skills\n        </>\n      );\n    } else {\n      if (mults.strength_mult)\n        desc = (\n          <>\n            {desc}\n            <br />+{f(mults.strength_mult - 1)} strength skill\n          </>\n        );\n      if (mults.defense_mult)\n        desc = (\n          <>\n            {desc}\n            <br />+{f(mults.defense_mult - 1)} defense skill\n          </>\n        );\n      if (mults.dexterity_mult)\n        desc = (\n          <>\n            {desc}\n            <br />+{f(mults.dexterity_mult - 1)} dexterity skill\n          </>\n        );\n      if (mults.agility_mult)\n        desc = (\n          <>\n            {desc}\n            <br />+{f(mults.agility_mult - 1)} agility skill\n          </>\n        );\n    }\n    if (mults.charisma_mult)\n      desc = (\n        <>\n          {desc}\n          <br />+{f(mults.charisma_mult - 1)} Charisma skill\n        </>\n      );\n  }\n\n  if (\n    mults.hacking_exp_mult &&\n    mults.hacking_exp_mult === mults.strength_exp_mult &&\n    mults.hacking_exp_mult === mults.defense_exp_mult &&\n    mults.hacking_exp_mult === mults.dexterity_exp_mult &&\n    mults.hacking_exp_mult === mults.agility_exp_mult &&\n    mults.hacking_exp_mult === mults.charisma_exp_mult\n  ) {\n    desc = (\n      <>\n        {desc}\n        <br />+{f(mults.hacking_exp_mult - 1)} exp for all skills\n      </>\n    );\n  } else {\n    if (mults.hacking_exp_mult)\n      desc = (\n        <>\n          {desc}\n          <br />+{f(mults.hacking_exp_mult - 1)} hacking exp\n        </>\n      );\n\n    if (\n      mults.strength_exp_mult &&\n      mults.strength_exp_mult === mults.defense_exp_mult &&\n      mults.strength_exp_mult === mults.dexterity_exp_mult &&\n      mults.strength_exp_mult === mults.agility_exp_mult\n    ) {\n      desc = (\n        <>\n          {desc}\n          <br />+{f(mults.strength_exp_mult - 1)} combat exp\n        </>\n      );\n    } else {\n      if (mults.strength_exp_mult)\n        desc = (\n          <>\n            {desc}\n            <br />+{f(mults.strength_exp_mult - 1)} strength exp\n          </>\n        );\n      if (mults.defense_exp_mult)\n        desc = (\n          <>\n            {desc}\n            <br />+{f(mults.defense_exp_mult - 1)} defense exp\n          </>\n        );\n      if (mults.dexterity_exp_mult)\n        desc = (\n          <>\n            {desc}\n            <br />+{f(mults.dexterity_exp_mult - 1)} dexterity exp\n          </>\n        );\n      if (mults.agility_exp_mult)\n        desc = (\n          <>\n            {desc}\n            <br />+{f(mults.agility_exp_mult - 1)} agility exp\n          </>\n        );\n    }\n    if (mults.charisma_exp_mult)\n      desc = (\n        <>\n          {desc}\n          <br />+{f(mults.charisma_exp_mult - 1)} charisma exp\n        </>\n      );\n  }\n\n  if (mults.hacking_speed_mult)\n    desc = (\n      <>\n        {desc}\n        <br />+{f(mults.hacking_speed_mult - 1)} faster hack(), grow(), and weaken()\n      </>\n    );\n  if (mults.hacking_chance_mult)\n    desc = (\n      <>\n        {desc}\n        <br />+{f(mults.hacking_chance_mult - 1)} hack() success chance\n      </>\n    );\n  if (mults.hacking_money_mult)\n    desc = (\n      <>\n        {desc}\n        <br />+{f(mults.hacking_money_mult - 1)} hack() power\n      </>\n    );\n  if (mults.hacking_grow_mult)\n    desc = (\n      <>\n        {desc}\n        <br />+{f(mults.hacking_grow_mult - 1)} grow() power\n      </>\n    );\n\n  if (mults.faction_rep_mult && mults.faction_rep_mult === mults.company_rep_mult) {\n    desc = (\n      <>\n        {desc}\n        <br />+{f(mults.faction_rep_mult - 1)} reputation from factions and companies\n      </>\n    );\n  } else {\n    if (mults.faction_rep_mult)\n      desc = (\n        <>\n          {desc}\n          <br />+{f(mults.faction_rep_mult - 1)} reputation from factions\n        </>\n      );\n    if (mults.company_rep_mult)\n      desc = (\n        <>\n          {desc}\n          <br />+{f(mults.company_rep_mult - 1)} reputation from companies\n        </>\n      );\n  }\n\n  if (mults.crime_money_mult)\n    desc = (\n      <>\n        {desc}\n        <br />+{f(mults.crime_money_mult - 1)} crime money\n      </>\n    );\n  if (mults.crime_success_mult)\n    desc = (\n      <>\n        {desc}\n        <br />+{f(mults.crime_success_mult - 1)} crime success rate\n      </>\n    );\n  if (mults.work_money_mult)\n    desc = (\n      <>\n        {desc}\n        <br />+{f(mults.work_money_mult - 1)} work money\n      </>\n    );\n\n  if (mults.hacknet_node_money_mult)\n    desc = (\n      <>\n        {desc}\n        <br />+{f(mults.hacknet_node_money_mult - 1)} hacknet production\n      </>\n    );\n  if (mults.hacknet_node_purchase_cost_mult)\n    desc = (\n      <>\n        {desc}\n        <br />-{f(-(mults.hacknet_node_purchase_cost_mult - 1))} hacknet nodes cost\n      </>\n    );\n  if (mults.hacknet_node_level_cost_mult)\n    desc = (\n      <>\n        {desc}\n        <br />-{f(-(mults.hacknet_node_level_cost_mult - 1))} hacknet nodes upgrade cost\n      </>\n    );\n\n  if (mults.bladeburner_max_stamina_mult)\n    desc = (\n      <>\n        {desc}\n        <br />+{f(mults.bladeburner_max_stamina_mult - 1)} Bladeburner Max Stamina\n      </>\n    );\n  if (mults.bladeburner_stamina_gain_mult)\n    desc = (\n      <>\n        {desc}\n        <br />+{f(mults.bladeburner_stamina_gain_mult - 1)} Bladeburner Stamina gain\n      </>\n    );\n  if (mults.bladeburner_analysis_mult)\n    desc = (\n      <>\n        {desc}\n        <br />+{f(mults.bladeburner_analysis_mult - 1)} Bladeburner Field Analysis effectiveness\n      </>\n    );\n  if (mults.bladeburner_success_chance_mult)\n    desc = (\n      <>\n        {desc}\n        <br />+{f(mults.bladeburner_success_chance_mult - 1)} Bladeburner Contracts and Operations success chance\n      </>\n    );\n\n  if (startingMoney)\n    desc = (\n      <>\n        {desc}\n        <br />\n        Start with <Money money={startingMoney} /> after installing Augmentations.\n      </>\n    );\n\n  if (programs)\n    desc = (\n      <>\n        {desc}\n        <br />\n        Start with {programs.join(\" and \")} after installing Augmentations.\n      </>\n    );\n  return desc;\n}\n\nexport class Augmentation {\n  // How much money this costs to buy\n  baseCost = 0;\n\n  // How much faction reputation is required to unlock this\n  baseRepRequirement = 0;\n\n  // Description of what this Aug is and what it does\n  info: string | JSX.Element;\n\n  // Description of the stats, often autogenerated, sometimes manually written.\n  stats: JSX.Element | null;\n\n  // Any Augmentation not immediately available in BitNode-1 is special (e.g. Bladeburner augs)\n  isSpecial = false;\n\n  // Augmentation level - for repeatable Augs like NeuroFlux Governor\n  level = 0;\n\n  // Name of Augmentation\n  name = \"\";\n\n  // Whether the player owns this Augmentation\n  owned = false;\n\n  // Array of names of all prerequisites\n  prereqs: string[] = [];\n\n  // Multipliers given by this Augmentation.  Must match the property name in\n  // The Player/Person classes\n  mults: IMap<number> = {};\n\n  // Initial cost. Doesn't change when you purchase multiple Augmentation\n  startingCost = 0;\n\n  constructor(\n    params: IConstructorParams = {\n      info: \"\",\n      moneyCost: 0,\n      name: \"\",\n      repCost: 0,\n    },\n  ) {\n    this.name = params.name;\n    this.info = params.info;\n    this.prereqs = params.prereqs ? params.prereqs : [];\n\n    this.baseRepRequirement = params.repCost * BitNodeMultipliers.AugmentationRepCost;\n    this.baseCost = params.moneyCost * BitNodeMultipliers.AugmentationMoneyCost;\n    this.startingCost = this.baseCost;\n\n    if (params.isSpecial) {\n      this.isSpecial = true;\n    }\n\n    this.level = 0;\n\n    // Set multipliers\n    if (params.hacking_mult) {\n      this.mults.hacking_mult = params.hacking_mult;\n    }\n    if (params.strength_mult) {\n      this.mults.strength_mult = params.strength_mult;\n    }\n    if (params.defense_mult) {\n      this.mults.defense_mult = params.defense_mult;\n    }\n    if (params.dexterity_mult) {\n      this.mults.dexterity_mult = params.dexterity_mult;\n    }\n    if (params.agility_mult) {\n      this.mults.agility_mult = params.agility_mult;\n    }\n    if (params.charisma_mult) {\n      this.mults.charisma_mult = params.charisma_mult;\n    }\n    if (params.hacking_exp_mult) {\n      this.mults.hacking_exp_mult = params.hacking_exp_mult;\n    }\n    if (params.strength_exp_mult) {\n      this.mults.strength_exp_mult = params.strength_exp_mult;\n    }\n    if (params.defense_exp_mult) {\n      this.mults.defense_exp_mult = params.defense_exp_mult;\n    }\n    if (params.dexterity_exp_mult) {\n      this.mults.dexterity_exp_mult = params.dexterity_exp_mult;\n    }\n    if (params.agility_exp_mult) {\n      this.mults.agility_exp_mult = params.agility_exp_mult;\n    }\n    if (params.charisma_exp_mult) {\n      this.mults.charisma_exp_mult = params.charisma_exp_mult;\n    }\n    if (params.hacking_chance_mult) {\n      this.mults.hacking_chance_mult = params.hacking_chance_mult;\n    }\n    if (params.hacking_speed_mult) {\n      this.mults.hacking_speed_mult = params.hacking_speed_mult;\n    }\n    if (params.hacking_money_mult) {\n      this.mults.hacking_money_mult = params.hacking_money_mult;\n    }\n    if (params.hacking_grow_mult) {\n      this.mults.hacking_grow_mult = params.hacking_grow_mult;\n    }\n    if (params.company_rep_mult) {\n      this.mults.company_rep_mult = params.company_rep_mult;\n    }\n    if (params.faction_rep_mult) {\n      this.mults.faction_rep_mult = params.faction_rep_mult;\n    }\n    if (params.crime_money_mult) {\n      this.mults.crime_money_mult = params.crime_money_mult;\n    }\n    if (params.crime_success_mult) {\n      this.mults.crime_success_mult = params.crime_success_mult;\n    }\n    if (params.work_money_mult) {\n      this.mults.work_money_mult = params.work_money_mult;\n    }\n    if (params.hacknet_node_money_mult) {\n      this.mults.hacknet_node_money_mult = params.hacknet_node_money_mult;\n    }\n    if (params.hacknet_node_purchase_cost_mult) {\n      this.mults.hacknet_node_purchase_cost_mult = params.hacknet_node_purchase_cost_mult;\n    }\n    if (params.hacknet_node_ram_cost_mult) {\n      this.mults.hacknet_node_ram_cost_mult = params.hacknet_node_ram_cost_mult;\n    }\n    if (params.hacknet_node_core_cost_mult) {\n      this.mults.hacknet_node_core_cost_mult = params.hacknet_node_core_cost_mult;\n    }\n    if (params.hacknet_node_level_cost_mult) {\n      this.mults.hacknet_node_level_cost_mult = params.hacknet_node_level_cost_mult;\n    }\n    if (params.bladeburner_max_stamina_mult) {\n      this.mults.bladeburner_max_stamina_mult = params.bladeburner_max_stamina_mult;\n    }\n    if (params.bladeburner_stamina_gain_mult) {\n      this.mults.bladeburner_stamina_gain_mult = params.bladeburner_stamina_gain_mult;\n    }\n    if (params.bladeburner_analysis_mult) {\n      this.mults.bladeburner_analysis_mult = params.bladeburner_analysis_mult;\n    }\n    if (params.bladeburner_success_chance_mult) {\n      this.mults.bladeburner_success_chance_mult = params.bladeburner_success_chance_mult;\n    }\n\n    if (params.stats === undefined)\n      this.stats = generateStatsDescription(this.mults, params.programs, params.startingMoney);\n    else this.stats = params.stats;\n  }\n\n  // Adds this Augmentation to the specified Factions\n  addToFactions(factionList: string[]): void {\n    for (let i = 0; i < factionList.length; ++i) {\n      const faction: Faction | null = Factions[factionList[i]];\n      if (faction == null) {\n        console.warn(`In Augmentation.addToFactions(), could not find faction with this name: ${factionList[i]}`);\n        continue;\n      }\n      faction.augmentations.push(this.name);\n    }\n  }\n\n  // Adds this Augmentation to all Factions\n  addToAllFactions(): void {\n    for (const fac in Factions) {\n      if (Factions.hasOwnProperty(fac)) {\n        const facObj: Faction | null = Factions[fac];\n        if (facObj == null) {\n          console.warn(`Invalid Faction object in addToAllFactions(). Key value: ${fac}`);\n          continue;\n        }\n        facObj.augmentations.push(this.name);\n      }\n    }\n  }\n\n  // Serialize the current object to a JSON save state.\n  toJSON(): any {\n    return Generic_toJSON(\"Augmentation\", this);\n  }\n\n  // Initiatizes a Augmentation object from a JSON save state.\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Augmentation {\n    return Generic_fromJSON(Augmentation, value.data);\n  }\n}\n\nReviver.constructors.Augmentation = Augmentation;\n","import { Server } from \"./Server\";\nimport { SpecialServerIps } from \"./SpecialServerIps\";\nimport { serverMetadata } from \"./data/servers\";\n\nimport { HacknetServer } from \"../Hacknet/HacknetServer\";\n\nimport { IMap } from \"../types\";\nimport { createRandomIp } from \"../utils/IPAddress\";\nimport { getRandomInt } from \"../utils/helpers/getRandomInt\";\nimport { Reviver } from \"../utils/JSONReviver\";\n\n/**\n * Map of all Servers that exist in the game\n *  Key (string) = IP\n *  Value = Server object\n */\nexport let AllServers: IMap<Server | HacknetServer> = {};\n\nexport function ipExists(ip: string): boolean {\n  return AllServers[ip] != null;\n}\n\nexport function createUniqueRandomIp(): string {\n  const ip = createRandomIp();\n\n  // If the Ip already exists, recurse to create a new one\n  if (ipExists(ip)) {\n    return createRandomIp();\n  }\n\n  return ip;\n}\n\n// Saftely add a Server to the AllServers map\nexport function AddToAllServers(server: Server | HacknetServer): void {\n  const serverIp = server.ip;\n  if (ipExists(serverIp)) {\n    console.warn(`IP of server that's being added: ${serverIp}`);\n    console.warn(`Hostname of the server thats being added: ${server.hostname}`);\n    console.warn(`The server that already has this IP is: ${AllServers[serverIp].hostname}`);\n    throw new Error(\"Error: Trying to add a server with an existing IP\");\n  }\n\n  AllServers[serverIp] = server;\n}\n\ninterface IServerParams {\n  hackDifficulty?: number;\n  hostname: string;\n  ip: string;\n  maxRam?: number;\n  moneyAvailable?: number;\n  numOpenPortsRequired: number;\n  organizationName: string;\n  requiredHackingSkill?: number;\n  serverGrowth?: number;\n\n  [key: string]: any;\n}\n\nexport function initForeignServers(homeComputer: Server): void {\n  /* Create a randomized network for all the foreign servers */\n  //Groupings for creating a randomized network\n  const networkLayers: Server[][] = [];\n  for (let i = 0; i < 15; i++) {\n    networkLayers.push([]);\n  }\n\n  // Essentially any property that is of type 'number | IMinMaxRange'\n  const propertiesToPatternMatch: string[] = [\n    \"hackDifficulty\",\n    \"moneyAvailable\",\n    \"requiredHackingSkill\",\n    \"serverGrowth\",\n  ];\n\n  const toNumber = (value: any): any => {\n    switch (typeof value) {\n      case \"number\":\n        return value;\n      case \"object\":\n        return getRandomInt(value.min, value.max);\n      default:\n        throw Error(`Do not know how to convert the type '${typeof value}' to a number`);\n    }\n  };\n\n  for (const metadata of serverMetadata) {\n    const serverParams: IServerParams = {\n      hostname: metadata.hostname,\n      ip: createUniqueRandomIp(),\n      numOpenPortsRequired: metadata.numOpenPortsRequired,\n      organizationName: metadata.organizationName,\n    };\n\n    if (metadata.maxRamExponent !== undefined) {\n      serverParams.maxRam = Math.pow(2, toNumber(metadata.maxRamExponent));\n    }\n\n    for (const prop of propertiesToPatternMatch) {\n      if (metadata[prop] !== undefined) {\n        serverParams[prop] = toNumber(metadata[prop]);\n      }\n    }\n\n    const server = new Server(serverParams);\n    for (const filename of metadata.literature || []) {\n      server.messages.push(filename);\n    }\n\n    if (metadata.specialName !== undefined) {\n      SpecialServerIps.addIp(metadata.specialName, server.ip);\n    }\n\n    AddToAllServers(server);\n    if (metadata.networkLayer !== undefined) {\n      networkLayers[toNumber(metadata.networkLayer) - 1].push(server);\n    }\n  }\n\n  /* Create a randomized network for all the foreign servers */\n  const linkComputers = (server1: Server, server2: Server): void => {\n    server1.serversOnNetwork.push(server2.ip);\n    server2.serversOnNetwork.push(server1.ip);\n  };\n\n  const getRandomArrayItem = (arr: any[]): any => arr[Math.floor(Math.random() * arr.length)];\n\n  const linkNetworkLayers = (network1: Server[], selectServer: () => Server): void => {\n    for (const server of network1) {\n      linkComputers(server, selectServer());\n    }\n  };\n\n  // Connect the first tier of servers to the player's home computer\n  linkNetworkLayers(networkLayers[0], () => homeComputer);\n  for (let i = 1; i < networkLayers.length; i++) {\n    linkNetworkLayers(networkLayers[i], () => getRandomArrayItem(networkLayers[i - 1]));\n  }\n}\n\nexport function prestigeAllServers(): void {\n  for (const member in AllServers) {\n    delete AllServers[member];\n  }\n  AllServers = {};\n}\n\nexport function loadAllServers(saveString: string): void {\n  AllServers = JSON.parse(saveString, Reviver);\n}\n","export const HacknetNodeConstants: {\n  // Constants for Hacknet Node production\n  MoneyGainPerLevel: number;\n\n  // Constants for Hacknet Node purchase/upgrade costs\n  BaseCost: number;\n  LevelBaseCost: number;\n  RamBaseCost: number;\n  CoreBaseCost: number;\n\n  PurchaseNextMult: number;\n  UpgradeLevelMult: number;\n  UpgradeRamMult: number;\n  UpgradeCoreMult: number;\n\n  // Constants for max upgrade levels for Hacknet Nodes\n  MaxLevel: number;\n  MaxRam: number;\n  MaxCores: number;\n} = {\n  MoneyGainPerLevel: 1.6,\n\n  BaseCost: 1000,\n  LevelBaseCost: 1,\n  RamBaseCost: 30e3,\n  CoreBaseCost: 500e3,\n\n  PurchaseNextMult: 1.85,\n  UpgradeLevelMult: 1.04,\n  UpgradeRamMult: 1.28,\n  UpgradeCoreMult: 1.48,\n\n  MaxLevel: 200,\n  MaxRam: 64,\n  MaxCores: 16,\n};\n\nexport const PurchaseMultipliers: {\n  [key: string]: number | \"MAX\" | undefined;\n  x1: number;\n  x5: number;\n  x10: number;\n  MAX: \"MAX\";\n} = {\n  x1: 1,\n  x5: 5,\n  x10: 10,\n  MAX: \"MAX\",\n};\n\nexport const HacknetServerConstants: {\n  // Constants for Hacknet Server stats/production\n  HashesPerLevel: number;\n\n  // Constants for Hacknet Server purchase/upgrade costs\n  BaseCost: number;\n  RamBaseCost: number;\n  CoreBaseCost: number;\n  CacheBaseCost: number;\n\n  PurchaseMult: number; // Multiplier for puchasing an additional Hacknet Server\n  UpgradeLevelMult: number; // Multiplier for cost when upgrading level\n  UpgradeRamMult: number; // Multiplier for cost when upgrading RAM\n  UpgradeCoreMult: number; // Multiplier for cost when buying another core\n  UpgradeCacheMult: number; // Multiplier for cost when upgrading cache\n  MaxServers: number; // Max number of Hacknet Servers you can own\n\n  // Constants for max upgrade levels for Hacknet Server\n  MaxLevel: number;\n  MaxRam: number;\n  MaxCores: number;\n  MaxCache: number;\n} = {\n  HashesPerLevel: 0.001,\n\n  BaseCost: 50e3,\n  RamBaseCost: 200e3,\n  CoreBaseCost: 1e6,\n  CacheBaseCost: 10e6,\n\n  PurchaseMult: 3.2,\n  UpgradeLevelMult: 1.1,\n  UpgradeRamMult: 1.4,\n  UpgradeCoreMult: 1.55,\n  UpgradeCacheMult: 1.85,\n\n  MaxServers: 20,\n\n  MaxLevel: 300,\n  MaxRam: 8192,\n  MaxCores: 128,\n  MaxCache: 15,\n};\n","// Action Identifier enum\nexport const ActionTypes: {\n  [key: string]: number;\n  Idle: number;\n  Contract: number;\n  Operation: number;\n  BlackOp: number;\n  BlackOperation: number;\n  Training: number;\n  Recruitment: number;\n  FieldAnalysis: number;\n  \"Field Analysis\": number;\n  Diplomacy: number;\n  \"Hyperbolic Regeneration Chamber\": number;\n} = {\n  Idle: 1,\n  Contract: 2,\n  Operation: 3,\n  BlackOp: 4,\n  BlackOperation: 4,\n  Training: 5,\n  Recruitment: 6,\n  FieldAnalysis: 7,\n  \"Field Analysis\": 7,\n  Diplomacy: 8,\n  \"Hyperbolic Regeneration Chamber\": 9,\n};\n","import { Player } from \"./Player\";\n\nimport { LiteratureNames } from \"./Literature/data/LiteratureNames\";\n\nimport { ITutorialEvents } from \"./ui/InteractiveTutorial/ITutorialEvents\";\n\n// Ordered array of keys to Interactive Tutorial Steps\nenum iTutorialSteps {\n  Start,\n  GoToCharacterPage, // Click on 'Stats' page\n  CharacterPage, // Introduction to 'Stats' page\n  CharacterGoToTerminalPage, // Go back to Terminal\n  TerminalIntro, // Introduction to Terminal\n  TerminalHelp, // Using 'help' Terminal command\n  TerminalLs, // Using 'ls' Terminal command\n  TerminalScan, // Using 'scan' Terminal command\n  TerminalScanAnalyze1, // Using 'scan-analyze' Terminal command\n  TerminalScanAnalyze2, // Using 'scan-analyze 3' Terminal command\n  TerminalConnect, // Connecting to n00dles\n  TerminalAnalyze, // Analyzing n00dles\n  TerminalNuke, // NUKE n00dles\n  TerminalManualHack, // Hack n00dles\n  TerminalHackingMechanics, // Explanation of hacking mechanics\n  TerminalGoHome, // Go home before creating a script.\n  TerminalCreateScript, // Create a script using 'nano'\n  TerminalTypeScript, // Script Editor page - Type script and then save & close\n  TerminalFree, // Using 'Free' Terminal command\n  TerminalRunScript, // Running script using 'run' Terminal command\n  TerminalGoToActiveScriptsPage,\n  ActiveScriptsPage,\n  ActiveScriptsToTerminal,\n  TerminalTailScript,\n  GoToHacknetNodesPage,\n  HacknetNodesIntroduction,\n  HacknetNodesGoToWorldPage,\n  WorldDescription,\n  TutorialPageInfo,\n  End,\n}\n\nconst ITutorial: {\n  currStep: iTutorialSteps;\n  isRunning: boolean;\n  stepIsDone: {\n    [iTutorialSteps.Start]: boolean;\n    [iTutorialSteps.GoToCharacterPage]: boolean;\n    [iTutorialSteps.CharacterPage]: boolean;\n    [iTutorialSteps.CharacterGoToTerminalPage]: boolean;\n    [iTutorialSteps.TerminalIntro]: boolean;\n    [iTutorialSteps.TerminalHelp]: boolean;\n    [iTutorialSteps.TerminalLs]: boolean;\n    [iTutorialSteps.TerminalScan]: boolean;\n    [iTutorialSteps.TerminalScanAnalyze1]: boolean;\n    [iTutorialSteps.TerminalScanAnalyze2]: boolean;\n    [iTutorialSteps.TerminalConnect]: boolean;\n    [iTutorialSteps.TerminalAnalyze]: boolean;\n    [iTutorialSteps.TerminalNuke]: boolean;\n    [iTutorialSteps.TerminalManualHack]: boolean;\n    [iTutorialSteps.TerminalHackingMechanics]: boolean;\n    [iTutorialSteps.TerminalGoHome]: boolean;\n    [iTutorialSteps.TerminalCreateScript]: boolean;\n    [iTutorialSteps.TerminalTypeScript]: boolean;\n    [iTutorialSteps.TerminalFree]: boolean;\n    [iTutorialSteps.TerminalRunScript]: boolean;\n    [iTutorialSteps.TerminalGoToActiveScriptsPage]: boolean;\n    [iTutorialSteps.ActiveScriptsPage]: boolean;\n    [iTutorialSteps.ActiveScriptsToTerminal]: boolean;\n    [iTutorialSteps.TerminalTailScript]: boolean;\n    [iTutorialSteps.GoToHacknetNodesPage]: boolean;\n    [iTutorialSteps.HacknetNodesIntroduction]: boolean;\n    [iTutorialSteps.HacknetNodesGoToWorldPage]: boolean;\n    [iTutorialSteps.WorldDescription]: boolean;\n    [iTutorialSteps.TutorialPageInfo]: boolean;\n    [iTutorialSteps.End]: boolean;\n  };\n} = {\n  currStep: iTutorialSteps.Start,\n  isRunning: false,\n\n  // Keeps track of whether each step has been done\n  stepIsDone: {\n    [iTutorialSteps.Start]: false,\n    [iTutorialSteps.GoToCharacterPage]: false,\n    [iTutorialSteps.CharacterPage]: false,\n    [iTutorialSteps.CharacterGoToTerminalPage]: false,\n    [iTutorialSteps.TerminalIntro]: false,\n    [iTutorialSteps.TerminalHelp]: false,\n    [iTutorialSteps.TerminalLs]: false,\n    [iTutorialSteps.TerminalScan]: false,\n    [iTutorialSteps.TerminalScanAnalyze1]: false,\n    [iTutorialSteps.TerminalScanAnalyze2]: false,\n    [iTutorialSteps.TerminalConnect]: false,\n    [iTutorialSteps.TerminalAnalyze]: false,\n    [iTutorialSteps.TerminalNuke]: false,\n    [iTutorialSteps.TerminalManualHack]: false,\n    [iTutorialSteps.TerminalHackingMechanics]: false,\n    [iTutorialSteps.TerminalGoHome]: false,\n    [iTutorialSteps.TerminalCreateScript]: false,\n    [iTutorialSteps.TerminalTypeScript]: false,\n    [iTutorialSteps.TerminalFree]: false,\n    [iTutorialSteps.TerminalRunScript]: false,\n    [iTutorialSteps.TerminalGoToActiveScriptsPage]: false,\n    [iTutorialSteps.ActiveScriptsPage]: false,\n    [iTutorialSteps.ActiveScriptsToTerminal]: false,\n    [iTutorialSteps.TerminalTailScript]: false,\n    [iTutorialSteps.GoToHacknetNodesPage]: false,\n    [iTutorialSteps.HacknetNodesIntroduction]: false,\n    [iTutorialSteps.HacknetNodesGoToWorldPage]: false,\n    [iTutorialSteps.WorldDescription]: false,\n    [iTutorialSteps.TutorialPageInfo]: false,\n    [iTutorialSteps.End]: false,\n  },\n};\n\nfunction iTutorialStart(): void {\n  ITutorial.isRunning = true;\n}\n\n// Go to the next step and evaluate it\nfunction iTutorialNextStep(): void {\n  ITutorial.stepIsDone[ITutorial.currStep] = true;\n  if (ITutorial.currStep < iTutorialSteps.End) {\n    ITutorial.currStep += 1;\n  }\n  if (ITutorial.currStep === iTutorialSteps.End) iTutorialEnd();\n  ITutorialEvents.emit();\n}\n\n// Go to previous step and evaluate\nfunction iTutorialPrevStep(): void {\n  if (ITutorial.currStep > iTutorialSteps.Start) {\n    ITutorial.currStep -= 1;\n  }\n  ITutorialEvents.emit();\n}\n\nfunction iTutorialEnd(): void {\n  ITutorial.isRunning = false;\n\n  Player.getHomeComputer().messages.push(LiteratureNames.HackersStartingHandbook);\n  ITutorialEvents.emit();\n}\n\nexport { iTutorialSteps, iTutorialEnd, iTutorialStart, iTutorialNextStep, ITutorial, iTutorialPrevStep };\n","const CyclesPerMarketCycle = 50;\nconst AllCorporationStates = [\"START\", \"PURCHASE\", \"PRODUCTION\", \"SALE\", \"EXPORT\"];\nexport const CorporationConstants: {\n  INITIALSHARES: number;\n  SHARESPERPRICEUPDATE: number;\n  IssueNewSharesCooldown: number;\n  SellSharesCooldown: number;\n  CyclesPerMarketCycle: number;\n  CyclesPerIndustryStateCycle: number;\n  SecsPerMarketCycle: number;\n  Cities: string[];\n  WarehouseInitialCost: number;\n  WarehouseInitialSize: number;\n  WarehouseUpgradeBaseCost: number;\n  OfficeInitialCost: number;\n  OfficeInitialSize: number;\n  OfficeUpgradeBaseCost: number;\n  BribeThreshold: number;\n  BribeToRepRatio: number;\n  ProductProductionCostRatio: number;\n  DividendMaxPercentage: number;\n  EmployeeSalaryMultiplier: number;\n  CyclesPerEmployeeRaise: number;\n  EmployeeRaiseAmount: number;\n  BaseMaxProducts: number;\n  AllCorporationStates: string[];\n  AllMaterials: string[];\n} = {\n  INITIALSHARES: 1e9, //Total number of shares you have at your company\n  SHARESPERPRICEUPDATE: 1e6, //When selling large number of shares, price is dynamically updated for every batch of this amount\n  IssueNewSharesCooldown: 216e3, // 12 Hour in terms of game cycles\n  SellSharesCooldown: 18e3, // 1 Hour in terms of game cycles\n\n  CyclesPerMarketCycle: CyclesPerMarketCycle,\n  CyclesPerIndustryStateCycle: CyclesPerMarketCycle / AllCorporationStates.length,\n  SecsPerMarketCycle: CyclesPerMarketCycle / 5,\n\n  Cities: [\"Aevum\", \"Chongqing\", \"Sector-12\", \"New Tokyo\", \"Ishima\", \"Volhaven\"],\n\n  WarehouseInitialCost: 5e9, //Initial purchase cost of warehouse\n  WarehouseInitialSize: 100,\n  WarehouseUpgradeBaseCost: 1e9,\n\n  OfficeInitialCost: 4e9,\n  OfficeInitialSize: 3,\n  OfficeUpgradeBaseCost: 1e9,\n\n  BribeThreshold: 100e12, //Money needed to be able to bribe for faction rep\n  BribeToRepRatio: 1e9, //Bribe Value divided by this = rep gain\n\n  ProductProductionCostRatio: 5, //Ratio of material cost of a product to its production cost\n\n  DividendMaxPercentage: 0.5,\n\n  EmployeeSalaryMultiplier: 3, // Employee stats multiplied by this to determine initial salary\n  CyclesPerEmployeeRaise: 400, // All employees get a raise every X market cycles\n  EmployeeRaiseAmount: 50, // Employee salary increases by this (additive)\n\n  BaseMaxProducts: 3, // Initial value for maximum number of products allowed\n  AllCorporationStates: AllCorporationStates,\n  AllMaterials: [\n    \"Water\",\n    \"Energy\",\n    \"Food\",\n    \"Plants\",\n    \"Metal\",\n    \"Hardware\",\n    \"Chemicals\",\n    \"Drugs\",\n    \"Robots\",\n    \"AI Cores\",\n    \"Real Estate\",\n  ],\n};\n","import React from \"react\";\nimport { TableCell as MuiTableCell, TableCellProps, Table as MuiTable, TableProps } from \"@mui/material\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst useStyles = makeStyles({\n  root: {\n    borderBottom: \"none\",\n  },\n  small: {\n    width: \"1px\",\n  },\n});\n\nexport const TableCell: React.FC<TableCellProps> = (props: TableCellProps) => {\n  return (\n    <MuiTableCell\n      {...props}\n      classes={{\n        root: useStyles().root,\n        ...props.classes,\n      }}\n    />\n  );\n};\n\nexport const Table: React.FC<TableProps> = (props: TableProps) => {\n  return (\n    <MuiTable\n      {...props}\n      classes={{\n        root: useStyles().small,\n        ...props.classes,\n      }}\n    />\n  );\n};\n","import React, { useContext } from \"react\";\nimport { ICorporation } from \"../ICorporation\";\nimport { IIndustry } from \"../IIndustry\";\n\nexport const Context: {\n  Corporation: React.Context<ICorporation>;\n  Division: React.Context<IIndustry>;\n} = {\n  Corporation: React.createContext<ICorporation>({} as ICorporation),\n  Division: React.createContext<IIndustry>({} as IIndustry),\n};\n\nexport const useCorporation = () => useContext(Context.Corporation);\nexport const useDivision = () => useContext(Context.Division);\n","import React from \"react\";\nimport { Theme } from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport M from \"@mui/material/Modal\";\nimport Fade from \"@mui/material/Fade\";\nimport Box from \"@mui/material/Box\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    modal: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    paper: {\n      backgroundColor: theme.palette.background.default,\n      border: \"2px solid \" + theme.palette.primary.main,\n      boxShadow: `0px 3px 5px -1px ${theme.palette.primary.dark},0px 5px 8px 0px ${theme.palette.primary.dark},0px 1px 14px 0px ${theme.palette.primary.dark}`,\n      padding: 2,\n      maxWidth: \"80%\",\n      maxHeight: \"80%\",\n      overflow: \"auto\",\n      \"&::-webkit-scrollbar\": {\n        // webkit\n        display: \"none\",\n      },\n      scrollbarWidth: \"none\", // firefox\n    },\n  }),\n);\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n}\n\nexport const Modal = (props: IProps): React.ReactElement => {\n  const classes = useStyles();\n  return (\n    <M\n      disableRestoreFocus\n      disableScrollLock\n      disableEnforceFocus\n      disableAutoFocus\n      open={props.open}\n      onClose={props.onClose}\n      closeAfterTransition\n      className={classes.modal}\n    >\n      <Fade in={props.open}>\n        <div className={classes.paper}>\n          <Box sx={{ m: 2 }}>{props.children}</Box>\n        </div>\n      </Fade>\n    </M>\n  );\n};\n","import { AllServers, createUniqueRandomIp, ipExists } from \"./AllServers\";\nimport { Server, IConstructorParams } from \"./Server\";\nimport { BaseServer } from \"./BaseServer\";\nimport { calculateServerGrowth } from \"./formulas/grow\";\n\nimport { BitNodeMultipliers } from \"../BitNode/BitNodeMultipliers\";\nimport { CONSTANTS } from \"../Constants\";\nimport { HacknetServer } from \"../Hacknet/HacknetServer\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { Programs } from \"../Programs/Programs\";\nimport { LiteratureNames } from \"../Literature/data/LiteratureNames\";\n\nimport { isValidNumber } from \"../utils/helpers/isValidNumber\";\nimport { isValidIPAddress } from \"../utils/helpers/isValidIPAddress\";\n\n/**\n * Constructs a new server, while also ensuring that the new server\n * does not have a duplicate hostname/ip.\n */\nexport function safetlyCreateUniqueServer(params: IConstructorParams): Server {\n  if (params.ip != null && ipExists(params.ip)) {\n    params.ip = createUniqueRandomIp();\n  }\n\n  if (GetServerByHostname(params.hostname) != null) {\n    // Use a for loop to ensure that we don't get suck in an infinite loop somehow\n    let hostname: string = params.hostname;\n    for (let i = 0; i < 200; ++i) {\n      hostname = `${params.hostname}-${i}`;\n      if (GetServerByHostname(hostname) == null) {\n        break;\n      }\n    }\n    params.hostname = hostname;\n  }\n\n  return new Server(params);\n}\n\n/**\n * Returns the number of \"growth cycles\" needed to grow the specified server by the\n * specified amount.\n * @param server - Server being grown\n * @param growth - How much the server is being grown by, in DECIMAL form (e.g. 1.5 rather than 50)\n * @param p - Reference to Player object\n * @returns Number of \"growth cycles\" needed\n */\nexport function numCycleForGrowth(server: Server, growth: number, p: IPlayer): number {\n  let ajdGrowthRate = 1 + (CONSTANTS.ServerBaseGrowthRate - 1) / server.hackDifficulty;\n  if (ajdGrowthRate > CONSTANTS.ServerMaxGrowthRate) {\n    ajdGrowthRate = CONSTANTS.ServerMaxGrowthRate;\n  }\n\n  const serverGrowthPercentage = server.serverGrowth / 100;\n\n  const cycles =\n    Math.log(growth) /\n    (Math.log(ajdGrowthRate) * p.hacking_grow_mult * serverGrowthPercentage * BitNodeMultipliers.ServerGrowthRate);\n\n  return cycles;\n}\n\n//Applied server growth for a single server. Returns the percentage growth\nexport function processSingleServerGrowth(server: Server, threads: number, p: IPlayer, cores = 1): number {\n  let serverGrowth = calculateServerGrowth(server, threads, p, cores);\n  if (serverGrowth < 1) {\n    console.warn(\"serverGrowth calculated to be less than 1\");\n    serverGrowth = 1;\n  }\n\n  const oldMoneyAvailable = server.moneyAvailable;\n  server.moneyAvailable *= serverGrowth;\n\n  // in case of data corruption\n  if (isValidNumber(server.moneyMax) && isNaN(server.moneyAvailable)) {\n    server.moneyAvailable = server.moneyMax;\n  }\n\n  // cap at max\n  if (isValidNumber(server.moneyMax) && server.moneyAvailable > server.moneyMax) {\n    server.moneyAvailable = server.moneyMax;\n  }\n\n  // if there was any growth at all, increase security\n  if (oldMoneyAvailable !== server.moneyAvailable) {\n    //Growing increases server security twice as much as hacking\n    let usedCycles = numCycleForGrowth(server, server.moneyAvailable / oldMoneyAvailable, p);\n    usedCycles = Math.max(0, usedCycles);\n    server.fortify(2 * CONSTANTS.ServerFortifyAmount * Math.ceil(usedCycles));\n  }\n  return server.moneyAvailable / oldMoneyAvailable;\n}\n\nexport function prestigeHomeComputer(homeComp: Server): void {\n  const hasBitflume = homeComp.programs.includes(Programs.BitFlume.name);\n\n  homeComp.programs.length = 0; //Remove programs\n  homeComp.runningScripts = [];\n  homeComp.serversOnNetwork = [];\n  homeComp.isConnectedTo = true;\n  homeComp.ramUsed = 0;\n  homeComp.programs.push(Programs.NukeProgram.name);\n  if (hasBitflume) {\n    homeComp.programs.push(Programs.BitFlume.name);\n  }\n\n  //Update RAM usage on all scripts\n  homeComp.scripts.forEach(function (script) {\n    script.updateRamUsage(homeComp.scripts);\n  });\n\n  homeComp.messages.length = 0; //Remove .lit and .msg files\n  homeComp.messages.push(LiteratureNames.HackersStartingHandbook);\n}\n\n//Returns server object with corresponding hostname\n//    Relatively slow, would rather not use this a lot\nexport function GetServerByHostname(hostname: string): Server | HacknetServer | null {\n  for (const ip in AllServers) {\n    if (AllServers.hasOwnProperty(ip)) {\n      if (AllServers[ip].hostname == hostname) {\n        return AllServers[ip];\n      }\n    }\n  }\n\n  return null;\n}\n\n//Get server by IP or hostname. Returns null if invalid\nexport function getServer(s: string): Server | HacknetServer | null {\n  if (!isValidIPAddress(s)) {\n    return GetServerByHostname(s);\n  }\n  if (AllServers[s] !== undefined) {\n    return AllServers[s];\n  }\n\n  return null;\n}\n\n// Returns the i-th server on the specified server's network\n// A Server's serverOnNetwork property holds only the IPs. This function returns\n// the actual Server object\nexport function getServerOnNetwork(server: BaseServer, i: number): Server | HacknetServer | null {\n  if (i > server.serversOnNetwork.length) {\n    console.error(\"Tried to get server on network that was out of range\");\n    return null;\n  }\n\n  return AllServers[server.serversOnNetwork[i]];\n}\n\nexport function isBackdoorInstalled(server: Server | HacknetServer): boolean {\n  if (\"backdoorInstalled\" in server) {\n    return server.backdoorInstalled;\n  }\n  return false;\n}\n","import { IPlayer } from \"../IPlayer\";\nimport { Augmentations } from \"../../Augmentation/Augmentations\";\nimport { applyAugmentation } from \"../../Augmentation/AugmentationHelpers\";\nimport { PlayerOwnedAugmentation } from \"../../Augmentation/PlayerOwnedAugmentation\";\nimport { AugmentationNames } from \"../../Augmentation/data/AugmentationNames\";\nimport { BitNodeMultipliers } from \"../../BitNode/BitNodeMultipliers\";\nimport { CodingContractRewardType, ICodingContractReward } from \"../../CodingContracts\";\nimport { Company } from \"../../Company/Company\";\nimport { Companies } from \"../../Company/Companies\";\nimport { getNextCompanyPositionHelper } from \"../../Company/GetNextCompanyPosition\";\nimport { getJobRequirementText } from \"../../Company/GetJobRequirementText\";\nimport { CompanyPositions } from \"../../Company/CompanyPositions\";\nimport { CompanyPosition } from \"../../Company/CompanyPosition\";\nimport * as posNames from \"../../Company/data/companypositionnames\";\nimport { CONSTANTS } from \"../../Constants\";\nimport { Programs } from \"../../Programs/Programs\";\nimport { determineCrimeSuccess } from \"../../Crime/CrimeHelpers\";\nimport { Crimes } from \"../../Crime/Crimes\";\nimport { Exploit } from \"../../Exploits/Exploit\";\nimport { Faction } from \"../../Faction/Faction\";\nimport { Factions } from \"../../Faction/Factions\";\nimport { resetGangs } from \"../../Gang/AllGangs\";\nimport { Cities } from \"../../Locations/Cities\";\nimport { Locations } from \"../../Locations/Locations\";\nimport { CityName } from \"../../Locations/data/CityNames\";\nimport { LocationName } from \"../../Locations/data/LocationNames\";\nimport { Sleeve } from \"../../PersonObjects/Sleeve/Sleeve\";\nimport { calculateSkill as calculateSkillF } from \"../formulas/skill\";\nimport { calculateIntelligenceBonus } from \"../formulas/intelligence\";\nimport {\n  getHackingWorkRepGain,\n  getFactionSecurityWorkRepGain,\n  getFactionFieldWorkRepGain,\n} from \"../formulas/reputation\";\nimport { AllServers, AddToAllServers, createUniqueRandomIp } from \"../../Server/AllServers\";\nimport { Server } from \"../../Server/Server\";\nimport { safetlyCreateUniqueServer } from \"../../Server/ServerHelpers\";\nimport { Settings } from \"../../Settings/Settings\";\nimport { SpecialServerIps, SpecialServerNames } from \"../../Server/SpecialServerIps\";\nimport { applySourceFile } from \"../../SourceFile/applySourceFile\";\nimport { applyExploit } from \"../../Exploits/applyExploits\";\nimport { SourceFiles } from \"../../SourceFile/SourceFiles\";\nimport { SourceFileFlags } from \"../../SourceFile/SourceFileFlags\";\nimport { influenceStockThroughCompanyWork } from \"../../StockMarket/PlayerInfluencing\";\nimport { getHospitalizationCost } from \"../../Hospital/Hospital\";\nimport { WorkerScript } from \"../../Netscript/WorkerScript\";\n\nimport Decimal from \"decimal.js\";\n\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { IRouter } from \"../../ui/Router\";\nimport { MoneySourceTracker } from \"../../utils/MoneySourceTracker\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { convertTimeMsToTimeElapsedString } from \"../../utils/StringHelperFunctions\";\n\nimport { Reputation } from \"../../ui/React/Reputation\";\nimport { Money } from \"../../ui/React/Money\";\n\nimport React from \"react\";\n\nexport function init(this: IPlayer): void {\n  /* Initialize Player's home computer */\n  const t_homeComp = safetlyCreateUniqueServer({\n    adminRights: true,\n    hostname: \"home\",\n    ip: createUniqueRandomIp(),\n    isConnectedTo: true,\n    maxRam: 8,\n    organizationName: \"Home PC\",\n    purchasedByPlayer: true,\n  });\n  this.homeComputer = t_homeComp.ip;\n  this.currentServer = t_homeComp.ip;\n  AddToAllServers(t_homeComp);\n\n  this.getHomeComputer().programs.push(Programs.NukeProgram.name);\n}\n\nexport function prestigeAugmentation(this: IPlayer): void {\n  const homeComp = this.getHomeComputer();\n  this.currentServer = homeComp.ip;\n  this.homeComputer = homeComp.ip;\n\n  this.numPeopleKilled = 0;\n  this.karma = 0;\n\n  //Reset stats\n  this.hacking_skill = 1;\n\n  this.strength = 1;\n  this.defense = 1;\n  this.dexterity = 1;\n  this.agility = 1;\n\n  this.charisma = 1;\n\n  this.hacking_exp = 0;\n  this.strength_exp = 0;\n  this.defense_exp = 0;\n  this.dexterity_exp = 0;\n  this.agility_exp = 0;\n  this.charisma_exp = 0;\n\n  this.money = new Decimal(1000);\n\n  this.city = CityName.Sector12;\n  this.location = LocationName.TravelAgency;\n\n  this.companyName = \"\";\n  this.jobs = {};\n\n  this.purchasedServers = [];\n\n  this.factions = [];\n  this.factionInvitations = [];\n\n  this.queuedAugmentations = [];\n\n  this.resleeves = [];\n\n  const numSleeves = Math.min(3, SourceFileFlags[10] + (this.bitNodeN === 10 ? 1 : 0)) + this.sleevesFromCovenant;\n  if (this.sleeves.length > numSleeves) this.sleeves.length = numSleeves;\n  for (let i = this.sleeves.length; i < numSleeves; i++) {\n    this.sleeves.push(new Sleeve(this));\n  }\n\n  for (let i = 0; i < this.sleeves.length; ++i) {\n    if (this.sleeves[i] instanceof Sleeve) {\n      if (this.sleeves[i].shock >= 100) {\n        this.sleeves[i].synchronize(this);\n      } else {\n        this.sleeves[i].shockRecovery(this);\n      }\n    }\n  }\n\n  this.isWorking = false;\n  this.currentWorkFactionName = \"\";\n  this.currentWorkFactionDescription = \"\";\n  this.createProgramName = \"\";\n  this.className = \"\";\n  this.crimeType = \"\";\n\n  this.workHackExpGainRate = 0;\n  this.workStrExpGainRate = 0;\n  this.workDefExpGainRate = 0;\n  this.workDexExpGainRate = 0;\n  this.workAgiExpGainRate = 0;\n  this.workChaExpGainRate = 0;\n  this.workRepGainRate = 0;\n  this.workMoneyGainRate = 0;\n\n  this.workHackExpGained = 0;\n  this.workStrExpGained = 0;\n  this.workDefExpGained = 0;\n  this.workDexExpGained = 0;\n  this.workAgiExpGained = 0;\n  this.workChaExpGained = 0;\n  this.workRepGained = 0;\n  this.workMoneyGained = 0;\n\n  this.timeWorked = 0;\n\n  this.lastUpdate = new Date().getTime();\n\n  // Statistics Trackers\n  this.playtimeSinceLastAug = 0;\n  this.scriptProdSinceLastAug = 0;\n  this.moneySourceA.reset();\n\n  this.hacknetNodes.length = 0;\n  this.hashManager.prestige();\n\n  // Reapply augs, re-calculate skills and reset HP\n  this.reapplyAllAugmentations(true);\n  this.hp = this.max_hp;\n}\n\nexport function prestigeSourceFile(this: IPlayer): void {\n  this.prestigeAugmentation();\n  // Duplicate sleeves are reset to level 1 every Bit Node (but the number of sleeves you have persists)\n  for (let i = 0; i < this.sleeves.length; ++i) {\n    if (this.sleeves[i] instanceof Sleeve) {\n      this.sleeves[i].prestige(this);\n    } else {\n      this.sleeves[i] = new Sleeve(this);\n    }\n  }\n\n  if (this.bitNodeN === 10) {\n    for (let i = 0; i < this.sleeves.length; i++) {\n      this.sleeves[i].shock = Math.max(25, this.sleeves[i].shock);\n      this.sleeves[i].sync = Math.max(25, this.sleeves[i].sync);\n    }\n  }\n\n  this.timeWorked = 0;\n\n  // Gang\n  this.gang = null;\n  resetGangs();\n\n  // Reset Stock market\n  this.hasWseAccount = false;\n  this.hasTixApiAccess = false;\n  this.has4SData = false;\n  this.has4SDataTixApi = false;\n\n  // BitNode 3: Corporatocracy\n  this.corporation = null;\n\n  this.moneySourceB.reset();\n  this.playtimeSinceLastBitnode = 0;\n  this.augmentations = [];\n}\n\nexport function receiveInvite(this: IPlayer, factionName: string): void {\n  if (this.factionInvitations.includes(factionName) || this.factions.includes(factionName)) {\n    return;\n  }\n  this.factionInvitations.push(factionName);\n}\n\n//Calculates skill level based on experience. The same formula will be used for every skill\nexport function calculateSkill(this: IPlayer, exp: number, mult = 1): number {\n  return calculateSkillF(exp, mult);\n}\n\nexport function updateSkillLevels(this: IPlayer): void {\n  this.hacking_skill = Math.max(\n    1,\n    Math.floor(this.calculateSkill(this.hacking_exp, this.hacking_mult * BitNodeMultipliers.HackingLevelMultiplier)),\n  );\n  this.strength = Math.max(\n    1,\n    Math.floor(this.calculateSkill(this.strength_exp, this.strength_mult * BitNodeMultipliers.StrengthLevelMultiplier)),\n  );\n  this.defense = Math.max(\n    1,\n    Math.floor(this.calculateSkill(this.defense_exp, this.defense_mult * BitNodeMultipliers.DefenseLevelMultiplier)),\n  );\n  this.dexterity = Math.max(\n    1,\n    Math.floor(\n      this.calculateSkill(this.dexterity_exp, this.dexterity_mult * BitNodeMultipliers.DexterityLevelMultiplier),\n    ),\n  );\n  this.agility = Math.max(\n    1,\n    Math.floor(this.calculateSkill(this.agility_exp, this.agility_mult * BitNodeMultipliers.AgilityLevelMultiplier)),\n  );\n  this.charisma = Math.max(\n    1,\n    Math.floor(this.calculateSkill(this.charisma_exp, this.charisma_mult * BitNodeMultipliers.CharismaLevelMultiplier)),\n  );\n\n  if (this.intelligence > 0) {\n    this.intelligence = Math.floor(this.calculateSkill(this.intelligence_exp));\n  } else {\n    this.intelligence = 0;\n  }\n\n  const ratio = this.hp / this.max_hp;\n  this.max_hp = Math.floor(10 + this.defense / 10);\n  this.hp = Math.round(this.max_hp * ratio);\n}\n\nexport function resetMultipliers(this: IPlayer): void {\n  this.hacking_chance_mult = 1;\n  this.hacking_speed_mult = 1;\n  this.hacking_money_mult = 1;\n  this.hacking_grow_mult = 1;\n\n  this.hacking_mult = 1;\n  this.strength_mult = 1;\n  this.defense_mult = 1;\n  this.dexterity_mult = 1;\n  this.agility_mult = 1;\n  this.charisma_mult = 1;\n\n  this.hacking_exp_mult = 1;\n  this.strength_exp_mult = 1;\n  this.defense_exp_mult = 1;\n  this.dexterity_exp_mult = 1;\n  this.agility_exp_mult = 1;\n  this.charisma_exp_mult = 1;\n\n  this.company_rep_mult = 1;\n  this.faction_rep_mult = 1;\n\n  this.crime_money_mult = 1;\n  this.crime_success_mult = 1;\n\n  this.hacknet_node_money_mult = 1;\n  this.hacknet_node_purchase_cost_mult = 1;\n  this.hacknet_node_ram_cost_mult = 1;\n  this.hacknet_node_core_cost_mult = 1;\n  this.hacknet_node_level_cost_mult = 1;\n\n  this.work_money_mult = 1;\n\n  this.bladeburner_max_stamina_mult = 1;\n  this.bladeburner_stamina_gain_mult = 1;\n  this.bladeburner_analysis_mult = 1;\n  this.bladeburner_success_chance_mult = 1;\n}\n\nexport function hasProgram(this: IPlayer, programName: string): boolean {\n  const home = this.getHomeComputer();\n  if (home == null) {\n    return false;\n  }\n\n  for (let i = 0; i < home.programs.length; ++i) {\n    if (programName.toLowerCase() == home.programs[i].toLowerCase()) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function setMoney(this: IPlayer, money: number): void {\n  if (isNaN(money)) {\n    console.error(\"NaN passed into Player.setMoney()\");\n    return;\n  }\n  this.money = new Decimal(money);\n}\n\nexport function gainMoney(this: IPlayer, money: number): void {\n  if (isNaN(money)) {\n    console.error(\"NaN passed into Player.gainMoney()\");\n    return;\n  }\n  this.money = this.money.plus(money);\n}\n\nexport function loseMoney(this: IPlayer, money: number): void {\n  if (isNaN(money)) {\n    console.error(\"NaN passed into Player.loseMoney()\");\n    return;\n  }\n  if (this.money.eq(Infinity) && money === Infinity) return;\n  this.money = this.money.minus(money);\n}\n\nexport function canAfford(this: IPlayer, cost: number): boolean {\n  if (isNaN(cost)) {\n    console.error(`NaN passed into Player.canAfford()`);\n    return false;\n  }\n  return this.money.gte(cost);\n}\n\nexport function recordMoneySource(this: IPlayer, amt: number, source: string): void {\n  if (!(this.moneySourceA instanceof MoneySourceTracker)) {\n    console.warn(`Player.moneySourceA was not properly initialized. Resetting`);\n    this.moneySourceA = new MoneySourceTracker();\n  }\n  if (!(this.moneySourceB instanceof MoneySourceTracker)) {\n    console.warn(`Player.moneySourceB was not properly initialized. Resetting`);\n    this.moneySourceB = new MoneySourceTracker();\n  }\n  this.moneySourceA.record(amt, source);\n  this.moneySourceB.record(amt, source);\n}\n\nexport function gainHackingExp(this: IPlayer, exp: number): void {\n  if (isNaN(exp)) {\n    console.error(\"ERR: NaN passed into Player.gainHackingExp()\");\n    return;\n  }\n  this.hacking_exp += exp;\n  if (this.hacking_exp < 0) {\n    this.hacking_exp = 0;\n  }\n\n  this.hacking_skill = calculateSkillF(this.hacking_exp, this.hacking_mult * BitNodeMultipliers.HackingLevelMultiplier);\n}\n\nexport function gainStrengthExp(this: IPlayer, exp: number): void {\n  if (isNaN(exp)) {\n    console.error(\"ERR: NaN passed into Player.gainStrengthExp()\");\n    return;\n  }\n  this.strength_exp += exp;\n  if (this.strength_exp < 0) {\n    this.strength_exp = 0;\n  }\n\n  this.strength = calculateSkillF(this.strength_exp, this.strength_mult * BitNodeMultipliers.StrengthLevelMultiplier);\n}\n\nexport function gainDefenseExp(this: IPlayer, exp: number): void {\n  if (isNaN(exp)) {\n    console.error(\"ERR: NaN passed into player.gainDefenseExp()\");\n    return;\n  }\n  this.defense_exp += exp;\n  if (this.defense_exp < 0) {\n    this.defense_exp = 0;\n  }\n\n  this.defense = calculateSkillF(this.defense_exp, this.defense_mult * BitNodeMultipliers.DefenseLevelMultiplier);\n}\n\nexport function gainDexterityExp(this: IPlayer, exp: number): void {\n  if (isNaN(exp)) {\n    console.error(\"ERR: NaN passed into Player.gainDexterityExp()\");\n    return;\n  }\n  this.dexterity_exp += exp;\n  if (this.dexterity_exp < 0) {\n    this.dexterity_exp = 0;\n  }\n\n  this.dexterity = calculateSkillF(\n    this.dexterity_exp,\n    this.dexterity_mult * BitNodeMultipliers.DexterityLevelMultiplier,\n  );\n}\n\nexport function gainAgilityExp(this: IPlayer, exp: number): void {\n  if (isNaN(exp)) {\n    console.error(\"ERR: NaN passed into Player.gainAgilityExp()\");\n    return;\n  }\n  this.agility_exp += exp;\n  if (this.agility_exp < 0) {\n    this.agility_exp = 0;\n  }\n\n  this.agility = calculateSkillF(this.agility_exp, this.agility_mult * BitNodeMultipliers.AgilityLevelMultiplier);\n}\n\nexport function gainCharismaExp(this: IPlayer, exp: number): void {\n  if (isNaN(exp)) {\n    console.error(\"ERR: NaN passed into Player.gainCharismaExp()\");\n    return;\n  }\n  this.charisma_exp += exp;\n  if (this.charisma_exp < 0) {\n    this.charisma_exp = 0;\n  }\n\n  this.charisma = calculateSkillF(this.charisma_exp, this.charisma_mult * BitNodeMultipliers.CharismaLevelMultiplier);\n}\n\nexport function gainIntelligenceExp(this: IPlayer, exp: number): void {\n  if (isNaN(exp)) {\n    console.error(\"ERROR: NaN passed into Player.gainIntelligenceExp()\");\n    return;\n  }\n  if (SourceFileFlags[5] > 0 || this.intelligence > 0) {\n    this.intelligence_exp += exp;\n  }\n}\n\n//Given a string expression like \"str\" or \"strength\", returns the given stat\nexport function queryStatFromString(this: IPlayer, str: string): number {\n  const tempStr = str.toLowerCase();\n  if (tempStr.includes(\"hack\")) {\n    return this.hacking_skill;\n  }\n  if (tempStr.includes(\"str\")) {\n    return this.strength;\n  }\n  if (tempStr.includes(\"def\")) {\n    return this.defense;\n  }\n  if (tempStr.includes(\"dex\")) {\n    return this.dexterity;\n  }\n  if (tempStr.includes(\"agi\")) {\n    return this.agility;\n  }\n  if (tempStr.includes(\"cha\")) {\n    return this.charisma;\n  }\n  if (tempStr.includes(\"int\")) {\n    return this.intelligence;\n  }\n  return 0;\n}\n\n/******* Working functions *******/\nexport function resetWorkStatus(this: IPlayer, generalType?: string, group?: string, workType?: string): void {\n  if (this.workType !== CONSTANTS.WorkTypeFaction && generalType === this.workType && group === this.companyName)\n    return;\n  if (generalType === this.workType && group === this.currentWorkFactionName && workType === this.factionWorkType)\n    return;\n  if (this.isWorking) this.singularityStopWork();\n  this.workHackExpGainRate = 0;\n  this.workStrExpGainRate = 0;\n  this.workDefExpGainRate = 0;\n  this.workDexExpGainRate = 0;\n  this.workAgiExpGainRate = 0;\n  this.workChaExpGainRate = 0;\n  this.workRepGainRate = 0;\n  this.workMoneyGainRate = 0;\n  this.workMoneyLossRate = 0;\n\n  this.workHackExpGained = 0;\n  this.workStrExpGained = 0;\n  this.workDefExpGained = 0;\n  this.workDexExpGained = 0;\n  this.workAgiExpGained = 0;\n  this.workChaExpGained = 0;\n  this.workRepGained = 0;\n  this.workMoneyGained = 0;\n\n  this.timeWorked = 0;\n  this.timeWorkedCreateProgram = 0;\n\n  this.currentWorkFactionName = \"\";\n  this.currentWorkFactionDescription = \"\";\n  this.createProgramName = \"\";\n  this.className = \"\";\n}\n\nexport function processWorkEarnings(this: IPlayer, numCycles = 1): void {\n  let focusBonus = 1;\n  if (!this.hasAugmentation(AugmentationNames[\"NeuroreceptorManager\"])) {\n    focusBonus = this.focus ? 1 : CONSTANTS.BaseFocusBonus;\n  }\n  const hackExpGain = focusBonus * this.workHackExpGainRate * numCycles;\n  const strExpGain = focusBonus * this.workStrExpGainRate * numCycles;\n  const defExpGain = focusBonus * this.workDefExpGainRate * numCycles;\n  const dexExpGain = focusBonus * this.workDexExpGainRate * numCycles;\n  const agiExpGain = focusBonus * this.workAgiExpGainRate * numCycles;\n  const chaExpGain = focusBonus * this.workChaExpGainRate * numCycles;\n  const moneyGain = (this.workMoneyGainRate - this.workMoneyLossRate) * numCycles;\n\n  this.gainHackingExp(hackExpGain);\n  this.gainStrengthExp(strExpGain);\n  this.gainDefenseExp(defExpGain);\n  this.gainDexterityExp(dexExpGain);\n  this.gainAgilityExp(agiExpGain);\n  this.gainCharismaExp(chaExpGain);\n  this.gainMoney(moneyGain);\n  if (this.className) {\n    this.recordMoneySource(moneyGain, \"class\");\n  } else {\n    this.recordMoneySource(moneyGain, \"work\");\n  }\n  this.workHackExpGained += hackExpGain;\n  this.workStrExpGained += strExpGain;\n  this.workDefExpGained += defExpGain;\n  this.workDexExpGained += dexExpGain;\n  this.workAgiExpGained += agiExpGain;\n  this.workChaExpGained += chaExpGain;\n  this.workRepGained += focusBonus * this.workRepGainRate * numCycles;\n  this.workMoneyGained += focusBonus * this.workMoneyGainRate * numCycles;\n  this.workMoneyGained -= focusBonus * this.workMoneyLossRate * numCycles;\n}\n\n/* Working for Company */\nexport function startWork(this: IPlayer, router: IRouter, companyName: string): void {\n  this.resetWorkStatus(CONSTANTS.WorkTypeCompany, companyName);\n  this.isWorking = true;\n  this.focus = true;\n  this.companyName = companyName;\n  this.workType = CONSTANTS.WorkTypeCompany;\n\n  this.workHackExpGainRate = this.getWorkHackExpGain();\n  this.workStrExpGainRate = this.getWorkStrExpGain();\n  this.workDefExpGainRate = this.getWorkDefExpGain();\n  this.workDexExpGainRate = this.getWorkDexExpGain();\n  this.workAgiExpGainRate = this.getWorkAgiExpGain();\n  this.workChaExpGainRate = this.getWorkChaExpGain();\n  this.workRepGainRate = this.getWorkRepGain();\n  this.workMoneyGainRate = this.getWorkMoneyGain();\n\n  this.timeNeededToCompleteWork = CONSTANTS.MillisecondsPer8Hours;\n  router.toWork();\n}\n\nexport function cancelationPenalty(this: IPlayer): number {\n  const specialIp = SpecialServerIps[this.companyName];\n  if (typeof specialIp === \"string\" && specialIp !== \"\") {\n    const server = AllServers[specialIp];\n    if (server instanceof Server) {\n      if (server && server.backdoorInstalled) return 0.75;\n    }\n  }\n  return 0.5;\n}\n\nexport function work(this: IPlayer, numCycles: number): boolean {\n  // Cap the number of cycles being processed to whatever would put you at\n  // the work time limit (8 hours)\n  let overMax = false;\n  if (this.timeWorked + CONSTANTS._idleSpeed * numCycles >= CONSTANTS.MillisecondsPer8Hours) {\n    overMax = true;\n    numCycles = Math.round((CONSTANTS.MillisecondsPer8Hours - this.timeWorked) / CONSTANTS._idleSpeed);\n  }\n  this.timeWorked += CONSTANTS._idleSpeed * numCycles;\n\n  this.workRepGainRate = this.getWorkRepGain();\n  this.processWorkEarnings(numCycles);\n\n  const comp = Companies[this.companyName];\n  influenceStockThroughCompanyWork(comp, this.workRepGainRate, numCycles);\n\n  // If timeWorked == 8 hours, then finish. You can only gain 8 hours worth of exp and money\n  if (overMax || this.timeWorked >= CONSTANTS.MillisecondsPer8Hours) {\n    this.finishWork(false);\n    return true;\n  }\n  return false;\n}\n\nexport function finishWork(this: IPlayer, cancelled: boolean, sing = false): string {\n  //Since the work was cancelled early, player only gains half of what they've earned so far\n  if (cancelled) {\n    this.workRepGained *= this.cancelationPenalty();\n  }\n\n  const company = Companies[this.companyName];\n  company.playerReputation += this.workRepGained;\n\n  this.updateSkillLevels();\n\n  let content = (\n    <>\n      You earned a total of: <br />\n      <Money money={this.workMoneyGained} />\n      <br />\n      <Reputation reputation={this.workRepGained} /> reputation for the company <br />\n      {numeralWrapper.formatExp(this.workHackExpGained)} hacking exp <br />\n      {numeralWrapper.formatExp(this.workStrExpGained)} strength exp <br />\n      {numeralWrapper.formatExp(this.workDefExpGained)} defense exp <br />\n      {numeralWrapper.formatExp(this.workDexExpGained)} dexterity exp <br />\n      {numeralWrapper.formatExp(this.workAgiExpGained)} agility exp <br />\n      {numeralWrapper.formatExp(this.workChaExpGained)} charisma exp\n      <br />\n    </>\n  );\n\n  if (cancelled) {\n    content = (\n      <>\n        You worked a short shift of {convertTimeMsToTimeElapsedString(this.timeWorked)} <br />\n        <br />\n        Since you cancelled your work early, you only gained half of the reputation you earned. <br />\n        <br />\n        {content}\n      </>\n    );\n  } else {\n    content = (\n      <>\n        You worked a full shift of 8 hours! <br />\n        <br />\n        {content}\n      </>\n    );\n  }\n  if (!sing) {\n    dialogBoxCreate(content);\n  }\n\n  this.isWorking = false;\n\n  this.resetWorkStatus();\n  if (sing) {\n    const res =\n      \"You worked a short shift of \" +\n      convertTimeMsToTimeElapsedString(this.timeWorked) +\n      \" and \" +\n      \"earned $\" +\n      numeralWrapper.formatMoney(this.workMoneyGained) +\n      \", \" +\n      numeralWrapper.formatReputation(this.workRepGained) +\n      \" reputation, \" +\n      numeralWrapper.formatExp(this.workHackExpGained) +\n      \" hacking exp, \" +\n      numeralWrapper.formatExp(this.workStrExpGained) +\n      \" strength exp, \" +\n      numeralWrapper.formatExp(this.workDefExpGained) +\n      \" defense exp, \" +\n      numeralWrapper.formatExp(this.workDexExpGained) +\n      \" dexterity exp, \" +\n      numeralWrapper.formatExp(this.workAgiExpGained) +\n      \" agility exp, and \" +\n      numeralWrapper.formatExp(this.workChaExpGained) +\n      \" charisma exp.\";\n\n    return res;\n  }\n\n  return \"\";\n}\n\nexport function startWorkPartTime(this: IPlayer, router: IRouter, companyName: string): void {\n  this.resetWorkStatus(CONSTANTS.WorkTypeCompanyPartTime, companyName);\n  this.isWorking = true;\n  this.focus = true;\n  this.companyName = companyName;\n  this.workType = CONSTANTS.WorkTypeCompanyPartTime;\n\n  this.workHackExpGainRate = this.getWorkHackExpGain();\n  this.workStrExpGainRate = this.getWorkStrExpGain();\n  this.workDefExpGainRate = this.getWorkDefExpGain();\n  this.workDexExpGainRate = this.getWorkDexExpGain();\n  this.workAgiExpGainRate = this.getWorkAgiExpGain();\n  this.workChaExpGainRate = this.getWorkChaExpGain();\n  this.workRepGainRate = this.getWorkRepGain();\n  this.workMoneyGainRate = this.getWorkMoneyGain();\n\n  this.timeNeededToCompleteWork = CONSTANTS.MillisecondsPer8Hours;\n  router.toWork();\n}\n\nexport function workPartTime(this: IPlayer, numCycles: number): boolean {\n  //Cap the number of cycles being processed to whatever would put you at the\n  //work time limit (8 hours)\n  let overMax = false;\n  if (this.timeWorked + CONSTANTS._idleSpeed * numCycles >= CONSTANTS.MillisecondsPer8Hours) {\n    overMax = true;\n    numCycles = Math.round((CONSTANTS.MillisecondsPer8Hours - this.timeWorked) / CONSTANTS._idleSpeed);\n  }\n  this.timeWorked += CONSTANTS._idleSpeed * numCycles;\n\n  this.workRepGainRate = this.getWorkRepGain();\n  this.processWorkEarnings(numCycles);\n\n  //If timeWorked == 8 hours, then finish. You can only gain 8 hours worth of exp and money\n  if (overMax || this.timeWorked >= CONSTANTS.MillisecondsPer8Hours) {\n    this.finishWorkPartTime();\n    return true;\n  }\n  return false;\n}\n\nexport function finishWorkPartTime(this: IPlayer, sing = false): string {\n  const company = Companies[this.companyName];\n  company.playerReputation += this.workRepGained;\n\n  this.updateSkillLevels();\n\n  const content = (\n    <>\n      You worked for {convertTimeMsToTimeElapsedString(this.timeWorked)}\n      <br />\n      <br />\n      You earned a total of: <br />\n      <Money money={this.workMoneyGained} />\n      <br />\n      <Reputation reputation={this.workRepGained} /> reputation for the company <br />\n      {numeralWrapper.formatExp(this.workHackExpGained)} hacking exp <br />\n      {numeralWrapper.formatExp(this.workStrExpGained)} strength exp <br />\n      {numeralWrapper.formatExp(this.workDefExpGained)} defense exp <br />\n      {numeralWrapper.formatExp(this.workDexExpGained)} dexterity exp <br />\n      {numeralWrapper.formatExp(this.workAgiExpGained)} agility exp <br />\n      {numeralWrapper.formatExp(this.workChaExpGained)} charisma exp\n      <br />\n    </>\n  );\n  if (!sing) {\n    dialogBoxCreate(content);\n  }\n\n  this.isWorking = false;\n  this.resetWorkStatus();\n\n  if (sing) {\n    const res =\n      \"You worked for \" +\n      convertTimeMsToTimeElapsedString(this.timeWorked) +\n      \" and \" +\n      \"earned a total of \" +\n      \"$\" +\n      numeralWrapper.formatMoney(this.workMoneyGained) +\n      \", \" +\n      numeralWrapper.formatReputation(this.workRepGained) +\n      \" reputation, \" +\n      numeralWrapper.formatExp(this.workHackExpGained) +\n      \" hacking exp, \" +\n      numeralWrapper.formatExp(this.workStrExpGained) +\n      \" strength exp, \" +\n      numeralWrapper.formatExp(this.workDefExpGained) +\n      \" defense exp, \" +\n      numeralWrapper.formatExp(this.workDexExpGained) +\n      \" dexterity exp, \" +\n      numeralWrapper.formatExp(this.workAgiExpGained) +\n      \" agility exp, and \" +\n      numeralWrapper.formatExp(this.workChaExpGained) +\n      \" charisma exp\";\n    return res;\n  }\n  return \"\";\n}\n\nexport function startFocusing(this: IPlayer): void {\n  this.focus = true;\n}\n\nexport function stopFocusing(this: IPlayer): void {\n  this.focus = false;\n}\n\n/* Working for Faction */\nexport function startFactionWork(this: IPlayer, router: IRouter, faction: Faction): void {\n  //Update reputation gain rate to account for faction favor\n  let favorMult = 1 + faction.favor / 100;\n  if (isNaN(favorMult)) {\n    favorMult = 1;\n  }\n  this.workRepGainRate *= favorMult;\n  this.workRepGainRate *= BitNodeMultipliers.FactionWorkRepGain;\n\n  this.isWorking = true;\n  this.focus = true;\n  this.workType = CONSTANTS.WorkTypeFaction;\n  this.currentWorkFactionName = faction.name;\n\n  this.timeNeededToCompleteWork = CONSTANTS.MillisecondsPer20Hours;\n  router.toWork();\n}\n\nexport function startFactionHackWork(this: IPlayer, router: IRouter, faction: Faction): void {\n  this.resetWorkStatus(CONSTANTS.WorkTypeFaction, faction.name, CONSTANTS.FactionWorkHacking);\n\n  this.workHackExpGainRate = 0.15 * this.hacking_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n  this.workRepGainRate =\n    ((this.hacking_skill + this.intelligence) / CONSTANTS.MaxSkillLevel) *\n    this.faction_rep_mult *\n    this.getIntelligenceBonus(0.5);\n\n  this.factionWorkType = CONSTANTS.FactionWorkHacking;\n  this.currentWorkFactionDescription = \"carrying out hacking contracts\";\n\n  this.startFactionWork(router, faction);\n}\n\nexport function startFactionFieldWork(this: IPlayer, router: IRouter, faction: Faction): void {\n  this.resetWorkStatus(CONSTANTS.WorkTypeFaction, faction.name, CONSTANTS.FactionWorkField);\n\n  this.workHackExpGainRate = 0.1 * this.hacking_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n  this.workStrExpGainRate = 0.1 * this.strength_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n  this.workDefExpGainRate = 0.1 * this.defense_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n  this.workDexExpGainRate = 0.1 * this.dexterity_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n  this.workAgiExpGainRate = 0.1 * this.agility_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n  this.workChaExpGainRate = 0.1 * this.charisma_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n  this.workRepGainRate = getFactionFieldWorkRepGain(this, faction);\n\n  this.factionWorkType = CONSTANTS.FactionWorkField;\n  this.currentWorkFactionDescription = \"carrying out field missions\";\n\n  this.startFactionWork(router, faction);\n}\n\nexport function startFactionSecurityWork(this: IPlayer, router: IRouter, faction: Faction): void {\n  this.resetWorkStatus(CONSTANTS.WorkTypeFaction, faction.name, CONSTANTS.FactionWorkSecurity);\n\n  this.workHackExpGainRate = 0.05 * this.hacking_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n  this.workStrExpGainRate = 0.15 * this.strength_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n  this.workDefExpGainRate = 0.15 * this.defense_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n  this.workDexExpGainRate = 0.15 * this.dexterity_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n  this.workAgiExpGainRate = 0.15 * this.agility_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n  this.workChaExpGainRate = 0.0 * this.charisma_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n  this.workRepGainRate = getFactionSecurityWorkRepGain(this, faction);\n\n  this.factionWorkType = CONSTANTS.FactionWorkSecurity;\n  this.currentWorkFactionDescription = \"performing security detail\";\n\n  this.startFactionWork(router, faction);\n}\n\nexport function workForFaction(this: IPlayer, numCycles: number): boolean {\n  const faction = Factions[this.currentWorkFactionName];\n\n  //Constantly update the rep gain rate\n  switch (this.factionWorkType) {\n    case CONSTANTS.FactionWorkHacking:\n      this.workRepGainRate = getHackingWorkRepGain(this, faction);\n      break;\n    case CONSTANTS.FactionWorkField:\n      this.workRepGainRate = getFactionFieldWorkRepGain(this, faction);\n      break;\n    case CONSTANTS.FactionWorkSecurity:\n      this.workRepGainRate = getFactionSecurityWorkRepGain(this, faction);\n      break;\n    default:\n      break;\n  }\n\n  //Cap the number of cycles being processed to whatever would put you at limit (20 hours)\n  let overMax = false;\n  if (this.timeWorked + CONSTANTS._idleSpeed * numCycles >= CONSTANTS.MillisecondsPer20Hours) {\n    overMax = true;\n    numCycles = Math.round((CONSTANTS.MillisecondsPer20Hours - this.timeWorked) / CONSTANTS._idleSpeed);\n  }\n  this.timeWorked += CONSTANTS._idleSpeed * numCycles;\n\n  this.processWorkEarnings(numCycles);\n\n  //If timeWorked == 20 hours, then finish. You can only work for the faction for 20 hours\n  if (overMax || this.timeWorked >= CONSTANTS.MillisecondsPer20Hours) {\n    this.finishFactionWork(false);\n    return true;\n  }\n  return false;\n}\n\nexport function finishFactionWork(this: IPlayer, cancelled: boolean, sing = false): string {\n  const faction = Factions[this.currentWorkFactionName];\n  faction.playerReputation += this.workRepGained;\n\n  this.updateSkillLevels();\n\n  if (!sing) {\n    dialogBoxCreate(\n      <>\n        You worked for your faction {faction.name} for a total of {convertTimeMsToTimeElapsedString(this.timeWorked)}{\" \"}\n        <br />\n        <br />\n        You earned a total of: <br />\n        <Money money={this.workMoneyGained} />\n        <br />\n        <Reputation reputation={this.workRepGained} /> reputation for the faction <br />\n        {numeralWrapper.formatExp(this.workHackExpGained)} hacking exp <br />\n        {numeralWrapper.formatExp(this.workStrExpGained)} strength exp <br />\n        {numeralWrapper.formatExp(this.workDefExpGained)} defense exp <br />\n        {numeralWrapper.formatExp(this.workDexExpGained)} dexterity exp <br />\n        {numeralWrapper.formatExp(this.workAgiExpGained)} agility exp <br />\n        {numeralWrapper.formatExp(this.workChaExpGained)} charisma exp\n        <br />\n      </>,\n    );\n  }\n\n  this.isWorking = false;\n  this.resetWorkStatus();\n  if (sing) {\n    const res =\n      \"You worked for your faction \" +\n      faction.name +\n      \" for a total of \" +\n      convertTimeMsToTimeElapsedString(this.timeWorked) +\n      \". \" +\n      \"You earned \" +\n      numeralWrapper.formatReputation(this.workRepGained) +\n      \" rep, \" +\n      numeralWrapper.formatExp(this.workHackExpGained) +\n      \" hacking exp, \" +\n      numeralWrapper.formatExp(this.workStrExpGained) +\n      \" str exp, \" +\n      numeralWrapper.formatExp(this.workDefExpGained) +\n      \" def exp, \" +\n      numeralWrapper.formatExp(this.workDexExpGained) +\n      \" dex exp, \" +\n      numeralWrapper.formatExp(this.workAgiExpGained) +\n      \" agi exp, and \" +\n      numeralWrapper.formatExp(this.workChaExpGained) +\n      \" cha exp.\";\n\n    return res;\n  }\n  return \"\";\n}\n\n//Money gained per game cycle\nexport function getWorkMoneyGain(this: IPlayer): number {\n  // If player has SF-11, calculate salary multiplier from favor\n  let bn11Mult = 1;\n  const company = Companies[this.companyName];\n  if (SourceFileFlags[11] > 0) {\n    bn11Mult = 1 + company.favor / 100;\n  }\n\n  // Get base salary\n  const companyPositionName = this.jobs[this.companyName];\n  const companyPosition = CompanyPositions[companyPositionName];\n  if (companyPosition == null) {\n    console.error(`Could not find CompanyPosition object for ${companyPositionName}. Work salary will be 0`);\n    return 0;\n  }\n\n  return (\n    companyPosition.baseSalary *\n    company.salaryMultiplier *\n    this.work_money_mult *\n    BitNodeMultipliers.CompanyWorkMoney *\n    bn11Mult\n  );\n}\n\n//Hack exp gained per game cycle\nexport function getWorkHackExpGain(this: IPlayer): number {\n  const company = Companies[this.companyName];\n  const companyPositionName = this.jobs[this.companyName];\n  const companyPosition = CompanyPositions[companyPositionName];\n  if (company == null || companyPosition == null) {\n    console.error(\n      [\n        `Could not find Company object for ${this.companyName}`,\n        `or CompanyPosition object for ${companyPositionName}.`,\n        `Work hack exp gain will be 0`,\n      ].join(\" \"),\n    );\n    return 0;\n  }\n\n  return (\n    companyPosition.hackingExpGain *\n    company.expMultiplier *\n    this.hacking_exp_mult *\n    BitNodeMultipliers.CompanyWorkExpGain\n  );\n}\n\n//Str exp gained per game cycle\nexport function getWorkStrExpGain(this: IPlayer): number {\n  const company = Companies[this.companyName];\n  const companyPositionName = this.jobs[this.companyName];\n  const companyPosition = CompanyPositions[companyPositionName];\n  if (company == null || companyPosition == null) {\n    console.error(\n      [\n        `Could not find Company object for ${this.companyName}`,\n        `or CompanyPosition object for ${companyPositionName}.`,\n        `Work str exp gain will be 0`,\n      ].join(\" \"),\n    );\n    return 0;\n  }\n\n  return (\n    companyPosition.strengthExpGain *\n    company.expMultiplier *\n    this.strength_exp_mult *\n    BitNodeMultipliers.CompanyWorkExpGain\n  );\n}\n\n//Def exp gained per game cycle\nexport function getWorkDefExpGain(this: IPlayer): number {\n  const company = Companies[this.companyName];\n  const companyPositionName = this.jobs[this.companyName];\n  const companyPosition = CompanyPositions[companyPositionName];\n  if (company == null || companyPosition == null) {\n    console.error(\n      [\n        `Could not find Company object for ${this.companyName}`,\n        `or CompanyPosition object for ${companyPositionName}.`,\n        `Work def exp gain will be 0`,\n      ].join(\" \"),\n    );\n    return 0;\n  }\n\n  return (\n    companyPosition.defenseExpGain *\n    company.expMultiplier *\n    this.defense_exp_mult *\n    BitNodeMultipliers.CompanyWorkExpGain\n  );\n}\n\n//Dex exp gained per game cycle\nexport function getWorkDexExpGain(this: IPlayer): number {\n  const company = Companies[this.companyName];\n  const companyPositionName = this.jobs[this.companyName];\n  const companyPosition = CompanyPositions[companyPositionName];\n  if (company == null || companyPosition == null) {\n    console.error(\n      [\n        `Could not find Company object for ${this.companyName}`,\n        `or CompanyPosition object for ${companyPositionName}.`,\n        `Work dex exp gain will be 0`,\n      ].join(\" \"),\n    );\n    return 0;\n  }\n\n  return (\n    companyPosition.dexterityExpGain *\n    company.expMultiplier *\n    this.dexterity_exp_mult *\n    BitNodeMultipliers.CompanyWorkExpGain\n  );\n}\n\n//Agi exp gained per game cycle\nexport function getWorkAgiExpGain(this: IPlayer): number {\n  const company = Companies[this.companyName];\n  const companyPositionName = this.jobs[this.companyName];\n  const companyPosition = CompanyPositions[companyPositionName];\n  if (company == null || companyPosition == null) {\n    console.error(\n      [\n        `Could not find Company object for ${this.companyName}`,\n        `or CompanyPosition object for ${companyPositionName}.`,\n        `Work agi exp gain will be 0`,\n      ].join(\" \"),\n    );\n    return 0;\n  }\n\n  return (\n    companyPosition.agilityExpGain *\n    company.expMultiplier *\n    this.agility_exp_mult *\n    BitNodeMultipliers.CompanyWorkExpGain\n  );\n}\n\n//Charisma exp gained per game cycle\nexport function getWorkChaExpGain(this: IPlayer): number {\n  const company = Companies[this.companyName];\n  const companyPositionName = this.jobs[this.companyName];\n  const companyPosition = CompanyPositions[companyPositionName];\n  if (company == null || companyPosition == null) {\n    console.error(\n      [\n        `Could not find Company object for ${this.companyName}`,\n        `or CompanyPosition object for ${companyPositionName}.`,\n        `Work cha exp gain will be 0`,\n      ].join(\" \"),\n    );\n    return 0;\n  }\n\n  return (\n    companyPosition.charismaExpGain *\n    company.expMultiplier *\n    this.charisma_exp_mult *\n    BitNodeMultipliers.CompanyWorkExpGain\n  );\n}\n\n//Reputation gained per game cycle\nexport function getWorkRepGain(this: IPlayer): number {\n  const company = Companies[this.companyName];\n  const companyPositionName = this.jobs[this.companyName];\n  const companyPosition = CompanyPositions[companyPositionName];\n  if (company == null || companyPosition == null) {\n    console.error(\n      [\n        `Could not find Company object for ${this.companyName}`,\n        `or CompanyPosition object for ${companyPositionName}.`,\n        `Work rep gain will be 0`,\n      ].join(\" \"),\n    );\n    return 0;\n  }\n\n  let jobPerformance = companyPosition.calculateJobPerformance(\n    this.hacking_skill,\n    this.strength,\n    this.defense,\n    this.dexterity,\n    this.agility,\n    this.charisma,\n  );\n\n  //Intelligence provides a flat bonus to job performance\n  jobPerformance += this.intelligence / CONSTANTS.MaxSkillLevel;\n\n  //Update reputation gain rate to account for company favor\n  let favorMult = 1 + company.favor / 100;\n  if (isNaN(favorMult)) {\n    favorMult = 1;\n  }\n  return jobPerformance * this.company_rep_mult * favorMult;\n}\n\n// export function getFactionSecurityWorkRepGain(this: IPlayer) {\n//     var t = 0.9 * (this.hacking_skill  / CONSTANTS.MaxSkillLevel +\n//                    this.strength       / CONSTANTS.MaxSkillLevel +\n//                    this.defense        / CONSTANTS.MaxSkillLevel +\n//                    this.dexterity      / CONSTANTS.MaxSkillLevel +\n//                    this.agility        / CONSTANTS.MaxSkillLevel) / 4.5;\n//     return t * this.faction_rep_mult;\n// }\n\n// export function getFactionFieldWorkRepGain(this: IPlayer) {\n//     var t = 0.9 * (this.hacking_skill  / CONSTANTS.MaxSkillLevel +\n//                    this.strength       / CONSTANTS.MaxSkillLevel +\n//                    this.defense        / CONSTANTS.MaxSkillLevel +\n//                    this.dexterity      / CONSTANTS.MaxSkillLevel +\n//                    this.agility        / CONSTANTS.MaxSkillLevel +\n//                    this.charisma       / CONSTANTS.MaxSkillLevel +\n//                    this.intelligence   / CONSTANTS.MaxSkillLevel) / 5.5;\n//     return t * this.faction_rep_mult;\n// }\n\n/* Creating a Program */\nexport function startCreateProgramWork(\n  this: IPlayer,\n  router: IRouter,\n  programName: string,\n  time: number,\n  reqLevel: number,\n): void {\n  this.resetWorkStatus();\n  this.isWorking = true;\n  this.focus = true;\n  this.workType = CONSTANTS.WorkTypeCreateProgram;\n\n  //Time needed to complete work affected by hacking skill (linearly based on\n  //ratio of (your skill - required level) to MAX skill)\n  //var timeMultiplier = (CONSTANTS.MaxSkillLevel - (this.hacking_skill - reqLevel)) / CONSTANTS.MaxSkillLevel;\n  //if (timeMultiplier > 1) {timeMultiplier = 1;}\n  //if (timeMultiplier < 0.01) {timeMultiplier = 0.01;}\n  this.createProgramReqLvl = reqLevel;\n\n  this.timeNeededToCompleteWork = time;\n  //Check for incomplete program\n  for (let i = 0; i < this.getHomeComputer().programs.length; ++i) {\n    const programFile = this.getHomeComputer().programs[i];\n    if (programFile.startsWith(programName) && programFile.endsWith(\"%-INC\")) {\n      const res = programFile.split(\"-\");\n      if (res.length != 3) {\n        break;\n      }\n      const percComplete = Number(res[1].slice(0, -1));\n      if (isNaN(percComplete) || percComplete < 0 || percComplete >= 100) {\n        break;\n      }\n      this.timeWorkedCreateProgram = (percComplete / 100) * this.timeNeededToCompleteWork;\n      this.getHomeComputer().programs.splice(i, 1);\n    }\n  }\n\n  this.createProgramName = programName;\n  router.toWork();\n}\n\nexport function createProgramWork(this: IPlayer, numCycles: number): boolean {\n  //Higher hacking skill will allow you to create programs faster\n  const reqLvl = this.createProgramReqLvl;\n  let skillMult = (this.hacking_skill / reqLvl) * this.getIntelligenceBonus(3); //This should always be greater than 1;\n  skillMult = 1 + (skillMult - 1) / 5; //The divider constant can be adjusted as necessary\n\n  //Skill multiplier directly applied to \"time worked\"\n  this.timeWorked += CONSTANTS._idleSpeed * numCycles;\n  this.timeWorkedCreateProgram += CONSTANTS._idleSpeed * numCycles * skillMult;\n\n  if (this.timeWorkedCreateProgram >= this.timeNeededToCompleteWork) {\n    this.finishCreateProgramWork(false);\n    return true;\n  }\n  return false;\n}\n\nexport function finishCreateProgramWork(this: IPlayer, cancelled: boolean): string {\n  const programName = this.createProgramName;\n  if (cancelled === false) {\n    dialogBoxCreate(\n      \"You've finished creating \" + programName + \"!<br>\" + \"The new program can be found on your home computer.\",\n    );\n\n    this.getHomeComputer().programs.push(programName);\n  } else {\n    const perc = (Math.floor((this.timeWorkedCreateProgram / this.timeNeededToCompleteWork) * 10000) / 100).toString();\n    const incompleteName = programName + \"-\" + perc + \"%-INC\";\n    this.getHomeComputer().programs.push(incompleteName);\n  }\n\n  if (!cancelled) {\n    this.gainIntelligenceExp(this.createProgramReqLvl / CONSTANTS.IntelligenceProgramBaseExpGain);\n  }\n\n  this.isWorking = false;\n\n  this.resetWorkStatus();\n  return \"You've finished creating \" + programName + \"! The new program can be found on your home computer.\";\n}\n\n/* Studying/Taking Classes */\nexport function startClass(this: IPlayer, router: IRouter, costMult: number, expMult: number, className: string): void {\n  this.resetWorkStatus();\n  this.isWorking = true;\n  this.focus = true;\n  this.workType = CONSTANTS.WorkTypeStudyClass;\n\n  this.className = className;\n\n  const gameCPS = 1000 / CONSTANTS._idleSpeed;\n\n  //Find cost and exp gain per game cycle\n  let cost = 0;\n  let hackExp = 0,\n    strExp = 0,\n    defExp = 0,\n    dexExp = 0,\n    agiExp = 0,\n    chaExp = 0;\n  const hashManager = this.hashManager;\n  switch (className) {\n    case CONSTANTS.ClassStudyComputerScience:\n      hackExp = ((CONSTANTS.ClassStudyComputerScienceBaseExp * expMult) / gameCPS) * hashManager.getStudyMult();\n      break;\n    case CONSTANTS.ClassDataStructures:\n      cost = (CONSTANTS.ClassDataStructuresBaseCost * costMult) / gameCPS;\n      hackExp = ((CONSTANTS.ClassDataStructuresBaseExp * expMult) / gameCPS) * hashManager.getStudyMult();\n      break;\n    case CONSTANTS.ClassNetworks:\n      cost = (CONSTANTS.ClassNetworksBaseCost * costMult) / gameCPS;\n      hackExp = ((CONSTANTS.ClassNetworksBaseExp * expMult) / gameCPS) * hashManager.getStudyMult();\n      break;\n    case CONSTANTS.ClassAlgorithms:\n      cost = (CONSTANTS.ClassAlgorithmsBaseCost * costMult) / gameCPS;\n      hackExp = ((CONSTANTS.ClassAlgorithmsBaseExp * expMult) / gameCPS) * hashManager.getStudyMult();\n      break;\n    case CONSTANTS.ClassManagement:\n      cost = (CONSTANTS.ClassManagementBaseCost * costMult) / gameCPS;\n      chaExp = ((CONSTANTS.ClassManagementBaseExp * expMult) / gameCPS) * hashManager.getStudyMult();\n      break;\n    case CONSTANTS.ClassLeadership:\n      cost = (CONSTANTS.ClassLeadershipBaseCost * costMult) / gameCPS;\n      chaExp = ((CONSTANTS.ClassLeadershipBaseExp * expMult) / gameCPS) * hashManager.getStudyMult();\n      break;\n    case CONSTANTS.ClassGymStrength:\n      cost = (CONSTANTS.ClassGymBaseCost * costMult) / gameCPS;\n      strExp = (expMult / gameCPS) * hashManager.getTrainingMult();\n      break;\n    case CONSTANTS.ClassGymDefense:\n      cost = (CONSTANTS.ClassGymBaseCost * costMult) / gameCPS;\n      defExp = (expMult / gameCPS) * hashManager.getTrainingMult();\n      break;\n    case CONSTANTS.ClassGymDexterity:\n      cost = (CONSTANTS.ClassGymBaseCost * costMult) / gameCPS;\n      dexExp = (expMult / gameCPS) * hashManager.getTrainingMult();\n      break;\n    case CONSTANTS.ClassGymAgility:\n      cost = (CONSTANTS.ClassGymBaseCost * costMult) / gameCPS;\n      agiExp = (expMult / gameCPS) * hashManager.getTrainingMult();\n      break;\n    default:\n      throw new Error(\"ERR: Invalid/unrecognized class name\");\n      return;\n  }\n\n  this.workMoneyLossRate = cost;\n  this.workHackExpGainRate = hackExp * this.hacking_exp_mult * BitNodeMultipliers.ClassGymExpGain;\n  this.workStrExpGainRate = strExp * this.strength_exp_mult * BitNodeMultipliers.ClassGymExpGain;\n  this.workDefExpGainRate = defExp * this.defense_exp_mult * BitNodeMultipliers.ClassGymExpGain;\n  this.workDexExpGainRate = dexExp * this.dexterity_exp_mult * BitNodeMultipliers.ClassGymExpGain;\n  this.workAgiExpGainRate = agiExp * this.agility_exp_mult * BitNodeMultipliers.ClassGymExpGain;\n  this.workChaExpGainRate = chaExp * this.charisma_exp_mult * BitNodeMultipliers.ClassGymExpGain;\n  router.toWork();\n}\n\nexport function takeClass(this: IPlayer, numCycles: number): boolean {\n  this.timeWorked += CONSTANTS._idleSpeed * numCycles;\n  this.processWorkEarnings(numCycles);\n  return false;\n}\n\n//The 'sing' argument defines whether or not this function was called\n//through a Singularity Netscript function\nexport function finishClass(this: IPlayer, sing = false): string {\n  this.gainIntelligenceExp(CONSTANTS.IntelligenceClassBaseExpGain * Math.round(this.timeWorked / 1000));\n\n  if (this.workMoneyGained > 0) {\n    throw new Error(\"ERR: Somehow gained money while taking class\");\n  }\n\n  this.updateSkillLevels();\n  if (!sing) {\n    dialogBoxCreate(\n      <>\n        After {this.className} for {convertTimeMsToTimeElapsedString(this.timeWorked)}, <br />\n        you spent a total of <Money money={-this.workMoneyGained} />. <br />\n        <br />\n        You earned a total of: <br />\n        {numeralWrapper.formatExp(this.workHackExpGained)} hacking exp <br />\n        {numeralWrapper.formatExp(this.workStrExpGained)} strength exp <br />\n        {numeralWrapper.formatExp(this.workDefExpGained)} defense exp <br />\n        {numeralWrapper.formatExp(this.workDexExpGained)} dexterity exp <br />\n        {numeralWrapper.formatExp(this.workAgiExpGained)} agility exp <br />\n        {numeralWrapper.formatExp(this.workChaExpGained)} charisma exp\n        <br />\n      </>,\n    );\n  }\n\n  this.isWorking = false;\n\n  if (sing) {\n    const res =\n      \"After \" +\n      this.className +\n      \" for \" +\n      convertTimeMsToTimeElapsedString(this.timeWorked) +\n      \", \" +\n      \"you spent a total of \" +\n      numeralWrapper.formatMoney(this.workMoneyGained * -1) +\n      \". \" +\n      \"You earned a total of: \" +\n      numeralWrapper.formatExp(this.workHackExpGained) +\n      \" hacking exp, \" +\n      numeralWrapper.formatExp(this.workStrExpGained) +\n      \" strength exp, \" +\n      numeralWrapper.formatExp(this.workDefExpGained) +\n      \" defense exp, \" +\n      numeralWrapper.formatExp(this.workDexExpGained) +\n      \" dexterity exp, \" +\n      numeralWrapper.formatExp(this.workAgiExpGained) +\n      \" agility exp, and \" +\n      numeralWrapper.formatExp(this.workChaExpGained) +\n      \" charisma exp\";\n    this.resetWorkStatus();\n    return res;\n  }\n  this.resetWorkStatus();\n  return \"\";\n}\n\n//The EXP and $ gains are hardcoded. Time is in ms\nexport function startCrime(\n  this: IPlayer,\n  router: IRouter,\n  crimeType: string,\n  hackExp: number,\n  strExp: number,\n  defExp: number,\n  dexExp: number,\n  agiExp: number,\n  chaExp: number,\n  money: number,\n  time: number,\n  workerscript: WorkerScript | null = null,\n): void {\n  this.crimeType = crimeType;\n\n  this.resetWorkStatus();\n  this.isWorking = true;\n  this.focus = true;\n  this.workType = CONSTANTS.WorkTypeCrime;\n\n  if (workerscript !== null) {\n    this.committingCrimeThruSingFn = true;\n    this.singFnCrimeWorkerScript = workerscript;\n  }\n\n  this.workHackExpGained = hackExp * this.hacking_exp_mult * BitNodeMultipliers.CrimeExpGain;\n  this.workStrExpGained = strExp * this.strength_exp_mult * BitNodeMultipliers.CrimeExpGain;\n  this.workDefExpGained = defExp * this.defense_exp_mult * BitNodeMultipliers.CrimeExpGain;\n  this.workDexExpGained = dexExp * this.dexterity_exp_mult * BitNodeMultipliers.CrimeExpGain;\n  this.workAgiExpGained = agiExp * this.agility_exp_mult * BitNodeMultipliers.CrimeExpGain;\n  this.workChaExpGained = chaExp * this.charisma_exp_mult * BitNodeMultipliers.CrimeExpGain;\n  this.workMoneyGained = money * this.crime_money_mult * BitNodeMultipliers.CrimeMoney;\n\n  this.timeNeededToCompleteWork = time;\n  router.toWork();\n}\n\nexport function commitCrime(this: IPlayer, numCycles: number): boolean {\n  this.timeWorked += CONSTANTS._idleSpeed * numCycles;\n\n  if (this.timeWorked >= this.timeNeededToCompleteWork) {\n    this.finishCrime(false);\n    return true;\n  }\n  return false;\n}\n\nexport function finishCrime(this: IPlayer, cancelled: boolean): string {\n  //Determine crime success/failure\n  if (!cancelled) {\n    if (determineCrimeSuccess(this, this.crimeType)) {\n      //Handle Karma and crime statistics\n      let crime = null;\n      for (const i in Crimes) {\n        if (Crimes[i].type == this.crimeType) {\n          crime = Crimes[i];\n          break;\n        }\n      }\n      if (crime == null) {\n        dialogBoxCreate(\n          `ERR: Unrecognized crime type (${this.crimeType}). This is probably a bug please contact the developer`,\n        );\n        return \"\";\n      }\n      this.gainMoney(this.workMoneyGained);\n      this.recordMoneySource(this.workMoneyGained, \"crime\");\n      this.karma -= crime.karma;\n      this.numPeopleKilled += crime.kills;\n      if (crime.intelligence_exp > 0) {\n        this.gainIntelligenceExp(crime.intelligence_exp);\n      }\n\n      //On a crime success, gain 2x exp\n      this.workHackExpGained *= 2;\n      this.workStrExpGained *= 2;\n      this.workDefExpGained *= 2;\n      this.workDexExpGained *= 2;\n      this.workAgiExpGained *= 2;\n      this.workChaExpGained *= 2;\n      const ws = this.singFnCrimeWorkerScript;\n      if (this.committingCrimeThruSingFn && ws !== null) {\n        if (ws.disableLogs.ALL == null && ws.disableLogs.commitCrime == null) {\n          ws.scriptRef.log(\n            \"Crime successful! Gained \" +\n              numeralWrapper.formatMoney(this.workMoneyGained) +\n              \", \" +\n              numeralWrapper.formatExp(this.workHackExpGained) +\n              \" hack exp, \" +\n              numeralWrapper.formatExp(this.workStrExpGained) +\n              \" str exp, \" +\n              numeralWrapper.formatExp(this.workDefExpGained) +\n              \" def exp, \" +\n              numeralWrapper.formatExp(this.workDexExpGained) +\n              \" dex exp, \" +\n              numeralWrapper.formatExp(this.workAgiExpGained) +\n              \" agi exp, \" +\n              numeralWrapper.formatExp(this.workChaExpGained) +\n              \" cha exp.\",\n          );\n        }\n      } else {\n        dialogBoxCreate(\n          <>\n            Crime successful!\n            <br />\n            <br />\n            You gained:\n            <br />\n            <Money money={this.workMoneyGained} />\n            <br />\n            {numeralWrapper.formatExp(this.workHackExpGained)} hacking experience <br />\n            {numeralWrapper.formatExp(this.workStrExpGained)} strength experience\n            <br />\n            {numeralWrapper.formatExp(this.workDefExpGained)} defense experience\n            <br />\n            {numeralWrapper.formatExp(this.workDexExpGained)} dexterity experience\n            <br />\n            {numeralWrapper.formatExp(this.workAgiExpGained)} agility experience\n            <br />\n            {numeralWrapper.formatExp(this.workChaExpGained)} charisma experience\n          </>,\n        );\n      }\n    } else {\n      //Exp halved on failure\n      this.workHackExpGained /= 2;\n      this.workStrExpGained /= 2;\n      this.workDefExpGained /= 2;\n      this.workDexExpGained /= 2;\n      this.workAgiExpGained /= 2;\n      this.workChaExpGained /= 2;\n      const ws = this.singFnCrimeWorkerScript;\n      if (this.committingCrimeThruSingFn && ws !== null) {\n        if (ws.disableLogs.ALL == null && ws.disableLogs.commitCrime == null) {\n          ws.scriptRef.log(\n            \"Crime failed! Gained \" +\n              numeralWrapper.formatExp(this.workHackExpGained) +\n              \" hack exp, \" +\n              numeralWrapper.formatExp(this.workStrExpGained) +\n              \" str exp, \" +\n              numeralWrapper.formatExp(this.workDefExpGained) +\n              \" def exp, \" +\n              numeralWrapper.formatExp(this.workDexExpGained) +\n              \" dex exp, \" +\n              numeralWrapper.formatExp(this.workAgiExpGained) +\n              \" agi exp, \" +\n              numeralWrapper.formatExp(this.workChaExpGained) +\n              \" cha exp.\",\n          );\n        }\n      } else {\n        dialogBoxCreate(\n          <>\n            Crime failed!\n            <br />\n            <br />\n            You gained:\n            <br />\n            {numeralWrapper.formatExp(this.workHackExpGained)} hacking experience <br />\n            {numeralWrapper.formatExp(this.workStrExpGained)} strength experience\n            <br />\n            {numeralWrapper.formatExp(this.workDefExpGained)} defense experience\n            <br />\n            {numeralWrapper.formatExp(this.workDexExpGained)} dexterity experience\n            <br />\n            {numeralWrapper.formatExp(this.workAgiExpGained)} agility experience\n            <br />\n            {numeralWrapper.formatExp(this.workChaExpGained)} charisma experience\n          </>,\n        );\n      }\n    }\n\n    this.gainHackingExp(this.workHackExpGained);\n    this.gainStrengthExp(this.workStrExpGained);\n    this.gainDefenseExp(this.workDefExpGained);\n    this.gainDexterityExp(this.workDexExpGained);\n    this.gainAgilityExp(this.workAgiExpGained);\n    this.gainCharismaExp(this.workChaExpGained);\n  }\n  this.committingCrimeThruSingFn = false;\n  this.singFnCrimeWorkerScript = null;\n  this.isWorking = false;\n  this.crimeType = \"\";\n  this.resetWorkStatus();\n  return \"\";\n}\n\n//Cancels the player's current \"work\" assignment and gives the proper rewards\n//Used only for Singularity functions, so no popups are created\nexport function singularityStopWork(this: IPlayer): string {\n  if (!this.isWorking) {\n    return \"\";\n  }\n  let res = \"\"; //Earnings text for work\n  switch (this.workType) {\n    case CONSTANTS.WorkTypeStudyClass:\n      res = this.finishClass(true);\n      break;\n    case CONSTANTS.WorkTypeCompany:\n      res = this.finishWork(true, true);\n      break;\n    case CONSTANTS.WorkTypeCompanyPartTime:\n      res = this.finishWorkPartTime(true);\n      break;\n    case CONSTANTS.WorkTypeFaction:\n      res = this.finishFactionWork(true, true);\n      break;\n    case CONSTANTS.WorkTypeCreateProgram:\n      res = this.finishCreateProgramWork(true);\n      break;\n    case CONSTANTS.WorkTypeCrime:\n      res = this.finishCrime(true);\n      break;\n    default:\n      console.error(`Unrecognized work type (${this.workType})`);\n      return \"\";\n  }\n  return res;\n}\n\n// Returns true if hospitalized, false otherwise\nexport function takeDamage(this: IPlayer, amt: number): boolean {\n  if (typeof amt !== \"number\") {\n    console.warn(`Player.takeDamage() called without a numeric argument: ${amt}`);\n    return false;\n  }\n\n  this.hp -= amt;\n  if (this.hp <= 0) {\n    this.hospitalize();\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function regenerateHp(this: IPlayer, amt: number): void {\n  if (typeof amt !== \"number\") {\n    console.warn(`Player.regenerateHp() called without a numeric argument: ${amt}`);\n    return;\n  }\n  this.hp += amt;\n  if (this.hp > this.max_hp) {\n    this.hp = this.max_hp;\n  }\n}\n\nexport function hospitalize(this: IPlayer): number {\n  const cost = getHospitalizationCost(this);\n  if (Settings.SuppressHospitalizationPopup === false) {\n    dialogBoxCreate(\n      <>\n        You were in critical condition! You were taken to the hospital where luckily they were able to save your life.\n        You were charged&nbsp;\n        <Money money={cost} />\n      </>,\n    );\n  }\n\n  this.loseMoney(cost);\n  this.recordMoneySource(-1 * cost, \"hospitalization\");\n  this.hp = this.max_hp;\n  return cost;\n}\n\n/********* Company job application **********/\n//Determines the job that the Player should get (if any) at the current company\n//The 'sing' argument designates whether or not this is being called from\n//the applyToCompany() Netscript Singularity function\nexport function applyForJob(this: IPlayer, entryPosType: CompanyPosition, sing = false): boolean {\n  // Get current company and job\n  let currCompany = null;\n  if (this.companyName !== \"\") {\n    currCompany = Companies[this.companyName];\n  }\n  const currPositionName = this.jobs[this.companyName];\n\n  // Get company that's being applied to\n  const company = Companies[this.location]; //Company being applied to\n  if (!(company instanceof Company)) {\n    console.error(`Could not find company that matches the location: ${this.location}. Player.applyToCompany() failed`);\n    return false;\n  }\n\n  let pos = entryPosType;\n\n  if (!this.isQualified(company, pos)) {\n    const reqText = getJobRequirementText(company, pos);\n    if (!sing) {\n      dialogBoxCreate(\"Unforunately, you do not qualify for this position<br>\" + reqText);\n    }\n    return false;\n  }\n\n  while (true) {\n    const newPos = getNextCompanyPositionHelper(pos);\n    if (newPos == null) {\n      break;\n    }\n\n    //Check if this company has this position\n    if (company.hasPosition(newPos)) {\n      if (!this.isQualified(company, newPos)) {\n        //If player not qualified for next job, break loop so player will be given current job\n        break;\n      }\n      pos = newPos;\n    } else {\n      break;\n    }\n  }\n\n  //Check if the determined job is the same as the player's current job\n  if (currCompany != null) {\n    if (currCompany.name == company.name && pos.name == currPositionName) {\n      const nextPos = getNextCompanyPositionHelper(pos);\n      if (nextPos == null) {\n        if (!sing) {\n          dialogBoxCreate(\"You are already at the highest position for your field! No promotion available\");\n        }\n        return false;\n      } else if (company.hasPosition(nextPos)) {\n        if (!sing) {\n          const reqText = getJobRequirementText(company, nextPos);\n          dialogBoxCreate(\"Unfortunately, you do not qualify for a promotion<br>\" + reqText);\n        }\n        return false;\n      } else {\n        if (!sing) {\n          dialogBoxCreate(\"You are already at the highest position for your field! No promotion available\");\n        }\n        return false;\n      }\n      return false; //Same job, do nothing\n    }\n  }\n\n  this.jobs[company.name] = pos.name;\n  this.companyName = this.location;\n\n  if (!sing) {\n    dialogBoxCreate(\"Congratulations! You were offered a new job at \" + this.companyName + \" as a \" + pos.name + \"!\");\n  }\n  return true;\n}\n\n//Returns your next position at a company given the field (software, business, etc.)\nexport function getNextCompanyPosition(\n  this: IPlayer,\n  company: Company,\n  entryPosType: CompanyPosition,\n): CompanyPosition | null {\n  let currCompany = null;\n  if (this.companyName !== \"\") {\n    currCompany = Companies[this.companyName];\n  }\n\n  //Not employed at this company, so return the entry position\n  if (currCompany == null || currCompany.name != company.name) {\n    return entryPosType;\n  }\n\n  //If the entry pos type and the player's current position have the same type,\n  //return the player's \"nextCompanyPosition\". Otherwise return the entryposType\n  //Employed at this company, so just return the next position if it exists.\n  const currentPositionName = this.jobs[this.companyName];\n  const currentPosition = CompanyPositions[currentPositionName];\n  if (\n    (currentPosition.isSoftwareJob() && entryPosType.isSoftwareJob()) ||\n    (currentPosition.isITJob() && entryPosType.isITJob()) ||\n    (currentPosition.isBusinessJob() && entryPosType.isBusinessJob()) ||\n    (currentPosition.isSecurityEngineerJob() && entryPosType.isSecurityEngineerJob()) ||\n    (currentPosition.isNetworkEngineerJob() && entryPosType.isNetworkEngineerJob()) ||\n    (currentPosition.isSecurityJob() && entryPosType.isSecurityJob()) ||\n    (currentPosition.isAgentJob() && entryPosType.isAgentJob()) ||\n    (currentPosition.isSoftwareConsultantJob() && entryPosType.isSoftwareConsultantJob()) ||\n    (currentPosition.isBusinessConsultantJob() && entryPosType.isBusinessConsultantJob()) ||\n    (currentPosition.isPartTimeJob() && entryPosType.isPartTimeJob())\n  ) {\n    return getNextCompanyPositionHelper(currentPosition);\n  }\n\n  return entryPosType;\n}\n\nexport function quitJob(this: IPlayer, company: string): void {\n  this.isWorking = false;\n  this.companyName = \"\";\n  delete this.jobs[company];\n}\n\nexport function applyForSoftwareJob(this: IPlayer, sing = false): boolean {\n  return this.applyForJob(CompanyPositions[posNames.SoftwareCompanyPositions[0]], sing);\n}\n\nexport function applyForSoftwareConsultantJob(this: IPlayer, sing = false): boolean {\n  return this.applyForJob(CompanyPositions[posNames.SoftwareConsultantCompanyPositions[0]], sing);\n}\n\nexport function applyForItJob(this: IPlayer, sing = false): boolean {\n  return this.applyForJob(CompanyPositions[posNames.ITCompanyPositions[0]], sing);\n}\n\nexport function applyForSecurityEngineerJob(this: IPlayer, sing = false): boolean {\n  const company = Companies[this.location]; //Company being applied to\n  if (this.isQualified(company, CompanyPositions[posNames.SecurityEngineerCompanyPositions[0]])) {\n    return this.applyForJob(CompanyPositions[posNames.SecurityEngineerCompanyPositions[0]], sing);\n  } else {\n    if (!sing) {\n      dialogBoxCreate(\"Unforunately, you do not qualify for this position\");\n    }\n    return false;\n  }\n}\n\nexport function applyForNetworkEngineerJob(this: IPlayer, sing = false): boolean {\n  const company = Companies[this.location]; //Company being applied to\n  if (this.isQualified(company, CompanyPositions[posNames.NetworkEngineerCompanyPositions[0]])) {\n    const pos = CompanyPositions[posNames.NetworkEngineerCompanyPositions[0]];\n    return this.applyForJob(pos, sing);\n  } else {\n    if (!sing) {\n      dialogBoxCreate(\"Unforunately, you do not qualify for this position\");\n    }\n    return false;\n  }\n}\n\nexport function applyForBusinessJob(this: IPlayer, sing = false): boolean {\n  return this.applyForJob(CompanyPositions[posNames.BusinessCompanyPositions[0]], sing);\n}\n\nexport function applyForBusinessConsultantJob(this: IPlayer, sing = false): boolean {\n  return this.applyForJob(CompanyPositions[posNames.BusinessConsultantCompanyPositions[0]], sing);\n}\n\nexport function applyForSecurityJob(this: IPlayer, sing = false): boolean {\n  // TODO Police Jobs\n  // Indexing starts at 2 because 0 is for police officer\n  return this.applyForJob(CompanyPositions[posNames.SecurityCompanyPositions[2]], sing);\n}\n\nexport function applyForAgentJob(this: IPlayer, sing = false): boolean {\n  const company = Companies[this.location]; //Company being applied to\n  if (this.isQualified(company, CompanyPositions[posNames.AgentCompanyPositions[0]])) {\n    const pos = CompanyPositions[posNames.AgentCompanyPositions[0]];\n    return this.applyForJob(pos, sing);\n  } else {\n    if (!sing) {\n      dialogBoxCreate(\"Unforunately, you do not qualify for this position\");\n    }\n    return false;\n  }\n}\n\nexport function applyForEmployeeJob(this: IPlayer, sing = false): boolean {\n  const company = Companies[this.location]; //Company being applied to\n  if (this.isQualified(company, CompanyPositions[posNames.MiscCompanyPositions[1]])) {\n    this.companyName = company.name;\n    this.jobs[company.name] = posNames.MiscCompanyPositions[1];\n    if (!sing) {\n      dialogBoxCreate(\"Congratulations, you are now employed at \" + this.companyName);\n    }\n\n    return true;\n  } else {\n    if (!sing) {\n      dialogBoxCreate(\"Unforunately, you do not qualify for this position\");\n    }\n\n    return false;\n  }\n}\n\nexport function applyForPartTimeEmployeeJob(this: IPlayer, sing = false): boolean {\n  const company = Companies[this.location]; //Company being applied to\n  if (this.isQualified(company, CompanyPositions[posNames.PartTimeCompanyPositions[1]])) {\n    this.jobs[company.name] = posNames.PartTimeCompanyPositions[1];\n    if (!sing) {\n      dialogBoxCreate(\"Congratulations, you are now employed part-time at \" + this.companyName);\n    }\n\n    return true;\n  } else {\n    if (!sing) {\n      dialogBoxCreate(\"Unforunately, you do not qualify for this position\");\n    }\n\n    return false;\n  }\n}\n\nexport function applyForWaiterJob(this: IPlayer, sing = false): boolean {\n  const company = Companies[this.location]; //Company being applied to\n  if (this.isQualified(company, CompanyPositions[posNames.MiscCompanyPositions[0]])) {\n    this.companyName = company.name;\n    this.jobs[company.name] = posNames.MiscCompanyPositions[0];\n    if (!sing) {\n      dialogBoxCreate(\"Congratulations, you are now employed as a waiter at \" + this.companyName);\n    }\n    return true;\n  } else {\n    if (!sing) {\n      dialogBoxCreate(\"Unforunately, you do not qualify for this position\");\n    }\n    return false;\n  }\n}\n\nexport function applyForPartTimeWaiterJob(this: IPlayer, sing = false): boolean {\n  const company = Companies[this.location]; //Company being applied to\n  if (this.isQualified(company, CompanyPositions[posNames.PartTimeCompanyPositions[0]])) {\n    this.companyName = company.name;\n    this.jobs[company.name] = posNames.PartTimeCompanyPositions[0];\n    if (!sing) {\n      dialogBoxCreate(\"Congratulations, you are now employed as a part-time waiter at \" + this.companyName);\n    }\n    return true;\n  } else {\n    if (!sing) {\n      dialogBoxCreate(\"Unforunately, you do not qualify for this position\");\n    }\n    return false;\n  }\n}\n\n//Checks if the Player is qualified for a certain position\nexport function isQualified(this: IPlayer, company: Company, position: CompanyPosition): boolean {\n  const offset = company.jobStatReqOffset;\n  const reqHacking = position.requiredHacking > 0 ? position.requiredHacking + offset : 0;\n  const reqStrength = position.requiredStrength > 0 ? position.requiredStrength + offset : 0;\n  const reqDefense = position.requiredDefense > 0 ? position.requiredDefense + offset : 0;\n  const reqDexterity = position.requiredDexterity > 0 ? position.requiredDexterity + offset : 0;\n  const reqAgility = position.requiredDexterity > 0 ? position.requiredDexterity + offset : 0;\n  const reqCharisma = position.requiredCharisma > 0 ? position.requiredCharisma + offset : 0;\n\n  if (\n    this.hacking_skill >= reqHacking &&\n    this.strength >= reqStrength &&\n    this.defense >= reqDefense &&\n    this.dexterity >= reqDexterity &&\n    this.agility >= reqAgility &&\n    this.charisma >= reqCharisma &&\n    company.playerReputation >= position.requiredReputation\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/********** Reapplying Augmentations and Source File ***********/\nexport function reapplyAllAugmentations(this: IPlayer, resetMultipliers = true): void {\n  if (resetMultipliers) {\n    this.resetMultipliers();\n  }\n\n  for (let i = 0; i < this.augmentations.length; ++i) {\n    //Compatibility with new version\n    if (this.augmentations[i].name === \"HacknetNode NIC Architecture Neural-Upload\") {\n      this.augmentations[i].name = \"Hacknet Node NIC Architecture Neural-Upload\";\n    }\n\n    const augName = this.augmentations[i].name;\n    const aug = Augmentations[augName];\n    if (aug == null) {\n      console.warn(`Invalid augmentation name in Player.reapplyAllAugmentations(). Aug ${augName} will be skipped`);\n      continue;\n    }\n    aug.owned = true;\n    if (aug.name == AugmentationNames.NeuroFluxGovernor) {\n      for (let j = 0; j < aug.level; ++j) {\n        applyAugmentation(this.augmentations[i], true);\n      }\n      continue;\n    }\n    applyAugmentation(this.augmentations[i], true);\n  }\n\n  this.updateSkillLevels();\n}\n\nexport function reapplyAllSourceFiles(this: IPlayer): void {\n  //Will always be called after reapplyAllAugmentations() so multipliers do not have to be reset\n  //this.resetMultipliers();\n\n  for (let i = 0; i < this.sourceFiles.length; ++i) {\n    const srcFileKey = \"SourceFile\" + this.sourceFiles[i].n;\n    const sourceFileObject = SourceFiles[srcFileKey];\n    if (sourceFileObject == null) {\n      console.error(`Invalid source file number: ${this.sourceFiles[i].n}`);\n      continue;\n    }\n    applySourceFile(this.sourceFiles[i]);\n  }\n  applyExploit();\n}\n\n/*************** Check for Faction Invitations *************/\n//This function sets the requirements to join a Faction. It checks whether the Player meets\n//those requirements and will return an array of all factions that the Player should\n//receive an invitation to\nexport function checkForFactionInvitations(this: IPlayer): Faction[] {\n  const invitedFactions: Faction[] = []; //Array which will hold all Factions the player should be invited to\n\n  const numAugmentations = this.augmentations.length;\n\n  const allCompanies = Object.keys(this.jobs);\n  const allPositions = Object.values(this.jobs);\n\n  // Given a company name, safely returns the reputation (returns 0 if invalid company is specified)\n  function getCompanyRep(companyName: string): number {\n    const company = Companies[companyName];\n    if (company == null) {\n      return 0;\n    } else {\n      return company.playerReputation;\n    }\n  }\n\n  // Helper function that returns a boolean indicating whether the Player meets\n  // the requirements for the specified company. There are two requirements:\n  //      1. High enough reputation\n  //      2. Player is employed at the company\n  function checkMegacorpRequirements(companyName: string, repNeeded = CONSTANTS.CorpFactionRepRequirement): boolean {\n    return allCompanies.includes(companyName) && getCompanyRep(companyName) > repNeeded;\n  }\n\n  //Illuminati\n  const illuminatiFac = Factions[\"Illuminati\"];\n  if (\n    !illuminatiFac.isBanned &&\n    !illuminatiFac.isMember &&\n    !illuminatiFac.alreadyInvited &&\n    numAugmentations >= 30 &&\n    this.money.gte(150000000000) &&\n    this.hacking_skill >= 1500 &&\n    this.strength >= 1200 &&\n    this.defense >= 1200 &&\n    this.dexterity >= 1200 &&\n    this.agility >= 1200\n  ) {\n    invitedFactions.push(illuminatiFac);\n  }\n\n  //Daedalus\n  const daedalusFac = Factions[\"Daedalus\"];\n  if (\n    !daedalusFac.isBanned &&\n    !daedalusFac.isMember &&\n    !daedalusFac.alreadyInvited &&\n    numAugmentations >= Math.round(30 * BitNodeMultipliers.DaedalusAugsRequirement) &&\n    this.money.gte(100000000000) &&\n    (this.hacking_skill >= 2500 ||\n      (this.strength >= 1500 && this.defense >= 1500 && this.dexterity >= 1500 && this.agility >= 1500))\n  ) {\n    invitedFactions.push(daedalusFac);\n  }\n\n  //The Covenant\n  const covenantFac = Factions[\"The Covenant\"];\n  if (\n    !covenantFac.isBanned &&\n    !covenantFac.isMember &&\n    !covenantFac.alreadyInvited &&\n    numAugmentations >= 20 &&\n    this.money.gte(75000000000) &&\n    this.hacking_skill >= 850 &&\n    this.strength >= 850 &&\n    this.defense >= 850 &&\n    this.dexterity >= 850 &&\n    this.agility >= 850\n  ) {\n    invitedFactions.push(covenantFac);\n  }\n\n  //ECorp\n  const ecorpFac = Factions[\"ECorp\"];\n  if (\n    !ecorpFac.isBanned &&\n    !ecorpFac.isMember &&\n    !ecorpFac.alreadyInvited &&\n    checkMegacorpRequirements(LocationName.AevumECorp)\n  ) {\n    invitedFactions.push(ecorpFac);\n  }\n\n  //MegaCorp\n  const megacorpFac = Factions[\"MegaCorp\"];\n  if (\n    !megacorpFac.isBanned &&\n    !megacorpFac.isMember &&\n    !megacorpFac.alreadyInvited &&\n    checkMegacorpRequirements(LocationName.Sector12MegaCorp)\n  ) {\n    invitedFactions.push(megacorpFac);\n  }\n\n  //Bachman & Associates\n  const bachmanandassociatesFac = Factions[\"Bachman & Associates\"];\n  if (\n    !bachmanandassociatesFac.isBanned &&\n    !bachmanandassociatesFac.isMember &&\n    !bachmanandassociatesFac.alreadyInvited &&\n    checkMegacorpRequirements(LocationName.AevumBachmanAndAssociates)\n  ) {\n    invitedFactions.push(bachmanandassociatesFac);\n  }\n\n  //Blade Industries\n  const bladeindustriesFac = Factions[\"Blade Industries\"];\n  if (\n    !bladeindustriesFac.isBanned &&\n    !bladeindustriesFac.isMember &&\n    !bladeindustriesFac.alreadyInvited &&\n    checkMegacorpRequirements(LocationName.Sector12BladeIndustries)\n  ) {\n    invitedFactions.push(bladeindustriesFac);\n  }\n\n  //NWO\n  const nwoFac = Factions[\"NWO\"];\n  if (\n    !nwoFac.isBanned &&\n    !nwoFac.isMember &&\n    !nwoFac.alreadyInvited &&\n    checkMegacorpRequirements(LocationName.VolhavenNWO)\n  ) {\n    invitedFactions.push(nwoFac);\n  }\n\n  //Clarke Incorporated\n  const clarkeincorporatedFac = Factions[\"Clarke Incorporated\"];\n  if (\n    !clarkeincorporatedFac.isBanned &&\n    !clarkeincorporatedFac.isMember &&\n    !clarkeincorporatedFac.alreadyInvited &&\n    checkMegacorpRequirements(LocationName.AevumClarkeIncorporated)\n  ) {\n    invitedFactions.push(clarkeincorporatedFac);\n  }\n\n  //OmniTek Incorporated\n  const omnitekincorporatedFac = Factions[\"OmniTek Incorporated\"];\n  if (\n    !omnitekincorporatedFac.isBanned &&\n    !omnitekincorporatedFac.isMember &&\n    !omnitekincorporatedFac.alreadyInvited &&\n    checkMegacorpRequirements(LocationName.VolhavenOmniTekIncorporated)\n  ) {\n    invitedFactions.push(omnitekincorporatedFac);\n  }\n\n  //Four Sigma\n  const foursigmaFac = Factions[\"Four Sigma\"];\n  if (\n    !foursigmaFac.isBanned &&\n    !foursigmaFac.isMember &&\n    !foursigmaFac.alreadyInvited &&\n    checkMegacorpRequirements(LocationName.Sector12FourSigma)\n  ) {\n    invitedFactions.push(foursigmaFac);\n  }\n\n  //KuaiGong International\n  const kuaigonginternationalFac = Factions[\"KuaiGong International\"];\n  if (\n    !kuaigonginternationalFac.isBanned &&\n    !kuaigonginternationalFac.isMember &&\n    !kuaigonginternationalFac.alreadyInvited &&\n    checkMegacorpRequirements(LocationName.ChongqingKuaiGongInternational)\n  ) {\n    invitedFactions.push(kuaigonginternationalFac);\n  }\n\n  //Fulcrum Secret Technologies - If u've unlocked fulcrum secret technolgoies server and have a high rep with the company\n  const fulcrumsecrettechonologiesFac = Factions[\"Fulcrum Secret Technologies\"];\n  const fulcrumIP = SpecialServerIps[SpecialServerNames.BitRunnersServer];\n  if (typeof fulcrumIP !== \"string\") throw new Error(\"Fulcrum Secret Technologies should be string\");\n  const fulcrumSecretServer = AllServers[fulcrumIP];\n  if (!(fulcrumSecretServer instanceof Server)) throw new Error(\"Fulcrum Secret Technologies should be normal server\");\n  if (fulcrumSecretServer == null) {\n    console.error(\"Could not find Fulcrum Secret Technologies Server\");\n  } else {\n    if (\n      !fulcrumsecrettechonologiesFac.isBanned &&\n      !fulcrumsecrettechonologiesFac.isMember &&\n      !fulcrumsecrettechonologiesFac.alreadyInvited &&\n      fulcrumSecretServer.backdoorInstalled &&\n      checkMegacorpRequirements(LocationName.AevumFulcrumTechnologies, 250e3)\n    ) {\n      invitedFactions.push(fulcrumsecrettechonologiesFac);\n    }\n  }\n\n  //BitRunners\n  const bitrunnersFac = Factions[\"BitRunners\"];\n  const bitrunnerIP = SpecialServerIps[SpecialServerNames.BitRunnersServer];\n  if (typeof bitrunnerIP !== \"string\") throw new Error(\"BitRunners should be string\");\n  const bitrunnersServer = AllServers[bitrunnerIP];\n  if (!(bitrunnersServer instanceof Server)) throw new Error(\"BitRunners should be normal server\");\n  if (bitrunnersServer == null) {\n    console.error(\"Could not find BitRunners Server\");\n  } else if (\n    !bitrunnersFac.isBanned &&\n    !bitrunnersFac.isMember &&\n    bitrunnersServer.backdoorInstalled &&\n    !bitrunnersFac.alreadyInvited\n  ) {\n    invitedFactions.push(bitrunnersFac);\n  }\n\n  //The Black Hand\n\n  const theblackhandFac = Factions[\"The Black Hand\"];\n  const tbhIP = SpecialServerIps[SpecialServerNames.TheBlackHandServer];\n  if (typeof tbhIP !== \"string\") throw new Error(\"TheBlackHand should be string\");\n  const blackhandServer = AllServers[tbhIP];\n  if (!(blackhandServer instanceof Server)) throw new Error(\"TheBlackHand should be normal server\");\n  if (blackhandServer == null) {\n    console.error(\"Could not find The Black Hand Server\");\n  } else if (\n    !theblackhandFac.isBanned &&\n    !theblackhandFac.isMember &&\n    blackhandServer.backdoorInstalled &&\n    !theblackhandFac.alreadyInvited\n  ) {\n    invitedFactions.push(theblackhandFac);\n  }\n\n  //NiteSec\n  const nitesecFac = Factions[\"NiteSec\"];\n  const nitesecIP = SpecialServerIps[SpecialServerNames.NiteSecServer];\n  if (typeof nitesecIP !== \"string\") throw new Error(\"NiteSec should be string\");\n  const nitesecServer = AllServers[nitesecIP];\n  if (!(nitesecServer instanceof Server)) throw new Error(\"NiteSec should be normal server\");\n  if (nitesecServer == null) {\n    console.error(\"Could not find NiteSec Server\");\n  } else if (\n    !nitesecFac.isBanned &&\n    !nitesecFac.isMember &&\n    nitesecServer.backdoorInstalled &&\n    !nitesecFac.alreadyInvited\n  ) {\n    invitedFactions.push(nitesecFac);\n  }\n\n  //Chongqing\n  const chongqingFac = Factions[\"Chongqing\"];\n  if (\n    !chongqingFac.isBanned &&\n    !chongqingFac.isMember &&\n    !chongqingFac.alreadyInvited &&\n    this.money.gte(20000000) &&\n    this.city == CityName.Chongqing\n  ) {\n    invitedFactions.push(chongqingFac);\n  }\n\n  //Sector-12\n  const sector12Fac = Factions[\"Sector-12\"];\n  if (\n    !sector12Fac.isBanned &&\n    !sector12Fac.isMember &&\n    !sector12Fac.alreadyInvited &&\n    this.money.gte(15000000) &&\n    this.city == CityName.Sector12\n  ) {\n    invitedFactions.push(sector12Fac);\n  }\n\n  //New Tokyo\n  const newtokyoFac = Factions[\"New Tokyo\"];\n  if (\n    !newtokyoFac.isBanned &&\n    !newtokyoFac.isMember &&\n    !newtokyoFac.alreadyInvited &&\n    this.money.gte(20000000) &&\n    this.city == CityName.NewTokyo\n  ) {\n    invitedFactions.push(newtokyoFac);\n  }\n\n  //Aevum\n  const aevumFac = Factions[\"Aevum\"];\n  if (\n    !aevumFac.isBanned &&\n    !aevumFac.isMember &&\n    !aevumFac.alreadyInvited &&\n    this.money.gte(40000000) &&\n    this.city == CityName.Aevum\n  ) {\n    invitedFactions.push(aevumFac);\n  }\n\n  //Ishima\n  const ishimaFac = Factions[\"Ishima\"];\n  if (\n    !ishimaFac.isBanned &&\n    !ishimaFac.isMember &&\n    !ishimaFac.alreadyInvited &&\n    this.money.gte(30000000) &&\n    this.city == CityName.Ishima\n  ) {\n    invitedFactions.push(ishimaFac);\n  }\n\n  //Volhaven\n  const volhavenFac = Factions[\"Volhaven\"];\n  if (\n    !volhavenFac.isBanned &&\n    !volhavenFac.isMember &&\n    !volhavenFac.alreadyInvited &&\n    this.money.gte(50000000) &&\n    this.city == CityName.Volhaven\n  ) {\n    invitedFactions.push(volhavenFac);\n  }\n\n  //Speakers for the Dead\n  const speakersforthedeadFac = Factions[\"Speakers for the Dead\"];\n  if (\n    !speakersforthedeadFac.isBanned &&\n    !speakersforthedeadFac.isMember &&\n    !speakersforthedeadFac.alreadyInvited &&\n    this.hacking_skill >= 100 &&\n    this.strength >= 300 &&\n    this.defense >= 300 &&\n    this.dexterity >= 300 &&\n    this.agility >= 300 &&\n    this.numPeopleKilled >= 30 &&\n    this.karma <= -45 &&\n    !allCompanies.includes(LocationName.Sector12CIA) &&\n    !allCompanies.includes(LocationName.Sector12NSA)\n  ) {\n    invitedFactions.push(speakersforthedeadFac);\n  }\n\n  //The Dark Army\n  const thedarkarmyFac = Factions[\"The Dark Army\"];\n  if (\n    !thedarkarmyFac.isBanned &&\n    !thedarkarmyFac.isMember &&\n    !thedarkarmyFac.alreadyInvited &&\n    this.hacking_skill >= 300 &&\n    this.strength >= 300 &&\n    this.defense >= 300 &&\n    this.dexterity >= 300 &&\n    this.agility >= 300 &&\n    this.city == CityName.Chongqing &&\n    this.numPeopleKilled >= 5 &&\n    this.karma <= -45 &&\n    !allCompanies.includes(LocationName.Sector12CIA) &&\n    !allCompanies.includes(LocationName.Sector12NSA)\n  ) {\n    invitedFactions.push(thedarkarmyFac);\n  }\n\n  //The Syndicate\n  const thesyndicateFac = Factions[\"The Syndicate\"];\n  if (\n    !thesyndicateFac.isBanned &&\n    !thesyndicateFac.isMember &&\n    !thesyndicateFac.alreadyInvited &&\n    this.hacking_skill >= 200 &&\n    this.strength >= 200 &&\n    this.defense >= 200 &&\n    this.dexterity >= 200 &&\n    this.agility >= 200 &&\n    (this.city == CityName.Aevum || this.city == CityName.Sector12) &&\n    this.money.gte(10000000) &&\n    this.karma <= -90 &&\n    !allCompanies.includes(LocationName.Sector12CIA) &&\n    !allCompanies.includes(LocationName.Sector12NSA)\n  ) {\n    invitedFactions.push(thesyndicateFac);\n  }\n\n  //Silhouette\n  const silhouetteFac = Factions[\"Silhouette\"];\n  if (\n    !silhouetteFac.isBanned &&\n    !silhouetteFac.isMember &&\n    !silhouetteFac.alreadyInvited &&\n    (allPositions.includes(\"Chief Technology Officer\") ||\n      allPositions.includes(\"Chief Financial Officer\") ||\n      allPositions.includes(\"Chief Executive Officer\")) &&\n    this.money.gte(15000000) &&\n    this.karma <= -22\n  ) {\n    invitedFactions.push(silhouetteFac);\n  }\n\n  //Tetrads\n  const tetradsFac = Factions[\"Tetrads\"];\n  if (\n    !tetradsFac.isBanned &&\n    !tetradsFac.isMember &&\n    !tetradsFac.alreadyInvited &&\n    (this.city == CityName.Chongqing || this.city == CityName.NewTokyo || this.city == CityName.Ishima) &&\n    this.strength >= 75 &&\n    this.defense >= 75 &&\n    this.dexterity >= 75 &&\n    this.agility >= 75 &&\n    this.karma <= -18\n  ) {\n    invitedFactions.push(tetradsFac);\n  }\n\n  //SlumSnakes\n  const slumsnakesFac = Factions[\"Slum Snakes\"];\n  if (\n    !slumsnakesFac.isBanned &&\n    !slumsnakesFac.isMember &&\n    !slumsnakesFac.alreadyInvited &&\n    this.strength >= 30 &&\n    this.defense >= 30 &&\n    this.dexterity >= 30 &&\n    this.agility >= 30 &&\n    this.karma <= -9 &&\n    this.money.gte(1000000)\n  ) {\n    invitedFactions.push(slumsnakesFac);\n  }\n\n  //Netburners\n  const netburnersFac = Factions[\"Netburners\"];\n  let totalHacknetRam = 0;\n  let totalHacknetCores = 0;\n  let totalHacknetLevels = 0;\n  for (let i = 0; i < this.hacknetNodes.length; ++i) {\n    const v = this.hacknetNodes[i];\n    if (typeof v === \"string\") {\n      const hserver = AllServers[v];\n      if (hserver instanceof Server) throw new Error(\"player hacknet server was not HacknetServer\");\n      totalHacknetLevels += hserver.level;\n      totalHacknetRam += hserver.maxRam;\n      totalHacknetCores += hserver.cores;\n    } else {\n      totalHacknetLevels += v.level;\n      totalHacknetRam += v.ram;\n      totalHacknetCores += v.cores;\n    }\n  }\n  if (\n    !netburnersFac.isBanned &&\n    !netburnersFac.isMember &&\n    !netburnersFac.alreadyInvited &&\n    this.hacking_skill >= 80 &&\n    totalHacknetRam >= 8 &&\n    totalHacknetCores >= 4 &&\n    totalHacknetLevels >= 100\n  ) {\n    invitedFactions.push(netburnersFac);\n  }\n\n  //Tian Di Hui\n  const tiandihuiFac = Factions[\"Tian Di Hui\"];\n  if (\n    !tiandihuiFac.isBanned &&\n    !tiandihuiFac.isMember &&\n    !tiandihuiFac.alreadyInvited &&\n    this.money.gte(1000000) &&\n    this.hacking_skill >= 50 &&\n    (this.city == CityName.Chongqing || this.city == CityName.NewTokyo || this.city == CityName.Ishima)\n  ) {\n    invitedFactions.push(tiandihuiFac);\n  }\n\n  //CyberSec\n  const cybersecFac = Factions[\"CyberSec\"];\n  const cyberSecIP = SpecialServerIps[SpecialServerNames.CyberSecServer];\n  if (typeof cyberSecIP !== \"string\") throw new Error(\"cybersec should be string\");\n  const cybersecServer = AllServers[cyberSecIP];\n  if (!(cybersecServer instanceof Server)) throw new Error(\"cybersec should be normal server\");\n  if (cybersecServer == null) {\n    console.error(\"Could not find CyberSec Server\");\n  } else if (\n    !cybersecFac.isBanned &&\n    !cybersecFac.isMember &&\n    cybersecServer.backdoorInstalled &&\n    !cybersecFac.alreadyInvited\n  ) {\n    invitedFactions.push(cybersecFac);\n  }\n\n  return invitedFactions;\n}\n\n/************* BitNodes **************/\nexport function setBitNodeNumber(this: IPlayer, n: number): void {\n  this.bitNodeN = n;\n}\n\nexport function queueAugmentation(this: IPlayer, name: string): void {\n  for (const i in this.queuedAugmentations) {\n    if (this.queuedAugmentations[i].name == name) {\n      console.warn(`tried to queue ${name} twice, this may be a bug`);\n      return;\n    }\n  }\n\n  for (const i in this.augmentations) {\n    if (this.augmentations[i].name == name) {\n      console.warn(`tried to queue ${name} twice, this may be a bug`);\n      return;\n    }\n  }\n\n  this.queuedAugmentations.push(new PlayerOwnedAugmentation(name));\n}\n\n/************* Coding Contracts **************/\nexport function gainCodingContractReward(this: IPlayer, reward: ICodingContractReward, difficulty = 1): string {\n  if (reward == null || reward.type == null || reward == null) {\n    return `No reward for this contract`;\n  }\n\n  /* eslint-disable no-case-declarations */\n  switch (reward.type) {\n    case CodingContractRewardType.FactionReputation:\n      if (reward.name == null || !(Factions[reward.name] instanceof Faction)) {\n        // If no/invalid faction was designated, just give rewards to all factions\n        reward.type = CodingContractRewardType.FactionReputationAll;\n        return this.gainCodingContractReward(reward);\n      }\n      const repGain = CONSTANTS.CodingContractBaseFactionRepGain * difficulty;\n      Factions[reward.name].playerReputation += repGain;\n      return `Gained ${repGain} faction reputation for ${reward.name}`;\n    case CodingContractRewardType.FactionReputationAll:\n      const totalGain = CONSTANTS.CodingContractBaseFactionRepGain * difficulty;\n\n      // Ignore Bladeburners and other special factions for this calculation\n      const specialFactions = [\"Bladeburners\"];\n      const factions = this.factions.slice().filter((f) => {\n        return !specialFactions.includes(f);\n      });\n\n      // If the player was only part of the special factions, we'll just give money\n      if (factions.length == 0) {\n        reward.type = CodingContractRewardType.Money;\n        return this.gainCodingContractReward(reward, difficulty);\n      }\n\n      const gainPerFaction = Math.floor(totalGain / factions.length);\n      for (const facName of factions) {\n        if (!(Factions[facName] instanceof Faction)) {\n          continue;\n        }\n        Factions[facName].playerReputation += gainPerFaction;\n      }\n      return `Gained ${gainPerFaction} reputation for each of the following factions: ${factions.toString()}`;\n      break;\n    case CodingContractRewardType.CompanyReputation: {\n      if (reward.name == null || !(Companies[reward.name] instanceof Company)) {\n        //If no/invalid company was designated, just give rewards to all factions\n        reward.type = CodingContractRewardType.FactionReputationAll;\n        return this.gainCodingContractReward(reward);\n      }\n      const repGain = CONSTANTS.CodingContractBaseCompanyRepGain * difficulty;\n      Companies[reward.name].playerReputation += repGain;\n      return `Gained ${repGain} company reputation for ${reward.name}`;\n    }\n    case CodingContractRewardType.Money:\n    default: {\n      const moneyGain = CONSTANTS.CodingContractBaseMoneyGain * difficulty * BitNodeMultipliers.CodingContractMoney;\n      this.gainMoney(moneyGain);\n      this.recordMoneySource(moneyGain, \"codingcontract\");\n      return `Gained ${numeralWrapper.formatMoney(moneyGain)}`;\n    }\n  }\n  /* eslint-enable no-case-declarations */\n}\n\nexport function travel(this: IPlayer, to: CityName): boolean {\n  if (Cities[to] == null) {\n    console.warn(`Player.travel() called with invalid city: ${to}`);\n    return false;\n  }\n  this.city = to;\n\n  return true;\n}\n\nexport function gotoLocation(this: IPlayer, to: LocationName): boolean {\n  if (Locations[to] == null) {\n    console.warn(`Player.gotoLocation() called with invalid location: ${to}`);\n    return false;\n  }\n  this.location = to;\n\n  return true;\n}\n\nexport function canAccessResleeving(this: IPlayer): boolean {\n  return this.bitNodeN === 10 || SourceFileFlags[10] > 0;\n}\n\nexport function giveExploit(this: IPlayer, exploit: Exploit): void {\n  if (!this.exploits.includes(exploit)) {\n    this.exploits.push(exploit);\n  }\n}\n\nexport function getIntelligenceBonus(this: IPlayer, weight: number): number {\n  return calculateIntelligenceBonus(this.intelligence, weight);\n}\n\nexport function getCasinoWinnings(this: IPlayer): number {\n  return this.moneySourceA.casino;\n}\n\nexport function getMult(this: IPlayer, name: string): number {\n  if (!this.hasOwnProperty(name)) return 1;\n  return (this as any)[name];\n}\n\nexport function setMult(this: IPlayer, name: string, mult: number): void {\n  if (!this.hasOwnProperty(name)) return;\n  (this as any)[name] = mult;\n}\n","import { IMap } from \"../types\";\n\nexport const EmployeePositions: IMap<string> = {\n  Operations: \"Operations\",\n  Engineer: \"Engineer\",\n  Business: \"Business\",\n  Management: \"Management\",\n  RandD: \"Research & Development\",\n  Training: \"Training\",\n  Unassigned: \"Unassigned\",\n};\n","import React from \"react\";\nimport { ResearchTree } from \"./ResearchTree\";\nimport { ICorporation } from \"./ICorporation\";\nimport { getBaseResearchTreeCopy, getProductIndustryResearchTreeCopy } from \"./data/BaseResearchTree\";\nimport { MoneyCost } from \"./ui/MoneyCost\";\n\ninterface IIndustryMap<T> {\n  [key: string]: T | undefined;\n  Energy: T;\n  Utilities: T;\n  Agriculture: T;\n  Fishing: T;\n  Mining: T;\n  Food: T;\n  Tobacco: T;\n  Chemical: T;\n  Pharmaceutical: T;\n  Computer: T;\n  Robotics: T;\n  Software: T;\n  Healthcare: T;\n  RealEstate: T;\n}\n\n// Map of official names for each Industry\nexport const Industries: IIndustryMap<string> = {\n  Energy: \"Energy\",\n  Utilities: \"Water Utilities\",\n  Agriculture: \"Agriculture\",\n  Fishing: \"Fishing\",\n  Mining: \"Mining\",\n  Food: \"Food\",\n  Tobacco: \"Tobacco\",\n  Chemical: \"Chemical\",\n  Pharmaceutical: \"Pharmaceutical\",\n  Computer: \"Computer Hardware\",\n  Robotics: \"Robotics\",\n  Software: \"Software\",\n  Healthcare: \"Healthcare\",\n  RealEstate: \"RealEstate\",\n};\n\n// Map of how much money it takes to start each industry\nexport const IndustryStartingCosts: IIndustryMap<number> = {\n  Energy: 225e9,\n  Utilities: 150e9,\n  Agriculture: 40e9,\n  Fishing: 80e9,\n  Mining: 300e9,\n  Food: 10e9,\n  Tobacco: 20e9,\n  Chemical: 70e9,\n  Pharmaceutical: 200e9,\n  Computer: 500e9,\n  Robotics: 1e12,\n  Software: 25e9,\n  Healthcare: 750e9,\n  RealEstate: 600e9,\n};\n\n// Map of description for each industry\nexport const IndustryDescriptions: IIndustryMap<(corp: ICorporation) => React.ReactElement> = {\n  Energy: (corp: ICorporation) => (\n    <>\n      Engage in the production and distribution of energy.\n      <br />\n      <br />\n      Starting cost: <MoneyCost money={IndustryStartingCosts.Energy} corp={corp} />\n      <br />\n      Recommended starting Industry: NO\n    </>\n  ),\n  Utilities: (corp: ICorporation) => (\n    <>\n      Distribute water and provide wastewater services.\n      <br />\n      <br />\n      Starting cost: <MoneyCost money={IndustryStartingCosts.Utilities} corp={corp} />\n      <br />\n      Recommended starting Industry: NO\n    </>\n  ),\n  Agriculture: (corp: ICorporation) => (\n    <>\n      Cultivate crops and breed livestock to produce food.\n      <br />\n      <br />\n      Starting cost: <MoneyCost money={IndustryStartingCosts.Agriculture} corp={corp} />\n      <br />\n      Recommended starting Industry: YES\n    </>\n  ),\n  Fishing: (corp: ICorporation) => (\n    <>\n      Produce food through the breeding and processing of fish and fish products.\n      <br />\n      <br />\n      Starting cost: <MoneyCost money={IndustryStartingCosts.Fishing} corp={corp} />\n      <br />\n      Recommended starting Industry: NO\n    </>\n  ),\n  Mining: (corp: ICorporation) => (\n    <>\n      Extract and process metals from the earth.\n      <br />\n      <br />\n      Starting cost: <MoneyCost money={IndustryStartingCosts.Mining} corp={corp} />\n      <br />\n      Recommended starting Industry: NO\n    </>\n  ),\n  Food: (corp: ICorporation) => (\n    <>\n      Create your own restaurants all around the world.\n      <br />\n      <br />\n      Starting cost: <MoneyCost money={IndustryStartingCosts.Food} corp={corp} />\n      <br />\n      Recommended starting Industry: YES\n    </>\n  ),\n  Tobacco: (corp: ICorporation) => (\n    <>\n      Create and distribute tobacco and tobacco-related products.\n      <br />\n      <br />\n      Starting cost: <MoneyCost money={IndustryStartingCosts.Tobacco} corp={corp} />\n      <br />\n      Recommended starting Industry: YES\n    </>\n  ),\n  Chemical: (corp: ICorporation) => (\n    <>\n      Produce industrial chemicals.\n      <br />\n      <br />\n      Starting cost: <MoneyCost money={IndustryStartingCosts.Chemical} corp={corp} />\n      <br />\n      Recommended starting Industry: NO\n    </>\n  ),\n  Pharmaceutical: (corp: ICorporation) => (\n    <>\n      Discover, develop, and create new pharmaceutical drugs.\n      <br />\n      <br />\n      Starting cost: <MoneyCost money={IndustryStartingCosts.Pharmaceutical} corp={corp} />\n      <br />\n      Recommended starting Industry: NO\n    </>\n  ),\n  Computer: (corp: ICorporation) => (\n    <>\n      Develop and manufacture new computer hardware and networking infrastructures.\n      <br />\n      <br />\n      Starting cost: <MoneyCost money={IndustryStartingCosts.Computer} corp={corp} />\n      <br />\n      Recommended starting Industry: NO\n    </>\n  ),\n  Robotics: (corp: ICorporation) => (\n    <>\n      Develop and create robots.\n      <br />\n      <br />\n      Starting cost: <MoneyCost money={IndustryStartingCosts.Robotics} corp={corp} />\n      <br />\n      Recommended starting Industry: NO\n    </>\n  ),\n  Software: (corp: ICorporation) => (\n    <>\n      Develop computer software and create AI Cores.\n      <br />\n      <br />\n      Starting cost: <MoneyCost money={IndustryStartingCosts.Software} corp={corp} />\n      <br />\n      Recommended starting Industry: YES\n    </>\n  ),\n  Healthcare: (corp: ICorporation) => (\n    <>\n      Create and manage hospitals.\n      <br />\n      <br />\n      Starting cost: <MoneyCost money={IndustryStartingCosts.Healthcare} corp={corp} />\n      <br />\n      Recommended starting Industry: NO\n    </>\n  ),\n  RealEstate: (corp: ICorporation) => (\n    <>\n      Develop and manage real estate properties.\n      <br />\n      <br />\n      Starting cost: <MoneyCost money={IndustryStartingCosts.RealEstate} corp={corp} />\n      <br />\n      Recommended starting Industry: NO\n    </>\n  ),\n};\n\n// Map of available Research for each Industry. This data is held in a\n// ResearchTree object\nexport const IndustryResearchTrees: IIndustryMap<ResearchTree> = {\n  Energy: getBaseResearchTreeCopy(),\n  Utilities: getBaseResearchTreeCopy(),\n  Agriculture: getBaseResearchTreeCopy(),\n  Fishing: getBaseResearchTreeCopy(),\n  Mining: getBaseResearchTreeCopy(),\n  Food: getProductIndustryResearchTreeCopy(),\n  Tobacco: getProductIndustryResearchTreeCopy(),\n  Chemical: getBaseResearchTreeCopy(),\n  Pharmaceutical: getProductIndustryResearchTreeCopy(),\n  Computer: getProductIndustryResearchTreeCopy(),\n  Robotics: getProductIndustryResearchTreeCopy(),\n  Software: getProductIndustryResearchTreeCopy(),\n  Healthcare: getProductIndustryResearchTreeCopy(),\n  RealEstate: getProductIndustryResearchTreeCopy(),\n};\n\nexport function resetIndustryResearchTrees(): void {\n  IndustryResearchTrees.Energy = getBaseResearchTreeCopy();\n  IndustryResearchTrees.Utilities = getBaseResearchTreeCopy();\n  IndustryResearchTrees.Agriculture = getBaseResearchTreeCopy();\n  IndustryResearchTrees.Fishing = getBaseResearchTreeCopy();\n  IndustryResearchTrees.Mining = getBaseResearchTreeCopy();\n  IndustryResearchTrees.Food = getBaseResearchTreeCopy();\n  IndustryResearchTrees.Tobacco = getBaseResearchTreeCopy();\n  IndustryResearchTrees.Chemical = getBaseResearchTreeCopy();\n  IndustryResearchTrees.Pharmaceutical = getBaseResearchTreeCopy();\n  IndustryResearchTrees.Computer = getBaseResearchTreeCopy();\n  IndustryResearchTrees.Robotics = getBaseResearchTreeCopy();\n  IndustryResearchTrees.Software = getBaseResearchTreeCopy();\n  IndustryResearchTrees.Healthcare = getBaseResearchTreeCopy();\n  IndustryResearchTrees.RealEstate = getBaseResearchTreeCopy();\n}\n","/**\n * Enum defining the different types of possible locations\n */\nexport enum LocationType {\n  Company,\n  Gym,\n  Hospital,\n  Slums,\n  Special, // This location has special options/activities (e.g. Bladeburner, Re-sleeving)\n  StockMarket,\n  TechVendor,\n  TravelAgency,\n  University,\n  Casino,\n}\n","export const BladeburnerConstants: {\n  CityNames: string[];\n  CyclesPerSecond: number;\n  StaminaGainPerSecond: number;\n  BaseStaminaLoss: number;\n  MaxStaminaToGainFactor: number;\n  DifficultyToTimeFactor: number;\n  DiffMultExponentialFactor: number;\n  DiffMultLinearFactor: number;\n  EffAgiLinearFactor: number;\n  EffDexLinearFactor: number;\n  EffAgiExponentialFactor: number;\n  EffDexExponentialFactor: number;\n  BaseRecruitmentTimeNeeded: number;\n  PopulationThreshold: number;\n  PopulationExponent: number;\n  ChaosThreshold: number;\n  BaseStatGain: number;\n  BaseIntGain: number;\n  ActionCountGrowthPeriod: number;\n  RankToFactionRepFactor: number;\n  RankNeededForFaction: number;\n  ContractSuccessesPerLevel: number;\n  OperationSuccessesPerLevel: number;\n  RanksPerSkillPoint: number;\n  ContractBaseMoneyGain: number;\n  HrcHpGain: number;\n  HrcStaminaGain: number;\n} = {\n  CityNames: [\"Aevum\", \"Chongqing\", \"Sector-12\", \"New Tokyo\", \"Ishima\", \"Volhaven\"],\n  CyclesPerSecond: 5, // Game cycle is 200 ms\n\n  StaminaGainPerSecond: 0.0085,\n  BaseStaminaLoss: 0.285, // Base stamina loss per action. Increased based on difficulty\n  MaxStaminaToGainFactor: 70000, // Max Stamina is divided by this to get bonus stamina gain\n\n  DifficultyToTimeFactor: 10, // Action Difficulty divided by this to get base action time\n\n  /**\n   * The difficulty multiplier affects stamina loss and hp loss of an action. Also affects\n   * experience gain. Its formula is:\n   * difficulty ^ exponentialFactor + difficulty / linearFactor\n   */\n  DiffMultExponentialFactor: 0.28,\n  DiffMultLinearFactor: 650,\n\n  /**\n   * These factors are used to calculate action time.\n   * They affect how much action time is reduced based on your agility and dexterity\n   */\n  EffAgiLinearFactor: 10e3,\n  EffDexLinearFactor: 10e3,\n  EffAgiExponentialFactor: 0.04,\n  EffDexExponentialFactor: 0.035,\n\n  BaseRecruitmentTimeNeeded: 300, // Base time needed (s) to complete a Recruitment action\n\n  PopulationThreshold: 1e9, // Population which determines baseline success rate\n  PopulationExponent: 0.7, // Exponent that influences how different populations affect success rate\n  ChaosThreshold: 50, // City chaos level after which it starts making tasks harder\n\n  BaseStatGain: 1, // Base stat gain per second\n  BaseIntGain: 0.003, // Base intelligence stat gain\n\n  ActionCountGrowthPeriod: 480, // Time (s) it takes for action count to grow by its specified value\n\n  RankToFactionRepFactor: 2, // Delta Faction Rep = this * Delta Rank\n  RankNeededForFaction: 25,\n\n  ContractSuccessesPerLevel: 3, // How many successes you need to level up a contract\n  OperationSuccessesPerLevel: 2.5, // How many successes you need to level up an op\n\n  RanksPerSkillPoint: 3, // How many ranks needed to get 1 Skill Point\n\n  ContractBaseMoneyGain: 250e3, // Base Money Gained per contract\n\n  HrcHpGain: 2, // HP Gained from Hyperbolic Regeneration chamber\n  HrcStaminaGain: 1, // Percentage Stamina gained from Hyperbolic Regeneration Chamber\n};\n","import { IMap } from \"../../types\";\n\nexport const LiteratureNames: IMap<string> = {\n  HackersStartingHandbook: \"hackers-starting-handbook.lit\",\n  CorporationManagementHandbook: \"corporation-management-handbook.lit\",\n  HistoryOfSynthoids: \"history-of-synthoids.lit\",\n  AGreenTomorrow: \"A-Green-Tomorrow.lit\",\n  AlphaOmega: \"alpha-omega.lit\",\n  SimulatedReality: \"simulated-reality.lit\",\n  BeyondMan: \"beyond-man.lit\",\n  BrighterThanTheSun: \"brighter-than-the-sun.lit\",\n  DemocracyIsDead: \"democracy-is-dead.lit\",\n  Sector12Crime: \"sector-12-crime.lit\",\n  ManAndMachine: \"man-and-machine.lit\",\n  SecretSocieties: \"secret-societies.lit\",\n  TheFailedFrontier: \"the-failed-frontier.lit\",\n  CodedIntelligence: \"coded-intelligence.lit\",\n  SyntheticMuscles: \"synthetic-muscles.lit\",\n  TensionsInTechRace: \"tensions-in-tech-race.lit\",\n  CostOfImmortality: \"cost-of-immortality.lit\",\n  TheHiddenWorld: \"the-hidden-world.lit\",\n  TheNewGod: \"the-new-god.lit\",\n  NewTriads: \"new-triads.lit\",\n  TheSecretWar: \"the-secret-war.lit\",\n};\n","// Class representing a single hackable Server\nimport { BaseServer } from \"./BaseServer\";\n\nimport { BitNodeMultipliers } from \"../BitNode/BitNodeMultipliers\";\n\nimport { createRandomString } from \"../utils/helpers/createRandomString\";\nimport { createRandomIp } from \"../utils/IPAddress\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\n\nexport interface IConstructorParams {\n  adminRights?: boolean;\n  hackDifficulty?: number;\n  hostname: string;\n  ip?: string;\n  isConnectedTo?: boolean;\n  maxRam?: number;\n  moneyAvailable?: number;\n  numOpenPortsRequired?: number;\n  organizationName?: string;\n  purchasedByPlayer?: boolean;\n  requiredHackingSkill?: number;\n  serverGrowth?: number;\n}\n\nexport class Server extends BaseServer {\n  // Flag indicating whether this server has a backdoor installed by a player\n  backdoorInstalled = false;\n\n  // Initial server security level\n  // (i.e. security level when the server was created)\n  baseDifficulty = 1;\n\n  // Server Security Level\n  hackDifficulty = 1;\n\n  // Minimum server security level that this server can be weakened to\n  minDifficulty = 1;\n\n  // How much money currently resides on the server and can be hacked\n  moneyAvailable = 0;\n\n  // Maximum amount of money that this server can hold\n  moneyMax = 0;\n\n  // Number of open ports required in order to gain admin/root access\n  numOpenPortsRequired = 5;\n\n  // How many ports are currently opened on the server\n  openPortCount = 0;\n\n  // Flag indicating wehther this is a purchased server\n  purchasedByPlayer = false;\n\n  // Hacking level required to hack this server\n  requiredHackingSkill = 1;\n\n  // Parameter that affects how effectively this server's money can\n  // be increased using the grow() Netscript function\n  serverGrowth = 1;\n\n  constructor(params: IConstructorParams = { hostname: \"\", ip: createRandomIp() }) {\n    super(params);\n\n    // \"hacknet-node-X\" hostnames are reserved for Hacknet Servers\n    if (this.hostname.startsWith(\"hacknet-node-\")) {\n      this.hostname = createRandomString(10);\n    }\n\n    this.purchasedByPlayer = params.purchasedByPlayer != null ? params.purchasedByPlayer : false;\n\n    //RAM, CPU speed and Scripts\n    this.maxRam = params.maxRam != null ? params.maxRam : 0; //GB\n\n    /* Hacking information (only valid for \"foreign\" aka non-purchased servers) */\n    this.requiredHackingSkill = params.requiredHackingSkill != null ? params.requiredHackingSkill : 1;\n    this.moneyAvailable =\n      params.moneyAvailable != null ? params.moneyAvailable * BitNodeMultipliers.ServerStartingMoney : 0;\n    this.moneyMax = 25 * this.moneyAvailable * BitNodeMultipliers.ServerMaxMoney;\n\n    //Hack Difficulty is synonymous with server security. Base Difficulty = Starting difficulty\n    this.hackDifficulty =\n      params.hackDifficulty != null ? params.hackDifficulty * BitNodeMultipliers.ServerStartingSecurity : 1;\n    this.baseDifficulty = this.hackDifficulty;\n    this.minDifficulty = Math.max(1, Math.round(this.hackDifficulty / 3));\n    this.serverGrowth = params.serverGrowth != null ? params.serverGrowth : 1; //Integer from 0 to 100. Affects money increase from grow()\n\n    //Port information, required for porthacking servers to get admin rights\n    this.numOpenPortsRequired = params.numOpenPortsRequired != null ? params.numOpenPortsRequired : 5;\n  }\n\n  /**\n   * Ensures that the server's difficulty (server security) doesn't get too high\n   */\n  capDifficulty(): void {\n    if (this.hackDifficulty < this.minDifficulty) {\n      this.hackDifficulty = this.minDifficulty;\n    }\n    if (this.hackDifficulty < 1) {\n      this.hackDifficulty = 1;\n    }\n\n    // Place some arbitrarily limit that realistically should never happen unless someone is\n    // screwing around with the game\n    if (this.hackDifficulty > 100) {\n      this.hackDifficulty = 100;\n    }\n  }\n\n  /**\n   * Change this server's minimum security\n   * @param n - Value by which to increase/decrease the server's minimum security\n   * @param perc - Whether it should be changed by a percentage, or a flat value\n   */\n  changeMinimumSecurity(n: number, perc = false): void {\n    if (perc) {\n      this.minDifficulty *= n;\n    } else {\n      this.minDifficulty += n;\n    }\n\n    // Server security cannot go below 1\n    this.minDifficulty = Math.max(1, this.minDifficulty);\n  }\n\n  /**\n   * Change this server's maximum money\n   * @param n - Value by which to change the server's maximum money\n   * @param perc - Whether it should be changed by a percentage, or a flat value\n   */\n  changeMaximumMoney(n: number, perc = false): void {\n    if (perc) {\n      this.moneyMax *= n;\n    } else {\n      this.moneyMax += n;\n    }\n  }\n\n  /**\n   * Strengthens a server's security level (difficulty) by the specified amount\n   */\n  fortify(amt: number): void {\n    this.hackDifficulty += amt;\n    this.capDifficulty();\n  }\n\n  /**\n   * Lowers the server's security level (difficulty) by the specified amount)\n   */\n  weaken(amt: number): void {\n    this.hackDifficulty -= amt * BitNodeMultipliers.ServerWeakenRate;\n    this.capDifficulty();\n  }\n\n  /**\n   * Serialize the current object to a JSON save state\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"Server\", this);\n  }\n\n  // Initializes a Server Object from a JSON save state\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Server {\n    return Generic_fromJSON(Server, value.data);\n  }\n}\n\nReviver.constructors.Server = Server;\n","/**\n * Generic helper/utility functions for the Hacknet mechanic:\n *  - Purchase nodes/upgrades\n *  - Calculating maximum number of upgrades\n *  - Processing Hacknet earnings\n *  - Updating Hash Manager capacity\n *  - Purchasing hash upgrades\n *\n * TODO Should probably split the different types of functions into their own modules\n */\nimport { HacknetNode } from \"./HacknetNode\";\nimport { calculateNodeCost } from \"./formulas/HacknetNodes\";\nimport { calculateServerCost } from \"./formulas/HacknetServers\";\nimport { HacknetNodeConstants, HacknetServerConstants } from \"./data/Constants\";\nimport { HacknetServer } from \"./HacknetServer\";\nimport { HashManager } from \"./HashManager\";\nimport { HashUpgrades } from \"./HashUpgrades\";\n\nimport { generateRandomContract } from \"../CodingContractGenerator\";\nimport { iTutorialSteps, iTutorialNextStep, ITutorial } from \"../InteractiveTutorial\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { AllServers } from \"../Server/AllServers\";\nimport { GetServerByHostname } from \"../Server/ServerHelpers\";\nimport { Server } from \"../Server/Server\";\nimport { SourceFileFlags } from \"../SourceFile/SourceFileFlags\";\n\n// Returns a boolean indicating whether the player has Hacknet Servers\n// (the upgraded form of Hacknet Nodes)\nexport function hasHacknetServers(player: IPlayer): boolean {\n  return player.bitNodeN === 9 || SourceFileFlags[9] > 0;\n}\n\nexport function purchaseHacknet(player: IPlayer): number {\n  /* INTERACTIVE TUTORIAL */\n  if (ITutorial.isRunning) {\n    if (ITutorial.currStep === iTutorialSteps.HacknetNodesIntroduction) {\n      iTutorialNextStep();\n    } else {\n      return -1;\n    }\n  }\n  /* END INTERACTIVE TUTORIAL */\n\n  const numOwned = player.hacknetNodes.length;\n  if (hasHacknetServers(player)) {\n    const cost = getCostOfNextHacknetServer(player);\n    if (isNaN(cost)) {\n      throw new Error(`Calculated cost of purchasing HacknetServer is NaN`);\n    }\n\n    if (!player.canAfford(cost)) {\n      return -1;\n    }\n    player.loseMoney(cost);\n    player.createHacknetServer();\n    updateHashManagerCapacity(player);\n\n    return numOwned;\n  } else {\n    const cost = getCostOfNextHacknetNode(player);\n    if (isNaN(cost)) {\n      throw new Error(`Calculated cost of purchasing HacknetNode is NaN`);\n    }\n\n    if (!player.canAfford(cost)) {\n      return -1;\n    }\n\n    // Auto generate a name for the Node\n    const name = \"hacknet-node-\" + numOwned;\n    const node = new HacknetNode(name, player.hacknet_node_money_mult);\n\n    player.loseMoney(cost);\n    player.hacknetNodes.push(node);\n\n    return numOwned;\n  }\n}\n\nexport function hasMaxNumberHacknetServers(player: IPlayer): boolean {\n  return hasHacknetServers(player) && player.hacknetNodes.length >= HacknetServerConstants.MaxServers;\n}\n\nexport function getCostOfNextHacknetNode(player: IPlayer): number {\n  return calculateNodeCost(player.hacknetNodes.length + 1, player.hacknet_node_purchase_cost_mult);\n}\n\nexport function getCostOfNextHacknetServer(player: IPlayer): number {\n  return calculateServerCost(player.hacknetNodes.length + 1, player.hacknet_node_purchase_cost_mult);\n}\n\n// Calculate the maximum number of times the Player can afford to upgrade a Hacknet Node's level\nexport function getMaxNumberLevelUpgrades(\n  player: IPlayer,\n  nodeObj: HacknetNode | HacknetServer,\n  maxLevel: number,\n): number {\n  if (maxLevel == null) {\n    throw new Error(`getMaxNumberLevelUpgrades() called without maxLevel arg`);\n  }\n\n  if (player.money.lt(nodeObj.calculateLevelUpgradeCost(1, player.hacknet_node_level_cost_mult))) {\n    return 0;\n  }\n\n  let min = 1;\n  let max = maxLevel - 1;\n  const levelsToMax = maxLevel - nodeObj.level;\n  if (player.money.gt(nodeObj.calculateLevelUpgradeCost(levelsToMax, player.hacknet_node_level_cost_mult))) {\n    return levelsToMax;\n  }\n\n  while (min <= max) {\n    const curr = ((min + max) / 2) | 0;\n    if (\n      curr !== maxLevel &&\n      player.money.gt(nodeObj.calculateLevelUpgradeCost(curr, player.hacknet_node_level_cost_mult)) &&\n      player.money.lt(nodeObj.calculateLevelUpgradeCost(curr + 1, player.hacknet_node_level_cost_mult))\n    ) {\n      return Math.min(levelsToMax, curr);\n    } else if (player.money.lt(nodeObj.calculateLevelUpgradeCost(curr, player.hacknet_node_level_cost_mult))) {\n      max = curr - 1;\n    } else if (player.money.gt(nodeObj.calculateLevelUpgradeCost(curr, player.hacknet_node_level_cost_mult))) {\n      min = curr + 1;\n    } else {\n      return Math.min(levelsToMax, curr);\n    }\n  }\n  return 0;\n}\n\n// Calculate the maximum number of times the Player can afford to upgrade a Hacknet Node's RAM\nexport function getMaxNumberRamUpgrades(\n  player: IPlayer,\n  nodeObj: HacknetNode | HacknetServer,\n  maxLevel: number,\n): number {\n  if (maxLevel == null) {\n    throw new Error(`getMaxNumberRamUpgrades() called without maxLevel arg`);\n  }\n\n  if (player.money.lt(nodeObj.calculateRamUpgradeCost(1, player.hacknet_node_ram_cost_mult))) {\n    return 0;\n  }\n\n  let levelsToMax;\n  if (nodeObj instanceof HacknetServer) {\n    levelsToMax = Math.round(Math.log2(maxLevel / nodeObj.maxRam));\n  } else {\n    levelsToMax = Math.round(Math.log2(maxLevel / nodeObj.ram));\n  }\n  if (player.money.gt(nodeObj.calculateRamUpgradeCost(levelsToMax, player.hacknet_node_ram_cost_mult))) {\n    return levelsToMax;\n  }\n\n  //We'll just loop until we find the max\n  for (let i = levelsToMax - 1; i >= 0; --i) {\n    if (player.money.gt(nodeObj.calculateRamUpgradeCost(i, player.hacknet_node_ram_cost_mult))) {\n      return i;\n    }\n  }\n  return 0;\n}\n\n// Calculate the maximum number of times the Player can afford to upgrade a Hacknet Node's cores\nexport function getMaxNumberCoreUpgrades(\n  player: IPlayer,\n  nodeObj: HacknetNode | HacknetServer,\n  maxLevel: number,\n): number {\n  if (maxLevel == null) {\n    throw new Error(`getMaxNumberCoreUpgrades() called without maxLevel arg`);\n  }\n\n  if (player.money.lt(nodeObj.calculateCoreUpgradeCost(1, player.hacknet_node_core_cost_mult))) {\n    return 0;\n  }\n\n  let min = 1;\n  let max = maxLevel - 1;\n  const levelsToMax = maxLevel - nodeObj.cores;\n  if (player.money.gt(nodeObj.calculateCoreUpgradeCost(levelsToMax, player.hacknet_node_core_cost_mult))) {\n    return levelsToMax;\n  }\n\n  // Use a binary search to find the max possible number of upgrades\n  while (min <= max) {\n    const curr = ((min + max) / 2) | 0;\n    if (\n      curr != maxLevel &&\n      player.money.gt(nodeObj.calculateCoreUpgradeCost(curr, player.hacknet_node_core_cost_mult)) &&\n      player.money.lt(nodeObj.calculateCoreUpgradeCost(curr + 1, player.hacknet_node_core_cost_mult))\n    ) {\n      return Math.min(levelsToMax, curr);\n    } else if (player.money.lt(nodeObj.calculateCoreUpgradeCost(curr, player.hacknet_node_core_cost_mult))) {\n      max = curr - 1;\n    } else if (player.money.gt(nodeObj.calculateCoreUpgradeCost(curr, player.hacknet_node_core_cost_mult))) {\n      min = curr + 1;\n    } else {\n      return Math.min(levelsToMax, curr);\n    }\n  }\n\n  return 0;\n}\n\n// Calculate the maximum number of times the Player can afford to upgrade a Hacknet Node's cache\nexport function getMaxNumberCacheUpgrades(player: IPlayer, nodeObj: HacknetServer, maxLevel: number): number {\n  if (maxLevel == null) {\n    throw new Error(`getMaxNumberCacheUpgrades() called without maxLevel arg`);\n  }\n\n  if (!player.canAfford(nodeObj.calculateCacheUpgradeCost(1))) {\n    return 0;\n  }\n\n  let min = 1;\n  let max = maxLevel - 1;\n  const levelsToMax = maxLevel - nodeObj.cache;\n  if (player.canAfford(nodeObj.calculateCacheUpgradeCost(levelsToMax))) {\n    return levelsToMax;\n  }\n\n  // Use a binary search to find the max possible number of upgrades\n  while (min <= max) {\n    const curr = ((min + max) / 2) | 0;\n    if (\n      curr != maxLevel &&\n      player.canAfford(nodeObj.calculateCacheUpgradeCost(curr)) &&\n      !player.canAfford(nodeObj.calculateCacheUpgradeCost(curr + 1))\n    ) {\n      return Math.min(levelsToMax, curr);\n    } else if (!player.canAfford(nodeObj.calculateCacheUpgradeCost(curr))) {\n      max = curr - 1;\n    } else if (player.canAfford(nodeObj.calculateCacheUpgradeCost(curr))) {\n      min = curr + 1;\n    } else {\n      return Math.min(levelsToMax, curr);\n    }\n  }\n\n  return 0;\n}\n\nexport function purchaseLevelUpgrade(player: IPlayer, node: HacknetNode | HacknetServer, levels = 1): boolean {\n  const sanitizedLevels = Math.round(levels);\n  const cost = node.calculateLevelUpgradeCost(sanitizedLevels, player.hacknet_node_level_cost_mult);\n  if (isNaN(cost) || cost <= 0 || sanitizedLevels < 0) {\n    return false;\n  }\n\n  const isServer = node instanceof HacknetServer;\n\n  // If we're at max level, return false\n  if (node.level >= (isServer ? HacknetServerConstants.MaxLevel : HacknetNodeConstants.MaxLevel)) {\n    return false;\n  }\n\n  // If the number of specified upgrades would exceed the max level, calculate\n  // the maximum number of upgrades and use that\n  if (node.level + sanitizedLevels > (isServer ? HacknetServerConstants.MaxLevel : HacknetNodeConstants.MaxLevel)) {\n    const diff = Math.max(0, (isServer ? HacknetServerConstants.MaxLevel : HacknetNodeConstants.MaxLevel) - node.level);\n    return purchaseLevelUpgrade(player, node, diff);\n  }\n\n  if (!player.canAfford(cost)) {\n    return false;\n  }\n\n  player.loseMoney(cost);\n  node.upgradeLevel(sanitizedLevels, player.hacknet_node_money_mult);\n\n  return true;\n}\n\nexport function purchaseRamUpgrade(player: IPlayer, node: HacknetNode | HacknetServer, levels = 1): boolean {\n  const sanitizedLevels = Math.round(levels);\n  const cost = node.calculateRamUpgradeCost(sanitizedLevels, player.hacknet_node_ram_cost_mult);\n  if (isNaN(cost) || cost <= 0 || sanitizedLevels < 0) {\n    return false;\n  }\n\n  if (node instanceof HacknetServer && node.maxRam >= HacknetServerConstants.MaxRam) {\n    return false;\n  }\n\n  if (node instanceof HacknetNode && node.ram >= HacknetNodeConstants.MaxRam) {\n    return false;\n  }\n\n  // If the number of specified upgrades would exceed the max RAM, calculate the\n  // max possible number of upgrades and use that\n  if (node instanceof HacknetServer) {\n    if (node.maxRam * Math.pow(2, sanitizedLevels) > HacknetServerConstants.MaxRam) {\n      const diff = Math.max(0, Math.log2(Math.round(HacknetServerConstants.MaxRam / node.maxRam)));\n      return purchaseRamUpgrade(player, node, diff);\n    }\n  } else if (node instanceof HacknetNode) {\n    if (node.ram * Math.pow(2, sanitizedLevels) > HacknetNodeConstants.MaxRam) {\n      const diff = Math.max(0, Math.log2(Math.round(HacknetNodeConstants.MaxRam / node.ram)));\n      return purchaseRamUpgrade(player, node, diff);\n    }\n  }\n\n  if (!player.canAfford(cost)) {\n    return false;\n  }\n\n  player.loseMoney(cost);\n  node.upgradeRam(sanitizedLevels, player.hacknet_node_money_mult);\n\n  return true;\n}\n\nexport function purchaseCoreUpgrade(player: IPlayer, node: HacknetNode | HacknetServer, levels = 1): boolean {\n  const sanitizedLevels = Math.round(levels);\n  const cost = node.calculateCoreUpgradeCost(sanitizedLevels, player.hacknet_node_core_cost_mult);\n  if (isNaN(cost) || cost <= 0 || sanitizedLevels < 0) {\n    return false;\n  }\n\n  const isServer = node instanceof HacknetServer;\n\n  // Fail if we're already at max\n  if (node.cores >= (isServer ? HacknetServerConstants.MaxCores : HacknetNodeConstants.MaxCores)) {\n    return false;\n  }\n\n  // If the specified number of upgrades would exceed the max Cores, calculate\n  // the max possible number of upgrades and use that\n  if (node.cores + sanitizedLevels > (isServer ? HacknetServerConstants.MaxCores : HacknetNodeConstants.MaxCores)) {\n    const diff = Math.max(0, (isServer ? HacknetServerConstants.MaxCores : HacknetNodeConstants.MaxCores) - node.cores);\n    return purchaseCoreUpgrade(player, node, diff);\n  }\n\n  if (!player.canAfford(cost)) {\n    return false;\n  }\n\n  player.loseMoney(cost);\n  node.upgradeCore(sanitizedLevels, player.hacknet_node_money_mult);\n\n  return true;\n}\n\nexport function purchaseCacheUpgrade(player: IPlayer, node: HacknetServer, levels = 1): boolean {\n  const sanitizedLevels = Math.round(levels);\n  const cost = node.calculateCacheUpgradeCost(sanitizedLevels);\n  if (isNaN(cost) || cost <= 0 || sanitizedLevels < 0) {\n    return false;\n  }\n\n  if (!(node instanceof HacknetServer)) {\n    console.warn(`purchaseCacheUpgrade() called for a non-HacknetNode`);\n    return false;\n  }\n\n  // Fail if we're already at max\n  if (node.cache + sanitizedLevels > HacknetServerConstants.MaxCache) {\n    const diff = Math.max(0, HacknetServerConstants.MaxCache - node.cache);\n    return purchaseCacheUpgrade(player, node, diff);\n  }\n\n  if (!player.canAfford(cost)) {\n    return false;\n  }\n\n  player.loseMoney(cost);\n  node.upgradeCache(sanitizedLevels);\n\n  return true;\n}\n\nexport function processHacknetEarnings(player: IPlayer, numCycles: number): number {\n  // Determine if player has Hacknet Nodes or Hacknet Servers, then\n  // call the appropriate function\n  if (player.hacknetNodes.length === 0) {\n    return 0;\n  }\n  if (hasHacknetServers(player)) {\n    return processAllHacknetServerEarnings(player, numCycles);\n  } else if (player.hacknetNodes[0] instanceof HacknetNode) {\n    return processAllHacknetNodeEarnings(player, numCycles);\n  } else {\n    return 0;\n  }\n}\n\nfunction processAllHacknetNodeEarnings(player: IPlayer, numCycles: number): number {\n  let total = 0;\n  for (let i = 0; i < player.hacknetNodes.length; ++i) {\n    const node = player.hacknetNodes[i];\n    if (typeof node === \"string\") throw new Error(\"player node should not be ip string\");\n    total += processSingleHacknetNodeEarnings(player, numCycles, node);\n  }\n\n  return total;\n}\n\nfunction processSingleHacknetNodeEarnings(player: IPlayer, numCycles: number, nodeObj: HacknetNode): number {\n  const totalEarnings = nodeObj.process(numCycles);\n  player.gainMoney(totalEarnings);\n  player.recordMoneySource(totalEarnings, \"hacknetnode\");\n\n  return totalEarnings;\n}\n\nfunction processAllHacknetServerEarnings(player: IPlayer, numCycles: number): number {\n  if (!(player.hashManager instanceof HashManager)) {\n    throw new Error(`Player does not have a HashManager (should be in 'hashManager' prop)`);\n  }\n\n  let hashes = 0;\n  for (let i = 0; i < player.hacknetNodes.length; ++i) {\n    // hacknetNodes array only contains the IP addresses of the servers.\n    // Also, update the hash rate before processing\n    const ip = player.hacknetNodes[i];\n    if (ip instanceof HacknetNode) throw new Error(`player nodes should not be HacketNode`);\n    const hserver = AllServers[ip];\n    if (hserver instanceof Server) throw new Error(`player nodes shoud not be Server`);\n    hserver.updateHashRate(player.hacknet_node_money_mult);\n    const h = hserver.process(numCycles);\n    hserver.totalHashesGenerated += h;\n    hashes += h;\n  }\n\n  player.hashManager.storeHashes(hashes);\n\n  return hashes;\n}\n\nexport function updateHashManagerCapacity(player: IPlayer): void {\n  if (!(player.hashManager instanceof HashManager)) {\n    console.error(`Player does not have a HashManager`);\n    return;\n  }\n\n  const nodes = player.hacknetNodes;\n  if (nodes.length === 0) {\n    player.hashManager.updateCapacity(0);\n    return;\n  }\n\n  let total = 0;\n  for (let i = 0; i < nodes.length; ++i) {\n    if (typeof nodes[i] !== \"string\") {\n      player.hashManager.updateCapacity(0);\n      return;\n    }\n    const ip = nodes[i];\n    if (ip instanceof HacknetNode) throw new Error(`player nodes should be string but isn't`);\n    const h = AllServers[ip];\n    if (!(h instanceof HacknetServer)) {\n      player.hashManager.updateCapacity(0);\n      return;\n    }\n\n    total += h.hashCapacity;\n  }\n\n  player.hashManager.updateCapacity(total);\n}\n\nexport function purchaseHashUpgrade(player: IPlayer, upgName: string, upgTarget: string): boolean {\n  if (!(player.hashManager instanceof HashManager)) {\n    console.error(`Player does not have a HashManager`);\n    return false;\n  }\n\n  // HashManager handles the transaction. This just needs to actually implement\n  // the effects of the upgrade\n  if (player.hashManager.upgrade(upgName)) {\n    const upg = HashUpgrades[upgName];\n\n    switch (upgName) {\n      case \"Sell for Money\": {\n        player.gainMoney(upg.value);\n        player.recordMoneySource(upg.value, \"hacknetnode\");\n        break;\n      }\n      case \"Sell for Corporation Funds\": {\n        const corp = player.corporation;\n        if (corp === null) {\n          player.hashManager.refundUpgrade(upgName);\n          return false;\n        }\n        corp.funds = corp.funds.plus(upg.value);\n        break;\n      }\n      case \"Reduce Minimum Security\": {\n        try {\n          const target = GetServerByHostname(upgTarget);\n          if (target == null) {\n            console.error(`Invalid target specified in purchaseHashUpgrade(): ${upgTarget}`);\n            return false;\n          }\n          if (!(target instanceof Server)) throw new Error(`'${upgTarget}' is not a normal server.`);\n\n          target.changeMinimumSecurity(upg.value, true);\n        } catch (e) {\n          player.hashManager.refundUpgrade(upgName);\n          return false;\n        }\n        break;\n      }\n      case \"Increase Maximum Money\": {\n        try {\n          const target = GetServerByHostname(upgTarget);\n          if (target == null) {\n            console.error(`Invalid target specified in purchaseHashUpgrade(): ${upgTarget}`);\n            return false;\n          }\n          if (!(target instanceof Server)) throw new Error(`'${upgTarget}' is not a normal server.`);\n\n          target.changeMaximumMoney(upg.value, true);\n        } catch (e) {\n          player.hashManager.refundUpgrade(upgName);\n          return false;\n        }\n        break;\n      }\n      case \"Improve Studying\": {\n        // Multiplier handled by HashManager\n        break;\n      }\n      case \"Improve Gym Training\": {\n        // Multiplier handled by HashManager\n        break;\n      }\n      case \"Exchange for Corporation Research\": {\n        // This will throw if player doesn't have a corporation\n        const corp = player.corporation;\n        if (corp === null) {\n          player.hashManager.refundUpgrade(upgName);\n          return false;\n        }\n        for (const division of corp.divisions) {\n          division.sciResearch.qty += upg.value;\n        }\n        break;\n      }\n      case \"Exchange for Bladeburner Rank\": {\n        // This will throw if player isnt in Bladeburner\n        const bladeburner = player.bladeburner;\n        if (bladeburner === null) {\n          player.hashManager.refundUpgrade(upgName);\n          return false;\n        }\n        bladeburner.changeRank(player, upg.value);\n        break;\n      }\n      case \"Exchange for Bladeburner SP\": {\n        // This will throw if player isnt in Bladeburner\n        const bladeburner = player.bladeburner;\n        if (bladeburner === null) {\n          player.hashManager.refundUpgrade(upgName);\n          return false;\n        }\n\n        bladeburner.skillPoints += upg.value;\n        break;\n      }\n      case \"Generate Coding Contract\": {\n        generateRandomContract();\n        break;\n      }\n      default:\n        console.warn(`Unrecognized upgrade name ${upgName}. Upgrade has no effect`);\n        player.hashManager.refundUpgrade(upgName);\n        return false;\n    }\n\n    return true;\n  }\n\n  return false;\n}\n","// Constructs all CompanyPosition objects using the metadata in data/companypositions.ts\nimport { companiesMetadata } from \"./data/CompaniesMetadata\";\nimport { Company, IConstructorParams } from \"./Company\";\nimport { IMap } from \"../types\";\nimport { Reviver } from \"../utils/JSONReviver\";\n\nexport let Companies: IMap<Company> = {};\n\nfunction addCompany(params: IConstructorParams): void {\n  if (Companies[params.name] != null) {\n    console.warn(`Duplicate Company Position being defined: ${params.name}`);\n  }\n  Companies[params.name] = new Company(params);\n}\n\n// Used to initialize new Company objects for the Companies map\n// Called when creating new game or after a prestige/reset\nexport function initCompanies(): void {\n  // Save Old Company data for 'favor'\n  const oldCompanies = Companies;\n\n  // Re-construct all Companies\n  Companies = {};\n  companiesMetadata.forEach((e) => {\n    addCompany(e);\n  });\n\n  // Reset data\n  for (const companyName in Companies) {\n    const company = Companies[companyName];\n    const oldCompany = oldCompanies[companyName];\n    if (!(oldCompany instanceof Company)) {\n      // New game, so no OldCompanies data\n      company.favor = 0;\n    } else {\n      company.favor = oldCompanies[companyName].favor;\n      if (isNaN(company.favor)) {\n        company.favor = 0;\n      }\n    }\n  }\n}\n\n// Used to load Companies map from a save\nexport function loadCompanies(saveString: string): void {\n  Companies = JSON.parse(saveString, Reviver);\n}\n\n// Utility function to check if a string is valid company name\nexport function companyExists(name: string): boolean {\n  return Companies.hasOwnProperty(name);\n}\n","// Contains an array containing information about the player's source files\n// Array[n] returns what level the player has of Source-File N.\n\nimport { CONSTANTS } from \"../Constants\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\n\nexport const SourceFileFlags: number[] = Array(CONSTANTS.TotalNumBitNodes + 1); // Skip index 0\n\nexport function updateSourceFileFlags(p: IPlayer): void {\n  for (let i = 0; i < SourceFileFlags.length; ++i) {\n    SourceFileFlags[i] = 0;\n  }\n\n  for (let i = 0; i < p.sourceFiles.length; ++i) {\n    const sf = p.sourceFiles[i];\n    SourceFileFlags[sf.n] = sf.lvl;\n  }\n}\n","import { IMap } from \"../types\";\nimport { Reviver, Generic_toJSON, Generic_fromJSON } from \"../utils/JSONReviver\";\n\n/* Holds IP of Special Servers */\nexport const SpecialServerNames: IMap<string> = {\n  FulcrumSecretTechnologies: \"Fulcrum Secret Technologies Server\",\n  CyberSecServer: \"CyberSec Server\",\n  NiteSecServer: \"NiteSec Server\",\n  TheBlackHandServer: \"The Black Hand Server\",\n  BitRunnersServer: \"BitRunners Server\",\n  TheDarkArmyServer: \"The Dark Army Server\",\n  DaedalusServer: \"Daedalus Server\",\n  WorldDaemon: \"w0r1d_d43m0n\",\n};\n\nexport class SpecialServerIpsMap {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  [key: string]: Function | string;\n\n  addIp(name: string, ip: string): void {\n    this[name] = ip;\n  }\n\n  getIp(name: string): string {\n    return this[name] as string;\n  }\n\n  // Serialize the current object to a JSON save state\n  toJSON(): any {\n    return Generic_toJSON(\"SpecialServerIpsMap\", this);\n  }\n\n  // Initializes a SpecialServerIpsMap Object from a JSON save state\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): SpecialServerIpsMap {\n    return Generic_fromJSON(SpecialServerIpsMap, value.data);\n  }\n}\n\nReviver.constructors.SpecialServerIpsMap = SpecialServerIpsMap;\n\nexport let SpecialServerIps: SpecialServerIpsMap = new SpecialServerIpsMap();\n\nexport function prestigeSpecialServerIps(): void {\n  for (const member in SpecialServerIps) {\n    delete SpecialServerIps[member];\n  }\n\n  SpecialServerIps = new SpecialServerIpsMap();\n}\n\nexport function loadSpecialServerIps(saveString: string): void {\n  SpecialServerIps = JSON.parse(saveString, Reviver);\n}\n\nexport function initSpecialServerIps(): void {\n  SpecialServerIps = new SpecialServerIpsMap();\n}\n","export enum PositionTypes {\n  Long = \"L\",\n  Short = \"S\",\n}\n","import { ICorporation } from \"./ICorporation\";\nimport { IIndustry } from \"./IIndustry\";\nimport { IndustryStartingCosts, IndustryResearchTrees } from \"./IndustryData\";\nimport { Industry } from \"./Industry\";\nimport { CorporationConstants } from \"./data/Constants\";\nimport { OfficeSpace } from \"./OfficeSpace\";\nimport { Material } from \"./Material\";\nimport { Product } from \"./Product\";\nimport { Warehouse } from \"./Warehouse\";\nimport { CorporationUnlockUpgrade } from \"./data/CorporationUnlockUpgrades\";\nimport { CorporationUpgrade } from \"./data/CorporationUpgrades\";\nimport { Cities } from \"../Locations/Cities\";\nimport { EmployeePositions } from \"./EmployeePositions\";\nimport { Employee } from \"./Employee\";\nimport { IndustryUpgrades } from \"./IndustryUpgrades\";\nimport { ResearchMap } from \"./ResearchMap\";\n\nexport function NewIndustry(corporation: ICorporation, industry: string, name: string): void {\n  for (let i = 0; i < corporation.divisions.length; ++i) {\n    if (corporation.divisions[i].name === name) {\n      throw new Error(\"This division name is already in use!\");\n      return;\n    }\n  }\n\n  const cost = IndustryStartingCosts[industry];\n  if (cost === undefined) {\n    throw new Error(`Invalid industry: '${industry}'`);\n  }\n  if (corporation.funds.lt(cost)) {\n    throw new Error(\"Not enough money to create a new division in this industry\");\n  } else if (name === \"\") {\n    throw new Error(\"New division must have a name!\");\n  } else {\n    corporation.funds = corporation.funds.minus(cost);\n    corporation.divisions.push(\n      new Industry({\n        corp: corporation,\n        name: name,\n        type: industry,\n      }),\n    );\n  }\n}\n\nexport function NewCity(corporation: ICorporation, division: IIndustry, city: string): void {\n  if (corporation.funds.lt(CorporationConstants.OfficeInitialCost)) {\n    throw new Error(\"You don't have enough company funds to open a new office!\");\n  } else {\n    corporation.funds = corporation.funds.minus(CorporationConstants.OfficeInitialCost);\n    division.offices[city] = new OfficeSpace({\n      loc: city,\n      size: CorporationConstants.OfficeInitialSize,\n    });\n  }\n}\n\nexport function UnlockUpgrade(corporation: ICorporation, upgrade: CorporationUnlockUpgrade): void {\n  if (corporation.funds.lt(upgrade[1])) {\n    throw new Error(\"Insufficient funds\");\n  }\n  corporation.unlock(upgrade);\n}\n\nexport function LevelUpgrade(corporation: ICorporation, upgrade: CorporationUpgrade): void {\n  const baseCost = upgrade[1];\n  const priceMult = upgrade[2];\n  const level = corporation.upgrades[upgrade[0]];\n  const cost = baseCost * Math.pow(priceMult, level);\n  if (corporation.funds.lt(cost)) {\n    throw new Error(\"Insufficient funds\");\n  } else {\n    corporation.upgrade(upgrade);\n  }\n}\n\nexport function IssueDividends(corporation: ICorporation, percent: number): void {\n  if (isNaN(percent) || percent < 0 || percent > CorporationConstants.DividendMaxPercentage) {\n    throw new Error(`Invalid value. Must be an integer between 0 and ${CorporationConstants.DividendMaxPercentage}`);\n  }\n\n  corporation.dividendPercentage = percent * 100;\n}\n\nexport function SellMaterial(mat: Material, amt: string, price: string): void {\n  if (price === \"\") price = \"0\";\n  if (amt === \"\") amt = \"0\";\n  let cost = price.replace(/\\s+/g, \"\");\n  cost = cost.replace(/[^-()\\d/*+.MP]/g, \"\"); //Sanitize cost\n  let temp = cost.replace(/MP/g, mat.bCost + \"\");\n  try {\n    temp = eval(temp);\n  } catch (e) {\n    throw new Error(\"Invalid value or expression for sell price field: \" + e);\n  }\n\n  if (temp == null || isNaN(parseFloat(temp))) {\n    throw new Error(\"Invalid value or expression for sell price field\");\n  }\n\n  if (cost.includes(\"MP\")) {\n    mat.sCost = cost; //Dynamically evaluated\n  } else {\n    mat.sCost = temp;\n  }\n\n  //Parse quantity\n  if (amt.includes(\"MAX\") || amt.includes(\"PROD\")) {\n    let q = amt.replace(/\\s+/g, \"\");\n    q = q.replace(/[^-()\\d/*+.MAXPROD]/g, \"\");\n    let tempQty = q.replace(/MAX/g, \"1\");\n    tempQty = tempQty.replace(/PROD/g, \"1\");\n    try {\n      tempQty = eval(tempQty);\n    } catch (e) {\n      throw new Error(\"Invalid value or expression for sell price field: \" + e);\n    }\n\n    if (tempQty == null || isNaN(parseFloat(tempQty))) {\n      throw new Error(\"Invalid value or expression for sell price field\");\n    }\n\n    mat.sllman[0] = true;\n    mat.sllman[1] = q; //Use sanitized input\n  } else if (isNaN(parseFloat(amt))) {\n    throw new Error(\"Invalid value for sell quantity field! Must be numeric or 'MAX'\");\n  } else {\n    let q = parseFloat(amt);\n    if (isNaN(q)) {\n      q = 0;\n    }\n    if (q === 0) {\n      mat.sllman[0] = false;\n      mat.sllman[1] = 0;\n    } else {\n      mat.sllman[0] = true;\n      mat.sllman[1] = q;\n    }\n  }\n}\n\nexport function SellProduct(product: Product, city: string, amt: string, price: string, all: boolean): void {\n  //Parse price\n  if (price.includes(\"MP\")) {\n    //Dynamically evaluated quantity. First test to make sure its valid\n    //Sanitize input, then replace dynamic variables with arbitrary numbers\n    price = price.replace(/\\s+/g, \"\");\n    price = price.replace(/[^-()\\d/*+.MP]/g, \"\");\n    let temp = price.replace(/MP/g, \"1\");\n    try {\n      temp = eval(temp);\n    } catch (e) {\n      throw new Error(\"Invalid value or expression for sell quantity field: \" + e);\n    }\n    if (temp == null || isNaN(parseFloat(temp))) {\n      throw new Error(\"Invalid value or expression for sell quantity field.\");\n    }\n    product.sCost = price; //Use sanitized price\n  } else {\n    const cost = parseFloat(price);\n    if (isNaN(cost)) {\n      throw new Error(\"Invalid value for sell price field\");\n    }\n    product.sCost = cost;\n  }\n\n  // Array of all cities. Used later\n  const cities = Object.keys(Cities);\n\n  // Parse quantity\n  if (amt.includes(\"MAX\") || amt.includes(\"PROD\")) {\n    //Dynamically evaluated quantity. First test to make sure its valid\n    let qty = amt.replace(/\\s+/g, \"\");\n    qty = qty.replace(/[^-()\\d/*+.MAXPROD]/g, \"\");\n    let temp = qty.replace(/MAX/g, \"1\");\n    temp = temp.replace(/PROD/g, \"1\");\n    try {\n      temp = eval(temp);\n    } catch (e) {\n      throw new Error(\"Invalid value or expression for sell price field: \" + e);\n    }\n\n    if (temp == null || isNaN(parseFloat(temp))) {\n      throw new Error(\"Invalid value or expression for sell price field\");\n    }\n    if (all) {\n      for (let i = 0; i < cities.length; ++i) {\n        const tempCity = cities[i];\n        product.sllman[tempCity][0] = true;\n        product.sllman[tempCity][1] = qty; //Use sanitized input\n      }\n    } else {\n      product.sllman[city][0] = true;\n      product.sllman[city][1] = qty; //Use sanitized input\n    }\n  } else if (isNaN(parseFloat(amt))) {\n    throw new Error(\"Invalid value for sell quantity field! Must be numeric\");\n  } else {\n    let qty = parseFloat(amt);\n    if (isNaN(qty)) {\n      qty = 0;\n    }\n    if (qty === 0) {\n      if (all) {\n        for (let i = 0; i < cities.length; ++i) {\n          const tempCity = cities[i];\n          product.sllman[tempCity][0] = false;\n          product.sllman[tempCity][1] = \"\";\n        }\n      } else {\n        product.sllman[city][0] = false;\n        product.sllman[city][1] = \"\";\n      }\n    } else {\n      if (all) {\n        for (let i = 0; i < cities.length; ++i) {\n          const tempCity = cities[i];\n          product.sllman[tempCity][0] = true;\n          product.sllman[tempCity][1] = qty;\n        }\n      } else {\n        product.sllman[city][0] = true;\n        product.sllman[city][1] = qty;\n      }\n    }\n  }\n}\n\nexport function SetSmartSupply(warehouse: Warehouse, smartSupply: boolean): void {\n  warehouse.smartSupplyEnabled = smartSupply;\n}\n\nexport function SetSmartSupplyUseLeftovers(warehouse: Warehouse, material: Material, useLeftover: boolean): void {\n  if (!Object.keys(warehouse.smartSupplyUseLeftovers).includes(material.name))\n    throw new Error(`Invalid material '${material.name}'`);\n  warehouse.smartSupplyUseLeftovers[material.name] = useLeftover;\n}\n\nexport function BuyMaterial(material: Material, amt: number): void {\n  if (isNaN(amt)) {\n    throw new Error(`Invalid amount '${amt}' to buy material '${material.name}'`);\n  }\n  material.buy = amt;\n}\n\nexport function AssignJob(employee: Employee, job: string): void {\n  if (!Object.values(EmployeePositions).includes(job)) throw new Error(`'${job}' is not a valid job.`);\n  employee.pos = job;\n}\n\nexport function UpgradeOfficeSize(corp: ICorporation, office: OfficeSpace, size: number): void {\n  const initialPriceMult = Math.round(office.size / CorporationConstants.OfficeInitialSize);\n  const costMultiplier = 1.09;\n  // Calculate cost to upgrade size by 15 employees\n  let mult = 0;\n  for (let i = 0; i < size / CorporationConstants.OfficeInitialSize; ++i) {\n    mult += Math.pow(costMultiplier, initialPriceMult + i);\n  }\n  const cost = CorporationConstants.OfficeInitialCost * mult;\n  if (corp.funds.lt(cost)) return;\n  office.size += size;\n  corp.funds = corp.funds.minus(cost);\n}\n\nexport function ThrowParty(corp: ICorporation, office: OfficeSpace, costPerEmployee: number): number {\n  const totalCost = costPerEmployee * office.employees.length;\n  if (corp.funds.lt(totalCost)) return 0;\n  corp.funds = corp.funds.minus(totalCost);\n  let mult = 0;\n  for (let i = 0; i < office.employees.length; ++i) {\n    mult = office.employees[i].throwParty(costPerEmployee);\n  }\n\n  return mult;\n}\n\nexport function PurchaseWarehouse(corp: ICorporation, division: IIndustry, city: string): void {\n  if (corp.funds.lt(CorporationConstants.WarehouseInitialCost)) return;\n  if (division.warehouses[city] instanceof Warehouse) return;\n  division.warehouses[city] = new Warehouse({\n    corp: corp,\n    industry: division,\n    loc: city,\n    size: CorporationConstants.WarehouseInitialSize,\n  });\n  corp.funds = corp.funds.minus(CorporationConstants.WarehouseInitialCost);\n}\n\nexport function UpgradeWarehouse(corp: ICorporation, division: IIndustry, warehouse: Warehouse): void {\n  const sizeUpgradeCost = CorporationConstants.WarehouseUpgradeBaseCost * Math.pow(1.07, warehouse.level + 1);\n  ++warehouse.level;\n  warehouse.updateSize(corp, division);\n  corp.funds = corp.funds.minus(sizeUpgradeCost);\n}\n\nexport function BuyCoffee(corp: ICorporation, division: IIndustry, office: OfficeSpace): void {\n  const upgrade = IndustryUpgrades[0];\n  const cost = office.employees.length * upgrade[1];\n  if (corp.funds.lt(cost)) return;\n  corp.funds = corp.funds.minus(cost);\n  division.upgrade(upgrade, {\n    corporation: corp,\n    office: office,\n  });\n}\n\nexport function HireAdVert(corp: ICorporation, division: IIndustry, office: OfficeSpace): void {\n  const upgrade = IndustryUpgrades[1];\n  const cost = upgrade[1] * Math.pow(upgrade[2], division.upgrades[1]);\n  if (corp.funds.lt(cost)) return;\n  corp.funds = corp.funds.minus(cost);\n  division.upgrade(upgrade, {\n    corporation: corp,\n    office: office,\n  });\n}\n\nexport function MakeProduct(\n  corp: ICorporation,\n  division: IIndustry,\n  city: string,\n  productName: string,\n  designInvest: number,\n  marketingInvest: number,\n): void {\n  if (designInvest < 0) {\n    designInvest = 0;\n  }\n  if (marketingInvest < 0) {\n    marketingInvest = 0;\n  }\n  if (productName == null || productName === \"\") {\n    throw new Error(\"You must specify a name for your product!\");\n  }\n  if (isNaN(designInvest)) {\n    throw new Error(\"Invalid value for design investment\");\n  }\n  if (isNaN(marketingInvest)) {\n    throw new Error(\"Invalid value for marketing investment\");\n  }\n  if (corp.funds.lt(designInvest + marketingInvest)) {\n    throw new Error(\"You don't have enough company funds to make this large of an investment\");\n  }\n  const product = new Product({\n    name: productName.replace(/[<>]/g, \"\"), //Sanitize for HTMl elements\n    createCity: city,\n    designCost: designInvest,\n    advCost: marketingInvest,\n  });\n  if (division.products[product.name] instanceof Product) {\n    throw new Error(`You already have a product with this name!`);\n  }\n  corp.funds = corp.funds.minus(designInvest + marketingInvest);\n  division.products[product.name] = product;\n}\n\nexport function Research(division: IIndustry, researchName: string): void {\n  const researchTree = IndustryResearchTrees[division.type];\n  if (researchTree === undefined) throw new Error(`No research tree for industry '${division.type}'`);\n  const allResearch = researchTree.getAllNodes();\n  if (!allResearch.includes(researchName)) throw new Error(`No research named '${researchName}'`);\n  const research = ResearchMap[researchName];\n\n  if (division.sciResearch.qty < research.cost)\n    throw new Error(`You do not have enough Scientific Research for ${research.name}`);\n  division.sciResearch.qty -= research.cost;\n\n  // Get the Node from the Research Tree and set its 'researched' property\n  researchTree.research(researchName);\n  division.researched[researchName] = true;\n}\n\nexport function ExportMaterial(divisionName: string, cityName: string, material: Material, amt: string): void {\n  // Sanitize amt\n  let sanitizedAmt = amt.replace(/\\s+/g, \"\");\n  sanitizedAmt = sanitizedAmt.replace(/[^-()\\d/*+.MAX]/g, \"\");\n  let temp = sanitizedAmt.replace(/MAX/g, \"1\");\n  try {\n    temp = eval(temp);\n  } catch (e) {\n    throw new Error(\"Invalid expression entered for export amount: \" + e);\n  }\n\n  const n = parseFloat(temp);\n\n  if (n == null || isNaN(n) || n < 0) {\n    throw new Error(\"Invalid amount entered for export\");\n  }\n  const exportObj = { ind: divisionName, city: cityName, amt: sanitizedAmt };\n  material.exp.push(exportObj);\n}\n\nexport function CancelExportMaterial(divisionName: string, cityName: string, material: Material, amt: string): void {\n  for (let i = 0; i < material.exp.length; ++i) {\n    if (material.exp[i].ind !== divisionName || material.exp[i].city !== cityName || material.exp[i].amt !== amt)\n      continue;\n    material.exp.splice(i, 1);\n    break;\n  }\n}\n\nexport function LimitProductProduction(product: Product, cityName: string, qty: number): void {\n  if (qty < 0 || isNaN(qty)) {\n    product.prdman[cityName][0] = false;\n  } else {\n    product.prdman[cityName][0] = true;\n    product.prdman[cityName][1] = qty;\n  }\n}\n\nexport function SetMaterialMarketTA1(material: Material, on: boolean): void {\n  material.marketTa1 = on;\n}\n\nexport function SetMaterialMarketTA2(material: Material, on: boolean): void {\n  material.marketTa2 = on;\n}\n\nexport function SetProductMarketTA1(product: Product, on: boolean): void {\n  product.marketTa1 = on;\n}\n\nexport function SetProductMarketTA2(product: Product, on: boolean): void {\n  product.marketTa2 = on;\n}\n","import { Program } from \"./Program\";\nimport { programsMetadata } from \"./data/ProgramsMetadata\";\nimport { IMap } from \"../types\";\n\nexport const Programs: IMap<Program> = {};\n\nfor (const params of programsMetadata) {\n  Programs[params.key] = new Program(params.name, params.create, params.run);\n}\n","/**\n * Enum for different types of tasks that a Sleeve can perform\n */\nexport enum SleeveTaskType {\n  // Same Order as selectable order in UI\n  Idle,\n  Company,\n  Faction,\n  Crime,\n  Class,\n  Gym,\n  Recovery,\n  Synchro,\n}\n","import { Crime } from \"./Crime\";\n\nimport { CONSTANTS } from \"../Constants\";\nimport { IMap } from \"../types\";\n\nexport const Crimes: IMap<Crime> = {\n  Shoplift: new Crime(\"Shoplift\", CONSTANTS.CrimeShoplift, 2e3, 15e3, 1 / 20, 0.1, {\n    dexterity_success_weight: 1,\n    agility_success_weight: 1,\n\n    dexterity_exp: 2,\n    agility_exp: 2,\n  }),\n\n  RobStore: new Crime(\"Rob Store\", CONSTANTS.CrimeRobStore, 60e3, 400e3, 1 / 5, 0.5, {\n    hacking_exp: 30,\n    dexterity_exp: 45,\n    agility_exp: 45,\n\n    hacking_success_weight: 0.5,\n    dexterity_success_weight: 2,\n    agility_success_weight: 1,\n\n    intelligence_exp: 7.5 * CONSTANTS.IntelligenceCrimeBaseExpGain,\n  }),\n\n  Mug: new Crime(\"Mug\", CONSTANTS.CrimeMug, 4e3, 36e3, 1 / 5, 0.25, {\n    strength_exp: 3,\n    defense_exp: 3,\n    dexterity_exp: 3,\n    agility_exp: 3,\n\n    strength_success_weight: 1.5,\n    defense_success_weight: 0.5,\n    dexterity_success_weight: 1.5,\n    agility_success_weight: 0.5,\n  }),\n\n  Larceny: new Crime(\"Larceny\", CONSTANTS.CrimeLarceny, 90e3, 800e3, 1 / 3, 1.5, {\n    hacking_exp: 45,\n    dexterity_exp: 60,\n    agility_exp: 60,\n\n    hacking_success_weight: 0.5,\n    dexterity_success_weight: 1,\n    agility_success_weight: 1,\n\n    intelligence_exp: 15 * CONSTANTS.IntelligenceCrimeBaseExpGain,\n  }),\n\n  DealDrugs: new Crime(\"Deal Drugs\", CONSTANTS.CrimeDrugs, 10e3, 120e3, 1, 0.5, {\n    dexterity_exp: 5,\n    agility_exp: 5,\n    charisma_exp: 10,\n\n    charisma_success_weight: 3,\n    dexterity_success_weight: 2,\n    agility_success_weight: 1,\n  }),\n\n  BondForgery: new Crime(\"Bond Forgery\", CONSTANTS.CrimeBondForgery, 300e3, 4.5e6, 1 / 2, 0.1, {\n    hacking_exp: 100,\n    dexterity_exp: 150,\n    charisma_exp: 15,\n\n    hacking_success_weight: 0.05,\n    dexterity_success_weight: 1.25,\n\n    intelligence_exp: 60 * CONSTANTS.IntelligenceCrimeBaseExpGain,\n  }),\n\n  TraffickArms: new Crime(\"Traffick Arms\", CONSTANTS.CrimeTraffickArms, 40e3, 600e3, 2, 1, {\n    strength_exp: 20,\n    defense_exp: 20,\n    dexterity_exp: 20,\n    agility_exp: 20,\n    charisma_exp: 40,\n\n    charisma_success_weight: 1,\n    strength_success_weight: 1,\n    defense_success_weight: 1,\n    dexterity_success_weight: 1,\n    agility_success_weight: 1,\n  }),\n\n  Homicide: new Crime(\"Homicide\", CONSTANTS.CrimeHomicide, 3e3, 45e3, 1, 3, {\n    strength_exp: 2,\n    defense_exp: 2,\n    dexterity_exp: 2,\n    agility_exp: 2,\n\n    strength_success_weight: 2,\n    defense_success_weight: 2,\n    dexterity_success_weight: 0.5,\n    agility_success_weight: 0.5,\n\n    kills: 1,\n  }),\n\n  GrandTheftAuto: new Crime(\"Grand Theft Auto\", CONSTANTS.CrimeGrandTheftAuto, 80e3, 1.6e6, 8, 5, {\n    strength_exp: 20,\n    defense_exp: 20,\n    dexterity_exp: 20,\n    agility_exp: 80,\n    charisma_exp: 40,\n\n    hacking_success_weight: 1,\n    strength_success_weight: 1,\n    dexterity_success_weight: 4,\n    agility_success_weight: 2,\n    charisma_success_weight: 2,\n\n    intelligence_exp: 16 * CONSTANTS.IntelligenceCrimeBaseExpGain,\n  }),\n\n  Kidnap: new Crime(\"Kidnap\", CONSTANTS.CrimeKidnap, 120e3, 3.6e6, 5, 6, {\n    strength_exp: 80,\n    defense_exp: 80,\n    dexterity_exp: 80,\n    agility_exp: 80,\n    charisma_exp: 80,\n\n    charisma_success_weight: 1,\n    strength_success_weight: 1,\n    dexterity_success_weight: 1,\n    agility_success_weight: 1,\n\n    intelligence_exp: 26 * CONSTANTS.IntelligenceCrimeBaseExpGain,\n  }),\n\n  Assassination: new Crime(\"Assassination\", CONSTANTS.CrimeAssassination, 300e3, 12e6, 8, 10, {\n    strength_exp: 300,\n    defense_exp: 300,\n    dexterity_exp: 300,\n    agility_exp: 300,\n\n    strength_success_weight: 1,\n    dexterity_success_weight: 2,\n    agility_success_weight: 1,\n\n    intelligence_exp: 65 * CONSTANTS.IntelligenceCrimeBaseExpGain,\n\n    kills: 1,\n  }),\n\n  Heist: new Crime(\"Heist\", CONSTANTS.CrimeHeist, 600e3, 120e6, 18, 15, {\n    hacking_exp: 450,\n    strength_exp: 450,\n    defense_exp: 450,\n    dexterity_exp: 450,\n    agility_exp: 450,\n    charisma_exp: 450,\n\n    hacking_success_weight: 1,\n    strength_success_weight: 1,\n    defense_success_weight: 1,\n    dexterity_success_weight: 1,\n    agility_success_weight: 1,\n    charisma_success_weight: 1,\n\n    intelligence_exp: 130 * CONSTANTS.IntelligenceCrimeBaseExpGain,\n  }),\n};\n","import * as React from \"react\";\n\nexport function trusted(f: () => void): (event: React.MouseEvent<HTMLElement, MouseEvent>) => any {\n  return function (event: React.MouseEvent<HTMLElement, MouseEvent>): any {\n    if (!event.isTrusted) return;\n    f();\n  };\n}\n","import { Reviver } from \"../utils/JSONReviver\";\n\ninterface GangTerritory {\n  power: number;\n  territory: number;\n}\n\nexport let AllGangs: {\n  [key: string]: GangTerritory;\n} = {\n  \"Slum Snakes\": {\n    power: 1,\n    territory: 1 / 7,\n  },\n  Tetrads: {\n    power: 1,\n    territory: 1 / 7,\n  },\n  \"The Syndicate\": {\n    power: 1,\n    territory: 1 / 7,\n  },\n  \"The Dark Army\": {\n    power: 1,\n    territory: 1 / 7,\n  },\n  \"Speakers for the Dead\": {\n    power: 1,\n    territory: 1 / 7,\n  },\n  NiteSec: {\n    power: 1,\n    territory: 1 / 7,\n  },\n  \"The Black Hand\": {\n    power: 1,\n    territory: 1 / 7,\n  },\n};\n\nexport function resetGangs(): void {\n  AllGangs = {\n    \"Slum Snakes\": {\n      power: 1,\n      territory: 1 / 7,\n    },\n    Tetrads: {\n      power: 1,\n      territory: 1 / 7,\n    },\n    \"The Syndicate\": {\n      power: 1,\n      territory: 1 / 7,\n    },\n    \"The Dark Army\": {\n      power: 1,\n      territory: 1 / 7,\n    },\n    \"Speakers for the Dead\": {\n      power: 1,\n      territory: 1 / 7,\n    },\n    NiteSec: {\n      power: 1,\n      territory: 1 / 7,\n    },\n    \"The Black Hand\": {\n      power: 1,\n      territory: 1 / 7,\n    },\n  };\n}\n\nexport function loadAllGangs(saveString: string): void {\n  AllGangs = JSON.parse(saveString, Reviver);\n}\n","// Constructs all CompanyPosition objects using the metadata in data/companypositions.ts\nimport { companyPositionMetadata } from \"./data/CompanyPositionsMetadata\";\nimport { CompanyPosition, IConstructorParams } from \"./CompanyPosition\";\nimport { IMap } from \"../types\";\n\nexport const CompanyPositions: IMap<CompanyPosition> = {};\n\nfunction addCompanyPosition(params: IConstructorParams): void {\n  if (CompanyPositions[params.name] != null) {\n    console.warn(`Duplicate Company Position being defined: ${params.name}`);\n  }\n  CompanyPositions[params.name] = new CompanyPosition(params);\n}\n\ncompanyPositionMetadata.forEach((e) => {\n  addCompanyPosition(e);\n});\n","import { IMap } from \"../../types\";\nimport { LocationName } from \"../../Locations/data/LocationNames\";\n\nexport const StockSymbols: IMap<string> = {};\n\n// Stocks for companies at which you can work\nStockSymbols[LocationName.AevumECorp] = \"ECP\";\nStockSymbols[LocationName.Sector12MegaCorp] = \"MGCP\";\nStockSymbols[LocationName.Sector12BladeIndustries] = \"BLD\";\nStockSymbols[LocationName.AevumClarkeIncorporated] = \"CLRK\";\nStockSymbols[LocationName.VolhavenOmniTekIncorporated] = \"OMTK\";\nStockSymbols[LocationName.Sector12FourSigma] = \"FSIG\";\nStockSymbols[LocationName.ChongqingKuaiGongInternational] = \"KGI\";\nStockSymbols[LocationName.AevumFulcrumTechnologies] = \"FLCM\";\nStockSymbols[LocationName.IshimaStormTechnologies] = \"STM\";\nStockSymbols[LocationName.NewTokyoDefComm] = \"DCOMM\";\nStockSymbols[LocationName.VolhavenHeliosLabs] = \"HLS\";\nStockSymbols[LocationName.NewTokyoVitaLife] = \"VITA\";\nStockSymbols[LocationName.Sector12IcarusMicrosystems] = \"ICRS\";\nStockSymbols[LocationName.Sector12UniversalEnergy] = \"UNV\";\nStockSymbols[LocationName.AevumAeroCorp] = \"AERO\";\nStockSymbols[LocationName.VolhavenOmniaCybersystems] = \"OMN\";\nStockSymbols[LocationName.ChongqingSolarisSpaceSystems] = \"SLRS\";\nStockSymbols[LocationName.NewTokyoGlobalPharmaceuticals] = \"GPH\";\nStockSymbols[LocationName.IshimaNovaMedical] = \"NVMD\";\nStockSymbols[LocationName.AevumWatchdogSecurity] = \"WDS\";\nStockSymbols[LocationName.VolhavenLexoCorp] = \"LXO\";\nStockSymbols[LocationName.AevumRhoConstruction] = \"RHOC\";\nStockSymbols[LocationName.Sector12AlphaEnterprises] = \"APHE\";\nStockSymbols[LocationName.VolhavenSysCoreSecurities] = \"SYSC\";\nStockSymbols[LocationName.VolhavenCompuTek] = \"CTK\";\nStockSymbols[LocationName.AevumNetLinkTechnologies] = \"NTLK\";\nStockSymbols[LocationName.IshimaOmegaSoftware] = \"OMGA\";\nStockSymbols[LocationName.Sector12FoodNStuff] = \"FNS\";\n\n// Stocks for other companies\nStockSymbols[\"Sigma Cosmetics\"] = \"SGC\";\nStockSymbols[\"Joes Guns\"] = \"JGN\";\nStockSymbols[\"Catalyst Ventures\"] = \"CTYS\";\nStockSymbols[\"Microdyne Technologies\"] = \"MDYN\";\nStockSymbols[\"Titan Laboratories\"] = \"TITN\";\n","/**\n * Hacknet Servers - Reworked Hacknet Node mechanic for BitNode-9\n */\nimport { CONSTANTS } from \"../Constants\";\n\nimport { IHacknetNode } from \"./IHacknetNode\";\n\nimport { BaseServer } from \"../Server/BaseServer\";\nimport { RunningScript } from \"../Script/RunningScript\";\nimport { HacknetServerConstants } from \"./data/Constants\";\nimport {\n  calculateHashGainRate,\n  calculateLevelUpgradeCost,\n  calculateRamUpgradeCost,\n  calculateCoreUpgradeCost,\n  calculateCacheUpgradeCost,\n} from \"./formulas/HacknetServers\";\n\nimport { createRandomIp } from \"../utils/IPAddress\";\n\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\n\ninterface IConstructorParams {\n  adminRights?: boolean;\n  hostname: string;\n  ip?: string;\n  isConnectedTo?: boolean;\n  maxRam?: number;\n  organizationName?: string;\n}\n\nexport class HacknetServer extends BaseServer implements IHacknetNode {\n  // Cache level. Affects hash Capacity\n  cache = 1;\n\n  // Number of cores. Improves hash production\n  cores = 1;\n\n  // Number of hashes that can be stored by this Hacknet Server\n  hashCapacity = 0;\n\n  // Hashes produced per second\n  hashRate = 0;\n\n  // Similar to Node level. Improves hash production\n  level = 1;\n\n  // How long this HacknetServer has existed, in seconds\n  onlineTimeSeconds = 0;\n\n  // Total number of hashes earned by this server\n  totalHashesGenerated = 0;\n\n  constructor(params: IConstructorParams = { hostname: \"\", ip: createRandomIp() }) {\n    super(params);\n\n    this.maxRam = 1;\n    this.updateHashCapacity();\n  }\n\n  calculateCacheUpgradeCost(levels: number): number {\n    return calculateCacheUpgradeCost(this.cache, levels);\n  }\n\n  calculateCoreUpgradeCost(levels: number, costMult: number): number {\n    return calculateCoreUpgradeCost(this.cores, levels, costMult);\n  }\n\n  calculateLevelUpgradeCost(levels: number, costMult: number): number {\n    return calculateLevelUpgradeCost(this.level, levels, costMult);\n  }\n\n  calculateRamUpgradeCost(levels: number, costMult: number): number {\n    return calculateRamUpgradeCost(this.maxRam, levels, costMult);\n  }\n\n  // Process this Hacknet Server in the game loop. Returns the number of hashes generated\n  process(numCycles = 1): number {\n    const seconds = (numCycles * CONSTANTS.MilliPerCycle) / 1000;\n\n    return this.hashRate * seconds;\n  }\n\n  upgradeCache(levels: number): void {\n    this.cache = Math.min(HacknetServerConstants.MaxCache, Math.round(this.cache + levels));\n    this.updateHashCapacity();\n  }\n\n  upgradeCore(levels: number, prodMult: number): void {\n    this.cores = Math.min(HacknetServerConstants.MaxCores, Math.round(this.cores + levels));\n    this.updateHashRate(prodMult);\n  }\n\n  upgradeLevel(levels: number, prodMult: number): void {\n    this.level = Math.min(HacknetServerConstants.MaxLevel, Math.round(this.level + levels));\n    this.updateHashRate(prodMult);\n  }\n\n  upgradeRam(levels: number, prodMult: number): boolean {\n    for (let i = 0; i < levels; ++i) {\n      this.maxRam *= 2;\n    }\n    this.maxRam = Math.min(HacknetServerConstants.MaxRam, Math.round(this.maxRam));\n    this.updateHashRate(prodMult);\n\n    return true;\n  }\n\n  // Whenever a script is run, we must update this server's hash rate\n  runScript(script: RunningScript, prodMult?: number): void {\n    super.runScript(script);\n    if (prodMult != null && typeof prodMult === \"number\") {\n      this.updateHashRate(prodMult);\n    }\n  }\n\n  updateHashCapacity(): void {\n    this.hashCapacity = 32 * Math.pow(2, this.cache);\n  }\n\n  updateHashRate(prodMult: number): void {\n    this.hashRate = calculateHashGainRate(this.level, this.ramUsed, this.maxRam, this.cores, prodMult);\n\n    if (isNaN(this.hashRate)) {\n      this.hashRate = 0;\n      console.error(\n        `Error calculating Hacknet Server hash production. This is a bug. Please report to game dev`,\n        false,\n      );\n    }\n  }\n\n  // Serialize the current object to a JSON save state\n  toJSON(): any {\n    return Generic_toJSON(\"HacknetServer\", this);\n  }\n\n  // Initializes a HacknetServer Object from a JSON save state\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): HacknetServer {\n    return Generic_fromJSON(HacknetServer, value.data);\n  }\n}\n\nReviver.constructors.HacknetServer = HacknetServer;\n","import { IOrderBook } from \"./IOrderBook\";\nimport { IStockMarket } from \"./IStockMarket\";\nimport { Order } from \"./Order\";\nimport { processOrders } from \"./OrderProcessing\";\nimport { Stock } from \"./Stock\";\nimport { TicksPerCycle } from \"./StockMarketConstants\";\nimport { InitStockMetadata } from \"./data/InitStockMetadata\";\nimport { OrderTypes } from \"./data/OrderTypes\";\nimport { PositionTypes } from \"./data/PositionTypes\";\nimport { StockSymbols } from \"./data/StockSymbols\";\n\nimport { CONSTANTS } from \"../Constants\";\nimport { WorkerScript } from \"../Netscript/WorkerScript\";\nimport { IMap } from \"../types\";\nimport { EventEmitter } from \"../utils/EventEmitter\";\n\nimport { numeralWrapper } from \".././ui/numeralFormat\";\n\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\nimport { Reviver } from \"../utils/JSONReviver\";\n\nexport let StockMarket: IStockMarket = {\n  lastUpdate: 0,\n  Orders: {},\n  storedCycles: 0,\n  ticksUntilCycle: 0,\n} as IStockMarket; // Maps full stock name -> Stock object\nexport const SymbolToStockMap: IMap<Stock> = {}; // Maps symbol -> Stock object\n\nexport function placeOrder(\n  stock: Stock,\n  shares: number,\n  price: number,\n  type: OrderTypes,\n  position: PositionTypes,\n  workerScript: WorkerScript | null = null,\n): boolean {\n  if (!(stock instanceof Stock)) {\n    if (workerScript) {\n      workerScript.log(\"placeOrder\", `Invalid stock: '${stock}'`);\n    } else {\n      dialogBoxCreate(`ERROR: Invalid stock passed to placeOrder() function`);\n    }\n    return false;\n  }\n  if (typeof shares !== \"number\" || typeof price !== \"number\") {\n    if (workerScript) {\n      workerScript.log(\"placeOrder\", `Invalid arguments: shares='${shares}' price='${price}'`);\n    } else {\n      dialogBoxCreate(\"ERROR: Invalid numeric value provided for either 'shares' or 'price' argument\");\n    }\n    return false;\n  }\n\n  const order = new Order(stock.symbol, shares, price, type, position);\n  if (StockMarket[\"Orders\"] == null) {\n    const orders: IOrderBook = {};\n    for (const name in StockMarket) {\n      const stk = StockMarket[name];\n      if (!(stk instanceof Stock)) {\n        continue;\n      }\n      orders[stk.symbol] = [];\n    }\n    StockMarket[\"Orders\"] = orders;\n  }\n  StockMarket[\"Orders\"][stock.symbol].push(order);\n\n  // Process to see if it should be executed immediately\n  const processOrderRefs = {\n    stockMarket: StockMarket as IStockMarket,\n    symbolToStockMap: SymbolToStockMap,\n  };\n  processOrders(stock, order.type, order.pos, processOrderRefs);\n\n  return true;\n}\n\n// Returns true if successfully cancels an order, false otherwise\ninterface ICancelOrderParams {\n  order?: Order;\n  pos?: PositionTypes;\n  price?: number;\n  shares?: number;\n  stock?: Stock;\n  type?: OrderTypes;\n}\nexport function cancelOrder(params: ICancelOrderParams, workerScript: WorkerScript | null = null): boolean {\n  if (StockMarket[\"Orders\"] == null) {\n    return false;\n  }\n  if (params.order && params.order instanceof Order) {\n    const order = params.order;\n    // An 'Order' object is passed in\n    const stockOrders = StockMarket[\"Orders\"][order.stockSymbol];\n    for (let i = 0; i < stockOrders.length; ++i) {\n      if (order == stockOrders[i]) {\n        stockOrders.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  } else if (\n    params.stock &&\n    params.shares &&\n    params.price &&\n    params.type &&\n    params.pos &&\n    params.stock instanceof Stock\n  ) {\n    // Order properties are passed in. Need to look for the order\n    const stockOrders = StockMarket[\"Orders\"][params.stock.symbol];\n    const orderTxt = params.stock.symbol + \" - \" + params.shares + \" @ \" + numeralWrapper.formatMoney(params.price);\n    for (let i = 0; i < stockOrders.length; ++i) {\n      const order = stockOrders[i];\n      if (\n        params.shares === order.shares &&\n        params.price === order.price &&\n        params.type === order.type &&\n        params.pos === order.pos\n      ) {\n        stockOrders.splice(i, 1);\n        if (workerScript) {\n          workerScript.scriptRef.log(\"Successfully cancelled order: \" + orderTxt);\n        }\n        return true;\n      }\n    }\n    if (workerScript) {\n      workerScript.scriptRef.log(\"Failed to cancel order: \" + orderTxt);\n    }\n    return false;\n  }\n  return false;\n}\n\nexport function loadStockMarket(saveString: string): void {\n  if (saveString === \"\") {\n    StockMarket = {\n      lastUpdate: 0,\n      Orders: {},\n      storedCycles: 0,\n      ticksUntilCycle: 0,\n    } as IStockMarket;\n  } else {\n    StockMarket = JSON.parse(saveString, Reviver);\n  }\n}\n\nexport function deleteStockMarket(): void {\n  StockMarket = {\n    lastUpdate: 0,\n    Orders: {},\n    storedCycles: 0,\n    ticksUntilCycle: 0,\n  } as IStockMarket;\n}\n\nexport function initStockMarket(): void {\n  for (const stk in StockMarket) {\n    if (StockMarket.hasOwnProperty(stk)) {\n      delete StockMarket[stk];\n    }\n  }\n\n  for (const metadata of InitStockMetadata) {\n    const name = metadata.name;\n    StockMarket[name] = new Stock(metadata);\n  }\n\n  const orders: IOrderBook = {};\n  for (const name in StockMarket) {\n    const stock = StockMarket[name];\n    if (!(stock instanceof Stock)) {\n      continue;\n    }\n    orders[stock.symbol] = [];\n  }\n  StockMarket[\"Orders\"] = orders;\n\n  StockMarket.storedCycles = 0;\n  StockMarket.lastUpdate = 0;\n  StockMarket.ticksUntilCycle = TicksPerCycle;\n}\n\nexport function initSymbolToStockMap(): void {\n  for (const name in StockSymbols) {\n    if (StockSymbols.hasOwnProperty(name)) {\n      const stock = StockMarket[name];\n      if (stock == null) {\n        console.error(`Could not find Stock for ${name}`);\n        continue;\n      }\n      const symbol = StockSymbols[name];\n      SymbolToStockMap[symbol] = stock;\n    }\n  }\n}\n\nexport function stockMarketCycle(): void {\n  for (const name in StockMarket) {\n    const stock = StockMarket[name];\n    if (!(stock instanceof Stock)) {\n      continue;\n    }\n\n    const roll = Math.random();\n    if (roll < 0.45) {\n      stock.b = !stock.b;\n      stock.flipForecastForecast();\n    }\n\n    StockMarket.ticksUntilCycle = TicksPerCycle;\n  }\n}\n\n// Stock prices updated every 6 seconds\nconst msPerStockUpdate = 6e3;\nconst cyclesPerStockUpdate = msPerStockUpdate / CONSTANTS.MilliPerCycle;\nexport function processStockPrices(numCycles = 1): void {\n  if (StockMarket.storedCycles == null || isNaN(StockMarket.storedCycles)) {\n    StockMarket.storedCycles = 0;\n  }\n  StockMarket.storedCycles += numCycles;\n\n  if (StockMarket.storedCycles < cyclesPerStockUpdate) {\n    return;\n  }\n\n  // We can process the update every 4 seconds as long as there are enough\n  // stored cycles. This lets us account for offline time\n  const timeNow = new Date().getTime();\n  if (timeNow - StockMarket.lastUpdate < 4e3) {\n    return;\n  }\n\n  StockMarket.lastUpdate = timeNow;\n  StockMarket.storedCycles -= cyclesPerStockUpdate;\n\n  // Cycle\n  if (StockMarket.ticksUntilCycle == null || typeof StockMarket.ticksUntilCycle !== \"number\") {\n    StockMarket.ticksUntilCycle = TicksPerCycle;\n  }\n  --StockMarket.ticksUntilCycle;\n  if (StockMarket.ticksUntilCycle <= 0) {\n    stockMarketCycle();\n  }\n\n  const v = Math.random();\n  for (const name in StockMarket) {\n    const stock = StockMarket[name];\n    if (!(stock instanceof Stock)) {\n      continue;\n    }\n    let av = (v * stock.mv) / 100;\n    if (isNaN(av)) {\n      av = 0.02;\n    }\n\n    let chc = 50;\n    if (stock.b) {\n      chc = (chc + stock.otlkMag) / 100;\n    } else {\n      chc = (chc - stock.otlkMag) / 100;\n    }\n    if (stock.price >= stock.cap) {\n      chc = 0.1; // \"Soft Limit\" on stock price. It could still go up but its unlikely\n      stock.b = false;\n    }\n    if (isNaN(chc)) {\n      chc = 0.5;\n    }\n\n    const c = Math.random();\n    const processOrderRefs = {\n      stockMarket: StockMarket,\n      symbolToStockMap: SymbolToStockMap,\n    };\n    if (c < chc) {\n      stock.changePrice(stock.price * (1 + av));\n      processOrders(stock, OrderTypes.LimitBuy, PositionTypes.Short, processOrderRefs);\n      processOrders(stock, OrderTypes.LimitSell, PositionTypes.Long, processOrderRefs);\n      processOrders(stock, OrderTypes.StopBuy, PositionTypes.Long, processOrderRefs);\n      processOrders(stock, OrderTypes.StopSell, PositionTypes.Short, processOrderRefs);\n    } else {\n      stock.changePrice(stock.price / (1 + av));\n      processOrders(stock, OrderTypes.LimitBuy, PositionTypes.Long, processOrderRefs);\n      processOrders(stock, OrderTypes.LimitSell, PositionTypes.Short, processOrderRefs);\n      processOrders(stock, OrderTypes.StopBuy, PositionTypes.Short, processOrderRefs);\n      processOrders(stock, OrderTypes.StopSell, PositionTypes.Long, processOrderRefs);\n    }\n\n    let otlkMagChange = stock.otlkMag * av;\n    if (stock.otlkMag < 5) {\n      if (stock.otlkMag <= 1) {\n        otlkMagChange = 1;\n      } else {\n        otlkMagChange *= 10;\n      }\n    }\n    stock.cycleForecast(otlkMagChange);\n    stock.cycleForecastForecast(otlkMagChange / 2);\n\n    // Shares required for price movement gradually approaches max over time\n    stock.shareTxUntilMovement = Math.min(stock.shareTxUntilMovement + 10, stock.shareTxForMovement);\n  }\n}\n\nexport function initStockMarketFnForReact(): void {\n  initStockMarket();\n  initSymbolToStockMap();\n}\n\nexport const eventEmitterForUiReset = new EventEmitter<[]>();\n","import { IMap } from \"../../types\";\n\n/**\n * Keyboard key codes\n */\nexport const KEY: IMap<number> = {\n  CTRL: 17,\n  DOWNARROW: 40,\n  ENTER: 13,\n  ESC: 27,\n  TAB: 9,\n  UPARROW: 38,\n\n  \"0\": 48,\n  \"1\": 49,\n  \"2\": 50,\n  \"3\": 51,\n  \"4\": 52,\n  \"5\": 53,\n  \"6\": 54,\n  \"7\": 55,\n  \"8\": 56,\n  \"9\": 57,\n\n  A: 65,\n  B: 66,\n  C: 67,\n  D: 68,\n  E: 69,\n  F: 70,\n  G: 71,\n  H: 72,\n  I: 73,\n  J: 74,\n  K: 75,\n  L: 76,\n  M: 77,\n  N: 78,\n  O: 79,\n  P: 80,\n  Q: 81,\n  R: 82,\n  S: 83,\n  T: 84,\n  U: 85,\n  V: 86,\n  W: 87,\n  X: 88,\n  Y: 89,\n  Z: 90,\n};\n","import { codingContractTypesMetadata, DescriptionFunc, GeneratorFunc, SolverFunc } from \"./data/codingcontracttypes\";\n\nimport { IMap } from \"./types\";\n\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"./utils/JSONReviver\";\nimport { CodingContractEvent } from \"./ui/React/CodingContractModal\";\n\n/* tslint:disable:no-magic-numbers completed-docs max-classes-per-file no-console */\n\n/* Represents different types of problems that a Coding Contract can have */\nexport class CodingContractType {\n  /**\n   * Function that generates a description of the problem\n   */\n  desc: DescriptionFunc;\n\n  /**\n   * Number that generally represents the problem's difficulty. Bigger numbers = harder\n   */\n  difficulty: number;\n\n  /**\n   * A function that randomly generates a valid 'data' for the problem\n   */\n  generate: GeneratorFunc;\n\n  /**\n   * Name of the type of problem\n   */\n  name: string;\n\n  /**\n   * The maximum number of tries the player gets on this kind of problem before it self-destructs\n   */\n  numTries: number;\n\n  /**\n   * Stores a function that checks if the provided answer is correct\n   */\n  solver: SolverFunc;\n\n  constructor(\n    name: string,\n    desc: DescriptionFunc,\n    gen: GeneratorFunc,\n    solver: SolverFunc,\n    diff: number,\n    numTries: number,\n  ) {\n    this.name = name;\n    this.desc = desc;\n    this.generate = gen;\n    this.solver = solver;\n    this.difficulty = diff;\n    this.numTries = numTries;\n  }\n}\n\n/* Contract Types */\n// tslint:disable-next-line\nexport const CodingContractTypes: IMap<CodingContractType> = {};\n\nfor (const md of codingContractTypesMetadata) {\n  // tslint:disable-next-line\n  CodingContractTypes[md.name] = new CodingContractType(\n    md.name,\n    md.desc,\n    md.gen,\n    md.solver,\n    md.difficulty,\n    md.numTries,\n  );\n}\n\n/**\n * Enum representing the different types of rewards a Coding Contract can give\n */\nexport enum CodingContractRewardType {\n  FactionReputation,\n  FactionReputationAll,\n  CompanyReputation,\n  Money, // This must always be the last reward type\n}\n\n/**\n * Enum representing the result when trying to solve the Contract\n */\nexport enum CodingContractResult {\n  Success,\n  Failure,\n  Cancelled,\n}\n\n/**\n * A class that represents the type of reward a contract gives\n */\nexport interface ICodingContractReward {\n  /* Name of Company/Faction name for reward, if applicable */\n  name?: string;\n  type: CodingContractRewardType;\n}\n\n/**\n * A Coding Contract is a file that poses a programming-related problem to the Player.\n * The player receives a reward if the problem is solved correctly\n */\nexport class CodingContract {\n  /* Relevant data for the contract's problem */\n  data: any;\n\n  /* Contract's filename */\n  fn: string;\n\n  /* Describes the reward given if this Contract is solved. The reward is actually\n       processed outside of this file */\n  reward: ICodingContractReward | null;\n\n  /* Number of times the Contract has been attempted */\n  tries = 0;\n\n  /* String representing the contract's type. Must match type in ContractTypes */\n  type: string;\n\n  constructor(fn = \"\", type = \"Find Largest Prime Factor\", reward: ICodingContractReward | null = null) {\n    this.fn = fn;\n    if (!this.fn.endsWith(\".cct\")) {\n      this.fn += \".cct\";\n    }\n\n    // tslint:disable-next-line\n    if (CodingContractTypes[type] == null) {\n      throw new Error(`Error: invalid contract type: ${type} please contact developer`);\n    }\n\n    this.type = type;\n    this.data = CodingContractTypes[type].generate();\n    this.reward = reward;\n  }\n\n  getData(): any {\n    return this.data;\n  }\n\n  getDescription(): string {\n    return CodingContractTypes[this.type].desc(this.data);\n  }\n\n  getDifficulty(): number {\n    return CodingContractTypes[this.type].difficulty;\n  }\n\n  getMaxNumTries(): number {\n    return CodingContractTypes[this.type].numTries;\n  }\n\n  getType(): string {\n    return CodingContractTypes[this.type].name;\n  }\n\n  isSolution(solution: string): boolean {\n    return CodingContractTypes[this.type].solver(this.data, solution);\n  }\n\n  /**\n   * Creates a popup to prompt the player to solve the problem\n   */\n  async prompt(): Promise<CodingContractResult> {\n    return new Promise<CodingContractResult>((resolve) => {\n      const props = {\n        c: this,\n        onClose: () => {\n          resolve(CodingContractResult.Cancelled);\n        },\n        onAttempt: (val: string) => {\n          if (this.isSolution(val)) {\n            resolve(CodingContractResult.Success);\n          } else {\n            resolve(CodingContractResult.Failure);\n          }\n        },\n      };\n      CodingContractEvent.emit(props);\n    });\n  }\n\n  /**\n   * Serialize the current file to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"CodingContract\", this);\n  }\n\n  /**\n   * Initiatizes a CodingContract from a JSON save state.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): CodingContract {\n    return Generic_fromJSON(CodingContract, value.data);\n  }\n}\n\nReviver.constructors.CodingContract = CodingContract;\n","export enum OrderTypes {\n  LimitBuy = \"Limit Buy Order\",\n  LimitSell = \"Limit Sell Order\",\n  StopBuy = \"Stop Buy Order\",\n  StopSell = \"Stop Sell Order\",\n}\n","import { BitNodeMultipliers } from \"./BitNode/BitNodeMultipliers\";\nimport { IPlayer } from \"./PersonObjects/IPlayer\";\nimport { calculateIntelligenceBonus } from \"./PersonObjects/formulas/intelligence\";\nimport { Server } from \"./Server/Server\";\n\n/**\n * Returns the chance the player has to successfully hack a server\n */\nexport function calculateHackingChance(server: Server, player: IPlayer): number {\n  const hackFactor = 1.75;\n  const difficultyMult = (100 - server.hackDifficulty) / 100;\n  const skillMult = hackFactor * player.hacking_skill;\n  const skillChance = (skillMult - server.requiredHackingSkill) / skillMult;\n  const chance =\n    skillChance * difficultyMult * player.hacking_chance_mult * calculateIntelligenceBonus(player.intelligence, 1);\n  if (chance > 1) {\n    return 1;\n  }\n  if (chance < 0) {\n    return 0;\n  }\n\n  return chance;\n}\n\n/**\n * Returns the amount of hacking experience the player will gain upon\n * successfully hacking a server\n */\nexport function calculateHackingExpGain(server: Server, player: IPlayer): number {\n  const baseExpGain = 3;\n  const diffFactor = 0.3;\n  if (server.baseDifficulty == null) {\n    server.baseDifficulty = server.hackDifficulty;\n  }\n  let expGain = baseExpGain;\n  expGain += server.baseDifficulty * player.hacking_exp_mult * diffFactor;\n\n  return expGain * BitNodeMultipliers.HackExpGain;\n}\n\n/**\n * Returns the percentage of money that will be stolen from a server if\n * it is successfully hacked (returns the decimal form, not the actual percent value)\n */\nexport function calculatePercentMoneyHacked(server: Server, player: IPlayer): number {\n  // Adjust if needed for balancing. This is the divisor for the final calculation\n  const balanceFactor = 240;\n\n  const difficultyMult = (100 - server.hackDifficulty) / 100;\n  const skillMult = (player.hacking_skill - (server.requiredHackingSkill - 1)) / player.hacking_skill;\n  const percentMoneyHacked = (difficultyMult * skillMult * player.hacking_money_mult) / balanceFactor;\n  if (percentMoneyHacked < 0) {\n    return 0;\n  }\n  if (percentMoneyHacked > 1) {\n    return 1;\n  }\n\n  return percentMoneyHacked * BitNodeMultipliers.ScriptHackMoney;\n}\n\n/**\n * Returns time it takes to complete a hack on a server, in seconds\n */\nexport function calculateHackingTime(server: Server, player: IPlayer): number {\n  const difficultyMult = server.requiredHackingSkill * server.hackDifficulty;\n\n  const baseDiff = 500;\n  const baseSkill = 50;\n  const diffFactor = 2.5;\n  let skillFactor = diffFactor * difficultyMult + baseDiff;\n  // tslint:disable-next-line\n  skillFactor /= player.hacking_skill + baseSkill;\n\n  const hackTimeMultiplier = 5;\n  const hackingTime =\n    (hackTimeMultiplier * skillFactor) /\n    (player.hacking_speed_mult * calculateIntelligenceBonus(player.intelligence, 1));\n\n  return hackingTime;\n}\n\n/**\n * Returns time it takes to complete a grow operation on a server, in seconds\n */\nexport function calculateGrowTime(server: Server, player: IPlayer): number {\n  const growTimeMultiplier = 3.2; // Relative to hacking time. 16/5 = 3.2\n\n  return growTimeMultiplier * calculateHackingTime(server, player);\n}\n\n/**\n * Returns time it takes to complete a weaken operation on a server, in seconds\n */\nexport function calculateWeakenTime(server: Server, player: IPlayer): number {\n  const weakenTimeMultiplier = 4; // Relative to hacking time\n\n  return weakenTimeMultiplier * calculateHackingTime(server, player);\n}\n","import * as React from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    reputation: {\n      color: theme.colors.rep,\n    },\n  }),\n);\n\nexport function Reputation({ reputation }: { reputation: number | string }): React.ReactElement {\n  const classes = useStyles();\n  return (\n    <span className={classes.reputation}>\n      {typeof reputation === \"number\" ? numeralWrapper.formatFavor(reputation) : reputation}\n    </span>\n  );\n}\n","export function isScriptFilename(f: string): boolean {\n  return f.endsWith(\".js\") || f.endsWith(\".script\") || f.endsWith(\".ns\");\n}\n","import React from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Money } from \"../../ui/React/Money\";\n\nexport function MoneyRate({ money }: { money: number }): JSX.Element {\n  return <Money money={`${numeralWrapper.formatMoney(money)} / sec`} />;\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { IEngine } from \"../IEngine\";\nimport { ITerminal } from \"../Terminal/ITerminal\";\nimport { installAugmentations } from \"../Augmentation/AugmentationHelpers\";\nimport { saveObject } from \"../SaveObject\";\nimport { onExport } from \"../ExportBonus\";\nimport { LocationName } from \"../Locations/data/LocationNames\";\nimport { Location } from \"../Locations/Location\";\nimport { Locations } from \"../Locations/Locations\";\nimport { ITutorial } from \"../InteractiveTutorial\";\nimport { InteractiveTutorialRoot } from \"./InteractiveTutorial/InteractiveTutorialRoot\";\nimport { ITutorialEvents } from \"./InteractiveTutorial/ITutorialEvents\";\n\nimport { Faction } from \"../Faction/Faction\";\nimport { prestigeAugmentation } from \"../Prestige\";\nimport { dialogBoxCreate } from \"./React/DialogBox\";\nimport { AllServers } from \"../Server/AllServers\";\nimport { Factions } from \"../Faction/Factions\";\nimport { buyStock, sellStock, shortStock, sellShort } from \"../StockMarket/BuyingAndSelling\";\nimport {\n  cancelOrder,\n  eventEmitterForUiReset,\n  initStockMarketFnForReact,\n  placeOrder,\n  StockMarket,\n} from \"../StockMarket/StockMarket\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { Page, IRouter } from \"./Router\";\nimport { Overview } from \"./React/Overview\";\nimport { SidebarRoot } from \"../Sidebar/ui/SidebarRoot\";\nimport { AugmentationsRoot } from \"../Augmentation/ui/AugmentationsRoot\";\nimport { DevMenuRoot } from \"../DevMenu\";\nimport { BladeburnerRoot } from \"../Bladeburner/ui/BladeburnerRoot\";\nimport { GangRoot } from \"../Gang/ui/GangRoot\";\nimport { CorporationRoot } from \"../Corporation/ui/CorporationRoot\";\nimport { InfiltrationRoot } from \"../Infiltration/ui/InfiltrationRoot\";\nimport { ResleeveRoot } from \"../PersonObjects/Resleeving/ui/ResleeveRoot\";\nimport { WorkInProgressRoot } from \"./WorkInProgressRoot\";\nimport { GameOptionsRoot } from \"../ui/React/GameOptionsRoot\";\nimport { SleeveRoot } from \"../PersonObjects/Sleeve/ui/SleeveRoot\";\nimport { HacknetRoot } from \"../Hacknet/ui/HacknetRoot\";\nimport { GenericLocation } from \"../Locations/ui/GenericLocation\";\nimport { LocationCity } from \"../Locations/ui/City\";\nimport { ProgramsRoot } from \"../Programs/ui/ProgramsRoot\";\nimport { Root as ScriptEditorRoot } from \"../ScriptEditor/ui/Root\";\nimport { MilestonesRoot } from \"../Milestones/ui/MilestonesRoot\";\nimport { TerminalRoot } from \"../Terminal/ui/TerminalRoot\";\nimport { TutorialRoot } from \"../Tutorial/ui/TutorialRoot\";\nimport { ActiveScriptsRoot } from \"../ui/ActiveScripts/ActiveScriptsRoot\";\nimport { FactionsRoot } from \"../Faction/ui/FactionsRoot\";\nimport { HackingMissionRoot } from \"../HackingMission/ui/HackingMissionRoot\";\nimport { FactionRoot } from \"../Faction/ui/FactionRoot\";\nimport { CharacterStats } from \"./CharacterStats\";\nimport { TravelAgencyRoot } from \"../Locations/ui/TravelAgencyRoot\";\nimport { StockMarketRoot } from \"../StockMarket/ui/StockMarketRoot\";\nimport { BitverseRoot } from \"../BitNode/ui/BitverseRoot\";\nimport { CharacterOverview } from \"./React/CharacterOverview\";\nimport { BladeburnerCinematic } from \"../Bladeburner/ui/BladeburnerCinematic\";\nimport { workerScripts } from \"../Netscript/WorkerScripts\";\nimport { Unclickable } from \"../Exploits/Unclickable\";\nimport { Snackbar } from \"./React/Snackbar\";\nimport { LogBoxManager } from \"./React/LogBoxManager\";\nimport { AlertManager } from \"./React/AlertManager\";\nimport { InvitationModal } from \"../Faction/ui/InvitationModal\";\n\nimport { enterBitNode } from \"../RedPill\";\nimport { Context } from \"./Context\";\n\ninterface IProps {\n  terminal: ITerminal;\n  player: IPlayer;\n  engine: IEngine;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"-ms-overflow-style\": \"none\" /* for Internet Explorer, Edge */,\n      \"scrollbar-width\": \"none\" /* for Firefox */,\n      margin: theme.spacing(0),\n    },\n  }),\n);\n\nlet filename = \"\";\nlet code = \"\";\n\nexport let Router: IRouter = {\n  page: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toActiveScripts: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toAugmentations: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toBitVerse: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toBladeburner: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toStats: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toCity: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toCorporation: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toCreateProgram: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toDevMenu: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toFaction: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toFactions: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toGameOptions: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toGang: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toHacknetNodes: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toInfiltration: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toJob: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toMilestones: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toResleeves: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toScriptEditor: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toSleeves: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toStockMarket: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toTerminal: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toTravel: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toTutorial: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toWork: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toBladeburnerCinematic: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toLocation: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n  toHackingMission: () => {\n    throw new Error(\"Router called before initialization\");\n  },\n};\n\nfunction determineStartPage(player: IPlayer): Page {\n  if (player.isWorking) return Page.Work;\n  return Page.Terminal;\n}\n\nexport function GameRoot({ player, engine, terminal }: IProps): React.ReactElement {\n  const classes = useStyles();\n  const [page, setPage] = useState(determineStartPage(player));\n  const setRerender = useState(0)[1];\n  const [faction, setFaction] = useState<Faction>(\n    player.currentWorkFactionName ? Factions[player.currentWorkFactionName] : (undefined as unknown as Faction),\n  );\n  if (faction === undefined && page === Page.Faction)\n    throw new Error(\"Trying to go to a page without the proper setup\");\n\n  const [flume, setFlume] = useState<boolean>(false);\n  const [quick, setQuick] = useState<boolean>(false);\n  const [location, setLocation] = useState<Location>(undefined as unknown as Location);\n  if (location === undefined && (page === Page.Infiltration || page === Page.Location || page === Page.Job))\n    throw new Error(\"Trying to go to a page without the proper setup\");\n\n  const [cinematicText, setCinematicText] = useState(\"\");\n\n  function rerender(): void {\n    setRerender((old) => old + 1);\n  }\n  useEffect(() => {\n    return ITutorialEvents.subscribe(rerender);\n  }, []);\n\n  Router = {\n    page: () => page,\n    toActiveScripts: () => setPage(Page.ActiveScripts),\n    toAugmentations: () => setPage(Page.Augmentations),\n    toBladeburner: () => setPage(Page.Bladeburner),\n    toStats: () => setPage(Page.Stats),\n    toCorporation: () => setPage(Page.Corporation),\n    toCreateProgram: () => setPage(Page.CreateProgram),\n    toDevMenu: () => setPage(Page.DevMenu),\n    toFaction: (faction?: Faction) => {\n      setPage(Page.Faction);\n      if (faction) setFaction(faction);\n    },\n    toFactions: () => setPage(Page.Factions),\n    toGameOptions: () => setPage(Page.Options),\n    toGang: () => setPage(Page.Gang),\n    toHacknetNodes: () => setPage(Page.Hacknet),\n    toMilestones: () => setPage(Page.Milestones),\n    toResleeves: () => setPage(Page.Resleeves),\n    toScriptEditor: (fn: string, c: string) => {\n      filename = fn;\n      code = c;\n      setPage(Page.CreateScript);\n    },\n    toSleeves: () => setPage(Page.Sleeves),\n    toStockMarket: () => setPage(Page.StockMarket),\n    toTerminal: () => setPage(Page.Terminal),\n    toTutorial: () => setPage(Page.Tutorial),\n    toJob: () => {\n      setLocation(Locations[player.companyName]);\n      setPage(Page.Job);\n    },\n    toCity: () => {\n      setPage(Page.City);\n    },\n    toTravel: () => {\n      player.gotoLocation(LocationName.TravelAgency);\n      setPage(Page.Travel);\n    },\n    toBitVerse: (flume: boolean, quick: boolean) => {\n      setFlume(flume);\n      setQuick(quick);\n      setPage(Page.BitVerse);\n    },\n    toInfiltration: (location: Location) => {\n      setLocation(location);\n      setPage(Page.Infiltration);\n    },\n    toWork: () => setPage(Page.Work),\n    toBladeburnerCinematic: () => {\n      setPage(Page.BladeburnerCinematic);\n      setCinematicText(cinematicText);\n    },\n    toLocation: (location: Location) => {\n      setLocation(location);\n      setPage(Page.Location);\n    },\n    toHackingMission: (faction: Faction) => {\n      setPage(Page.HackingMission);\n      setFaction(faction);\n    },\n  };\n\n  useEffect(() => {\n    filename = \"\";\n    code = \"\";\n    if (page !== Page.Terminal) window.scrollTo(0, 0);\n  });\n\n  return (\n    <Context.Player.Provider value={player}>\n      <Context.Router.Provider value={Router}>\n        <Overview>\n          {!ITutorial.isRunning ? (\n            <CharacterOverview save={() => saveObject.saveGame()} />\n          ) : (\n            <InteractiveTutorialRoot />\n          )}\n        </Overview>\n        {page === Page.BitVerse ? (\n          <BitverseRoot flume={flume} enter={enterBitNode} quick={quick} />\n        ) : page === Page.Infiltration ? (\n          <InfiltrationRoot location={location} />\n        ) : page === Page.HackingMission ? (\n          <HackingMissionRoot faction={faction} />\n        ) : page === Page.BladeburnerCinematic ? (\n          <BladeburnerCinematic />\n        ) : page === Page.Work ? (\n          <WorkInProgressRoot />\n        ) : (\n          <Box display=\"flex\" flexDirection=\"row\" width=\"100%\">\n            <SidebarRoot player={player} router={Router} page={page} />\n            <Box className={classes.root} flexGrow={1} display=\"block\" px={1} height=\"100vh\">\n              {page === Page.Terminal ? (\n                <TerminalRoot terminal={terminal} router={Router} player={player} />\n              ) : page === Page.Sleeves ? (\n                <SleeveRoot />\n              ) : page === Page.Stats ? (\n                <CharacterStats />\n              ) : page === Page.CreateScript ? (\n                <ScriptEditorRoot filename={filename} code={code} player={player} router={Router} />\n              ) : page === Page.ActiveScripts ? (\n                <ActiveScriptsRoot workerScripts={workerScripts} />\n              ) : page === Page.Hacknet ? (\n                <HacknetRoot player={player} />\n              ) : page === Page.CreateProgram ? (\n                <ProgramsRoot />\n              ) : page === Page.Factions ? (\n                <FactionsRoot player={player} router={Router} />\n              ) : page === Page.Faction ? (\n                <FactionRoot faction={faction} />\n              ) : page === Page.Milestones ? (\n                <MilestonesRoot player={player} />\n              ) : page === Page.Tutorial ? (\n                <TutorialRoot />\n              ) : page === Page.DevMenu ? (\n                <DevMenuRoot player={player} engine={engine} router={Router} />\n              ) : page === Page.Gang ? (\n                <GangRoot />\n              ) : page === Page.Corporation ? (\n                <CorporationRoot />\n              ) : page === Page.Bladeburner ? (\n                <BladeburnerRoot />\n              ) : page === Page.Resleeves ? (\n                <ResleeveRoot />\n              ) : page === Page.Travel ? (\n                <TravelAgencyRoot p={player} router={Router} />\n              ) : page === Page.StockMarket ? (\n                <StockMarketRoot\n                  buyStockLong={buyStock}\n                  buyStockShort={shortStock}\n                  cancelOrder={cancelOrder}\n                  eventEmitterForReset={eventEmitterForUiReset}\n                  initStockMarket={initStockMarketFnForReact}\n                  p={player}\n                  placeOrder={placeOrder}\n                  sellStockLong={sellStock}\n                  sellStockShort={sellShort}\n                  stockMarket={StockMarket}\n                />\n              ) : page === Page.City ? (\n                <LocationCity />\n              ) : page === Page.Job ? (\n                <GenericLocation loc={location} />\n              ) : page === Page.Location ? (\n                <GenericLocation loc={location} />\n              ) : page === Page.Options ? (\n                <GameOptionsRoot\n                  player={player}\n                  save={() => saveObject.saveGame()}\n                  export={() => saveObject.exportGame()}\n                  forceKill={() => {\n                    for (const hostname of Object.keys(AllServers)) {\n                      AllServers[hostname].runningScripts = [];\n                    }\n                    dialogBoxCreate(\"Forcefully deleted all running scripts. Please save and refresh page.\");\n                  }}\n                  softReset={() => {\n                    dialogBoxCreate(\"Soft Reset!\");\n                    prestigeAugmentation();\n                    Router.toTerminal();\n                  }}\n                />\n              ) : page === Page.Augmentations ? (\n                <AugmentationsRoot\n                  exportGameFn={() => {\n                    saveObject.exportGame();\n                    onExport(player);\n                  }}\n                  installAugmentationsFn={() => {\n                    installAugmentations();\n                    Router.toTerminal();\n                  }}\n                />\n              ) : (\n                <>\n                  <Typography>Cannot load</Typography>\n                </>\n              )}\n            </Box>\n          </Box>\n        )}\n        <Unclickable />\n        <Snackbar />\n        <LogBoxManager />\n        <AlertManager />\n        <InvitationModal />\n      </Context.Router.Provider>\n    </Context.Player.Provider>\n  );\n}\n","/**\n * Checks whether the value passed in can be considered a string.\n * @param value The value to check if it is a string.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function isString(value: any): boolean {\n  return typeof value === \"string\" || value instanceof String;\n}\n","// Defines the ResearchTree that is common to all Corporation Industries\n// i.e. all Industries have these types of Research available to unlock\nimport { Research } from \"../Research\";\nimport { ResearchMap } from \"../ResearchMap\";\nimport { ResearchTree, Node } from \"../ResearchTree\";\n\nfunction makeNode(name: string): Node {\n  const research: Research | null = ResearchMap[name];\n  if (research == null) {\n    throw new Error(`Invalid research name: ${name}`);\n  }\n\n  return new Node({ text: research.name, cost: research.cost });\n}\n\n// Creates the Nodes for the BaseResearchTree.\n// Return the Root Node\nfunction createBaseResearchTreeNodes(): Node {\n  const rootNode: Node = makeNode(\"Hi-Tech R&D Laboratory\");\n  const autoBrew: Node = makeNode(\"AutoBrew\");\n  const autoParty: Node = makeNode(\"AutoPartyManager\");\n  const autoDrugs: Node = makeNode(\"Automatic Drug Administration\");\n  const bulkPurchasing: Node = makeNode(\"Bulk Purchasing\");\n  const cph4: Node = makeNode(\"CPH4 Injections\");\n  const drones: Node = makeNode(\"Drones\");\n  const dronesAssembly: Node = makeNode(\"Drones - Assembly\");\n  const dronesTransport: Node = makeNode(\"Drones - Transport\");\n  const goJuice: Node = makeNode(\"Go-Juice\");\n  const hrRecruitment: Node = makeNode(\"HRBuddy-Recruitment\");\n  const hrTraining: Node = makeNode(\"HRBuddy-Training\");\n  const joywire: Node = makeNode(\"JoyWire\");\n  const marketta1: Node = makeNode(\"Market-TA.I\");\n  const marketta2: Node = makeNode(\"Market-TA.II\");\n  const overclock: Node = makeNode(\"Overclock\");\n  const scAssemblers: Node = makeNode(\"Self-Correcting Assemblers\");\n  const stimu: Node = makeNode(\"Sti.mu\");\n\n  autoDrugs.addChild(goJuice);\n  autoDrugs.addChild(cph4);\n\n  drones.addChild(dronesAssembly);\n  drones.addChild(dronesTransport);\n\n  hrRecruitment.addChild(hrTraining);\n\n  marketta1.addChild(marketta2);\n\n  overclock.addChild(stimu);\n\n  rootNode.addChild(autoBrew);\n  rootNode.addChild(autoParty);\n  rootNode.addChild(autoDrugs);\n  rootNode.addChild(bulkPurchasing);\n  rootNode.addChild(drones);\n  rootNode.addChild(hrRecruitment);\n  rootNode.addChild(joywire);\n  rootNode.addChild(marketta1);\n  rootNode.addChild(overclock);\n  rootNode.addChild(scAssemblers);\n\n  return rootNode;\n}\n\nexport function getBaseResearchTreeCopy(): ResearchTree {\n  const baseResearchTree: ResearchTree = new ResearchTree();\n  baseResearchTree.setRoot(createBaseResearchTreeNodes());\n\n  return baseResearchTree;\n}\n\n// Base Research Tree for Industry's that make products\nexport function getProductIndustryResearchTreeCopy(): ResearchTree {\n  const researchTree: ResearchTree = new ResearchTree();\n  const root = createBaseResearchTreeNodes();\n\n  const upgradeFulcrum = makeNode(\"uPgrade: Fulcrum\");\n  const upgradeCapacity1 = makeNode(\"uPgrade: Capacity.I\");\n  const upgradeCapacity2 = makeNode(\"uPgrade: Capacity.II\");\n  const upgradeDashboard = makeNode(\"uPgrade: Dashboard\");\n\n  upgradeCapacity1.addChild(upgradeCapacity2);\n  upgradeFulcrum.addChild(upgradeCapacity1);\n  upgradeFulcrum.addChild(upgradeDashboard);\n  root.addChild(upgradeFulcrum);\n\n  researchTree.setRoot(root);\n\n  return researchTree;\n}\n","import { Augmentations } from \"../Augmentation/Augmentations\";\nimport { Augmentation } from \"../Augmentation/Augmentation\";\nimport { PlayerOwnedAugmentation } from \"../Augmentation/PlayerOwnedAugmentation\";\nimport { AugmentationNames } from \"../Augmentation/data/AugmentationNames\";\nimport { BitNodeMultipliers } from \"../BitNode/BitNodeMultipliers\";\nimport { CONSTANTS } from \"../Constants\";\n\nimport { Faction } from \"./Faction\";\nimport { Factions } from \"./Factions\";\nimport { HackingMission, setInMission } from \"../Missions\";\nimport { Player } from \"../Player\";\nimport { Settings } from \"../Settings/Settings\";\nimport {\n  getHackingWorkRepGain,\n  getFactionSecurityWorkRepGain,\n  getFactionFieldWorkRepGain,\n} from \"../PersonObjects/formulas/reputation\";\nimport { SourceFileFlags } from \"../SourceFile/SourceFileFlags\";\n\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\nimport { InvitationEvent } from \"./ui/InvitationModal\";\n\nexport function inviteToFaction(faction: Faction): void {\n  Player.factionInvitations.push(faction.name);\n  faction.alreadyInvited = true;\n  if (!Settings.SuppressFactionInvites) {\n    InvitationEvent.emit(faction);\n  }\n}\n\nexport function joinFaction(faction: Faction): void {\n  if (faction.isMember) return;\n  faction.isMember = true;\n  Player.factions.push(faction.name);\n  const factionInfo = faction.getInfo();\n\n  //Determine what factions you are banned from now that you have joined this faction\n  for (const i in factionInfo.enemies) {\n    const enemy = factionInfo.enemies[i];\n    if (Factions[enemy] instanceof Faction) {\n      Factions[enemy].isBanned = true;\n    }\n  }\n  for (let i = 0; i < Player.factionInvitations.length; ++i) {\n    if (Player.factionInvitations[i] == faction.name || Factions[Player.factionInvitations[i]].isBanned) {\n      Player.factionInvitations.splice(i, 1);\n      i--;\n    }\n  }\n}\n\nexport function startHackingMission(faction: Faction): void {\n  const mission = new HackingMission(faction.playerReputation, faction);\n  setInMission(true, mission); //Sets inMission flag to true\n  mission.init();\n}\n\n//Returns a boolean indicating whether the player has the prerequisites for the\n//specified Augmentation\nexport function hasAugmentationPrereqs(aug: Augmentation): boolean {\n  let hasPrereqs = true;\n  if (aug.prereqs && aug.prereqs.length > 0) {\n    for (let i = 0; i < aug.prereqs.length; ++i) {\n      const prereqAug = Augmentations[aug.prereqs[i]];\n      if (prereqAug == null) {\n        console.error(`Invalid prereq Augmentation ${aug.prereqs[i]}`);\n        continue;\n      }\n      if (prereqAug.owned === false) {\n        hasPrereqs = false;\n\n        // Check if the aug is purchased\n        for (let j = 0; j < Player.queuedAugmentations.length; ++j) {\n          if (Player.queuedAugmentations[j].name === prereqAug.name) {\n            hasPrereqs = true;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  return hasPrereqs;\n}\n\nexport function purchaseAugmentation(aug: Augmentation, fac: Faction, sing = false): string {\n  const factionInfo = fac.getInfo();\n  const hasPrereqs = hasAugmentationPrereqs(aug);\n  if (!hasPrereqs) {\n    const txt =\n      \"You must first purchase or install \" + aug.prereqs.join(\",\") + \" before you can \" + \"purchase this one.\";\n    if (sing) {\n      return txt;\n    } else {\n      dialogBoxCreate(txt);\n    }\n  } else if (aug.baseCost !== 0 && Player.money.lt(aug.baseCost * factionInfo.augmentationPriceMult)) {\n    const txt = \"You don't have enough money to purchase \" + aug.name;\n    if (sing) {\n      return txt;\n    }\n    dialogBoxCreate(txt);\n  } else if (fac.playerReputation < aug.baseRepRequirement) {\n    const txt = \"You don't have enough faction reputation to purchase \" + aug.name;\n    if (sing) {\n      return txt;\n    }\n    dialogBoxCreate(txt);\n  } else if (aug.baseCost === 0 || Player.money.gte(aug.baseCost * factionInfo.augmentationPriceMult)) {\n    const queuedAugmentation = new PlayerOwnedAugmentation(aug.name);\n    if (aug.name == AugmentationNames.NeuroFluxGovernor) {\n      queuedAugmentation.level = getNextNeurofluxLevel();\n    }\n    Player.queuedAugmentations.push(queuedAugmentation);\n\n    Player.loseMoney(aug.baseCost * factionInfo.augmentationPriceMult);\n\n    // If you just purchased Neuroflux Governor, recalculate the cost\n    if (aug.name == AugmentationNames.NeuroFluxGovernor) {\n      let nextLevel = getNextNeurofluxLevel();\n      --nextLevel;\n      const mult = Math.pow(CONSTANTS.NeuroFluxGovernorLevelMult, nextLevel);\n      aug.baseRepRequirement = 500 * mult * BitNodeMultipliers.AugmentationRepCost;\n      aug.baseCost = 750e3 * mult * BitNodeMultipliers.AugmentationMoneyCost;\n\n      for (let i = 0; i < Player.queuedAugmentations.length - 1; ++i) {\n        aug.baseCost *= CONSTANTS.MultipleAugMultiplier * [1, 0.96, 0.94, 0.93][SourceFileFlags[11]];\n      }\n    }\n\n    for (const name in Augmentations) {\n      if (Augmentations.hasOwnProperty(name)) {\n        Augmentations[name].baseCost *= CONSTANTS.MultipleAugMultiplier * [1, 0.96, 0.94, 0.93][SourceFileFlags[11]];\n      }\n    }\n\n    if (sing) {\n      return \"You purchased \" + aug.name;\n    } else {\n      if (!Settings.SuppressBuyAugmentationConfirmation) {\n        dialogBoxCreate(\n          \"You purchased \" +\n            aug.name +\n            \". It's enhancements will not take \" +\n            \"effect until they are installed. To install your augmentations, go to the \" +\n            \"'Augmentations' tab on the left-hand navigation menu. Purchasing additional \" +\n            \"augmentations will now be more expensive.\",\n        );\n      }\n    }\n  } else {\n    dialogBoxCreate(\n      \"Hmm, something went wrong when trying to purchase an Augmentation. \" +\n        \"Please report this to the game developer with an explanation of how to \" +\n        \"reproduce this.\",\n    );\n  }\n  return \"\";\n}\n\nexport function getNextNeurofluxLevel(): number {\n  // Get current Neuroflux level based on Player's augmentations\n  let currLevel = 0;\n  for (let i = 0; i < Player.augmentations.length; ++i) {\n    if (Player.augmentations[i].name === AugmentationNames.NeuroFluxGovernor) {\n      currLevel = Player.augmentations[i].level;\n    }\n  }\n\n  // Account for purchased but uninstalled Augmentations\n  for (let i = 0; i < Player.queuedAugmentations.length; ++i) {\n    if (Player.queuedAugmentations[i].name == AugmentationNames.NeuroFluxGovernor) {\n      ++currLevel;\n    }\n  }\n  return currLevel + 1;\n}\n\nexport function processPassiveFactionRepGain(numCycles: number): void {\n  for (const name in Factions) {\n    if (name === Player.currentWorkFactionName) continue;\n    if (!Factions.hasOwnProperty(name)) continue;\n    const faction = Factions[name];\n    if (!faction.isMember) continue;\n    // No passive rep for special factions\n    const info = faction.getInfo();\n    if (!info.offersWork()) continue;\n    // No passive rep for gangs.\n    if (Player.getGangName() === name) continue;\n    // 0 favor = 1%/s\n    // 50 favor = 6%/s\n    // 100 favor = 11%/s\n    const favorMult = Math.min(0.1, faction.favor / 1000 + 0.01);\n    // Find the best of all possible favor gain, minimum 1 rep / 2 minute.\n    const hRep = getHackingWorkRepGain(Player, faction);\n    const sRep = getFactionSecurityWorkRepGain(Player, faction);\n    const fRep = getFactionFieldWorkRepGain(Player, faction);\n    const rate = Math.max(hRep * favorMult, sRep * favorMult, fRep * favorMult, 1 / 120);\n\n    faction.playerReputation += rate * numCycles * Player.faction_rep_mult * BitNodeMultipliers.FactionPassiveRepGain;\n  }\n}\n","/**\n * Helper functions that implement \"directory\" functionality in the Terminal.\n * These aren't \"real\" directories, it's more of a pseudo-directory implementation\n * that uses mainly string manipulation.\n *\n * This file contains functions that deal only with that string manipulation.\n * Functions that need to access/process Server-related things can be\n * found in ./DirectoryServerHelpers.ts\n */\n\n/**\n * Removes leading forward slash (\"/\") from a string.\n */\nexport function removeLeadingSlash(s: string): string {\n  if (s.startsWith(\"/\")) {\n    return s.slice(1);\n  }\n\n  return s;\n}\n\n/**\n * Removes trailing forward slash (\"/\") from a string.\n * Note that this will also remove the slash if it is the leading slash (i.e. if s = \"/\")\n */\nexport function removeTrailingSlash(s: string): string {\n  if (s.endsWith(\"/\")) {\n    return s.slice(0, -1);\n  }\n\n  return s;\n}\n\n/**\n * Checks whether a string is a valid filename. Only used for the filename itself,\n * not the entire filepath\n */\nexport function isValidFilename(filename: string): boolean {\n  // Allows alphanumerics, hyphens, underscores, and percentage signs\n  // Must have a file extension\n  const regex = /^[.a-zA-Z0-9_-]+[.][a-zA-Z0-9]+(?:-\\d+(?:\\.\\d*)?%-INC)?$/;\n\n  // match() returns null if no match is found\n  return filename.match(regex) != null;\n}\n\n/**\n * Checks whether a string is a valid directory name. Only used for the directory itself,\n * not an entire path\n */\nexport function isValidDirectoryName(name: string): boolean {\n  // Allows alphanumerics, hyphens, underscores, and percentage signs.\n  // Name can begin with a single period, but otherwise cannot have any\n  const regex = /^.?[a-zA-Z0-9_-]+$/;\n\n  // match() returns null if no match is found\n  return name.match(regex) != null;\n}\n\n/**\n * Checks whether a string is a valid directory path.\n * This only checks if it has the proper formatting. It does NOT check\n * if the directories actually exist on Terminal\n */\nexport function isValidDirectoryPath(path: string): boolean {\n  let t_path: string = path;\n\n  if (t_path.length === 0) {\n    return false;\n  }\n  if (t_path.length === 1) {\n    return t_path === \"/\";\n  }\n\n  // A full path must have a leading slash, but we'll ignore it for the checks\n  if (t_path.startsWith(\"/\")) {\n    t_path = t_path.slice(1);\n  } else {\n    return false;\n  }\n\n  // Trailing slash does not matter\n  t_path = removeTrailingSlash(t_path);\n\n  // Check that every section of the path is a valid directory name\n  const dirs = t_path.split(\"/\");\n  for (const dir of dirs) {\n    // Special case, \".\" and \"..\" are valid for path\n    if (dir === \".\" || dir === \"..\") {\n      continue;\n    }\n    if (!isValidDirectoryName(dir)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Checks whether a string is a valid file path. This only checks if it has the\n * proper formatting. It dose NOT check if the file actually exists on Terminal\n */\nexport function isValidFilePath(path: string): boolean {\n  if (path == null || typeof path !== \"string\") {\n    return false;\n  }\n  const t_path = path;\n\n  // Impossible for filename to have less than length of 3\n  if (t_path.length < 3) {\n    return false;\n  }\n\n  // Full filepath can't end with trailing slash because it must be a file\n  if (t_path.endsWith(\"/\")) {\n    return false;\n  }\n\n  // Everything after the last forward slash is the filename. Everything before\n  // it is the file path\n  const fnSeparator = t_path.lastIndexOf(\"/\");\n  if (fnSeparator === -1) {\n    return isValidFilename(t_path);\n  }\n\n  const fn = t_path.slice(fnSeparator + 1);\n  const dirPath = t_path.slice(0, fnSeparator + 1);\n\n  return isValidDirectoryPath(dirPath) && isValidFilename(fn);\n}\n\n/**\n * Returns a formatted string for the first parent directory in a filepath. For example:\n * /home/var/test/ -> home/\n * If there is no first parent directory, then it returns \"/\" for root\n */\nexport function getFirstParentDirectory(path: string): string {\n  let t_path = path;\n  t_path = removeLeadingSlash(t_path);\n  t_path = removeTrailingSlash(t_path);\n\n  if (t_path.lastIndexOf(\"/\") === -1) {\n    return \"/\";\n  }\n\n  const dirs = t_path.split(\"/\");\n  if (dirs.length === 0) {\n    return \"/\";\n  }\n\n  return dirs[0] + \"/\";\n}\n\n/**\n * Given a filepath, returns a formatted string for all of the parent directories\n * in that filepath. For example:\n * /home/var/tes -> home/var/\n * /home/var/test/ -> home/var/test/\n * If there are no parent directories, it returns the empty string\n */\nexport function getAllParentDirectories(path: string): string {\n  const t_path = path;\n  const lastSlash = t_path.lastIndexOf(\"/\");\n  if (lastSlash === -1) {\n    return \"\";\n  }\n\n  return t_path.slice(0, lastSlash + 1);\n}\n\n/**\n * Checks if a file path refers to a file in the root directory.\n */\nexport function isInRootDirectory(path: string): boolean {\n  if (!isValidFilePath(path)) {\n    return false;\n  }\n  if (path == null || path.length === 0) {\n    return false;\n  }\n\n  return path.lastIndexOf(\"/\") <= 0;\n}\n\n/**\n * Evaluates a directory path, including the processing of linux dots.\n * Returns the full, proper path, or null if an invalid path is passed in\n */\nexport function evaluateDirectoryPath(path: string, currPath?: string): string | null {\n  let t_path = path;\n\n  // If the path begins with a slash, then its an absolute path. Otherwise its relative\n  // For relative paths, we need to prepend the current directory\n  if (!t_path.startsWith(\"/\") && currPath != null) {\n    t_path = currPath + (currPath.endsWith(\"/\") ? \"\" : \"/\") + t_path;\n  }\n\n  if (!isValidDirectoryPath(t_path)) {\n    return null;\n  }\n\n  // Trim leading/trailing slashes\n  t_path = removeLeadingSlash(t_path);\n  t_path = removeTrailingSlash(t_path);\n\n  const dirs = t_path.split(\"/\");\n  const reconstructedPath: string[] = [];\n\n  for (const dir of dirs) {\n    if (dir === \".\") {\n      // Current directory, do nothing\n      continue;\n    } else if (dir === \"..\") {\n      // Parent directory\n      const res = reconstructedPath.pop();\n      if (res == null) {\n        return null; // Array was empty, invalid path\n      }\n    } else {\n      reconstructedPath.push(dir);\n    }\n  }\n\n  return \"/\" + reconstructedPath.join(\"/\");\n}\n\n/**\n * Evaluates a file path, including the processing of linux dots.\n * Returns the full, proper path, or null if an invalid path is passed in\n */\nexport function evaluateFilePath(path: string, currPath?: string): string | null {\n  let t_path = path;\n\n  // If the path begins with a slash, then its an absolute path. Otherwise its relative\n  // For relative paths, we need to prepend the current directory\n  if (!t_path.startsWith(\"/\") && currPath != null) {\n    t_path = currPath + (currPath.endsWith(\"/\") ? \"\" : \"/\") + t_path;\n  }\n\n  if (!isValidFilePath(t_path)) {\n    return null;\n  }\n\n  // Trim leading/trailing slashes\n  t_path = removeLeadingSlash(t_path);\n\n  const dirs = t_path.split(\"/\");\n  const reconstructedPath: string[] = [];\n\n  for (const dir of dirs) {\n    if (dir === \".\") {\n      // Current directory, do nothing\n      continue;\n    } else if (dir === \"..\") {\n      // Parent directory\n      const res = reconstructedPath.pop();\n      if (res == null) {\n        return null; // Array was empty, invalid path\n      }\n    } else {\n      reconstructedPath.push(dir);\n    }\n  }\n\n  return \"/\" + reconstructedPath.join(\"/\");\n}\n","import React from \"react\";\n\nimport { Table, TableCell } from \"./Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport { Table as MuiTable } from \"@mui/material\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface IProps {\n  rows: any[][];\n  title?: string;\n  wide?: boolean;\n}\n\nexport function StatsTable({ rows, title, wide }: IProps): React.ReactElement {\n  const T = wide ? MuiTable : Table;\n  return (\n    <>\n      {title && <Typography>{title}</Typography>}\n      <T size=\"small\" padding=\"none\">\n        <TableBody>\n          {rows.map((row: any[], i: number) => (\n            <TableRow key={i}>\n              {row.map((elem: any, i: number) => (\n                <TableCell key={i} align={i !== 0 ? \"right\" : \"left\"}>\n                  <Typography noWrap>{elem}</Typography>\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </T>\n    </>\n  );\n}\n","import { Operation, IOperationParams } from \"./Operation\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\n\nexport class BlackOperation extends Operation {\n  constructor(params: IOperationParams | null = null) {\n    super(params);\n    this.count = 1;\n  }\n\n  // To be implemented by subtypes\n  getActionTimePenalty(): number {\n    return 1.5;\n  }\n\n  getChaosCompetencePenalty(/*inst: IBladeburner, params: ISuccessChanceParams*/): number {\n    return 1;\n  }\n\n  getChaosDifficultyBonus(/*inst: IBladeburner, params: ISuccessChanceParams*/): number {\n    return 1;\n  }\n\n  toJSON(): any {\n    return Generic_toJSON(\"BlackOperation\", this);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Operation {\n    return Generic_fromJSON(BlackOperation, value.data);\n  }\n}\n\nReviver.constructors.BlackOperation = BlackOperation;\n","import { Terminal as TTerminal } from \"./Terminal/Terminal\";\n\nexport const Terminal = new TTerminal();\n","import * as React from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { ICorporation } from \"../ICorporation\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    unbuyable: {\n      color: theme.palette.action.disabled,\n    },\n    money: {\n      color: theme.colors.money,\n    },\n  }),\n);\n\ninterface IProps {\n  money: number;\n  corp: ICorporation;\n}\n\nexport function MoneyCost(props: IProps): React.ReactElement {\n  const classes = useStyles();\n  if (!props.corp.funds.gt(props.money))\n    return <span className={classes.unbuyable}>{numeralWrapper.formatMoney(props.money)}</span>;\n\n  return <span className={classes.money}>{numeralWrapper.formatMoney(props.money)}</span>;\n}\n","import { Reviver, Generic_toJSON, Generic_fromJSON } from \"../utils/JSONReviver\";\n\nexport class Message {\n  // Name of Message file\n  filename = \"\";\n\n  // The text contains in the Message\n  msg = \"\";\n\n  // Flag indicating whether this Message has been received by the player\n  recvd = false;\n\n  constructor(filename = \"\", msg = \"\") {\n    this.filename = filename;\n    this.msg = msg;\n    this.recvd = false;\n  }\n\n  // Serialize the current object to a JSON save state\n  toJSON(): any {\n    return Generic_toJSON(\"Message\", this);\n  }\n\n  // Initializes a Message Object from a JSON save state\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Message {\n    return Generic_fromJSON(Message, value.data);\n  }\n}\n\nReviver.constructors.Message = Message;\n","export const SkillNames: {\n  BladesIntuition: string;\n  Cloak: string;\n  Marksman: string;\n  WeaponProficiency: string;\n  ShortCircuit: string;\n  DigitalObserver: string;\n  Tracer: string;\n  Overclock: string;\n  Reaper: string;\n  EvasiveSystem: string;\n  Datamancer: string;\n  CybersEdge: string;\n  HandsOfMidas: string;\n  Hyperdrive: string;\n} = {\n  BladesIntuition: \"Blade's Intuition\",\n  Cloak: \"Cloak\",\n  Marksman: \"Marksman\",\n  WeaponProficiency: \"Weapon Proficiency\",\n  ShortCircuit: \"Short-Circuit\",\n  DigitalObserver: \"Digital Observer\",\n  Tracer: \"Tracer\",\n  Overclock: \"Overclock\",\n  Reaper: \"Reaper\",\n  EvasiveSystem: \"Evasive System\",\n  Datamancer: \"Datamancer\",\n  CybersEdge: \"Cyber's Edge\",\n  HandsOfMidas: \"Hands of Midas\",\n  Hyperdrive: \"Hyperdrive\",\n};\n","import { IMinMaxRange } from \"../types\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\nimport { getRandomInt } from \"../utils/helpers/getRandomInt\";\n\nexport const StockForecastInfluenceLimit = 5;\n\nexport interface IConstructorParams {\n  b: boolean;\n  initPrice: number | IMinMaxRange;\n  marketCap: number;\n  mv: number | IMinMaxRange;\n  name: string;\n  otlkMag: number;\n  spreadPerc: number | IMinMaxRange;\n  shareTxForMovement: number | IMinMaxRange;\n  symbol: string;\n}\n\nconst defaultConstructorParams: IConstructorParams = {\n  b: true,\n  initPrice: 10e3,\n  marketCap: 1e12,\n  mv: 1,\n  name: \"\",\n  otlkMag: 0,\n  spreadPerc: 0,\n  shareTxForMovement: 1e6,\n  symbol: \"\",\n};\n\n// Helper function that convert a IMinMaxRange to a number\nfunction toNumber(n: number | IMinMaxRange): number {\n  let value: number;\n  switch (typeof n) {\n    case \"number\": {\n      return n;\n    }\n    case \"object\": {\n      const range = n as IMinMaxRange;\n      value = getRandomInt(range.min, range.max);\n      break;\n    }\n    default:\n      throw Error(`Do not know how to convert the type '${typeof n}' to a number`);\n  }\n\n  if (typeof n === \"object\" && typeof n.divisor === \"number\") {\n    return value / n.divisor;\n  }\n\n  return value;\n}\n\n/**\n * Represents the valuation of a company in the World Stock Exchange.\n */\nexport class Stock {\n  /**\n   * Bear or bull (more likely to go up or down, based on otlkMag)\n   */\n  b: boolean;\n\n  /**\n   * Maximum price of a stock (per share)\n   */\n  readonly cap: number;\n\n  /**\n   * Stocks previous share price\n   */\n  lastPrice: number;\n\n  /**\n   * Maximum number of shares that player can own (both long and short combined)\n   */\n  readonly maxShares: number;\n\n  /**\n   * Maximum volatility\n   */\n  readonly mv: number;\n\n  /**\n   * Name of the company that the stock is for\n   */\n  readonly name: string;\n\n  /**\n   * Outlook magnitude. Represents the stock's forecast and likelihood\n   * of increasing/decreasing (based on whether its in bear or bull mode)\n   */\n  otlkMag: number;\n\n  /**\n   * Forecast of outlook magnitude. Essentially a second-order forecast.\n   * Unlike 'otlkMag', this number is on an absolute scale from 0-100 (rather than 0-50)\n   */\n  otlkMagForecast: number;\n\n  /**\n   * Average price of stocks that the player owns in the LONG position\n   */\n  playerAvgPx: number;\n\n  /**\n   * Average price of stocks that the player owns in the SHORT position\n   */\n  playerAvgShortPx: number;\n\n  /**\n   * Number of shares the player owns in the LONG position\n   */\n  playerShares: number;\n\n  /**\n   * Number of shares the player owns in the SHORT position\n   */\n  playerShortShares: number;\n\n  /**\n   * Stock's share price\n   */\n  price: number;\n\n  /**\n   * How many shares need to be transacted in order to trigger a price movement\n   */\n  readonly shareTxForMovement: number;\n\n  /**\n   * How many share transactions remaining until a price movement occurs\n   * (separately tracked for upward and downward movements)\n   */\n  shareTxUntilMovement: number;\n\n  /**\n   * Spread percentage. The bid/ask prices for this stock are N% above or below\n   * the \"real price\" to emulate spread.\n   */\n  readonly spreadPerc: number;\n\n  /**\n   * The stock's ticker symbol\n   */\n  readonly symbol: string;\n\n  /**\n   * Total number of shares of this stock\n   * This is different than maxShares, as this is like authorized stock while\n   * maxShares is outstanding stock.\n   */\n  readonly totalShares: number;\n\n  constructor(p: IConstructorParams = defaultConstructorParams) {\n    this.name = p.name;\n    this.symbol = p.symbol;\n    this.price = toNumber(p.initPrice);\n    this.lastPrice = this.price;\n    this.playerShares = 0;\n    this.playerAvgPx = 0;\n    this.playerShortShares = 0;\n    this.playerAvgShortPx = 0;\n    this.mv = toNumber(p.mv);\n    this.b = p.b;\n    this.otlkMag = p.otlkMag;\n    this.otlkMagForecast = this.getAbsoluteForecast();\n    this.cap = getRandomInt(this.price * 1e3, this.price * 25e3);\n    this.spreadPerc = toNumber(p.spreadPerc);\n    this.shareTxForMovement = toNumber(p.shareTxForMovement);\n    this.shareTxUntilMovement = this.shareTxForMovement;\n\n    // Total shares is determined by market cap, and is rounded to nearest 100k\n    const totalSharesUnrounded: number = p.marketCap / this.price;\n    this.totalShares = Math.round(totalSharesUnrounded / 1e5) * 1e5;\n\n    // Max Shares (Outstanding shares) is a percentage of total shares\n    const outstandingSharePercentage = 0.2;\n    this.maxShares = Math.round((this.totalShares * outstandingSharePercentage) / 1e5) * 1e5;\n  }\n\n  /**\n   * Safely set the stock's second-order forecast to a new value\n   */\n  changeForecastForecast(newff: number): void {\n    this.otlkMagForecast = newff;\n    if (this.otlkMagForecast > 100) {\n      this.otlkMagForecast = 100;\n    } else if (this.otlkMagForecast < 0) {\n      this.otlkMagForecast = 0;\n    }\n  }\n\n  /**\n   * Set the stock to a new price. Also updates the stock's previous price tracker\n   */\n  changePrice(newPrice: number): void {\n    this.lastPrice = this.price;\n    this.price = newPrice;\n  }\n\n  /**\n   * Change the stock's forecast during a stock market 'tick'.\n   * The way a stock's forecast changes depends on various internal properties,\n   * but is ultimately determined by RNG\n   */\n  cycleForecast(changeAmt = 0.1): void {\n    const increaseChance = this.getForecastIncreaseChance();\n\n    if (Math.random() < increaseChance) {\n      // Forecast increases\n      if (this.b) {\n        this.otlkMag += changeAmt;\n      } else {\n        this.otlkMag -= changeAmt;\n      }\n    } else {\n      // Forecast decreases\n      if (this.b) {\n        this.otlkMag -= changeAmt;\n      } else {\n        this.otlkMag += changeAmt;\n      }\n    }\n\n    this.otlkMag = Math.min(this.otlkMag, 50);\n    if (this.otlkMag < 0) {\n      this.otlkMag *= -1;\n      this.b = !this.b;\n    }\n  }\n\n  /**\n   * Change's the stock's second-order forecast during a stock market 'tick'.\n   * The change for the second-order forecast to increase is 50/50\n   */\n  cycleForecastForecast(changeAmt = 0.1): void {\n    if (Math.random() < 0.5) {\n      this.changeForecastForecast(this.otlkMagForecast + changeAmt);\n    } else {\n      this.changeForecastForecast(this.otlkMagForecast - changeAmt);\n    }\n  }\n\n  /**\n   * \"Flip\" the stock's second-order forecast. This can occur during a\n   * stock market \"cycle\" (determined by RNG). It is used to simulate\n   * RL stock market cycles and introduce volatility\n   */\n  flipForecastForecast(): void {\n    const diff = this.otlkMagForecast - 50;\n    this.otlkMagForecast = 50 + -1 * diff;\n  }\n\n  /**\n   * Returns the stock's absolute forecast, which is a number between 0-100\n   */\n  getAbsoluteForecast(): number {\n    return this.b ? 50 + this.otlkMag : 50 - this.otlkMag;\n  }\n\n  /**\n   * Return the price at which YOUR stock is bought (market ask price). Accounts for spread\n   */\n  getAskPrice(): number {\n    return this.price * (1 + this.spreadPerc / 100);\n  }\n\n  /**\n   * Return the price at which YOUR stock is sold (market bid price). Accounts for spread\n   */\n  getBidPrice(): number {\n    return this.price * (1 - this.spreadPerc / 100);\n  }\n\n  /**\n   * Returns the chance (0-1 decimal) that a stock has of having its forecast increase\n   */\n  getForecastIncreaseChance(): number {\n    const diff = this.otlkMagForecast - this.getAbsoluteForecast();\n\n    return (50 + Math.min(Math.max(diff, -45), 45)) / 100;\n  }\n\n  /**\n   * Changes a stock's forecast. This is used when the stock is influenced\n   * by a transaction. The stock's forecast always goes towards 50, but the\n   * movement is capped by a certain threshold/limit\n   */\n  influenceForecast(change: number): void {\n    if (this.otlkMag > StockForecastInfluenceLimit) {\n      this.otlkMag = Math.max(StockForecastInfluenceLimit, this.otlkMag - change);\n    }\n  }\n\n  /**\n   * Changes a stock's second-order forecast. This is used when the stock is\n   * influenced by a transaction. The stock's second-order forecast always\n   * goes towards 50.\n   */\n  influenceForecastForecast(change: number): void {\n    if (this.otlkMagForecast > 50) {\n      this.otlkMagForecast -= change;\n      this.otlkMagForecast = Math.max(50, this.otlkMagForecast);\n    } else if (this.otlkMagForecast < 50) {\n      this.otlkMagForecast += change;\n      this.otlkMagForecast = Math.min(50, this.otlkMagForecast);\n    }\n  }\n\n  /**\n   * Serialize the Stock to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"Stock\", this);\n  }\n\n  /**\n   * Initializes a Stock from a JSON save state\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Stock {\n    return Generic_fromJSON(Stock, value.data);\n  }\n}\n\nReviver.constructors.Stock = Stock;\n","/**\n * Stops an actively-running script (represented by a WorkerScript object)\n * and removes it from the global pool of active scripts.\n */\nimport { WorkerScript } from \"./WorkerScript\";\nimport { workerScripts } from \"./WorkerScripts\";\nimport { WorkerScriptStartStopEventEmitter } from \"./WorkerScriptStartStopEventEmitter\";\n\nimport { RunningScript } from \"../Script/RunningScript\";\nimport { AllServers } from \"../Server/AllServers\";\n\nimport { compareArrays } from \"../utils/helpers/compareArrays\";\nimport { roundToTwo } from \"../utils/helpers/roundToTwo\";\n\nexport function killWorkerScript(runningScriptObj: RunningScript, serverIp: string, rerenderUi?: boolean): boolean;\nexport function killWorkerScript(workerScript: WorkerScript): boolean;\nexport function killWorkerScript(pid: number): boolean;\nexport function killWorkerScript(\n  script: RunningScript | WorkerScript | number,\n  serverIp?: string,\n  rerenderUi?: boolean,\n): boolean {\n  if (rerenderUi == null || typeof rerenderUi !== \"boolean\") {\n    rerenderUi = true;\n  }\n\n  if (script instanceof WorkerScript) {\n    stopAndCleanUpWorkerScript(script);\n\n    return true;\n  } else if (script instanceof RunningScript && typeof serverIp === \"string\") {\n    // Try to kill by PID\n    const res = killWorkerScriptByPid(script.pid, rerenderUi);\n    if (res) {\n      return res;\n    }\n\n    // If for some reason that doesn't work, we'll try the old way\n    for (const ws of workerScripts.values()) {\n      if (ws.name == script.filename && ws.serverIp == serverIp && compareArrays(ws.args, script.args)) {\n        stopAndCleanUpWorkerScript(ws, rerenderUi);\n\n        return true;\n      }\n    }\n\n    return false;\n  } else if (typeof script === \"number\") {\n    return killWorkerScriptByPid(script, rerenderUi);\n  } else {\n    console.error(`killWorkerScript() called with invalid argument:`);\n    console.error(script);\n    return false;\n  }\n}\n\nfunction killWorkerScriptByPid(pid: number, rerenderUi = true): boolean {\n  const ws = workerScripts.get(pid);\n  if (ws instanceof WorkerScript) {\n    stopAndCleanUpWorkerScript(ws, rerenderUi);\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction stopAndCleanUpWorkerScript(workerScript: WorkerScript, rerenderUi = true): void {\n  workerScript.env.stopFlag = true;\n  killNetscriptDelay(workerScript);\n  removeWorkerScript(workerScript, rerenderUi);\n}\n\n/**\n * Helper function that removes the script being killed from the global pool.\n * Also handles other cleanup-time operations\n *\n * @param {WorkerScript | number} - Identifier for WorkerScript. Either the object itself, or\n *                                  its index in the global workerScripts array\n */\nfunction removeWorkerScript(workerScript: WorkerScript, rerenderUi = true): void {\n  if (workerScript instanceof WorkerScript) {\n    const ip = workerScript.serverIp;\n    const name = workerScript.name;\n\n    // Get the server on which the script runs\n    const server = AllServers[ip];\n    if (server == null) {\n      console.error(`Could not find server on which this script is running: ${ip}`);\n      return;\n    }\n\n    // Recalculate ram used on that server\n    server.ramUsed = roundToTwo(server.ramUsed - workerScript.ramUsage);\n    if (server.ramUsed < 0) {\n      console.warn(\n        `Server (${server.hostname}) RAM usage went negative (if it's due to floating pt imprecision, it's okay): ${server.ramUsed}`,\n      );\n      server.ramUsed = 0;\n    }\n\n    // Delete the RunningScript object from that server\n    for (let i = 0; i < server.runningScripts.length; ++i) {\n      const runningScript = server.runningScripts[i];\n      if (runningScript.filename === name && compareArrays(runningScript.args, workerScript.args)) {\n        server.runningScripts.splice(i, 1);\n        break;\n      }\n    }\n\n    // Delete script from global pool (workerScripts)\n    const res = workerScripts.delete(workerScript.pid);\n    if (!res) {\n      console.warn(`removeWorkerScript() called with WorkerScript that wasn't in the global map:`);\n      console.warn(workerScript);\n    }\n\n    if (rerenderUi) {\n      WorkerScriptStartStopEventEmitter.emit();\n    }\n  } else {\n    console.error(`Invalid argument passed into removeWorkerScript():`);\n    console.error(workerScript);\n    return;\n  }\n}\n\n/**\n * Helper function that interrupts a script's delay if it is in the middle of a\n * timed, blocked operation (like hack(), sleep(), etc.). This allows scripts to\n * be killed immediately even if they're in the middle of one of those long operations\n */\nfunction killNetscriptDelay(workerScript: WorkerScript): void {\n  if (workerScript instanceof WorkerScript) {\n    if (workerScript.delay) {\n      clearTimeout(workerScript.delay);\n      if (workerScript.delayResolve) {\n        workerScript.delayResolve();\n      }\n    }\n  }\n}\n","/**\n * Map of all Cities in the game\n * Key = City Name, Value = City object\n */\nimport { City } from \"./City\";\nimport { IMap } from \"../types\";\n\nexport const Cities: IMap<City> = {};\n","/**\n * Generic Event Emitter class following a subscribe/publish paradigm.\n */\n\ntype cbFn = (...args: any[]) => any;\n\nexport interface ISubscriber {\n  /**\n   * Callback function that will be run when an event is emitted\n   */\n  cb: cbFn;\n\n  /**\n   * Name/identifier for this subscriber\n   */\n  id: string;\n}\n\nfunction uuidv4(): string {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport class EventEmitter<T extends any[]> {\n  subscribers: { [key: string]: (...args: [...T]) => void | undefined } = {};\n\n  subscribe(s: (...args: [...T]) => void): () => void {\n    let uuid = uuidv4();\n    while (this.subscribers[uuid] !== undefined) uuid = uuidv4();\n    this.subscribers[uuid] = s;\n\n    return () => {\n      delete this.subscribers[uuid];\n    };\n  }\n\n  emit(...args: [...T]): void {\n    for (const s in this.subscribers) {\n      const sub = this.subscribers[s];\n      if (sub === undefined) continue;\n\n      sub(...args);\n    }\n  }\n}\n","import React, { useState } from \"react\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport DoubleArrowIcon from \"@mui/icons-material/DoubleArrow\";\nimport TextField from \"@mui/material/TextField\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\ninterface IProps {\n  label: string;\n  placeholder: string;\n  add: (x: number) => void;\n  subtract: (x: number) => void;\n  tons: () => void;\n  reset: () => void;\n}\n\nexport function Adjuster(props: IProps): React.ReactElement {\n  const [value, setValue] = useState<number | string>(\"\");\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    if (event.target.value === \"\") setValue(\"\");\n    else setValue(parseFloat(event.target.value));\n  }\n\n  const { label, placeholder, add, subtract, reset, tons } = props;\n  return (\n    <>\n      <TextField\n        label={label}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n        type=\"number\"\n        InputProps={{\n          startAdornment: (\n            <>\n              <Tooltip title=\"Add a lot\">\n                <IconButton onClick={tons} size=\"large\">\n                  <DoubleArrowIcon style={{ transform: \"rotate(-90deg)\" }} />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Add\">\n                <IconButton onClick={() => add(typeof value !== \"string\" ? value : 0)} size=\"large\">\n                  <AddIcon />\n                </IconButton>\n              </Tooltip>\n            </>\n          ),\n          endAdornment: (\n            <>\n              <Tooltip title=\"Remove\">\n                <IconButton onClick={() => subtract(typeof value !== \"string\" ? value : 0)} size=\"large\">\n                  <RemoveIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Reset\">\n                <IconButton onClick={reset} size=\"large\">\n                  <ClearIcon />\n                </IconButton>\n              </Tooltip>\n            </>\n          ),\n        }}\n      />\n    </>\n  );\n}\n","import { IMap } from \"./types\";\nimport { Terminal } from \"./Terminal\";\n\nexport let Aliases: IMap<string> = {};\nexport let GlobalAliases: IMap<string> = {};\n\nexport function loadAliases(saveString: string): void {\n  if (saveString === \"\") {\n    Aliases = {};\n  } else {\n    Aliases = JSON.parse(saveString);\n  }\n}\n\nexport function loadGlobalAliases(saveString: string): void {\n  if (saveString === \"\") {\n    GlobalAliases = {};\n  } else {\n    GlobalAliases = JSON.parse(saveString);\n  }\n}\n\n// Prints all aliases to terminal\nexport function printAliases(): void {\n  for (const name in Aliases) {\n    if (Aliases.hasOwnProperty(name)) {\n      Terminal.print(\"alias \" + name + \"=\" + Aliases[name]);\n    }\n  }\n  for (const name in GlobalAliases) {\n    if (GlobalAliases.hasOwnProperty(name)) {\n      Terminal.print(\"global alias \" + name + \"=\" + GlobalAliases[name]);\n    }\n  }\n}\n\n// Returns true if successful, false otherwise\nexport function parseAliasDeclaration(dec: string, global = false): boolean {\n  const re = /^([_|\\w|!|%|,|@]+)=\"(.+)\"$/;\n  const matches = dec.match(re);\n  if (matches == null || matches.length != 3) {\n    return false;\n  }\n  if (global) {\n    addGlobalAlias(matches[1], matches[2]);\n  } else {\n    addAlias(matches[1], matches[2]);\n  }\n  return true;\n}\n\nfunction addAlias(name: string, value: string): void {\n  if (name in GlobalAliases) {\n    delete GlobalAliases[name];\n  }\n  Aliases[name] = value.trim();\n}\n\nfunction addGlobalAlias(name: string, value: string): void {\n  if (name in Aliases) {\n    delete Aliases[name];\n  }\n  GlobalAliases[name] = value.trim();\n}\n\nfunction getAlias(name: string): string | null {\n  if (Aliases.hasOwnProperty(name)) {\n    return Aliases[name];\n  }\n\n  return null;\n}\n\nfunction getGlobalAlias(name: string): string | null {\n  if (GlobalAliases.hasOwnProperty(name)) {\n    return GlobalAliases[name];\n  }\n  return null;\n}\n\nexport function removeAlias(name: string): boolean {\n  if (Aliases.hasOwnProperty(name)) {\n    delete Aliases[name];\n    return true;\n  }\n\n  if (GlobalAliases.hasOwnProperty(name)) {\n    delete GlobalAliases[name];\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Returns the original string with any aliases substituted in.\n * Aliases are only applied to \"whole words\", one level deep\n */\nexport function substituteAliases(origCommand: string): string {\n  const commandArray = origCommand.split(\" \");\n  if (commandArray.length > 0) {\n    // For the alias and unalias commands, dont substite\n    if (commandArray[0] === \"unalias\" || commandArray[0] === \"alias\") {\n      return commandArray.join(\" \");\n    }\n\n    let somethingSubstituted = true;\n    let depth = 0;\n\n    while (somethingSubstituted && depth < 10) {\n      depth++;\n      somethingSubstituted = false;\n      const alias = getAlias(commandArray[0])?.split(\" \");\n      if (alias != null) {\n        somethingSubstituted = true;\n        commandArray.splice(0, 1, ...alias);\n        //commandArray[0] = alias;\n      }\n      for (let i = 0; i < commandArray.length; ++i) {\n        const alias = getGlobalAlias(commandArray[i])?.split(\" \");\n        if (alias != null) {\n          somethingSubstituted = true;\n          commandArray.splice(i, 1, ...alias);\n          i += alias.length - 1;\n          //commandArray[i] = alias;\n        }\n      }\n    }\n  }\n  return commandArray.join(\" \");\n}\n","import { setTimeoutRef } from \"./utils/SetTimeoutRef\";\n\nimport { isString } from \"./utils/helpers/isString\";\nimport { AllServers } from \"./Server/AllServers\";\nimport { WorkerScript } from \"./Netscript/WorkerScript\";\n\nexport function netscriptDelay(time: number, workerScript: WorkerScript): Promise<void> {\n  return new Promise(function (resolve) {\n    workerScript.delay = setTimeoutRef(() => {\n      workerScript.delay = null;\n      resolve();\n    }, time);\n    workerScript.delayResolve = resolve;\n  });\n}\n\nexport function makeRuntimeRejectMsg(workerScript: WorkerScript, msg: string): string {\n  const lineNum = \"\";\n  const server = AllServers[workerScript.serverIp];\n  if (server == null) {\n    throw new Error(`WorkerScript constructed with invalid server ip: ${workerScript.serverIp}`);\n  }\n\n  return \"|\" + server.hostname + \"|\" + workerScript.name + \"|\" + msg + lineNum;\n}\n\nexport function resolveNetscriptRequestedThreads(\n  workerScript: WorkerScript,\n  functionName: string,\n  requestedThreads: number,\n): number {\n  const threads = workerScript.scriptRef.threads;\n  if (!requestedThreads) {\n    return isNaN(threads) || threads < 1 ? 1 : threads;\n  }\n  const requestedThreadsAsInt = requestedThreads | 0;\n  if (isNaN(requestedThreads) || requestedThreadsAsInt < 1) {\n    throw makeRuntimeRejectMsg(\n      workerScript,\n      `Invalid thread count passed to ${functionName}: ${requestedThreads}. Threads must be a positive number.`,\n    );\n  }\n  if (requestedThreads > threads) {\n    throw makeRuntimeRejectMsg(\n      workerScript,\n      `Too many threads requested by ${functionName}. Requested: ${requestedThreads}. Has: ${threads}.`,\n    );\n  }\n  return requestedThreadsAsInt;\n}\n\nexport function isScriptErrorMessage(msg: string): boolean {\n  if (!isString(msg)) {\n    return false;\n  }\n  const splitMsg = msg.split(\"|\");\n  if (splitMsg.length != 4) {\n    return false;\n  }\n  return true;\n}\n","/**\n * Lore / world building literature files that can be found on servers.\n * These files can be read by the player\n */\nexport class Literature {\n  title: string;\n  fn: string;\n  txt: string;\n\n  constructor(title: string, filename: string, txt: string) {\n    this.title = title;\n    this.fn = filename;\n    this.txt = txt;\n  }\n}\n","import React, { useState } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\ntype IProps = {\n  value: string;\n  variant?:\n    | \"button\"\n    | \"caption\"\n    | \"h1\"\n    | \"h2\"\n    | \"h3\"\n    | \"h4\"\n    | \"h5\"\n    | \"h6\"\n    | \"subtitle1\"\n    | \"subtitle2\"\n    | \"body1\"\n    | \"body2\"\n    | \"overline\"\n    | \"inherit\"\n    | undefined;\n};\n\nexport function CopyableText(props: IProps): React.ReactElement {\n  const [open, setOpen] = useState(false);\n\n  function copy(): void {\n    const copyText = document.createElement(\"textarea\");\n    copyText.value = props.value;\n    document.body.appendChild(copyText);\n    copyText.select();\n    copyText.setSelectionRange(0, 1e10);\n    document.execCommand(\"copy\");\n    document.body.removeChild(copyText);\n    setOpen(true);\n    setTimeout(() => setOpen(false), 1000);\n  }\n\n  return (\n    <Tooltip open={open} title={<Typography>Copied!</Typography>}>\n      <Typography variant={props.variant} onClick={copy}>\n        {props.value}\n      </Typography>\n    </Tooltip>\n  );\n}\n","import { Augmentation, IConstructorParams } from \"./Augmentation\";\nimport { Augmentations } from \"./Augmentations\";\nimport { PlayerOwnedAugmentation, IPlayerOwnedAugmentation } from \"./PlayerOwnedAugmentation\";\nimport { AugmentationNames } from \"./data/AugmentationNames\";\n\nimport { BitNodeMultipliers } from \"../BitNode/BitNodeMultipliers\";\nimport { CONSTANTS } from \"../Constants\";\nimport { Factions, factionExists } from \"../Faction/Factions\";\nimport { Player } from \"../Player\";\nimport { prestigeAugmentation } from \"../Prestige\";\nimport { Programs } from \"../Programs/Programs\";\nimport { SourceFileFlags } from \"../SourceFile/SourceFileFlags\";\n\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\nimport { clearObject } from \"../utils/helpers/clearObject\";\n\nimport { WHRNG } from \"../Casino/RNG\";\n\nimport React from \"react\";\n\nfunction AddToAugmentations(aug: Augmentation): void {\n  const name = aug.name;\n  Augmentations[name] = aug;\n}\n\nfunction getRandomBonus(): any {\n  const bonuses = [\n    {\n      bonuses: {\n        hacking_chance_mult: 1.25,\n        hacking_speed_mult: 1.1,\n        hacking_money_mult: 1.25,\n        hacking_grow_mult: 1.1,\n      },\n      description:\n        \"Increases the player's hacking chance by 25%.<br>\" +\n        \"Increases the player's hacking speed by 10%.<br>\" +\n        \"Increases the amount of money the player's gains from hacking by 25%.<br>\" +\n        \"Improves grow() by 10%.\",\n    },\n    {\n      bonuses: {\n        hacking_mult: 1.15,\n        hacking_exp_mult: 2,\n      },\n      description:\n        \"Increases the player's hacking skill by 15%.<br>\" +\n        \"Increases the player's hacking experience gain rate by 100%.\",\n    },\n    {\n      bonuses: {\n        strength_mult: 1.25,\n        strength_exp_mult: 2,\n        defense_mult: 1.25,\n        defense_exp_mult: 2,\n        dexterity_mult: 1.25,\n        dexterity_exp_mult: 2,\n        agility_mult: 1.25,\n        agility_exp_mult: 2,\n      },\n      description:\n        \"Increases all of the player's combat stats by 25%.<br>\" +\n        \"Increases all of the player's combat stat experience gain rate by 100%.\",\n    },\n    {\n      bonuses: {\n        charisma_mult: 1.5,\n        charisma_exp_mult: 2,\n      },\n      description:\n        \"This augmentation increases the player's charisma by 50%.<br>\" +\n        \"Increases the player's charisma experience gain rate by 100%.\",\n    },\n    {\n      bonuses: {\n        hacknet_node_money_mult: 1.2,\n        hacknet_node_purchase_cost_mult: 0.85,\n        hacknet_node_ram_cost_mult: 0.85,\n        hacknet_node_core_cost_mult: 0.85,\n        hacknet_node_level_cost_mult: 0.85,\n      },\n      description:\n        \"Increases the amount of money produced by Hacknet Nodes by 20%.<br>\" +\n        \"Decreases all costs related to Hacknet Node by 15%.\",\n    },\n    {\n      bonuses: {\n        company_rep_mult: 1.25,\n        faction_rep_mult: 1.15,\n        work_money_mult: 1.7,\n      },\n      description:\n        \"Increases the amount of money the player gains from working by 70%.<br>\" +\n        \"Increases the amount of reputation the player gains when working for a company by 25%.<br>\" +\n        \"Increases the amount of reputation the player gains for a faction by 15%.\",\n    },\n    {\n      bonuses: {\n        crime_success_mult: 2,\n        crime_money_mult: 2,\n      },\n      description:\n        \"Increases the player's crime success rate by 100%.<br>\" +\n        \"Increases the amount of money the player gains from crimes by 100%.\",\n    },\n  ];\n\n  const randomNumber = new WHRNG(Math.floor(Player.lastUpdate / 3600000));\n  for (let i = 0; i < 5; i++) randomNumber.step();\n\n  return bonuses[Math.floor(bonuses.length * randomNumber.random())];\n}\n\nfunction initAugmentations(): void {\n  for (const name in Factions) {\n    if (Factions.hasOwnProperty(name)) {\n      Factions[name].augmentations = [];\n    }\n  }\n\n  //Reset Augmentations\n  clearObject(Augmentations);\n\n  //Time-Based Augment Test\n  const randomBonuses = getRandomBonus();\n\n  const UnstableCircadianModulatorParams: IConstructorParams = {\n    name: AugmentationNames.UnstableCircadianModulator,\n    moneyCost: 5e9,\n    repCost: 3.625e5,\n    info:\n      \"An experimental nanobot injection. Its unstable nature leads to \" +\n      \"unpredictable results based on your circadian rhythm.\",\n  };\n  Object.keys(randomBonuses.bonuses).forEach(\n    (key) => ((UnstableCircadianModulatorParams as any)[key] = randomBonuses.bonuses[key]),\n  );\n  const UnstableCircadianModulator = new Augmentation(UnstableCircadianModulatorParams);\n\n  UnstableCircadianModulator.addToFactions([\"Speakers for the Dead\"]);\n  if (augmentationExists(AugmentationNames.UnstableCircadianModulator)) {\n    delete Augmentations[AugmentationNames.UnstableCircadianModulator];\n  }\n  AddToAugmentations(UnstableCircadianModulator);\n\n  //Combat stat augmentations\n  const HemoRecirculator = new Augmentation({\n    name: AugmentationNames.HemoRecirculator,\n    moneyCost: 4.5e7,\n    repCost: 1e4,\n    info: \"A heart implant that greatly increases the body's ability to effectively use and pump \" + \"blood.\",\n    strength_mult: 1.08,\n    defense_mult: 1.08,\n    agility_mult: 1.08,\n    dexterity_mult: 1.08,\n  });\n  HemoRecirculator.addToFactions([\"Tetrads\", \"The Dark Army\", \"The Syndicate\"]);\n  if (augmentationExists(AugmentationNames.HemoRecirculator)) {\n    delete Augmentations[AugmentationNames.HemoRecirculator];\n  }\n  AddToAugmentations(HemoRecirculator);\n\n  const Targeting1 = new Augmentation({\n    name: AugmentationNames.Targeting1,\n    moneyCost: 1.5e7,\n    repCost: 5e3,\n    info:\n      \"A cranial implant that is embedded within the inner ear structures and optic nerves. It regulates \" +\n      \"and enhances balance and hand-eye coordination.\",\n    dexterity_mult: 1.1,\n  });\n  Targeting1.addToFactions([\n    \"Slum Snakes\",\n    \"The Dark Army\",\n    \"The Syndicate\",\n    \"Sector-12\",\n    \"Ishima\",\n    \"OmniTek Incorporated\",\n    \"KuaiGong International\",\n    \"Blade Industries\",\n  ]);\n  if (augmentationExists(AugmentationNames.Targeting1)) {\n    delete Augmentations[AugmentationNames.Targeting1];\n  }\n  AddToAugmentations(Targeting1);\n\n  const Targeting2 = new Augmentation({\n    name: AugmentationNames.Targeting2,\n    moneyCost: 4.25e7,\n    repCost: 8.75e3,\n    info:\n      \"This upgraded version of the 'Augmented Targeting' implant is capable of augmenting \" +\n      \"reality by digitally displaying weaknesses and vital signs of threats.\",\n    prereqs: [AugmentationNames.Targeting1],\n    dexterity_mult: 1.2,\n  });\n  Targeting2.addToFactions([\n    \"The Dark Army\",\n    \"The Syndicate\",\n    \"Sector-12\",\n    \"OmniTek Incorporated\",\n    \"KuaiGong International\",\n    \"Blade Industries\",\n  ]);\n  if (augmentationExists(AugmentationNames.Targeting2)) {\n    delete Augmentations[AugmentationNames.Targeting2];\n  }\n  AddToAugmentations(Targeting2);\n\n  const Targeting3 = new Augmentation({\n    name: AugmentationNames.Targeting3,\n    moneyCost: 1.15e8,\n    repCost: 2.75e4,\n    info: \"The latest version of the 'Augmented Targeting' implant adds the ability to lock-on and track threats.\",\n    prereqs: [AugmentationNames.Targeting2],\n    dexterity_mult: 1.3,\n  });\n  Targeting3.addToFactions([\n    \"The Dark Army\",\n    \"The Syndicate\",\n    \"OmniTek Incorporated\",\n    \"KuaiGong International\",\n    \"Blade Industries\",\n    \"The Covenant\",\n  ]);\n  if (augmentationExists(AugmentationNames.Targeting3)) {\n    delete Augmentations[AugmentationNames.Targeting3];\n  }\n  AddToAugmentations(Targeting3);\n\n  const SyntheticHeart = new Augmentation({\n    name: AugmentationNames.SyntheticHeart,\n    moneyCost: 2.875e9,\n    repCost: 7.5e5,\n    info:\n      \"This advanced artificial heart, created from plasteel and graphene, is capable of pumping blood \" +\n      \"more efficiently than an organic heart.\",\n    agility_mult: 1.5,\n    strength_mult: 1.5,\n  });\n  SyntheticHeart.addToFactions([\n    \"KuaiGong International\",\n    \"Fulcrum Secret Technologies\",\n    \"Speakers for the Dead\",\n    \"NWO\",\n    \"The Covenant\",\n    \"Daedalus\",\n    \"Illuminati\",\n  ]);\n  if (augmentationExists(AugmentationNames.SyntheticHeart)) {\n    delete Augmentations[AugmentationNames.SyntheticHeart];\n  }\n  AddToAugmentations(SyntheticHeart);\n\n  const SynfibrilMuscle = new Augmentation({\n    name: AugmentationNames.SynfibrilMuscle,\n    repCost: 4.375e5,\n    moneyCost: 1.125e9,\n    info:\n      \"The myofibrils in human muscles are injected with special chemicals that react with the proteins inside \" +\n      \"the myofibrils, altering their underlying structure. The end result is muscles that are stronger and more elastic. \" +\n      \"Scientists have named these artificially enhanced units 'synfibrils'.\",\n    strength_mult: 1.3,\n    defense_mult: 1.3,\n  });\n  SynfibrilMuscle.addToFactions([\n    \"KuaiGong International\",\n    \"Fulcrum Secret Technologies\",\n    \"Speakers for the Dead\",\n    \"NWO\",\n    \"The Covenant\",\n    \"Daedalus\",\n    \"Illuminati\",\n    \"Blade Industries\",\n  ]);\n  if (augmentationExists(AugmentationNames.SynfibrilMuscle)) {\n    delete Augmentations[AugmentationNames.SynfibrilMuscle];\n  }\n  AddToAugmentations(SynfibrilMuscle);\n\n  const CombatRib1 = new Augmentation({\n    name: AugmentationNames.CombatRib1,\n    repCost: 7.5e3,\n    moneyCost: 2.375e7,\n    info:\n      \"The rib cage is augmented to continuously release boosters into the bloodstream \" +\n      \"which increase the oxygen-carrying capacity of blood.\",\n    strength_mult: 1.1,\n    defense_mult: 1.1,\n  });\n  CombatRib1.addToFactions([\n    \"Slum Snakes\",\n    \"The Dark Army\",\n    \"The Syndicate\",\n    \"Volhaven\",\n    \"Ishima\",\n    \"OmniTek Incorporated\",\n    \"KuaiGong International\",\n    \"Blade Industries\",\n  ]);\n  if (augmentationExists(AugmentationNames.CombatRib1)) {\n    delete Augmentations[AugmentationNames.CombatRib1];\n  }\n  AddToAugmentations(CombatRib1);\n\n  const CombatRib2 = new Augmentation({\n    name: AugmentationNames.CombatRib2,\n    repCost: 1.875e4,\n    moneyCost: 6.5e7,\n    info:\n      \"An upgraded version of the 'Combat Rib' augmentation that adds potent stimulants which \" +\n      \"improve focus and endurance while decreasing reaction time and fatigue.\",\n    prereqs: [AugmentationNames.CombatRib1],\n    strength_mult: 1.14,\n    defense_mult: 1.14,\n  });\n  CombatRib2.addToFactions([\n    \"The Dark Army\",\n    \"The Syndicate\",\n    \"Volhaven\",\n    \"OmniTek Incorporated\",\n    \"KuaiGong International\",\n    \"Blade Industries\",\n  ]);\n  if (augmentationExists(AugmentationNames.CombatRib2)) {\n    delete Augmentations[AugmentationNames.CombatRib2];\n  }\n  AddToAugmentations(CombatRib2);\n\n  const CombatRib3 = new Augmentation({\n    name: AugmentationNames.CombatRib3,\n    repCost: 3.5e4,\n    moneyCost: 1.2e8,\n    info:\n      \"The latest version of the 'Combat Rib' augmentation releases advanced anabolic steroids that \" +\n      \"improve muscle mass and physical performance while being safe and free of side effects.\",\n    prereqs: [AugmentationNames.CombatRib2],\n    strength_mult: 1.18,\n    defense_mult: 1.18,\n  });\n  CombatRib3.addToFactions([\n    \"The Dark Army\",\n    \"The Syndicate\",\n    \"OmniTek Incorporated\",\n    \"KuaiGong International\",\n    \"Blade Industries\",\n    \"The Covenant\",\n  ]);\n  if (augmentationExists(AugmentationNames.CombatRib3)) {\n    delete Augmentations[AugmentationNames.CombatRib3];\n  }\n  AddToAugmentations(CombatRib3);\n\n  const NanofiberWeave = new Augmentation({\n    name: AugmentationNames.NanofiberWeave,\n    repCost: 3.75e4,\n    moneyCost: 1.25e8,\n    info:\n      \"Synthetic nanofibers are woven into the skin's extracellular matrix using electrospinning, \" +\n      \"which improves its regenerative and extracellular homeostasis abilities.\",\n    strength_mult: 1.2,\n    defense_mult: 1.2,\n  });\n  NanofiberWeave.addToFactions([\n    \"Tian Di Hui\",\n    \"The Syndicate\",\n    \"The Dark Army\",\n    \"Speakers for the Dead\",\n    \"Blade Industries\",\n    \"Fulcrum Secret Technologies\",\n    \"OmniTek Incorporated\",\n  ]);\n  if (augmentationExists(AugmentationNames.NanofiberWeave)) {\n    delete Augmentations[AugmentationNames.NanofiberWeave];\n  }\n  AddToAugmentations(NanofiberWeave);\n\n  const SubdermalArmor = new Augmentation({\n    name: AugmentationNames.SubdermalArmor,\n    repCost: 8.75e5,\n    moneyCost: 3.25e9,\n    info:\n      \"The NEMEAN Subdermal Weave is a thin, light-weight, graphene plating that houses a dilatant fluid. \" +\n      \"The material is implanted underneath the skin, and is the most advanced form of defensive enhancement \" +\n      \"that has ever been created. The dilatant fluid, despite being thin and light, is extremely effective \" +\n      \"at stopping piercing blows and reducing blunt trauma. The properties of graphene allow the plating to \" +\n      \"mitigate damage from any fire or electrical traumas.\",\n    defense_mult: 2.2,\n  });\n  SubdermalArmor.addToFactions([\n    \"The Syndicate\",\n    \"Fulcrum Secret Technologies\",\n    \"Illuminati\",\n    \"Daedalus\",\n    \"The Covenant\",\n  ]);\n  if (augmentationExists(AugmentationNames.SubdermalArmor)) {\n    delete Augmentations[AugmentationNames.SubdermalArmor];\n  }\n  AddToAugmentations(SubdermalArmor);\n\n  const WiredReflexes = new Augmentation({\n    name: AugmentationNames.WiredReflexes,\n    repCost: 1.25e3,\n    moneyCost: 2.5e6,\n    info:\n      \"Synthetic nerve-enhancements are injected into all major parts of the somatic nervous system, \" +\n      \"supercharging the spread of neural signals and increasing reflex speed.\",\n    agility_mult: 1.05,\n    dexterity_mult: 1.05,\n  });\n  WiredReflexes.addToFactions([\n    \"Tian Di Hui\",\n    \"Slum Snakes\",\n    \"Sector-12\",\n    \"Volhaven\",\n    \"Aevum\",\n    \"Ishima\",\n    \"The Syndicate\",\n    \"The Dark Army\",\n    \"Speakers for the Dead\",\n  ]);\n  if (augmentationExists(AugmentationNames.WiredReflexes)) {\n    delete Augmentations[AugmentationNames.WiredReflexes];\n  }\n  AddToAugmentations(WiredReflexes);\n\n  const GrapheneBoneLacings = new Augmentation({\n    name: AugmentationNames.GrapheneBoneLacings,\n    repCost: 1.125e6,\n    moneyCost: 4.25e9,\n    info:\n      \"Graphene is grafted and fused into the skeletal structure, \" + \"enhancing bone density and tensile strength.\",\n    strength_mult: 1.7,\n    defense_mult: 1.7,\n  });\n  GrapheneBoneLacings.addToFactions([\"Fulcrum Secret Technologies\", \"The Covenant\"]);\n  if (augmentationExists(AugmentationNames.GrapheneBoneLacings)) {\n    delete Augmentations[AugmentationNames.GrapheneBoneLacings];\n  }\n  AddToAugmentations(GrapheneBoneLacings);\n\n  const BionicSpine = new Augmentation({\n    name: AugmentationNames.BionicSpine,\n    repCost: 4.5e4,\n    moneyCost: 1.25e8,\n    info:\n      \"The spine is reconstructed using plasteel and carbon fibers. \" +\n      \"It is now capable of stimulating and regulating neural signals \" +\n      \"passing through the spinal cord, improving senses and reaction speed. \" +\n      \"The 'Bionic Spine' also interfaces with all other 'Bionic' implants.\",\n    strength_mult: 1.15,\n    defense_mult: 1.15,\n    agility_mult: 1.15,\n    dexterity_mult: 1.15,\n  });\n  BionicSpine.addToFactions([\n    \"Speakers for the Dead\",\n    \"The Syndicate\",\n    \"KuaiGong International\",\n    \"OmniTek Incorporated\",\n    \"Blade Industries\",\n  ]);\n  if (augmentationExists(AugmentationNames.BionicSpine)) {\n    delete Augmentations[AugmentationNames.BionicSpine];\n  }\n  AddToAugmentations(BionicSpine);\n\n  const GrapheneBionicSpine = new Augmentation({\n    name: AugmentationNames.GrapheneBionicSpine,\n    repCost: 1.625e6,\n    moneyCost: 6e9,\n    info:\n      \"An upgrade to the 'Bionic Spine' augmentation. The spine is fused with graphene \" +\n      \"which enhances durability and supercharges all body functions.\",\n    prereqs: [AugmentationNames.BionicSpine],\n    strength_mult: 1.6,\n    defense_mult: 1.6,\n    agility_mult: 1.6,\n    dexterity_mult: 1.6,\n  });\n  GrapheneBionicSpine.addToFactions([\"Fulcrum Secret Technologies\", \"ECorp\"]);\n  if (augmentationExists(AugmentationNames.GrapheneBionicSpine)) {\n    delete Augmentations[AugmentationNames.GrapheneBionicSpine];\n  }\n  AddToAugmentations(GrapheneBionicSpine);\n\n  const BionicLegs = new Augmentation({\n    name: AugmentationNames.BionicLegs,\n    repCost: 1.5e5,\n    moneyCost: 3.75e8,\n    info: \"Cybernetic legs, created from plasteel and carbon fibers, enhance running speed.\",\n    agility_mult: 1.6,\n  });\n  BionicLegs.addToFactions([\n    \"Speakers for the Dead\",\n    \"The Syndicate\",\n    \"KuaiGong International\",\n    \"OmniTek Incorporated\",\n    \"Blade Industries\",\n  ]);\n  if (augmentationExists(AugmentationNames.BionicLegs)) {\n    delete Augmentations[AugmentationNames.BionicLegs];\n  }\n  AddToAugmentations(BionicLegs);\n\n  const GrapheneBionicLegs = new Augmentation({\n    name: AugmentationNames.GrapheneBionicLegs,\n    repCost: 7.5e5,\n    moneyCost: 4.5e9,\n    info:\n      \"An upgrade to the 'Bionic Legs' augmentation. The legs are fused \" +\n      \"with graphene, greatly enhancing jumping ability.\",\n    prereqs: [AugmentationNames.BionicLegs],\n    agility_mult: 2.5,\n  });\n  GrapheneBionicLegs.addToFactions([\"MegaCorp\", \"ECorp\", \"Fulcrum Secret Technologies\"]);\n  if (augmentationExists(AugmentationNames.GrapheneBionicLegs)) {\n    delete Augmentations[AugmentationNames.GrapheneBionicLegs];\n  }\n  AddToAugmentations(GrapheneBionicLegs);\n\n  // Work stat augmentations\n  const SpeechProcessor = new Augmentation({\n    name: AugmentationNames.SpeechProcessor,\n    repCost: 7.5e3,\n    moneyCost: 5e7,\n    info:\n      \"A cochlear implant with an embedded computer that analyzes incoming speech. \" +\n      \"The embedded computer processes characteristics of incoming speech, such as tone \" +\n      \"and inflection, to pick up on subtle cues and aid in social interactions.\",\n    charisma_mult: 1.2,\n  });\n  SpeechProcessor.addToFactions([\n    \"Tian Di Hui\",\n    \"Chongqing\",\n    \"Sector-12\",\n    \"New Tokyo\",\n    \"Aevum\",\n    \"Ishima\",\n    \"Volhaven\",\n    \"Silhouette\",\n  ]);\n  if (augmentationExists(AugmentationNames.SpeechProcessor)) {\n    delete Augmentations[AugmentationNames.SpeechProcessor];\n  }\n  AddToAugmentations(SpeechProcessor);\n\n  const TITN41Injection = new Augmentation({\n    name: AugmentationNames.TITN41Injection,\n    repCost: 2.5e4,\n    moneyCost: 1.9e8,\n    info:\n      \"TITN is a series of viruses that targets and alters the sequences of human DNA in genes that \" +\n      \"control personality. The TITN-41 strain alters these genes so that the subject becomes more \" +\n      \"outgoing and socialable.\",\n    charisma_mult: 1.15,\n    charisma_exp_mult: 1.15,\n  });\n  TITN41Injection.addToFactions([\"Silhouette\"]);\n  if (augmentationExists(AugmentationNames.TITN41Injection)) {\n    delete Augmentations[AugmentationNames.TITN41Injection];\n  }\n  AddToAugmentations(TITN41Injection);\n\n  const EnhancedSocialInteractionImplant = new Augmentation({\n    name: AugmentationNames.EnhancedSocialInteractionImplant,\n    repCost: 3.75e5,\n    moneyCost: 1.375e9,\n    info:\n      \"A cranial implant that greatly assists in the user's ability to analyze social situations \" +\n      \"and interactions. The system uses a wide variety of factors such as facial expressions, body \" +\n      \"language, and the voice tone, and inflection to determine the best course of action during social\" +\n      \"situations. The implant also uses deep learning software to continuously learn new behavior\" +\n      \"patterns and how to best respond.\",\n    charisma_mult: 1.6,\n    charisma_exp_mult: 1.6,\n  });\n  EnhancedSocialInteractionImplant.addToFactions([\n    \"Bachman & Associates\",\n    \"NWO\",\n    \"Clarke Incorporated\",\n    \"OmniTek Incorporated\",\n    \"Four Sigma\",\n  ]);\n  if (augmentationExists(AugmentationNames.EnhancedSocialInteractionImplant)) {\n    delete Augmentations[AugmentationNames.EnhancedSocialInteractionImplant];\n  }\n  AddToAugmentations(EnhancedSocialInteractionImplant);\n\n  // Hacking augmentations\n  const BitWire = new Augmentation({\n    name: AugmentationNames.BitWire,\n    repCost: 3.75e3,\n    moneyCost: 1e7,\n    info:\n      \"A small brain implant embedded in the cerebrum. This regulates and improves the brain's computing \" +\n      \"capabilities.\",\n    hacking_mult: 1.05,\n  });\n  BitWire.addToFactions([\"CyberSec\", \"NiteSec\"]);\n  if (augmentationExists(AugmentationNames.BitWire)) {\n    delete Augmentations[AugmentationNames.BitWire];\n  }\n  AddToAugmentations(BitWire);\n\n  const ArtificialBioNeuralNetwork = new Augmentation({\n    name: AugmentationNames.ArtificialBioNeuralNetwork,\n    repCost: 2.75e5,\n    moneyCost: 3e9,\n    info:\n      \"A network consisting of millions of nanoprocessors is embedded into the brain. \" +\n      \"The network is meant to mimic the way a biological brain solves a problem, with each \" +\n      \"nanoprocessor acting similar to the way a neuron would in a neural network. However, these \" +\n      \"nanoprocessors are programmed to perform computations much faster than organic neurons, \" +\n      \"allowing the user to solve much more complex problems at a much faster rate.\",\n    hacking_speed_mult: 1.03,\n    hacking_money_mult: 1.15,\n    hacking_mult: 1.12,\n  });\n  ArtificialBioNeuralNetwork.addToFactions([\"BitRunners\", \"Fulcrum Secret Technologies\"]);\n  if (augmentationExists(AugmentationNames.ArtificialBioNeuralNetwork)) {\n    delete Augmentations[AugmentationNames.ArtificialBioNeuralNetwork];\n  }\n  AddToAugmentations(ArtificialBioNeuralNetwork);\n\n  const ArtificialSynapticPotentiation = new Augmentation({\n    name: AugmentationNames.ArtificialSynapticPotentiation,\n    repCost: 6.25e3,\n    moneyCost: 8e7,\n    info:\n      \"The body is injected with a chemical that artificially induces synaptic potentiation, \" +\n      \"otherwise known as the strengthening of synapses. This results in enhanced cognitive abilities.\",\n    hacking_speed_mult: 1.02,\n    hacking_chance_mult: 1.05,\n    hacking_exp_mult: 1.05,\n  });\n  ArtificialSynapticPotentiation.addToFactions([\"The Black Hand\", \"NiteSec\"]);\n  if (augmentationExists(AugmentationNames.ArtificialSynapticPotentiation)) {\n    delete Augmentations[AugmentationNames.ArtificialSynapticPotentiation];\n  }\n  AddToAugmentations(ArtificialSynapticPotentiation);\n\n  const EnhancedMyelinSheathing = new Augmentation({\n    name: AugmentationNames.EnhancedMyelinSheathing,\n    repCost: 1e5,\n    moneyCost: 1.375e9,\n    info:\n      \"Electrical signals are used to induce a new, artificial form of myelinogenesis in the human body. \" +\n      \"This process results in the proliferation of new, synthetic myelin sheaths in the nervous \" +\n      \"system. These myelin sheaths can propogate neuro-signals much faster than their organic \" +\n      \"counterparts, leading to greater processing speeds and better brain function.\",\n    hacking_speed_mult: 1.03,\n    hacking_exp_mult: 1.1,\n    hacking_mult: 1.08,\n  });\n  EnhancedMyelinSheathing.addToFactions([\"Fulcrum Secret Technologies\", \"BitRunners\", \"The Black Hand\"]);\n  if (augmentationExists(AugmentationNames.EnhancedMyelinSheathing)) {\n    delete Augmentations[AugmentationNames.EnhancedMyelinSheathing];\n  }\n  AddToAugmentations(EnhancedMyelinSheathing);\n\n  const SynapticEnhancement = new Augmentation({\n    name: AugmentationNames.SynapticEnhancement,\n    repCost: 2e3,\n    moneyCost: 7.5e6,\n    info:\n      \"A small cranial implant that continuously uses weak electrical signals to stimulate the brain and \" +\n      \"induce stronger synaptic activity. This improves the user's cognitive abilities.\",\n    hacking_speed_mult: 1.03,\n  });\n  SynapticEnhancement.addToFactions([\"CyberSec\", \"Aevum\"]);\n  if (augmentationExists(AugmentationNames.SynapticEnhancement)) {\n    delete Augmentations[AugmentationNames.SynapticEnhancement];\n  }\n  AddToAugmentations(SynapticEnhancement);\n\n  const NeuralRetentionEnhancement = new Augmentation({\n    name: AugmentationNames.NeuralRetentionEnhancement,\n    repCost: 2e4,\n    moneyCost: 2.5e8,\n    info:\n      \"Chemical injections are used to permanently alter and strengthen the brain's neuronal \" +\n      \"circuits, strengthening the ability to retain information.\",\n    hacking_exp_mult: 1.25,\n  });\n  NeuralRetentionEnhancement.addToFactions([\"NiteSec\"]);\n  if (augmentationExists(AugmentationNames.NeuralRetentionEnhancement)) {\n    delete Augmentations[AugmentationNames.NeuralRetentionEnhancement];\n  }\n  AddToAugmentations(NeuralRetentionEnhancement);\n\n  const DataJack = new Augmentation({\n    name: AugmentationNames.DataJack,\n    repCost: 1.125e5,\n    moneyCost: 4.5e8,\n    info:\n      \"A brain implant that provides an interface for direct, wireless communication between a computer's main \" +\n      \"memory and the mind. This implant allows the user to not only access a computer's memory, but also alter \" +\n      \"and delete it.\",\n    hacking_money_mult: 1.25,\n  });\n  DataJack.addToFactions([\"BitRunners\", \"The Black Hand\", \"NiteSec\", \"Chongqing\", \"New Tokyo\"]);\n  if (augmentationExists(AugmentationNames.DataJack)) {\n    delete Augmentations[AugmentationNames.DataJack];\n  }\n  AddToAugmentations(DataJack);\n\n  const ENM = new Augmentation({\n    name: AugmentationNames.ENM,\n    repCost: 1.5e4,\n    moneyCost: 2.5e8,\n    info:\n      \"A thin device embedded inside the arm containing a wireless module capable of connecting \" +\n      \"to nearby networks. Once connected, the Netburner Module is capable of capturing and \" +\n      \"processing all of the traffic on that network. By itself, the Embedded Netburner Module does \" +\n      \"not do much, but a variety of very powerful upgrades can be installed that allow you to fully \" +\n      \"control the traffic on a network.\",\n    hacking_mult: 1.08,\n  });\n  ENM.addToFactions([\n    \"BitRunners\",\n    \"The Black Hand\",\n    \"NiteSec\",\n    \"ECorp\",\n    \"MegaCorp\",\n    \"Fulcrum Secret Technologies\",\n    \"NWO\",\n    \"Blade Industries\",\n  ]);\n  if (augmentationExists(AugmentationNames.ENM)) {\n    delete Augmentations[AugmentationNames.ENM];\n  }\n  AddToAugmentations(ENM);\n\n  const ENMCore = new Augmentation({\n    name: AugmentationNames.ENMCore,\n    repCost: 2.5e5,\n    moneyCost: 2.5e9,\n    info:\n      \"The Core library is an implant that upgrades the firmware of the Embedded Netburner Module. \" +\n      \"This upgrade allows the Embedded Netburner Module to generate its own data on a network.\",\n    prereqs: [AugmentationNames.ENM],\n    hacking_speed_mult: 1.03,\n    hacking_money_mult: 1.1,\n    hacking_chance_mult: 1.03,\n    hacking_exp_mult: 1.07,\n    hacking_mult: 1.07,\n  });\n  ENMCore.addToFactions([\n    \"BitRunners\",\n    \"The Black Hand\",\n    \"ECorp\",\n    \"MegaCorp\",\n    \"Fulcrum Secret Technologies\",\n    \"NWO\",\n    \"Blade Industries\",\n  ]);\n  if (augmentationExists(AugmentationNames.ENMCore)) {\n    delete Augmentations[AugmentationNames.ENMCore];\n  }\n  AddToAugmentations(ENMCore);\n\n  const ENMCoreV2 = new Augmentation({\n    name: AugmentationNames.ENMCoreV2,\n    repCost: 1e6,\n    moneyCost: 4.5e9,\n    info:\n      \"The Core V2 library is an implant that upgrades the firmware of the Embedded Netburner Module. \" +\n      \"This upgraded firmware allows the Embedded Netburner Module to control information on \" +\n      \"a network by re-routing traffic, spoofing IP addresses, and altering the data inside network \" +\n      \"packets.\",\n    prereqs: [AugmentationNames.ENMCore],\n    hacking_speed_mult: 1.05,\n    hacking_money_mult: 1.3,\n    hacking_chance_mult: 1.05,\n    hacking_exp_mult: 1.15,\n    hacking_mult: 1.08,\n  });\n  ENMCoreV2.addToFactions([\n    \"BitRunners\",\n    \"ECorp\",\n    \"MegaCorp\",\n    \"Fulcrum Secret Technologies\",\n    \"NWO\",\n    \"Blade Industries\",\n    \"OmniTek Incorporated\",\n    \"KuaiGong International\",\n  ]);\n  if (augmentationExists(AugmentationNames.ENMCoreV2)) {\n    delete Augmentations[AugmentationNames.ENMCoreV2];\n  }\n  AddToAugmentations(ENMCoreV2);\n\n  const ENMCoreV3 = new Augmentation({\n    name: AugmentationNames.ENMCoreV3,\n    repCost: 1.75e6,\n    moneyCost: 7.5e9,\n    info:\n      \"The Core V3 library is an implant that upgrades the firmware of the Embedded Netburner Module. \" +\n      \"This upgraded firmware allows the Embedded Netburner Module to seamlessly inject code into \" +\n      \"any device on a network.\",\n    prereqs: [AugmentationNames.ENMCoreV2],\n    hacking_speed_mult: 1.05,\n    hacking_money_mult: 1.4,\n    hacking_chance_mult: 1.1,\n    hacking_exp_mult: 1.25,\n    hacking_mult: 1.1,\n  });\n  ENMCoreV3.addToFactions([\n    \"ECorp\",\n    \"MegaCorp\",\n    \"Fulcrum Secret Technologies\",\n    \"NWO\",\n    \"Daedalus\",\n    \"The Covenant\",\n    \"Illuminati\",\n  ]);\n  if (augmentationExists(AugmentationNames.ENMCoreV3)) {\n    delete Augmentations[AugmentationNames.ENMCoreV3];\n  }\n  AddToAugmentations(ENMCoreV3);\n\n  const ENMAnalyzeEngine = new Augmentation({\n    name: AugmentationNames.ENMAnalyzeEngine,\n    repCost: 6.25e5,\n    moneyCost: 6e9,\n    info:\n      \"Installs the Analyze Engine for the Embedded Netburner Module, which is a CPU cluster \" +\n      \"that vastly outperforms the Netburner Module's native single-core processor.\",\n    prereqs: [AugmentationNames.ENM],\n    hacking_speed_mult: 1.1,\n  });\n  ENMAnalyzeEngine.addToFactions([\n    \"ECorp\",\n    \"MegaCorp\",\n    \"Fulcrum Secret Technologies\",\n    \"NWO\",\n    \"Daedalus\",\n    \"The Covenant\",\n    \"Illuminati\",\n  ]);\n  if (augmentationExists(AugmentationNames.ENMAnalyzeEngine)) {\n    delete Augmentations[AugmentationNames.ENMAnalyzeEngine];\n  }\n  AddToAugmentations(ENMAnalyzeEngine);\n\n  const ENMDMA = new Augmentation({\n    name: AugmentationNames.ENMDMA,\n    repCost: 1e6,\n    moneyCost: 7e9,\n    info:\n      \"This implant installs a Direct Memory Access (DMA) controller into the \" +\n      \"Embedded Netburner Module. This allows the Module to send and receive data \" +\n      \"directly to and from the main memory of devices on a network.\",\n    prereqs: [AugmentationNames.ENM],\n    hacking_money_mult: 1.4,\n    hacking_chance_mult: 1.2,\n  });\n  ENMDMA.addToFactions([\n    \"ECorp\",\n    \"MegaCorp\",\n    \"Fulcrum Secret Technologies\",\n    \"NWO\",\n    \"Daedalus\",\n    \"The Covenant\",\n    \"Illuminati\",\n  ]);\n  if (augmentationExists(AugmentationNames.ENMDMA)) {\n    delete Augmentations[AugmentationNames.ENMDMA];\n  }\n  AddToAugmentations(ENMDMA);\n\n  const Neuralstimulator = new Augmentation({\n    name: AugmentationNames.Neuralstimulator,\n    repCost: 5e4,\n    moneyCost: 3e9,\n    info:\n      \"A cranial implant that intelligently stimulates certain areas of the brain \" +\n      \"in order to improve cognitive functions.\",\n    hacking_speed_mult: 1.02,\n    hacking_chance_mult: 1.1,\n    hacking_exp_mult: 1.12,\n  });\n  Neuralstimulator.addToFactions([\n    \"The Black Hand\",\n    \"Chongqing\",\n    \"Sector-12\",\n    \"New Tokyo\",\n    \"Aevum\",\n    \"Ishima\",\n    \"Volhaven\",\n    \"Bachman & Associates\",\n    \"Clarke Incorporated\",\n    \"Four Sigma\",\n  ]);\n  if (augmentationExists(AugmentationNames.Neuralstimulator)) {\n    delete Augmentations[AugmentationNames.Neuralstimulator];\n  }\n  AddToAugmentations(Neuralstimulator);\n\n  const NeuralAccelerator = new Augmentation({\n    name: AugmentationNames.NeuralAccelerator,\n    repCost: 2e5,\n    moneyCost: 1.75e9,\n    info:\n      \"A microprocessor that accelerates the processing \" +\n      \"speed of biological neural networks. This is a cranial implant that is embedded inside the brain.\",\n    hacking_mult: 1.1,\n    hacking_exp_mult: 1.15,\n    hacking_money_mult: 1.2,\n  });\n  NeuralAccelerator.addToFactions([\"BitRunners\"]);\n  if (augmentationExists(AugmentationNames.NeuralAccelerator)) {\n    delete Augmentations[AugmentationNames.NeuralAccelerator];\n  }\n  AddToAugmentations(NeuralAccelerator);\n\n  const CranialSignalProcessorsG1 = new Augmentation({\n    name: AugmentationNames.CranialSignalProcessorsG1,\n    repCost: 1e4,\n    moneyCost: 7e7,\n    info:\n      \"The first generation of Cranial Signal Processors. Cranial Signal Processors \" +\n      \"are a set of specialized microprocessors that are attached to \" +\n      \"neurons in the brain. These chips process neural signals to quickly and automatically perform specific computations \" +\n      \"so that the brain doesn't have to.\",\n    hacking_speed_mult: 1.01,\n    hacking_mult: 1.05,\n  });\n  CranialSignalProcessorsG1.addToFactions([\"CyberSec\"]);\n  if (augmentationExists(AugmentationNames.CranialSignalProcessorsG1)) {\n    delete Augmentations[AugmentationNames.CranialSignalProcessorsG1];\n  }\n  AddToAugmentations(CranialSignalProcessorsG1);\n\n  const CranialSignalProcessorsG2 = new Augmentation({\n    name: AugmentationNames.CranialSignalProcessorsG2,\n    repCost: 1.875e4,\n    moneyCost: 1.25e8,\n    info:\n      \"The second generation of Cranial Signal Processors. Cranial Signal Processors \" +\n      \"are a set of specialized microprocessors that are attached to \" +\n      \"neurons in the brain. These chips process neural signals to quickly and automatically perform specific computations \" +\n      \"so that the brain doesn't have to.\",\n    prereqs: [AugmentationNames.CranialSignalProcessorsG1],\n    hacking_speed_mult: 1.02,\n    hacking_chance_mult: 1.05,\n    hacking_mult: 1.07,\n  });\n  CranialSignalProcessorsG2.addToFactions([\"CyberSec\", \"NiteSec\"]);\n  if (augmentationExists(AugmentationNames.CranialSignalProcessorsG2)) {\n    delete Augmentations[AugmentationNames.CranialSignalProcessorsG2];\n  }\n  AddToAugmentations(CranialSignalProcessorsG2);\n\n  const CranialSignalProcessorsG3 = new Augmentation({\n    name: AugmentationNames.CranialSignalProcessorsG3,\n    repCost: 5e4,\n    moneyCost: 5.5e8,\n    info:\n      \"The third generation of Cranial Signal Processors. Cranial Signal Processors \" +\n      \"are a set of specialized microprocessors that are attached to \" +\n      \"neurons in the brain. These chips process neural signals to quickly and automatically perform specific computations \" +\n      \"so that the brain doesn't have to.\",\n    prereqs: [AugmentationNames.CranialSignalProcessorsG2],\n    hacking_speed_mult: 1.02,\n    hacking_money_mult: 1.15,\n    hacking_mult: 1.09,\n  });\n  CranialSignalProcessorsG3.addToFactions([\"NiteSec\", \"The Black Hand\", \"BitRunners\"]);\n  if (augmentationExists(AugmentationNames.CranialSignalProcessorsG3)) {\n    delete Augmentations[AugmentationNames.CranialSignalProcessorsG3];\n  }\n  AddToAugmentations(CranialSignalProcessorsG3);\n\n  const CranialSignalProcessorsG4 = new Augmentation({\n    name: AugmentationNames.CranialSignalProcessorsG4,\n    repCost: 1.25e5,\n    moneyCost: 1.1e9,\n    info:\n      \"The fourth generation of Cranial Signal Processors. Cranial Signal Processors \" +\n      \"are a set of specialized microprocessors that are attached to \" +\n      \"neurons in the brain. These chips process neural signals to quickly and automatically perform specific computations \" +\n      \"so that the brain doesn't have to.\",\n    prereqs: [AugmentationNames.CranialSignalProcessorsG3],\n    hacking_speed_mult: 1.02,\n    hacking_money_mult: 1.2,\n    hacking_grow_mult: 1.25,\n  });\n  CranialSignalProcessorsG4.addToFactions([\"The Black Hand\", \"BitRunners\"]);\n  if (augmentationExists(AugmentationNames.CranialSignalProcessorsG4)) {\n    delete Augmentations[AugmentationNames.CranialSignalProcessorsG4];\n  }\n  AddToAugmentations(CranialSignalProcessorsG4);\n\n  const CranialSignalProcessorsG5 = new Augmentation({\n    name: AugmentationNames.CranialSignalProcessorsG5,\n    repCost: 2.5e5,\n    moneyCost: 2.25e9,\n    info:\n      \"The fifth generation of Cranial Signal Processors. Cranial Signal Processors \" +\n      \"are a set of specialized microprocessors that are attached to \" +\n      \"neurons in the brain. These chips process neural signals to quickly and automatically perform specific computations \" +\n      \"so that the brain doesn't have to.\",\n    prereqs: [AugmentationNames.CranialSignalProcessorsG4],\n    hacking_mult: 1.3,\n    hacking_money_mult: 1.25,\n    hacking_grow_mult: 1.75,\n  });\n  CranialSignalProcessorsG5.addToFactions([\"BitRunners\"]);\n  if (augmentationExists(AugmentationNames.CranialSignalProcessorsG5)) {\n    delete Augmentations[AugmentationNames.CranialSignalProcessorsG5];\n  }\n  AddToAugmentations(CranialSignalProcessorsG5);\n\n  const NeuronalDensification = new Augmentation({\n    name: AugmentationNames.NeuronalDensification,\n    repCost: 1.875e5,\n    moneyCost: 1.375e9,\n    info:\n      \"The brain is surgically re-engineered to have increased neuronal density \" +\n      \"by decreasing the neuron gap junction. Then, the body is genetically modified \" +\n      \"to enhance the production and capabilities of its neural stem cells.\",\n    hacking_mult: 1.15,\n    hacking_exp_mult: 1.1,\n    hacking_speed_mult: 1.03,\n  });\n  NeuronalDensification.addToFactions([\"Clarke Incorporated\"]);\n  if (augmentationExists(AugmentationNames.NeuronalDensification)) {\n    delete Augmentations[AugmentationNames.NeuronalDensification];\n  }\n  AddToAugmentations(NeuronalDensification);\n\n  // Work Augmentations\n  const NuoptimalInjectorImplant = new Augmentation({\n    name: AugmentationNames.NuoptimalInjectorImplant,\n    repCost: 5e3,\n    moneyCost: 2e7,\n    info:\n      \"This torso implant automatically injects nootropic supplements into \" +\n      \"the bloodstream to improve memory, increase focus, and provide other \" +\n      \"cognitive enhancements.\",\n    company_rep_mult: 1.2,\n  });\n  NuoptimalInjectorImplant.addToFactions([\n    \"Tian Di Hui\",\n    \"Volhaven\",\n    \"New Tokyo\",\n    \"Chongqing\",\n    \"Clarke Incorporated\",\n    \"Four Sigma\",\n    \"Bachman & Associates\",\n  ]);\n  if (augmentationExists(AugmentationNames.NuoptimalInjectorImplant)) {\n    delete Augmentations[AugmentationNames.NuoptimalInjectorImplant];\n  }\n  AddToAugmentations(NuoptimalInjectorImplant);\n\n  const SpeechEnhancement = new Augmentation({\n    name: AugmentationNames.SpeechEnhancement,\n    repCost: 2.5e3,\n    moneyCost: 1.25e7,\n    info:\n      \"An advanced neural implant that improves your speaking abilities, making \" +\n      \"you more convincing and likable in conversations and overall improving your \" +\n      \"social interactions.\",\n    company_rep_mult: 1.1,\n    charisma_mult: 1.1,\n  });\n  SpeechEnhancement.addToFactions([\n    \"Tian Di Hui\",\n    \"Speakers for the Dead\",\n    \"Four Sigma\",\n    \"KuaiGong International\",\n    \"Clarke Incorporated\",\n    \"Bachman & Associates\",\n  ]);\n  if (augmentationExists(AugmentationNames.SpeechEnhancement)) {\n    delete Augmentations[AugmentationNames.SpeechEnhancement];\n  }\n  AddToAugmentations(SpeechEnhancement);\n\n  const FocusWire = new Augmentation({\n    name: AugmentationNames.FocusWire,\n    repCost: 7.5e4,\n    moneyCost: 9e8,\n    info: \"A cranial implant that stops procrastination by blocking specific neural pathways \" + \"in the brain.\",\n    hacking_exp_mult: 1.05,\n    strength_exp_mult: 1.05,\n    defense_exp_mult: 1.05,\n    dexterity_exp_mult: 1.05,\n    agility_exp_mult: 1.05,\n    charisma_exp_mult: 1.05,\n    company_rep_mult: 1.1,\n    work_money_mult: 1.2,\n  });\n  FocusWire.addToFactions([\"Bachman & Associates\", \"Clarke Incorporated\", \"Four Sigma\", \"KuaiGong International\"]);\n  if (augmentationExists(AugmentationNames.FocusWire)) {\n    delete Augmentations[AugmentationNames.FocusWire];\n  }\n  AddToAugmentations(FocusWire);\n\n  const PCDNI = new Augmentation({\n    name: AugmentationNames.PCDNI,\n    repCost: 3.75e5,\n    moneyCost: 3.75e9,\n    info:\n      \"Installs a Direct-Neural Interface jack into your arm that is compatible with most \" +\n      \"computers. Connecting to a computer through this jack allows you to interface with \" +\n      \"it using the brain's electrochemical signals.\",\n    company_rep_mult: 1.3,\n    hacking_mult: 1.08,\n  });\n  PCDNI.addToFactions([\"Four Sigma\", \"OmniTek Incorporated\", \"ECorp\", \"Blade Industries\"]);\n  if (augmentationExists(AugmentationNames.PCDNI)) {\n    delete Augmentations[AugmentationNames.PCDNI];\n  }\n  AddToAugmentations(PCDNI);\n\n  const PCDNIOptimizer = new Augmentation({\n    name: AugmentationNames.PCDNIOptimizer,\n    repCost: 5e5,\n    moneyCost: 4.5e9,\n    info:\n      \"This is a submodule upgrade to the PC Direct-Neural Interface augmentation. It \" +\n      \"improves the performance of the interface and gives the user more control options \" +\n      \"to a connected computer.\",\n    prereqs: [AugmentationNames.PCDNI],\n    company_rep_mult: 1.75,\n    hacking_mult: 1.1,\n  });\n  PCDNIOptimizer.addToFactions([\"Fulcrum Secret Technologies\", \"ECorp\", \"Blade Industries\"]);\n  if (augmentationExists(AugmentationNames.PCDNIOptimizer)) {\n    delete Augmentations[AugmentationNames.PCDNIOptimizer];\n  }\n  AddToAugmentations(PCDNIOptimizer);\n\n  const PCDNINeuralNetwork = new Augmentation({\n    name: AugmentationNames.PCDNINeuralNetwork,\n    repCost: 1.5e6,\n    moneyCost: 7.5e9,\n    info:\n      \"This is an additional installation that upgrades the functionality of the \" +\n      \"PC Direct-Neural Interface augmentation. When connected to a computer, \" +\n      \"The Neural Network upgrade allows the user to use their own brain's \" +\n      \"processing power to aid the computer in computational tasks.\",\n    prereqs: [AugmentationNames.PCDNI],\n    company_rep_mult: 2,\n    hacking_mult: 1.1,\n    hacking_speed_mult: 1.05,\n  });\n  PCDNINeuralNetwork.addToFactions([\"Fulcrum Secret Technologies\"]);\n  if (augmentationExists(AugmentationNames.PCDNINeuralNetwork)) {\n    delete Augmentations[AugmentationNames.PCDNINeuralNetwork];\n  }\n  AddToAugmentations(PCDNINeuralNetwork);\n\n  const ADRPheromone1 = new Augmentation({\n    name: AugmentationNames.ADRPheromone1,\n    repCost: 3.75e3,\n    moneyCost: 1.75e7,\n    info:\n      \"The body is genetically re-engineered so that it produces the ADR-V1 pheromone, \" +\n      \"an artificial pheromone discovered by scientists. The ADR-V1 pheromone, when excreted, \" +\n      \"triggers feelings of admiration and approval in other people.\",\n    company_rep_mult: 1.1,\n    faction_rep_mult: 1.1,\n  });\n  ADRPheromone1.addToFactions([\"Tian Di Hui\", \"The Syndicate\", \"NWO\", \"MegaCorp\", \"Four Sigma\"]);\n  if (augmentationExists(AugmentationNames.ADRPheromone1)) {\n    delete Augmentations[AugmentationNames.ADRPheromone1];\n  }\n  AddToAugmentations(ADRPheromone1);\n\n  const ADRPheromone2 = new Augmentation({\n    name: AugmentationNames.ADRPheromone2,\n    repCost: 6.25e4,\n    moneyCost: 5.5e8,\n    info:\n      \"The body is genetically re-engineered so that it produces the ADR-V2 pheromone, \" +\n      \"which is similar to but more potent than ADR-V1. This pheromone, when excreted, \" +\n      \"triggers feelings of admiration, approval, and respect in others.\",\n    company_rep_mult: 1.2,\n    faction_rep_mult: 1.2,\n  });\n  ADRPheromone2.addToFactions([\"Silhouette\", \"Four Sigma\", \"Bachman & Associates\", \"Clarke Incorporated\"]);\n  if (augmentationExists(AugmentationNames.ADRPheromone2)) {\n    delete Augmentations[AugmentationNames.ADRPheromone2];\n  }\n  AddToAugmentations(ADRPheromone2);\n\n  const ShadowsSimulacrum = new Augmentation({\n    name: AugmentationNames.ShadowsSimulacrum,\n    repCost: 3.75e4,\n    moneyCost: 4e8,\n    info:\n      \"A crude but functional matter phase-shifter module that is embedded \" +\n      \"in the brainstem and cerebellum. This augmentation was developed by \" +\n      \"criminal organizations and allows the user to project and control holographic \" +\n      \"simulacrums within a large radius. These simulacrums are commonly used for \" +\n      \"espionage and surveillance work.\",\n    company_rep_mult: 1.15,\n    faction_rep_mult: 1.15,\n  });\n  ShadowsSimulacrum.addToFactions([\"The Syndicate\", \"The Dark Army\", \"Speakers for the Dead\"]);\n  if (augmentationExists(AugmentationNames.ShadowsSimulacrum)) {\n    delete Augmentations[AugmentationNames.ShadowsSimulacrum];\n  }\n  AddToAugmentations(ShadowsSimulacrum);\n\n  // HacknetNode Augmentations\n  const HacknetNodeCPUUpload = new Augmentation({\n    name: AugmentationNames.HacknetNodeCPUUpload,\n    repCost: 3.75e3,\n    moneyCost: 1.1e7,\n    info:\n      \"Uploads the architecture and design details of a Hacknet Node's CPU into \" +\n      \"the brain. This allows the user to engineer custom hardware and software  \" +\n      \"for the Hacknet Node that provides better performance.\",\n    hacknet_node_money_mult: 1.15,\n    hacknet_node_purchase_cost_mult: 0.85,\n  });\n  HacknetNodeCPUUpload.addToFactions([\"Netburners\"]);\n  if (augmentationExists(AugmentationNames.HacknetNodeCPUUpload)) {\n    delete Augmentations[AugmentationNames.HacknetNodeCPUUpload];\n  }\n  AddToAugmentations(HacknetNodeCPUUpload);\n\n  const HacknetNodeCacheUpload = new Augmentation({\n    name: AugmentationNames.HacknetNodeCacheUpload,\n    repCost: 2.5e3,\n    moneyCost: 5.5e6,\n    info:\n      \"Uploads the architecture and design details of a Hacknet Node's main-memory cache \" +\n      \"into the brain. This allows the user to engineer custom cache hardware for the  \" +\n      \"Hacknet Node that offers better performance.\",\n    hacknet_node_money_mult: 1.1,\n    hacknet_node_level_cost_mult: 0.85,\n  });\n  HacknetNodeCacheUpload.addToFactions([\"Netburners\"]);\n  if (augmentationExists(AugmentationNames.HacknetNodeCacheUpload)) {\n    delete Augmentations[AugmentationNames.HacknetNodeCacheUpload];\n  }\n  AddToAugmentations(HacknetNodeCacheUpload);\n\n  const HacknetNodeNICUpload = new Augmentation({\n    name: AugmentationNames.HacknetNodeNICUpload,\n    repCost: 1.875e3,\n    moneyCost: 4.5e6,\n    info:\n      \"Uploads the architecture and design details of a Hacknet Node's Network Interface Card (NIC) \" +\n      \"into the brain. This allows the user to engineer a custom NIC for the Hacknet Node that \" +\n      \"offers better performance.\",\n    hacknet_node_money_mult: 1.1,\n    hacknet_node_purchase_cost_mult: 0.9,\n  });\n  HacknetNodeNICUpload.addToFactions([\"Netburners\"]);\n  if (augmentationExists(AugmentationNames.HacknetNodeNICUpload)) {\n    delete Augmentations[AugmentationNames.HacknetNodeNICUpload];\n  }\n  AddToAugmentations(HacknetNodeNICUpload);\n\n  const HacknetNodeKernelDNI = new Augmentation({\n    name: AugmentationNames.HacknetNodeKernelDNI,\n    repCost: 7.5e3,\n    moneyCost: 4e7,\n    info:\n      \"Installs a Direct-Neural Interface jack into the arm that is capable of connecting to a \" +\n      \"Hacknet Node. This lets the user access and manipulate the Node's kernel using \" +\n      \"electrochemical signals.\",\n    hacknet_node_money_mult: 1.25,\n  });\n  HacknetNodeKernelDNI.addToFactions([\"Netburners\"]);\n  if (augmentationExists(AugmentationNames.HacknetNodeKernelDNI)) {\n    delete Augmentations[AugmentationNames.HacknetNodeKernelDNI];\n  }\n  AddToAugmentations(HacknetNodeKernelDNI);\n\n  const HacknetNodeCoreDNI = new Augmentation({\n    name: AugmentationNames.HacknetNodeCoreDNI,\n    repCost: 1.25e4,\n    moneyCost: 6e7,\n    info:\n      \"Installs a Direct-Neural Interface jack into the arm that is capable of connecting \" +\n      \"to a Hacknet Node. This lets the user access and manipulate the Node's processing logic using \" +\n      \"electrochemical signals.\",\n    hacknet_node_money_mult: 1.45,\n  });\n  HacknetNodeCoreDNI.addToFactions([\"Netburners\"]);\n  if (augmentationExists(AugmentationNames.HacknetNodeCoreDNI)) {\n    delete Augmentations[AugmentationNames.HacknetNodeCoreDNI];\n  }\n  AddToAugmentations(HacknetNodeCoreDNI);\n\n  //Misc/Hybrid augmentations\n  const NeuroFluxGovernor = new Augmentation({\n    name: AugmentationNames.NeuroFluxGovernor,\n    repCost: 1.25e3,\n    moneyCost: 3.75e6,\n    info:\n      \"A device that is embedded in the back of the neck. The NeuroFlux Governor \" +\n      \"monitors and regulates nervous impulses coming to and from the spinal column, \" +\n      \"essentially 'governing' the body. By doing so, it improves the functionality of the \" +\n      \"body's nervous system.\",\n    stats: (\n      <>\n        This special augmentation can be leveled up infinitely. Each level of this augmentation increases ALL\n        multipliers by 1%, stacking multiplicatively.\n      </>\n    ),\n    hacking_chance_mult: 1.01,\n    hacking_speed_mult: 1.01,\n    hacking_money_mult: 1.01,\n    hacking_grow_mult: 1.01,\n    hacking_mult: 1.01,\n    strength_mult: 1.01,\n    defense_mult: 1.01,\n    dexterity_mult: 1.01,\n    agility_mult: 1.01,\n    charisma_mult: 1.01,\n    hacking_exp_mult: 1.01,\n    strength_exp_mult: 1.01,\n    defense_exp_mult: 1.01,\n    dexterity_exp_mult: 1.01,\n    agility_exp_mult: 1.01,\n    charisma_exp_mult: 1.01,\n    company_rep_mult: 1.01,\n    faction_rep_mult: 1.01,\n    crime_money_mult: 1.01,\n    crime_success_mult: 1.01,\n    hacknet_node_money_mult: 1.01,\n    hacknet_node_purchase_cost_mult: 0.99,\n    hacknet_node_ram_cost_mult: 0.99,\n    hacknet_node_core_cost_mult: 0.99,\n    hacknet_node_level_cost_mult: 0.99,\n    work_money_mult: 1.01,\n  });\n\n  // Set the Augmentation's level to the currently-installed level\n  let currLevel = 0;\n  for (let i = 0; i < Player.augmentations.length; ++i) {\n    if (Player.augmentations[i].name === AugmentationNames.NeuroFluxGovernor) {\n      currLevel = Player.augmentations[i].level;\n    }\n  }\n  NeuroFluxGovernor.level = currLevel;\n\n  // To set the price/rep req of the NeuroFlux, we have to take into account NeuroFlux\n  // levels that are purchased but not yet installed\n  let nextLevel = currLevel;\n  for (let i = 0; i < Player.queuedAugmentations.length; ++i) {\n    if (Player.queuedAugmentations[i].name === AugmentationNames.NeuroFluxGovernor) {\n      ++nextLevel;\n    }\n  }\n  let mult = Math.pow(CONSTANTS.NeuroFluxGovernorLevelMult, nextLevel);\n  NeuroFluxGovernor.baseRepRequirement = 500 * mult * BitNodeMultipliers.AugmentationRepCost;\n  NeuroFluxGovernor.baseCost = 750e3 * mult * BitNodeMultipliers.AugmentationMoneyCost;\n  if (augmentationExists(AugmentationNames.NeuroFluxGovernor)) {\n    delete Augmentations[AugmentationNames.NeuroFluxGovernor];\n  }\n  NeuroFluxGovernor.addToAllFactions();\n  AddToAugmentations(NeuroFluxGovernor);\n\n  const Neurotrainer1 = new Augmentation({\n    name: AugmentationNames.Neurotrainer1,\n    repCost: 1e3,\n    moneyCost: 4e6,\n    info:\n      \"A decentralized cranial implant that improves the brain's ability to learn. It is \" +\n      \"installed by releasing millions of nanobots into the human brain, each of which \" +\n      \"attaches to a different neural pathway to enhance the brain's ability to retain \" +\n      \"and retrieve information.\",\n    hacking_exp_mult: 1.1,\n    strength_exp_mult: 1.1,\n    defense_exp_mult: 1.1,\n    dexterity_exp_mult: 1.1,\n    agility_exp_mult: 1.1,\n    charisma_exp_mult: 1.1,\n  });\n  Neurotrainer1.addToFactions([\"CyberSec\", \"Aevum\"]);\n  if (augmentationExists(AugmentationNames.Neurotrainer1)) {\n    delete Augmentations[AugmentationNames.Neurotrainer1];\n  }\n  AddToAugmentations(Neurotrainer1);\n\n  const Neurotrainer2 = new Augmentation({\n    name: AugmentationNames.Neurotrainer2,\n    repCost: 1e4,\n    moneyCost: 4.5e7,\n    info:\n      \"A decentralized cranial implant that improves the brain's ability to learn. This \" +\n      \"is a more powerful version of the Neurotrainer I augmentation, but it does not \" +\n      \"require Neurotrainer I to be installed as a prerequisite.\",\n    hacking_exp_mult: 1.15,\n    strength_exp_mult: 1.15,\n    defense_exp_mult: 1.15,\n    dexterity_exp_mult: 1.15,\n    agility_exp_mult: 1.15,\n    charisma_exp_mult: 1.15,\n  });\n  Neurotrainer2.addToFactions([\"BitRunners\", \"NiteSec\"]);\n  if (augmentationExists(AugmentationNames.Neurotrainer2)) {\n    delete Augmentations[AugmentationNames.Neurotrainer2];\n  }\n  AddToAugmentations(Neurotrainer2);\n\n  const Neurotrainer3 = new Augmentation({\n    name: AugmentationNames.Neurotrainer3,\n    repCost: 2.5e4,\n    moneyCost: 1.3e8,\n    info:\n      \"A decentralized cranial implant that improves the brain's ability to learn. This \" +\n      \"is a more powerful version of the Neurotrainer I and Neurotrainer II augmentation, \" +\n      \"but it does not require either of them to be installed as a prerequisite.\",\n    hacking_exp_mult: 1.2,\n    strength_exp_mult: 1.2,\n    defense_exp_mult: 1.2,\n    dexterity_exp_mult: 1.2,\n    agility_exp_mult: 1.2,\n    charisma_exp_mult: 1.2,\n  });\n  Neurotrainer3.addToFactions([\"NWO\", \"Four Sigma\"]);\n  if (augmentationExists(AugmentationNames.Neurotrainer3)) {\n    delete Augmentations[AugmentationNames.Neurotrainer3];\n  }\n  AddToAugmentations(Neurotrainer3);\n\n  const Hypersight = new Augmentation({\n    name: AugmentationNames.Hypersight,\n    repCost: 1.5e5,\n    moneyCost: 2.75e9,\n    info:\n      \"A bionic eye implant that grants sight capabilities far beyond those of a natural human. \" +\n      \"Embedded circuitry within the implant provides the ability to detect heat and movement \" +\n      \"through solid objects such as walls, thus providing 'x-ray vision'-like capabilities.\",\n    dexterity_mult: 1.4,\n    hacking_speed_mult: 1.03,\n    hacking_money_mult: 1.1,\n  });\n  Hypersight.addToFactions([\"Blade Industries\", \"KuaiGong International\"]);\n  if (augmentationExists(AugmentationNames.Hypersight)) {\n    delete Augmentations[AugmentationNames.Hypersight];\n  }\n  AddToAugmentations(Hypersight);\n\n  const LuminCloaking1 = new Augmentation({\n    name: AugmentationNames.LuminCloaking1,\n    repCost: 1.5e3,\n    moneyCost: 5e6,\n    info:\n      \"A skin implant that reinforces the skin with highly-advanced synthetic cells. These \" +\n      \"cells, when powered, have a negative refractive index. As a result, they bend light \" +\n      \"around the skin, making the user much harder to see to the naked eye.\",\n    agility_mult: 1.05,\n    crime_money_mult: 1.1,\n  });\n  LuminCloaking1.addToFactions([\"Slum Snakes\", \"Tetrads\"]);\n  if (augmentationExists(AugmentationNames.LuminCloaking1)) {\n    delete Augmentations[AugmentationNames.LuminCloaking1];\n  }\n  AddToAugmentations(LuminCloaking1);\n\n  const LuminCloaking2 = new Augmentation({\n    name: AugmentationNames.LuminCloaking2,\n    repCost: 5e3,\n    moneyCost: 3e7,\n    info:\n      \"This is a more advanced version of the LuminCloaking-V1 augmentation. This skin implant \" +\n      \"reinforces the skin with highly-advanced synthetic cells. These \" +\n      \"cells, when powered, are capable of not only bending light but also of bending heat, \" +\n      \"making the user more resilient as well as stealthy.\",\n    prereqs: [AugmentationNames.LuminCloaking1],\n    agility_mult: 1.1,\n    defense_mult: 1.1,\n    crime_money_mult: 1.25,\n  });\n  LuminCloaking2.addToFactions([\"Slum Snakes\", \"Tetrads\"]);\n  if (augmentationExists(AugmentationNames.LuminCloaking2)) {\n    delete Augmentations[AugmentationNames.LuminCloaking2];\n  }\n  AddToAugmentations(LuminCloaking2);\n\n  const SmartSonar = new Augmentation({\n    name: AugmentationNames.SmartSonar,\n    repCost: 2.25e4,\n    moneyCost: 7.5e7,\n    info: \"A cochlear implant that helps the player detect and locate enemies \" + \"using sound propagation.\",\n    dexterity_mult: 1.1,\n    dexterity_exp_mult: 1.15,\n    crime_money_mult: 1.25,\n  });\n  SmartSonar.addToFactions([\"Slum Snakes\"]);\n  if (augmentationExists(AugmentationNames.SmartSonar)) {\n    delete Augmentations[AugmentationNames.SmartSonar];\n  }\n  AddToAugmentations(SmartSonar);\n\n  const PowerRecirculator = new Augmentation({\n    name: AugmentationNames.PowerRecirculator,\n    repCost: 2.5e4,\n    moneyCost: 1.8e8,\n    info:\n      \"The body's nerves are attached with polypyrrole nanocircuits that \" +\n      \"are capable of capturing wasted energy, in the form of heat, \" +\n      \"and converting it back into usable power.\",\n    hacking_mult: 1.05,\n    strength_mult: 1.05,\n    defense_mult: 1.05,\n    dexterity_mult: 1.05,\n    agility_mult: 1.05,\n    charisma_mult: 1.05,\n    hacking_exp_mult: 1.1,\n    strength_exp_mult: 1.1,\n    defense_exp_mult: 1.1,\n    dexterity_exp_mult: 1.1,\n    agility_exp_mult: 1.1,\n    charisma_exp_mult: 1.1,\n  });\n  PowerRecirculator.addToFactions([\"Tetrads\", \"The Dark Army\", \"The Syndicate\", \"NWO\"]);\n  if (augmentationExists(AugmentationNames.PowerRecirculator)) {\n    delete Augmentations[AugmentationNames.PowerRecirculator];\n  }\n  AddToAugmentations(PowerRecirculator);\n\n  // Unique AUGS (Each Faction gets one unique augmentation)\n  // Factions that already have unique augs up to this point:\n  //   Slum Snakes, CyberSec, Netburners, Fulcrum Secret Technologies,\n  //   Silhouette\n\n  // Illuminati\n  const QLink = new Augmentation({\n    name: AugmentationNames.QLink,\n    repCost: 1.875e6,\n    moneyCost: 2.5e13,\n    info:\n      \"A brain implant that wirelessly connects you to the Illuminati's \" +\n      \"quantum supercomputer, allowing you to access and use its incredible \" +\n      \"computing power.\",\n    hacking_mult: 1.75,\n    hacking_speed_mult: 2,\n    hacking_chance_mult: 2.5,\n    hacking_money_mult: 4,\n  });\n  QLink.addToFactions([\"Illuminati\"]);\n  if (augmentationExists(AugmentationNames.QLink)) {\n    delete Augmentations[AugmentationNames.QLink];\n  }\n  AddToAugmentations(QLink);\n\n  // Daedalus\n  const RedPill = new Augmentation({\n    name: AugmentationNames.TheRedPill,\n    repCost: 2.5e6,\n    moneyCost: 0,\n    info: \"It's time to leave the cave.\",\n    stats: null,\n  });\n  RedPill.addToFactions([\"Daedalus\"]);\n  if (augmentationExists(AugmentationNames.TheRedPill)) {\n    delete Augmentations[AugmentationNames.TheRedPill];\n  }\n  AddToAugmentations(RedPill);\n\n  // Covenant\n  const SPTN97 = new Augmentation({\n    name: AugmentationNames.SPTN97,\n    repCost: 1.25e6,\n    moneyCost: 4.875e9,\n    info:\n      \"The SPTN-97 gene is injected into the genome. The SPTN-97 gene is an \" +\n      \"artificially-synthesized gene that was developed by DARPA to create \" +\n      \"super-soldiers through genetic modification. The gene was outlawed in \" +\n      \"2056.\",\n    strength_mult: 1.75,\n    defense_mult: 1.75,\n    dexterity_mult: 1.75,\n    agility_mult: 1.75,\n    hacking_mult: 1.15,\n  });\n  SPTN97.addToFactions([\"The Covenant\"]);\n  if (augmentationExists(AugmentationNames.SPTN97)) {\n    delete Augmentations[AugmentationNames.SPTN97];\n  }\n  AddToAugmentations(SPTN97);\n\n  // ECorp\n  const HiveMind = new Augmentation({\n    name: AugmentationNames.HiveMind,\n    repCost: 1.5e6,\n    moneyCost: 5.5e9,\n    info:\n      \"A brain implant developed by ECorp. They do not reveal what \" +\n      \"exactly the implant does, but they promise that it will greatly \" +\n      \"enhance your abilities.\",\n    hacking_grow_mult: 3,\n    stats: null,\n  });\n  HiveMind.addToFactions([\"ECorp\"]);\n  if (augmentationExists(AugmentationNames.HiveMind)) {\n    delete Augmentations[AugmentationNames.HiveMind];\n  }\n  AddToAugmentations(HiveMind);\n\n  // MegaCorp\n  const CordiARCReactor = new Augmentation({\n    name: AugmentationNames.CordiARCReactor,\n    repCost: 1.125e6,\n    moneyCost: 5e9,\n    info:\n      \"The thoracic cavity is equipped with a small chamber designed \" +\n      \"to hold and sustain hydrogen plasma. The plasma is used to generate \" +\n      \"fusion power through nuclear fusion, providing limitless amounts of clean \" +\n      \"energy for the body.\",\n    strength_mult: 1.35,\n    defense_mult: 1.35,\n    dexterity_mult: 1.35,\n    agility_mult: 1.35,\n    strength_exp_mult: 1.35,\n    defense_exp_mult: 1.35,\n    dexterity_exp_mult: 1.35,\n    agility_exp_mult: 1.35,\n  });\n  CordiARCReactor.addToFactions([\"MegaCorp\"]);\n  if (augmentationExists(AugmentationNames.CordiARCReactor)) {\n    delete Augmentations[AugmentationNames.CordiARCReactor];\n  }\n  AddToAugmentations(CordiARCReactor);\n\n  // BachmanAndAssociates\n  const SmartJaw = new Augmentation({\n    name: AugmentationNames.SmartJaw,\n    repCost: 3.75e5,\n    moneyCost: 2.75e9,\n    info:\n      \"A bionic jaw that contains advanced hardware and software \" +\n      \"capable of psychoanalyzing and profiling the personality of \" +\n      \"others using optical imaging software.\",\n    charisma_mult: 1.5,\n    charisma_exp_mult: 1.5,\n    company_rep_mult: 1.25,\n    faction_rep_mult: 1.25,\n  });\n  SmartJaw.addToFactions([\"Bachman & Associates\"]);\n  if (augmentationExists(AugmentationNames.SmartJaw)) {\n    delete Augmentations[AugmentationNames.SmartJaw];\n  }\n  AddToAugmentations(SmartJaw);\n\n  // BladeIndustries\n  const Neotra = new Augmentation({\n    name: AugmentationNames.Neotra,\n    repCost: 5.625e5,\n    moneyCost: 2.875e9,\n    info:\n      \"A highly-advanced techno-organic drug that is injected into the skeletal \" +\n      \"and integumentary system. The drug permanently modifies the DNA of the \" +\n      \"body's skin and bone cells, granting them the ability to repair \" +\n      \"and restructure themselves.\",\n    strength_mult: 1.55,\n    defense_mult: 1.55,\n  });\n  Neotra.addToFactions([\"Blade Industries\"]);\n  if (augmentationExists(AugmentationNames.Neotra)) {\n    delete Augmentations[AugmentationNames.Neotra];\n  }\n  AddToAugmentations(Neotra);\n\n  // NWO\n  const Xanipher = new Augmentation({\n    name: AugmentationNames.Xanipher,\n    repCost: 8.75e5,\n    moneyCost: 4.25e9,\n    info:\n      \"A concoction of advanced nanobots that is orally ingested into the \" +\n      \"body. These nanobots induce physiological changes and significantly \" +\n      \"improve the body's functioning in all aspects.\",\n    hacking_mult: 1.2,\n    strength_mult: 1.2,\n    defense_mult: 1.2,\n    dexterity_mult: 1.2,\n    agility_mult: 1.2,\n    charisma_mult: 1.2,\n    hacking_exp_mult: 1.15,\n    strength_exp_mult: 1.15,\n    defense_exp_mult: 1.15,\n    dexterity_exp_mult: 1.15,\n    agility_exp_mult: 1.15,\n    charisma_exp_mult: 1.15,\n  });\n  Xanipher.addToFactions([\"NWO\"]);\n  if (augmentationExists(AugmentationNames.Xanipher)) {\n    delete Augmentations[AugmentationNames.Xanipher];\n  }\n  AddToAugmentations(Xanipher);\n\n  const HydroflameLeftArm = new Augmentation({\n    name: AugmentationNames.HydroflameLeftArm,\n    repCost: 1.25e6,\n    moneyCost: 2.5e12,\n    info:\n      \"The left arm of a legendary BitRunner who ascended beyond this world. \" +\n      \"It projects a light blue energy shield that protects the exposed inner parts. \" +\n      \"Even though it contains no weapons, the advanced tungsten titanium \" +\n      \"alloy increases the users strength to unbelievable levels. The augmentation \" +\n      \"gets more powerful over time for seemingly no reason.\",\n    strength_mult: 2.7,\n  });\n  HydroflameLeftArm.addToFactions([\"NWO\"]);\n  if (augmentationExists(AugmentationNames.HydroflameLeftArm)) {\n    delete Augmentations[AugmentationNames.HydroflameLeftArm];\n  }\n  AddToAugmentations(HydroflameLeftArm);\n\n  // ClarkeIncorporated\n  const nextSENS = new Augmentation({\n    name: AugmentationNames.nextSENS,\n    repCost: 4.375e5,\n    moneyCost: 1.925e9,\n    info:\n      \"The body is genetically re-engineered to maintain a state \" +\n      \"of negligible senescence, preventing the body from \" +\n      \"deteriorating with age.\",\n    hacking_mult: 1.2,\n    strength_mult: 1.2,\n    defense_mult: 1.2,\n    dexterity_mult: 1.2,\n    agility_mult: 1.2,\n    charisma_mult: 1.2,\n  });\n  nextSENS.addToFactions([\"Clarke Incorporated\"]);\n  if (augmentationExists(AugmentationNames.nextSENS)) {\n    delete Augmentations[AugmentationNames.nextSENS];\n  }\n  AddToAugmentations(nextSENS);\n\n  // OmniTekIncorporated\n  const OmniTekInfoLoad = new Augmentation({\n    name: AugmentationNames.OmniTekInfoLoad,\n    repCost: 6.25e5,\n    moneyCost: 2.875e9,\n    info:\n      \"OmniTek's data and information repository is uploaded \" +\n      \"into your brain, enhancing your programming and \" +\n      \"hacking abilities.\",\n    hacking_mult: 1.2,\n    hacking_exp_mult: 1.25,\n  });\n  OmniTekInfoLoad.addToFactions([\"OmniTek Incorporated\"]);\n  if (augmentationExists(AugmentationNames.OmniTekInfoLoad)) {\n    delete Augmentations[AugmentationNames.OmniTekInfoLoad];\n  }\n  AddToAugmentations(OmniTekInfoLoad);\n\n  // FourSigma\n  // TODO Later when Intelligence is added in . Some aug that greatly increases int\n\n  // KuaiGongInternational\n  const PhotosyntheticCells = new Augmentation({\n    name: AugmentationNames.PhotosyntheticCells,\n    repCost: 5.625e5,\n    moneyCost: 2.75e9,\n    info:\n      \"Chloroplasts are added to epidermal stem cells and are applied \" +\n      \"to the body using a skin graft. The result is photosynthetic \" +\n      \"skin cells, allowing users to generate their own energy \" +\n      \"and nutrition using solar power.\",\n    strength_mult: 1.4,\n    defense_mult: 1.4,\n    agility_mult: 1.4,\n  });\n  PhotosyntheticCells.addToFactions([\"KuaiGong International\"]);\n  if (augmentationExists(AugmentationNames.PhotosyntheticCells)) {\n    delete Augmentations[AugmentationNames.PhotosyntheticCells];\n  }\n  AddToAugmentations(PhotosyntheticCells);\n\n  // BitRunners\n  const Neurolink = new Augmentation({\n    name: AugmentationNames.Neurolink,\n    repCost: 8.75e5,\n    moneyCost: 4.375e9,\n    info:\n      \"A brain implant that provides a high-bandwidth, direct neural link between your \" +\n      \"mind and the BitRunners' data servers, which reportedly contain \" +\n      \"the largest database of hacking tools and information in the world.\",\n    hacking_mult: 1.15,\n    hacking_exp_mult: 1.2,\n    hacking_chance_mult: 1.1,\n    hacking_speed_mult: 1.05,\n    programs: [Programs.FTPCrackProgram.name, Programs.RelaySMTPProgram.name],\n  });\n  Neurolink.addToFactions([\"BitRunners\"]);\n  if (augmentationExists(AugmentationNames.Neurolink)) {\n    delete Augmentations[AugmentationNames.Neurolink];\n  }\n  AddToAugmentations(Neurolink);\n\n  // BlackHand\n  const TheBlackHand = new Augmentation({\n    name: AugmentationNames.TheBlackHand,\n    repCost: 1e5,\n    moneyCost: 5.5e8,\n    info:\n      \"A highly advanced bionic hand. This prosthetic not only \" +\n      \"enhances strength and dexterity but it is also embedded \" +\n      \"with hardware and firmware that lets the user connect to, access, and hack \" +\n      \"devices and machines by just touching them.\",\n    strength_mult: 1.15,\n    dexterity_mult: 1.15,\n    hacking_mult: 1.1,\n    hacking_speed_mult: 1.02,\n    hacking_money_mult: 1.1,\n  });\n  TheBlackHand.addToFactions([\"The Black Hand\"]);\n  if (augmentationExists(AugmentationNames.TheBlackHand)) {\n    delete Augmentations[AugmentationNames.TheBlackHand];\n  }\n  AddToAugmentations(TheBlackHand);\n\n  // NiteSec\n  const CRTX42AA = new Augmentation({\n    name: AugmentationNames.CRTX42AA,\n    repCost: 4.5e4,\n    moneyCost: 2.25e8,\n    info:\n      \"The CRTX42-AA gene is injected into the genome. \" +\n      \"The CRTX42-AA is an artificially-synthesized gene that targets the visual and prefrontal \" +\n      \"cortex and improves cognitive abilities.\",\n    hacking_mult: 1.08,\n    hacking_exp_mult: 1.15,\n  });\n  CRTX42AA.addToFactions([\"NiteSec\"]);\n  if (augmentationExists(AugmentationNames.CRTX42AA)) {\n    delete Augmentations[AugmentationNames.CRTX42AA];\n  }\n  AddToAugmentations(CRTX42AA);\n\n  // Chongqing\n  const Neuregen = new Augmentation({\n    name: AugmentationNames.Neuregen,\n    repCost: 3.75e4,\n    moneyCost: 3.75e8,\n    info:\n      \"A drug that genetically modifies the neurons in the brain \" +\n      \"resulting in neurons never die, continuously \" +\n      \"regenerate, and strengthen themselves.\",\n    hacking_exp_mult: 1.4,\n  });\n  Neuregen.addToFactions([\"Chongqing\"]);\n  if (augmentationExists(AugmentationNames.Neuregen)) {\n    delete Augmentations[AugmentationNames.Neuregen];\n  }\n  AddToAugmentations(Neuregen);\n\n  // Sector12\n  const CashRoot = new Augmentation({\n    name: AugmentationNames.CashRoot,\n    repCost: 1.25e4,\n    moneyCost: 1.25e8,\n    info: (\n      <>\n        A collection of digital assets saved on a small chip. The chip is implanted into your wrist. A small jack in the\n        chip allows you to connect it to a computer and upload the assets.\n      </>\n    ),\n    startingMoney: 1e6,\n    programs: [Programs.BruteSSHProgram.name],\n  });\n  CashRoot.addToFactions([\"Sector-12\"]);\n  if (augmentationExists(AugmentationNames.CashRoot)) {\n    delete Augmentations[AugmentationNames.CashRoot];\n  }\n  AddToAugmentations(CashRoot);\n\n  // NewTokyo\n  const NutriGen = new Augmentation({\n    name: AugmentationNames.NutriGen,\n    repCost: 6.25e3,\n    moneyCost: 2.5e6,\n    info:\n      \"A thermo-powered artificial nutrition generator. Endogenously \" +\n      \"synthesizes glucose, amino acids, and vitamins and redistributes them \" +\n      \"across the body. The device is powered by the body's naturally wasted \" +\n      \"energy in the form of heat.\",\n    strength_exp_mult: 1.2,\n    defense_exp_mult: 1.2,\n    dexterity_exp_mult: 1.2,\n    agility_exp_mult: 1.2,\n  });\n  NutriGen.addToFactions([\"New Tokyo\"]);\n  if (augmentationExists(AugmentationNames.NutriGen)) {\n    delete Augmentations[AugmentationNames.NutriGen];\n  }\n  AddToAugmentations(NutriGen);\n\n  // Aevum\n  const PCMatrix = new Augmentation({\n    name: AugmentationNames.PCMatrix,\n    repCost: 100e3,\n    moneyCost: 2e9,\n    info:\n      \"A 'Probability Computation Matrix' is installed in the frontal cortex. This implant \" +\n      \"uses advanced mathematical algorithims to rapidly identify and compute statistical \" +\n      \"outcomes of nearly every situation.\",\n    charisma_mult: 1.0777,\n    charisma_exp_mult: 1.0777,\n    work_money_mult: 1.777,\n    faction_rep_mult: 1.0777,\n    company_rep_mult: 1.0777,\n    crime_success_mult: 1.0777,\n    crime_money_mult: 1.0777,\n    programs: [Programs.DeepscanV1.name, Programs.AutoLink.name],\n  });\n  PCMatrix.addToFactions([\"Aevum\"]);\n  if (augmentationExists(AugmentationNames.PCMatrix)) {\n    delete Augmentations[AugmentationNames.PCMatrix];\n  }\n  AddToAugmentations(PCMatrix);\n\n  // Ishima\n  const INFRARet = new Augmentation({\n    name: AugmentationNames.INFRARet,\n    repCost: 7.5e3,\n    moneyCost: 3e7,\n    info:\n      \"A tiny chip that sits behind the retinae. This implant lets the\" + \"user visually detect infrared radiation.\",\n    crime_success_mult: 1.25,\n    crime_money_mult: 1.1,\n    dexterity_mult: 1.1,\n  });\n  INFRARet.addToFactions([\"Ishima\"]);\n  if (augmentationExists(AugmentationNames.INFRARet)) {\n    delete Augmentations[AugmentationNames.INFRARet];\n  }\n  AddToAugmentations(INFRARet);\n\n  // Volhaven\n  const DermaForce = new Augmentation({\n    name: AugmentationNames.DermaForce,\n    repCost: 1.5e4,\n    moneyCost: 5e7,\n    info:\n      \"Synthetic skin that is grafted onto the body. This skin consists of \" +\n      \"millions of nanobots capable of projecting high-density muon beams, \" +\n      \"creating an energy barrier around the user.\",\n    defense_mult: 1.4,\n  });\n  DermaForce.addToFactions([\"Volhaven\"]);\n  if (augmentationExists(AugmentationNames.DermaForce)) {\n    delete Augmentations[AugmentationNames.DermaForce];\n  }\n  AddToAugmentations(DermaForce);\n\n  // SpeakersForTheDead\n  const GrapheneBrachiBlades = new Augmentation({\n    name: AugmentationNames.GrapheneBrachiBlades,\n    repCost: 2.25e5,\n    moneyCost: 2.5e9,\n    info:\n      \"An upgrade to the BrachiBlades augmentation. It infuses \" +\n      \"the retractable blades with an advanced graphene material \" +\n      \"making them stronger and lighter.\",\n    prereqs: [AugmentationNames.BrachiBlades],\n    strength_mult: 1.4,\n    defense_mult: 1.4,\n    crime_success_mult: 1.1,\n    crime_money_mult: 1.3,\n  });\n  GrapheneBrachiBlades.addToFactions([\"Speakers for the Dead\"]);\n  if (augmentationExists(AugmentationNames.GrapheneBrachiBlades)) {\n    delete Augmentations[AugmentationNames.GrapheneBrachiBlades];\n  }\n  AddToAugmentations(GrapheneBrachiBlades);\n\n  // DarkArmy\n  const GrapheneBionicArms = new Augmentation({\n    name: AugmentationNames.GrapheneBionicArms,\n    repCost: 5e5,\n    moneyCost: 3.75e9,\n    info:\n      \"An upgrade to the Bionic Arms augmentation. It infuses the \" +\n      \"prosthetic arms with an advanced graphene material \" +\n      \"to make them stronger and lighter.\",\n    prereqs: [AugmentationNames.BionicArms],\n    strength_mult: 1.85,\n    dexterity_mult: 1.85,\n  });\n  GrapheneBionicArms.addToFactions([\"The Dark Army\"]);\n  if (augmentationExists(AugmentationNames.GrapheneBionicArms)) {\n    delete Augmentations[AugmentationNames.GrapheneBionicArms];\n  }\n  AddToAugmentations(GrapheneBionicArms);\n\n  // TheSyndicate\n  const BrachiBlades = new Augmentation({\n    name: AugmentationNames.BrachiBlades,\n    repCost: 1.25e4,\n    moneyCost: 9e7,\n    info: \"A set of retractable plasteel blades that are implanted in the arm, underneath the skin.\",\n    strength_mult: 1.15,\n    defense_mult: 1.15,\n    crime_success_mult: 1.1,\n    crime_money_mult: 1.15,\n  });\n  BrachiBlades.addToFactions([\"The Syndicate\"]);\n  if (augmentationExists(AugmentationNames.BrachiBlades)) {\n    delete Augmentations[AugmentationNames.BrachiBlades];\n  }\n  AddToAugmentations(BrachiBlades);\n\n  // Tetrads\n  const BionicArms = new Augmentation({\n    name: AugmentationNames.BionicArms,\n    repCost: 6.25e4,\n    moneyCost: 2.75e8,\n    info:\n      \"Cybernetic arms created from plasteel and carbon fibers that completely replace \" + \"the user's organic arms.\",\n    strength_mult: 1.3,\n    dexterity_mult: 1.3,\n  });\n  BionicArms.addToFactions([\"Tetrads\"]);\n  if (augmentationExists(AugmentationNames.BionicArms)) {\n    delete Augmentations[AugmentationNames.BionicArms];\n  }\n  AddToAugmentations(BionicArms);\n\n  // TianDiHui\n  const SNA = new Augmentation({\n    name: AugmentationNames.SNA,\n    repCost: 6.25e3,\n    moneyCost: 3e7,\n    info:\n      \"A cranial implant that affects the user's personality, making them better \" +\n      \"at negotiation in social situations.\",\n    work_money_mult: 1.1,\n    company_rep_mult: 1.15,\n    faction_rep_mult: 1.15,\n  });\n  SNA.addToFactions([\"Tian Di Hui\"]);\n  if (augmentationExists(AugmentationNames.SNA)) {\n    delete Augmentations[AugmentationNames.SNA];\n  }\n  AddToAugmentations(SNA);\n\n  const NeuroreceptorManager = new Augmentation({\n    name: AugmentationNames.NeuroreceptorManager,\n    repCost: 0.75e5,\n    moneyCost: 5.5e8,\n    info:\n      \"A brain implant carefully assembled around the synapses, which \" +\n      \"micromanages the activity and levels of various neuroreceptor \" +\n      \"chemicals and modulates electrical acvitiy to optimize concentration, \" +\n      \"allowing the user to multitask much more effectively.\",\n    stats: (\n      <>\n        This augmentation removes the penalty for not focusing on actions such as working in a job or working for a\n        faction.\n      </>\n    ),\n  });\n  NeuroreceptorManager.addToFactions([\"Tian Di Hui\"]);\n  if (augmentationExists(AugmentationNames.NeuroreceptorManager)) {\n    delete Augmentations[AugmentationNames.NeuroreceptorManager];\n  }\n  AddToAugmentations(NeuroreceptorManager);\n\n  // Special Bladeburner Augmentations\n  const BladeburnersFactionName = \"Bladeburners\";\n  if (factionExists(BladeburnersFactionName)) {\n    const EsperEyewear = new Augmentation({\n      name: AugmentationNames.EsperEyewear,\n      repCost: 1.25e3,\n      moneyCost: 1.65e8,\n      info:\n        \"Ballistic-grade protective and retractable eyewear that was designed specifically \" +\n        \"for Bladeburner units. This \" +\n        \"is implanted by installing a mechanical frame in the skull's orbit. \" +\n        \"This frame interfaces with the brain and allows the user to \" +\n        \"automatically extrude and extract the eyewear. The eyewear protects \" +\n        \"against debris, shrapnel, lasers, blinding flashes, and gas. It is also \" +\n        \"embedded with a data processing chip that can be programmed to display an \" +\n        \"AR HUD to assist the user in field missions.\",\n      bladeburner_success_chance_mult: 1.03,\n      dexterity_mult: 1.05,\n      isSpecial: true,\n    });\n    EsperEyewear.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(EsperEyewear);\n\n    const EMS4Recombination = new Augmentation({\n      name: AugmentationNames.EMS4Recombination,\n      repCost: 2.5e3,\n      moneyCost: 2.75e8,\n      info:\n        \"A DNA recombination of the EMS-4 Gene. This genetic engineering \" +\n        \"technique was originally used on Bladeburners during the Synthoid uprising \" +\n        \"to induce wakefulness and concentration, suppress fear, reduce empathy, \" +\n        \"improve reflexes, and improve memory among other things.\",\n      bladeburner_success_chance_mult: 1.03,\n      bladeburner_analysis_mult: 1.05,\n      bladeburner_stamina_gain_mult: 1.02,\n      isSpecial: true,\n    });\n    EMS4Recombination.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(EMS4Recombination);\n\n    const OrionShoulder = new Augmentation({\n      name: AugmentationNames.OrionShoulder,\n      repCost: 6.25e3,\n      moneyCost: 5.5e8,\n      info:\n        \"A bionic shoulder augmentation for the right shoulder. Using cybernetics, \" +\n        \"the ORION-MKIV shoulder enhances the strength and dexterity \" +\n        \"of the user's right arm. It also provides protection due to its \" +\n        \"crystallized graphene plating.\",\n      defense_mult: 1.05,\n      strength_mult: 1.05,\n      dexterity_mult: 1.05,\n      bladeburner_success_chance_mult: 1.04,\n      isSpecial: true,\n    });\n    OrionShoulder.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(OrionShoulder);\n\n    const HyperionV1 = new Augmentation({\n      name: AugmentationNames.HyperionV1,\n      repCost: 1.25e4,\n      moneyCost: 2.75e9,\n      info:\n        \"A pair of mini plasma cannons embedded into the hands. The Hyperion is capable \" +\n        \"of rapidly firing bolts of high-density plasma. The weapon is meant to \" +\n        \"be used against augmented enemies as the ionized \" +\n        \"nature of the plasma disrupts the electrical systems of Augmentations. However, \" +\n        \"it can also be effective against non-augmented enemies due to its high temperature \" +\n        \"and concussive force.\",\n      bladeburner_success_chance_mult: 1.06,\n      isSpecial: true,\n    });\n    HyperionV1.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(HyperionV1);\n\n    const HyperionV2 = new Augmentation({\n      name: AugmentationNames.HyperionV2,\n      repCost: 2.5e4,\n      moneyCost: 5.5e9,\n      info:\n        \"A pair of mini plasma cannons embedded into the hands. This augmentation \" +\n        \"is more advanced and powerful than the original V1 model. This V2 model is \" +\n        \"more power-efficient, more accurate, and can fire plasma bolts at a much \" +\n        \"higher velocity than the V1 model.\",\n      prereqs: [AugmentationNames.HyperionV1],\n      bladeburner_success_chance_mult: 1.08,\n      isSpecial: true,\n    });\n    HyperionV2.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(HyperionV2);\n\n    const GolemSerum = new Augmentation({\n      name: AugmentationNames.GolemSerum,\n      repCost: 3.125e4,\n      moneyCost: 1.1e10,\n      info:\n        \"A serum that permanently enhances many aspects of human capabilities, \" +\n        \"including strength, speed, immune system enhancements, and mitochondrial efficiency. The \" +\n        \"serum was originally developed by the Chinese military in an attempt to \" +\n        \"create super soldiers.\",\n      strength_mult: 1.07,\n      defense_mult: 1.07,\n      dexterity_mult: 1.07,\n      agility_mult: 1.07,\n      bladeburner_stamina_gain_mult: 1.05,\n      isSpecial: true,\n    });\n    GolemSerum.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(GolemSerum);\n\n    const VangelisVirus = new Augmentation({\n      name: AugmentationNames.VangelisVirus,\n      repCost: 1.875e4,\n      moneyCost: 2.75e9,\n      info:\n        \"A synthetic symbiotic virus that is injected into human brain tissue. The Vangelis virus \" +\n        \"heightens the senses and focus of its host, and also enhances its intuition.\",\n      dexterity_exp_mult: 1.1,\n      bladeburner_analysis_mult: 1.1,\n      bladeburner_success_chance_mult: 1.04,\n      isSpecial: true,\n    });\n    VangelisVirus.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(VangelisVirus);\n\n    const VangelisVirus3 = new Augmentation({\n      name: AugmentationNames.VangelisVirus3,\n      repCost: 3.75e4,\n      moneyCost: 1.1e10,\n      info:\n        \"An improved version of Vangelis, a synthetic symbiotic virus that is \" +\n        \"injected into human brain tissue. On top of the benefits of the original \" +\n        \"virus, this also grants an accelerated healing factor and enhanced \" +\n        \"reflexes.\",\n      prereqs: [AugmentationNames.VangelisVirus],\n      defense_exp_mult: 1.1,\n      dexterity_exp_mult: 1.1,\n      bladeburner_analysis_mult: 1.15,\n      bladeburner_success_chance_mult: 1.05,\n      isSpecial: true,\n    });\n    VangelisVirus3.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(VangelisVirus3);\n\n    const INTERLINKED = new Augmentation({\n      name: AugmentationNames.INTERLINKED,\n      repCost: 2.5e4,\n      moneyCost: 5.5e9,\n      info:\n        \"The DNA is genetically modified to enhance the human's body \" +\n        \"extracellular matrix (ECM). This improves the ECM's ability to \" +\n        \"structurally support the body and grants heightened strength and \" +\n        \"durability.\",\n      strength_exp_mult: 1.05,\n      defense_exp_mult: 1.05,\n      dexterity_exp_mult: 1.05,\n      agility_exp_mult: 1.05,\n      bladeburner_max_stamina_mult: 1.1,\n      isSpecial: true,\n    });\n    INTERLINKED.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(INTERLINKED);\n\n    const BladeRunner = new Augmentation({\n      name: AugmentationNames.BladeRunner,\n      repCost: 2e4,\n      moneyCost: 8.25e9,\n      info:\n        \"A cybernetic foot augmentation that was specifically created for Bladeburners \" +\n        \"during the Synthoid Uprising. The organic musculature of the human foot \" +\n        \"is enhanced with flexible carbon nanotube matrices that are controlled by \" +\n        \"intelligent servo-motors.\",\n      agility_mult: 1.05,\n      bladeburner_max_stamina_mult: 1.05,\n      bladeburner_stamina_gain_mult: 1.05,\n      isSpecial: true,\n    });\n    BladeRunner.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(BladeRunner);\n\n    const BladeArmor = new Augmentation({\n      name: AugmentationNames.BladeArmor,\n      repCost: 1.25e4,\n      moneyCost: 1.375e9,\n      info:\n        \"A powered exoskeleton suit designed as armor for Bladeburner units. This \" +\n        \"exoskeleton is incredibly adaptable and can protect the wearer from blunt, piercing, \" +\n        \"concussive, thermal, chemical, and electric trauma. It also enhances the user's \" +\n        \"physical abilities.\",\n      strength_mult: 1.04,\n      defense_mult: 1.04,\n      dexterity_mult: 1.04,\n      agility_mult: 1.04,\n      bladeburner_stamina_gain_mult: 1.02,\n      bladeburner_success_chance_mult: 1.03,\n      isSpecial: true,\n    });\n    BladeArmor.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(BladeArmor);\n\n    const BladeArmorPowerCells = new Augmentation({\n      name: AugmentationNames.BladeArmorPowerCells,\n      repCost: 1.875e4,\n      moneyCost: 2.75e9,\n      info:\n        \"Upgrades the BLADE-51b Tesla Armor with Ion Power Cells, which are capable of \" +\n        \"more efficiently storing and using power.\",\n      prereqs: [AugmentationNames.BladeArmor],\n      bladeburner_success_chance_mult: 1.05,\n      bladeburner_stamina_gain_mult: 1.02,\n      bladeburner_max_stamina_mult: 1.05,\n      isSpecial: true,\n    });\n    BladeArmorPowerCells.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(BladeArmorPowerCells);\n\n    const BladeArmorEnergyShielding = new Augmentation({\n      name: AugmentationNames.BladeArmorEnergyShielding,\n      repCost: 2.125e4,\n      moneyCost: 5.5e9,\n      info:\n        \"Upgrades the BLADE-51b Tesla Armor with a plasma energy propulsion system \" +\n        \"that is capable of projecting an energy shielding force field.\",\n      prereqs: [AugmentationNames.BladeArmor],\n      defense_mult: 1.05,\n      bladeburner_success_chance_mult: 1.06,\n      isSpecial: true,\n    });\n    BladeArmorEnergyShielding.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(BladeArmorEnergyShielding);\n\n    const BladeArmorUnibeam = new Augmentation({\n      name: AugmentationNames.BladeArmorUnibeam,\n      repCost: 3.125e4,\n      moneyCost: 1.65e10,\n      info:\n        \"Upgrades the BLADE-51b Tesla Armor with a concentrated deuterium-fluoride laser \" +\n        \"weapon. It's precision and accuracy makes it useful for quickly neutralizing \" +\n        \"threats while keeping casualties to a minimum.\",\n      prereqs: [AugmentationNames.BladeArmor],\n      bladeburner_success_chance_mult: 1.08,\n      isSpecial: true,\n    });\n    BladeArmorUnibeam.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(BladeArmorUnibeam);\n\n    const BladeArmorOmnibeam = new Augmentation({\n      name: AugmentationNames.BladeArmorOmnibeam,\n      repCost: 6.25e4,\n      moneyCost: 2.75e10,\n      info:\n        \"Upgrades the BLADE-51b Tesla Armor Unibeam augmentation to use a \" +\n        \"multiple-fiber system. This upgraded weapon uses multiple fiber laser \" +\n        \"modules that combine together to form a single, more powerful beam of up to \" +\n        \"2000MW.\",\n      prereqs: [AugmentationNames.BladeArmorUnibeam],\n      bladeburner_success_chance_mult: 1.1,\n      isSpecial: true,\n    });\n    BladeArmorOmnibeam.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(BladeArmorOmnibeam);\n\n    const BladeArmorIPU = new Augmentation({\n      name: AugmentationNames.BladeArmorIPU,\n      repCost: 1.5e4,\n      moneyCost: 1.1e9,\n      info:\n        \"Upgrades the BLADE-51b Tesla Armor with an AI Information Processing \" +\n        \"Unit that was specially designed to analyze Synthoid related data and \" +\n        \"information.\",\n      prereqs: [AugmentationNames.BladeArmor],\n      bladeburner_analysis_mult: 1.15,\n      bladeburner_success_chance_mult: 1.02,\n      isSpecial: true,\n    });\n    BladeArmorIPU.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(BladeArmorIPU);\n\n    const BladesSimulacrum = new Augmentation({\n      name: AugmentationNames.BladesSimulacrum,\n      repCost: 1.25e3,\n      moneyCost: 1.5e11,\n      info:\n        \"A highly-advanced matter phase-shifter module that is embedded \" +\n        \"in the brainstem and cerebellum. This augmentation allows \" +\n        \"the user to project and control a holographic simulacrum within an \" +\n        \"extremely large radius. These specially-modified holograms were specifically \" +\n        \"weaponized by Bladeburner units to be used against Synthoids.\",\n      stats: (\n        <>\n          This augmentation allows you to perform Bladeburner actions and other actions (such as working, commiting\n          crimes, etc.) at the same time.\n        </>\n      ),\n      isSpecial: true,\n    });\n    BladesSimulacrum.addToFactions([BladeburnersFactionName]);\n    resetAugmentation(BladesSimulacrum);\n  }\n\n  // Update costs based on how many have been purchased\n  mult = Math.pow(\n    CONSTANTS.MultipleAugMultiplier * [1, 0.96, 0.94, 0.93][SourceFileFlags[11]],\n    Player.queuedAugmentations.length,\n  );\n  for (const name in Augmentations) {\n    if (Augmentations.hasOwnProperty(name)) {\n      Augmentations[name].baseCost *= mult;\n    }\n  }\n\n  Player.reapplyAllAugmentations();\n}\n\n//Resets an Augmentation during (re-initizliation)\nfunction resetAugmentation(newAugObject: Augmentation): void {\n  if (!(newAugObject instanceof Augmentation)) {\n    throw new Error(\"Invalid argument 'newAugObject' passed into resetAugmentation\");\n  }\n  const name = newAugObject.name;\n  if (augmentationExists(name)) {\n    delete Augmentations[name];\n  }\n  AddToAugmentations(newAugObject);\n}\n\nfunction applyAugmentation(aug: IPlayerOwnedAugmentation, reapply = false): void {\n  Augmentations[aug.name].owned = true;\n\n  const augObj = Augmentations[aug.name];\n\n  // Apply multipliers\n  for (const mult in augObj.mults) {\n    const v = Player.getMult(mult) * augObj.mults[mult];\n    Player.setMult(mult, v);\n  }\n\n  // Special logic for NeuroFlux Governor\n  if (aug.name === AugmentationNames.NeuroFluxGovernor) {\n    if (!reapply) {\n      Augmentations[aug.name].level = aug.level;\n      for (let i = 0; i < Player.augmentations.length; ++i) {\n        if (Player.augmentations[i].name == AugmentationNames.NeuroFluxGovernor) {\n          Player.augmentations[i].level = aug.level;\n          return;\n          // break;\n        }\n      }\n    }\n  }\n\n  // Push onto Player's Augmentation list\n  if (!reapply) {\n    const ownedAug = new PlayerOwnedAugmentation(aug.name);\n    Player.augmentations.push(ownedAug);\n  }\n}\n\nfunction installAugmentations(): boolean {\n  if (Player.queuedAugmentations.length == 0) {\n    dialogBoxCreate(\"You have not purchased any Augmentations to install!\");\n    return false;\n  }\n  let augmentationList = \"\";\n  let nfgIndex = -1;\n  for (let i = Player.queuedAugmentations.length - 1; i >= 0; i--) {\n    if (Player.queuedAugmentations[i].name === AugmentationNames.NeuroFluxGovernor) {\n      nfgIndex = i;\n      break;\n    }\n  }\n  for (let i = 0; i < Player.queuedAugmentations.length; ++i) {\n    const ownedAug = Player.queuedAugmentations[i];\n    const aug = Augmentations[ownedAug.name];\n    if (aug == null) {\n      console.error(`Invalid augmentation: ${ownedAug.name}`);\n      continue;\n    }\n\n    applyAugmentation(Player.queuedAugmentations[i]);\n    if (ownedAug.name === AugmentationNames.NeuroFluxGovernor && i !== nfgIndex) continue;\n\n    let level = \"\";\n    if (ownedAug.name === AugmentationNames.NeuroFluxGovernor) {\n      level = ` - ${ownedAug.level}`;\n    }\n    augmentationList += aug.name + level + \"<br>\";\n  }\n  Player.queuedAugmentations = [];\n  dialogBoxCreate(\n    \"You slowly drift to sleep as scientists put you under in order \" +\n      \"to install the following Augmentations:<br>\" +\n      augmentationList +\n      \"<br>You wake up in your home...you feel different...\",\n  );\n  prestigeAugmentation();\n  return true;\n}\n\nfunction augmentationExists(name: string): boolean {\n  return Augmentations.hasOwnProperty(name);\n}\n\nexport function isRepeatableAug(aug: Augmentation): boolean {\n  const augName = aug instanceof Augmentation ? aug.name : aug;\n\n  if (augName === AugmentationNames.NeuroFluxGovernor) {\n    return true;\n  }\n\n  return false;\n}\n\nexport { installAugmentations, initAugmentations, applyAugmentation, augmentationExists };\n","import { CONSTANTS } from \"./Constants\";\nimport { Player } from \"./Player\";\n\nimport { dialogBoxCreate } from \"./ui/React/DialogBox\";\nimport { formatNumber } from \"./utils/StringHelperFunctions\";\nimport { Reputation } from \"./ui/React/Reputation\";\n\nimport { addOffset } from \"./utils/helpers/addOffset\";\nimport { getRandomInt } from \"./utils/helpers/getRandomInt\";\nimport { isString } from \"./utils/helpers/isString\";\n\nimport { clearEventListeners } from \"./ui/uiHelpers/clearEventListeners\";\nimport { Router } from \"./ui/GameRoot\";\n\n// For some reason `jsplumb` needs to be imported exactly like this,\n// lowercase p, and later in the code used as `jsPlumb` uppercase P. wtf.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport jsplumb from \"jsplumb\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nlet inMission = false; // Flag to denote whether a mission is running\nlet currMission = null;\nfunction setInMission(bool, mission) {\n  inMission = bool;\n  if (bool) {\n    currMission = mission;\n  } else {\n    currMission = null;\n  }\n}\n\n// Keyboard shortcuts\n$(document).keydown(function (e) {\n  if (inMission && currMission && currMission.selectedNode.length != 0) {\n    switch (e.keyCode) {\n      case 65: // a for Attack\n        currMission.actionButtons[0].click();\n        break;\n      case 83: // s for Scan\n        currMission.actionButtons[1].click();\n        break;\n      case 87: // w for Weaken\n        currMission.actionButtons[2].click();\n        break;\n      case 70: // f for Fortify\n        currMission.actionButtons[3].click();\n        break;\n      case 82: // r for Overflow\n        currMission.actionButtons[4].click();\n        break;\n      case 68: // d for Detach connection\n        currMission.actionButtons[5].click();\n        break;\n      default:\n        break;\n    }\n  }\n});\n\nlet NodeTypes = {\n  Core: \"CPU Core Node\", // All actions available\n  Firewall: \"Firewall Node\", // No actions available\n  Database: \"Database Node\", // No actions available\n  Spam: \"Spam Node\", // No actions Available\n  Transfer: \"Transfer Node\", // Can Weaken, Scan, Fortify and Overflow\n  Shield: \"Shield Node\", // Can Fortify\n};\n\nlet NodeActions = {\n  Attack: \"Attacking\", // Damaged based on attack stat + hacking level + opp def\n  Scan: \"Scanning\", // -Def for target, affected by attack and hacking level\n  Weaken: \"Weakening\", // -Attack for target, affected by attack and hacking level\n  Fortify: \"Fortifying\", // +Defense for Node, affected by hacking level\n  Overflow: \"Overflowing\", // +Attack but -Defense for Node, affected by hacking level\n};\n\nfunction Node(type, stats) {\n  this.type = type;\n  this.atk = stats.atk ? stats.atk : 0;\n  this.def = stats.def ? stats.def : 0;\n  this.hp = stats.hp ? stats.hp : 0;\n  this.maxhp = this.hp;\n  this.plyrCtrl = false;\n  this.enmyCtrl = false;\n  this.pos = [0, 0]; // x, y\n  this.el = null; // Holds the Node's DOM element\n  this.action = null;\n  this.targetedCount = 0; // Count of how many connections this node is the target of\n\n  /**\n   * Holds the JsPlumb Connection object for this Node, where this Node is the Source (since each Node\n   * can only have 1 outgoing Connection)\n   */\n  this.conn = null;\n}\n\nNode.prototype.setPosition = function (x, y) {\n  this.pos = [x, y];\n};\n\nNode.prototype.setControlledByPlayer = function () {\n  this.plyrCtrl = true;\n  this.enmyCtrl = false;\n  if (this.el) {\n    this.el.classList.remove(\"hack-mission-enemy-node\");\n    this.el.classList.add(\"hack-mission-player-node\");\n  }\n};\n\nNode.prototype.setControlledByEnemy = function () {\n  this.plyrCtrl = false;\n  this.enmyCtrl = true;\n  if (this.el) {\n    this.el.classList.remove(\"hack-mission-player-node\");\n    this.el.classList.add(\"hack-mission-enemy-node\");\n  }\n};\n\n// Sets this node to be the active node\nNode.prototype.select = function (actionButtons) {\n  if (this.enmyCtrl) {\n    return;\n  }\n  this.el.classList.add(\"hack-mission-player-node-active\");\n\n  // Make all buttons inactive\n  for (var i = 0; i < actionButtons.length; ++i) {\n    actionButtons[i].classList.remove(\"a-link-button\");\n    actionButtons[i].classList.add(\"a-link-button-inactive\");\n  }\n\n  switch (this.type) {\n    case NodeTypes.Core:\n      // All buttons active\n      for (var i = 0; i < actionButtons.length; ++i) {\n        actionButtons[i].classList.remove(\"a-link-button-inactive\");\n        actionButtons[i].classList.add(\"a-link-button\");\n      }\n      break;\n    case NodeTypes.Transfer:\n      actionButtons[1].classList.remove(\"a-link-button-inactive\");\n      actionButtons[1].classList.add(\"a-link-button\");\n      actionButtons[2].classList.remove(\"a-link-button-inactive\");\n      actionButtons[2].classList.add(\"a-link-button\");\n      actionButtons[3].classList.remove(\"a-link-button-inactive\");\n      actionButtons[3].classList.add(\"a-link-button\");\n      actionButtons[4].classList.remove(\"a-link-button-inactive\");\n      actionButtons[4].classList.add(\"a-link-button\");\n      actionButtons[5].classList.remove(\"a-link-button-inactive\");\n      actionButtons[5].classList.add(\"a-link-button\");\n      break;\n    case NodeTypes.Shield:\n    case NodeTypes.Firewall:\n      actionButtons[3].classList.remove(\"a-link-button-inactive\");\n      actionButtons[3].classList.add(\"a-link-button\");\n      break;\n    default:\n      break;\n  }\n};\n\nNode.prototype.deselect = function (actionButtons) {\n  this.el.classList.remove(\"hack-mission-player-node-active\");\n  for (var i = 0; i < actionButtons.length; ++i) {\n    actionButtons[i].classList.remove(\"a-link-button\");\n    actionButtons[i].classList.add(\"a-link-button-inactive\");\n  }\n};\n\nNode.prototype.untarget = function () {\n  if (this.targetedCount === 0) {\n    console.warn(`Node ${this.el.id} is being 'untargeted' when it has no target count`);\n    return;\n  }\n  --this.targetedCount;\n};\n\n/**\n * Hacking mission instance\n * @param rep {number} How much reputation the player has for the faction\n * @param fac {Faction} Faction for which this mission is being conducted\n */\nfunction HackingMission(rep, fac) {\n  this.faction = fac;\n\n  this.started = false;\n  this.time = 180000; // 5 minutes to start, milliseconds\n\n  this.playerCores = [];\n  this.playerNodes = []; // Non-core nodes\n  this.playerAtk = 0;\n  this.playerDef = 0;\n\n  this.enemyCores = [];\n  this.enemyDatabases = [];\n  this.enemyNodes = []; // Non-core nodes\n  this.enemyAtk = 0;\n  this.enemyDef = 0;\n\n  this.miscNodes = [];\n\n  this.selectedNode = []; // Which of the player's nodes are currently selected\n\n  this.actionButtons = []; // DOM buttons for actions\n\n  this.availablePositions = [];\n  for (var r = 0; r < 8; ++r) {\n    for (var c = 0; c < 8; ++c) {\n      this.availablePositions.push([r, c]);\n    }\n  }\n\n  this.map = [];\n  for (var i = 0; i < 8; ++i) {\n    this.map.push([null, null, null, null, null, null, null, null]);\n  }\n\n  this.jsplumbinstance = null;\n\n  this.difficulty = rep / CONSTANTS.HackingMissionRepToDiffConversion + 1;\n  this.reward = 250 + rep / CONSTANTS.HackingMissionRepToRewardConversion;\n}\n\nHackingMission.prototype.init = function () {\n  // Create Header DOM\n  this.createPageDom();\n\n  // Create player starting nodes\n  var home = Player.getHomeComputer();\n  for (var i = 0; i < home.cpuCores; ++i) {\n    var stats = {\n      atk: Player.hacking_skill / 7.5 + 30,\n      def: Player.hacking_skill / 20,\n      hp: Player.hacking_skill / 4,\n    };\n    this.playerCores.push(new Node(NodeTypes.Core, stats));\n    this.playerCores[i].setControlledByPlayer();\n    this.setNodePosition(this.playerCores[i], i, 0);\n    this.removeAvailablePosition(i, 0);\n  }\n\n  // Randomly generate enemy nodes (CPU and Firewall) based on difficulty\n  var numNodes = Math.min(8, Math.max(1, Math.round(this.difficulty / 4)));\n  var numFirewalls = Math.min(20, getRandomInt(Math.round(this.difficulty / 3), Math.round(this.difficulty / 3) + 1));\n  var numDatabases = Math.min(10, getRandomInt(1, Math.round(this.difficulty / 3) + 1));\n  var totalNodes = numNodes + numFirewalls + numDatabases;\n  var xlimit = 7 - Math.floor(totalNodes / 8);\n  var randMult = addOffset(0.8 + this.difficulty / 5, 10);\n  for (var i = 0; i < numNodes; ++i) {\n    var stats = {\n      atk: randMult * getRandomInt(80, 86),\n      def: randMult * getRandomInt(5, 10),\n      hp: randMult * getRandomInt(210, 230),\n    };\n    this.enemyCores.push(new Node(NodeTypes.Core, stats));\n    this.enemyCores[i].setControlledByEnemy();\n    this.setNodeRandomPosition(this.enemyCores[i], xlimit);\n  }\n  for (var i = 0; i < numFirewalls; ++i) {\n    var stats = {\n      atk: 0,\n      def: randMult * getRandomInt(10, 20),\n      hp: randMult * getRandomInt(275, 300),\n    };\n    this.enemyNodes.push(new Node(NodeTypes.Firewall, stats));\n    this.enemyNodes[i].setControlledByEnemy();\n    this.setNodeRandomPosition(this.enemyNodes[i], xlimit);\n  }\n  for (var i = 0; i < numDatabases; ++i) {\n    var stats = {\n      atk: 0,\n      def: randMult * getRandomInt(30, 55),\n      hp: randMult * getRandomInt(210, 275),\n    };\n    var node = new Node(NodeTypes.Database, stats);\n    node.setControlledByEnemy();\n    this.setNodeRandomPosition(node, xlimit);\n    this.enemyDatabases.push(node);\n  }\n  this.calculateDefenses();\n  this.calculateAttacks();\n  this.createMap();\n};\n\nHackingMission.prototype.createPageDom = function () {\n  var container = document.getElementById(\"mission-container\");\n\n  var favorMult = 1 + this.faction.favor / 100;\n  var gain = this.reward * Player.faction_rep_mult * favorMult;\n  var headerText = document.createElement(\"p\");\n  ReactDOM.render(\n    <>\n      You are about to start a hacking mission! You will gain {Reputation(gain)} faction reputation with{\" \"}\n      {this.faction.name} if you win. Click the 'Start' button to begin.\n    </>,\n    headerText,\n  );\n  headerText.style.display = \"block\";\n  headerText.classList.add(\"hack-mission-header-element\");\n  headerText.style.width = \"80%\";\n\n  var inGameGuideBtn = document.createElement(\"a\");\n  inGameGuideBtn.innerText = \"How to Play\";\n  inGameGuideBtn.classList.add(\"a-link-button\");\n  inGameGuideBtn.style.display = \"inline-block\";\n  inGameGuideBtn.classList.add(\"hack-mission-header-element\");\n  inGameGuideBtn.addEventListener(\"click\", function () {\n    dialogBoxCreate(CONSTANTS.HackingMissionHowToPlay);\n    return false;\n  });\n\n  // Start button will get replaced with forfeit when game is started\n  var startBtn = document.createElement(\"a\");\n  startBtn.innerHTML = \"Start\";\n  startBtn.setAttribute(\"id\", \"hack-mission-start-btn\");\n  startBtn.classList.add(\"a-link-button\");\n  startBtn.classList.add(\"hack-mission-header-element\");\n  startBtn.style.display = \"inline-block\";\n  startBtn.addEventListener(\"click\", () => {\n    this.start();\n    return false;\n  });\n\n  var forfeitMission = document.createElement(\"a\");\n  forfeitMission.innerHTML = \"Forfeit Mission (Exit)\";\n  forfeitMission.classList.add(\"a-link-button\");\n  forfeitMission.classList.add(\"hack-mission-header-element\");\n  forfeitMission.style.display = \"inline-block\";\n  forfeitMission.addEventListener(\"click\", () => {\n    this.finishMission(false);\n    return false;\n  });\n\n  var timer = document.createElement(\"p\");\n  timer.setAttribute(\"id\", \"hacking-mission-timer\");\n  timer.style.display = \"inline-block\";\n  timer.style.margin = \"6px\";\n\n  // Create Action Buttons (Attack/Scan/Weaken/ etc...)\n  var actionsContainer = document.createElement(\"span\");\n  actionsContainer.style.display = \"block\";\n  actionsContainer.classList.add(\"hack-mission-action-buttons-container\");\n  for (var i = 0; i < 6; ++i) {\n    this.actionButtons.push(document.createElement(\"a\"));\n    this.actionButtons[i].style.display = \"inline-block\";\n    this.actionButtons[i].classList.add(\"a-link-button-inactive\"); // Disabled at start\n    this.actionButtons[i].classList.add(\"tooltip\"); // Disabled at start\n    this.actionButtons[i].classList.add(\"hack-mission-header-element\");\n    actionsContainer.appendChild(this.actionButtons[i]);\n  }\n  this.actionButtons[0].innerText = \"Attack(a)\";\n  var atkTooltip = document.createElement(\"span\");\n  atkTooltip.classList.add(\"tooltiptexthigh\");\n  atkTooltip.innerText =\n    \"Lowers the targeted node's HP. The effectiveness of this depends on \" +\n    \"this node's Attack level, your hacking level, and the opponent's defense level.\";\n  this.actionButtons[0].appendChild(atkTooltip);\n  this.actionButtons[1].innerText = \"Scan(s)\";\n  var scanTooltip = document.createElement(\"span\");\n  scanTooltip.classList.add(\"tooltiptexthigh\");\n  scanTooltip.innerText =\n    \"Lowers the targeted node's defense. The effectiveness of this depends on \" +\n    \"this node's Attack level, your hacking level, and the opponent's defense level.\";\n  this.actionButtons[1].appendChild(scanTooltip);\n  this.actionButtons[2].innerText = \"Weaken(w)\";\n  var WeakenTooltip = document.createElement(\"span\");\n  WeakenTooltip.classList.add(\"tooltiptexthigh\");\n  WeakenTooltip.innerText =\n    \"Lowers the targeted node's attack. The effectiveness of this depends on \" +\n    \"this node's Attack level, your hacking level, and the opponent's defense level.\";\n  this.actionButtons[2].appendChild(WeakenTooltip);\n  this.actionButtons[3].innerText = \"Fortify(f)\";\n  var fortifyTooltip = document.createElement(\"span\");\n  fortifyTooltip.classList.add(\"tooltiptexthigh\");\n  fortifyTooltip.innerText =\n    \"Raises this node's Defense level. The effectiveness of this depends on \" + \"your hacking level\";\n  this.actionButtons[3].appendChild(fortifyTooltip);\n  this.actionButtons[4].innerText = \"Overflow(r)\";\n  var overflowTooltip = document.createElement(\"span\");\n  overflowTooltip.classList.add(\"tooltiptexthigh\");\n  overflowTooltip.innerText =\n    \"Raises this node's Attack level but lowers its Defense level. The effectiveness \" +\n    \"of this depends on your hacking level.\";\n  this.actionButtons[4].appendChild(overflowTooltip);\n  this.actionButtons[5].innerText = \"Drop Connection(d)\";\n  var dropconnTooltip = document.createElement(\"span\");\n  dropconnTooltip.classList.add(\"tooltiptexthigh\");\n  dropconnTooltip.innerText =\n    \"Removes this Node's current connection to some target Node, if it has one. This can \" +\n    \"also be done by simply clicking the white connection line.\";\n  this.actionButtons[5].appendChild(dropconnTooltip);\n\n  // Player/enemy defense displays will be in action container\n  var playerStats = document.createElement(\"p\");\n  var enemyStats = document.createElement(\"p\");\n  playerStats.style.display = \"inline-block\";\n  enemyStats.style.display = \"inline-block\";\n  playerStats.style.color = \"#00ccff\";\n  enemyStats.style.color = \"red\";\n  playerStats.style.margin = \"4px\";\n  enemyStats.style.margin = \"4px\";\n  playerStats.setAttribute(\"id\", \"hacking-mission-player-stats\");\n  enemyStats.setAttribute(\"id\", \"hacking-mission-enemy-stats\");\n  actionsContainer.appendChild(playerStats);\n  actionsContainer.appendChild(enemyStats);\n\n  // Set Action Button event listeners\n  this.actionButtons[0].addEventListener(\"click\", () => {\n    if (!(this.selectedNode.length > 0)) {\n      console.error(\"Pressing Action button without selected node\");\n      return;\n    }\n    if (this.selectedNode[0].type !== NodeTypes.Core) {\n      return;\n    }\n    this.setActionButtonsActive(this.selectedNode[0].type);\n    this.setActionButton(NodeActions.Attack, false); // Set attack button inactive\n    this.selectedNode.forEach(function (node) {\n      node.action = NodeActions.Attack;\n    });\n  });\n\n  this.actionButtons[1].addEventListener(\"click\", () => {\n    if (!(this.selectedNode.length > 0)) {\n      console.error(\"Pressing Action button without selected node\");\n      return;\n    }\n    var nodeType = this.selectedNode[0].type; // In a multiselect, every Node will have the same type\n    if (nodeType !== NodeTypes.Core && nodeType !== NodeTypes.Transfer) {\n      return;\n    }\n    this.setActionButtonsActive(nodeType);\n    this.setActionButton(NodeActions.Scan, false); // Set scan button inactive\n    this.selectedNode.forEach(function (node) {\n      node.action = NodeActions.Scan;\n    });\n  });\n\n  this.actionButtons[2].addEventListener(\"click\", () => {\n    if (!(this.selectedNode.length > 0)) {\n      console.error(\"Pressing Action button without selected node\");\n      return;\n    }\n    var nodeType = this.selectedNode[0].type; // In a multiselect, every Node will have the same type\n    if (nodeType !== NodeTypes.Core && nodeType !== NodeTypes.Transfer) {\n      return;\n    }\n    this.setActionButtonsActive(nodeType);\n    this.setActionButton(NodeActions.Weaken, false); // Set Weaken button inactive\n    this.selectedNode.forEach(function (node) {\n      node.action = NodeActions.Weaken;\n    });\n  });\n\n  this.actionButtons[3].addEventListener(\"click\", () => {\n    if (!(this.selectedNode.length > 0)) {\n      console.error(\"Pressing Action button without selected node\");\n      return;\n    }\n    this.setActionButtonsActive(this.selectedNode[0].type);\n    this.setActionButton(NodeActions.Fortify, false); // Set Fortify button inactive\n    this.selectedNode.forEach(function (node) {\n      node.action = NodeActions.Fortify;\n    });\n  });\n\n  this.actionButtons[4].addEventListener(\"click\", () => {\n    if (!(this.selectedNode.length > 0)) {\n      console.error(\"Pressing Action button without selected node\");\n      return;\n    }\n    var nodeType = this.selectedNode[0].type;\n    if (nodeType !== NodeTypes.Core && nodeType !== NodeTypes.Transfer) {\n      return;\n    }\n    this.setActionButtonsActive(nodeType);\n    this.setActionButton(NodeActions.Overflow, false); // Set Overflow button inactive\n    this.selectedNode.forEach(function (node) {\n      node.action = NodeActions.Overflow;\n    });\n  });\n\n  this.actionButtons[5].addEventListener(\"click\", () => {\n    if (!(this.selectedNode.length > 0)) {\n      console.error(\"Pressing Action button without selected node\");\n      return;\n    }\n    this.selectedNode.forEach(function (node) {\n      if (node.conn) {\n        var endpoints = node.conn.endpoints;\n        endpoints[0].detachFrom(endpoints[1]);\n      }\n      node.action = NodeActions.Fortify;\n    });\n  });\n\n  var timeDisplay = document.createElement(\"p\");\n\n  container.appendChild(headerText);\n  container.appendChild(inGameGuideBtn);\n  container.appendChild(startBtn);\n  container.appendChild(forfeitMission);\n  container.appendChild(timer);\n  container.appendChild(actionsContainer);\n  container.appendChild(timeDisplay);\n};\n\nHackingMission.prototype.setActionButtonsInactive = function () {\n  for (var i = 0; i < this.actionButtons.length; ++i) {\n    this.actionButtons[i].classList.remove(\"a-link-button\");\n    this.actionButtons[i].classList.add(\"a-link-button-inactive\");\n  }\n};\n\nHackingMission.prototype.setActionButtonsActive = function (nodeType = null) {\n  for (var i = 0; i < this.actionButtons.length; ++i) {\n    this.actionButtons[i].classList.add(\"a-link-button\");\n    this.actionButtons[i].classList.remove(\"a-link-button-inactive\");\n  }\n\n  /**\n   * For Transfer, FireWall and Shield Nodes, certain buttons should always be disabled\n   * 0 = Attack, 1 = Scan, 2 = Weaken, 3 = Fortify, 4 = overflow, 5 = Drop conn\n   */\n  if (nodeType) {\n    switch (nodeType) {\n      case NodeTypes.Firewall:\n      case NodeTypes.Shield:\n        this.actionButtons[0].classList.remove(\"a-link-button\");\n        this.actionButtons[0].classList.add(\"a-link-button-inactive\");\n        this.actionButtons[1].classList.remove(\"a-link-button\");\n        this.actionButtons[1].classList.add(\"a-link-button-inactive\");\n        this.actionButtons[2].classList.remove(\"a-link-button\");\n        this.actionButtons[2].classList.add(\"a-link-button-inactive\");\n        this.actionButtons[4].classList.remove(\"a-link-button\");\n        this.actionButtons[4].classList.add(\"a-link-button-inactive\");\n        this.actionButtons[5].classList.remove(\"a-link-button\");\n        this.actionButtons[5].classList.add(\"a-link-button-inactive\");\n        break;\n      case NodeTypes.Transfer:\n        this.actionButtons[0].classList.remove(\"a-link-button\");\n        this.actionButtons[0].classList.add(\"a-link-button-inactive\");\n        break;\n      default:\n        break;\n    }\n  }\n};\n\n// True for active, false for inactive\nHackingMission.prototype.setActionButton = function (i, active = true) {\n  if (isString(i)) {\n    switch (i) {\n      case NodeActions.Attack:\n        i = 0;\n        break;\n      case NodeActions.Scan:\n        i = 1;\n        break;\n      case NodeActions.Weaken:\n        i = 2;\n        break;\n      case NodeActions.Fortify:\n        i = 3;\n        break;\n      case NodeActions.Overflow:\n      default:\n        i = 4;\n        break;\n    }\n  }\n  if (active) {\n    this.actionButtons[i].classList.remove(\"a-link-button-inactive\");\n    this.actionButtons[i].classList.add(\"a-link-button\");\n  } else {\n    this.actionButtons[i].classList.remove(\"a-link-button\");\n    this.actionButtons[i].classList.add(\"a-link-button-inactive\");\n  }\n};\n\nHackingMission.prototype.calculateAttacks = function () {\n  var total = 0;\n  for (var i = 0; i < this.playerCores.length; ++i) {\n    total += this.playerCores[i].atk;\n  }\n  for (var i = 0; i < this.playerNodes.length; ++i) {\n    total += this.playerNodes[i].atk;\n  }\n  this.playerAtk = total;\n  document.getElementById(\"hacking-mission-player-stats\").innerHTML =\n    \"Player Attack: \" + formatNumber(this.playerAtk, 1) + \"<br>\" + \"Player Defense: \" + formatNumber(this.playerDef, 1);\n  total = 0;\n  for (var i = 0; i < this.enemyCores.length; ++i) {\n    total += this.enemyCores[i].atk;\n  }\n  for (var i = 0; i < this.enemyDatabases.length; ++i) {\n    total += this.enemyDatabases[i].atk;\n  }\n  for (var i = 0; i < this.enemyNodes.length; ++i) {\n    total += this.enemyNodes[i].atk;\n  }\n  this.enemyAtk = total;\n  document.getElementById(\"hacking-mission-enemy-stats\").innerHTML =\n    \"Enemy Attack: \" + formatNumber(this.enemyAtk, 1) + \"<br>\" + \"Enemy Defense: \" + formatNumber(this.enemyDef, 1);\n};\n\nHackingMission.prototype.calculateDefenses = function () {\n  var total = 0;\n  for (var i = 0; i < this.playerCores.length; ++i) {\n    total += this.playerCores[i].def;\n  }\n  for (var i = 0; i < this.playerNodes.length; ++i) {\n    total += this.playerNodes[i].def;\n  }\n  this.playerDef = total;\n  document.getElementById(\"hacking-mission-player-stats\").innerHTML =\n    \"Player Attack: \" + formatNumber(this.playerAtk, 1) + \"<br>\" + \"Player Defense: \" + formatNumber(this.playerDef, 1);\n  total = 0;\n  for (var i = 0; i < this.enemyCores.length; ++i) {\n    total += this.enemyCores[i].def;\n  }\n  for (var i = 0; i < this.enemyDatabases.length; ++i) {\n    total += this.enemyDatabases[i].def;\n  }\n  for (var i = 0; i < this.enemyNodes.length; ++i) {\n    total += this.enemyNodes[i].def;\n  }\n  this.enemyDef = total;\n  document.getElementById(\"hacking-mission-enemy-stats\").innerHTML =\n    \"Enemy Attack: \" + formatNumber(this.enemyAtk, 1) + \"<br>\" + \"Enemy Defense: \" + formatNumber(this.enemyDef, 1);\n};\n\nHackingMission.prototype.removeAvailablePosition = function (x, y) {\n  for (var i = 0; i < this.availablePositions.length; ++i) {\n    if (this.availablePositions[i][0] === x && this.availablePositions[i][1] === y) {\n      this.availablePositions.splice(i, 1);\n      return;\n    }\n  }\n  console.warn(`removeAvailablePosition() did not remove ${x}, ${y}`);\n};\n\nHackingMission.prototype.setNodePosition = function (nodeObj, x, y) {\n  if (!(nodeObj instanceof Node)) {\n    console.warn(\"Non-Node object passed into setNodePOsition\");\n    return;\n  }\n  if (isNaN(x) || isNaN(y)) {\n    console.error(`Invalid values (${x}, ${y}) passed as (x, y) for setNodePosition`);\n    return;\n  }\n  nodeObj.pos = [x, y];\n  this.map[x][y] = nodeObj;\n};\n\nHackingMission.prototype.setNodeRandomPosition = function (nodeObj, xlimit = 0) {\n  var i = getRandomInt(0, this.availablePositions.length - 1);\n  if (this.availablePositions[i][1] < xlimit) {\n    // Recurse if not within limit\n    return this.setNodeRandomPosition(nodeObj, xlimit);\n  }\n  var pos = this.availablePositions.splice(i, 1);\n  pos = pos[0];\n  this.setNodePosition(nodeObj, pos[0], pos[1]);\n};\n\nHackingMission.prototype.createMap = function () {\n  // Use a grid\n  var map = document.createElement(\"div\");\n  map.classList.add(\"hack-mission-grid\");\n  map.setAttribute(\"id\", \"hacking-mission-map\");\n  document.getElementById(\"mission-container\").appendChild(map);\n\n  // Create random Nodes for every space in the map that\n  // hasn't been filled yet. The stats of each Node will be based on\n  // the player/enemy attack\n  var averageAttack = (this.playerAtk + this.enemyAtk) / 2;\n  for (var x = 0; x < 8; ++x) {\n    for (var y = 0; y < 8; ++y) {\n      if (!(this.map[x][y] instanceof Node)) {\n        var node,\n          type = getRandomInt(0, 2);\n        var randMult = addOffset(0.85 + this.difficulty / 2, 15);\n        switch (type) {\n          case 0: // Spam\n            var stats = {\n              atk: 0,\n              def: averageAttack * 1.1 + getRandomInt(15, 45),\n              hp: randMult * getRandomInt(200, 225),\n            };\n            node = new Node(NodeTypes.Spam, stats);\n            break;\n          case 1: // Transfer\n            var stats = {\n              atk: 0,\n              def: averageAttack * 1.1 + getRandomInt(15, 45),\n              hp: randMult * getRandomInt(250, 275),\n            };\n            node = new Node(NodeTypes.Transfer, stats);\n            break;\n          case 2: // Shield\n          default:\n            var stats = {\n              atk: 0,\n              def: averageAttack * 1.1 + getRandomInt(30, 70),\n              hp: randMult * getRandomInt(300, 320),\n            };\n            node = new Node(NodeTypes.Shield, stats);\n            break;\n        }\n        this.setNodePosition(node, x, y);\n        this.removeAvailablePosition(x, y);\n        this.miscNodes.push(node);\n      }\n    }\n  }\n\n  // Create DOM elements in order\n  for (var r = 0; r < 8; ++r) {\n    for (var c = 0; c < 8; ++c) {\n      this.createNodeDomElement(this.map[r][c]);\n    }\n  }\n\n  // Configure all Player CPUS\n  for (var i = 0; i < this.playerCores.length; ++i) {\n    this.configurePlayerNodeElement(this.playerCores[i].el);\n  }\n};\n\nHackingMission.prototype.createNodeDomElement = function (nodeObj) {\n  var nodeDiv = document.createElement(\"a\"),\n    txtEl = document.createElement(\"p\");\n  nodeObj.el = nodeDiv;\n\n  // Set the node element's id based on its coordinates\n  var id = \"hacking-mission-node-\" + nodeObj.pos[0] + \"-\" + nodeObj.pos[1];\n  nodeDiv.setAttribute(\"id\", id);\n  txtEl.setAttribute(\"id\", id + \"-txt\");\n\n  // Set node classes for owner\n  nodeDiv.classList.add(\"hack-mission-node\");\n  if (nodeObj.plyrCtrl) {\n    nodeDiv.classList.add(\"hack-mission-player-node\");\n  } else if (nodeObj.enmyCtrl) {\n    nodeDiv.classList.add(\"hack-mission-enemy-node\");\n  }\n\n  // Set node classes based on type\n  var txt;\n  switch (nodeObj.type) {\n    case NodeTypes.Core:\n      txt = \"CPU Core<br>\" + \"HP: \" + formatNumber(nodeObj.hp, 1);\n      nodeDiv.classList.add(\"hack-mission-cpu-node\");\n      break;\n    case NodeTypes.Firewall:\n      txt = \"Firewall<br>\" + \"HP: \" + formatNumber(nodeObj.hp, 1);\n      nodeDiv.classList.add(\"hack-mission-firewall-node\");\n      break;\n    case NodeTypes.Database:\n      txt = \"Database<br>\" + \"HP: \" + formatNumber(nodeObj.hp, 1);\n      nodeDiv.classList.add(\"hack-mission-database-node\");\n      break;\n    case NodeTypes.Spam:\n      txt = \"Spam<br>\" + \"HP: \" + formatNumber(nodeObj.hp, 1);\n      nodeDiv.classList.add(\"hack-mission-spam-node\");\n      break;\n    case NodeTypes.Transfer:\n      txt = \"Transfer<br>\" + \"HP: \" + formatNumber(nodeObj.hp, 1);\n      nodeDiv.classList.add(\"hack-mission-transfer-node\");\n      break;\n    case NodeTypes.Shield:\n    default:\n      txt = \"Shield<br>\" + \"HP: \" + formatNumber(nodeObj.hp, 1);\n      nodeDiv.classList.add(\"hack-mission-shield-node\");\n      break;\n  }\n\n  txt += \"<br>Atk: \" + formatNumber(nodeObj.atk, 1) + \"<br>Def: \" + formatNumber(nodeObj.def, 1);\n  txtEl.innerHTML = txt;\n\n  nodeDiv.appendChild(txtEl);\n  document.getElementById(\"hacking-mission-map\").appendChild(nodeDiv);\n};\n\nHackingMission.prototype.updateNodeDomElement = function (nodeObj) {\n  if (nodeObj.el == null) {\n    console.error(\"Calling updateNodeDomElement on a Node without an element\");\n    return;\n  }\n\n  let id = \"hacking-mission-node-\" + nodeObj.pos[0] + \"-\" + nodeObj.pos[1];\n  let txtEl = document.getElementById(id + \"-txt\");\n\n  // Set node classes based on type\n  let txt;\n  switch (nodeObj.type) {\n    case NodeTypes.Core:\n      txt = \"CPU Core<br>\" + \"HP: \" + formatNumber(nodeObj.hp, 1);\n      break;\n    case NodeTypes.Firewall:\n      txt = \"Firewall<br>\" + \"HP: \" + formatNumber(nodeObj.hp, 1);\n      break;\n    case NodeTypes.Database:\n      txt = \"Database<br>\" + \"HP: \" + formatNumber(nodeObj.hp, 1);\n      break;\n    case NodeTypes.Spam:\n      txt = \"Spam<br>\" + \"HP: \" + formatNumber(nodeObj.hp, 1);\n      break;\n    case NodeTypes.Transfer:\n      txt = \"Transfer<br>\" + \"HP: \" + formatNumber(nodeObj.hp, 1);\n      break;\n    case NodeTypes.Shield:\n    default:\n      txt = \"Shield<br>\" + \"HP: \" + formatNumber(nodeObj.hp, 1);\n      break;\n  }\n\n  txt += \"<br>Atk: \" + formatNumber(nodeObj.atk, 1) + \"<br>Def: \" + formatNumber(nodeObj.def, 1);\n  if (nodeObj.action) {\n    txt += \"<br>\" + nodeObj.action;\n  }\n  txtEl.innerHTML = txt;\n};\n\n/**\n * Gets a Node DOM elements corresponding Node object using its\n * element id. Function accepts either the DOM element object or the ID as\n * an argument\n */\nHackingMission.prototype.getNodeFromElement = function (el) {\n  var id;\n  if (isString(el)) {\n    id = el;\n  } else {\n    id = el.id;\n  }\n  id = id.replace(\"hacking-mission-node-\", \"\");\n  var res = id.split(\"-\");\n  if (res.length != 2) {\n    console.error(\"Parsing hacking mission node id. could not find coordinates\");\n    return null;\n  }\n  var x = res[0],\n    y = res[1];\n  if (isNaN(x) || isNaN(y) || x >= 8 || y >= 8 || x < 0 || y < 0) {\n    console.error(`Unexpected values (${x}, ${y}) for (x, y)`);\n    return null;\n  }\n  return this.map[x][y];\n};\n\nfunction selectNode(hackMissionInst, el) {\n  var nodeObj = hackMissionInst.getNodeFromElement(el);\n  if (nodeObj == null) {\n    console.error(\"Failed getting Node object\");\n  }\n  if (!nodeObj.plyrCtrl) {\n    return;\n  }\n\n  clearAllSelectedNodes(hackMissionInst);\n  nodeObj.select(hackMissionInst.actionButtons);\n  hackMissionInst.selectedNode.push(nodeObj);\n}\n\nfunction multiselectNode(hackMissionInst, el) {\n  var nodeObj = hackMissionInst.getNodeFromElement(el);\n  if (nodeObj == null) {\n    console.error(\"Failed getting Node Object in multiselectNode()\");\n  }\n  if (!nodeObj.plyrCtrl) {\n    return;\n  }\n\n  clearAllSelectedNodes(hackMissionInst);\n  var type = nodeObj.type;\n  if (type === NodeTypes.Core) {\n    hackMissionInst.playerCores.forEach(function (node) {\n      node.select(hackMissionInst.actionButtons);\n      hackMissionInst.selectedNode.push(node);\n    });\n  } else {\n    hackMissionInst.playerNodes.forEach(function (node) {\n      if (node.type === type) {\n        node.select(hackMissionInst.actionButtons);\n        hackMissionInst.selectedNode.push(node);\n      }\n    });\n  }\n}\n\nfunction clearAllSelectedNodes(hackMissionInst) {\n  if (hackMissionInst.selectedNode.length > 0) {\n    hackMissionInst.selectedNode.forEach(function (node) {\n      node.deselect(hackMissionInst.actionButtons);\n    });\n    hackMissionInst.selectedNode.length = 0;\n  }\n}\n\n/**\n * Configures a DOM element representing a player-owned node to\n * be selectable and actionable.\n * Note: Does NOT change its css class. This is handled by Node.setControlledBy...\n */\nHackingMission.prototype.configurePlayerNodeElement = function (el) {\n  var nodeObj = this.getNodeFromElement(el);\n  if (nodeObj == null) {\n    console.error(\"Failed getting Node object\");\n  }\n\n  // Add event listener\n  const selectNodeWrapper = () => {\n    selectNode(this, el);\n  };\n  el.addEventListener(\"click\", selectNodeWrapper);\n\n  const multiselectNodeWrapper = () => {\n    multiselectNode(this, el);\n  };\n  el.addEventListener(\"dblclick\", multiselectNodeWrapper);\n\n  if (el.firstChild) {\n    el.firstChild.addEventListener(\"click\", selectNodeWrapper);\n  }\n};\n\n/**\n * Configures a DOM element representing an enemy-node by removing\n * any event listeners\n */\nHackingMission.prototype.configureEnemyNodeElement = function (el) {\n  // Deselect node if it was the selected node\n  var nodeObj = this.getNodeFromElement(el);\n  for (var i = 0; i < this.selectedNode.length; ++i) {\n    if (this.selectedNode[i] == nodeObj) {\n      nodeObj.deselect(this.actionButtons);\n      this.selectedNode.splice(i, 1);\n      break;\n    }\n  }\n};\n\n/**\n * Returns bool indicating whether a node is reachable by player\n * by checking if any of the adjacent nodes are owned by the player\n */\nHackingMission.prototype.nodeReachable = function (node) {\n  var x = node.pos[0],\n    y = node.pos[1];\n  if (x > 0 && this.map[x - 1][y].plyrCtrl) {\n    return true;\n  }\n  if (x < 7 && this.map[x + 1][y].plyrCtrl) {\n    return true;\n  }\n  if (y > 0 && this.map[x][y - 1].plyrCtrl) {\n    return true;\n  }\n  if (y < 7 && this.map[x][y + 1].plyrCtrl) {\n    return true;\n  }\n  return false;\n};\n\nHackingMission.prototype.nodeReachableByEnemy = function (node) {\n  if (node == null) {\n    return false;\n  }\n  var x = node.pos[0],\n    y = node.pos[1];\n  if (x > 0 && this.map[x - 1][y].enmyCtrl) {\n    return true;\n  }\n  if (x < 7 && this.map[x + 1][y].enmyCtrl) {\n    return true;\n  }\n  if (y > 0 && this.map[x][y - 1].enmyCtrl) {\n    return true;\n  }\n  if (y < 7 && this.map[x][y + 1].enmyCtrl) {\n    return true;\n  }\n  return false;\n};\n\nHackingMission.prototype.start = function () {\n  this.started = true;\n  this.initJsPlumb();\n  var startBtn = clearEventListeners(\"hack-mission-start-btn\");\n  startBtn.classList.remove(\"a-link-button\");\n  startBtn.classList.add(\"a-link-button-inactive\");\n};\n\nHackingMission.prototype.initJsPlumb = function () {\n  var instance = jsPlumb.getInstance({\n    DragOptions: { cursor: \"pointer\", zIndex: 2000 },\n    PaintStyle: {\n      gradient: {\n        stops: [\n          [0, \"#FFFFFF\"],\n          [1, \"#FFFFFF\"],\n        ],\n      },\n      stroke: \"#FFFFFF\",\n      strokeWidth: 8,\n    },\n  });\n\n  this.jsplumbinstance = instance;\n\n  // All player cores are sources\n  for (var i = 0; i < this.playerCores.length; ++i) {\n    instance.makeSource(this.playerCores[i].el, {\n      deleteEndpointsOnEmpty: true,\n      maxConnections: 1,\n      anchor: \"Continuous\",\n      connector: \"Flowchart\",\n    });\n  }\n\n  // Everything else is a target\n  for (var i = 0; i < this.enemyCores.length; ++i) {\n    instance.makeTarget(this.enemyCores[i].el, {\n      maxConnections: -1,\n      anchor: \"Continuous\",\n      connector: \"Flowchart\",\n    });\n  }\n  for (var i = 0; i < this.enemyDatabases.length; ++i) {\n    instance.makeTarget(this.enemyDatabases[i].el, {\n      maxConnections: -1,\n      anchor: \"Continuous\",\n      connector: [\"Flowchart\"],\n    });\n  }\n  for (var i = 0; i < this.enemyNodes.length; ++i) {\n    instance.makeTarget(this.enemyNodes[i].el, {\n      maxConnections: -1,\n      anchor: \"Continuous\",\n      connector: \"Flowchart\",\n    });\n  }\n  for (var i = 0; i < this.miscNodes.length; ++i) {\n    instance.makeTarget(this.miscNodes[i].el, {\n      maxConnections: -1,\n      anchor: \"Continuous\",\n      connector: \"Flowchart\",\n    });\n  }\n\n  // Clicking a connection drops it\n  instance.bind(\"click\", (conn) => {\n    // Cannot drop enemy's connections\n    const sourceNode = this.getNodeFromElement(conn.source);\n    if (sourceNode.enmyCtrl) {\n      return;\n    }\n\n    var endpoints = conn.endpoints;\n    endpoints[0].detachFrom(endpoints[1]);\n  });\n\n  // Connection events\n  instance.bind(\"connection\", (info) => {\n    var targetNode = this.getNodeFromElement(info.target);\n\n    // Do not detach for enemy nodes\n    var thisNode = this.getNodeFromElement(info.source);\n    if (thisNode.enmyCtrl) {\n      return;\n    }\n\n    // If the node is not reachable, drop the connection\n    if (!this.nodeReachable(targetNode)) {\n      info.sourceEndpoint.detachFrom(info.targetEndpoint);\n      return;\n    }\n\n    var sourceNode = this.getNodeFromElement(info.source);\n    sourceNode.conn = info.connection;\n    var targetNode = this.getNodeFromElement(info.target);\n    ++targetNode.targetedCount;\n  });\n\n  // Detach Connection events\n  instance.bind(\"connectionDetached\", (info) => {\n    var sourceNode = this.getNodeFromElement(info.source);\n    sourceNode.conn = null;\n    var targetNode = this.getNodeFromElement(info.target);\n    targetNode.untarget();\n  });\n};\n\n// Drops all connections where the specified node is the source\nHackingMission.prototype.dropAllConnectionsFromNode = function (node) {\n  var allConns = this.jsplumbinstance.getAllConnections();\n  for (var i = allConns.length - 1; i >= 0; --i) {\n    if (allConns[i].source == node.el) {\n      allConns[i].endpoints[0].detachFrom(allConns[i].endpoints[1]);\n    }\n  }\n};\n\n// Drops all connections where the specified node is the target\nHackingMission.prototype.dropAllConnectionsToNode = function (node) {\n  var allConns = this.jsplumbinstance.getAllConnections();\n  for (var i = allConns.length - 1; i >= 0; --i) {\n    if (allConns[i].target == node.el) {\n      allConns[i].endpoints[0].detachFrom(allConns[i].endpoints[1]);\n    }\n  }\n  node.beingTargeted = false;\n};\n\nvar storedCycles = 0;\nHackingMission.prototype.process = function (numCycles = 1) {\n  if (!this.started) {\n    return;\n  }\n  storedCycles += numCycles;\n  if (storedCycles < 2) {\n    return;\n  } // Only process every 3 cycles minimum\n\n  var res = false;\n  // Process actions of all player nodes\n  this.playerCores.forEach((node) => {\n    res |= this.processNode(node, storedCycles);\n  });\n\n  this.playerNodes.forEach((node) => {\n    if (node.type === NodeTypes.Transfer || node.type === NodeTypes.Shield || node.type === NodeTypes.Firewall) {\n      res |= this.processNode(node, storedCycles);\n    }\n  });\n\n  // Process actions of all enemy nodes\n  this.enemyCores.forEach((node) => {\n    this.enemyAISelectAction(node);\n    res |= this.processNode(node, storedCycles);\n  });\n\n  this.enemyNodes.forEach((node) => {\n    if (node.type === NodeTypes.Transfer || node.type === NodeTypes.Shield || node.type === NodeTypes.Firewall) {\n      this.enemyAISelectAction(node);\n      res |= this.processNode(node, storedCycles);\n    }\n  });\n\n  // The hp of enemy databases increases slowly\n  this.enemyDatabases.forEach((node) => {\n    node.maxhp += 0.1 * storedCycles;\n    node.hp += 0.1 * storedCycles;\n  });\n\n  if (res) {\n    this.calculateAttacks();\n    this.calculateDefenses();\n  }\n\n  // Win if all enemy databases are conquered\n  if (this.enemyDatabases.length === 0) {\n    this.finishMission(true);\n    return;\n  }\n\n  // Lose if all your cores are gone\n  if (this.playerCores.length === 0) {\n    this.finishMission(false);\n    return;\n  }\n\n  // Defense/hp of misc nodes increases slowly over time\n  this.miscNodes.forEach((node) => {\n    node.def += 0.1 * storedCycles;\n    node.maxhp += 0.05 * storedCycles;\n    node.hp += 0.1 * storedCycles;\n    if (node.hp > node.maxhp) {\n      node.hp = node.maxhp;\n    }\n    this.updateNodeDomElement(node);\n  });\n\n  // Update timer and check if player lost\n  this.time -= storedCycles * CONSTANTS._idleSpeed;\n  if (this.time <= 0) {\n    this.finishMission(false);\n    return;\n  }\n  this.updateTimer();\n\n  storedCycles = 0;\n};\n\n// Returns a bool representing whether defenses need to be re-calculated\nHackingMission.prototype.processNode = function (nodeObj, numCycles = 1) {\n  if (nodeObj.action == null) {\n    return;\n  }\n\n  var targetNode = null,\n    def,\n    atk;\n  if (nodeObj.conn) {\n    if (nodeObj.conn.target != null) {\n      targetNode = this.getNodeFromElement(nodeObj.conn.target);\n    } else {\n      targetNode = this.getNodeFromElement(nodeObj.conn.targetId);\n    }\n\n    if (targetNode == null) {\n      // Player is in the middle of  dragging the connection,\n      // so the target node is null. Do nothing here\n    } else if (targetNode.plyrCtrl) {\n      def = this.playerDef;\n      atk = this.enemyAtk;\n    } else if (targetNode.enmyCtrl) {\n      def = this.enemyDef;\n      atk = this.playerAtk;\n    } else {\n      // Misc Node\n      def = targetNode.def;\n      nodeObj.plyrCtrl ? (atk = this.playerAtk) : (atk = this.enemyAtk);\n    }\n  }\n\n  // Calculations are per second, so divide everything by 5\n  var calcStats = false,\n    plyr = nodeObj.plyrCtrl;\n  var enmyHacking = this.difficulty * CONSTANTS.HackingMissionDifficultyToHacking;\n  switch (nodeObj.action) {\n    case NodeActions.Attack:\n      if (targetNode == null) {\n        break;\n      }\n      if (nodeObj.conn == null) {\n        break;\n      }\n      var dmg = this.calculateAttackDamage(atk, def, plyr ? Player.hacking_skill : enmyHacking);\n      targetNode.hp -= (dmg / 5) * numCycles;\n      break;\n    case NodeActions.Scan:\n      if (targetNode == null) {\n        break;\n      }\n      if (nodeObj.conn == null) {\n        break;\n      }\n      var eff = this.calculateScanEffect(atk, def, plyr ? Player.hacking_skill : enmyHacking);\n      targetNode.def -= (eff / 5) * numCycles;\n      calcStats = true;\n      break;\n    case NodeActions.Weaken:\n      if (targetNode == null) {\n        break;\n      }\n      if (nodeObj.conn == null) {\n        break;\n      }\n      var eff = this.calculateWeakenEffect(atk, def, plyr ? Player.hacking_skill : enmyHacking);\n      targetNode.atk -= (eff / 5) * numCycles;\n      calcStats = true;\n      break;\n    case NodeActions.Fortify:\n      var eff = this.calculateFortifyEffect(Player.hacking_skill);\n      nodeObj.def += (eff / 5) * numCycles;\n      calcStats = true;\n      break;\n    case NodeActions.Overflow:\n      var eff = this.calculateOverflowEffect(Player.hacking_skill);\n      if (nodeObj.def < eff) {\n        break;\n      }\n      nodeObj.def -= (eff / 5) * numCycles;\n      nodeObj.atk += (eff / 5) * numCycles;\n      calcStats = true;\n      break;\n    default:\n      console.error(`Invalid Node Action: ${nodeObj.action}`);\n      break;\n  }\n\n  // Stats can't go below 0\n  if (nodeObj.atk < 0) {\n    nodeObj.atk = 0;\n  }\n  if (nodeObj.def < 0) {\n    nodeObj.def = 0;\n  }\n  if (targetNode && targetNode.atk < 0) {\n    targetNode.atk = 0;\n  }\n  if (targetNode && targetNode.def < 0) {\n    targetNode.def = 0;\n  }\n\n  // Conquering a node\n  if (targetNode && targetNode.hp <= 0) {\n    var conqueredByPlayer = nodeObj.plyrCtrl;\n    targetNode.hp = targetNode.maxhp;\n    targetNode.action = null;\n    targetNode.conn = null;\n    if (this.selectedNode == targetNode) {\n      targetNode.deselect(this.actionButtons);\n    }\n\n    // The conquered node has its stats reduced\n    targetNode.atk /= 2;\n    targetNode.def /= 3.5;\n\n    // Flag for whether the target node was a misc node\n    var isMiscNode = !targetNode.plyrCtrl && !targetNode.enmyCtrl;\n\n    // Remove all connections from Node\n    this.dropAllConnectionsToNode(targetNode);\n    this.dropAllConnectionsFromNode(targetNode);\n\n    // Changes the css class and turn the node into a JsPlumb Source/Target\n    if (conqueredByPlayer) {\n      targetNode.setControlledByPlayer();\n      this.jsplumbinstance.unmakeTarget(targetNode.el);\n      this.jsplumbinstance.makeSource(targetNode.el, {\n        deleteEndpointsOnEmpty: true,\n        maxConnections: 1,\n        anchor: \"Continuous\",\n        connector: \"Flowchart\",\n      });\n    } else {\n      targetNode.setControlledByEnemy();\n      nodeObj.conn = null; // Clear connection\n      this.jsplumbinstance.unmakeSource(targetNode.el);\n      this.jsplumbinstance.makeTarget(targetNode.el, {\n        maxConnections: -1,\n        anchor: \"Continuous\",\n        connector: [\"Flowchart\"],\n      });\n    }\n\n    calcStats = true;\n\n    // Helper function to swap nodes between the respective enemyNodes/playerNodes arrays\n    function swapNodes(orig, dest, targetNode) {\n      for (var i = 0; i < orig.length; ++i) {\n        if (orig[i] == targetNode) {\n          var node = orig.splice(i, 1);\n          node = node[0];\n          dest.push(node);\n          break;\n        }\n      }\n    }\n\n    switch (targetNode.type) {\n      case NodeTypes.Core:\n        if (conqueredByPlayer) {\n          swapNodes(this.enemyCores, this.playerCores, targetNode);\n          this.configurePlayerNodeElement(targetNode.el);\n        } else {\n          swapNodes(this.playerCores, this.enemyCores, targetNode);\n          this.configureEnemyNodeElement(targetNode.el);\n        }\n        break;\n      case NodeTypes.Firewall:\n        if (conqueredByPlayer) {\n          swapNodes(this.enemyNodes, this.playerNodes, targetNode);\n        } else {\n          swapNodes(this.playerNodes, this.enemyNodes, targetNode);\n          this.configureEnemyNodeElement(targetNode.el);\n        }\n        break;\n      case NodeTypes.Database:\n        if (conqueredByPlayer) {\n          swapNodes(this.enemyDatabases, this.playerNodes, targetNode);\n        } else {\n          swapNodes(this.playerNodes, this.enemyDatabases, targetNode);\n        }\n        break;\n      case NodeTypes.Spam:\n        if (conqueredByPlayer) {\n          swapNodes(isMiscNode ? this.miscNodes : this.enemyNodes, this.playerNodes, targetNode);\n          // Conquering spam node increases time limit\n          this.time += CONSTANTS.HackingMissionSpamTimeIncrease;\n        } else {\n          swapNodes(isMiscNode ? this.miscNodes : this.playerNodes, this.enemyNodes, targetNode);\n        }\n\n        break;\n      case NodeTypes.Transfer:\n        // Conquering a Transfer node increases the attack of all cores by some percentages\n        if (conqueredByPlayer) {\n          swapNodes(isMiscNode ? this.miscNodes : this.enemyNodes, this.playerNodes, targetNode);\n          this.playerCores.forEach(function (node) {\n            node.atk *= CONSTANTS.HackingMissionTransferAttackIncrease;\n          });\n          this.configurePlayerNodeElement(targetNode.el);\n        } else {\n          swapNodes(isMiscNode ? this.miscNodes : this.playerNodes, this.enemyNodes, targetNode);\n          this.enemyCores.forEach(function (node) {\n            node.atk *= CONSTANTS.HackingMissionTransferAttackIncrease;\n          });\n          this.configureEnemyNodeElement(targetNode.el);\n        }\n        break;\n      case NodeTypes.Shield:\n        if (conqueredByPlayer) {\n          swapNodes(isMiscNode ? this.miscNodes : this.enemyNodes, this.playerNodes, targetNode);\n          this.configurePlayerNodeElement(targetNode.el);\n        } else {\n          swapNodes(isMiscNode ? this.miscNodes : this.playerNodes, this.enemyNodes, targetNode);\n          this.configureEnemyNodeElement(targetNode.el);\n        }\n        break;\n    }\n\n    // If a misc node was conquered, the defense for all misc nodes increases by some fixed amount\n    if (isMiscNode) {\n      //&& conqueredByPlayer) {\n      this.miscNodes.forEach((node) => {\n        if (node.targetedCount === 0) {\n          node.def *= CONSTANTS.HackingMissionMiscDefenseIncrease;\n        }\n      });\n    }\n  }\n\n  // Update node DOMs\n  this.updateNodeDomElement(nodeObj);\n  if (targetNode) {\n    this.updateNodeDomElement(targetNode);\n  }\n  return calcStats;\n};\n\n// Enemy \"AI\" for CPU Core and Transfer Nodes\nHackingMission.prototype.enemyAISelectAction = function (nodeObj) {\n  if (nodeObj == null) {\n    return;\n  }\n  switch (nodeObj.type) {\n    case NodeTypes.Core:\n      /**\n       * Select a single RANDOM target from miscNodes and player's Nodes\n       * If it is reachable, it will target it. If not, no target will\n       * be selected for now, and the next time process() gets called this will repeat\n       */\n      if (nodeObj.conn == null) {\n        if (this.miscNodes.length === 0) {\n          // Randomly pick a player node and attack it if its reachable\n          var rand = getRandomInt(0, this.playerNodes.length - 1);\n          var node;\n          if (this.playerNodes.length === 0) {\n            node = null;\n          } else {\n            node = this.playerNodes[rand];\n          }\n          if (this.nodeReachableByEnemy(node)) {\n            // Create connection\n            nodeObj.conn = this.jsplumbinstance.connect({\n              source: nodeObj.el,\n              target: node.el,\n            });\n            ++node.targetedCount;\n          } else {\n            // Randomly pick a player core and attack it if its reachable\n            rand = getRandomInt(0, this.playerCores.length - 1);\n            if (this.playerCores.length === 0) {\n              return; // No Misc Nodes, no player Nodes, no Player cores. Player lost\n            } else {\n              node = this.playerCores[rand];\n            }\n\n            if (this.nodeReachableByEnemy(node)) {\n              // Create connection\n              nodeObj.conn = this.jsplumbinstance.connect({\n                source: nodeObj.el,\n                target: node.el,\n              });\n              ++node.targetedCount;\n            }\n          }\n        } else {\n          // Randomly pick a misc node and attack it if its reachable\n          var rand = getRandomInt(0, this.miscNodes.length - 1);\n          var node = this.miscNodes[rand];\n          if (this.nodeReachableByEnemy(node)) {\n            nodeObj.conn = this.jsplumbinstance.connect({\n              source: nodeObj.el,\n              target: node.el,\n            });\n            ++node.targetedCount;\n          }\n        }\n\n        // If no connection was made, set the Core to Fortify\n        nodeObj.action = NodeActions.Fortify;\n      } else {\n        // If this node has a selected target\n        var targetNode;\n        if (nodeObj.conn.target) {\n          targetNode = this.getNodeFromElement(nodeObj.conn.target);\n        } else {\n          targetNode = this.getNodeFromElement(nodeObj.conn.targetId);\n        }\n        if (targetNode == null) {\n          console.error(\"Error getting Target node Object in enemyAISelectAction()\");\n        }\n\n        if (targetNode.def > this.enemyAtk + 15) {\n          if (nodeObj.def < 50) {\n            nodeObj.action = NodeActions.Fortify;\n          } else {\n            nodeObj.action = NodeActions.Overflow;\n          }\n        } else if (Math.abs(targetNode.def - this.enemyAtk) <= 15) {\n          nodeObj.action = NodeActions.Scan;\n        } else {\n          nodeObj.action = NodeActions.Attack;\n        }\n      }\n      break;\n    case NodeTypes.Transfer:\n      // Switch between fortifying and overflowing as necessary\n      if (nodeObj.def < 125) {\n        nodeObj.action = NodeActions.Fortify;\n      } else {\n        nodeObj.action = NodeActions.Overflow;\n      }\n      break;\n    case NodeTypes.Firewall:\n    case NodeTypes.Shield:\n      nodeObj.action = NodeActions.Fortify;\n      break;\n    default:\n      break;\n  }\n};\n\nvar hackEffWeightSelf = 130; // Weight for Node actions on self\nvar hackEffWeightTarget = 25; // Weight for Node Actions against Target\nvar hackEffWeightAttack = 80; // Weight for Attack action\n\n// Returns damage per cycle based on stats\nHackingMission.prototype.calculateAttackDamage = function (atk, def, hacking = 0) {\n  return Math.max(0.55 * (atk + hacking / hackEffWeightAttack - def), 1);\n};\n\nHackingMission.prototype.calculateScanEffect = function (atk, def, hacking = 0) {\n  return Math.max(0.6 * (atk + hacking / hackEffWeightTarget - def * 0.95), 2);\n};\n\nHackingMission.prototype.calculateWeakenEffect = function (atk, def, hacking = 0) {\n  return Math.max(atk + hacking / hackEffWeightTarget - def * 0.95, 2);\n};\n\nHackingMission.prototype.calculateFortifyEffect = function (hacking = 0) {\n  return (0.9 * hacking) / hackEffWeightSelf;\n};\n\nHackingMission.prototype.calculateOverflowEffect = function (hacking = 0) {\n  return (0.95 * hacking) / hackEffWeightSelf;\n};\n\n// Updates timer display\nHackingMission.prototype.updateTimer = function () {\n  var timer = document.getElementById(\"hacking-mission-timer\");\n\n  // Convert time remaining to a string of the form mm:ss\n  var seconds = Math.round(this.time / 1000);\n  var minutes = Math.trunc(seconds / 60);\n  seconds %= 60;\n  var str = (\"0\" + minutes).slice(-2) + \":\" + (\"0\" + seconds).slice(-2);\n  timer.innerText = \"Time left: \" + str;\n};\n\n// The 'win' argument is a bool for whether or not the player won\nHackingMission.prototype.finishMission = function (win) {\n  inMission = false;\n  currMission = null;\n\n  if (win) {\n    var favorMult = 1 + this.faction.favor / 100;\n    var gain = this.reward * Player.faction_rep_mult * favorMult;\n    dialogBoxCreate(\n      <>\n        Mission won! You earned {Reputation(gain)} reputation with {this.faction.name}\n      </>,\n    );\n    Player.gainIntelligenceExp(Math.pow(this.difficulty * CONSTANTS.IntelligenceHackingMissionBaseExpGain, 0.5));\n    this.faction.playerReputation += gain;\n  } else {\n    dialogBoxCreate(\"Mission lost/forfeited! You did not gain any faction reputation.\");\n  }\n  Router.toFaction();\n};\n\nexport { HackingMission, inMission, setInMission, currMission };\n","export interface IMults {\n  hack?: number;\n  str?: number;\n  def?: number;\n  dex?: number;\n  agi?: number;\n  cha?: number;\n}\n\nexport enum UpgradeType {\n  Weapon = \"w\",\n  Armor = \"a\",\n  Vehicle = \"v\",\n  Rootkit = \"r\",\n  Augmentation = \"g\",\n}\n\n/**\n * Defines the parameters that can be used to initialize and describe a GangMemberUpgrade\n * (defined in Gang.js)\n */\nexport interface IGangMemberUpgradeMetadata {\n  cost: number;\n  mults: IMults;\n  name: string;\n  upgType: UpgradeType;\n}\n\n/**\n * Array of metadata for all Gang Member upgrades. Used to construct the global GangMemberUpgrade\n * objects in Gang.js\n */\nexport const gangMemberUpgradesMetadata: IGangMemberUpgradeMetadata[] = [\n  {\n    cost: 1e6,\n    mults: { str: 1.04, def: 1.04 },\n    name: \"Baseball Bat\",\n    upgType: UpgradeType.Weapon,\n  },\n  {\n    cost: 12e6,\n    mults: { str: 1.08, def: 1.08, dex: 1.08 },\n    name: \"Katana\",\n    upgType: UpgradeType.Weapon,\n  },\n  {\n    cost: 25e6,\n    mults: { str: 1.1, def: 1.1, dex: 1.1, agi: 1.1 },\n    name: \"Glock 18C\",\n    upgType: UpgradeType.Weapon,\n  },\n  {\n    cost: 50e6,\n    mults: { str: 1.12, def: 1.1, agi: 1.1 },\n    name: \"P90C\",\n    upgType: UpgradeType.Weapon,\n  },\n  {\n    cost: 60e6,\n    mults: { str: 1.2, def: 1.15 },\n    name: \"Steyr AUG\",\n    upgType: UpgradeType.Weapon,\n  },\n  {\n    cost: 100e6,\n    mults: { str: 1.25, def: 1.2 },\n    name: \"AK-47\",\n    upgType: UpgradeType.Weapon,\n  },\n  {\n    cost: 150e6,\n    mults: { str: 1.3, def: 1.25 },\n    name: \"M15A10 Assault Rifle\",\n    upgType: UpgradeType.Weapon,\n  },\n  {\n    cost: 225e6,\n    mults: { str: 1.3, dex: 1.25, agi: 1.3 },\n    name: \"AWM Sniper Rifle\",\n    upgType: UpgradeType.Weapon,\n  },\n  {\n    cost: 2e6,\n    mults: { def: 1.04 },\n    name: \"Bulletproof Vest\",\n    upgType: UpgradeType.Armor,\n  },\n  {\n    cost: 5e6,\n    mults: { def: 1.08 },\n    name: \"Full Body Armor\",\n    upgType: UpgradeType.Armor,\n  },\n  {\n    cost: 25e6,\n    mults: { def: 1.15, agi: 1.15 },\n    name: \"Liquid Body Armor\",\n    upgType: UpgradeType.Armor,\n  },\n  {\n    cost: 40e6,\n    mults: { def: 1.2 },\n    name: \"Graphene Plating Armor\",\n    upgType: UpgradeType.Armor,\n  },\n  {\n    cost: 3e6,\n    mults: { agi: 1.04, cha: 1.04 },\n    name: \"Ford Flex V20\",\n    upgType: UpgradeType.Vehicle,\n  },\n  {\n    cost: 9e6,\n    mults: { agi: 1.08, cha: 1.08 },\n    name: \"ATX1070 Superbike\",\n    upgType: UpgradeType.Vehicle,\n  },\n  {\n    cost: 18e6,\n    mults: { agi: 1.12, cha: 1.12 },\n    name: \"Mercedes-Benz S9001\",\n    upgType: UpgradeType.Vehicle,\n  },\n  {\n    cost: 30e6,\n    mults: { agi: 1.16, cha: 1.16 },\n    name: \"White Ferrari\",\n    upgType: UpgradeType.Vehicle,\n  },\n  {\n    cost: 5e6,\n    mults: { hack: 1.05 },\n    name: \"NUKE Rootkit\",\n    upgType: UpgradeType.Rootkit,\n  },\n  {\n    cost: 25e6,\n    mults: { hack: 1.1 },\n    name: \"Soulstealer Rootkit\",\n    upgType: UpgradeType.Rootkit,\n  },\n  {\n    cost: 75e6,\n    mults: { hack: 1.15 },\n    name: \"Demon Rootkit\",\n    upgType: UpgradeType.Rootkit,\n  },\n  {\n    cost: 40e6,\n    mults: { hack: 1.12 },\n    name: \"Hmap Node\",\n    upgType: UpgradeType.Rootkit,\n  },\n  {\n    cost: 75e6,\n    mults: { hack: 1.15 },\n    name: \"Jack the Ripper\",\n    upgType: UpgradeType.Rootkit,\n  },\n  {\n    cost: 10e9,\n    mults: { str: 1.3, dex: 1.3 },\n    name: \"Bionic Arms\",\n    upgType: UpgradeType.Augmentation,\n  },\n  {\n    cost: 10e9,\n    mults: { agi: 1.6 },\n    name: \"Bionic Legs\",\n    upgType: UpgradeType.Augmentation,\n  },\n  {\n    cost: 15e9,\n    mults: { str: 1.15, def: 1.15, dex: 1.15, agi: 1.15 },\n    name: \"Bionic Spine\",\n    upgType: UpgradeType.Augmentation,\n  },\n  {\n    cost: 20e9,\n    mults: { str: 1.4, def: 1.4 },\n    name: \"BrachiBlades\",\n    upgType: UpgradeType.Augmentation,\n  },\n  {\n    cost: 12e9,\n    mults: { str: 1.2, def: 1.2 },\n    name: \"Nanofiber Weave\",\n    upgType: UpgradeType.Augmentation,\n  },\n  {\n    cost: 25e9,\n    mults: { str: 1.5, agi: 1.5 },\n    name: \"Synthetic Heart\",\n    upgType: UpgradeType.Augmentation,\n  },\n  {\n    cost: 15e9,\n    mults: { str: 1.3, def: 1.3 },\n    name: \"Synfibril Muscle\",\n    upgType: UpgradeType.Augmentation,\n  },\n  {\n    cost: 5e9,\n    mults: { hack: 1.05 },\n    name: \"BitWire\",\n    upgType: UpgradeType.Augmentation,\n  },\n  {\n    cost: 10e9,\n    mults: { hack: 1.15 },\n    name: \"Neuralstimulator\",\n    upgType: UpgradeType.Augmentation,\n  },\n  {\n    cost: 7.5e9,\n    mults: { hack: 1.1 },\n    name: \"DataJack\",\n    upgType: UpgradeType.Augmentation,\n  },\n  {\n    cost: 50e9,\n    mults: { str: 1.7, def: 1.7 },\n    name: \"Graphene Bone Lacings\",\n    upgType: UpgradeType.Augmentation,\n  },\n];\n","import { IMap } from \"../types\";\n\n// Map of material (by name) to their sizes (how much space it takes in warehouse)\nexport const MaterialSizes: IMap<number> = {\n  Water: 0.05,\n  Energy: 0.01,\n  Food: 0.03,\n  Plants: 0.05,\n  Metal: 0.1,\n  Hardware: 0.06,\n  Chemicals: 0.05,\n  Drugs: 0.02,\n  Robots: 0.5,\n  AICores: 0.1,\n  RealEstate: 0,\n  \"Real Estate\": 0,\n  \"AI Cores\": 0,\n};\n","export enum FactionWorkType {\n  Field,\n  Hacking,\n  None,\n  Security,\n}\n","/**\n * Functions for handling WorkerScripts, which are the underlying mechanism\n * that allows for scripts to run\n */\nimport { killWorkerScript } from \"./Netscript/killWorkerScript\";\nimport { WorkerScript } from \"./Netscript/WorkerScript\";\nimport { workerScripts } from \"./Netscript/WorkerScripts\";\nimport { WorkerScriptStartStopEventEmitter } from \"./Netscript/WorkerScriptStartStopEventEmitter\";\nimport { generateNextPid } from \"./Netscript/Pid\";\n\nimport { CONSTANTS } from \"./Constants\";\nimport { Interpreter } from \"./ThirdParty/JSInterpreter\";\nimport { isScriptErrorMessage, makeRuntimeRejectMsg } from \"./NetscriptEvaluator\";\nimport { NetscriptFunctions } from \"./NetscriptFunctions\";\nimport { executeJSScript } from \"./NetscriptJSEvaluator\";\nimport { NetscriptPort, IPort } from \"./NetscriptPort\";\nimport { RunningScript } from \"./Script/RunningScript\";\nimport { getRamUsageFromRunningScript } from \"./Script/RunningScriptHelpers\";\nimport { scriptCalculateOfflineProduction } from \"./Script/ScriptHelpers\";\nimport { Script } from \"./Script/Script\";\nimport { AllServers } from \"./Server/AllServers\";\nimport { BaseServer } from \"./Server/BaseServer\";\nimport { Settings } from \"./Settings/Settings\";\nimport { setTimeoutRef } from \"./utils/SetTimeoutRef\";\n\nimport { generate } from \"escodegen\";\n\nimport { dialogBoxCreate } from \"./ui/React/DialogBox\";\nimport { arrayToString } from \"./utils/helpers/arrayToString\";\nimport { roundToTwo } from \"./utils/helpers/roundToTwo\";\nimport { isString } from \"./utils/helpers/isString\";\nimport { sprintf } from \"sprintf-js\";\n\nimport { parse } from \"acorn\";\nimport { simple as walksimple } from \"acorn-walk\";\n\n// Netscript Ports are instantiated here\nexport const NetscriptPorts: IPort[] = [];\nfor (let i = 0; i < CONSTANTS.NumNetscriptPorts; ++i) {\n  NetscriptPorts.push(NetscriptPort());\n}\n\nexport function prestigeWorkerScripts(): void {\n  for (const ws of workerScripts.values()) {\n    ws.env.stopFlag = true;\n    killWorkerScript(ws);\n  }\n\n  WorkerScriptStartStopEventEmitter.emit();\n  workerScripts.clear();\n}\n\n// JS script promises need a little massaging to have the same guarantees as netscript\n// promises. This does said massaging and kicks the script off. It returns a promise\n// that resolves or rejects when the corresponding worker script is done.\nfunction startNetscript2Script(workerScript: WorkerScript): Promise<WorkerScript> {\n  workerScript.running = true;\n\n  // The name of the currently running netscript function, to prevent concurrent\n  // calls to hack, grow, etc.\n  let runningFn: string | null = null;\n\n  // We need to go through the environment and wrap each function in such a way that it\n  // can be called at most once at a time. This will prevent situations where multiple\n  // hack promises are outstanding, for example.\n  function wrap(propName: string, f: (...args: any[]) => Promise<void>): (...args: any[]) => Promise<void> {\n    // This function unfortunately cannot be an async function, because we don't\n    // know if the original one was, and there's no way to tell.\n    return function (...args: any[]) {\n      // Wrap every netscript function with a check for the stop flag.\n      // This prevents cases where we never stop because we are only calling\n      // netscript functions that don't check this.\n      // This is not a problem for legacy Netscript because it also checks the\n      // stop flag in the evaluator.\n      if (workerScript.env.stopFlag) {\n        throw workerScript;\n      }\n\n      if (propName === \"sleep\") return f(...args); // OK for multiple simultaneous calls to sleep.\n\n      const msg =\n        \"Concurrent calls to Netscript functions not allowed! \" +\n        \"Did you forget to await hack(), grow(), or some other \" +\n        \"promise-returning function? (Currently running: %s tried to run: %s)\";\n      if (runningFn) {\n        workerScript.errorMessage = makeRuntimeRejectMsg(workerScript, sprintf(msg, runningFn, propName));\n        throw workerScript;\n      }\n      runningFn = propName;\n\n      // If the function throws an error, clear the runningFn flag first, and then re-throw it\n      // This allows people to properly catch errors thrown by NS functions without getting\n      // the concurrent call error above\n      let result;\n      try {\n        result = f(...args);\n      } catch (e) {\n        runningFn = null;\n        throw e;\n      }\n\n      if (result && result.finally !== undefined) {\n        return result.finally(function () {\n          runningFn = null;\n        });\n      } else {\n        runningFn = null;\n        return result;\n      }\n    };\n  }\n\n  for (const prop in workerScript.env.vars) {\n    if (typeof workerScript.env.vars[prop] !== \"function\") continue;\n    workerScript.env.vars[prop] = wrap(prop, workerScript.env.vars[prop]);\n  }\n\n  // Note: the environment that we pass to the JS script only needs to contain the functions visible\n  // to that script, which env.vars does at this point.\n  return new Promise<WorkerScript>((resolve, reject) => {\n    executeJSScript(workerScript.getServer().scripts, workerScript)\n      .then(() => {\n        resolve(workerScript);\n      })\n      .catch((e) => reject(e));\n  }).catch((e) => {\n    if (e instanceof Error) {\n      workerScript.errorMessage = makeRuntimeRejectMsg(\n        workerScript,\n        e.message + ((e.stack && \"\\nstack:\\n\" + e.stack.toString()) || \"\"),\n      );\n      throw workerScript;\n    } else if (isScriptErrorMessage(e)) {\n      workerScript.errorMessage = e;\n      throw workerScript;\n    }\n    throw e; // Don't know what to do with it, let's rethrow.\n  });\n}\n\nfunction startNetscript1Script(workerScript: WorkerScript): Promise<WorkerScript> {\n  const code = workerScript.code;\n  workerScript.running = true;\n\n  //Process imports\n  let codeWithImports, codeLineOffset;\n  try {\n    const importProcessingRes = processNetscript1Imports(code, workerScript);\n    codeWithImports = importProcessingRes.code;\n    codeLineOffset = importProcessingRes.lineOffset;\n  } catch (e) {\n    dialogBoxCreate(\"Error processing Imports in \" + workerScript.name + \":<br>\" + e);\n    workerScript.env.stopFlag = true;\n    workerScript.running = false;\n    killWorkerScript(workerScript);\n    return Promise.resolve(workerScript);\n  }\n\n  const interpreterInitialization = function (int: any, scope: any): void {\n    //Add the Netscript environment\n    const ns = NetscriptFunctions(workerScript);\n    for (const name in ns) {\n      const entry = ns[name];\n      if (typeof entry === \"function\") {\n        //Async functions need to be wrapped. See JS-Interpreter documentation\n        if (\n          name === \"hack\" ||\n          name === \"grow\" ||\n          name === \"weaken\" ||\n          name === \"sleep\" ||\n          name === \"prompt\" ||\n          name === \"manualHack\"\n        ) {\n          const tempWrapper = function (...args: any[]): void {\n            const fnArgs = [];\n\n            //All of the Object/array elements are in JSInterpreter format, so\n            //we have to convert them back to native format to pass them to these fns\n            for (let i = 0; i < args.length - 1; ++i) {\n              if (typeof args[i] === \"object\" || args[i].constructor === Array) {\n                fnArgs.push(int.pseudoToNative(args[i]));\n              } else {\n                fnArgs.push(args[i]);\n              }\n            }\n            const cb = args[args.length - 1];\n            const fnPromise = entry(...fnArgs);\n            fnPromise\n              .then(function (res: any) {\n                cb(res);\n              })\n              .catch(function (err: any) {\n                console.error(err);\n              });\n          };\n          int.setProperty(scope, name, int.createAsyncFunction(tempWrapper));\n        } else if (\n          name === \"sprintf\" ||\n          name === \"vsprintf\" ||\n          name === \"scp\" ||\n          name == \"write\" ||\n          name === \"read\" ||\n          name === \"tryWrite\" ||\n          name === \"run\" ||\n          name === \"exec\"\n        ) {\n          const tempWrapper = function (...args: any[]): void {\n            const fnArgs = [];\n\n            //All of the Object/array elements are in JSInterpreter format, so\n            //we have to convert them back to native format to pass them to these fns\n            for (let i = 0; i < args.length; ++i) {\n              if (typeof args[i] === \"object\" || args[i].constructor === Array) {\n                fnArgs.push(int.pseudoToNative(args[i]));\n              } else {\n                fnArgs.push(args[i]);\n              }\n            }\n\n            return entry(...fnArgs);\n          };\n          int.setProperty(scope, name, int.createNativeFunction(tempWrapper));\n        } else {\n          const tempWrapper = function (...args: any[]): any {\n            const res = entry(...args);\n\n            if (res == null) {\n              return res;\n            } else if (res.constructor === Array || res === Object(res)) {\n              //Objects and Arrays must be converted to the interpreter's format\n              return int.nativeToPseudo(res);\n            } else {\n              return res;\n            }\n          };\n          int.setProperty(scope, name, int.createNativeFunction(tempWrapper));\n        }\n      } else {\n        //bladeburner, or anything else\n        int.setProperty(scope, name, int.nativeToPseudo(entry));\n      }\n    }\n\n    //Add the arguments\n    int.setProperty(scope, \"args\", int.nativeToPseudo(workerScript.args));\n  };\n\n  let interpreter: any;\n  try {\n    interpreter = new Interpreter(codeWithImports, interpreterInitialization, codeLineOffset);\n  } catch (e) {\n    dialogBoxCreate(\"Syntax ERROR in \" + workerScript.name + \":<br>\" + e);\n    workerScript.env.stopFlag = true;\n    workerScript.running = false;\n    killWorkerScript(workerScript);\n    return Promise.resolve(workerScript);\n  }\n\n  return new Promise(function (resolve, reject) {\n    function runInterpreter(): void {\n      try {\n        if (workerScript.env.stopFlag) {\n          return reject(workerScript);\n        }\n\n        if (interpreter.step()) {\n          setTimeoutRef(runInterpreter, Settings.CodeInstructionRunTime);\n        } else {\n          resolve(workerScript);\n        }\n      } catch (e) {\n        e = e.toString();\n        if (!isScriptErrorMessage(e)) {\n          e = makeRuntimeRejectMsg(workerScript, e);\n        }\n        workerScript.errorMessage = e;\n        return reject(workerScript);\n      }\n    }\n\n    try {\n      runInterpreter();\n    } catch (e) {\n      if (isString(e)) {\n        workerScript.errorMessage = e;\n        return reject(workerScript);\n      } else if (e instanceof WorkerScript) {\n        return reject(e);\n      } else {\n        return reject(workerScript);\n      }\n    }\n  });\n}\n\n/*  Since the JS Interpreter used for Netscript 1.0 only supports ES5, the keyword\n    'import' throws an error. However, since we want to support import funtionality\n    we'll implement it ourselves by parsing the Nodes in the AST out.\n\n    @param code - The script's code\n    @returns {Object} {\n        code: Newly-generated code with imported functions\n        lineOffset: Net number of lines of code added/removed due to imported functions\n                    Should typically be positive\n    }\n*/\nfunction processNetscript1Imports(code: string, workerScript: WorkerScript): any {\n  //allowReserved prevents 'import' from throwing error in ES5\n  const ast: any = parse(code, {\n    ecmaVersion: 9,\n    allowReserved: true,\n    sourceType: \"module\",\n  });\n\n  const server = workerScript.getServer();\n  if (server == null) {\n    throw new Error(\"Failed to find underlying Server object for script\");\n  }\n\n  function getScript(scriptName: string): Script | null {\n    for (let i = 0; i < server.scripts.length; ++i) {\n      if (server.scripts[i].filename === scriptName) {\n        return server.scripts[i];\n      }\n    }\n    return null;\n  }\n\n  let generatedCode = \"\"; // Generated Javascript Code\n  let hasImports = false;\n\n  // Walk over the tree and process ImportDeclaration nodes\n  walksimple(ast, {\n    ImportDeclaration: (node: any) => {\n      hasImports = true;\n      let scriptName = node.source.value;\n      if (scriptName.startsWith(\"./\")) {\n        scriptName = scriptName.slice(2);\n      }\n      const script = getScript(scriptName);\n      if (script == null) {\n        throw new Error(\"'Import' failed due to invalid script: \" + scriptName);\n      }\n      const scriptAst = parse(script.code, {\n        ecmaVersion: 9,\n        allowReserved: true,\n        sourceType: \"module\",\n      });\n\n      if (node.specifiers.length === 1 && node.specifiers[0].type === \"ImportNamespaceSpecifier\") {\n        // import * as namespace from script\n        const namespace = node.specifiers[0].local.name;\n        const fnNames: string[] = []; //Names only\n        const fnDeclarations: any[] = []; //FunctionDeclaration Node objects\n        walksimple(scriptAst, {\n          FunctionDeclaration: (node: any) => {\n            fnNames.push(node.id.name);\n            fnDeclarations.push(node);\n          },\n        });\n\n        //Now we have to generate the code that would create the namespace\n        generatedCode += \"var \" + namespace + \";\\n\" + \"(function (namespace) {\\n\";\n\n        //Add the function declarations\n        fnDeclarations.forEach((fn: any) => {\n          generatedCode += generate(fn);\n          generatedCode += \"\\n\";\n        });\n\n        //Add functions to namespace\n        fnNames.forEach((fnName) => {\n          generatedCode += \"namespace.\" + fnName + \" = \" + fnName;\n          generatedCode += \"\\n\";\n        });\n\n        //Finish\n        generatedCode += \"})(\" + namespace + \" || \" + \"(\" + namespace + \" = {}));\\n\";\n      } else {\n        //import {...} from script\n\n        //Get array of all fns to import\n        const fnsToImport: string[] = [];\n        node.specifiers.forEach((e: any) => {\n          fnsToImport.push(e.local.name);\n        });\n\n        //Walk through script and get FunctionDeclaration code for all specified fns\n        const fnDeclarations: any[] = [];\n        walksimple(scriptAst, {\n          FunctionDeclaration: (node: any) => {\n            if (fnsToImport.includes(node.id.name)) {\n              fnDeclarations.push(node);\n            }\n          },\n        });\n\n        //Convert FunctionDeclarations into code\n        fnDeclarations.forEach((fn: any) => {\n          generatedCode += generate(fn);\n          generatedCode += \"\\n\";\n        });\n      }\n    },\n  });\n\n  //If there are no imports, just return the original code\n  if (!hasImports) {\n    return { code: code, lineOffset: 0 };\n  }\n\n  //Remove ImportDeclarations from AST. These ImportDeclarations must be in top-level\n  let linesRemoved = 0;\n  if (ast.type !== \"Program\" || ast.body == null) {\n    throw new Error(\"Code could not be properly parsed\");\n  }\n  for (let i = ast.body.length - 1; i >= 0; --i) {\n    if (ast.body[i].type === \"ImportDeclaration\") {\n      ast.body.splice(i, 1);\n      ++linesRemoved;\n    }\n  }\n\n  //Calculated line offset\n  const lineOffset = (generatedCode.match(/\\n/g) || []).length - linesRemoved;\n\n  //Convert the AST back into code\n  code = generate(ast);\n\n  //Add the imported code and re-generate in ES5 (JS Interpreter for NS1 only supports ES5);\n  code = generatedCode + code;\n\n  const res = {\n    code: code,\n    lineOffset: lineOffset,\n  };\n  return res;\n}\n\n/**\n * Used to start a RunningScript (by creating and starting its\n * corresponding WorkerScript), and add the RunningScript to the server on which\n * it is active\n * @param {RunningScript} runningScriptObj - Script that's being run\n * @param {Server} server - Server on which the script is to be run\n * @returns {number} pid of started script\n */\nexport function startWorkerScript(runningScript: RunningScript, server: BaseServer, parent?: WorkerScript): number {\n  if (createAndAddWorkerScript(runningScript, server, parent)) {\n    // Push onto runningScripts.\n    // This has to come after createAndAddWorkerScript() because that fn updates RAM usage\n    server.runScript(runningScript);\n\n    // Once the WorkerScript is constructed in createAndAddWorkerScript(), the RunningScript\n    // object should have a PID assigned to it, so we return that\n    return runningScript.pid;\n  }\n\n  return 0;\n}\n\n/**\n * Given a RunningScript object, constructs its corresponding WorkerScript,\n * adds it to the global 'workerScripts' pool, and begins executing it.\n * @param {RunningScript} runningScriptObj - Script that's being run\n * @param {Server} server - Server on which the script is to be run\n * returns {boolean} indicating whether or not the workerScript was successfully added\n */\nexport function createAndAddWorkerScript(\n  runningScriptObj: RunningScript,\n  server: BaseServer,\n  parent?: WorkerScript,\n): boolean {\n  // Update server's ram usage\n  let threads = 1;\n  if (runningScriptObj.threads && !isNaN(runningScriptObj.threads)) {\n    threads = runningScriptObj.threads;\n  } else {\n    runningScriptObj.threads = 1;\n  }\n  const ramUsage = roundToTwo(getRamUsageFromRunningScript(runningScriptObj) * threads);\n  const ramAvailable = server.maxRam - server.ramUsed;\n  if (ramUsage > ramAvailable) {\n    dialogBoxCreate(\n      `Not enough RAM to run script ${runningScriptObj.filename} with args ` +\n        `${arrayToString(runningScriptObj.args)}. This likely occurred because you re-loaded ` +\n        `the game and the script's RAM usage increased (either because of an update to the game or ` +\n        `your changes to the script.)`,\n    );\n    return false;\n  }\n  server.ramUsed = roundToTwo(server.ramUsed + ramUsage);\n\n  // Get the pid\n  const pid = generateNextPid();\n  if (pid === -1) {\n    throw new Error(\n      `Failed to start script because could not find available PID. This is most ` +\n        `because you have too many scripts running.`,\n    );\n  }\n\n  // Create the WorkerScript. NOTE: WorkerScript ctor will set the underlying\n  // RunningScript's PID as well\n  const s = new WorkerScript(runningScriptObj, pid, NetscriptFunctions);\n  s.ramUsage = ramUsage;\n\n  // Add the WorkerScript to the global pool\n  workerScripts.set(pid, s);\n  WorkerScriptStartStopEventEmitter.emit();\n\n  // Start the script's execution\n  let p: Promise<WorkerScript> | null = null; // Script's resulting promise\n  if (s.name.endsWith(\".js\") || s.name.endsWith(\".ns\")) {\n    p = startNetscript2Script(s);\n  } else {\n    p = startNetscript1Script(s);\n    if (!(p instanceof Promise)) {\n      return false;\n    }\n  }\n\n  // Once the code finishes (either resolved or rejected, doesnt matter), set its\n  // running status to false\n  p.then(function (w: WorkerScript) {\n    // On natural death, the earnings are transfered to the parent if it still exists.\n    if (parent !== undefined) {\n      if (parent.running) {\n        parent.scriptRef.onlineExpGained += runningScriptObj.onlineExpGained;\n        parent.scriptRef.onlineMoneyMade += runningScriptObj.onlineMoneyMade;\n      }\n    }\n\n    killWorkerScript(s);\n    w.log(\"\", \"Script finished running\");\n  }).catch(function (w) {\n    if (w instanceof Error) {\n      dialogBoxCreate(\"Script runtime unknown error. This is a bug please contact game developer\");\n      console.error(\"Evaluating workerscript returns an Error. THIS SHOULDN'T HAPPEN: \" + w.toString());\n      return;\n    } else if (w instanceof WorkerScript) {\n      if (isScriptErrorMessage(w.errorMessage)) {\n        const errorTextArray = w.errorMessage.split(\"|\");\n        if (errorTextArray.length != 4) {\n          console.error(\"ERROR: Something wrong with Error text in evaluator...\");\n          console.error(\"Error text: \" + w.errorMessage);\n          return;\n        }\n        const serverIp = errorTextArray[1];\n        const scriptName = errorTextArray[2];\n        const errorMsg = errorTextArray[3];\n\n        let msg = `RUNTIME ERROR<br>${scriptName}@${serverIp}<br>`;\n        if (w.args.length > 0) {\n          msg += `Args: ${arrayToString(w.args)}<br>`;\n        }\n        msg += \"<br>\";\n        msg += errorMsg;\n\n        dialogBoxCreate(msg);\n        w.log(\"\", \"Script crashed with runtime error\");\n      } else {\n        w.log(\"\", \"Script killed\");\n        return; // Already killed, so stop here\n      }\n      w.running = false;\n      w.env.stopFlag = true;\n    } else if (isScriptErrorMessage(w)) {\n      dialogBoxCreate(\"Script runtime unknown error. This is a bug please contact game developer\");\n      console.error(\n        \"ERROR: Evaluating workerscript returns only error message rather than WorkerScript object. THIS SHOULDN'T HAPPEN: \" +\n          w.toString(),\n      );\n      return;\n    } else {\n      dialogBoxCreate(\"An unknown script died for an unknown reason. This is a bug please contact game dev\");\n      console.error(w);\n    }\n\n    killWorkerScript(s);\n  });\n\n  return true;\n}\n\n/**\n * Updates the online running time stat of all running scripts\n */\nexport function updateOnlineScriptTimes(numCycles = 1): void {\n  const time = (numCycles * CONSTANTS._idleSpeed) / 1000; //seconds\n  for (const ws of workerScripts.values()) {\n    ws.scriptRef.onlineRunningTime += time;\n  }\n}\n\n/**\n * Called when the game is loaded. Loads all running scripts (from all servers)\n * into worker scripts so that they will start running\n */\nexport function loadAllRunningScripts(): void {\n  const skipScriptLoad = window.location.href.toLowerCase().indexOf(\"?noscripts\") !== -1;\n  if (skipScriptLoad) {\n    console.info(\"Skipping the load of any scripts during startup\");\n  }\n  for (const property in AllServers) {\n    if (AllServers.hasOwnProperty(property)) {\n      const server = AllServers[property];\n\n      // Reset each server's RAM usage to 0\n      server.ramUsed = 0;\n\n      // Reset modules on all scripts\n      for (let i = 0; i < server.scripts.length; ++i) {\n        server.scripts[i].markUpdated();\n      }\n\n      if (skipScriptLoad) {\n        // Start game with no scripts\n        server.runningScripts.length = 0;\n      } else {\n        for (let j = 0; j < server.runningScripts.length; ++j) {\n          createAndAddWorkerScript(server.runningScripts[j], server);\n\n          // Offline production\n          scriptCalculateOfflineProduction(server.runningScripts[j]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Run a script from inside another script (run(), exec(), spawn(), etc.)\n */\nexport function runScriptFromScript(\n  caller: string,\n  server: BaseServer,\n  scriptname: string,\n  args: any[],\n  workerScript: WorkerScript,\n  threads = 1,\n): number {\n  // Sanitize arguments\n  if (!(workerScript instanceof WorkerScript)) {\n    return 0;\n  }\n\n  if (typeof scriptname !== \"string\" || !Array.isArray(args)) {\n    workerScript.log(caller, `Invalid arguments: scriptname='${scriptname} args='${args}'`);\n    console.error(`runScriptFromScript() failed due to invalid arguments`);\n    return 0;\n  }\n\n  // Check if the script is already running\n  const runningScriptObj = server.getRunningScript(scriptname, args);\n  if (runningScriptObj != null) {\n    workerScript.log(caller, `'${scriptname}' is already running on '${server.hostname}'`);\n    return 0;\n  }\n\n  // 'null/undefined' arguments are not allowed\n  for (let i = 0; i < args.length; ++i) {\n    if (args[i] == null) {\n      workerScript.log(caller, \"Cannot execute a script with null/undefined as an argument\");\n      return 0;\n    }\n  }\n\n  // Check if the script exists and if it does run it\n  for (let i = 0; i < server.scripts.length; ++i) {\n    if (server.scripts[i].filename === scriptname) {\n      // Check for admin rights and that there is enough RAM availble to run\n      const script = server.scripts[i];\n      let ramUsage = script.ramUsage;\n      threads = Math.round(Number(threads));\n      if (threads === 0) {\n        return 0;\n      }\n      ramUsage = ramUsage * threads;\n      const ramAvailable = server.maxRam - server.ramUsed;\n\n      if (server.hasAdminRights == false) {\n        workerScript.log(caller, `You do not have root access on '${server.hostname}'`);\n        return 0;\n      } else if (ramUsage > ramAvailable) {\n        workerScript.log(\n          caller,\n          `Cannot run script '${scriptname}' (t=${threads}) on '${server.hostname}' because there is not enough available RAM!`,\n        );\n        return 0;\n      } else {\n        // Able to run script\n        workerScript.log(\n          caller,\n          `'${scriptname}' on '${server.hostname}' with ${threads} threads and args: ${arrayToString(args)}.`,\n        );\n        const runningScriptObj = new RunningScript(script, args);\n        runningScriptObj.threads = threads;\n\n        return startWorkerScript(runningScriptObj, server, workerScript);\n      }\n    }\n  }\n\n  workerScript.log(caller, `Could not find script '${scriptname}' on '${server.hostname}'`);\n  return 0;\n}\n","/**\n * Represents the possible configuration values that can be provided when creating the progress bar text.\n */\ninterface IProgressBarConfiguration {\n  /**\n   * Current progress, taken as a decimal (i.e. '0.6' to represent '60%')\n   */\n  progress?: number;\n\n  /**\n   * Total number of ticks in progress bar. Preferably a factor of 100.\n   */\n  totalTicks?: number;\n}\n\n/**\n * Represents concrete configuration values when creating the progress bar text.\n */\ninterface IProgressBarConfigurationMaterialized extends IProgressBarConfiguration {\n  progress: number;\n  totalTicks: number;\n}\n\n/**\n * Creates a graphical \"progress bar\"\n * e.g.:  [||||---------------]\n * @param params The configuration parameters for the progress bar\n */\nexport function createProgressBarText(params: IProgressBarConfiguration): string {\n  // Default values\n  const defaultParams: IProgressBarConfigurationMaterialized = {\n    progress: 0,\n    totalTicks: 20,\n  };\n\n  // tslint:disable-next-line:prefer-object-spread\n  const derived: IProgressBarConfigurationMaterialized = Object.assign({}, defaultParams, params);\n  // Ensure it is 0..1\n  derived.progress = Math.max(Math.min(derived.progress, 1), 0);\n\n  // This way there is always at least one bar filled in...\n  const bars: number = Math.max(Math.floor(derived.progress / (1 / derived.totalTicks)), 1);\n  const dashes: number = Math.max(derived.totalTicks - bars, 0);\n\n  // String.prototype.repeat isn't completley supported, but good enough for our purposes\n  return `[${\"|\".repeat(bars)}${\"-\".repeat(dashes)}]`;\n}\n","import { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\nimport { Export } from \"./Export\";\n\ninterface IConstructorParams {\n  name?: string;\n}\n\nexport class Material {\n  // Name of material\n  name = \"InitName\";\n\n  // Amount of material owned\n  qty = 0;\n\n  // Material's \"quality\". Unbounded\n  qlt = 0;\n\n  // How much demand the Material has in the market, and the range of possible\n  // values for this \"demand\"\n  dmd = 0;\n  dmdR: number[] = [0, 0];\n\n  // How much competition there is for this Material in the market, and the range\n  // of possible values for this \"competition\"\n  cmp = 0;\n  cmpR: number[] = [0, 0];\n\n  // Maximum volatility of this Materials stats\n  mv = 0;\n\n  // Markup. Determines how high of a price you can charge on the material\n  // compared to the market price without suffering loss in # of sales\n  // Quality is divided by this to determine markup limits\n  // e,g, If mku is 10 and quality is 100 then you can markup prices by 100/10 = 10\n  mku = 0;\n\n  // How much of this material is being bought, sold, imported and produced every second\n  buy = 0;\n  sll = 0;\n  prd = 0;\n  imp = 0;\n\n  // Exports of this material to another warehouse/industry\n  exp: Export[] = [];\n\n  // Total amount of this material exported in the last cycle\n  totalExp = 0;\n\n  // Cost / sec to buy this material. AKA Market Price\n  bCost = 0;\n\n  // Cost / sec to sell this material\n  sCost: string | number = 0;\n\n  // Flags to keep track of whether production and/or sale of this material is limited\n  // [Whether production/sale is limited, limit amount]\n  prdman: [boolean, number] = [false, 0]; // Production\n  sllman: [boolean, string | number] = [false, 0]; // Sale\n\n  // Flags that signal whether automatic sale pricing through Market TA is enabled\n  marketTa1 = false;\n  marketTa2 = false;\n  marketTa2Price = 0;\n\n  constructor(params: IConstructorParams = {}) {\n    if (params.name) {\n      this.name = params.name;\n    }\n    this.init();\n  }\n\n  getMarkupLimit(): number {\n    return this.qlt / this.mku;\n  }\n\n  init(): void {\n    switch (this.name) {\n      case \"Water\":\n        this.dmd = 75;\n        this.dmdR = [65, 85];\n        this.cmp = 50;\n        this.cmpR = [40, 60];\n        this.bCost = 1500;\n        this.mv = 0.2;\n        this.mku = 6;\n        break;\n      case \"Energy\":\n        this.dmd = 90;\n        this.dmdR = [80, 99];\n        this.cmp = 80;\n        this.cmpR = [65, 95];\n        this.bCost = 2000;\n        this.mv = 0.2;\n        this.mku = 6;\n        break;\n      case \"Food\":\n        this.dmd = 80;\n        this.dmdR = [70, 90];\n        this.cmp = 60;\n        this.cmpR = [35, 85];\n        this.bCost = 5000;\n        this.mv = 1;\n        this.mku = 3;\n        break;\n      case \"Plants\":\n        this.dmd = 70;\n        this.dmdR = [20, 90];\n        this.cmp = 50;\n        this.cmpR = [30, 70];\n        this.bCost = 3000;\n        this.mv = 0.6;\n        this.mku = 3.75;\n        break;\n      case \"Metal\":\n        this.dmd = 80;\n        this.dmdR = [75, 85];\n        this.cmp = 70;\n        this.cmpR = [60, 80];\n        this.bCost = 2650;\n        this.mv = 1;\n        this.mku = 6;\n        break;\n      case \"Hardware\":\n        this.dmd = 85;\n        this.dmdR = [80, 90];\n        this.cmp = 80;\n        this.cmpR = [65, 95];\n        this.bCost = 8e3;\n        this.mv = 0.5; //Less mv bc its processed twice\n        this.mku = 1;\n        break;\n      case \"Chemicals\":\n        this.dmd = 55;\n        this.dmdR = [40, 70];\n        this.cmp = 60;\n        this.cmpR = [40, 80];\n        this.bCost = 9e3;\n        this.mv = 1.2;\n        this.mku = 2;\n        break;\n      case \"Real Estate\":\n        this.dmd = 50;\n        this.dmdR = [5, 99];\n        this.cmp = 50;\n        this.cmpR = [25, 75];\n        this.bCost = 80e3;\n        this.mv = 1.5; //Less mv bc its processed twice\n        this.mku = 1.5;\n        break;\n      case \"Drugs\":\n        this.dmd = 60;\n        this.dmdR = [45, 75];\n        this.cmp = 70;\n        this.cmpR = [40, 99];\n        this.bCost = 40e3;\n        this.mv = 1.6;\n        this.mku = 1;\n        break;\n      case \"Robots\":\n        this.dmd = 90;\n        this.dmdR = [80, 9];\n        this.cmp = 90;\n        this.cmpR = [80, 9];\n        this.bCost = 75e3;\n        this.mv = 0.5; //Less mv bc its processed twice\n        this.mku = 1;\n        break;\n      case \"AI Cores\":\n        this.dmd = 90;\n        this.dmdR = [80, 99];\n        this.cmp = 90;\n        this.cmpR = [80, 9];\n        this.bCost = 15e3;\n        this.mv = 0.8; //Less mv bc its processed twice\n        this.mku = 0.5;\n        break;\n      case \"Scientific Research\":\n      case \"InitName\":\n        break;\n      default:\n        console.error(`Invalid material type in init(): ${this.name}`);\n        break;\n    }\n  }\n\n  // Process change in demand, competition, and buy cost of this material\n  processMarket(): void {\n    // The price will change in accordance with demand and competition.\n    // e.g. If demand goes up, then so does price. If competition goes up, price goes down\n    const priceVolatility: number = (Math.random() * this.mv) / 300;\n    const priceChange: number = 1 + priceVolatility;\n\n    //This 1st random check determines whether competition increases or decreases\n    const compVolatility: number = (Math.random() * this.mv) / 100;\n    const compChange: number = 1 + compVolatility;\n    if (Math.random() < 0.5) {\n      this.cmp *= compChange;\n      if (this.cmp > this.cmpR[1]) {\n        this.cmp = this.cmpR[1];\n      }\n      this.bCost *= 1 / priceChange; // Competition increases, so price goes down\n    } else {\n      this.cmp *= 1 / compChange;\n      if (this.cmp < this.cmpR[0]) {\n        this.cmp = this.cmpR[0];\n      }\n      this.bCost *= priceChange; // Competition decreases, so price goes up\n    }\n\n    // This 2nd random check determines whether demand increases or decreases\n    const dmdVolatility: number = (Math.random() * this.mv) / 100;\n    const dmdChange: number = 1 + dmdVolatility;\n    if (Math.random() < 0.5) {\n      this.dmd *= dmdChange;\n      if (this.dmd > this.dmdR[1]) {\n        this.dmd = this.dmdR[1];\n      }\n      this.bCost *= priceChange; // Demand increases, so price goes up\n    } else {\n      this.dmd *= 1 / dmdChange;\n      if (this.dmd < this.dmdR[0]) {\n        this.dmd = this.dmdR[0];\n      }\n      this.bCost *= 1 / priceChange;\n    }\n  }\n\n  copy(): Material {\n    const material = new Material();\n    material.name = this.name;\n    material.qty = this.qty;\n    material.qlt = this.qlt;\n    material.dmd = this.dmd;\n\n    material.cmp = this.cmp;\n\n    material.mv = this.mv;\n    material.mku = this.mku;\n    material.buy = this.buy;\n    material.sll = this.sll;\n    material.prd = this.prd;\n    material.imp = this.imp;\n    material.totalExp = this.totalExp;\n    material.bCost = this.bCost;\n    material.marketTa1 = this.marketTa1;\n    material.marketTa2 = this.marketTa2;\n    material.marketTa2Price = this.marketTa2Price;\n    material.sCost = this.sCost;\n    material.prdman = [this.prdman[0], this.prdman[1]];\n    material.sllman = [this.sllman[0], this.sllman[1]];\n\n    material.dmdR = this.dmdR.slice();\n    material.cmpR = this.cmpR.slice();\n    material.exp = this.exp.slice().map((e) => {\n      return { ind: e.ind, city: e.city, amt: e.amt };\n    });\n    return material;\n  }\n\n  // Serialize the current object to a JSON save state.\n  toJSON(): any {\n    return Generic_toJSON(\"Material\", this);\n  }\n\n  // Initiatizes a Material object from a JSON save state.\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Material {\n    return Generic_fromJSON(Material, value.data);\n  }\n}\n\nReviver.constructors.Material = Material;\n","/**\n * Create a pop-up dialog box using React.\n *\n * Calling this function with the same ID and React Root Component will trigger a re-render\n *\n * @param id The (hopefully) unique identifier for the popup container\n * @param rootComponent Root React Component for the content (NOT the popup containers themselves)\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { Popup } from \"./Popup\";\n\nimport { createElement } from \"../uiHelpers/createElement\";\nimport { removeElementById } from \"../uiHelpers/removeElementById\";\n\nlet gameContainer: HTMLElement;\n\n(function () {\n  function getGameContainer(): void {\n    const container = document.getElementById(\"root\");\n    if (container == null) {\n      throw new Error(`Failed to find game container DOM element`);\n    }\n\n    gameContainer = container;\n    document.removeEventListener(\"DOMContentLoaded\", getGameContainer);\n  }\n\n  document.addEventListener(\"DOMContentLoaded\", getGameContainer);\n})();\n\n// This variable is used to avoid setting the semi-transparent background\n// several times on top of one another. Sometimes there's several popup at once.\nlet deepestPopupId = \"\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function createPopup<T>(\n  id: string,\n  rootComponent: (props: T) => React.ReactElement,\n  props: T,\n  onClose?: () => void,\n): HTMLElement | null {\n  let container = document.getElementById(id);\n  if (container == null) {\n    function onClick(this: HTMLElement, event: MouseEvent): void {\n      if (!event.srcElement) return;\n      if (!(event.srcElement instanceof HTMLElement)) return;\n      const clickedId = (event.srcElement as HTMLElement).id;\n      if (clickedId !== id) return;\n      removePopup(id);\n      if (onClose) onClose();\n    }\n    const backgroundColor = deepestPopupId === \"\" ? \"rgba(0,0,0,0.5)\" : \"rgba(0,0,0,0)\";\n    container = createElement(\"div\", {\n      class: \"popup-box-container\",\n      display: \"flex\",\n      id: id,\n      backgroundColor: backgroundColor,\n      mouseDown: onClick,\n    });\n\n    gameContainer.appendChild(container);\n  }\n\n  if (deepestPopupId === \"\") deepestPopupId = id;\n  ReactDOM.render(\n    <Popup\n      content={rootComponent}\n      id={id}\n      props={props}\n      removePopup={() => {\n        removePopup(id);\n        if (onClose) onClose();\n      }}\n    />,\n    container,\n  );\n\n  return container;\n}\n\n/**\n * Closes a popup created with the createPopup() function above\n */\nexport function removePopup(id: string): void {\n  const content = document.getElementById(`${id}`);\n  if (content == null) return;\n\n  ReactDOM.unmountComponentAtNode(content);\n\n  removeElementById(id);\n  removeElementById(`${id}-close`);\n  if (id === deepestPopupId) deepestPopupId = \"\";\n}\n","import { FactionInfo, FactionInfos } from \"./FactionInfo\";\nimport { favorToRep, repToFavor } from \"./formulas/favor\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\n\nexport class Faction {\n  /**\n   * Flag signalling whether the player has already received an invitation\n   * to this faction\n   */\n  alreadyInvited = false;\n\n  /**\n   * Holds names of all augmentations that this Faction offers\n   */\n  augmentations: string[] = [];\n\n  /**\n   * Amount of favor the player has with this faction.\n   */\n  favor = 0;\n\n  /**\n   * Flag signalling whether player has been banned from this faction\n   */\n  isBanned = false;\n\n  /**\n   * Flag signalling whether player is a member of this faction\n   */\n  isMember = false;\n\n  /**\n   * Name of faction\n   */\n  name = \"\";\n\n  /**\n   * Amount of reputation player has with this faction\n   */\n  playerReputation = 0;\n\n  /**\n   * Reputation from the last \"prestige\" that was not converted to favor.\n   * This reputation rolls over and is used for the next favor calculation\n   */\n  rolloverRep = 0;\n\n  constructor(name = \"\") {\n    this.name = name;\n  }\n\n  getInfo(): FactionInfo {\n    const info = FactionInfos[this.name];\n    if (info == null) {\n      throw new Error(\n        `Missing faction from FactionInfos: ${this.name} this probably means the faction got corrupted somehow`,\n      );\n    }\n\n    return info;\n  }\n\n  gainFavor(): void {\n    if (this.favor == null) {\n      this.favor = 0;\n    }\n    if (this.rolloverRep == null) {\n      this.rolloverRep = 0;\n    }\n    const res = this.getFavorGain();\n    if (res.length !== 2) {\n      console.error(\"Invalid result from getFavorGain() function\");\n      return;\n    }\n    this.favor += res[0];\n    this.rolloverRep = res[1];\n  }\n\n  //Returns an array with [How much favor would be gained, how much rep would be left over]\n  getFavorGain(): number[] {\n    if (this.favor == null) {\n      this.favor = 0;\n    }\n    if (this.rolloverRep == null) {\n      this.rolloverRep = 0;\n    }\n    const storedRep = Math.max(0, favorToRep(this.favor - 1));\n    const totalRep = storedRep + this.rolloverRep + this.playerReputation;\n    const newFavor = Math.floor(repToFavor(totalRep));\n    const newRep = favorToRep(newFavor);\n    return [newFavor - this.favor + 1, totalRep - newRep];\n  }\n\n  /**\n   * Serialize the current object to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"Faction\", this);\n  }\n\n  /**\n   * Initiatizes a Faction object from a JSON save state.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Faction {\n    return Generic_fromJSON(Faction, value.data);\n  }\n}\n\nReviver.constructors.Faction = Faction;\n","// Enums that defined allowed values for setting configuration\n\n/**\n * Allowed values for the 'OwnedAugmentationsOrder' setting\n */\nexport enum PurchaseAugmentationsOrderSetting {\n  Cost,\n  Default,\n  Reputation,\n  Purchasable,\n}\n\n/**\n * Allowed values for the 'OwnedAugmentationsOrder' setting\n */\nexport enum OwnedAugmentationsOrderSetting {\n  Alphabetically,\n  AcquirementTime,\n}\n","import React, { useEffect } from \"react\";\n\ninterface IProps {\n  onKeyDown: (this: Document, event: KeyboardEvent) => void;\n  onFailure: (options?: { automated: boolean }) => void;\n}\n\nexport function KeyHandler(props: IProps): React.ReactElement {\n  useEffect(() => {\n    function press(this: Document, event: KeyboardEvent): void {\n      if (!event.isTrusted) return;\n      const f = props.onKeyDown.bind(this);\n      f(event);\n    }\n    document.addEventListener(\"keydown\", press);\n    return () => document.removeEventListener(\"keydown\", press);\n  });\n\n  // invisible autofocused element that eats all the keypress for the minigames.\n  return <></>;\n}\n","import LinearProgress from \"@mui/material/LinearProgress\";\nimport React, { useState, useEffect } from \"react\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\n\nconst TimerProgress = withStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  bar: {\n    transition: \"none\",\n    backgroundColor: theme.palette.primary.main,\n  },\n}))(LinearProgress);\n\ninterface IProps {\n  millis: number;\n  onExpire: () => void;\n}\n\nexport function GameTimer(props: IProps): React.ReactElement {\n  const [v, setV] = useState(100);\n\n  const tick = 200;\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setV((old) => {\n        if (old <= 0) props.onExpire();\n        return old - (tick / props.millis) * 100;\n      });\n    }, tick);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  // https://stackoverflow.com/questions/55593367/disable-material-uis-linearprogress-animation\n  // TODO(hydroflame): there's like a bug where it triggers the end before the\n  // bar physically reaches the end\n  return (\n    <Grid item xs={12}>\n      <TimerProgress variant=\"determinate\" value={v} color=\"primary\" />\n    </Grid>\n  );\n}\n","interface DifficultySetting {\n  [key: string]: number;\n}\n\ninterface DifficultySettings {\n  Trivial: DifficultySetting;\n  Normal: DifficultySetting;\n  Hard: DifficultySetting;\n  Impossible: DifficultySetting;\n}\n\n// I could use `any` to simply some of this but I also want to take advantage\n// of the type safety that typescript provides. I'm just not sure how in this\n// case.\nexport function interpolate(settings: DifficultySettings, n: number, out: DifficultySetting): DifficultySetting {\n  // interpolates between 2 difficulties.\n  function lerpD(a: DifficultySetting, b: DifficultySetting, t: number): DifficultySetting {\n    // interpolates between 2 numbers.\n    function lerp(x: number, y: number, t: number): number {\n      return (1 - t) * x + t * y;\n    }\n    for (const key of Object.keys(a)) {\n      out[key] = lerp(a[key], b[key], t);\n    }\n    return a;\n  }\n  if (n < 0) return lerpD(settings.Trivial, settings.Trivial, 0);\n  if (n >= 0 && n < 1) return lerpD(settings.Trivial, settings.Normal, n);\n  if (n >= 1 && n < 2) return lerpD(settings.Normal, settings.Hard, n - 1);\n  if (n >= 2 && n < 3) return lerpD(settings.Hard, settings.Impossible, n - 2);\n  return lerpD(settings.Impossible, settings.Impossible, 0);\n}\n","/**\n * Global pool of all active scripts (scripts that are currently running)\n */\nimport { WorkerScript } from \"./WorkerScript\";\n\nexport const workerScripts: Map<number, WorkerScript> = new Map();\n","import * as React from \"react\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\n\nconst gainLimit = 10e9;\n\nexport function win(p: IPlayer, n: number): void {\n  p.gainMoney(n);\n  p.recordMoneySource(n, \"casino\");\n}\n\nexport function reachedLimit(p: IPlayer): boolean {\n  const reached = p.getCasinoWinnings() > gainLimit;\n  if (reached) {\n    dialogBoxCreate(<>Alright cheater get out of here. You're not allowed here anymore.</>);\n  }\n  return reached;\n}\n\nexport class Game<T, U> extends React.Component<T, U> {\n  win(p: IPlayer, n: number): void {\n    p.gainMoney(n);\n    p.recordMoneySource(n, \"casino\");\n  }\n\n  reachedLimit(p: IPlayer): boolean {\n    const reached = p.getCasinoWinnings() > gainLimit;\n    if (reached) {\n      dialogBoxCreate(<>Alright cheater get out of here. You're not allowed here anymore.</>);\n    }\n    return reached;\n  }\n}\n","/**\n * Stock Market Helper Functions\n */\nimport { Stock } from \"./Stock\";\nimport { PositionTypes } from \"./data/PositionTypes\";\nimport { CONSTANTS } from \"../Constants\";\n\n// Amount by which a stock's forecast changes during each price movement\nexport const forecastChangePerPriceMovement = 0.006;\n\n/**\n * Calculate the total cost of a \"buy\" transaction. This accounts for spread and commission.\n * @param {Stock} stock - Stock being purchased\n * @param {number} shares - Number of shares being transacted\n * @param {PositionTypes} posType - Long or short position\n * @returns {number | null} Total transaction cost. Returns null for an invalid transaction\n */\nexport function getBuyTransactionCost(stock: Stock, shares: number, posType: PositionTypes): number | null {\n  if (isNaN(shares) || shares <= 0 || !(stock instanceof Stock)) {\n    return null;\n  }\n\n  // Cap the 'shares' arg at the stock's maximum shares. This'll prevent\n  // hanging in the case when a really big number is passed in\n  shares = Math.min(shares, stock.maxShares);\n\n  const isLong = posType === PositionTypes.Long;\n\n  // If the number of shares doesn't trigger a price movement, its a simple calculation\n  if (isLong) {\n    return shares * stock.getAskPrice() + CONSTANTS.StockMarketCommission;\n  } else {\n    return shares * stock.getBidPrice() + CONSTANTS.StockMarketCommission;\n  }\n}\n\n/**\n * Calculate the TOTAL amount of money gained from a sale (NOT net profit). This accounts\n * for spread and commission.\n * @param {Stock} stock - Stock being sold\n * @param {number} shares - Number of sharse being transacted\n * @param {PositionTypes} posType - Long or short position\n * @returns {number | null} Amount of money gained from transaction. Returns null for an invalid transaction\n */\nexport function getSellTransactionGain(stock: Stock, shares: number, posType: PositionTypes): number | null {\n  if (isNaN(shares) || shares <= 0 || !(stock instanceof Stock)) {\n    return null;\n  }\n\n  // Cap the 'shares' arg at the stock's maximum shares. This'll prevent\n  // hanging in the case when a really big number is passed in\n  shares = Math.min(shares, stock.maxShares);\n\n  const isLong = posType === PositionTypes.Long;\n  if (isLong) {\n    return shares * stock.getBidPrice() - CONSTANTS.StockMarketCommission;\n  } else {\n    // Calculating gains for a short position requires calculating the profit made\n    const origCost = shares * stock.playerAvgShortPx;\n    const profit = (stock.playerAvgShortPx - stock.getAskPrice()) * shares - CONSTANTS.StockMarketCommission;\n\n    return origCost + profit;\n  }\n}\n\n/**\n * Processes a stock's change in forecast & second-order forecast\n * whenever it is transacted\n * @param {Stock} stock - Stock being sold\n * @param {number} shares - Number of sharse being transacted\n * @param {PositionTypes} posType - Long or short position\n */\nexport function processTransactionForecastMovement(stock: Stock, shares: number): void {\n  if (isNaN(shares) || shares <= 0 || !(stock instanceof Stock)) {\n    return;\n  }\n\n  // Cap the 'shares' arg at the stock's maximum shares. This'll prevent\n  // hanging in the case when a really big number is passed in\n  shares = Math.min(shares, stock.maxShares);\n\n  // If there's only going to be one iteration at most\n  const firstShares = stock.shareTxUntilMovement;\n  if (shares <= firstShares) {\n    stock.shareTxUntilMovement -= shares;\n    if (stock.shareTxUntilMovement <= 0) {\n      stock.shareTxUntilMovement = stock.shareTxForMovement;\n      stock.influenceForecast(forecastChangePerPriceMovement);\n      stock.influenceForecastForecast(forecastChangePerPriceMovement * (stock.mv / 100));\n    }\n\n    return;\n  }\n\n  // Calculate how many iterations of price changes we need to account for\n  const remainingShares = shares - firstShares;\n  let numIterations = 1 + Math.ceil(remainingShares / stock.shareTxForMovement);\n\n  // If on the offchance we end up perfectly at the next price movement\n  stock.shareTxUntilMovement =\n    stock.shareTxForMovement - ((shares - stock.shareTxUntilMovement) % stock.shareTxForMovement);\n  if (stock.shareTxUntilMovement === stock.shareTxForMovement || stock.shareTxUntilMovement <= 0) {\n    ++numIterations;\n    stock.shareTxUntilMovement = stock.shareTxForMovement;\n  }\n\n  // Forecast always decreases in magnitude\n  const forecastChange = forecastChangePerPriceMovement * (numIterations - 1);\n  const forecastForecastChange = forecastChange * (stock.mv / 100);\n  stock.influenceForecast(forecastChange);\n  stock.influenceForecastForecast(forecastForecastChange);\n}\n\n/**\n * Calculate the maximum number of shares of a stock that can be purchased.\n * Handles mid-transaction price movements, both L and S positions, etc.\n * Used for the \"Buy Max\" button in the UI\n * @param {Stock} stock - Stock being purchased\n * @param {PositionTypes} posType - Long or short position\n * @param {number} money - Amount of money player has\n * @returns maximum number of shares that the player can purchase\n */\nexport function calculateBuyMaxAmount(stock: Stock, posType: PositionTypes, money: number): number {\n  if (!(stock instanceof Stock)) {\n    return 0;\n  }\n\n  const isLong = posType === PositionTypes.Long;\n\n  const remainingMoney = money - CONSTANTS.StockMarketCommission;\n  const currPrice = isLong ? stock.getAskPrice() : stock.getBidPrice();\n\n  return Math.floor(remainingMoney / currPrice);\n}\n","import { gangMemberUpgradesMetadata } from \"./data/upgrades\";\nimport { GangMemberUpgrade } from \"./GangMemberUpgrade\";\n\nexport const GangMemberUpgrades: {\n  [key: string]: GangMemberUpgrade;\n} = {};\n\n(function () {\n  gangMemberUpgradesMetadata.forEach((e) => {\n    GangMemberUpgrades[e.name] = new GangMemberUpgrade(e.name, e.cost, e.upgType, e.mults);\n  });\n})();\n","// Base class representing a person-like object\nimport { Augmentation } from \"../Augmentation/Augmentation\";\nimport { IPlayerOwnedAugmentation } from \"../Augmentation/PlayerOwnedAugmentation\";\nimport { BitNodeMultipliers } from \"../BitNode/BitNodeMultipliers\";\nimport { CityName } from \"../Locations/data/CityNames\";\nimport { CONSTANTS } from \"../Constants\";\nimport { calculateSkill } from \"./formulas/skill\";\nimport { calculateIntelligenceBonus } from \"./formulas/intelligence\";\n\n// Interface that defines a generic object used to track experience/money\n// earnings for tasks\nexport interface ITaskTracker {\n  hack: number;\n  str: number;\n  def: number;\n  dex: number;\n  agi: number;\n  cha: number;\n  money: number;\n}\n\nexport function createTaskTracker(): ITaskTracker {\n  return {\n    hack: 0,\n    str: 0,\n    def: 0,\n    dex: 0,\n    agi: 0,\n    cha: 0,\n    money: 0,\n  };\n}\n\nexport abstract class Person {\n  /**\n   * Stats\n   */\n  hacking_skill = 1;\n  strength = 1;\n  defense = 1;\n  dexterity = 1;\n  agility = 1;\n  charisma = 1;\n  intelligence = 1;\n  hp = 10;\n  max_hp = 10;\n\n  /**\n   * Experience\n   */\n  hacking_exp = 0;\n  strength_exp = 0;\n  defense_exp = 0;\n  dexterity_exp = 0;\n  agility_exp = 0;\n  charisma_exp = 0;\n  intelligence_exp = 0;\n\n  /**\n   * Multipliers\n   */\n  hacking_mult = 1;\n  strength_mult = 1;\n  defense_mult = 1;\n  dexterity_mult = 1;\n  agility_mult = 1;\n  charisma_mult = 1;\n\n  hacking_exp_mult = 1;\n  strength_exp_mult = 1;\n  defense_exp_mult = 1;\n  dexterity_exp_mult = 1;\n  agility_exp_mult = 1;\n  charisma_exp_mult = 1;\n\n  hacking_chance_mult = 1;\n  hacking_speed_mult = 1;\n  hacking_money_mult = 1;\n  hacking_grow_mult = 1;\n\n  company_rep_mult = 1;\n  faction_rep_mult = 1;\n\n  crime_money_mult = 1;\n  crime_success_mult = 1;\n\n  work_money_mult = 1;\n\n  hacknet_node_money_mult = 1;\n  hacknet_node_purchase_cost_mult = 1;\n  hacknet_node_ram_cost_mult = 1;\n  hacknet_node_core_cost_mult = 1;\n  hacknet_node_level_cost_mult = 1;\n\n  bladeburner_max_stamina_mult = 1;\n  bladeburner_stamina_gain_mult = 1;\n  bladeburner_analysis_mult = 1;\n  bladeburner_success_chance_mult = 1;\n\n  /**\n   * Augmentations\n   */\n  augmentations: IPlayerOwnedAugmentation[] = [];\n  queuedAugmentations: IPlayerOwnedAugmentation[] = [];\n\n  /**\n   * City that the person is in\n   */\n  city: CityName = CityName.Sector12;\n\n  /**\n   * Updates this object's multipliers for the given augmentation\n   */\n  applyAugmentation(aug: Augmentation): void {\n    for (const mult in aug.mults) {\n      if ((this as any)[mult] == null) {\n        console.warn(`Augmentation has unrecognized multiplier property: ${mult}`);\n      } else {\n        (this as any)[mult] *= aug.mults[mult];\n      }\n    }\n  }\n\n  /**\n   * Given an experience amount and stat multiplier, calculates the\n   * stat level. Stat-agnostic (same formula for every stat)\n   */\n  calculateStat(exp: number, mult = 1): number {\n    return calculateSkill(exp, mult);\n  }\n\n  /**\n   * Calculate and return the amount of faction reputation earned per cycle\n   * when doing Field Work for a faction\n   */\n  getFactionFieldWorkRepGain(): number {\n    const t =\n      (0.9 *\n        (this.hacking_skill / CONSTANTS.MaxSkillLevel +\n          this.strength / CONSTANTS.MaxSkillLevel +\n          this.defense / CONSTANTS.MaxSkillLevel +\n          this.dexterity / CONSTANTS.MaxSkillLevel +\n          this.agility / CONSTANTS.MaxSkillLevel +\n          this.charisma / CONSTANTS.MaxSkillLevel)) /\n      5.5;\n    return t * this.faction_rep_mult;\n  }\n\n  /**\n   * Calculate and return the amount of faction reputation earned per cycle\n   * when doing Hacking Work for a faction\n   */\n  getFactionHackingWorkRepGain(): number {\n    return (this.hacking_skill / CONSTANTS.MaxSkillLevel) * this.faction_rep_mult;\n  }\n\n  /**\n   * Calculate and return the amount of faction reputation earned per cycle\n   * when doing Security Work for a faction\n   */\n  getFactionSecurityWorkRepGain(): number {\n    const t =\n      (0.9 *\n        (this.hacking_skill / CONSTANTS.MaxSkillLevel +\n          this.strength / CONSTANTS.MaxSkillLevel +\n          this.defense / CONSTANTS.MaxSkillLevel +\n          this.dexterity / CONSTANTS.MaxSkillLevel +\n          this.agility / CONSTANTS.MaxSkillLevel)) /\n      4.5;\n    return t * this.faction_rep_mult;\n  }\n\n  /**\n   * Reset all multipliers to 1\n   */\n  resetMultipliers(): void {\n    this.hacking_mult = 1;\n    this.strength_mult = 1;\n    this.defense_mult = 1;\n    this.dexterity_mult = 1;\n    this.agility_mult = 1;\n    this.charisma_mult = 1;\n\n    this.hacking_exp_mult = 1;\n    this.strength_exp_mult = 1;\n    this.defense_exp_mult = 1;\n    this.dexterity_exp_mult = 1;\n    this.agility_exp_mult = 1;\n    this.charisma_exp_mult = 1;\n\n    this.company_rep_mult = 1;\n    this.faction_rep_mult = 1;\n\n    this.crime_money_mult = 1;\n    this.crime_success_mult = 1;\n\n    this.work_money_mult = 1;\n  }\n\n  /**\n   * Update all stat levels\n   */\n  updateStatLevels(): void {\n    this.hacking_skill = Math.max(\n      1,\n      Math.floor(this.calculateStat(this.hacking_exp, this.hacking_mult * BitNodeMultipliers.HackingLevelMultiplier)),\n    );\n    this.strength = Math.max(\n      1,\n      Math.floor(\n        this.calculateStat(this.strength_exp, this.strength_mult * BitNodeMultipliers.StrengthLevelMultiplier),\n      ),\n    );\n    this.defense = Math.max(\n      1,\n      Math.floor(this.calculateStat(this.defense_exp, this.defense_mult * BitNodeMultipliers.DefenseLevelMultiplier)),\n    );\n    this.dexterity = Math.max(\n      1,\n      Math.floor(\n        this.calculateStat(this.dexterity_exp, this.dexterity_mult * BitNodeMultipliers.DexterityLevelMultiplier),\n      ),\n    );\n    this.agility = Math.max(\n      1,\n      Math.floor(this.calculateStat(this.agility_exp, this.agility_mult * BitNodeMultipliers.AgilityLevelMultiplier)),\n    );\n    this.charisma = Math.max(\n      1,\n      Math.floor(\n        this.calculateStat(this.charisma_exp, this.charisma_mult * BitNodeMultipliers.CharismaLevelMultiplier),\n      ),\n    );\n\n    const ratio: number = this.hp / this.max_hp;\n    this.max_hp = Math.floor(10 + this.defense / 10);\n    this.hp = Math.round(this.max_hp * ratio);\n  }\n\n  getIntelligenceBonus(weight: number): number {\n    return calculateIntelligenceBonus(this.intelligence, weight);\n  }\n}\n","import { CONSTANTS } from \"../Constants\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { IPlayerOrSleeve } from \"../PersonObjects/IPlayerOrSleeve\";\nimport { IRouter } from \"../ui/Router\";\nimport { WorkerScript } from \"../Netscript/WorkerScript\";\n\nexport interface IConstructorParams {\n  hacking_success_weight?: number;\n  strength_success_weight?: number;\n  defense_success_weight?: number;\n  dexterity_success_weight?: number;\n  agility_success_weight?: number;\n  charisma_success_weight?: number;\n  hacking_exp?: number;\n  strength_exp?: number;\n  defense_exp?: number;\n  dexterity_exp?: number;\n  agility_exp?: number;\n  charisma_exp?: number;\n  intelligence_exp?: number;\n\n  kills?: number;\n}\n\nexport class Crime {\n  // Number representing the difficulty of the crime. Used for success chance calculations\n  difficulty = 0;\n\n  // Amount of karma lost for SUCCESSFULLY committing this crime\n  karma = 0;\n\n  // How many people die as a result of this crime\n  kills = 0;\n\n  // How much money is given by the\n  money = 0;\n\n  // Name of crime\n  name = \"\";\n\n  // Milliseconds it takes to attempt the crime\n  time = 0;\n\n  // Corresponding type in CONSTANTS. Contains a description for the crime activity\n  type = \"\";\n\n  // Weighting factors that determine how stats affect the success rate of this crime\n  hacking_success_weight = 0;\n  strength_success_weight = 0;\n  defense_success_weight = 0;\n  dexterity_success_weight = 0;\n  agility_success_weight = 0;\n  charisma_success_weight = 0;\n\n  // How much stat experience is granted by this crime\n  hacking_exp = 0;\n  strength_exp = 0;\n  defense_exp = 0;\n  dexterity_exp = 0;\n  agility_exp = 0;\n  charisma_exp = 0;\n  intelligence_exp = 0;\n\n  constructor(name = \"\", type = \"\", time = 0, money = 0, difficulty = 0, karma = 0, params: IConstructorParams = {}) {\n    this.name = name;\n    this.type = type;\n    this.time = time;\n    this.money = money;\n    this.difficulty = difficulty;\n    this.karma = karma;\n\n    this.hacking_success_weight = params.hacking_success_weight ? params.hacking_success_weight : 0;\n    this.strength_success_weight = params.strength_success_weight ? params.strength_success_weight : 0;\n    this.defense_success_weight = params.defense_success_weight ? params.defense_success_weight : 0;\n    this.dexterity_success_weight = params.dexterity_success_weight ? params.dexterity_success_weight : 0;\n    this.agility_success_weight = params.agility_success_weight ? params.agility_success_weight : 0;\n    this.charisma_success_weight = params.charisma_success_weight ? params.charisma_success_weight : 0;\n\n    this.hacking_exp = params.hacking_exp ? params.hacking_exp : 0;\n    this.strength_exp = params.strength_exp ? params.strength_exp : 0;\n    this.defense_exp = params.defense_exp ? params.defense_exp : 0;\n    this.dexterity_exp = params.dexterity_exp ? params.dexterity_exp : 0;\n    this.agility_exp = params.agility_exp ? params.agility_exp : 0;\n    this.charisma_exp = params.charisma_exp ? params.charisma_exp : 0;\n    this.intelligence_exp = params.intelligence_exp ? params.intelligence_exp : 0;\n\n    this.kills = params.kills ? params.kills : 0;\n  }\n\n  commit(router: IRouter, p: IPlayer, div = 1, workerScript: WorkerScript | null = null): number {\n    if (div <= 0) {\n      div = 1;\n    }\n    p.startCrime(\n      router,\n      this.type,\n      this.hacking_exp / div,\n      this.strength_exp / div,\n      this.defense_exp / div,\n      this.dexterity_exp / div,\n      this.agility_exp / div,\n      this.charisma_exp / div,\n      this.money / div,\n      this.time,\n      workerScript,\n    );\n\n    return this.time;\n  }\n\n  successRate(p: IPlayerOrSleeve): number {\n    let chance: number =\n      this.hacking_success_weight * p.hacking_skill +\n      this.strength_success_weight * p.strength +\n      this.defense_success_weight * p.defense +\n      this.dexterity_success_weight * p.dexterity +\n      this.agility_success_weight * p.agility +\n      this.charisma_success_weight * p.charisma +\n      CONSTANTS.IntelligenceCrimeWeight * p.intelligence;\n    chance /= CONSTANTS.MaxSkillLevel;\n    chance /= this.difficulty;\n    chance *= p.crime_success_mult;\n    chance *= p.getIntelligenceBonus(1);\n\n    return Math.min(chance, 1);\n  }\n}\n","import React from \"react\";\nimport { BitNodeMultipliers } from \"./BitNodeMultipliers\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { IMap } from \"../types\";\n\nclass BitNode {\n  // A short description, or tagline, about the BitNode\n  desc: string;\n\n  // A long, detailed overview of the BitNode\n  info: JSX.Element;\n\n  // Name of BitNode\n  name: string;\n\n  // BitNode number\n  number: number;\n\n  difficulty: 0 | 1 | 2;\n\n  constructor(n: number, difficulty: 0 | 1 | 2, name: string, desc = \"\", info: JSX.Element = <></>) {\n    this.number = n;\n    this.difficulty = difficulty;\n    this.name = name;\n    this.desc = desc;\n    this.info = info;\n  }\n}\n\nexport const BitNodes: IMap<BitNode> = {};\n\nBitNodes[\"BitNode1\"] = new BitNode(\n  1,\n  0,\n  \"Source Genesis\",\n  \"The original BitNode\",\n  (\n    <>\n      The first BitNode created by the Enders to imprison the minds of humans. It became the prototype and\n      testing-grounds for all of the BitNodes that followed.\n      <br />\n      <br />\n      This is the first BitNode that you play through. It has no special modifications or mechanics.\n      <br />\n      <br />\n      Destroying this BitNode will give you Source-File 1, or if you already have this Source-File it will upgrade its\n      level up to a maximum of 3. This Source-File lets the player start with 32GB of RAM on his/her home computer when\n      entering a new BitNode, and also increases all of the player's multipliers by:\n      <br />\n      <br />\n      Level 1: 16%\n      <br />\n      Level 2: 24%\n      <br />\n      Level 3: 28%\n    </>\n  ),\n);\nBitNodes[\"BitNode2\"] = new BitNode(\n  2,\n  0,\n  \"Rise of the Underworld\",\n  \"From the shadows, they rose\", //Gangs\n  (\n    <>\n      From the shadows, they rose.\n      <br />\n      <br />\n      Organized crime groups quickly filled the void of power left behind from the collapse of Western government in the\n      2050s. As society and civlization broke down, people quickly succumbed to the innate human impulse of evil and\n      savagery. The organized crime factions quickly rose to the top of the modern world.\n      <br />\n      <br />\n      In this BitNode:\n      <br />\n      <br />\n      Your hacking level is reduced by 20%\n      <br />\n      The growth rate and maximum amount of money available on servers are significantly decreased\n      <br />\n      The amount of money gained from crimes and Infiltration is tripled\n      <br />\n      Certain Factions (Slum Snakes, Tetrads, The Syndicate, The Dark Army, Speakers for the Dead, NiteSec, The Black\n      Hand) give the player the ability to form and manage their own gangs. These gangs will earn the player money and\n      reputation with the corresponding Faction\n      <br />\n      Every Augmentation in the game will be available through the Factions listed above\n      <br />\n      For every Faction NOT listed above, reputation gains are halved\n      <br />\n      You will no longer gain passive reputation with Factions\n      <br />\n      <br />\n      Destroying this BitNode will give you Source-File 2, or if you already have this Source-File it will upgrade its\n      level up to a maximum of 3. This Source-File allows you to form gangs in other BitNodes once your karma decreases\n      to a certain value. It also increases the player's crime success rate, crime money, and charisma multipliers by:\n      <br />\n      <br />\n      Level 1: 24%\n      <br />\n      Level 2: 36%\n      <br />\n      Level 3: 42%\n    </>\n  ),\n);\nBitNodes[\"BitNode3\"] = new BitNode(\n  3,\n  0,\n  \"Corporatocracy\",\n  \"The Price of Civilization\",\n  (\n    <>\n      Our greatest illusion is that a healthy society can revolve around a single-minded pursuit of wealth.\n      <br />\n      <br />\n      Sometime in the early 21st century economic and political globalization turned the world into a corporatocracy,\n      and it never looked back. Now, the privileged elite will happily bankrupt their own countrymen, decimate their own\n      community, and evict their neighbors from houses in their desperate bid to increase their wealth.\n      <br />\n      <br />\n      In this BitNode you can create and manage your own corporation. Running a successful corporation has the potential\n      of generating massive profits. All other forms of income are reduced by 75%. Furthermore: <br />\n      <br />\n      The price and reputation cost of all Augmentations is tripled\n      <br />\n      The starting and maximum amount of money on servers is reduced by 75%\n      <br />\n      Server growth rate is reduced by 80%\n      <br />\n      You now only need 75 favour with a faction in order to donate to it, rather than 150\n      <br />\n      <br />\n      Destroying this BitNode will give you Source-File 3, or if you already have this Source-File it will upgrade its\n      level up to a maximum of 3. This Source-File lets you create corporations on other BitNodes (although some\n      BitNodes will disable this mechanic). This Source-File also increases your charisma and company salary multipliers\n      by:\n      <br />\n      Level 1: 8%\n      <br />\n      Level 2: 12%\n      <br />\n      Level 3: 14%\n    </>\n  ),\n);\nBitNodes[\"BitNode4\"] = new BitNode(\n  4,\n  1,\n  \"The Singularity\",\n  \"The Man and the Machine\",\n  (\n    <>\n      The Singularity has arrived. The human race is gone, replaced by artificially superintelligent beings that are\n      more machine than man. <br />\n      <br />\n      In this BitNode, progressing is significantly harder. Experience gain rates for all stats are reduced. Most\n      methods of earning money will now give significantly less.\n      <br />\n      <br />\n      In this BitNode you will gain access to a new set of Netscript Functions known as Singularity Functions. These\n      functions allow you to control most aspects of the game through scripts, including working for factions/companies,\n      purchasing/installing Augmentations, and creating programs.\n      <br />\n      <br />\n      Destroying this BitNode will give you Source-File 4, or if you already have this Source-File it will upgrade its\n      level up to a maximum of 3. This Source-File lets you access and use the Singularity Functions in other BitNodes.\n      Each level of this Source-File will open up more Singularity Functions that you can use.\n    </>\n  ),\n);\nBitNodes[\"BitNode5\"] = new BitNode(\n  5,\n  1,\n  \"Artificial Intelligence\",\n  \"Posthuman\",\n  (\n    <>\n      They said it couldn't be done. They said the human brain, along with its consciousness and intelligence, couldn't\n      be replicated. They said the complexity of the brain results from unpredictable, nonlinear interactions that\n      couldn't be modeled by 1's and 0's. They were wrong.\n      <br />\n      <br />\n      In this BitNode:\n      <br />\n      <br />\n      The base security level of servers is doubled\n      <br />\n      The starting money on servers is halved, but the maximum money remains the same\n      <br />\n      Most methods of earning money now give significantly less\n      <br />\n      Infiltration gives 50% more reputation and money\n      <br />\n      Corporations have 50% lower valuations and are therefore less profitable\n      <br />\n      Augmentations are more expensive\n      <br />\n      Hacking experience gain rates are reduced\n      <br />\n      <br />\n      Destroying this BitNode will give you Source-File 5, or if you already have this Source-File it will upgrade its\n      level up to a maximum of 3. This Source-File grants you a special new stat called Intelligence. Intelligence is\n      unique because it is permanent and persistent (it never gets reset back to 1). However gaining Intelligence\n      experience is much slower than other stats, and it is also hidden (you won't know when you gain experience and how\n      much). Higher Intelligence levels will boost your production for many actions in the game. <br />\n      <br />\n      In addition, this Source-File will unlock the getBitNodeMultipliers() and getServer() Netscript functions, as well\n      as the formulas API, and will also raise all of your hacking-related multipliers by:\n      <br />\n      <br />\n      Level 1: 8%\n      <br />\n      Level 2: 12%\n      <br />\n      Level 3: 14%\n    </>\n  ),\n);\nBitNodes[\"BitNode6\"] = new BitNode(\n  6,\n  1,\n  \"Bladeburners\",\n  \"Like Tears in Rain\",\n  (\n    <>\n      In the middle of the 21st century, OmniTek Incorporated began designing and manufacturing advanced synthetic\n      androids, or Synthoids for short. They achieved a major technological breakthrough in the sixth generation of\n      their Synthoid design, called MK-VI, by developing a hyperintelligent AI. Many argue that this was the first\n      sentient AI ever created. This resulted in Synthoid models that were stronger, faster, and more intelligent than\n      the humans that had created them.\n      <br />\n      <br />\n      In this BitNode you will be able to access the Bladeburner Division at the NSA, which provides a new mechanic for\n      progression. Furthermore:\n      <br />\n      <br />\n      Hacking and Hacknet Nodes will be less profitable\n      <br />\n      Your hacking level is reduced by 65%\n      <br />\n      Hacking experience gain from scripts is reduced by 75%\n      <br />\n      Corporations have 80% lower valuations and are therefore less profitable\n      <br />\n      Working for companies is 50% less profitable\n      <br />\n      Crimes and Infiltration are 25% less profitable\n      <br />\n      <br />\n      Destroying this BitNode will give you Source-File 6, or if you already have this Source-File it will upgrade its\n      level up to a maximum of 3. This Source-File allows you to access the NSA's Bladeburner Division in other\n      BitNodes. In addition, this Source-File will raise both the level and experience gain rate of all your combat\n      stats by:\n      <br />\n      <br />\n      Level 1: 8%\n      <br />\n      Level 2: 12%\n      <br />\n      Level 3: 14%\n    </>\n  ),\n);\nBitNodes[\"BitNode7\"] = new BitNode(\n  7,\n  2,\n  \"Bladeburners 2079\",\n  \"More human than humans\",\n  (\n    <>\n      In the middle of the 21st century, you were doing cutting-edge work at OmniTek Incorporated as part of the AI\n      design team for advanced synthetic androids, or Synthoids for short. You helped achieve a major technological\n      breakthrough in the sixth generation of the company's Synthoid design, called MK-VI, by developing a\n      hyperintelligent AI. Many argue that this was the first sentient AI ever created. This resulted in Synthoid models\n      that were stronger, faster, and more intelligent than the humans that had created them.\n      <br />\n      <br />\n      In this BitNode you will be able to access the Bladeburner API, which allows you to access Bladeburner\n      functionality through Netscript. Furthermore: <br />\n      <br />\n      The rank you gain from Bladeburner contracts/operations is reduced by 40%\n      <br />\n      Bladeburner skills cost twice as many skill points\n      <br />\n      Augmentations are 3x more expensive\n      <br />\n      Hacking and Hacknet Nodes will be significantly less profitable\n      <br />\n      Your hacking level is reduced by 65%\n      <br />\n      Hacking experience gain from scripts is reduced by 75%\n      <br />\n      Corporations have 80% lower valuations and are therefore less profitable\n      <br />\n      Working for companies is 50% less profitable\n      <br />\n      Crimes and Infiltration are 25% less profitable\n      <br />\n      <br />\n      Destroying this BitNode will give you Source-File 7, or if you already have this Source-File it will upgrade its\n      level up to a maximum of 3. This Source-File allows you to access the Bladeburner Netscript API in other BitNodes.\n      In addition, this Source-File will increase all of your Bladeburner multipliers by:\n      <br />\n      <br />\n      Level 1: 8%\n      <br />\n      Level 2: 12%\n      <br />\n      Level 3: 14%\n    </>\n  ),\n);\nBitNodes[\"BitNode8\"] = new BitNode(\n  8,\n  2,\n  \"Ghost of Wall Street\",\n  \"Money never sleeps\",\n  (\n    <>\n      You are trying to make a name for yourself as an up-and-coming hedge fund manager on Wall Street.\n      <br />\n      <br />\n      In this BitNode:\n      <br />\n      <br />\n      You start with $250 million\n      <br />\n      The only way to earn money is by trading on the stock market\n      <br />\n      You start with a WSE membership and access to the TIX API\n      <br />\n      You are able to short stocks and place different types of orders (limit/stop)\n      <br />\n      You can immediately donate to factions to gain reputation\n      <br />\n      <br />\n      Destroying this BitNode will give you Source-File 8, or if you already have this Source-File it will upgrade its\n      level up to a maximum of 3. This Source-File grants the following benefits:\n      <br />\n      <br />\n      Level 1: Permanent access to WSE and TIX API\n      <br />\n      Level 2: Ability to short stocks in other BitNodes\n      <br />\n      Level 3: Ability to use limit/stop orders in other BitNodes\n      <br />\n      <br />\n      This Source-File also increases your hacking growth multipliers by:\n      <br />\n      Level 1: 12%\n      <br />\n      Level 2: 18%\n      <br />\n      Level 3: 21%\n    </>\n  ),\n);\nBitNodes[\"BitNode9\"] = new BitNode(\n  9,\n  2,\n  \"Hacktocracy\",\n  \"Hacknet Unleashed\",\n  (\n    <>\n      When Fulcrum Technologies released their open-source Linux distro Chapeau, it quickly became the OS of choice for\n      the underground hacking community. Chapeau became especially notorious for powering the Hacknet, a global,\n      decentralized network used for nefarious purposes. Fulcrum quickly abandoned the project and dissociated\n      themselves from it.\n      <br />\n      <br />\n      This BitNode unlocks the Hacknet Server, an upgraded version of the Hacknet Node. Hacknet Servers generate hashes,\n      which can be spent on a variety of different upgrades.\n      <br />\n      <br />\n      In this BitNode:\n      <br />\n      <br />\n      Your stats are significantly decreased\n      <br />\n      You cannnot purchase additional servers\n      <br />\n      Hacking is significantly less profitable\n      <br />\n      <br />\n      Destroying this BitNode will give you Source-File 9, or if you already have this Source-File it will upgrade its\n      level up to a maximum of 3. This Source-File grants the following benefits:\n      <br />\n      <br />\n      Level 1: Permanently unlocks the Hacknet Server in other BitNodes\n      <br />\n      Level 2: You start with 128GB of RAM on your home computer when entering a new BitNode\n      <br />\n      Level 3: Grants a highly-upgraded Hacknet Server when entering a new BitNode\n      <br />\n      <br />\n      (Note that the Level 3 effect of this Source-File only applies when entering a new BitNode, NOT when installing\n      Augmentations)\n    </>\n  ),\n);\nBitNodes[\"BitNode10\"] = new BitNode(\n  10,\n  2,\n  \"Digital Carbon\",\n  \"Your body is not who you are\",\n  (\n    <>\n      In 2084, VitaLife unveiled to the world the Persona Core, a technology that allowed people to digitize their\n      consciousness. Their consciousness could then be transferred into Synthoids or other bodies by trasmitting the\n      digitized data. Human bodies became nothing more than 'sleeves' for the human consciousness. Mankind had finally\n      achieved immortality - at least for those that could afford it.\n      <br />\n      <br />\n      This BitNode unlocks Sleeve technology. Sleeve technology allows you to:\n      <br />\n      <br />\n      1. Re-sleeve: Purchase and transfer your consciousness into a new body\n      <br />\n      2. Duplicate Sleeves: Duplicate your consciousness into Synthoids, allowing you to perform different tasks\n      synchronously\n      <br />\n      <br />\n      In this BitNode:\n      <br />\n      <br />\n      Your stats are significantly decreased\n      <br />\n      All methods of gaining money are half as profitable (except Stock Market)\n      <br />\n      Purchased servers are more expensive, have less max RAM, and a lower maximum limit\n      <br />\n      Augmentations are 5x as expensive and require twice as much reputation\n      <br />\n      <br />\n      Destroying this BitNode will give you Source-File 10, or if you already have this Source-File it will upgrade its\n      level up to a maximum of 3. This Source-File unlocks Sleeve technology in other BitNodes. Each level of this\n      Source-File also grants you a Duplicate Sleeve\n    </>\n  ),\n);\nBitNodes[\"BitNode11\"] = new BitNode(\n  11,\n  1,\n  \"The Big Crash\",\n  \"Okay. Sell it all.\",\n  (\n    <>\n      The 2050s was defined by the massive amounts of violent civil unrest and anarchic rebellion that rose all around\n      the world. It was this period of disorder that eventually lead to the governmental reformation of many global\n      superpowers, most notably the USA and China. But just as the world was slowly beginning to recover from these dark\n      times, financial catastrophe hit.\n      <br />\n      <br />\n      In many countries, the high cost of trying to deal with the civil disorder bankrupted the governments. In all of\n      this chaos and confusion, hackers were able to steal billions of dollars from the world's largest electronic\n      banks, prompting an international banking crisis as governments were unable to bail out insolvent banks. Now, the\n      world is slowly crumbling in the middle of the biggest economic crisis of all time.\n      <br />\n      <br />\n      In this BitNode:\n      <br />\n      <br />\n      Your hacking stat and experience gain are halved\n      <br />\n      The starting and maximum amount of money available on servers is significantly decreased\n      <br />\n      The growth rate of servers is significantly reduced\n      <br />\n      Weakening a server is twice as effective\n      <br />\n      Company wages are decreased by 50%\n      <br />\n      Corporation valuations are 90% lower and are therefore significantly less profitable\n      <br />\n      Hacknet Node production is significantly decreased\n      <br />\n      Crime and Infiltration are more lucrative\n      <br />\n      Augmentations are twice as expensive\n      <br />\n      <br />\n      Destroying this BitNode will give you Source-File 11, or if you already have this Source-File it will upgrade its\n      level up to a maximum of 3. This Source-File makes it so that company favor increases BOTH the player's salary and\n      reputation gain rate at that company by 1% per favor (rather than just the reputation gain). This Source-File also\n      increases the player's company salary and reputation gain multipliers by:\n      <br />\n      <br />\n      Level 1: 32%\n      <br />\n      Level 2: 48%\n      <br />\n      Level 3: 56%\n      <br />\n      <br />\n      It also reduces the price increase for every aug bought by:\n      <br />\n      <br />\n      Level 1: 4%\n      <br />\n      Level 2: 6%\n      <br />\n      Level 3: 7%\n    </>\n  ),\n);\nBitNodes[\"BitNode12\"] = new BitNode(\n  12,\n  0,\n  \"The Recursion\",\n  \"Repeat.\",\n  (\n    <>\n      To iterate is human, to recurse divine.\n      <br />\n      <br />\n      Every time this BitNode is destroyed, it becomes slightly harder. Destroying this BitNode will give you\n      Source-File 12, or if you already have this Source-File it will upgrade its level. There is no maximum level for\n      Source-File 12. Each level of Source-File 12 lets you start any BitNodes with NeuroFlux Governor equal to the\n      level of this source file.\n    </>\n  ),\n);\n// Books: Frontera, Shiner\nBitNodes[\"BitNode13\"] = new BitNode(13, 2, \"fOS\", \"COMING SOON\"); //Unlocks the new game mode and the rest of the BitNodes\nBitNodes[\"BitNode14\"] = new BitNode(14, 2, \"\", \"COMING SOON\");\nBitNodes[\"BitNode15\"] = new BitNode(15, 2, \"\", \"COMING SOON\");\nBitNodes[\"BitNode16\"] = new BitNode(16, 2, \"\", \"COMING SOON\");\nBitNodes[\"BitNode17\"] = new BitNode(17, 2, \"\", \"COMING SOON\");\nBitNodes[\"BitNode18\"] = new BitNode(18, 2, \"\", \"COMING SOON\");\nBitNodes[\"BitNode19\"] = new BitNode(19, 2, \"\", \"COMING SOON\");\nBitNodes[\"BitNode20\"] = new BitNode(20, 2, \"\", \"COMING SOON\");\nBitNodes[\"BitNode21\"] = new BitNode(21, 2, \"\", \"COMING SOON\");\nBitNodes[\"BitNode22\"] = new BitNode(22, 2, \"\", \"COMING SOON\");\nBitNodes[\"BitNode23\"] = new BitNode(23, 2, \"\", \"COMING SOON\");\nBitNodes[\"BitNode24\"] = new BitNode(24, 2, \"\", \"COMING SOON\");\n\nexport function initBitNodeMultipliers(p: IPlayer): void {\n  if (p.bitNodeN == null) {\n    p.bitNodeN = 1;\n  }\n  for (const mult in BitNodeMultipliers) {\n    if (BitNodeMultipliers.hasOwnProperty(mult)) {\n      BitNodeMultipliers[mult] = 1;\n    }\n  }\n\n  switch (p.bitNodeN) {\n    case 1: // Source Genesis (every multiplier is 1)\n      break;\n    case 2: // Rise of the Underworld\n      BitNodeMultipliers.HackingLevelMultiplier = 0.8;\n      BitNodeMultipliers.ServerGrowthRate = 0.8;\n      BitNodeMultipliers.ServerMaxMoney = 0.2;\n      BitNodeMultipliers.ServerStartingMoney = 0.4;\n      BitNodeMultipliers.CrimeMoney = 3;\n      BitNodeMultipliers.InfiltrationMoney = 3;\n      BitNodeMultipliers.FactionWorkRepGain = 0.5;\n      BitNodeMultipliers.FactionPassiveRepGain = 0;\n      BitNodeMultipliers.GangKarmaRequirement = 0;\n      break;\n    case 3: // Corporatocracy\n      BitNodeMultipliers.HackingLevelMultiplier = 0.8;\n      BitNodeMultipliers.RepToDonateToFaction = 0.5;\n      BitNodeMultipliers.AugmentationRepCost = 3;\n      BitNodeMultipliers.AugmentationMoneyCost = 3;\n      BitNodeMultipliers.ServerMaxMoney = 0.2;\n      BitNodeMultipliers.ServerStartingMoney = 0.2;\n      BitNodeMultipliers.ServerGrowthRate = 0.2;\n      BitNodeMultipliers.ScriptHackMoney = 0.2;\n      BitNodeMultipliers.CompanyWorkMoney = 0.25;\n      BitNodeMultipliers.CrimeMoney = 0.25;\n      BitNodeMultipliers.HacknetNodeMoney = 0.25;\n      BitNodeMultipliers.HomeComputerRamCost = 1.5;\n      BitNodeMultipliers.PurchasedServerCost = 2;\n      BitNodeMultipliers.GangKarmaRequirement = 3;\n      break;\n    case 4: // The Singularity\n      BitNodeMultipliers.ServerMaxMoney = 0.15;\n      BitNodeMultipliers.ServerStartingMoney = 0.75;\n      BitNodeMultipliers.ScriptHackMoney = 0.2;\n      BitNodeMultipliers.CompanyWorkMoney = 0.1;\n      BitNodeMultipliers.CrimeMoney = 0.2;\n      BitNodeMultipliers.HacknetNodeMoney = 0.05;\n      BitNodeMultipliers.CompanyWorkExpGain = 0.5;\n      BitNodeMultipliers.ClassGymExpGain = 0.5;\n      BitNodeMultipliers.FactionWorkExpGain = 0.5;\n      BitNodeMultipliers.HackExpGain = 0.4;\n      BitNodeMultipliers.CrimeExpGain = 0.5;\n      BitNodeMultipliers.FactionWorkRepGain = 0.75;\n      break;\n    case 5: // Artificial intelligence\n      BitNodeMultipliers.ServerMaxMoney = 2;\n      BitNodeMultipliers.ServerStartingSecurity = 2;\n      BitNodeMultipliers.ServerStartingMoney = 0.5;\n      BitNodeMultipliers.ScriptHackMoney = 0.15;\n      BitNodeMultipliers.HacknetNodeMoney = 0.2;\n      BitNodeMultipliers.CrimeMoney = 0.5;\n      BitNodeMultipliers.InfiltrationRep = 1.5;\n      BitNodeMultipliers.InfiltrationMoney = 1.5;\n      BitNodeMultipliers.AugmentationMoneyCost = 2;\n      BitNodeMultipliers.HackExpGain = 0.5;\n      BitNodeMultipliers.CorporationValuation = 0.5;\n      break;\n    case 6: // Bladeburner\n      BitNodeMultipliers.HackingLevelMultiplier = 0.35;\n      BitNodeMultipliers.ServerMaxMoney = 0.4;\n      BitNodeMultipliers.ServerStartingMoney = 0.5;\n      BitNodeMultipliers.ServerStartingSecurity = 1.5;\n      BitNodeMultipliers.ScriptHackMoney = 0.75;\n      BitNodeMultipliers.CompanyWorkMoney = 0.5;\n      BitNodeMultipliers.CrimeMoney = 0.75;\n      BitNodeMultipliers.InfiltrationMoney = 0.75;\n      BitNodeMultipliers.CorporationValuation = 0.2;\n      BitNodeMultipliers.HacknetNodeMoney = 0.2;\n      BitNodeMultipliers.FactionPassiveRepGain = 0;\n      BitNodeMultipliers.HackExpGain = 0.25;\n      BitNodeMultipliers.DaedalusAugsRequirement = 1.166; // Results in 35 Augs needed\n      BitNodeMultipliers.GangKarmaRequirement = 5;\n      break;\n    case 7: // Bladeburner 2079\n      BitNodeMultipliers.BladeburnerRank = 0.6;\n      BitNodeMultipliers.BladeburnerSkillCost = 2;\n      BitNodeMultipliers.AugmentationMoneyCost = 3;\n      BitNodeMultipliers.HackingLevelMultiplier = 0.35;\n      BitNodeMultipliers.ServerMaxMoney = 0.4;\n      BitNodeMultipliers.ServerStartingMoney = 0.5;\n      BitNodeMultipliers.ServerStartingSecurity = 1.5;\n      BitNodeMultipliers.ScriptHackMoney = 0.5;\n      BitNodeMultipliers.CompanyWorkMoney = 0.5;\n      BitNodeMultipliers.CrimeMoney = 0.75;\n      BitNodeMultipliers.InfiltrationMoney = 0.75;\n      BitNodeMultipliers.CorporationValuation = 0.2;\n      BitNodeMultipliers.HacknetNodeMoney = 0.2;\n      BitNodeMultipliers.FactionPassiveRepGain = 0;\n      BitNodeMultipliers.HackExpGain = 0.25;\n      BitNodeMultipliers.FourSigmaMarketDataCost = 2;\n      BitNodeMultipliers.FourSigmaMarketDataApiCost = 2;\n      BitNodeMultipliers.DaedalusAugsRequirement = 1.166; // Results in 35 Augs needed\n      BitNodeMultipliers.GangKarmaRequirement = 5;\n      break;\n    case 8: // Ghost of Wall Street\n      BitNodeMultipliers.ScriptHackMoney = 0.3;\n      BitNodeMultipliers.ScriptHackMoneyGain = 0;\n      BitNodeMultipliers.ManualHackMoney = 0;\n      BitNodeMultipliers.CompanyWorkMoney = 0;\n      BitNodeMultipliers.CrimeMoney = 0;\n      BitNodeMultipliers.HacknetNodeMoney = 0;\n      BitNodeMultipliers.InfiltrationMoney = 0;\n      BitNodeMultipliers.RepToDonateToFaction = 0;\n      BitNodeMultipliers.CorporationValuation = 0;\n      BitNodeMultipliers.CodingContractMoney = 0;\n      BitNodeMultipliers.GangKarmaRequirement = 10;\n      break;\n    case 9: // Hacktocracy\n      BitNodeMultipliers.HackingLevelMultiplier = 0.4;\n      BitNodeMultipliers.StrengthLevelMultiplier = 0.45;\n      BitNodeMultipliers.DefenseLevelMultiplier = 0.45;\n      BitNodeMultipliers.DexterityLevelMultiplier = 0.45;\n      BitNodeMultipliers.AgilityLevelMultiplier = 0.45;\n      BitNodeMultipliers.CharismaLevelMultiplier = 0.45;\n      BitNodeMultipliers.PurchasedServerLimit = 0;\n      BitNodeMultipliers.HomeComputerRamCost = 5;\n      BitNodeMultipliers.CrimeMoney = 0.5;\n      BitNodeMultipliers.ScriptHackMoney = 0.1;\n      BitNodeMultipliers.HackExpGain = 0.05;\n      BitNodeMultipliers.ServerStartingMoney = 0.1;\n      BitNodeMultipliers.ServerMaxMoney = 0.1;\n      BitNodeMultipliers.ServerStartingSecurity = 2.5;\n      BitNodeMultipliers.CorporationValuation = 0.5;\n      BitNodeMultipliers.FourSigmaMarketDataCost = 5;\n      BitNodeMultipliers.FourSigmaMarketDataApiCost = 4;\n      BitNodeMultipliers.BladeburnerRank = 0.9;\n      BitNodeMultipliers.BladeburnerSkillCost = 1.2;\n      BitNodeMultipliers.GangKarmaRequirement = 3;\n      break;\n    case 10: // Digital Carbon\n      BitNodeMultipliers.HackingLevelMultiplier = 0.2;\n      BitNodeMultipliers.StrengthLevelMultiplier = 0.4;\n      BitNodeMultipliers.DefenseLevelMultiplier = 0.4;\n      BitNodeMultipliers.DexterityLevelMultiplier = 0.4;\n      BitNodeMultipliers.AgilityLevelMultiplier = 0.4;\n      BitNodeMultipliers.CharismaLevelMultiplier = 0.4;\n      BitNodeMultipliers.CompanyWorkMoney = 0.5;\n      BitNodeMultipliers.CrimeMoney = 0.5;\n      BitNodeMultipliers.HacknetNodeMoney = 0.5;\n      BitNodeMultipliers.ManualHackMoney = 0.5;\n      BitNodeMultipliers.ScriptHackMoney = 0.5;\n      BitNodeMultipliers.CodingContractMoney = 0.5;\n      BitNodeMultipliers.InfiltrationMoney = 0.5;\n      BitNodeMultipliers.CorporationValuation = 0.5;\n      BitNodeMultipliers.AugmentationMoneyCost = 5;\n      BitNodeMultipliers.AugmentationRepCost = 2;\n      BitNodeMultipliers.HomeComputerRamCost = 1.5;\n      BitNodeMultipliers.PurchasedServerCost = 5;\n      BitNodeMultipliers.PurchasedServerLimit = 0.6;\n      BitNodeMultipliers.PurchasedServerMaxRam = 0.5;\n      BitNodeMultipliers.BladeburnerRank = 0.8;\n      BitNodeMultipliers.GangKarmaRequirement = 3;\n      break;\n    case 11: //The Big Crash\n      BitNodeMultipliers.HackingLevelMultiplier = 0.5;\n      BitNodeMultipliers.HackExpGain = 0.5;\n      BitNodeMultipliers.ServerMaxMoney = 0.1;\n      BitNodeMultipliers.ServerStartingMoney = 0.1;\n      BitNodeMultipliers.ServerGrowthRate = 0.2;\n      BitNodeMultipliers.ServerWeakenRate = 2;\n      BitNodeMultipliers.CrimeMoney = 3;\n      BitNodeMultipliers.CompanyWorkMoney = 0.5;\n      BitNodeMultipliers.HacknetNodeMoney = 0.1;\n      BitNodeMultipliers.AugmentationMoneyCost = 2;\n      BitNodeMultipliers.InfiltrationMoney = 2.5;\n      BitNodeMultipliers.InfiltrationRep = 2.5;\n      BitNodeMultipliers.CorporationValuation = 0.1;\n      BitNodeMultipliers.CodingContractMoney = 0.25;\n      BitNodeMultipliers.FourSigmaMarketDataCost = 4;\n      BitNodeMultipliers.FourSigmaMarketDataApiCost = 4;\n      break;\n    case 12: {\n      //The Recursion\n      let sf12Lvl = 0;\n      for (let i = 0; i < p.sourceFiles.length; i++) {\n        if (p.sourceFiles[i].n === 12) {\n          sf12Lvl = p.sourceFiles[i].lvl;\n        }\n      }\n      const inc = Math.pow(1.02, sf12Lvl);\n      const dec = 1 / inc;\n\n      // Multiplier for number of augs needed for Daedalus increases\n      // up to a maximum of 1.34, which results in 40 Augs required\n      BitNodeMultipliers.DaedalusAugsRequirement = Math.min(inc, 1.34);\n\n      BitNodeMultipliers.HackingLevelMultiplier = dec;\n      BitNodeMultipliers.StrengthLevelMultiplier = dec;\n      BitNodeMultipliers.DefenseLevelMultiplier = dec;\n      BitNodeMultipliers.DexterityLevelMultiplier = dec;\n      BitNodeMultipliers.AgilityLevelMultiplier = dec;\n      BitNodeMultipliers.CharismaLevelMultiplier = dec;\n\n      BitNodeMultipliers.ServerMaxMoney = dec;\n      BitNodeMultipliers.ServerStartingMoney = dec;\n      BitNodeMultipliers.ServerGrowthRate = dec;\n      BitNodeMultipliers.ServerWeakenRate = dec;\n\n      //Does not scale, otherwise security might start at 300+\n      BitNodeMultipliers.ServerStartingSecurity = 1.5;\n\n      BitNodeMultipliers.HomeComputerRamCost = inc;\n\n      BitNodeMultipliers.PurchasedServerCost = inc;\n      BitNodeMultipliers.PurchasedServerLimit = dec;\n      BitNodeMultipliers.PurchasedServerMaxRam = dec;\n\n      BitNodeMultipliers.ManualHackMoney = dec;\n      BitNodeMultipliers.ScriptHackMoney = dec;\n      BitNodeMultipliers.CompanyWorkMoney = dec;\n      BitNodeMultipliers.CrimeMoney = dec;\n      BitNodeMultipliers.HacknetNodeMoney = dec;\n      BitNodeMultipliers.CodingContractMoney = dec;\n\n      BitNodeMultipliers.CompanyWorkExpGain = dec;\n      BitNodeMultipliers.ClassGymExpGain = dec;\n      BitNodeMultipliers.FactionWorkExpGain = dec;\n      BitNodeMultipliers.HackExpGain = dec;\n      BitNodeMultipliers.CrimeExpGain = dec;\n\n      BitNodeMultipliers.FactionWorkRepGain = dec;\n      BitNodeMultipliers.FactionPassiveRepGain = dec;\n      BitNodeMultipliers.RepToDonateToFaction = inc;\n\n      BitNodeMultipliers.AugmentationRepCost = inc;\n      BitNodeMultipliers.AugmentationMoneyCost = inc;\n\n      BitNodeMultipliers.InfiltrationMoney = dec;\n      BitNodeMultipliers.InfiltrationRep = dec;\n\n      BitNodeMultipliers.FourSigmaMarketDataCost = inc;\n      BitNodeMultipliers.FourSigmaMarketDataApiCost = inc;\n\n      BitNodeMultipliers.CorporationValuation = dec;\n\n      BitNodeMultipliers.BladeburnerRank = dec;\n      BitNodeMultipliers.BladeburnerSkillCost = inc;\n      break;\n    }\n    default:\n      console.warn(\"Player.bitNodeN invalid\");\n      break;\n  }\n}\n","import React from \"react\";\nimport { Reviver, Generic_toJSON, Generic_fromJSON } from \"../utils/JSONReviver\";\nimport { IBladeburner } from \"./IBladeburner\";\nimport { IActionIdentifier } from \"./IActionIdentifier\";\nimport { ActionIdentifier } from \"./ActionIdentifier\";\nimport { ActionTypes } from \"./data/ActionTypes\";\nimport { Growths } from \"./data/Growths\";\nimport { BlackOperations } from \"./BlackOperations\";\nimport { BlackOperation } from \"./BlackOperation\";\nimport { Operation } from \"./Operation\";\nimport { Contract } from \"./Contract\";\nimport { GeneralActions } from \"./GeneralActions\";\nimport { formatNumber } from \"../utils/StringHelperFunctions\";\nimport { Skills } from \"./Skills\";\nimport { Skill } from \"./Skill\";\nimport { City } from \"./City\";\nimport { IAction } from \"./IAction\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { IRouter } from \"../ui/Router\";\nimport { ConsoleHelpText } from \"./data/Help\";\nimport { exceptionAlert } from \"../utils/helpers/exceptionAlert\";\nimport { getRandomInt } from \"../utils/helpers/getRandomInt\";\nimport { BladeburnerConstants } from \"./data/Constants\";\nimport { numeralWrapper } from \"../ui/numeralFormat\";\nimport { BitNodeMultipliers } from \"../BitNode/BitNodeMultipliers\";\nimport { addOffset } from \"../utils/helpers/addOffset\";\nimport { Faction } from \"../Faction/Faction\";\nimport { Factions, factionExists } from \"../Faction/Factions\";\nimport { calculateHospitalizationCost } from \"../Hospital/Hospital\";\nimport { redPillFlag } from \"../RedPill\";\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\nimport { Settings } from \"../Settings/Settings\";\nimport { Augmentations } from \"../Augmentation/Augmentations\";\nimport { AugmentationNames } from \"../Augmentation/data/AugmentationNames\";\nimport { getTimestamp } from \"../utils/helpers/getTimestamp\";\nimport { joinFaction } from \"../Faction/FactionHelpers\";\nimport { WorkerScript } from \"../Netscript/WorkerScript\";\n\nexport class Bladeburner implements IBladeburner {\n  numHosp = 0;\n  moneyLost = 0;\n  rank = 0;\n  maxRank = 0;\n\n  skillPoints = 0;\n  totalSkillPoints = 0;\n\n  teamSize = 0;\n  teamLost = 0;\n  hpLost = 0;\n\n  storedCycles = 0;\n\n  randomEventCounter: number = getRandomInt(240, 600);\n\n  actionTimeToComplete = 0;\n  actionTimeCurrent = 0;\n  actionTimeOverflow = 0;\n\n  action: IActionIdentifier = new ActionIdentifier({\n    type: ActionTypes[\"Idle\"],\n  });\n\n  cities: any = {};\n  city: string = BladeburnerConstants.CityNames[2];\n  skills: any = {};\n  skillMultipliers: any = {};\n  staminaBonus = 0;\n  maxStamina = 0;\n  stamina = 0;\n  contracts: any = {};\n  operations: any = {};\n  blackops: any = {};\n  logging: any = {\n    general: true,\n    contracts: true,\n    ops: true,\n    blackops: true,\n    events: true,\n  };\n  automateEnabled = false;\n  automateActionHigh: IActionIdentifier = new ActionIdentifier({\n    type: ActionTypes[\"Idle\"],\n  });\n  automateThreshHigh = 0;\n  automateActionLow: IActionIdentifier = new ActionIdentifier({\n    type: ActionTypes[\"Idle\"],\n  });\n  automateThreshLow = 0;\n  consoleHistory: string[] = [];\n  consoleLogs: string[] = [\"Bladeburner Console\", \"Type 'help' to see console commands\"];\n\n  constructor(player?: IPlayer) {\n    for (let i = 0; i < BladeburnerConstants.CityNames.length; ++i) {\n      this.cities[BladeburnerConstants.CityNames[i]] = new City(BladeburnerConstants.CityNames[i]);\n    }\n\n    this.updateSkillMultipliers(); // Calls resetSkillMultipliers()\n\n    // Max Stamina is based on stats and Bladeburner-specific bonuses\n    if (player) this.calculateMaxStamina(player);\n    this.stamina = this.maxStamina;\n    this.create();\n  }\n\n  getCurrentCity(): City {\n    const city = this.cities[this.city];\n    if (!(city instanceof City)) {\n      throw new Error(\"Bladeburner.getCurrentCity() did not properly return a City object\");\n    }\n    return city;\n  }\n\n  calculateStaminaPenalty(): number {\n    return Math.min(1, this.stamina / (0.5 * this.maxStamina));\n  }\n\n  startAction(player: IPlayer, actionId: IActionIdentifier): void {\n    if (actionId == null) return;\n    this.action = actionId;\n    this.actionTimeCurrent = 0;\n    switch (actionId.type) {\n      case ActionTypes[\"Idle\"]:\n        this.actionTimeToComplete = 0;\n        break;\n      case ActionTypes[\"Contract\"]:\n        try {\n          const action = this.getActionObject(actionId);\n          if (action == null) {\n            throw new Error(\"Failed to get Contract Object for: \" + actionId.name);\n          }\n          if (action.count < 1) {\n            return this.resetAction();\n          }\n          this.actionTimeToComplete = action.getActionTime(this);\n        } catch (e) {\n          exceptionAlert(e);\n        }\n        break;\n      case ActionTypes[\"Operation\"]: {\n        try {\n          const action = this.getActionObject(actionId);\n          if (action == null) {\n            throw new Error(\"Failed to get Operation Object for: \" + actionId.name);\n          }\n          if (action.count < 1) {\n            return this.resetAction();\n          }\n          if (actionId.name === \"Raid\" && this.getCurrentCity().commsEst === 0) {\n            return this.resetAction();\n          }\n          this.actionTimeToComplete = action.getActionTime(this);\n        } catch (e) {\n          exceptionAlert(e);\n        }\n        break;\n      }\n      case ActionTypes[\"BlackOp\"]:\n      case ActionTypes[\"BlackOperation\"]: {\n        try {\n          // Safety measure - don't repeat BlackOps that are already done\n          if (this.blackops[actionId.name] != null) {\n            this.resetAction();\n            this.log(\"Error: Tried to start a Black Operation that had already been completed\");\n            break;\n          }\n\n          const action = this.getActionObject(actionId);\n          if (action == null) {\n            throw new Error(\"Failed to get BlackOperation object for: \" + actionId.name);\n          }\n          this.actionTimeToComplete = action.getActionTime(this);\n        } catch (e) {\n          exceptionAlert(e);\n        }\n        break;\n      }\n      case ActionTypes[\"Recruitment\"]:\n        this.actionTimeToComplete = this.getRecruitmentTime(player);\n        break;\n      case ActionTypes[\"Training\"]:\n      case ActionTypes[\"FieldAnalysis\"]:\n      case ActionTypes[\"Field Analysis\"]:\n        this.actionTimeToComplete = 30;\n        break;\n      case ActionTypes[\"Diplomacy\"]:\n      case ActionTypes[\"Hyperbolic Regeneration Chamber\"]:\n        this.actionTimeToComplete = 60;\n        break;\n      default:\n        throw new Error(\"Invalid Action Type in startAction(Bladeburner,player, ): \" + actionId.type);\n        break;\n    }\n  }\n\n  upgradeSkill(skill: Skill): void {\n    // This does NOT handle deduction of skill points\n    const skillName = skill.name;\n    if (this.skills[skillName]) {\n      ++this.skills[skillName];\n    } else {\n      this.skills[skillName] = 1;\n    }\n    if (isNaN(this.skills[skillName]) || this.skills[skillName] < 0) {\n      throw new Error(\"Level of Skill \" + skillName + \" is invalid: \" + this.skills[skillName]);\n    }\n    this.updateSkillMultipliers();\n  }\n\n  executeConsoleCommands(player: IPlayer, commands: string): void {\n    try {\n      // Console History\n      if (this.consoleHistory[this.consoleHistory.length - 1] != commands) {\n        this.consoleHistory.push(commands);\n        if (this.consoleHistory.length > 50) {\n          this.consoleHistory.splice(0, 1);\n        }\n      }\n\n      const arrayOfCommands = commands.split(\";\");\n      for (let i = 0; i < arrayOfCommands.length; ++i) {\n        this.executeConsoleCommand(player, arrayOfCommands[i]);\n      }\n    } catch (e) {\n      exceptionAlert(e);\n    }\n  }\n\n  postToConsole(input: string, saveToLogs = true): void {\n    const MaxConsoleEntries = 100;\n    if (saveToLogs) {\n      this.consoleLogs.push(input);\n      if (this.consoleLogs.length > MaxConsoleEntries) {\n        this.consoleLogs.shift();\n      }\n    }\n  }\n\n  log(input: string): void {\n    // Adds a timestamp and then just calls postToConsole\n    this.postToConsole(`[${getTimestamp()}] ${input}`);\n  }\n\n  resetAction(): void {\n    this.action = new ActionIdentifier({ type: ActionTypes.Idle });\n  }\n\n  clearConsole(): void {\n    this.consoleLogs.length = 0;\n  }\n\n  prestige(): void {\n    this.resetAction();\n    const bladeburnerFac = Factions[\"Bladeburners\"];\n    if (this.rank >= BladeburnerConstants.RankNeededForFaction) {\n      joinFaction(bladeburnerFac);\n    }\n  }\n\n  storeCycles(numCycles = 0): void {\n    this.storedCycles += numCycles;\n  }\n\n  // working on\n  getActionIdFromTypeAndName(type = \"\", name = \"\"): IActionIdentifier | null {\n    if (type === \"\" || name === \"\") {\n      return null;\n    }\n    const action = new ActionIdentifier();\n    const convertedType = type.toLowerCase().trim();\n    const convertedName = name.toLowerCase().trim();\n    switch (convertedType) {\n      case \"contract\":\n      case \"contracts\":\n      case \"contr\":\n        action.type = ActionTypes[\"Contract\"];\n        if (this.contracts.hasOwnProperty(name)) {\n          action.name = name;\n          return action;\n        } else {\n          return null;\n        }\n        break;\n      case \"operation\":\n      case \"operations\":\n      case \"op\":\n      case \"ops\":\n        action.type = ActionTypes[\"Operation\"];\n        if (this.operations.hasOwnProperty(name)) {\n          action.name = name;\n          return action;\n        } else {\n          return null;\n        }\n        break;\n      case \"blackoperation\":\n      case \"black operation\":\n      case \"black operations\":\n      case \"black op\":\n      case \"black ops\":\n      case \"blackop\":\n      case \"blackops\":\n        action.type = ActionTypes[\"BlackOp\"];\n        if (BlackOperations.hasOwnProperty(name)) {\n          action.name = name;\n          return action;\n        } else {\n          return null;\n        }\n        break;\n      case \"general\":\n      case \"general action\":\n      case \"gen\":\n        break;\n      default:\n        return null;\n    }\n\n    if (convertedType.startsWith(\"gen\")) {\n      switch (convertedName) {\n        case \"training\":\n          action.type = ActionTypes[\"Training\"];\n          action.name = \"Training\";\n          break;\n        case \"recruitment\":\n        case \"recruit\":\n          action.type = ActionTypes[\"Recruitment\"];\n          action.name = \"Recruitment\";\n          break;\n        case \"field analysis\":\n        case \"fieldanalysis\":\n          action.type = ActionTypes[\"Field Analysis\"];\n          action.name = \"Field Analysis\";\n          break;\n        case \"diplomacy\":\n          action.type = ActionTypes[\"Diplomacy\"];\n          action.name = \"Diplomacy\";\n          break;\n        case \"hyperbolic regeneration chamber\":\n          action.type = ActionTypes[\"Hyperbolic Regeneration Chamber\"];\n          action.name = \"Hyperbolic Regeneration Chamber\";\n          break;\n        default:\n          return null;\n      }\n      return action;\n    }\n\n    return null;\n  }\n\n  executeStartConsoleCommand(player: IPlayer, args: string[]): void {\n    if (args.length !== 3) {\n      this.postToConsole(\"Invalid usage of 'start' console command: start [type] [name]\");\n      this.postToConsole(\"Use 'help start' for more info\");\n      return;\n    }\n    const name = args[2];\n    switch (args[1].toLowerCase()) {\n      case \"general\":\n      case \"gen\":\n        if (GeneralActions[name] != null) {\n          this.action.type = ActionTypes[name];\n          this.action.name = name;\n          this.startAction(player, this.action);\n        } else {\n          this.postToConsole(\"Invalid action name specified: \" + args[2]);\n        }\n        break;\n      case \"contract\":\n      case \"contracts\":\n        if (this.contracts[name] != null) {\n          this.action.type = ActionTypes.Contract;\n          this.action.name = name;\n          this.startAction(player, this.action);\n        } else {\n          this.postToConsole(\"Invalid contract name specified: \" + args[2]);\n        }\n        break;\n      case \"ops\":\n      case \"op\":\n      case \"operations\":\n      case \"operation\":\n        if (this.operations[name] != null) {\n          this.action.type = ActionTypes.Operation;\n          this.action.name = name;\n          this.startAction(player, this.action);\n        } else {\n          this.postToConsole(\"Invalid Operation name specified: \" + args[2]);\n        }\n        break;\n      case \"blackops\":\n      case \"blackop\":\n      case \"black operations\":\n      case \"black operation\":\n        if (BlackOperations[name] != null) {\n          this.action.type = ActionTypes.BlackOperation;\n          this.action.name = name;\n          this.startAction(player, this.action);\n        } else {\n          this.postToConsole(\"Invalid BlackOp name specified: \" + args[2]);\n        }\n        break;\n      default:\n        this.postToConsole(\"Invalid action/event type specified: \" + args[1]);\n        this.postToConsole(\"Examples of valid action/event identifiers are: [general, contract, op, blackop]\");\n        break;\n    }\n  }\n\n  executeSkillConsoleCommand(args: string[]): void {\n    switch (args.length) {\n      case 1: {\n        // Display Skill Help Command\n        this.postToConsole(\"Invalid usage of 'skill' console command: skill [action] [name]\");\n        this.postToConsole(\"Use 'help skill' for more info\");\n        break;\n      }\n      case 2: {\n        if (args[1].toLowerCase() === \"list\") {\n          // List all skills and their level\n          this.postToConsole(\"Skills: \");\n          const skillNames = Object.keys(Skills);\n          for (let i = 0; i < skillNames.length; ++i) {\n            const skill = Skills[skillNames[i]];\n            let level = 0;\n            if (this.skills[skill.name] != null) {\n              level = this.skills[skill.name];\n            }\n            this.postToConsole(skill.name + \": Level \" + formatNumber(level, 0));\n          }\n          this.postToConsole(\" \");\n          this.postToConsole(\"Effects: \");\n          const multKeys = Object.keys(this.skillMultipliers);\n          for (let i = 0; i < multKeys.length; ++i) {\n            let mult = this.skillMultipliers[multKeys[i]];\n            if (mult && mult !== 1) {\n              mult = formatNumber(mult, 3);\n              switch (multKeys[i]) {\n                case \"successChanceAll\":\n                  this.postToConsole(\"Total Success Chance: x\" + mult);\n                  break;\n                case \"successChanceStealth\":\n                  this.postToConsole(\"Stealth Success Chance: x\" + mult);\n                  break;\n                case \"successChanceKill\":\n                  this.postToConsole(\"Retirement Success Chance: x\" + mult);\n                  break;\n                case \"successChanceContract\":\n                  this.postToConsole(\"Contract Success Chance: x\" + mult);\n                  break;\n                case \"successChanceOperation\":\n                  this.postToConsole(\"Operation Success Chance: x\" + mult);\n                  break;\n                case \"successChanceEstimate\":\n                  this.postToConsole(\"Synthoid Data Estimate: x\" + mult);\n                  break;\n                case \"actionTime\":\n                  this.postToConsole(\"Action Time: x\" + mult);\n                  break;\n                case \"effHack\":\n                  this.postToConsole(\"Hacking Skill: x\" + mult);\n                  break;\n                case \"effStr\":\n                  this.postToConsole(\"Strength: x\" + mult);\n                  break;\n                case \"effDef\":\n                  this.postToConsole(\"Defense: x\" + mult);\n                  break;\n                case \"effDex\":\n                  this.postToConsole(\"Dexterity: x\" + mult);\n                  break;\n                case \"effAgi\":\n                  this.postToConsole(\"Agility: x\" + mult);\n                  break;\n                case \"effCha\":\n                  this.postToConsole(\"Charisma: x\" + mult);\n                  break;\n                case \"effInt\":\n                  this.postToConsole(\"Intelligence: x\" + mult);\n                  break;\n                case \"stamina\":\n                  this.postToConsole(\"Stamina: x\" + mult);\n                  break;\n                default:\n                  console.warn(`Unrecognized SkillMult Key: ${multKeys[i]}`);\n                  break;\n              }\n            }\n          }\n        } else {\n          this.postToConsole(\"Invalid usage of 'skill' console command: skill [action] [name]\");\n          this.postToConsole(\"Use 'help skill' for more info\");\n        }\n        break;\n      }\n      case 3: {\n        const skillName = args[2];\n        const skill = Skills[skillName];\n        if (skill == null || !(skill instanceof Skill)) {\n          this.postToConsole(\"Invalid skill name (Note that it is case-sensitive): \" + skillName);\n        }\n        if (args[1].toLowerCase() === \"list\") {\n          let level = 0;\n          if (this.skills[skill.name] !== undefined) {\n            level = this.skills[skill.name];\n          }\n          this.postToConsole(skill.name + \": Level \" + formatNumber(level));\n        } else if (args[1].toLowerCase() === \"level\") {\n          let currentLevel = 0;\n          if (this.skills[skillName] && !isNaN(this.skills[skillName])) {\n            currentLevel = this.skills[skillName];\n          }\n          const pointCost = skill.calculateCost(currentLevel);\n          if (this.skillPoints >= pointCost) {\n            this.skillPoints -= pointCost;\n            this.upgradeSkill(skill);\n            this.log(skill.name + \" upgraded to Level \" + this.skills[skillName]);\n          } else {\n            this.postToConsole(\n              \"You do not have enough Skill Points to upgrade this. You need \" + formatNumber(pointCost, 0),\n            );\n          }\n        } else {\n          this.postToConsole(\"Invalid usage of 'skill' console command: skill [action] [name]\");\n          this.postToConsole(\"Use 'help skill' for more info\");\n        }\n        break;\n      }\n      default: {\n        this.postToConsole(\"Invalid usage of 'skill' console command: skill [action] [name]\");\n        this.postToConsole(\"Use 'help skill' for more info\");\n        break;\n      }\n    }\n  }\n\n  executeLogConsoleCommand(args: string[]): void {\n    if (args.length < 3) {\n      this.postToConsole(\"Invalid usage of log command: log [enable/disable] [action/event]\");\n      this.postToConsole(\"Use 'help log' for more details and examples\");\n      return;\n    }\n\n    let flag = true;\n    if (args[1].toLowerCase().includes(\"d\")) {\n      flag = false;\n    } // d for disable\n\n    switch (args[2].toLowerCase()) {\n      case \"general\":\n      case \"gen\":\n        this.logging.general = flag;\n        this.log(\"Logging \" + (flag ? \"enabled\" : \"disabled\") + \" for general actions\");\n        break;\n      case \"contract\":\n      case \"contracts\":\n        this.logging.contracts = flag;\n        this.log(\"Logging \" + (flag ? \"enabled\" : \"disabled\") + \" for Contracts\");\n        break;\n      case \"ops\":\n      case \"op\":\n      case \"operations\":\n      case \"operation\":\n        this.logging.ops = flag;\n        this.log(\"Logging \" + (flag ? \"enabled\" : \"disabled\") + \" for Operations\");\n        break;\n      case \"blackops\":\n      case \"blackop\":\n      case \"black operations\":\n      case \"black operation\":\n        this.logging.blackops = flag;\n        this.log(\"Logging \" + (flag ? \"enabled\" : \"disabled\") + \" for BlackOps\");\n        break;\n      case \"event\":\n      case \"events\":\n        this.logging.events = flag;\n        this.log(\"Logging \" + (flag ? \"enabled\" : \"disabled\") + \" for events\");\n        break;\n      case \"all\":\n        this.logging.general = flag;\n        this.logging.contracts = flag;\n        this.logging.ops = flag;\n        this.logging.blackops = flag;\n        this.logging.events = flag;\n        this.log(\"Logging \" + (flag ? \"enabled\" : \"disabled\") + \" for everything\");\n        break;\n      default:\n        this.postToConsole(\"Invalid action/event type specified: \" + args[2]);\n        this.postToConsole(\n          \"Examples of valid action/event identifiers are: [general, contracts, ops, blackops, events]\",\n        );\n        break;\n    }\n  }\n\n  executeHelpConsoleCommand(args: string[]): void {\n    if (args.length === 1) {\n      for (const line of ConsoleHelpText.helpList) {\n        this.postToConsole(line);\n      }\n    } else {\n      for (let i = 1; i < args.length; ++i) {\n        if (!(args[i] in ConsoleHelpText)) continue;\n        const helpText = ConsoleHelpText[args[i]];\n        for (const line of helpText) {\n          this.postToConsole(line);\n        }\n      }\n    }\n  }\n\n  executeAutomateConsoleCommand(args: string[]): void {\n    if (args.length !== 2 && args.length !== 4) {\n      this.postToConsole(\n        \"Invalid use of 'automate' command: automate [var] [val] [hi/low]. Use 'help automate' for more info\",\n      );\n      return;\n    }\n\n    // Enable/Disable\n    if (args.length === 2) {\n      const flag = args[1];\n      if (flag.toLowerCase() === \"status\") {\n        this.postToConsole(\"Automation: \" + (this.automateEnabled ? \"enabled\" : \"disabled\"));\n        this.postToConsole(\n          \"When your stamina drops to \" +\n            formatNumber(this.automateThreshLow, 0) +\n            \", you will automatically switch to \" +\n            this.automateActionLow.name +\n            \". When your stamina recovers to \" +\n            formatNumber(this.automateThreshHigh, 0) +\n            \", you will automatically \" +\n            \"switch to \" +\n            this.automateActionHigh.name +\n            \".\",\n        );\n      } else if (flag.toLowerCase().includes(\"en\")) {\n        if (\n          !(this.automateActionLow instanceof ActionIdentifier) ||\n          !(this.automateActionHigh instanceof ActionIdentifier)\n        ) {\n          return this.log(\"Failed to enable automation. Actions were not set\");\n        }\n        this.automateEnabled = true;\n        this.log(\"Bladeburner automation enabled\");\n      } else if (flag.toLowerCase().includes(\"d\")) {\n        this.automateEnabled = false;\n        this.log(\"Bladeburner automation disabled\");\n      } else {\n        this.log(\"Invalid argument for 'automate' console command: \" + args[1]);\n      }\n      return;\n    }\n\n    // Set variables\n    if (args.length === 4) {\n      const variable = args[1];\n      const val = args[2];\n\n      let highLow = false; // True for high, false for low\n      if (args[3].toLowerCase().includes(\"hi\")) {\n        highLow = true;\n      }\n\n      switch (variable) {\n        case \"general\":\n        case \"gen\":\n          if (GeneralActions[val] != null) {\n            const action = new ActionIdentifier({\n              type: ActionTypes[val],\n              name: val,\n            });\n            if (highLow) {\n              this.automateActionHigh = action;\n            } else {\n              this.automateActionLow = action;\n            }\n            this.log(\"Automate (\" + (highLow ? \"HIGH\" : \"LOW\") + \") action set to \" + val);\n          } else {\n            this.postToConsole(\"Invalid action name specified: \" + val);\n          }\n          break;\n        case \"contract\":\n        case \"contracts\":\n          if (this.contracts[val] != null) {\n            const action = new ActionIdentifier({\n              type: ActionTypes.Contract,\n              name: val,\n            });\n            if (highLow) {\n              this.automateActionHigh = action;\n            } else {\n              this.automateActionLow = action;\n            }\n            this.log(\"Automate (\" + (highLow ? \"HIGH\" : \"LOW\") + \") action set to \" + val);\n          } else {\n            this.postToConsole(\"Invalid contract name specified: \" + val);\n          }\n          break;\n        case \"ops\":\n        case \"op\":\n        case \"operations\":\n        case \"operation\":\n          if (this.operations[val] != null) {\n            const action = new ActionIdentifier({\n              type: ActionTypes.Operation,\n              name: val,\n            });\n            if (highLow) {\n              this.automateActionHigh = action;\n            } else {\n              this.automateActionLow = action;\n            }\n            this.log(\"Automate (\" + (highLow ? \"HIGH\" : \"LOW\") + \") action set to \" + val);\n          } else {\n            this.postToConsole(\"Invalid Operation name specified: \" + val);\n          }\n          break;\n        case \"stamina\":\n          if (isNaN(parseFloat(val))) {\n            this.postToConsole(\"Invalid value specified for stamina threshold (must be numeric): \" + val);\n          } else {\n            if (highLow) {\n              this.automateThreshHigh = Number(val);\n            } else {\n              this.automateThreshLow = Number(val);\n            }\n            this.log(\"Automate (\" + (highLow ? \"HIGH\" : \"LOW\") + \") stamina threshold set to \" + val);\n          }\n          break;\n        default:\n          break;\n      }\n\n      return;\n    }\n  }\n\n  parseCommandArguments(command: string): string[] {\n    /**\n     * Returns an array with command and its arguments in each index.\n     * e.g. skill \"blade's intuition\" foo returns [skill, blade's intuition, foo]\n     * The input to the fn will be trimmed and will have all whitespace replaced w/ a single space\n     */\n    const args = [];\n    let start = 0;\n    let i = 0;\n    while (i < command.length) {\n      const c = command.charAt(i);\n      if (c === '\"') {\n        // Double quotes\n        const endQuote = command.indexOf('\"', i + 1);\n        if (endQuote !== -1 && (endQuote === command.length - 1 || command.charAt(endQuote + 1) === \" \")) {\n          args.push(command.substr(i + 1, endQuote - i - 1));\n          if (endQuote === command.length - 1) {\n            start = i = endQuote + 1;\n          } else {\n            start = i = endQuote + 2; // Skip the space\n          }\n          continue;\n        }\n      } else if (c === \"'\") {\n        // Single quotes, same thing as above\n        const endQuote = command.indexOf(\"'\", i + 1);\n        if (endQuote !== -1 && (endQuote === command.length - 1 || command.charAt(endQuote + 1) === \" \")) {\n          args.push(command.substr(i + 1, endQuote - i - 1));\n          if (endQuote === command.length - 1) {\n            start = i = endQuote + 1;\n          } else {\n            start = i = endQuote + 2; // Skip the space\n          }\n          continue;\n        }\n      } else if (c === \" \") {\n        args.push(command.substr(start, i - start));\n        start = i + 1;\n      }\n      ++i;\n    }\n    if (start !== i) {\n      args.push(command.substr(start, i - start));\n    }\n    return args;\n  }\n\n  executeConsoleCommand(player: IPlayer, command: string): void {\n    command = command.trim();\n    command = command.replace(/\\s\\s+/g, \" \"); // Replace all whitespace w/ a single space\n\n    const args = this.parseCommandArguments(command);\n    if (args.length <= 0) return; // Log an error?\n\n    switch (args[0].toLowerCase()) {\n      case \"automate\":\n        this.executeAutomateConsoleCommand(args);\n        break;\n      case \"clear\":\n      case \"cls\":\n        this.clearConsole();\n        break;\n      case \"help\":\n        this.executeHelpConsoleCommand(args);\n        break;\n      case \"log\":\n        this.executeLogConsoleCommand(args);\n        break;\n      case \"skill\":\n        this.executeSkillConsoleCommand(args);\n        break;\n      case \"start\":\n        this.executeStartConsoleCommand(player, args);\n        break;\n      case \"stop\":\n        this.resetAction();\n        break;\n      default:\n        this.postToConsole(\"Invalid console command\");\n        break;\n    }\n  }\n\n  triggerMigration(sourceCityName: string): void {\n    let destCityName = BladeburnerConstants.CityNames[getRandomInt(0, 5)];\n    while (destCityName === sourceCityName) {\n      destCityName = BladeburnerConstants.CityNames[getRandomInt(0, 5)];\n    }\n    const destCity = this.cities[destCityName];\n    const sourceCity = this.cities[sourceCityName];\n    if (destCity == null || sourceCity == null) {\n      throw new Error(\"Failed to find City with name: \" + destCityName);\n    }\n    const rand = Math.random();\n    let percentage = getRandomInt(3, 15) / 100;\n\n    if (rand < 0.05 && sourceCity.comms > 0) {\n      // 5% chance for community migration\n      percentage *= getRandomInt(2, 4); // Migration increases population change\n      --sourceCity.comms;\n      ++destCity.comms;\n    }\n    const count = Math.round(sourceCity.pop * percentage);\n    sourceCity.pop -= count;\n    destCity.pop += count;\n  }\n\n  triggerPotentialMigration(sourceCityName: string, chance: number): void {\n    if (chance == null || isNaN(chance)) {\n      console.error(\"Invalid 'chance' parameter passed into Bladeburner.triggerPotentialMigration()\");\n    }\n    if (chance > 1) {\n      chance /= 100;\n    }\n    if (Math.random() < chance) {\n      this.triggerMigration(sourceCityName);\n    }\n  }\n\n  randomEvent(): void {\n    const chance = Math.random();\n\n    // Choose random source/destination city for events\n    const sourceCityName = BladeburnerConstants.CityNames[getRandomInt(0, 5)];\n    const sourceCity = this.cities[sourceCityName];\n    if (!(sourceCity instanceof City)) {\n      throw new Error(\"sourceCity was not a City object in Bladeburner.randomEvent()\");\n    }\n\n    let destCityName = BladeburnerConstants.CityNames[getRandomInt(0, 5)];\n    while (destCityName === sourceCityName) {\n      destCityName = BladeburnerConstants.CityNames[getRandomInt(0, 5)];\n    }\n    const destCity = this.cities[destCityName];\n\n    if (!(sourceCity instanceof City) || !(destCity instanceof City)) {\n      throw new Error(\"sourceCity/destCity was not a City object in Bladeburner.randomEvent()\");\n    }\n\n    if (chance <= 0.05) {\n      // New Synthoid Community, 5%\n      ++sourceCity.comms;\n      const percentage = getRandomInt(10, 20) / 100;\n      const count = Math.round(sourceCity.pop * percentage);\n      sourceCity.pop += count;\n      if (this.logging.events) {\n        this.log(\"Intelligence indicates that a new Synthoid community was formed in a city\");\n      }\n    } else if (chance <= 0.1) {\n      // Synthoid Community Migration, 5%\n      if (sourceCity.comms <= 0) {\n        // If no comms in source city, then instead trigger a new Synthoid community event\n        ++sourceCity.comms;\n        const percentage = getRandomInt(10, 20) / 100;\n        const count = Math.round(sourceCity.pop * percentage);\n        sourceCity.pop += count;\n        if (this.logging.events) {\n          this.log(\"Intelligence indicates that a new Synthoid community was formed in a city\");\n        }\n      } else {\n        --sourceCity.comms;\n        ++destCity.comms;\n\n        // Change pop\n        const percentage = getRandomInt(10, 20) / 100;\n        const count = Math.round(sourceCity.pop * percentage);\n        sourceCity.pop -= count;\n        destCity.pop += count;\n\n        if (this.logging.events) {\n          this.log(\n            \"Intelligence indicates that a Synthoid community migrated from \" + sourceCityName + \" to some other city\",\n          );\n        }\n      }\n    } else if (chance <= 0.3) {\n      // New Synthoids (non community), 20%\n      const percentage = getRandomInt(8, 24) / 100;\n      const count = Math.round(sourceCity.pop * percentage);\n      sourceCity.pop += count;\n      if (this.logging.events) {\n        this.log(\n          \"Intelligence indicates that the Synthoid population of \" + sourceCityName + \" just changed significantly\",\n        );\n      }\n    } else if (chance <= 0.5) {\n      // Synthoid migration (non community) 20%\n      this.triggerMigration(sourceCityName);\n      if (this.logging.events) {\n        this.log(\n          \"Intelligence indicates that a large number of Synthoids migrated from \" +\n            sourceCityName +\n            \" to some other city\",\n        );\n      }\n    } else if (chance <= 0.7) {\n      // Synthoid Riots (+chaos), 20%\n      sourceCity.chaos += 1;\n      sourceCity.chaos *= 1 + getRandomInt(5, 20) / 100;\n      if (this.logging.events) {\n        this.log(\"Tensions between Synthoids and humans lead to riots in \" + sourceCityName + \"! Chaos increased\");\n      }\n    } else if (chance <= 0.9) {\n      // Less Synthoids, 20%\n      const percentage = getRandomInt(8, 20) / 100;\n      const count = Math.round(sourceCity.pop * percentage);\n      sourceCity.pop -= count;\n      if (this.logging.events) {\n        this.log(\n          \"Intelligence indicates that the Synthoid population of \" + sourceCityName + \" just changed significantly\",\n        );\n      }\n    }\n    // 10% chance of nothing happening\n  }\n\n  /**\n   * Process stat gains from Contracts, Operations, and Black Operations\n   * @param action(Action obj) - Derived action class\n   * @param success(bool) - Whether action was successful\n   */\n  gainActionStats(player: IPlayer, action: IAction, success: boolean): void {\n    const difficulty = action.getDifficulty();\n\n    /**\n     * Gain multiplier based on difficulty. If it changes then the\n     * same variable calculated in completeAction() needs to change too\n     */\n    const difficultyMult =\n      Math.pow(difficulty, BladeburnerConstants.DiffMultExponentialFactor) +\n      difficulty / BladeburnerConstants.DiffMultLinearFactor;\n\n    const time = this.actionTimeToComplete;\n    const successMult = success ? 1 : 0.5;\n\n    const unweightedGain = time * BladeburnerConstants.BaseStatGain * successMult * difficultyMult;\n    const unweightedIntGain = time * BladeburnerConstants.BaseIntGain * successMult * difficultyMult;\n    const skillMult = this.skillMultipliers.expGain;\n    player.gainHackingExp(unweightedGain * action.weights.hack * player.hacking_exp_mult * skillMult);\n    player.gainStrengthExp(unweightedGain * action.weights.str * player.strength_exp_mult * skillMult);\n    player.gainDefenseExp(unweightedGain * action.weights.def * player.defense_exp_mult * skillMult);\n    player.gainDexterityExp(unweightedGain * action.weights.dex * player.dexterity_exp_mult * skillMult);\n    player.gainAgilityExp(unweightedGain * action.weights.agi * player.agility_exp_mult * skillMult);\n    player.gainCharismaExp(unweightedGain * action.weights.cha * player.charisma_exp_mult * skillMult);\n    let intExp = unweightedIntGain * action.weights.int * skillMult;\n    if (intExp > 1) {\n      intExp = Math.pow(intExp, 0.8);\n    }\n    player.gainIntelligenceExp(intExp);\n  }\n\n  getDiplomacyEffectiveness(player: IPlayer): number {\n    // Returns a decimal by which the city's chaos level should be multiplied (e.g. 0.98)\n    const CharismaLinearFactor = 1e3;\n    const CharismaExponentialFactor = 0.045;\n\n    const charismaEff = Math.pow(player.charisma, CharismaExponentialFactor) + player.charisma / CharismaLinearFactor;\n    return (100 - charismaEff) / 100;\n  }\n\n  getRecruitmentSuccessChance(player: IPlayer): number {\n    return Math.pow(player.charisma, 0.45) / (this.teamSize + 1);\n  }\n\n  getRecruitmentTime(player: IPlayer): number {\n    const effCharisma = player.charisma * this.skillMultipliers.effCha;\n    const charismaFactor = Math.pow(effCharisma, 0.81) + effCharisma / 90;\n    return Math.max(10, Math.round(BladeburnerConstants.BaseRecruitmentTimeNeeded - charismaFactor));\n  }\n\n  resetSkillMultipliers(): void {\n    this.skillMultipliers = {\n      successChanceAll: 1,\n      successChanceStealth: 1,\n      successChanceKill: 1,\n      successChanceContract: 1,\n      successChanceOperation: 1,\n      successChanceEstimate: 1,\n      actionTime: 1,\n      effHack: 1,\n      effStr: 1,\n      effDef: 1,\n      effDex: 1,\n      effAgi: 1,\n      effCha: 1,\n      effInt: 1,\n      stamina: 1,\n      money: 1,\n      expGain: 1,\n    };\n  }\n\n  updateSkillMultipliers(): void {\n    this.resetSkillMultipliers();\n    for (const skillName in this.skills) {\n      if (this.skills.hasOwnProperty(skillName)) {\n        const skill = Skills[skillName];\n        if (skill == null) {\n          throw new Error(\"Could not find Skill Object for: \" + skillName);\n        }\n        const level = this.skills[skillName];\n        if (level == null || level <= 0) {\n          continue;\n        } //Not upgraded\n\n        const multiplierNames = Object.keys(this.skillMultipliers);\n        for (let i = 0; i < multiplierNames.length; ++i) {\n          const multiplierName = multiplierNames[i];\n          if (skill.getMultiplier(multiplierName) != null && !isNaN(skill.getMultiplier(multiplierName))) {\n            const value = skill.getMultiplier(multiplierName) * level;\n            let multiplierValue = 1 + value / 100;\n            if (multiplierName === \"actionTime\") {\n              multiplierValue = 1 - value / 100;\n            }\n            this.skillMultipliers[multiplierName] *= multiplierValue;\n          }\n        }\n      }\n    }\n  }\n\n  completeOperation(success: boolean): void {\n    if (this.action.type !== ActionTypes.Operation) {\n      throw new Error(\"completeOperation() called even though current action is not an Operation\");\n    }\n    const action = this.getActionObject(this.action);\n    if (action == null) {\n      throw new Error(\"Failed to get Contract/Operation Object for: \" + this.action.name);\n    }\n\n    // Calculate team losses\n    const teamCount = action.teamCount;\n    if (teamCount >= 1) {\n      let max;\n      if (success) {\n        max = Math.ceil(teamCount / 2);\n      } else {\n        max = Math.floor(teamCount);\n      }\n      const losses = getRandomInt(0, max);\n      this.teamSize -= losses;\n      this.teamLost += losses;\n      if (this.logging.ops && losses > 0) {\n        this.log(\"Lost \" + formatNumber(losses, 0) + \" team members during this \" + action.name);\n      }\n    }\n\n    const city = this.getCurrentCity();\n    switch (action.name) {\n      case \"Investigation\":\n        if (success) {\n          city.improvePopulationEstimateByPercentage(0.4 * this.skillMultipliers.successChanceEstimate);\n          if (Math.random() < 0.02 * this.skillMultipliers.successChanceEstimate) {\n            city.improveCommunityEstimate(1);\n          }\n        } else {\n          this.triggerPotentialMigration(this.city, 0.1);\n        }\n        break;\n      case \"Undercover Operation\":\n        if (success) {\n          city.improvePopulationEstimateByPercentage(0.8 * this.skillMultipliers.successChanceEstimate);\n          if (Math.random() < 0.02 * this.skillMultipliers.successChanceEstimate) {\n            city.improveCommunityEstimate(1);\n          }\n        } else {\n          this.triggerPotentialMigration(this.city, 0.15);\n        }\n        break;\n      case \"Sting Operation\":\n        if (success) {\n          city.changePopulationByPercentage(-0.1, {\n            changeEstEqually: true,\n            nonZero: true,\n          });\n        }\n        city.changeChaosByCount(0.1);\n        break;\n      case \"Raid\":\n        if (success) {\n          city.changePopulationByPercentage(-1, {\n            changeEstEqually: true,\n            nonZero: true,\n          });\n          --city.comms;\n          --city.commsEst;\n        } else {\n          const change = getRandomInt(-10, -5) / 10;\n          city.changePopulationByPercentage(change, {\n            nonZero: true,\n            changeEstEqually: false,\n          });\n        }\n        city.changeChaosByPercentage(getRandomInt(1, 5));\n        break;\n      case \"Stealth Retirement Operation\":\n        if (success) {\n          city.changePopulationByPercentage(-0.5, {\n            changeEstEqually: true,\n            nonZero: true,\n          });\n        }\n        city.changeChaosByPercentage(getRandomInt(-3, -1));\n        break;\n      case \"Assassination\":\n        if (success) {\n          city.changePopulationByCount(-1, { estChange: -1, estOffset: 0 });\n        }\n        city.changeChaosByPercentage(getRandomInt(-5, 5));\n        break;\n      default:\n        throw new Error(\"Invalid Action name in completeOperation: \" + this.action.name);\n    }\n  }\n\n  getActionObject(actionId: IActionIdentifier): IAction | null {\n    /**\n     * Given an ActionIdentifier object, returns the corresponding\n     * GeneralAction, Contract, Operation, or BlackOperation object\n     */\n    switch (actionId.type) {\n      case ActionTypes[\"Contract\"]:\n        return this.contracts[actionId.name];\n      case ActionTypes[\"Operation\"]:\n        return this.operations[actionId.name];\n      case ActionTypes[\"BlackOp\"]:\n      case ActionTypes[\"BlackOperation\"]:\n        return BlackOperations[actionId.name];\n      case ActionTypes[\"Training\"]:\n        return GeneralActions[\"Training\"];\n      case ActionTypes[\"Field Analysis\"]:\n        return GeneralActions[\"Field Analysis\"];\n      case ActionTypes[\"Recruitment\"]:\n        return GeneralActions[\"Recruitment\"];\n      case ActionTypes[\"Diplomacy\"]:\n        return GeneralActions[\"Diplomacy\"];\n      case ActionTypes[\"Hyperbolic Regeneration Chamber\"]:\n        return GeneralActions[\"Hyperbolic Regeneration Chamber\"];\n      default:\n        return null;\n    }\n  }\n\n  completeContract(success: boolean): void {\n    if (this.action.type !== ActionTypes.Contract) {\n      throw new Error(\"completeContract() called even though current action is not a Contract\");\n    }\n    const city = this.getCurrentCity();\n    if (success) {\n      switch (this.action.name) {\n        case \"Tracking\":\n          // Increase estimate accuracy by a relatively small amount\n          city.improvePopulationEstimateByCount(getRandomInt(100, 1e3));\n          break;\n        case \"Bounty Hunter\":\n          city.changePopulationByCount(-1, { estChange: -1, estOffset: 0 });\n          city.changeChaosByCount(0.02);\n          break;\n        case \"Retirement\":\n          city.changePopulationByCount(-1, { estChange: -1, estOffset: 0 });\n          city.changeChaosByCount(0.04);\n          break;\n        default:\n          throw new Error(\"Invalid Action name in completeContract: \" + this.action.name);\n      }\n    }\n  }\n\n  completeAction(router: IRouter, player: IPlayer): void {\n    switch (this.action.type) {\n      case ActionTypes[\"Contract\"]:\n      case ActionTypes[\"Operation\"]: {\n        try {\n          const isOperation = this.action.type === ActionTypes[\"Operation\"];\n          const action = this.getActionObject(this.action);\n          if (action == null) {\n            throw new Error(\"Failed to get Contract/Operation Object for: \" + this.action.name);\n          }\n          const difficulty = action.getDifficulty();\n          const difficultyMultiplier =\n            Math.pow(difficulty, BladeburnerConstants.DiffMultExponentialFactor) +\n            difficulty / BladeburnerConstants.DiffMultLinearFactor;\n          const rewardMultiplier = Math.pow(action.rewardFac, action.level - 1);\n\n          // Stamina loss is based on difficulty\n          this.stamina -= BladeburnerConstants.BaseStaminaLoss * difficultyMultiplier;\n          if (this.stamina < 0) {\n            this.stamina = 0;\n          }\n\n          // Process Contract/Operation success/failure\n          if (action.attempt(this)) {\n            this.gainActionStats(player, action, true);\n            ++action.successes;\n            --action.count;\n\n            // Earn money for contracts\n            let moneyGain = 0;\n            if (!isOperation) {\n              moneyGain = BladeburnerConstants.ContractBaseMoneyGain * rewardMultiplier * this.skillMultipliers.money;\n              player.gainMoney(moneyGain);\n              player.recordMoneySource(moneyGain, \"bladeburner\");\n            }\n\n            if (isOperation) {\n              action.setMaxLevel(BladeburnerConstants.OperationSuccessesPerLevel);\n            } else {\n              action.setMaxLevel(BladeburnerConstants.ContractSuccessesPerLevel);\n            }\n            if (action.rankGain) {\n              const gain = addOffset(action.rankGain * rewardMultiplier * BitNodeMultipliers.BladeburnerRank, 10);\n              this.changeRank(player, gain);\n              if (isOperation && this.logging.ops) {\n                this.log(action.name + \" successfully completed! Gained \" + formatNumber(gain, 3) + \" rank\");\n              } else if (!isOperation && this.logging.contracts) {\n                this.log(\n                  action.name +\n                    \" contract successfully completed! Gained \" +\n                    formatNumber(gain, 3) +\n                    \" rank and \" +\n                    numeralWrapper.formatMoney(moneyGain),\n                );\n              }\n            }\n            isOperation ? this.completeOperation(true) : this.completeContract(true);\n          } else {\n            this.gainActionStats(player, action, false);\n            ++action.failures;\n            let loss = 0,\n              damage = 0;\n            if (action.rankLoss) {\n              loss = addOffset(action.rankLoss * rewardMultiplier, 10);\n              this.changeRank(player, -1 * loss);\n            }\n            if (action.hpLoss) {\n              damage = action.hpLoss * difficultyMultiplier;\n              damage = Math.ceil(addOffset(damage, 10));\n              this.hpLost += damage;\n              const cost = calculateHospitalizationCost(player, damage);\n              if (player.takeDamage(damage)) {\n                ++this.numHosp;\n                this.moneyLost += cost;\n              }\n            }\n            let logLossText = \"\";\n            if (loss > 0) {\n              logLossText += \"Lost \" + formatNumber(loss, 3) + \" rank. \";\n            }\n            if (damage > 0) {\n              logLossText += \"Took \" + formatNumber(damage, 0) + \" damage.\";\n            }\n            if (isOperation && this.logging.ops) {\n              this.log(action.name + \" failed! \" + logLossText);\n            } else if (!isOperation && this.logging.contracts) {\n              this.log(action.name + \" contract failed! \" + logLossText);\n            }\n            isOperation ? this.completeOperation(false) : this.completeContract(false);\n          }\n          if (action.autoLevel) {\n            action.level = action.maxLevel;\n          } // Autolevel\n          this.startAction(player, this.action); // Repeat action\n        } catch (e) {\n          exceptionAlert(e);\n        }\n        break;\n      }\n      case ActionTypes[\"BlackOp\"]:\n      case ActionTypes[\"BlackOperation\"]: {\n        try {\n          const action = this.getActionObject(this.action);\n          if (action == null || !(action instanceof BlackOperation)) {\n            throw new Error(\"Failed to get BlackOperation Object for: \" + this.action.name);\n          }\n          const difficulty = action.getDifficulty();\n          const difficultyMultiplier =\n            Math.pow(difficulty, BladeburnerConstants.DiffMultExponentialFactor) +\n            difficulty / BladeburnerConstants.DiffMultLinearFactor;\n\n          // Stamina loss is based on difficulty\n          this.stamina -= BladeburnerConstants.BaseStaminaLoss * difficultyMultiplier;\n          if (this.stamina < 0) {\n            this.stamina = 0;\n          }\n\n          // Team loss variables\n          const teamCount = action.teamCount;\n          let teamLossMax;\n\n          if (action.attempt(this)) {\n            this.gainActionStats(player, action, true);\n            action.count = 0;\n            this.blackops[action.name] = true;\n            let rankGain = 0;\n            if (action.rankGain) {\n              rankGain = addOffset(action.rankGain * BitNodeMultipliers.BladeburnerRank, 10);\n              this.changeRank(player, rankGain);\n            }\n            teamLossMax = Math.ceil(teamCount / 2);\n\n            // Operation Daedalus\n            if (action.name === \"Operation Daedalus\") {\n              this.resetAction();\n              return router.toBitVerse(false, false);\n            }\n\n            if (this.logging.blackops) {\n              this.log(action.name + \" successful! Gained \" + formatNumber(rankGain, 1) + \" rank\");\n            }\n          } else {\n            this.gainActionStats(player, action, false);\n            let rankLoss = 0;\n            let damage = 0;\n            if (action.rankLoss) {\n              rankLoss = addOffset(action.rankLoss, 10);\n              this.changeRank(player, -1 * rankLoss);\n            }\n            if (action.hpLoss) {\n              damage = action.hpLoss * difficultyMultiplier;\n              damage = Math.ceil(addOffset(damage, 10));\n              const cost = calculateHospitalizationCost(player, damage);\n              if (player.takeDamage(damage)) {\n                ++this.numHosp;\n                this.moneyLost += cost;\n              }\n            }\n            teamLossMax = Math.floor(teamCount);\n\n            if (this.logging.blackops) {\n              this.log(\n                action.name +\n                  \" failed! Lost \" +\n                  formatNumber(rankLoss, 1) +\n                  \" rank and took \" +\n                  formatNumber(damage, 0) +\n                  \" damage\",\n              );\n            }\n          }\n\n          this.resetAction(); // Stop regardless of success or fail\n\n          // Calculate team lossses\n          if (teamCount >= 1) {\n            const losses = getRandomInt(1, teamLossMax);\n            this.teamSize -= losses;\n            this.teamLost += losses;\n            if (this.logging.blackops) {\n              this.log(\"You lost \" + formatNumber(losses, 0) + \" team members during \" + action.name);\n            }\n          }\n        } catch (e) {\n          exceptionAlert(e);\n        }\n        break;\n      }\n      case ActionTypes[\"Training\"]: {\n        this.stamina -= 0.5 * BladeburnerConstants.BaseStaminaLoss;\n        const strExpGain = 30 * player.strength_exp_mult,\n          defExpGain = 30 * player.defense_exp_mult,\n          dexExpGain = 30 * player.dexterity_exp_mult,\n          agiExpGain = 30 * player.agility_exp_mult,\n          staminaGain = 0.04 * this.skillMultipliers.stamina;\n        player.gainStrengthExp(strExpGain);\n        player.gainDefenseExp(defExpGain);\n        player.gainDexterityExp(dexExpGain);\n        player.gainAgilityExp(agiExpGain);\n        this.staminaBonus += staminaGain;\n        if (this.logging.general) {\n          this.log(\n            \"Training completed. Gained: \" +\n              formatNumber(strExpGain, 1) +\n              \" str exp, \" +\n              formatNumber(defExpGain, 1) +\n              \" def exp, \" +\n              formatNumber(dexExpGain, 1) +\n              \" dex exp, \" +\n              formatNumber(agiExpGain, 1) +\n              \" agi exp, \" +\n              formatNumber(staminaGain, 3) +\n              \" max stamina\",\n          );\n        }\n        this.startAction(player, this.action); // Repeat action\n        break;\n      }\n      case ActionTypes[\"FieldAnalysis\"]:\n      case ActionTypes[\"Field Analysis\"]: {\n        // Does not use stamina. Effectiveness depends on hacking, int, and cha\n        let eff =\n          0.04 * Math.pow(player.hacking_skill, 0.3) +\n          0.04 * Math.pow(player.intelligence, 0.9) +\n          0.02 * Math.pow(player.charisma, 0.3);\n        eff *= player.bladeburner_analysis_mult;\n        if (isNaN(eff) || eff < 0) {\n          throw new Error(\"Field Analysis Effectiveness calculated to be NaN or negative\");\n        }\n        const hackingExpGain = 20 * player.hacking_exp_mult,\n          charismaExpGain = 20 * player.charisma_exp_mult;\n        player.gainHackingExp(hackingExpGain);\n        player.gainIntelligenceExp(BladeburnerConstants.BaseIntGain);\n        player.gainCharismaExp(charismaExpGain);\n        this.changeRank(player, 0.1 * BitNodeMultipliers.BladeburnerRank);\n        this.getCurrentCity().improvePopulationEstimateByPercentage(eff * this.skillMultipliers.successChanceEstimate);\n        if (this.logging.general) {\n          this.log(\n            \"Field analysis completed. Gained 0.1 rank, \" +\n              formatNumber(hackingExpGain, 1) +\n              \" hacking exp, and \" +\n              formatNumber(charismaExpGain, 1) +\n              \" charisma exp\",\n          );\n        }\n        this.startAction(player, this.action); // Repeat action\n        break;\n      }\n      case ActionTypes[\"Recruitment\"]: {\n        const successChance = this.getRecruitmentSuccessChance(player);\n        if (Math.random() < successChance) {\n          const expGain = 2 * BladeburnerConstants.BaseStatGain * this.actionTimeToComplete;\n          player.gainCharismaExp(expGain);\n          ++this.teamSize;\n          if (this.logging.general) {\n            this.log(\"Successfully recruited a team member! Gained \" + formatNumber(expGain, 1) + \" charisma exp\");\n          }\n        } else {\n          const expGain = BladeburnerConstants.BaseStatGain * this.actionTimeToComplete;\n          player.gainCharismaExp(expGain);\n          if (this.logging.general) {\n            this.log(\"Failed to recruit a team member. Gained \" + formatNumber(expGain, 1) + \" charisma exp\");\n          }\n        }\n        this.startAction(player, this.action); // Repeat action\n        break;\n      }\n      case ActionTypes[\"Diplomacy\"]: {\n        const eff = this.getDiplomacyEffectiveness(player);\n        this.getCurrentCity().chaos *= eff;\n        if (this.getCurrentCity().chaos < 0) {\n          this.getCurrentCity().chaos = 0;\n        }\n        if (this.logging.general) {\n          this.log(\n            `Diplomacy completed. Chaos levels in the current city fell by ${numeralWrapper.formatPercentage(1 - eff)}`,\n          );\n        }\n        this.startAction(player, this.action); // Repeat Action\n        break;\n      }\n      case ActionTypes[\"Hyperbolic Regeneration Chamber\"]: {\n        player.regenerateHp(BladeburnerConstants.HrcHpGain);\n\n        const staminaGain = this.maxStamina * (BladeburnerConstants.HrcStaminaGain / 100);\n        this.stamina = Math.min(this.maxStamina, this.stamina + staminaGain);\n        this.startAction(player, this.action);\n        if (this.logging.general) {\n          this.log(\n            `Rested in Hyperbolic Regeneration Chamber. Restored ${\n              BladeburnerConstants.HrcHpGain\n            } HP and gained ${numeralWrapper.formatStamina(staminaGain)} stamina`,\n          );\n        }\n        break;\n      }\n      default:\n        console.error(`Bladeburner.completeAction() called for invalid action: ${this.action.type}`);\n        break;\n    }\n  }\n\n  changeRank(player: IPlayer, change: number): void {\n    if (isNaN(change)) {\n      throw new Error(\"NaN passed into Bladeburner.changeRank()\");\n    }\n    this.rank += change;\n    if (this.rank < 0) {\n      this.rank = 0;\n    }\n    this.maxRank = Math.max(this.rank, this.maxRank);\n\n    const bladeburnersFactionName = \"Bladeburners\";\n    if (factionExists(bladeburnersFactionName)) {\n      const bladeburnerFac = Factions[bladeburnersFactionName];\n      if (!(bladeburnerFac instanceof Faction)) {\n        throw new Error(\"Could not properly get Bladeburner Faction object in Bladeburner UI Overview Faction button\");\n      }\n      if (bladeburnerFac.isMember) {\n        const favorBonus = 1 + bladeburnerFac.favor / 100;\n        bladeburnerFac.playerReputation +=\n          BladeburnerConstants.RankToFactionRepFactor * change * player.faction_rep_mult * favorBonus;\n      }\n    }\n\n    // Gain skill points\n    const rankNeededForSp = (this.totalSkillPoints + 1) * BladeburnerConstants.RanksPerSkillPoint;\n    if (this.maxRank >= rankNeededForSp) {\n      // Calculate how many skill points to gain\n      const gainedSkillPoints = Math.floor(\n        (this.maxRank - rankNeededForSp) / BladeburnerConstants.RanksPerSkillPoint + 1,\n      );\n      this.skillPoints += gainedSkillPoints;\n      this.totalSkillPoints += gainedSkillPoints;\n    }\n  }\n\n  processAction(router: IRouter, player: IPlayer, seconds: number): void {\n    if (this.action.type === ActionTypes[\"Idle\"]) return;\n    if (this.actionTimeToComplete <= 0) {\n      throw new Error(`Invalid actionTimeToComplete value: ${this.actionTimeToComplete}, type; ${this.action.type}`);\n    }\n    if (!(this.action instanceof ActionIdentifier)) {\n      throw new Error(\"Bladeburner.action is not an ActionIdentifier Object\");\n    }\n\n    // If the previous action went past its completion time, add to the next action\n    // This is not added inmediatly in case the automation changes the action\n    this.actionTimeCurrent += seconds + this.actionTimeOverflow;\n    this.actionTimeOverflow = 0;\n    if (this.actionTimeCurrent >= this.actionTimeToComplete) {\n      this.actionTimeOverflow = this.actionTimeCurrent - this.actionTimeToComplete;\n      return this.completeAction(router, player);\n    }\n  }\n\n  calculateStaminaGainPerSecond(player: IPlayer): number {\n    const effAgility = player.agility * this.skillMultipliers.effAgi;\n    const maxStaminaBonus = this.maxStamina / BladeburnerConstants.MaxStaminaToGainFactor;\n    const gain = (BladeburnerConstants.StaminaGainPerSecond + maxStaminaBonus) * Math.pow(effAgility, 0.17);\n    return gain * (this.skillMultipliers.stamina * player.bladeburner_stamina_gain_mult);\n  }\n\n  calculateMaxStamina(player: IPlayer): void {\n    const effAgility = player.agility * this.skillMultipliers.effAgi;\n    const maxStamina =\n      (Math.pow(effAgility, 0.8) + this.staminaBonus) *\n      this.skillMultipliers.stamina *\n      player.bladeburner_max_stamina_mult;\n    if (this.maxStamina !== maxStamina) {\n      const oldMax = this.maxStamina;\n      this.maxStamina = maxStamina;\n      this.stamina = (this.maxStamina * this.stamina) / oldMax;\n    }\n    if (isNaN(maxStamina)) {\n      throw new Error(\"Max Stamina calculated to be NaN in Bladeburner.calculateMaxStamina()\");\n    }\n  }\n\n  create(): void {\n    this.contracts[\"Tracking\"] = new Contract({\n      name: \"Tracking\",\n      baseDifficulty: 125,\n      difficultyFac: 1.02,\n      rewardFac: 1.041,\n      rankGain: 0.3,\n      hpLoss: 0.5,\n      count: getRandomInt(25, 150),\n      weights: {\n        hack: 0,\n        str: 0.05,\n        def: 0.05,\n        dex: 0.35,\n        agi: 0.35,\n        cha: 0.1,\n        int: 0.05,\n      },\n      decays: {\n        hack: 0,\n        str: 0.91,\n        def: 0.91,\n        dex: 0.91,\n        agi: 0.91,\n        cha: 0.9,\n        int: 1,\n      },\n      isStealth: true,\n    });\n    this.contracts[\"Bounty Hunter\"] = new Contract({\n      name: \"Bounty Hunter\",\n      baseDifficulty: 250,\n      difficultyFac: 1.04,\n      rewardFac: 1.085,\n      rankGain: 0.9,\n      hpLoss: 1,\n      count: getRandomInt(5, 150),\n      weights: {\n        hack: 0,\n        str: 0.15,\n        def: 0.15,\n        dex: 0.25,\n        agi: 0.25,\n        cha: 0.1,\n        int: 0.1,\n      },\n      decays: {\n        hack: 0,\n        str: 0.91,\n        def: 0.91,\n        dex: 0.91,\n        agi: 0.91,\n        cha: 0.8,\n        int: 0.9,\n      },\n      isKill: true,\n    });\n    this.contracts[\"Retirement\"] = new Contract({\n      name: \"Retirement\",\n      baseDifficulty: 200,\n      difficultyFac: 1.03,\n      rewardFac: 1.065,\n      rankGain: 0.6,\n      hpLoss: 1,\n      count: getRandomInt(5, 150),\n      weights: {\n        hack: 0,\n        str: 0.2,\n        def: 0.2,\n        dex: 0.2,\n        agi: 0.2,\n        cha: 0.1,\n        int: 0.1,\n      },\n      decays: {\n        hack: 0,\n        str: 0.91,\n        def: 0.91,\n        dex: 0.91,\n        agi: 0.91,\n        cha: 0.8,\n        int: 0.9,\n      },\n      isKill: true,\n    });\n\n    this.operations[\"Investigation\"] = new Operation({\n      name: \"Investigation\",\n      baseDifficulty: 400,\n      difficultyFac: 1.03,\n      rewardFac: 1.07,\n      reqdRank: 25,\n      rankGain: 2.2,\n      rankLoss: 0.2,\n      count: getRandomInt(1, 100),\n      weights: {\n        hack: 0.25,\n        str: 0.05,\n        def: 0.05,\n        dex: 0.2,\n        agi: 0.1,\n        cha: 0.25,\n        int: 0.1,\n      },\n      decays: {\n        hack: 0.85,\n        str: 0.9,\n        def: 0.9,\n        dex: 0.9,\n        agi: 0.9,\n        cha: 0.7,\n        int: 0.9,\n      },\n      isStealth: true,\n    });\n    this.operations[\"Undercover Operation\"] = new Operation({\n      name: \"Undercover Operation\",\n      baseDifficulty: 500,\n      difficultyFac: 1.04,\n      rewardFac: 1.09,\n      reqdRank: 100,\n      rankGain: 4.4,\n      rankLoss: 0.4,\n      hpLoss: 2,\n      count: getRandomInt(1, 100),\n      weights: {\n        hack: 0.2,\n        str: 0.05,\n        def: 0.05,\n        dex: 0.2,\n        agi: 0.2,\n        cha: 0.2,\n        int: 0.1,\n      },\n      decays: {\n        hack: 0.8,\n        str: 0.9,\n        def: 0.9,\n        dex: 0.9,\n        agi: 0.9,\n        cha: 0.7,\n        int: 0.9,\n      },\n      isStealth: true,\n    });\n    this.operations[\"Sting Operation\"] = new Operation({\n      name: \"Sting Operation\",\n      baseDifficulty: 650,\n      difficultyFac: 1.04,\n      rewardFac: 1.095,\n      reqdRank: 500,\n      rankGain: 5.5,\n      rankLoss: 0.5,\n      hpLoss: 2.5,\n      count: getRandomInt(1, 150),\n      weights: {\n        hack: 0.25,\n        str: 0.05,\n        def: 0.05,\n        dex: 0.25,\n        agi: 0.1,\n        cha: 0.2,\n        int: 0.1,\n      },\n      decays: {\n        hack: 0.8,\n        str: 0.85,\n        def: 0.85,\n        dex: 0.85,\n        agi: 0.85,\n        cha: 0.7,\n        int: 0.9,\n      },\n      isStealth: true,\n    });\n    this.operations[\"Raid\"] = new Operation({\n      name: \"Raid\",\n      baseDifficulty: 800,\n      difficultyFac: 1.045,\n      rewardFac: 1.1,\n      reqdRank: 3000,\n      rankGain: 55,\n      rankLoss: 2.5,\n      hpLoss: 50,\n      count: getRandomInt(1, 150),\n      weights: {\n        hack: 0.1,\n        str: 0.2,\n        def: 0.2,\n        dex: 0.2,\n        agi: 0.2,\n        cha: 0,\n        int: 0.1,\n      },\n      decays: {\n        hack: 0.7,\n        str: 0.8,\n        def: 0.8,\n        dex: 0.8,\n        agi: 0.8,\n        cha: 0,\n        int: 0.9,\n      },\n      isKill: true,\n    });\n    this.operations[\"Stealth Retirement Operation\"] = new Operation({\n      name: \"Stealth Retirement Operation\",\n      baseDifficulty: 1000,\n      difficultyFac: 1.05,\n      rewardFac: 1.11,\n      reqdRank: 20e3,\n      rankGain: 22,\n      rankLoss: 2,\n      hpLoss: 10,\n      count: getRandomInt(1, 150),\n      weights: {\n        hack: 0.1,\n        str: 0.1,\n        def: 0.1,\n        dex: 0.3,\n        agi: 0.3,\n        cha: 0,\n        int: 0.1,\n      },\n      decays: {\n        hack: 0.7,\n        str: 0.8,\n        def: 0.8,\n        dex: 0.8,\n        agi: 0.8,\n        cha: 0,\n        int: 0.9,\n      },\n      isStealth: true,\n      isKill: true,\n    });\n    this.operations[\"Assassination\"] = new Operation({\n      name: \"Assassination\",\n      baseDifficulty: 1500,\n      difficultyFac: 1.06,\n      rewardFac: 1.14,\n      reqdRank: 50e3,\n      rankGain: 44,\n      rankLoss: 4,\n      hpLoss: 5,\n      count: getRandomInt(1, 150),\n      weights: {\n        hack: 0.1,\n        str: 0.1,\n        def: 0.1,\n        dex: 0.3,\n        agi: 0.3,\n        cha: 0,\n        int: 0.1,\n      },\n      decays: {\n        hack: 0.6,\n        str: 0.8,\n        def: 0.8,\n        dex: 0.8,\n        agi: 0.8,\n        cha: 0,\n        int: 0.8,\n      },\n      isStealth: true,\n      isKill: true,\n    });\n  }\n\n  process(router: IRouter, player: IPlayer): void {\n    // Edge case condition...if Operation Daedalus is complete trigger the BitNode\n    if (redPillFlag === false && this.blackops.hasOwnProperty(\"Operation Daedalus\")) {\n      return router.toBitVerse(false, false);\n    }\n\n    // If the Player starts doing some other actions, set action to idle and alert\n    if (Augmentations[AugmentationNames.BladesSimulacrum].owned === false && player.isWorking) {\n      if (this.action.type !== ActionTypes[\"Idle\"]) {\n        let msg = \"Your Bladeburner action was cancelled because you started doing something else.\";\n        if (this.automateEnabled) {\n          msg += `<br /><br />Your automation was disabled as well. You will have to re-enable it through the Bladeburner console`;\n          this.automateEnabled = false;\n        }\n        if (!Settings.SuppressBladeburnerPopup) {\n          dialogBoxCreate(msg);\n        }\n      }\n      this.resetAction();\n    }\n\n    // If the Player has no Stamina, set action to idle\n    if (this.stamina <= 0) {\n      this.log(\"Your Bladeburner action was cancelled because your stamina hit 0\");\n      this.resetAction();\n    }\n\n    // A 'tick' for this mechanic is one second (= 5 game cycles)\n    if (this.storedCycles >= BladeburnerConstants.CyclesPerSecond) {\n      let seconds = Math.floor(this.storedCycles / BladeburnerConstants.CyclesPerSecond);\n      seconds = Math.min(seconds, 5); // Max of 5 'ticks'\n      this.storedCycles -= seconds * BladeburnerConstants.CyclesPerSecond;\n\n      // Stamina\n      this.calculateMaxStamina(player);\n      this.stamina += this.calculateStaminaGainPerSecond(player) * seconds;\n      this.stamina = Math.min(this.maxStamina, this.stamina);\n\n      // Count increase for contracts/operations\n      for (const contract of Object.values(this.contracts) as Contract[]) {\n        const growthF = Growths[contract.name];\n        if (growthF === undefined) throw new Error(`growth formula for action '${contract.name}' is undefined`);\n        contract.count += (seconds * growthF()) / BladeburnerConstants.ActionCountGrowthPeriod;\n      }\n      for (const op of Object.values(this.operations) as Operation[]) {\n        const growthF = Growths[op.name];\n        if (growthF === undefined) throw new Error(`growth formula for action '${op.name}' is undefined`);\n        if (growthF !== undefined) {\n          op.count += (seconds * growthF()) / BladeburnerConstants.ActionCountGrowthPeriod;\n        }\n      }\n\n      // Chaos goes down very slowly\n      for (const cityName of BladeburnerConstants.CityNames) {\n        const city = this.cities[cityName];\n        if (!(city instanceof City)) {\n          throw new Error(\"Invalid City object when processing passive chaos reduction in Bladeburner.process\");\n        }\n        city.chaos -= 0.0001 * seconds;\n        city.chaos = Math.max(0, city.chaos);\n      }\n\n      // Random Events\n      this.randomEventCounter -= seconds;\n      if (this.randomEventCounter <= 0) {\n        this.randomEvent();\n        // Add instead of setting because we might have gone over the required time for the event\n        this.randomEventCounter += getRandomInt(240, 600);\n      }\n\n      this.processAction(router, player, seconds);\n\n      // Automation\n      if (this.automateEnabled) {\n        // Note: Do NOT set this.action = this.automateActionHigh/Low since it creates a reference\n        if (this.stamina <= this.automateThreshLow) {\n          if (this.action.name !== this.automateActionLow.name || this.action.type !== this.automateActionLow.type) {\n            this.action = new ActionIdentifier({\n              type: this.automateActionLow.type,\n              name: this.automateActionLow.name,\n            });\n            this.startAction(player, this.action);\n          }\n        } else if (this.stamina >= this.automateThreshHigh) {\n          if (this.action.name !== this.automateActionHigh.name || this.action.type !== this.automateActionHigh.type) {\n            this.action = new ActionIdentifier({\n              type: this.automateActionHigh.type,\n              name: this.automateActionHigh.name,\n            });\n            this.startAction(player, this.action);\n          }\n        }\n      }\n    }\n  }\n\n  getTypeAndNameFromActionId(actionId: IActionIdentifier): {\n    type: string;\n    name: string;\n  } {\n    const res = { type: \"\", name: \"\" };\n    const types = Object.keys(ActionTypes);\n    for (let i = 0; i < types.length; ++i) {\n      if (actionId.type === ActionTypes[types[i]]) {\n        res.type = types[i];\n        break;\n      }\n    }\n    if (res.type == null) {\n      res.type = \"Idle\";\n    }\n\n    res.name = actionId.name != null ? actionId.name : \"Idle\";\n    return res;\n  }\n\n  getContractNamesNetscriptFn(): string[] {\n    return Object.keys(this.contracts);\n  }\n\n  getOperationNamesNetscriptFn(): string[] {\n    return Object.keys(this.operations);\n  }\n\n  getBlackOpNamesNetscriptFn(): string[] {\n    return Object.keys(BlackOperations);\n  }\n\n  getGeneralActionNamesNetscriptFn(): string[] {\n    return Object.keys(GeneralActions);\n  }\n\n  getSkillNamesNetscriptFn(): string[] {\n    return Object.keys(Skills);\n  }\n\n  startActionNetscriptFn(player: IPlayer, type: string, name: string, workerScript: WorkerScript): boolean {\n    const errorLogText = `Invalid action: type='${type}' name='${name}'`;\n    const actionId = this.getActionIdFromTypeAndName(type, name);\n    if (actionId == null) {\n      workerScript.log(\"bladeburner.startAction\", errorLogText);\n      return false;\n    }\n\n    // Special logic for Black Ops\n    if (actionId.type === ActionTypes[\"BlackOp\"]) {\n      // Can't start a BlackOp if you don't have the required rank\n      const action = this.getActionObject(actionId);\n      if (action == null) throw new Error(`Action not found ${actionId.type}, ${actionId.name}`);\n      if (!(action instanceof BlackOperation)) throw new Error(`Action should be BlackOperation but isn't`);\n      //const blackOp = (action as BlackOperation);\n      if (action.reqdRank > this.rank) {\n        workerScript.log(\"bladeburner.startAction\", `Insufficient rank to start Black Op '${actionId.name}'.`);\n        return false;\n      }\n\n      // Can't start a BlackOp if its already been done\n      if (this.blackops[actionId.name] != null) {\n        workerScript.log(\"bladeburner.startAction\", `Black Op ${actionId.name} has already been completed.`);\n        return false;\n      }\n\n      // Can't start a BlackOp if you haven't done the one before it\n      const blackops = [];\n      for (const nm in BlackOperations) {\n        if (BlackOperations.hasOwnProperty(nm)) {\n          blackops.push(nm);\n        }\n      }\n      blackops.sort(function (a, b) {\n        return BlackOperations[a].reqdRank - BlackOperations[b].reqdRank; // Sort black ops in intended order\n      });\n\n      const i = blackops.indexOf(actionId.name);\n      if (i === -1) {\n        workerScript.log(\"bladeburner.startAction\", `Invalid Black Op: '${name}'`);\n        return false;\n      }\n\n      if (i > 0 && this.blackops[blackops[i - 1]] == null) {\n        workerScript.log(\n          \"bladeburner.startAction\",\n          `Preceding Black Op must be completed before starting '${actionId.name}'.`,\n        );\n        return false;\n      }\n    }\n\n    try {\n      this.startAction(player, actionId);\n      workerScript.log(\"bladeburner.startAction\", `Starting bladeburner action with type '${type}' and name ${name}\"`);\n      return true;\n    } catch (e) {\n      this.resetAction();\n      workerScript.log(\"bladeburner.startAction\", errorLogText);\n      return false;\n    }\n  }\n\n  getActionTimeNetscriptFn(player: IPlayer, type: string, name: string, workerScript: WorkerScript): number {\n    const errorLogText = `Invalid action: type='${type}' name='${name}'`;\n    const actionId = this.getActionIdFromTypeAndName(type, name);\n    if (actionId == null) {\n      workerScript.log(\"bladeburner.getActionTime\", errorLogText);\n      return -1;\n    }\n\n    const actionObj = this.getActionObject(actionId);\n    if (actionObj == null) {\n      workerScript.log(\"bladeburner.getActionTime\", errorLogText);\n      return -1;\n    }\n\n    switch (actionId.type) {\n      case ActionTypes[\"Contract\"]:\n      case ActionTypes[\"Operation\"]:\n      case ActionTypes[\"BlackOp\"]:\n      case ActionTypes[\"BlackOperation\"]:\n        return actionObj.getActionTime(this);\n      case ActionTypes[\"Training\"]:\n      case ActionTypes[\"Field Analysis\"]:\n      case ActionTypes[\"FieldAnalysis\"]:\n        return 30;\n      case ActionTypes[\"Recruitment\"]:\n        return this.getRecruitmentTime(player);\n      case ActionTypes[\"Diplomacy\"]:\n      case ActionTypes[\"Hyperbolic Regeneration Chamber\"]:\n        return 60;\n      default:\n        workerScript.log(\"bladeburner.getActionTime\", errorLogText);\n        return -1;\n    }\n  }\n\n  getActionEstimatedSuccessChanceNetscriptFn(\n    player: IPlayer,\n    type: string,\n    name: string,\n    workerScript: WorkerScript,\n  ): number[] {\n    const errorLogText = `Invalid action: type='${type}' name='${name}'`;\n    const actionId = this.getActionIdFromTypeAndName(type, name);\n    if (actionId == null) {\n      workerScript.log(\"bladeburner.getActionEstimatedSuccessChance\", errorLogText);\n      return [-1, -1];\n    }\n\n    const actionObj = this.getActionObject(actionId);\n    if (actionObj == null) {\n      workerScript.log(\"bladeburner.getActionEstimatedSuccessChance\", errorLogText);\n      return [-1, -1];\n    }\n\n    switch (actionId.type) {\n      case ActionTypes[\"Contract\"]:\n      case ActionTypes[\"Operation\"]:\n      case ActionTypes[\"BlackOp\"]:\n      case ActionTypes[\"BlackOperation\"]:\n        return actionObj.getEstSuccessChance(this);\n      case ActionTypes[\"Training\"]:\n      case ActionTypes[\"Field Analysis\"]:\n      case ActionTypes[\"FieldAnalysis\"]:\n      case ActionTypes[\"Diplomacy\"]:\n      case ActionTypes[\"Hyperbolic Regeneration Chamber\"]:\n        return [1, 1];\n      case ActionTypes[\"Recruitment\"]: {\n        const recChance = this.getRecruitmentSuccessChance(player);\n        return [recChance, recChance];\n      }\n      default:\n        workerScript.log(\"bladeburner.getActionEstimatedSuccessChance\", errorLogText);\n        return [-1, -1];\n    }\n  }\n\n  getActionCountRemainingNetscriptFn(type: string, name: string, workerScript: WorkerScript): number {\n    const errorLogText = `Invalid action: type='${type}' name='${name}'`;\n    const actionId = this.getActionIdFromTypeAndName(type, name);\n    if (actionId == null) {\n      workerScript.log(\"bladeburner.getActionCountRemaining\", errorLogText);\n      return -1;\n    }\n\n    const actionObj = this.getActionObject(actionId);\n    if (actionObj == null) {\n      workerScript.log(\"bladeburner.getActionCountRemaining\", errorLogText);\n      return -1;\n    }\n\n    switch (actionId.type) {\n      case ActionTypes[\"Contract\"]:\n      case ActionTypes[\"Operation\"]:\n        return Math.floor(actionObj.count);\n      case ActionTypes[\"BlackOp\"]:\n      case ActionTypes[\"BlackOperation\"]:\n        if (this.blackops[name] != null) {\n          return 0;\n        } else {\n          return 1;\n        }\n      case ActionTypes[\"Training\"]:\n      case ActionTypes[\"Recruitment\"]:\n      case ActionTypes[\"Field Analysis\"]:\n      case ActionTypes[\"FieldAnalysis\"]:\n      case ActionTypes[\"Diplomacy\"]:\n      case ActionTypes[\"Hyperbolic Regeneration Chamber\"]:\n        return Infinity;\n      default:\n        workerScript.log(\"bladeburner.getActionCountRemaining\", errorLogText);\n        return -1;\n    }\n  }\n\n  getSkillLevelNetscriptFn(skillName: string, workerScript: WorkerScript): number {\n    if (skillName === \"\" || !Skills.hasOwnProperty(skillName)) {\n      workerScript.log(\"bladeburner.getSkillLevel\", `Invalid skill: '${skillName}'`);\n      return -1;\n    }\n\n    if (this.skills[skillName] == null) {\n      return 0;\n    } else {\n      return this.skills[skillName];\n    }\n  }\n\n  getSkillUpgradeCostNetscriptFn(skillName: string, workerScript: WorkerScript): number {\n    if (skillName === \"\" || !Skills.hasOwnProperty(skillName)) {\n      workerScript.log(\"bladeburner.getSkillUpgradeCost\", `Invalid skill: '${skillName}'`);\n      return -1;\n    }\n\n    const skill = Skills[skillName];\n    if (this.skills[skillName] == null) {\n      return skill.calculateCost(0);\n    } else {\n      return skill.calculateCost(this.skills[skillName]);\n    }\n  }\n\n  upgradeSkillNetscriptFn(skillName: string, workerScript: WorkerScript): boolean {\n    const errorLogText = `Invalid skill: '${skillName}'`;\n    if (!Skills.hasOwnProperty(skillName)) {\n      workerScript.log(\"bladeburner.upgradeSkill\", errorLogText);\n      return false;\n    }\n\n    const skill = Skills[skillName];\n    let currentLevel = 0;\n    if (this.skills[skillName] && !isNaN(this.skills[skillName])) {\n      currentLevel = this.skills[skillName];\n    }\n    const cost = skill.calculateCost(currentLevel);\n\n    if (skill.maxLvl && currentLevel >= skill.maxLvl) {\n      workerScript.log(\"bladeburner.upgradeSkill\", `Skill '${skillName}' is already maxed.`);\n      return false;\n    }\n\n    if (this.skillPoints < cost) {\n      workerScript.log(\n        \"bladeburner.upgradeSkill\",\n        `You do not have enough skill points to upgrade ${skillName} (You have ${this.skillPoints}, you need ${cost})`,\n      );\n      return false;\n    }\n\n    this.skillPoints -= cost;\n    this.upgradeSkill(skill);\n    workerScript.log(\"bladeburner.upgradeSkill\", `'${skillName}' upgraded to level ${this.skills[skillName]}`);\n    return true;\n  }\n\n  getTeamSizeNetscriptFn(type: string, name: string, workerScript: WorkerScript): number {\n    if (type === \"\" && name === \"\") {\n      return this.teamSize;\n    }\n\n    const errorLogText = `Invalid action: type='${type}' name='${name}'`;\n    const actionId = this.getActionIdFromTypeAndName(type, name);\n    if (actionId == null) {\n      workerScript.log(\"bladeburner.getTeamSize\", errorLogText);\n      return -1;\n    }\n\n    const actionObj = this.getActionObject(actionId);\n    if (actionObj == null) {\n      workerScript.log(\"bladeburner.getTeamSize\", errorLogText);\n      return -1;\n    }\n\n    if (\n      actionId.type === ActionTypes[\"Operation\"] ||\n      actionId.type === ActionTypes[\"BlackOp\"] ||\n      actionId.type === ActionTypes[\"BlackOperation\"]\n    ) {\n      return actionObj.teamCount;\n    } else {\n      return 0;\n    }\n  }\n\n  setTeamSizeNetscriptFn(type: string, name: string, size: number, workerScript: WorkerScript): number {\n    const errorLogText = `Invalid action: type='${type}' name='${name}'`;\n    const actionId = this.getActionIdFromTypeAndName(type, name);\n    if (actionId == null) {\n      workerScript.log(\"bladeburner.setTeamSize\", errorLogText);\n      return -1;\n    }\n\n    if (\n      actionId.type !== ActionTypes[\"Operation\"] &&\n      actionId.type !== ActionTypes[\"BlackOp\"] &&\n      actionId.type !== ActionTypes[\"BlackOperation\"]\n    ) {\n      workerScript.log(\"bladeburner.setTeamSize\", \"Only valid for 'Operations' and 'BlackOps'\");\n      return -1;\n    }\n\n    const actionObj = this.getActionObject(actionId);\n    if (actionObj == null) {\n      workerScript.log(\"bladeburner.setTeamSize\", errorLogText);\n      return -1;\n    }\n\n    let sanitizedSize = Math.round(size);\n    if (isNaN(sanitizedSize) || sanitizedSize < 0) {\n      workerScript.log(\"bladeburner.setTeamSize\", `Invalid size: ${size}`);\n      return -1;\n    }\n    if (this.teamSize < sanitizedSize) {\n      sanitizedSize = this.teamSize;\n    }\n    actionObj.teamCount = sanitizedSize;\n    workerScript.log(\"bladeburner.setTeamSize\", `Team size for '${name}' set to ${sanitizedSize}.`);\n    return sanitizedSize;\n  }\n\n  joinBladeburnerFactionNetscriptFn(workerScript: WorkerScript): boolean {\n    const bladeburnerFac = Factions[\"Bladeburners\"];\n    if (bladeburnerFac.isMember) {\n      return true;\n    } else if (this.rank >= BladeburnerConstants.RankNeededForFaction) {\n      joinFaction(bladeburnerFac);\n      workerScript.log(\"bladeburner.joinBladeburnerFaction\", \"Joined Bladeburners faction.\");\n      return true;\n    } else {\n      workerScript.log(\n        \"bladeburner.joinBladeburnerFaction\",\n        `You do not have the required rank (${this.rank}/${BladeburnerConstants.RankNeededForFaction}).`,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Serialize the current object to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"Bladeburner\", this);\n  }\n\n  /**\n   * Initiatizes a Bladeburner object from a JSON save state.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Bladeburner {\n    return Generic_fromJSON(Bladeburner, value.data);\n  }\n}\n\nReviver.constructors.Bladeburner = Bladeburner;\n","import { CompanyPosition } from \"./CompanyPosition\";\nimport * as posNames from \"./data/companypositionnames\";\n\nimport { CONSTANTS } from \"../Constants\";\nimport { IMap } from \"../types\";\n\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\n\nexport interface IConstructorParams {\n  name: string;\n  info: string;\n  companyPositions: IMap<boolean>;\n  expMultiplier: number;\n  salaryMultiplier: number;\n  jobStatReqOffset: number;\n  isMegacorp?: boolean;\n}\n\nconst DefaultConstructorParams: IConstructorParams = {\n  name: \"\",\n  info: \"\",\n  companyPositions: {},\n  expMultiplier: 1,\n  salaryMultiplier: 1,\n  jobStatReqOffset: 0,\n};\n\nexport class Company {\n  /**\n   * Company name\n   */\n  name: string;\n\n  /**\n   * Description and general information about company\n   */\n  info: string;\n\n  /**\n   * Has faction associated.\n   */\n  isMegacorp: boolean;\n\n  /**\n   * Object that holds all available positions in this Company.\n   * Position names are held in keys.\n   * The values for the keys don't matter, but we'll make them booleans\n   *\n   * Must match names of Company Positions, defined in data/companypositionnames.ts\n   */\n  companyPositions: IMap<boolean>;\n\n  /**\n   * Company-specific multiplier for earnings\n   */\n  expMultiplier: number;\n  salaryMultiplier: number;\n\n  /**\n   * The additional levels of stats you need to quality for a job\n   * in this company.\n   *\n   * For example, the base stat requirement for an intern position is 1.\n   * But if a company has a offset of 200, then you would need stat(s) of 201\n   */\n  jobStatReqOffset: number;\n\n  /**\n   * Properties to track the player's progress in this company\n   */\n  isPlayerEmployed: boolean;\n  playerReputation: number;\n  favor: number;\n  rolloverRep: number;\n\n  constructor(p: IConstructorParams = DefaultConstructorParams) {\n    this.name = p.name;\n    this.info = p.info;\n    this.companyPositions = p.companyPositions;\n    this.expMultiplier = p.expMultiplier;\n    this.salaryMultiplier = p.salaryMultiplier;\n    this.jobStatReqOffset = p.jobStatReqOffset;\n\n    this.isPlayerEmployed = false;\n    this.playerReputation = 1;\n    this.favor = 0;\n    this.rolloverRep = 0;\n    this.isMegacorp = false;\n    if (p.isMegacorp) this.isMegacorp = true;\n  }\n\n  hasPosition(pos: CompanyPosition | string): boolean {\n    if (pos instanceof CompanyPosition) {\n      return this.companyPositions[pos.name] != null;\n    } else {\n      return this.companyPositions[pos] != null;\n    }\n  }\n\n  hasAgentPositions(): boolean {\n    return this.companyPositions[posNames.AgentCompanyPositions[0]] != null;\n  }\n\n  hasBusinessConsultantPositions(): boolean {\n    return this.companyPositions[posNames.BusinessConsultantCompanyPositions[0]] != null;\n  }\n\n  hasBusinessPositions(): boolean {\n    return this.companyPositions[posNames.BusinessCompanyPositions[0]] != null;\n  }\n\n  hasEmployeePositions(): boolean {\n    return this.companyPositions[posNames.MiscCompanyPositions[1]] != null;\n  }\n\n  hasITPositions(): boolean {\n    return this.companyPositions[posNames.ITCompanyPositions[0]] != null;\n  }\n\n  hasSecurityPositions(): boolean {\n    return this.companyPositions[posNames.SecurityCompanyPositions[2]] != null;\n  }\n\n  hasSoftwareConsultantPositions(): boolean {\n    return this.companyPositions[posNames.SoftwareConsultantCompanyPositions[0]] != null;\n  }\n\n  hasSoftwarePositions(): boolean {\n    return this.companyPositions[posNames.SoftwareCompanyPositions[0]] != null;\n  }\n\n  hasWaiterPositions(): boolean {\n    return this.companyPositions[posNames.MiscCompanyPositions[0]] != null;\n  }\n\n  gainFavor(): void {\n    if (this.favor == null) {\n      this.favor = 0;\n    }\n    if (this.rolloverRep == null) {\n      this.rolloverRep = 0;\n    }\n    const res = this.getFavorGain();\n    if (res.length != 2) {\n      console.error(\"Invalid result from getFavorGain() function\");\n      return;\n    }\n\n    this.favor += res[0];\n    this.rolloverRep = res[1];\n  }\n\n  getFavorGain(): number[] {\n    if (this.favor == null) {\n      this.favor = 0;\n    }\n    if (this.rolloverRep == null) {\n      this.rolloverRep = 0;\n    }\n    let favorGain = 0,\n      rep = this.playerReputation + this.rolloverRep;\n    let reqdRep = CONSTANTS.CompanyReputationToFavorBase * Math.pow(CONSTANTS.CompanyReputationToFavorMult, this.favor);\n    while (rep > 0) {\n      if (rep >= reqdRep) {\n        ++favorGain;\n        rep -= reqdRep;\n      } else {\n        break;\n      }\n      reqdRep *= CONSTANTS.FactionReputationToFavorMult;\n    }\n    return [favorGain, rep];\n  }\n\n  /**\n   * Serialize the current object to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"Company\", this);\n  }\n\n  /**\n   * Initiatizes a Company from a JSON save state.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Company {\n    return Generic_fromJSON(Company, value.data);\n  }\n}\n\nReviver.constructors.Company = Company;\n","/**\n * Implements functions for purchasing servers or purchasing more RAM for\n * the home computer\n */\nimport { AddToAllServers, createUniqueRandomIp } from \"./AllServers\";\nimport { safetlyCreateUniqueServer } from \"./ServerHelpers\";\n\nimport { BitNodeMultipliers } from \"../BitNode/BitNodeMultipliers\";\nimport { CONSTANTS } from \"../Constants\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\n\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\nimport { isPowerOfTwo } from \"../utils/helpers/isPowerOfTwo\";\n\n// Returns the cost of purchasing a server with the given RAM\n// Returns Infinity for invalid 'ram' arguments\n/**\n * @param ram Amount of RAM on purchased server (GB)\n * @returns Cost of purchasing the given server. Returns infinity for invalid arguments\n */\nexport function getPurchaseServerCost(ram: number): number {\n  const sanitizedRam = Math.round(ram);\n  if (isNaN(sanitizedRam) || !isPowerOfTwo(sanitizedRam)) {\n    return Infinity;\n  }\n\n  if (sanitizedRam > getPurchaseServerMaxRam()) {\n    return Infinity;\n  }\n\n  return sanitizedRam * CONSTANTS.BaseCostFor1GBOfRamServer * BitNodeMultipliers.PurchasedServerCost;\n}\n\nexport function getPurchaseServerLimit(): number {\n  return Math.round(CONSTANTS.PurchasedServerLimit * BitNodeMultipliers.PurchasedServerLimit);\n}\n\nexport function getPurchaseServerMaxRam(): number {\n  const ram = Math.round(CONSTANTS.PurchasedServerMaxRam * BitNodeMultipliers.PurchasedServerMaxRam);\n\n  // Round this to the nearest power of 2\n  return 1 << (31 - Math.clz32(ram));\n}\n\n// Manually purchase a server (NOT through Netscript)\nexport function purchaseServer(hostname: string, ram: number, cost: number, p: IPlayer): void {\n  //Check if player has enough money\n  if (!p.canAfford(cost)) {\n    dialogBoxCreate(\"You don't have enough money to purchase this server!\");\n    return;\n  }\n\n  //Maximum server limit\n  if (p.purchasedServers.length >= getPurchaseServerLimit()) {\n    dialogBoxCreate(\n      \"You have reached the maximum limit of \" +\n        getPurchaseServerLimit() +\n        \" servers. \" +\n        \"You cannot purchase any more. You can \" +\n        \"delete some of your purchased servers using the deleteServer() Netscript function in a script\",\n    );\n    return;\n  }\n\n  if (hostname == \"\") {\n    dialogBoxCreate(\"You must enter a hostname for your new server!\");\n    return;\n  }\n\n  // Create server\n  const newServ = safetlyCreateUniqueServer({\n    adminRights: true,\n    hostname: hostname,\n    ip: createUniqueRandomIp(),\n    isConnectedTo: false,\n    maxRam: ram,\n    organizationName: \"\",\n    purchasedByPlayer: true,\n  });\n  AddToAllServers(newServ);\n\n  // Add to Player's purchasedServers array\n  p.purchasedServers.push(newServ.ip);\n\n  // Connect new server to home computer\n  const homeComputer = p.getHomeComputer();\n  homeComputer.serversOnNetwork.push(newServ.ip);\n  newServ.serversOnNetwork.push(homeComputer.ip);\n\n  p.loseMoney(cost);\n\n  dialogBoxCreate(\"Server successfully purchased with hostname \" + hostname);\n}\n\n// Manually upgrade RAM on home computer (NOT through Netscript)\nexport function purchaseRamForHomeComputer(p: IPlayer): void {\n  const cost = p.getUpgradeHomeRamCost();\n  if (!p.canAfford(cost)) {\n    dialogBoxCreate(\"You do not have enough money to purchase additional RAM for your home computer\");\n    return;\n  }\n\n  const homeComputer = p.getHomeComputer();\n  if (homeComputer.maxRam >= CONSTANTS.HomeComputerMaxRam) {\n    dialogBoxCreate(`You cannot upgrade your home computer RAM because it is at its maximum possible value`);\n    return;\n  }\n\n  homeComputer.maxRam *= 2;\n  p.loseMoney(cost);\n}\n","import { Material } from \"./Material\";\nimport { ICorporation } from \"./ICorporation\";\nimport { IIndustry } from \"./IIndustry\";\nimport { MaterialSizes } from \"./MaterialSizes\";\nimport { IMap } from \"../types\";\nimport { numeralWrapper } from \"../ui/numeralFormat\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\nimport { exceptionAlert } from \"../utils/helpers/exceptionAlert\";\n\ninterface IConstructorParams {\n  corp?: ICorporation;\n  industry?: IIndustry;\n  loc?: string;\n  size?: number;\n}\n\nexport class Warehouse {\n  // Warehouse's level, which affects its maximum size\n  level = 1;\n\n  // City that this Warehouse is in\n  loc: string;\n\n  // Map of Materials held by this Warehouse\n  materials: IMap<Material>;\n\n  // Maximum amount warehouse can hold\n  size: number;\n\n  // Amount of space currently used by warehouse\n  sizeUsed = 0;\n\n  // Whether Smart Supply is enabled for this Industry (the Industry that this Warehouse is for)\n  smartSupplyEnabled = false;\n\n  // Decide if smart supply should use the materials already in the warehouse when deciding on the amount to buy.\n  smartSupplyUseLeftovers: { [key: string]: boolean | undefined } = {};\n\n  // Stores the amount of product to be produced. Used for Smart Supply unlock.\n  // The production tracked by smart supply is always based on the previous cycle,\n  // so it will always trail the \"true\" production by 1 cycle\n  smartSupplyStore = 0;\n\n  constructor(params: IConstructorParams = {}) {\n    this.loc = params.loc ? params.loc : \"\";\n    this.size = params.size ? params.size : 0;\n\n    this.materials = {\n      Water: new Material({ name: \"Water\" }),\n      Energy: new Material({ name: \"Energy\" }),\n      Food: new Material({ name: \"Food\" }),\n      Plants: new Material({ name: \"Plants\" }),\n      Metal: new Material({ name: \"Metal\" }),\n      Hardware: new Material({ name: \"Hardware\" }),\n      Chemicals: new Material({ name: \"Chemicals\" }),\n      Drugs: new Material({ name: \"Drugs\" }),\n      Robots: new Material({ name: \"Robots\" }),\n      AICores: new Material({ name: \"AI Cores\" }),\n      RealEstate: new Material({ name: \"Real Estate\" }),\n    };\n\n    this.smartSupplyUseLeftovers = {\n      Water: true,\n      Energy: true,\n      Food: true,\n      Plants: true,\n      Metal: true,\n      Hardware: true,\n      Chemicals: true,\n      Drugs: true,\n      Robots: true,\n      AICores: true,\n      RealEstate: true,\n    };\n\n    if (params.corp && params.industry) {\n      this.updateSize(params.corp, params.industry);\n    }\n\n    // Default smart supply to being enabled if the upgrade is unlocked\n    if (params.corp?.unlockUpgrades[1]) {\n      this.smartSupplyEnabled = true;\n    }\n  }\n\n  // Re-calculate how much space is being used by this Warehouse\n  updateMaterialSizeUsed(): void {\n    this.sizeUsed = 0;\n    for (const matName in this.materials) {\n      const mat = this.materials[matName];\n      if (MaterialSizes.hasOwnProperty(matName)) {\n        this.sizeUsed += mat.qty * MaterialSizes[matName];\n      }\n    }\n    if (this.sizeUsed > this.size) {\n      console.warn(\"Warehouse size used greater than capacity, something went wrong\");\n    }\n  }\n\n  updateSize(corporation: ICorporation, industry: IIndustry): void {\n    try {\n      this.size = this.level * 100 * corporation.getStorageMultiplier() * industry.getStorageMultiplier();\n    } catch (e) {\n      exceptionAlert(e);\n    }\n  }\n\n  // Serialize the current object to a JSON save state.\n  toJSON(): any {\n    return Generic_toJSON(\"Warehouse\", this);\n  }\n\n  // Initiatizes a Warehouse object from a JSON save state.\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Warehouse {\n    return Generic_fromJSON(Warehouse, value.data);\n  }\n}\n\nReviver.constructors.Warehouse = Warehouse;\n","import { gangMemberTasksMetadata } from \"./data/tasks\";\nimport { GangMemberTask } from \"./GangMemberTask\";\n\nexport const GangMemberTasks: {\n  [key: string]: GangMemberTask;\n} = {};\n\n(function () {\n  gangMemberTasksMetadata.forEach((e) => {\n    GangMemberTasks[e.name] = new GangMemberTask(e.name, e.desc, e.isHacking, e.isCombat, e.params);\n  });\n})();\n","import { BitNodeMultipliers } from \"../../BitNode/BitNodeMultipliers\";\nimport { HacknetServerConstants } from \"../data/Constants\";\n\nexport function calculateHashGainRate(\n  level: number,\n  ramUsed: number,\n  maxRam: number,\n  cores: number,\n  mult: number,\n): number {\n  const baseGain = HacknetServerConstants.HashesPerLevel * level;\n  const ramMultiplier = Math.pow(1.07, Math.log2(maxRam));\n  const coreMultiplier = 1 + (cores - 1) / 5;\n  const ramRatio = 1 - ramUsed / maxRam;\n\n  return baseGain * ramMultiplier * coreMultiplier * ramRatio * mult * BitNodeMultipliers.HacknetNodeMoney;\n}\n\nexport function calculateLevelUpgradeCost(startingLevel: number, extraLevels = 1, costMult = 1): number {\n  const sanitizedLevels = Math.round(extraLevels);\n  if (isNaN(sanitizedLevels) || sanitizedLevels < 1) {\n    return 0;\n  }\n\n  if (startingLevel >= HacknetServerConstants.MaxLevel) {\n    return Infinity;\n  }\n\n  const mult = HacknetServerConstants.UpgradeLevelMult;\n  let totalMultiplier = 0;\n  let currLevel = startingLevel;\n  for (let i = 0; i < sanitizedLevels; ++i) {\n    totalMultiplier += Math.pow(mult, currLevel);\n    ++currLevel;\n  }\n\n  return 10 * HacknetServerConstants.BaseCost * totalMultiplier * costMult;\n}\n\nexport function calculateRamUpgradeCost(startingRam: number, extraLevels = 1, costMult = 1): number {\n  const sanitizedLevels = Math.round(extraLevels);\n  if (isNaN(sanitizedLevels) || sanitizedLevels < 1) {\n    return 0;\n  }\n\n  if (startingRam >= HacknetServerConstants.MaxRam) {\n    return Infinity;\n  }\n\n  let totalCost = 0;\n  let numUpgrades = Math.round(Math.log2(startingRam));\n  let currentRam = startingRam;\n  for (let i = 0; i < sanitizedLevels; ++i) {\n    const baseCost = currentRam * HacknetServerConstants.RamBaseCost;\n    const mult = Math.pow(HacknetServerConstants.UpgradeRamMult, numUpgrades);\n\n    totalCost += baseCost * mult;\n\n    currentRam *= 2;\n    ++numUpgrades;\n  }\n  totalCost *= costMult;\n\n  return totalCost;\n}\n\nexport function calculateCoreUpgradeCost(startingCores: number, extraLevels = 1, costMult = 1): number {\n  const sanitizedLevels = Math.round(extraLevels);\n  if (isNaN(sanitizedLevels) || sanitizedLevels < 1) {\n    return 0;\n  }\n\n  if (startingCores >= HacknetServerConstants.MaxCores) {\n    return Infinity;\n  }\n\n  const mult = HacknetServerConstants.UpgradeCoreMult;\n  let totalCost = 0;\n  let currentCores = startingCores;\n  for (let i = 0; i < sanitizedLevels; ++i) {\n    totalCost += Math.pow(mult, currentCores - 1);\n    ++currentCores;\n  }\n  totalCost *= HacknetServerConstants.CoreBaseCost;\n  totalCost *= costMult;\n\n  return totalCost;\n}\n\nexport function calculateCacheUpgradeCost(startingCache: number, extraLevels = 1): number {\n  const sanitizedLevels = Math.round(extraLevels);\n  if (isNaN(sanitizedLevels) || sanitizedLevels < 1) {\n    return 0;\n  }\n\n  if (startingCache >= HacknetServerConstants.MaxCache) {\n    return Infinity;\n  }\n\n  const mult = HacknetServerConstants.UpgradeCacheMult;\n  let totalCost = 0;\n  let currentCache = startingCache;\n  for (let i = 0; i < sanitizedLevels; ++i) {\n    totalCost += Math.pow(mult, currentCache - 1);\n    ++currentCache;\n  }\n  totalCost *= HacknetServerConstants.CacheBaseCost;\n\n  return totalCost;\n}\n\nexport function calculateServerCost(n: number, mult = 1): number {\n  if (n - 1 >= HacknetServerConstants.MaxServers) {\n    return Infinity;\n  }\n\n  return HacknetServerConstants.BaseCost * Math.pow(HacknetServerConstants.PurchaseMult, n - 1) * mult;\n}\n","/**\n * Functions for buying/selling stocks. There are four functions total, two for\n * long positions and two for short positions.\n */\nimport { Stock } from \"./Stock\";\nimport {\n  getBuyTransactionCost,\n  getSellTransactionGain,\n  processTransactionForecastMovement,\n} from \"./StockMarketHelpers\";\n\nimport { PositionTypes } from \"./data/PositionTypes\";\n\nimport { CONSTANTS } from \"../Constants\";\nimport { WorkerScript } from \"../Netscript/WorkerScript\";\nimport { Player } from \"../Player\";\n\nimport { numeralWrapper } from \"../ui/numeralFormat\";\nimport { Money } from \"../ui/React/Money\";\n\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\n\nimport * as React from \"react\";\n\n/**\n * Each function takes an optional config object as its last argument\n */\ninterface IOptions {\n  rerenderFn?: () => void;\n  suppressDialog?: boolean;\n}\n\n/**\n * Attempt to buy a stock in the long position\n * @param {Stock} stock - Stock to buy\n * @param {number} shares - Number of shares to buy\n * @param {WorkerScript} workerScript - If this is being called through Netscript\n * @param opts - Optional configuration for this function's behavior. See top of file\n * @returns {boolean} - true if successful, false otherwise\n */\nexport function buyStock(\n  stock: Stock,\n  shares: number,\n  workerScript: WorkerScript | null = null,\n  opts: IOptions = {},\n): boolean {\n  // Validate arguments\n  shares = Math.round(shares);\n  if (shares <= 0) {\n    return false;\n  }\n  if (stock == null || isNaN(shares)) {\n    if (workerScript) {\n      workerScript.log(\"buyStock\", `Invalid arguments: stock='${stock}' shares='${shares}'`);\n    } else if (opts.suppressDialog !== true) {\n      dialogBoxCreate(\"Failed to buy stock. This may be a bug, contact developer\");\n    }\n\n    return false;\n  }\n\n  // Does player have enough money?\n  const totalPrice = getBuyTransactionCost(stock, shares, PositionTypes.Long);\n  if (totalPrice == null) {\n    return false;\n  }\n  if (Player.money.lt(totalPrice)) {\n    if (workerScript) {\n      workerScript.log(\n        \"buyStock\",\n        `You do not have enough money to purchase this position. You need ${numeralWrapper.formatMoney(totalPrice)}.`,\n      );\n    } else if (opts.suppressDialog !== true) {\n      dialogBoxCreate(\n        <>\n          You do not have enough money to purchase this. You need <Money money={totalPrice} />\n        </>,\n      );\n    }\n\n    return false;\n  }\n\n  // Would this purchase exceed the maximum number of shares?\n  if (shares + stock.playerShares + stock.playerShortShares > stock.maxShares) {\n    if (workerScript) {\n      workerScript.log(\n        \"buyStock\",\n        `Purchasing '${shares + stock.playerShares + stock.playerShortShares}' shares would exceed ${\n          stock.symbol\n        }'s maximum (${stock.maxShares}) number of shares`,\n      );\n    } else if (opts.suppressDialog !== true) {\n      dialogBoxCreate(\n        `You cannot purchase this many shares. ${stock.symbol} has a maximum of ${numeralWrapper.formatShares(\n          stock.maxShares,\n        )} shares.`,\n      );\n    }\n\n    return false;\n  }\n\n  const origTotal = stock.playerShares * stock.playerAvgPx;\n  Player.loseMoney(totalPrice);\n  const newTotal = origTotal + totalPrice - CONSTANTS.StockMarketCommission;\n  stock.playerShares = Math.round(stock.playerShares + shares);\n  stock.playerAvgPx = newTotal / stock.playerShares;\n  processTransactionForecastMovement(stock, shares);\n  if (opts.rerenderFn != null && typeof opts.rerenderFn === \"function\") {\n    opts.rerenderFn();\n  }\n\n  if (workerScript) {\n    const resultTxt =\n      `Bought ${numeralWrapper.formatShares(shares)} shares of ${stock.symbol} for ${numeralWrapper.formatMoney(\n        totalPrice,\n      )}. ` + `Paid ${numeralWrapper.formatMoney(CONSTANTS.StockMarketCommission)} in commission fees.`;\n    workerScript.log(\"buyStock\", resultTxt);\n  } else if (opts.suppressDialog !== true) {\n    dialogBoxCreate(\n      <>\n        Bought {numeralWrapper.formatShares(shares)} shares of {stock.symbol} for <Money money={totalPrice} />. Paid{\" \"}\n        <Money money={CONSTANTS.StockMarketCommission} /> in commission fees.\n      </>,\n    );\n  }\n\n  return true;\n}\n\n/**\n * Attempt to sell a stock in the long position\n * @param {Stock} stock - Stock to sell\n * @param {number} shares - Number of shares to sell\n * @param {WorkerScript} workerScript - If this is being called through Netscript\n * @param opts - Optional configuration for this function's behavior. See top of file\n * returns {boolean} - true if successfully sells given number of shares OR MAX owned, false otherwise\n */\nexport function sellStock(\n  stock: Stock,\n  shares: number,\n  workerScript: WorkerScript | null = null,\n  opts: IOptions = {},\n): boolean {\n  // Sanitize/Validate arguments\n  if (stock == null || shares < 0 || isNaN(shares)) {\n    if (workerScript) {\n      workerScript.log(\"sellStock\", `Invalid arguments: stock='${stock}' shares='${shares}'`);\n    } else if (opts.suppressDialog !== true) {\n      dialogBoxCreate(\n        \"Failed to sell stock. This is probably due to an invalid quantity. Otherwise, this may be a bug, contact developer\",\n      );\n    }\n\n    return false;\n  }\n  shares = Math.round(shares);\n  if (shares > stock.playerShares) {\n    shares = stock.playerShares;\n  }\n  if (shares === 0) {\n    return false;\n  }\n\n  const gains = getSellTransactionGain(stock, shares, PositionTypes.Long);\n  if (gains == null) {\n    return false;\n  }\n  let netProfit = gains - stock.playerAvgPx * shares;\n  if (isNaN(netProfit)) {\n    netProfit = 0;\n  }\n  Player.gainMoney(gains);\n  Player.recordMoneySource(netProfit, \"stock\");\n  if (workerScript) {\n    workerScript.scriptRef.onlineMoneyMade += netProfit;\n    Player.scriptProdSinceLastAug += netProfit;\n  }\n\n  stock.playerShares = Math.round(stock.playerShares - shares);\n  if (stock.playerShares === 0) {\n    stock.playerAvgPx = 0;\n  }\n\n  processTransactionForecastMovement(stock, shares);\n\n  if (opts.rerenderFn != null && typeof opts.rerenderFn === \"function\") {\n    opts.rerenderFn();\n  }\n\n  if (workerScript) {\n    const resultTxt =\n      `Sold ${numeralWrapper.formatShares(shares)} shares of ${stock.symbol}. ` +\n      `After commissions, you gained a total of ${numeralWrapper.formatMoney(gains)}.`;\n    workerScript.log(\"sellStock\", resultTxt);\n  } else if (opts.suppressDialog !== true) {\n    dialogBoxCreate(\n      <>\n        Sold {numeralWrapper.formatShares(shares)} shares of {stock.symbol}. After commissions, you gained a total of{\" \"}\n        <Money money={gains} />.\n      </>,\n    );\n  }\n\n  return true;\n}\n\n/**\n * Attempt to buy a stock in the short position\n * @param {Stock} stock - Stock to sell\n * @param {number} shares - Number of shares to short\n * @param {WorkerScript} workerScript - If this is being called through Netscript\n * @param opts - Optional configuration for this function's behavior. See top of file\n * @returns {boolean} - true if successful, false otherwise\n */\nexport function shortStock(\n  stock: Stock,\n  shares: number,\n  workerScript: WorkerScript | null = null,\n  opts: IOptions = {},\n): boolean {\n  // Validate arguments\n  shares = Math.round(shares);\n  if (shares <= 0) {\n    return false;\n  }\n  if (stock == null || isNaN(shares)) {\n    if (workerScript) {\n      workerScript.log(\"shortStock\", `Invalid arguments: stock='${stock}' shares='${shares}'`);\n    } else if (opts.suppressDialog !== true) {\n      dialogBoxCreate(\n        \"Failed to initiate a short position in a stock. This is probably \" +\n          \"due to an invalid quantity. Otherwise, this may be a bug,  so contact developer\",\n      );\n    }\n    return false;\n  }\n\n  // Does the player have enough money?\n  const totalPrice = getBuyTransactionCost(stock, shares, PositionTypes.Short);\n  if (totalPrice == null) {\n    return false;\n  }\n  if (Player.money.lt(totalPrice)) {\n    if (workerScript) {\n      workerScript.log(\n        \"shortStock\",\n        \"You do not have enough \" +\n          \"money to purchase this short position. You need \" +\n          numeralWrapper.formatMoney(totalPrice),\n      );\n    } else if (opts.suppressDialog !== true) {\n      dialogBoxCreate(\n        <>\n          You do not have enough money to purchase this short position. You need <Money money={totalPrice} />\n        </>,\n      );\n    }\n\n    return false;\n  }\n\n  // Would this purchase exceed the maximum number of shares?\n  if (shares + stock.playerShares + stock.playerShortShares > stock.maxShares) {\n    if (workerScript) {\n      workerScript.log(\n        \"shortStock\",\n        `This '${shares + stock.playerShares + stock.playerShortShares}' short shares would exceed ${\n          stock.symbol\n        }'s maximum (${stock.maxShares}) number of shares.`,\n      );\n    } else if (opts.suppressDialog !== true) {\n      dialogBoxCreate(\n        `You cannot purchase this many shares. ${stock.symbol} has a maximum of ${stock.maxShares} shares.`,\n      );\n    }\n\n    return false;\n  }\n\n  const origTotal = stock.playerShortShares * stock.playerAvgShortPx;\n  Player.loseMoney(totalPrice);\n  const newTotal = origTotal + totalPrice - CONSTANTS.StockMarketCommission;\n  stock.playerShortShares = Math.round(stock.playerShortShares + shares);\n  stock.playerAvgShortPx = newTotal / stock.playerShortShares;\n  processTransactionForecastMovement(stock, shares);\n\n  if (opts.rerenderFn != null && typeof opts.rerenderFn === \"function\") {\n    opts.rerenderFn();\n  }\n\n  if (workerScript) {\n    const resultTxt =\n      `Bought a short position of ${numeralWrapper.formatShares(shares)} shares of ${stock.symbol} ` +\n      `for ${numeralWrapper.formatMoney(totalPrice)}. Paid ${numeralWrapper.formatMoney(\n        CONSTANTS.StockMarketCommission,\n      )} ` +\n      `in commission fees.`;\n    workerScript.log(\"shortStock\", resultTxt);\n  } else if (!opts.suppressDialog) {\n    dialogBoxCreate(\n      <>\n        Bought a short position of {numeralWrapper.formatShares(shares)} shares of {stock.symbol} for{\" \"}\n        <Money money={totalPrice} />. Paid <Money money={CONSTANTS.StockMarketCommission} /> in commission fees.\n      </>,\n    );\n  }\n\n  return true;\n}\n\n/**\n * Attempt to sell a stock in the short position\n * @param {Stock} stock - Stock to sell\n * @param {number} shares - Number of shares to sell\n * @param {WorkerScript} workerScript - If this is being called through Netscript\n * @param opts - Optional configuration for this function's behavior. See top of file\n * @returns {boolean} true if successfully sells given amount OR max owned, false otherwise\n */\nexport function sellShort(\n  stock: Stock,\n  shares: number,\n  workerScript: WorkerScript | null = null,\n  opts: IOptions = {},\n): boolean {\n  if (stock == null || isNaN(shares) || shares < 0) {\n    if (workerScript) {\n      workerScript.log(\"sellShort\", `Invalid arguments: stock='${stock}' shares='${shares}'`);\n    } else if (!opts.suppressDialog) {\n      dialogBoxCreate(\n        \"Failed to sell a short position in a stock. This is probably \" +\n          \"due to an invalid quantity. Otherwise, this may be a bug, so contact developer\",\n      );\n    }\n\n    return false;\n  }\n  shares = Math.round(shares);\n  if (shares > stock.playerShortShares) {\n    shares = stock.playerShortShares;\n  }\n  if (shares === 0) {\n    return false;\n  }\n\n  const origCost = shares * stock.playerAvgShortPx;\n  const totalGain = getSellTransactionGain(stock, shares, PositionTypes.Short);\n  if (totalGain == null || isNaN(totalGain) || origCost == null) {\n    if (workerScript) {\n      workerScript.log(\n        \"sellShort\",\n        `Failed to sell short position in a stock. This is probably either due to invalid arguments, or a bug`,\n      );\n    } else if (!opts.suppressDialog) {\n      dialogBoxCreate(\n        `Failed to sell short position in a stock. This is probably either due to invalid arguments, or a bug`,\n      );\n    }\n\n    return false;\n  }\n  let profit = totalGain - origCost;\n  if (isNaN(profit)) {\n    profit = 0;\n  }\n  Player.gainMoney(totalGain);\n  Player.recordMoneySource(profit, \"stock\");\n  if (workerScript) {\n    workerScript.scriptRef.onlineMoneyMade += profit;\n    Player.scriptProdSinceLastAug += profit;\n  }\n\n  stock.playerShortShares = Math.round(stock.playerShortShares - shares);\n  if (stock.playerShortShares === 0) {\n    stock.playerAvgShortPx = 0;\n  }\n  processTransactionForecastMovement(stock, shares);\n\n  if (opts.rerenderFn != null && typeof opts.rerenderFn === \"function\") {\n    opts.rerenderFn();\n  }\n\n  if (workerScript) {\n    const resultTxt =\n      `Sold your short position of ${numeralWrapper.formatShares(shares)} shares of ${stock.symbol}. ` +\n      `After commissions, you gained a total of ${numeralWrapper.formatMoney(totalGain)}`;\n    workerScript.log(\"sellShort\", resultTxt);\n  } else if (!opts.suppressDialog) {\n    dialogBoxCreate(\n      <>\n        Sold your short position of {numeralWrapper.formatShares(shares)} shares of {stock.symbol}. After commissions,\n        you gained a total of <Money money={totalGain} />\n      </>,\n    );\n  }\n\n  return true;\n}\n","import { BitNodeMultipliers } from \"../BitNode/BitNodeMultipliers\";\n\ninterface ISkillParams {\n  name: string;\n  desc: string;\n\n  baseCost?: number;\n  costInc?: number;\n  maxLvl?: number;\n\n  successChanceAll?: number;\n  successChanceStealth?: number;\n  successChanceKill?: number;\n  successChanceContract?: number;\n  successChanceOperation?: number;\n  successChanceEstimate?: number;\n\n  actionTime?: number;\n\n  effHack?: number;\n  effStr?: number;\n  effDef?: number;\n  effDex?: number;\n  effAgi?: number;\n  effCha?: number;\n\n  stamina?: number;\n  money?: number;\n  expGain?: number;\n}\n\nexport class Skill {\n  name: string;\n  desc: string;\n  // Cost is in Skill Points\n  baseCost = 1;\n  // Additive cost increase per level\n  costInc = 1;\n  maxLvl = 0;\n\n  /**\n   * These benefits are additive. So total multiplier will be level (handled externally) times the\n   * effects below\n   */\n  successChanceAll = 0;\n  successChanceStealth = 0;\n  successChanceKill = 0;\n  successChanceContract = 0;\n  successChanceOperation = 0;\n\n  /**\n   * This multiplier affects everything that increases synthoid population/community estimate\n   * e.g. Field analysis, Investigation Op, Undercover Op\n   */\n  successChanceEstimate = 0;\n  actionTime = 0;\n  effHack = 0;\n  effStr = 0;\n  effDef = 0;\n  effDex = 0;\n  effAgi = 0;\n  effCha = 0;\n  stamina = 0;\n  money = 0;\n  expGain = 0;\n\n  constructor(params: ISkillParams = { name: \"foo\", desc: \"foo\" }) {\n    if (!params.name) {\n      throw new Error(\"Failed to initialize Bladeburner Skill. No name was specified in ctor\");\n    }\n    if (!params.desc) {\n      throw new Error(\"Failed to initialize Bladeburner Skills. No desc was specified in ctor\");\n    }\n    this.name = params.name;\n    this.desc = params.desc;\n    this.baseCost = params.baseCost ? params.baseCost : 1;\n    this.costInc = params.costInc ? params.costInc : 1;\n\n    if (params.maxLvl) {\n      this.maxLvl = params.maxLvl;\n    }\n\n    if (params.successChanceAll) {\n      this.successChanceAll = params.successChanceAll;\n    }\n    if (params.successChanceStealth) {\n      this.successChanceStealth = params.successChanceStealth;\n    }\n    if (params.successChanceKill) {\n      this.successChanceKill = params.successChanceKill;\n    }\n    if (params.successChanceContract) {\n      this.successChanceContract = params.successChanceContract;\n    }\n    if (params.successChanceOperation) {\n      this.successChanceOperation = params.successChanceOperation;\n    }\n\n    if (params.successChanceEstimate) {\n      this.successChanceEstimate = params.successChanceEstimate;\n    }\n\n    if (params.actionTime) {\n      this.actionTime = params.actionTime;\n    }\n    if (params.effHack) {\n      this.effHack = params.effHack;\n    }\n    if (params.effStr) {\n      this.effStr = params.effStr;\n    }\n    if (params.effDef) {\n      this.effDef = params.effDef;\n    }\n    if (params.effDex) {\n      this.effDex = params.effDex;\n    }\n    if (params.effAgi) {\n      this.effAgi = params.effAgi;\n    }\n    if (params.effCha) {\n      this.effCha = params.effCha;\n    }\n\n    if (params.stamina) {\n      this.stamina = params.stamina;\n    }\n    if (params.money) {\n      this.money = params.money;\n    }\n    if (params.expGain) {\n      this.expGain = params.expGain;\n    }\n  }\n\n  calculateCost(currentLevel: number): number {\n    return Math.floor((this.baseCost + currentLevel * this.costInc) * BitNodeMultipliers.BladeburnerSkillCost);\n  }\n\n  getMultiplier(name: string): number {\n    if (name === \"successChanceAll\") return this.successChanceAll;\n    if (name === \"successChanceStealth\") return this.successChanceStealth;\n    if (name === \"successChanceKill\") return this.successChanceKill;\n    if (name === \"successChanceContract\") return this.successChanceContract;\n    if (name === \"successChanceOperation\") return this.successChanceOperation;\n    if (name === \"successChanceEstimate\") return this.successChanceEstimate;\n\n    if (name === \"actionTime\") return this.actionTime;\n\n    if (name === \"effHack\") return this.effHack;\n    if (name === \"effStr\") return this.effStr;\n    if (name === \"effDef\") return this.effDef;\n    if (name === \"effDex\") return this.effDex;\n    if (name === \"effAgi\") return this.effAgi;\n    if (name === \"effCha\") return this.effCha;\n\n    if (name === \"stamina\") return this.stamina;\n    if (name === \"money\") return this.money;\n    if (name === \"expGain\") return this.expGain;\n    return 0;\n  }\n}\n","// This is a reference to the native setTimeout() function\n// setTimeout() is used in various places around the game's source code.\n// This reference is used to make sure that if players alter window.setTimeout()\n// through NetscriptJS, then the game will still function properly\nexport const setTimeoutRef = window.setTimeout.bind(window);\n","import * as React from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    money: {\n      color: theme.colors.money,\n    },\n  }),\n);\n\nexport function Hashes({ hashes }: { hashes: number | string }): React.ReactElement {\n  const classes = useStyles();\n  return (\n    <span className={classes.money}>{typeof hashes === \"number\" ? numeralWrapper.formatHashes(hashes) : hashes}</span>\n  );\n}\n","/**\n * Adds a random offset to a number within a certain percentage\n * @example\n * // Returns between 95-105\n * addOffset(100, 5);\n * @example\n * // Returns between 63-77\n * addOffSet(70, 10);\n * @param midpoint The number to be the midpoint of the offset range\n * @param percentage The percentage (in a range of 0-100) to offset\n */\nexport function addOffset(midpoint: number, percentage: number): number {\n  const maxPercent = 100;\n  if (percentage < 0 || percentage > maxPercent) {\n    return midpoint;\n  }\n\n  const offset: number = midpoint * (percentage / maxPercent);\n\n  // Double the range to account for both sides of the midpoint.\n  // tslint:disable-next-line:no-magic-numbers\n  return midpoint + (Math.random() * (offset * 2) - offset);\n}\n","import { IPlayer } from \"../IPlayer\";\nimport { Faction } from \"../../Faction/Faction\";\nimport { CONSTANTS } from \"../../Constants\";\nimport { BitNodeMultipliers } from \"../../BitNode/BitNodeMultipliers\";\n\nfunction mult(f: Faction): number {\n  let favorMult = 1 + f.favor / 100;\n  if (isNaN(favorMult)) {\n    favorMult = 1;\n  }\n  return favorMult * BitNodeMultipliers.FactionWorkRepGain;\n}\n\nexport function getHackingWorkRepGain(p: IPlayer, f: Faction): number {\n  return (\n    ((p.hacking_skill + p.intelligence / 3) / CONSTANTS.MaxSkillLevel) *\n    p.faction_rep_mult *\n    p.getIntelligenceBonus(1) *\n    mult(f)\n  );\n}\n\nexport function getFactionSecurityWorkRepGain(p: IPlayer, f: Faction): number {\n  const t =\n    (0.9 *\n      (p.hacking_skill / CONSTANTS.MaxSkillLevel +\n        p.strength / CONSTANTS.MaxSkillLevel +\n        p.defense / CONSTANTS.MaxSkillLevel +\n        p.dexterity / CONSTANTS.MaxSkillLevel +\n        p.agility / CONSTANTS.MaxSkillLevel +\n        p.intelligence / CONSTANTS.MaxSkillLevel)) /\n    4.5;\n  return t * p.faction_rep_mult * mult(f) * p.getIntelligenceBonus(1);\n}\n\nexport function getFactionFieldWorkRepGain(p: IPlayer, f: Faction): number {\n  const t =\n    (0.9 *\n      (p.hacking_skill / CONSTANTS.MaxSkillLevel +\n        p.strength / CONSTANTS.MaxSkillLevel +\n        p.defense / CONSTANTS.MaxSkillLevel +\n        p.dexterity / CONSTANTS.MaxSkillLevel +\n        p.agility / CONSTANTS.MaxSkillLevel +\n        p.charisma / CONSTANTS.MaxSkillLevel +\n        p.intelligence / CONSTANTS.MaxSkillLevel)) /\n    5.5;\n  return t * p.faction_rep_mult * mult(f) * p.getIntelligenceBonus(1);\n}\n","import { Skill } from \"./Skill\";\nimport { SkillNames } from \"./data/SkillNames\";\nimport { IMap } from \"../types\";\n\nexport const Skills: IMap<Skill> = {};\n\n(function () {\n  Skills[SkillNames.BladesIntuition] = new Skill({\n    name: SkillNames.BladesIntuition,\n    desc:\n      \"Each level of this skill increases your success chance \" + \"for all Contracts, Operations, and BlackOps by 3%\",\n    baseCost: 3,\n    costInc: 2.1,\n    successChanceAll: 3,\n  });\n  Skills[SkillNames.Cloak] = new Skill({\n    name: SkillNames.Cloak,\n    desc:\n      \"Each level of this skill increases your \" +\n      \"success chance in stealth-related Contracts, Operations, and BlackOps by 5.5%\",\n    baseCost: 2,\n    costInc: 1.1,\n    successChanceStealth: 5.5,\n  });\n  Skills[SkillNames.ShortCircuit] = new Skill({\n    name: SkillNames.ShortCircuit,\n    desc:\n      \"Each level of this skill increases your success chance \" +\n      \"in Contracts, Operations, and BlackOps that involve retirement by 5.5%\",\n    baseCost: 2,\n    costInc: 2.1,\n    successChanceKill: 5.5,\n  });\n  Skills[SkillNames.DigitalObserver] = new Skill({\n    name: SkillNames.DigitalObserver,\n    desc: \"Each level of this skill increases your success chance in \" + \"all Operations and BlackOps by 4%\",\n    baseCost: 2,\n    costInc: 2.1,\n    successChanceOperation: 4,\n  });\n  Skills[SkillNames.Tracer] = new Skill({\n    name: SkillNames.Tracer,\n    desc: \"Each level of this skill increases your success chance in \" + \"all Contracts by 4%\",\n    baseCost: 2,\n    costInc: 2.1,\n    successChanceContract: 4,\n  });\n  Skills[SkillNames.Overclock] = new Skill({\n    name: SkillNames.Overclock,\n    desc:\n      \"Each level of this skill decreases the time it takes \" +\n      \"to attempt a Contract, Operation, and BlackOp by 1% (Max Level: 90)\",\n    baseCost: 3,\n    costInc: 1.4,\n    maxLvl: 90,\n    actionTime: 1,\n  });\n  Skills[SkillNames.Reaper] = new Skill({\n    name: SkillNames.Reaper,\n    desc: \"Each level of this skill increases your effective combat stats for Bladeburner actions by 2%\",\n    baseCost: 2,\n    costInc: 2.1,\n    effStr: 2,\n    effDef: 2,\n    effDex: 2,\n    effAgi: 2,\n  });\n  Skills[SkillNames.EvasiveSystem] = new Skill({\n    name: SkillNames.EvasiveSystem,\n    desc: \"Each level of this skill increases your effective \" + \"dexterity and agility for Bladeburner actions by 4%\",\n    baseCost: 2,\n    costInc: 2.1,\n    effDex: 4,\n    effAgi: 4,\n  });\n  Skills[SkillNames.Datamancer] = new Skill({\n    name: SkillNames.Datamancer,\n    desc:\n      \"Each level of this skill increases your effectiveness in \" +\n      \"synthoid population analysis and investigation by 5%. \" +\n      \"This affects all actions that can potentially increase \" +\n      \"the accuracy of your synthoid population/community estimates.\",\n    baseCost: 3,\n    costInc: 1,\n    successChanceEstimate: 5,\n  });\n  Skills[SkillNames.CybersEdge] = new Skill({\n    name: SkillNames.CybersEdge,\n    desc: \"Each level of this skill increases your max stamina by 2%\",\n    baseCost: 1,\n    costInc: 3,\n    stamina: 2,\n  });\n  Skills[SkillNames.HandsOfMidas] = new Skill({\n    name: SkillNames.HandsOfMidas,\n    desc: \"Each level of this skill increases the amount of money you receive from Contracts by 10%\",\n    baseCost: 2,\n    costInc: 2.5,\n    money: 10,\n  });\n  Skills[SkillNames.Hyperdrive] = new Skill({\n    name: SkillNames.Hyperdrive,\n    desc: \"Each level of this skill increases the experience earned from Contracts, Operations, and BlackOps by 10%\",\n    baseCost: 1,\n    costInc: 2.5,\n    expGain: 10,\n  });\n})();\n","// Enum values are lowercased to match css classes\nexport enum Suit {\n  Clubs = \"clubs\",\n  Diamonds = \"diamonds\",\n  Hearts = \"hearts\",\n  Spades = \"spades\",\n}\n\nexport class Card {\n  constructor(readonly value: number, readonly suit: Suit) {\n    if (value < 1 || value > 13) {\n      throw new Error(`Card instantiated with improper value: ${value}`);\n    }\n  }\n\n  formatValue(): string {\n    switch (this.value) {\n      case 1:\n        return \"A\";\n      case 11:\n        return \"J\";\n      case 12:\n        return \"Q\";\n      case 13:\n        return \"K\";\n      default:\n        return `${this.value}`;\n    }\n  }\n\n  isRedSuit(): boolean {\n    return this.suit === Suit.Hearts || this.suit === Suit.Diamonds;\n  }\n\n  getStringRepresentation(): string {\n    const value = this.formatValue();\n\n    return `${value} of ${this.suit}`;\n  }\n}\n","import { IActionIdentifier } from \"./IActionIdentifier\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\n\ninterface IParams {\n  name?: string;\n  type?: number;\n}\n\nexport class ActionIdentifier implements IActionIdentifier {\n  name = \"\";\n  type = -1;\n\n  constructor(params: IParams = {}) {\n    if (params.name) this.name = params.name;\n    if (params.type) this.type = params.type;\n  }\n\n  toJSON(): any {\n    return Generic_toJSON(\"ActionIdentifier\", this);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): ActionIdentifier {\n    return Generic_fromJSON(ActionIdentifier, value.data);\n  }\n}\n\nReviver.constructors.ActionIdentifier = ActionIdentifier;\n","/**\n * Map of all Locations in the game\n * Key = Location name, value = Location object\n */\nimport { City } from \"./City\";\nimport { Cities } from \"./Cities\";\nimport { Location, IConstructorParams } from \"./Location\";\nimport { CityName } from \"./data/CityNames\";\nimport { LocationsMetadata } from \"./data/LocationsMetadata\";\n\nimport { IMap } from \"../types\";\n\nexport const Locations: IMap<Location> = {};\n\n/**\n * Here, we'll initialize both Locations and Cities data. These can both\n * be initialized from the `LocationsMetadata`\n */\nfunction constructLocation(p: IConstructorParams): Location {\n  if (!p.name) {\n    throw new Error(`Invalid constructor parameters for Location. No 'name' property`);\n  }\n\n  if (Locations[p.name] instanceof Location) {\n    console.warn(`Property with name ${p.name} already exists and is being overwritten`);\n  }\n\n  Locations[p.name] = new Location(p);\n\n  return Locations[p.name];\n}\n\n// First construct all cities\nCities[CityName.Aevum] = new City(CityName.Aevum);\nCities[CityName.Chongqing] = new City(CityName.Chongqing);\nCities[CityName.Ishima] = new City(CityName.Ishima);\nCities[CityName.NewTokyo] = new City(CityName.NewTokyo);\nCities[CityName.Sector12] = new City(CityName.Sector12);\nCities[CityName.Volhaven] = new City(CityName.Volhaven);\n\nCities[CityName.Aevum].asciiArt = `\n   [aevum police headquarters]       26                                         \n                                   o                                            \n           I                        \\\\  [bachman & associates]                  \n            \\\\  56                    B                                         \n             x                        \\\\         [summit university]            \n              \\\\                        \\\\  28                                  \n               \\\\ [snap fitness gym]     x       o--L-----------N               \n                K                        \\\\     /                               \n                 \\\\                        \\\\   Q               [casino]        \n                  x 58                     \\\\ /  [travel agency]                \n                   \\\\         94     95      o                                  \n     90             x 59     o------o       |                                   \n                     \\\\      /        \\\\      |             98    102  103      \n      o--------O------x----o 93    96 o-----+------------o       o----o         \n                       \\\\                    |             \\\\     /             \n        [hospital]      \\\\  61    [ecorp]    x 31        99 o-F-o 101           \n                         o                  |                                   \n                         |      o---E--     |            [fulcrum tech.]        \n                         x 62  /            A  [aerocorp]                       \n    [crush fitness gym]  |    /             |                                   \n                         |   /              |                                   \n         o--------D------+--o               o                                   \n                         |                  |\\\\  [rho construction]             \n                         H [netlink tech.]  | J                                 \n                         |                  |  \\\\                               \n                         |               34 x   \\\\                              \n           [clarke inc.] C                  |    \\\\    [world stock exchange]   \n                         |                  |     \\\\                            \n                         |                  |      o-M-------R--------o         \n[galactic cybersystems]  G               35 x                                   \n                         |                      [watchdog security]             \n                         |                                                      \n                      67 o                                                      \n                                                                                \n                                    [the slums] P                               `;\nCities[CityName.Chongqing].asciiArt = `\n                                    |                                           \n                                 75 o                                           \n                                     \\\\                                         \n                                      o 76                                      \n                            7 |       |                                         \n                              |       + 77                                      \n       [world stock exchange] F       |                                         \n                               \\\\      o 78      [kuaigong international]       \n                                \\\\    /                                         \n                         38 o----x--x------x------A---------                    \n                           /    39  |      41                                   \n                       37 o         + 79    o--x--x-C-0                         \n                         /          |      /                                    \n                        /     x-----+-----x-----0   [hospital]                  \n[solaris space system] B            |                                           \n                       |            + 80                                        \n                       |            |                                           \n                    34 o            E [travel agency]                           \n                                    |                                           \n                                    |                                           \n                                    x 82                                        \n             [the slums] D                                                      `;\nCities[CityName.Ishima].asciiArt = `\n                                          o 59                                  \n                  o        o              |                                     \n [storm tech.]    |        |              G [world stock exchange]              \n                  |        |         28   |                                     \n     23 o--C------o--------+----x----o    |                                     \n       /         / 25      |   27     \\\\   x 57                                 \n      /         /          |           \\\\  |                                    \n     /         /           |            \\\\ |                                    \n    o 22      o            |             \\\\| 29/56                              \n              |            |              o                                     \n              | [hospital] D             / \\\\      3       2      1             \n              o            |            /   \\\\     o-------x------o             \n             /             o           /     \\\\   /                             \n   48 o     /                      55 x       \\\\ /                              \n       \\\\   /                         /         x                               \n        \\\\ /         [nova medical]  /      4/30 \\\\                             \n      49 x                         A             \\\\                             \n        / \\\\                       /               \\\\                           \n       /   \\\\    [travel agency]  F                 o 31                        \n      /     \\\\           51      /                                              \n     /       o----B------x-----o                                                \n    o      50                  52                                               \n              [omega soft.]                                                     \n                                       [the slums] E                            `;\nCities[CityName.NewTokyo].asciiArt = `\n                                                                                \n                                                                                \n                  o                                                             \n                   \\\\                                                           \n                    \\\\    [defcomm]                                             \n                     \\\\                                                         \n                      o--x---A--x--o [travel agency]                            \n                      7  8     10   G                                           \n             [vitalife]              o 12   [global pharmaceuticals]            \n                                     |                                          \n               o--D-x----x-------x-C-+--------x--x-B-x---x-o                    \n                   21   22      23    \\\\      24 25  26  27                     \n                                       \\\\                                       \n                          [noodle bar]  x 14                                    \n                                         \\\\                                     \n                                          \\\\                                    \n                    [hospital]             o 15 [world stock exchange]          \n                                           |                                    \n                  o--x--E--x-----x-----x---+---x----x--H--x-o                   \n                                           |                                    \n                                           |                                    \n                                           o 17                                 \n                                                                                \n                                                                                \n                                                                                \n                                           F  [the slums]                       \n                                                                                `;\nCities[CityName.Sector12].asciiArt = `\n          78                                                     o 97           \n          o                               [icarus microsystems] /               \n          N [powerhouse gym]  o                                I                \n    1     |                   |                               /                 \n    o-----+---x----o 4        A [alpha ent.]     o-------o   /                  \n          |   3     \\\\         |                           \\\\ /                 \n          |          \\\\        |     [iron gym]             x 95                \n     (79) x           \\\\       |                           / \\\\                 \n          |            o-E----+----x----J--o 10          /   o----T--o          \n          |                   |    8        \\\\        94 x                      \n       80 x       [city hall] |              x 11      /  [world stock exchange]\n          |                   |               \\\\       /                        \n          |                   C [cia]          \\\\     /                         \n          Q  [hospital]       |                 F   P [universal energy]        \n          |                   o      [deltaone]  \\\\ /                           \n          |                          35 o---------x 13/92/36                    \n          L  [megacorp]  33            /         / \\\\                           \n          |              o------------o 34      /   \\\\                          \n (29)     |             /    [carmichael sec.] D     \\\\                         \n    o-----+-----x------o                      /       O [rothman university]    \n          |     31     32              [nsa] M                                  \n          |                                 /                                   \n          B [blade industries]             H                                    \n          |                               / [four sigma]                        \n          |      [joe's guns]            /                                      \n          |                             /                                       \n       85 o--G--------K--------S-------o 88                [the slums] R        \n                                                                                \n          [foodnstuff]     [travel agency]                                      `;\nCities[CityName.Volhaven].asciiArt = `\n                                 [omnia cybersystems]                           \n                   17         66               68                               \n                  o            o------G-------o                                 \n                   \\\\          /                \\\\                              \n                    \\\\        o 65               o 69                           \n      [syscore sec.] H       |                  |                               \n                      \\\\      |                  |     [millenium fitness gym]  \n                       \\\\     |  21 22   23  24  |     26                       \n                        o----+--x--x----x---x---+-----x-------D-----o           \n                      19     |                  |                   28          \n                             |                  F [omnitek inc.]                \n                  [hospital] J 63               o                               \n                             |                 / 72                             \n                   3         |    5     6     /                 9               \n                    o--------+----x-----x----+----------M-------o               \n                   /         |               |                                  \n                  /       61 x [helios labs] B    [world stock exchange]        \n [travel agency] L           |               |                                  \n                /            |               o                                  \n               /             E [nwo]        / 75                                \n              /  [computek]  |             /                                    \n             /       A-------o------I-----o                                     \n          1 o                |            |                                     \n                             |    [zb]    o 77                                  \n                  [lexocorp] C                                                  \n                             |                                                  \n                             o                                                  \n                            57                                                  \n                                                                                \n                                                                                \n                                     [the slums] K                              `;\n\n// Then construct all locations, and add them to the cities as we go.\nfor (const metadata of LocationsMetadata) {\n  const loc = constructLocation(metadata);\n\n  const cityName = loc.city;\n  if (cityName === null) {\n    // Generic location, add to all cities\n    for (const city in Cities) {\n      Cities[city].addLocation(loc.name);\n    }\n  } else {\n    Cities[cityName].addLocation(loc.name);\n  }\n}\n","export function random(min: number, max: number): number {\n  return Math.random() * (max - min) + min;\n}\n\nexport function getArrow(event: KeyboardEvent): string {\n  switch (event.keyCode) {\n    case 38:\n    case 87:\n      return \"↑\";\n    case 65:\n    case 37:\n      return \"←\";\n    case 40:\n    case 83:\n      return \"↓\";\n    case 39:\n    case 68:\n      return \"→\";\n  }\n  return \"\";\n}\n","/**\n * Implementation for what happens when you destroy a BitNode\n */\nimport React from \"react\";\nimport { Player } from \"./Player\";\nimport { prestigeSourceFile } from \"./Prestige\";\nimport { PlayerOwnedSourceFile } from \"./SourceFile/PlayerOwnedSourceFile\";\nimport { SourceFileFlags } from \"./SourceFile/SourceFileFlags\";\nimport { SourceFiles } from \"./SourceFile/SourceFiles\";\n\nimport { dialogBoxCreate } from \"./ui/React/DialogBox\";\nimport { IRouter } from \"./ui/Router\";\n\nexport let redPillFlag = false;\n\nexport function setRedPillFlag(b: boolean): void {\n  redPillFlag = b;\n}\n\nfunction giveSourceFile(bitNodeNumber: number): void {\n  const sourceFileKey = \"SourceFile\" + bitNodeNumber.toString();\n  const sourceFile = SourceFiles[sourceFileKey];\n  if (sourceFile == null) {\n    console.error(`Could not find source file for Bit node: ${bitNodeNumber}`);\n    return;\n  }\n\n  // Check if player already has this source file\n  let alreadyOwned = false;\n  let ownedSourceFile = null;\n  for (let i = 0; i < Player.sourceFiles.length; ++i) {\n    if (Player.sourceFiles[i].n === bitNodeNumber) {\n      alreadyOwned = true;\n      ownedSourceFile = Player.sourceFiles[i];\n      break;\n    }\n  }\n\n  if (alreadyOwned && ownedSourceFile) {\n    if (ownedSourceFile.lvl >= 3 && ownedSourceFile.n !== 12) {\n      dialogBoxCreate(\n        \"The Source-File for the BitNode you just destroyed, \" + sourceFile.name + \", \" + \"is already at max level!\",\n      );\n    } else {\n      ++ownedSourceFile.lvl;\n      dialogBoxCreate(\n        sourceFile.name +\n          \" was upgraded to level \" +\n          ownedSourceFile.lvl +\n          \" for \" +\n          \"destroying its corresponding BitNode!\",\n      );\n    }\n  } else {\n    const playerSrcFile = new PlayerOwnedSourceFile(bitNodeNumber, 1);\n    Player.sourceFiles.push(playerSrcFile);\n    if (bitNodeNumber === 5 && Player.intelligence === 0) {\n      // Artificial Intelligence\n      Player.intelligence = 1;\n    }\n    dialogBoxCreate(\n      <>\n        You received a Source-File for destroying a BitNode!\n        <br />\n        <br />\n        {sourceFile.name}\n        <br />\n        <br />\n        {sourceFile.info}\n      </>,\n    );\n  }\n}\n\nexport function enterBitNode(router: IRouter, flume: boolean, destroyedBitNode: number, newBitNode: number): void {\n  if (!flume) {\n    giveSourceFile(destroyedBitNode);\n  } else {\n    if (SourceFileFlags[5] === 0 && newBitNode !== 5) {\n      Player.intelligence = 0;\n      Player.intelligence_exp = 0;\n    }\n  }\n  if (newBitNode === 5 && Player.intelligence === 0) {\n    Player.intelligence = 1;\n  }\n  redPillFlag = false;\n  // Set new Bit Node\n  Player.bitNodeN = newBitNode;\n\n  if (newBitNode === 6) {\n    router.toBladeburnerCinematic();\n  } else {\n    router.toTerminal();\n  }\n  prestigeSourceFile(flume);\n}\n","import { CONSTANTS } from \"../Constants\";\nimport { Player } from \"../Player\";\nimport { AllServers } from \"../Server/AllServers\";\nimport { BaseServer } from \"../Server/BaseServer\";\nimport { Server } from \"../Server/Server\";\nimport { RunningScript } from \"../Script/RunningScript\";\nimport { processSingleServerGrowth } from \"../Server/ServerHelpers\";\n\nimport { numeralWrapper } from \"../ui/numeralFormat\";\n\nimport { compareArrays } from \"../utils/helpers/compareArrays\";\n\nexport function scriptCalculateOfflineProduction(runningScript: RunningScript): void {\n  //The Player object stores the last update time from when we were online\n  const thisUpdate = new Date().getTime();\n  const lastUpdate = Player.lastUpdate;\n  const timePassed = (thisUpdate - lastUpdate) / 1000; //Seconds\n\n  //Calculate the \"confidence\" rating of the script's true production. This is based\n  //entirely off of time. We will arbitrarily say that if a script has been running for\n  //4 hours (14400 sec) then we are completely confident in its ability\n  let confidence = runningScript.onlineRunningTime / 14400;\n  if (confidence >= 1) {\n    confidence = 1;\n  }\n\n  //Data map: [MoneyStolen, NumTimesHacked, NumTimesGrown, NumTimesWeaken]\n\n  // Grow\n  for (const ip in runningScript.dataMap) {\n    if (runningScript.dataMap.hasOwnProperty(ip)) {\n      if (runningScript.dataMap[ip][2] == 0 || runningScript.dataMap[ip][2] == null) {\n        continue;\n      }\n      const serv = AllServers[ip];\n      if (serv == null) {\n        continue;\n      }\n      const timesGrown = Math.round(\n        ((0.5 * runningScript.dataMap[ip][2]) / runningScript.onlineRunningTime) * timePassed,\n      );\n      runningScript.log(`Called on ${serv.hostname} ${timesGrown} times while offline`);\n      const host = AllServers[runningScript.server];\n      if (!(serv instanceof Server)) throw new Error(\"trying to grow a non-normal server\");\n      const growth = processSingleServerGrowth(serv, timesGrown, Player, host.cpuCores);\n      runningScript.log(\n        `'${serv.hostname}' grown by ${numeralWrapper.format(growth * 100 - 100, \"0.000000%\")} while offline`,\n      );\n    }\n  }\n\n  // Offline EXP gain\n  // A script's offline production will always be at most half of its online production.\n  const expGain = confidence * (runningScript.onlineExpGained / runningScript.onlineRunningTime) * timePassed;\n  Player.gainHackingExp(expGain);\n\n  // Update script stats\n  runningScript.offlineRunningTime += timePassed;\n  runningScript.offlineExpGained += expGain;\n\n  // Weaken\n  for (const ip in runningScript.dataMap) {\n    if (runningScript.dataMap.hasOwnProperty(ip)) {\n      if (runningScript.dataMap[ip][3] == 0 || runningScript.dataMap[ip][3] == null) {\n        continue;\n      }\n      const serv = AllServers[ip];\n      if (serv == null) {\n        continue;\n      }\n\n      if (!(serv instanceof Server)) throw new Error(\"trying to weaken a non-normal server\");\n      const host = AllServers[runningScript.server];\n      const timesWeakened = Math.round(\n        ((0.5 * runningScript.dataMap[ip][3]) / runningScript.onlineRunningTime) * timePassed,\n      );\n      runningScript.log(`Called weaken() on ${serv.hostname} ${timesWeakened} times while offline`);\n      const coreBonus = 1 + (host.cpuCores - 1) / 16;\n      serv.weaken(CONSTANTS.ServerWeakenAmount * timesWeakened * coreBonus);\n    }\n  }\n}\n\n//Returns a RunningScript object matching the filename and arguments on the\n//designated server, and false otherwise\nexport function findRunningScript(\n  filename: string,\n  args: (string | number)[],\n  server: BaseServer,\n): RunningScript | null {\n  for (let i = 0; i < server.runningScripts.length; ++i) {\n    if (server.runningScripts[i].filename === filename && compareArrays(server.runningScripts[i].args, args)) {\n      return server.runningScripts[i];\n    }\n  }\n  return null;\n}\n\n//Returns a RunningScript object matching the pid on the\n//designated server, and false otherwise\nexport function findRunningScriptByPid(pid: number, server: BaseServer): RunningScript | null {\n  for (let i = 0; i < server.runningScripts.length; ++i) {\n    if (server.runningScripts[i].pid === pid) {\n      return server.runningScripts[i];\n    }\n  }\n  return null;\n}\n","import { setTimeoutRef } from \"./utils/SetTimeoutRef\";\nimport { dialogBoxCreate } from \"./ui/React/DialogBox\";\nimport { BaseServer } from \"./Server/BaseServer\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"./utils/JSONReviver\";\n\n/**\n * Represents a plain text file that is typically stored on a server.\n */\nexport class TextFile {\n  /**\n   * The full file name.\n   */\n  fn: string;\n\n  /**\n   * The content of the file.\n   */\n  text: string;\n\n  constructor(fn = \"\", txt = \"\") {\n    this.fn = (fn.endsWith(\".txt\") ? fn : `${fn}.txt`).replace(/\\s+/g, \"\");\n    this.text = txt;\n  }\n\n  /**\n   * Concatenates the raw values to the end of current content.\n   */\n  append(txt: string): void {\n    this.text += txt;\n  }\n\n  /**\n   * Serves the file to the user as a downloadable resource through the browser.\n   */\n  download(): void {\n    const filename: string = this.fn;\n    const file: Blob = new Blob([this.text], { type: \"text/plain\" });\n    /* tslint:disable-next-line:strict-boolean-expressions */\n    if (window.navigator.msSaveOrOpenBlob) {\n      // IE10+\n      window.navigator.msSaveOrOpenBlob(file, filename);\n    } else {\n      // Others\n      const a: HTMLAnchorElement = document.createElement(\"a\");\n      const url: string = URL.createObjectURL(file);\n      a.href = url;\n      a.download = this.fn;\n      document.body.appendChild(a);\n      a.click();\n      setTimeoutRef(() => {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n      }, 0);\n    }\n  }\n\n  /**\n   * Retrieve the content of the file.\n   */\n  read(): string {\n    return this.text;\n  }\n\n  /**\n   * Shows the content to the user via the game's dialog box.\n   */\n  show(): void {\n    dialogBoxCreate(`${this.fn}<br /><br />${this.text}`);\n  }\n\n  /**\n   * Serialize the current file to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"TextFile\", this);\n  }\n\n  /**\n   * Replaces the current content with the text provided.\n   */\n  write(txt: string): void {\n    this.text = txt;\n  }\n\n  /**\n   * Initiatizes a TextFile from a JSON save state.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): TextFile {\n    return Generic_fromJSON(TextFile, value.data);\n  }\n}\n\nReviver.constructors.TextFile = TextFile;\n\n/**\n * Retrieve the file object for the filename on the specified server.\n * @param fn The file name to look for\n * @param server The server object to look in\n * @returns The file object, or null if it couldn't find it.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function getTextFile(fn: string, server: BaseServer): TextFile | null {\n  const filename: string = !fn.endsWith(\".txt\") ? `${fn}.txt` : fn;\n\n  for (const file of server.textFiles as TextFile[]) {\n    if (file.fn === filename) {\n      return file;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Creates a TextFile on the target server.\n * @param fn The file name to create.\n * @param txt The contents of the file.\n * @param server The server that the file should be created on.\n * @returns The instance of the file.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function createTextFile(fn: string, txt: string, server: BaseServer): TextFile | undefined {\n  if (getTextFile(fn, server) !== null) {\n    // This should probably be a `throw`...\n    /* tslint:disable-next-line:no-console */\n    console.error(`A file named \"${fn}\" already exists on server ${server.hostname}.`);\n\n    return undefined;\n  }\n  const file: TextFile = new TextFile(fn, txt);\n  server.textFiles.push(file);\n\n  return file;\n}\n","import { dialogBoxCreate } from \"../../ui/React/DialogBox\";\n\ninterface IError {\n  fileName?: string;\n  lineNumber?: number;\n}\n\nexport function exceptionAlert(e: IError | string): void {\n  console.error(e);\n  dialogBoxCreate(\n    \"Caught an exception: \" +\n      e +\n      \"<br><br>\" +\n      \"Filename: \" +\n      ((e as any).fileName || \"UNKNOWN FILE NAME\") +\n      \"<br><br>\" +\n      \"Line Number: \" +\n      ((e as any).lineNumber || \"UNKNOWN LINE NUMBER\") +\n      \"<br><br>\" +\n      \"This is a bug, please report to game developer with this \" +\n      \"message as well as details about how to reproduce the bug.<br><br>\" +\n      \"If you want to be safe, I suggest refreshing the game WITHOUT saving so that your \" +\n      \"safe doesn't get corrupted\",\n  );\n}\n","import { Message } from \"./Message\";\nimport { Augmentations } from \"../Augmentation/Augmentations\";\nimport { AugmentationNames } from \"../Augmentation/data/AugmentationNames\";\nimport { Programs } from \"../Programs/Programs\";\nimport { inMission } from \"../Missions\";\nimport { Player } from \"../Player\";\nimport { redPillFlag } from \"../RedPill\";\nimport { GetServerByHostname } from \"../Server/ServerHelpers\";\nimport { Settings } from \"../Settings/Settings\";\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\nimport { Reviver } from \"../utils/JSONReviver\";\n\n//Sends message to player, including a pop up\nfunction sendMessage(msg: Message, forced = false): void {\n  msg.recvd = true;\n  if (forced || !Settings.SuppressMessages) {\n    showMessage(msg);\n  }\n  addMessageToServer(msg, \"home\");\n}\n\nfunction showMessage(msg: Message): void {\n  const txt =\n    \"Message received from unknown sender: <br><br>\" +\n    \"<i>\" +\n    msg.msg +\n    \"</i><br><br>\" +\n    \"This message was saved as \" +\n    msg.filename +\n    \" onto your home computer.\";\n  dialogBoxCreate(txt);\n}\n\n//Adds a message to a server\nfunction addMessageToServer(msg: Message, serverHostname: string): void {\n  const server = GetServerByHostname(serverHostname);\n  if (server == null) {\n    console.warn(`Could not find server ${serverHostname}`);\n    return;\n  }\n  for (let i = 0; i < server.messages.length; ++i) {\n    const other = server.messages[i];\n    if (typeof other === \"string\") continue;\n    if (msg.filename === other.filename) {\n      return; //Already exists\n    }\n  }\n  server.messages.push(msg);\n}\n\n//Checks if any of the 'timed' messages should be sent\nfunction checkForMessagesToSend(): void {\n  if (redPillFlag) return;\n  const jumper0 = Messages[MessageFilenames.Jumper0];\n  const jumper1 = Messages[MessageFilenames.Jumper1];\n  const jumper2 = Messages[MessageFilenames.Jumper2];\n  const jumper3 = Messages[MessageFilenames.Jumper3];\n  const jumper4 = Messages[MessageFilenames.Jumper4];\n  const cybersecTest = Messages[MessageFilenames.CyberSecTest];\n  const nitesecTest = Messages[MessageFilenames.NiteSecTest];\n  const bitrunnersTest = Messages[MessageFilenames.BitRunnersTest];\n  const redpill = Messages[MessageFilenames.RedPill];\n\n  let redpillOwned = false;\n  if (Augmentations[AugmentationNames.TheRedPill].owned) {\n    redpillOwned = true;\n  }\n\n  if (redpill && redpillOwned && Player.sourceFiles.length === 0 && !redPillFlag && !inMission) {\n    sendMessage(redpill, true);\n  } else if (redpill && redpillOwned) {\n    //If player has already destroyed a BitNode, message is not forced\n    if (!redPillFlag && !inMission) {\n      sendMessage(redpill);\n    }\n  } else if (jumper0 && !jumper0.recvd && Player.hacking_skill >= 25) {\n    sendMessage(jumper0);\n    const flightName = Programs.Flight.name;\n    const homeComp = Player.getHomeComputer();\n    if (!homeComp.programs.includes(flightName)) {\n      homeComp.programs.push(flightName);\n    }\n  } else if (jumper1 && !jumper1.recvd && Player.hacking_skill >= 40) {\n    sendMessage(jumper1);\n  } else if (cybersecTest && !cybersecTest.recvd && Player.hacking_skill >= 50) {\n    sendMessage(cybersecTest);\n  } else if (jumper2 && !jumper2.recvd && Player.hacking_skill >= 175) {\n    sendMessage(jumper2);\n  } else if (nitesecTest && !nitesecTest.recvd && Player.hacking_skill >= 200) {\n    sendMessage(nitesecTest);\n  } else if (jumper3 && !jumper3.recvd && Player.hacking_skill >= 350) {\n    sendMessage(jumper3);\n  } else if (jumper4 && !jumper4.recvd && Player.hacking_skill >= 490) {\n    sendMessage(jumper4);\n  } else if (bitrunnersTest && !bitrunnersTest.recvd && Player.hacking_skill >= 500) {\n    sendMessage(bitrunnersTest);\n  }\n}\n\nfunction AddToAllMessages(msg: Message): void {\n  Messages[msg.filename] = msg;\n}\n\nlet Messages: { [key: string]: Message | undefined } = {};\n\nfunction loadMessages(saveString: string): void {\n  Messages = JSON.parse(saveString, Reviver);\n}\n\nconst MessageFilenames = {\n  Jumper0: \"j0.msg\",\n  Jumper1: \"j1.msg\",\n  Jumper2: \"j2.msg\",\n  Jumper3: \"j3.msg\",\n  Jumper4: \"j4.msg\",\n  CyberSecTest: \"csec-test.msg\",\n  NiteSecTest: \"nitesec-test.msg\",\n  BitRunnersTest: \"19dfj3l1nd.msg\",\n  RedPill: \"icarus.msg\",\n};\n\nfunction initMessages(): void {\n  //Reset\n  Messages = {};\n\n  //jump3R Messages\n  AddToAllMessages(\n    new Message(\n      MessageFilenames.Jumper0,\n      \"I know you can sense it. I know you're searching for it. \" +\n        \"It's why you spend night after \" +\n        \"night at your computer. <br><br>It's real, I've seen it. And I can \" +\n        \"help you find it. But not right now. You're not ready yet.<br><br>\" +\n        \"Use this program to track your progress<br><br>\" +\n        \"The fl1ght.exe program was added to your home computer<br><br>\" +\n        \"-jump3R\",\n    ),\n  );\n  AddToAllMessages(\n    new Message(\n      MessageFilenames.Jumper1,\n      \"Soon you will be contacted by a hacking group known as CyberSec. \" +\n        \"They can help you with your search. <br><br>\" +\n        \"You should join them, garner their favor, and \" +\n        \"exploit them for their Augmentations. But do not trust them. \" +\n        \"They are not what they seem. No one is.<br><br>\" +\n        \"-jump3R\",\n    ),\n  );\n  AddToAllMessages(\n    new Message(\n      MessageFilenames.Jumper2,\n      \"Do not try to save the world. There is no world to save. If \" +\n        \"you want to find the truth, worry only about yourself. Ethics and \" +\n        \"morals will get you killed. <br><br>Watch out for a hacking group known as NiteSec.\" +\n        \"<br><br>-jump3R\",\n    ),\n  );\n  AddToAllMessages(\n    new Message(\n      MessageFilenames.Jumper3,\n      \"You must learn to walk before you can run. And you must \" +\n        \"run before you can fly. Look for the black hand. <br><br>\" +\n        \"I.I.I.I <br><br>-jump3R\",\n    ),\n  );\n  AddToAllMessages(\n    new Message(\n      MessageFilenames.Jumper4,\n      \"To find what you are searching for, you must understand the bits. \" +\n        \"The bits are all around us. The runners will help you.<br><br>\" +\n        \"-jump3R\",\n    ),\n  );\n\n  //Messages from hacking factions\n  AddToAllMessages(\n    new Message(\n      MessageFilenames.CyberSecTest,\n      \"We've been watching you. Your skills are very impressive. But you're wasting \" +\n        \"your talents. If you join us, you can put your skills to good use and change \" +\n        \"the world for the better. If you join us, we can unlock your full potential. <br><br>\" +\n        \"But first, you must pass our test. Find and install the backdoor on our server. <br><br>\" +\n        \"-CyberSec\",\n    ),\n  );\n  AddToAllMessages(\n    new Message(\n      MessageFilenames.NiteSecTest,\n      \"People say that the corrupted governments and corporations rule the world. \" +\n        \"Yes, maybe they do. But do you know who everyone really fears? People \" +\n        \"like us. Because they can't hide from us. Because they can't fight shadows \" +\n        \"and ideas with bullets. <br><br>\" +\n        \"Join us, and people will fear you, too. <br><br>\" +\n        \"Find and install the backdoor on our server. Then, we will contact you again.\" +\n        \"<br><br>-NiteSec\",\n    ),\n  );\n  AddToAllMessages(\n    new Message(\n      MessageFilenames.BitRunnersTest,\n      \"We know what you are doing. We know what drives you. We know \" +\n        \"what you are looking for. <br><br> \" +\n        \"We can help you find the answers.<br><br>\" +\n        \"run4theh111z\",\n    ),\n  );\n\n  AddToAllMessages(\n    new Message(\n      MessageFilenames.RedPill,\n      \"@)(#V%*N)@(#*)*C)@#%*)*V)@#(*%V@)(#VN%*)@#(*%<br>\" +\n        \")@B(*#%)@)M#B*%V)____FIND___#$@)#%(B*)@#(*%B)<br>\" +\n        \"@_#(%_@#M(BDSPOMB__THE-CAVE_#)$(*@#$)@#BNBEGB<br>\" +\n        \"DFLSMFVMV)#@($*)@#*$MV)@#(*$V)M#(*$)M@(#*VM$)\",\n    ),\n  );\n}\n\nexport { Messages, checkForMessagesToSend, sendMessage, showMessage, loadMessages, initMessages, Message };\n","export function calculateSkill(exp: number, mult = 1): number {\n  return Math.max(Math.floor(mult * (32 * Math.log(exp + 534.5) - 200)), 1);\n}\n\nexport function calculateExp(skill: number, mult = 1): number {\n  return Math.exp((skill / mult + 200) / 32) - 534.6;\n}\n","import { BitNodeMultipliers } from \"../../BitNode/BitNodeMultipliers\";\nimport { HacknetNodeConstants } from \"../data/Constants\";\n\nexport function calculateMoneyGainRate(level: number, ram: number, cores: number, mult: number): number {\n  const gainPerLevel = HacknetNodeConstants.MoneyGainPerLevel;\n\n  const levelMult = level * gainPerLevel;\n  const ramMult = Math.pow(1.035, ram - 1);\n  const coresMult = (cores + 5) / 6;\n  return levelMult * ramMult * coresMult * mult * BitNodeMultipliers.HacknetNodeMoney;\n}\n\nexport function calculateLevelUpgradeCost(startingLevel: number, extraLevels = 1, costMult = 1): number {\n  const sanitizedLevels = Math.round(extraLevels);\n  if (isNaN(sanitizedLevels) || sanitizedLevels < 1) {\n    return 0;\n  }\n\n  if (startingLevel >= HacknetNodeConstants.MaxLevel) {\n    return Infinity;\n  }\n\n  const mult = HacknetNodeConstants.UpgradeLevelMult;\n  let totalMultiplier = 0;\n  let currLevel = startingLevel;\n  for (let i = 0; i < sanitizedLevels; ++i) {\n    totalMultiplier += HacknetNodeConstants.LevelBaseCost * Math.pow(mult, currLevel);\n    ++currLevel;\n  }\n\n  return (HacknetNodeConstants.BaseCost / 2) * totalMultiplier * costMult;\n}\n\nexport function calculateRamUpgradeCost(startingRam: number, extraLevels = 1, costMult = 1): number {\n  const sanitizedLevels = Math.round(extraLevels);\n  if (isNaN(sanitizedLevels) || sanitizedLevels < 1) {\n    return 0;\n  }\n\n  if (startingRam >= HacknetNodeConstants.MaxRam) {\n    return Infinity;\n  }\n\n  let totalCost = 0;\n  let numUpgrades = Math.round(Math.log2(startingRam));\n  let currentRam = startingRam;\n\n  for (let i = 0; i < sanitizedLevels; ++i) {\n    const baseCost = currentRam * HacknetNodeConstants.RamBaseCost;\n    const mult = Math.pow(HacknetNodeConstants.UpgradeRamMult, numUpgrades);\n\n    totalCost += baseCost * mult;\n\n    currentRam *= 2;\n    ++numUpgrades;\n  }\n\n  totalCost *= costMult;\n\n  return totalCost;\n}\n\nexport function calculateCoreUpgradeCost(startingCore: number, extraLevels = 1, costMult = 1): number {\n  const sanitizedCores = Math.round(extraLevels);\n  if (isNaN(sanitizedCores) || sanitizedCores < 1) {\n    return 0;\n  }\n\n  if (startingCore >= HacknetNodeConstants.MaxCores) {\n    return Infinity;\n  }\n\n  const coreBaseCost = HacknetNodeConstants.CoreBaseCost;\n  const mult = HacknetNodeConstants.UpgradeCoreMult;\n  let totalCost = 0;\n  let currentCores = startingCore;\n  for (let i = 0; i < sanitizedCores; ++i) {\n    totalCost += coreBaseCost * Math.pow(mult, currentCores - 1);\n    ++currentCores;\n  }\n\n  totalCost *= costMult;\n\n  return totalCost;\n}\n\nexport function calculateNodeCost(n: number, mult = 1): number {\n  if (n <= 0) {\n    return 0;\n  }\n  return HacknetNodeConstants.BaseCost * Math.pow(HacknetNodeConstants.PurchaseNextMult, n - 1) * mult;\n}\n","import React from \"react\";\nimport { BlackOperation } from \"./BlackOperation\";\nimport { IMap } from \"../types\";\n\nexport const BlackOperations: IMap<BlackOperation> = {};\n\n(function () {\n  BlackOperations[\"Operation Typhoon\"] = new BlackOperation({\n    name: \"Operation Typhoon\",\n    baseDifficulty: 2000,\n    reqdRank: 2.5e3,\n    rankGain: 50,\n    rankLoss: 10,\n    hpLoss: 100,\n    weights: {\n      hack: 0.1,\n      str: 0.2,\n      def: 0.2,\n      dex: 0.2,\n      agi: 0.2,\n      cha: 0,\n      int: 0.1,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isKill: true,\n  });\n  BlackOperations[\"Operation Zero\"] = new BlackOperation({\n    name: \"Operation Zero\",\n    baseDifficulty: 2500,\n    reqdRank: 5e3,\n    rankGain: 60,\n    rankLoss: 15,\n    hpLoss: 50,\n    weights: {\n      hack: 0.2,\n      str: 0.15,\n      def: 0.15,\n      dex: 0.2,\n      agi: 0.2,\n      cha: 0,\n      int: 0.1,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isStealth: true,\n  });\n  BlackOperations[\"Operation X\"] = new BlackOperation({\n    name: \"Operation X\",\n    baseDifficulty: 3000,\n    reqdRank: 7.5e3,\n    rankGain: 75,\n    rankLoss: 15,\n    hpLoss: 100,\n    weights: {\n      hack: 0.1,\n      str: 0.2,\n      def: 0.2,\n      dex: 0.2,\n      agi: 0.2,\n      cha: 0,\n      int: 0.1,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isKill: true,\n  });\n  BlackOperations[\"Operation Titan\"] = new BlackOperation({\n    name: \"Operation Titan\",\n    baseDifficulty: 4000,\n    reqdRank: 10e3,\n    rankGain: 100,\n    rankLoss: 20,\n    hpLoss: 100,\n    weights: {\n      hack: 0.1,\n      str: 0.2,\n      def: 0.2,\n      dex: 0.2,\n      agi: 0.2,\n      cha: 0,\n      int: 0.1,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isKill: true,\n  });\n  BlackOperations[\"Operation Ares\"] = new BlackOperation({\n    name: \"Operation Ares\",\n    baseDifficulty: 5000,\n    reqdRank: 12.5e3,\n    rankGain: 125,\n    rankLoss: 20,\n    hpLoss: 200,\n    weights: {\n      hack: 0,\n      str: 0.25,\n      def: 0.25,\n      dex: 0.25,\n      agi: 0.25,\n      cha: 0,\n      int: 0,\n    },\n    decays: {\n      hack: 0,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isKill: true,\n  });\n  BlackOperations[\"Operation Archangel\"] = new BlackOperation({\n    name: \"Operation Archangel\",\n    baseDifficulty: 7500,\n    reqdRank: 15e3,\n    rankGain: 200,\n    rankLoss: 20,\n    hpLoss: 25,\n    weights: {\n      hack: 0,\n      str: 0.2,\n      def: 0.2,\n      dex: 0.3,\n      agi: 0.3,\n      cha: 0,\n      int: 0,\n    },\n    decays: {\n      hack: 0,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isKill: true,\n  });\n  BlackOperations[\"Operation Juggernaut\"] = new BlackOperation({\n    name: \"Operation Juggernaut\",\n    baseDifficulty: 10e3,\n    reqdRank: 20e3,\n    rankGain: 300,\n    rankLoss: 40,\n    hpLoss: 300,\n    weights: {\n      hack: 0,\n      str: 0.25,\n      def: 0.25,\n      dex: 0.25,\n      agi: 0.25,\n      cha: 0,\n      int: 0,\n    },\n    decays: {\n      hack: 0,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isKill: true,\n  });\n  BlackOperations[\"Operation Red Dragon\"] = new BlackOperation({\n    name: \"Operation Red Dragon\",\n    baseDifficulty: 12.5e3,\n    reqdRank: 25e3,\n    rankGain: 500,\n    rankLoss: 50,\n    hpLoss: 500,\n    weights: {\n      hack: 0.05,\n      str: 0.2,\n      def: 0.2,\n      dex: 0.25,\n      agi: 0.25,\n      cha: 0,\n      int: 0.05,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isKill: true,\n  });\n  BlackOperations[\"Operation K\"] = new BlackOperation({\n    name: \"Operation K\",\n    baseDifficulty: 15e3,\n    reqdRank: 30e3,\n    rankGain: 750,\n    rankLoss: 60,\n    hpLoss: 1000,\n    weights: {\n      hack: 0.05,\n      str: 0.2,\n      def: 0.2,\n      dex: 0.25,\n      agi: 0.25,\n      cha: 0,\n      int: 0.05,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isKill: true,\n  });\n  BlackOperations[\"Operation Deckard\"] = new BlackOperation({\n    name: \"Operation Deckard\",\n    baseDifficulty: 20e3,\n    reqdRank: 40e3,\n    rankGain: 1e3,\n    rankLoss: 75,\n    hpLoss: 200,\n    weights: {\n      hack: 0,\n      str: 0.24,\n      def: 0.24,\n      dex: 0.24,\n      agi: 0.24,\n      cha: 0,\n      int: 0.04,\n    },\n    decays: {\n      hack: 0,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isKill: true,\n  });\n  BlackOperations[\"Operation Tyrell\"] = new BlackOperation({\n    name: \"Operation Tyrell\",\n    baseDifficulty: 25e3,\n    reqdRank: 50e3,\n    rankGain: 1.5e3,\n    rankLoss: 100,\n    hpLoss: 500,\n    weights: {\n      hack: 0.1,\n      str: 0.2,\n      def: 0.2,\n      dex: 0.2,\n      agi: 0.2,\n      cha: 0,\n      int: 0.1,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isKill: true,\n  });\n  BlackOperations[\"Operation Wallace\"] = new BlackOperation({\n    name: \"Operation Wallace\",\n    baseDifficulty: 30e3,\n    reqdRank: 75e3,\n    rankGain: 2e3,\n    rankLoss: 150,\n    hpLoss: 1500,\n    weights: {\n      hack: 0,\n      str: 0.24,\n      def: 0.24,\n      dex: 0.24,\n      agi: 0.24,\n      cha: 0,\n      int: 0.04,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isKill: true,\n  });\n  BlackOperations[\"Operation Shoulder of Orion\"] = new BlackOperation({\n    name: \"Operation Shoulder of Orion\",\n    baseDifficulty: 35e3,\n    reqdRank: 100e3,\n    rankGain: 2.5e3,\n    rankLoss: 500,\n    hpLoss: 1500,\n    weights: {\n      hack: 0.1,\n      str: 0.2,\n      def: 0.2,\n      dex: 0.2,\n      agi: 0.2,\n      cha: 0,\n      int: 0.1,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isStealth: true,\n  });\n  BlackOperations[\"Operation Hyron\"] = new BlackOperation({\n    name: \"Operation Hyron\",\n    baseDifficulty: 40e3,\n    reqdRank: 125e3,\n    rankGain: 3e3,\n    rankLoss: 1e3,\n    hpLoss: 500,\n    weights: {\n      hack: 0.1,\n      str: 0.2,\n      def: 0.2,\n      dex: 0.2,\n      agi: 0.2,\n      cha: 0,\n      int: 0.1,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isKill: true,\n  });\n  BlackOperations[\"Operation Morpheus\"] = new BlackOperation({\n    name: \"Operation Morpheus\",\n    baseDifficulty: 45e3,\n    reqdRank: 150e3,\n    rankGain: 4e3,\n    rankLoss: 1e3,\n    hpLoss: 100,\n    weights: {\n      hack: 0.05,\n      str: 0.15,\n      def: 0.15,\n      dex: 0.3,\n      agi: 0.3,\n      cha: 0,\n      int: 0.05,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isStealth: true,\n  });\n  BlackOperations[\"Operation Ion Storm\"] = new BlackOperation({\n    name: \"Operation Ion Storm\",\n    baseDifficulty: 50e3,\n    reqdRank: 175e3,\n    rankGain: 5e3,\n    rankLoss: 1e3,\n    hpLoss: 5000,\n    weights: {\n      hack: 0,\n      str: 0.24,\n      def: 0.24,\n      dex: 0.24,\n      agi: 0.24,\n      cha: 0,\n      int: 0.04,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isKill: true,\n  });\n  BlackOperations[\"Operation Annihilus\"] = new BlackOperation({\n    name: \"Operation Annihilus\",\n    baseDifficulty: 55e3,\n    reqdRank: 200e3,\n    rankGain: 7.5e3,\n    rankLoss: 1e3,\n    hpLoss: 10e3,\n    weights: {\n      hack: 0,\n      str: 0.24,\n      def: 0.24,\n      dex: 0.24,\n      agi: 0.24,\n      cha: 0,\n      int: 0.04,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isKill: true,\n  });\n  BlackOperations[\"Operation Ultron\"] = new BlackOperation({\n    name: \"Operation Ultron\",\n    baseDifficulty: 60e3,\n    reqdRank: 250e3,\n    rankGain: 10e3,\n    rankLoss: 2e3,\n    hpLoss: 10e3,\n    weights: {\n      hack: 0.1,\n      str: 0.2,\n      def: 0.2,\n      dex: 0.2,\n      agi: 0.2,\n      cha: 0,\n      int: 0.1,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n    isKill: true,\n  });\n  BlackOperations[\"Operation Centurion\"] = new BlackOperation({\n    name: \"Operation Centurion\",\n    baseDifficulty: 70e3,\n    reqdRank: 300e3,\n    rankGain: 15e3,\n    rankLoss: 5e3,\n    hpLoss: 10e3,\n    weights: {\n      hack: 0.1,\n      str: 0.2,\n      def: 0.2,\n      dex: 0.2,\n      agi: 0.2,\n      cha: 0,\n      int: 0.1,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n  });\n  BlackOperations[\"Operation Vindictus\"] = new BlackOperation({\n    name: \"Operation Vindictus\",\n    baseDifficulty: 75e3,\n    reqdRank: 350e3,\n    rankGain: 20e3,\n    rankLoss: 20e3,\n    hpLoss: 20e3,\n    weights: {\n      hack: 0.1,\n      str: 0.2,\n      def: 0.2,\n      dex: 0.2,\n      agi: 0.2,\n      cha: 0,\n      int: 0.1,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n  });\n  BlackOperations[\"Operation Daedalus\"] = new BlackOperation({\n    name: \"Operation Daedalus\",\n    baseDifficulty: 80e3,\n    reqdRank: 400e3,\n    rankGain: 40e3,\n    rankLoss: 10e3,\n    hpLoss: 100e3,\n    weights: {\n      hack: 0.1,\n      str: 0.2,\n      def: 0.2,\n      dex: 0.2,\n      agi: 0.2,\n      cha: 0,\n      int: 0.1,\n    },\n    decays: {\n      hack: 0.6,\n      str: 0.8,\n      def: 0.8,\n      dex: 0.8,\n      agi: 0.8,\n      cha: 0,\n      int: 0.75,\n    },\n  });\n})();\n","import React from \"react\";\nimport { Action } from \"./Action\";\nimport { IMap } from \"../types\";\n\nexport const GeneralActions: IMap<Action> = {};\n\n(function () {\n  // General Actions\n  let actionName;\n  actionName = \"Training\";\n  GeneralActions[actionName] = new Action({\n    name: actionName,\n  });\n\n  actionName = \"Field Analysis\";\n  GeneralActions[actionName] = new Action({\n    name: actionName,\n  });\n\n  actionName = \"Recruitment\";\n  GeneralActions[actionName] = new Action({\n    name: actionName,\n  });\n\n  actionName = \"Diplomacy\";\n  GeneralActions[actionName] = new Action({\n    name: actionName,\n  });\n\n  actionName = \"Hyperbolic Regeneration Chamber\";\n  GeneralActions[actionName] = new Action({\n    name: actionName,\n  });\n})();\n","import { BitNodes } from \"../BitNode/BitNode\";\n\nexport class SourceFile {\n  info: JSX.Element;\n  lvl = 1;\n  n: number;\n  name: string;\n  owned = false;\n\n  constructor(number: number, info: JSX.Element) {\n    const bitnodeKey = \"BitNode\" + number;\n    const bitnode = BitNodes[bitnodeKey];\n    if (bitnode == null) {\n      throw new Error(\"Invalid Bit Node for this Source File\");\n    }\n\n    this.n = number;\n    this.name = `Source-File ${number}: ${bitnode.name}`;\n    this.info = info;\n  }\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { EventEmitter } from \"../../utils/EventEmitter\";\nimport { RunningScript } from \"../../Script/RunningScript\";\nimport { killWorkerScript } from \"../../Netscript/killWorkerScript\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Paper from \"@mui/material/Paper\";\n\nexport const LogBoxEvents = new EventEmitter<[RunningScript]>();\n\ninterface Log {\n  id: string;\n  script: RunningScript;\n}\n\nexport function LogBoxManager(): React.ReactElement {\n  const [logs, setLogs] = useState<Log[]>([]);\n  useEffect(\n    () =>\n      LogBoxEvents.subscribe((script: RunningScript) => {\n        const id = script.server + \"-\" + script.filename + script.args.map((x: any): string => `${x}`).join(\"-\");\n        setLogs((old) => {\n          return [\n            ...old,\n            {\n              id: id,\n              script: script,\n            },\n          ];\n        });\n      }),\n    [],\n  );\n\n  function close(id: string): void {\n    setLogs((old) => old.filter((l) => l.id !== id));\n  }\n\n  return (\n    <>\n      {logs.map((log) => (\n        <LogWindow key={log.id} script={log.script} id={log.id} onClose={() => close(log.id)} />\n      ))}\n    </>\n  );\n}\n\ninterface IProps {\n  script: RunningScript;\n  id: string;\n  onClose: () => void;\n}\n\nfunction LogWindow(props: IProps): React.ReactElement {\n  const container = useRef<HTMLDivElement>(null);\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    const id = setInterval(rerender, 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  useEffect(() => {\n    function closeHandler(event: KeyboardEvent): void {\n      if (event.keyCode === 27) {\n        props.onClose();\n      }\n    }\n\n    document.addEventListener(\"keydown\", closeHandler);\n\n    return () => {\n      document.removeEventListener(\"keydown\", closeHandler);\n    };\n  }, []);\n\n  function kill(): void {\n    killWorkerScript(props.script, props.script.server, true);\n    props.onClose();\n  }\n\n  function drag(event: React.MouseEvent<HTMLElement, MouseEvent>): void {\n    const c = container.current;\n    if (c === null) return;\n    event.preventDefault();\n    let x = event.clientX;\n    let y = event.clientY;\n    let left = c.offsetLeft + c.clientWidth / 2;\n    let top = c.offsetTop + c.clientWidth / 5;\n    function mouseMove(event: MouseEvent): void {\n      const c = container.current;\n      if (c === null) return;\n      left += event.clientX - x;\n      top += event.clientY - y;\n      c.style.left = left + \"px\";\n      c.style.top = top + \"px\";\n      // reset right and bottom to avoid the window stretching\n      c.style.right = \"\";\n      c.style.bottom = \"\";\n      x = event.clientX;\n      y = event.clientY;\n    }\n    function mouseUp(): void {\n      document.removeEventListener(\"mouseup\", mouseUp);\n      document.removeEventListener(\"mousemove\", mouseMove);\n    }\n    document.addEventListener(\"mouseup\", mouseUp);\n    document.addEventListener(\"mousemove\", mouseMove);\n  }\n\n  return (\n    <Paper\n      style={{\n        display: \"flex\",\n        flexFlow: \"column\",\n        backgroundColor: \"gray\",\n        width: \"50%\",\n        position: \"fixed\",\n        left: \"50%\",\n        top: \"40%\",\n        margin: \"-10% 0 0 -25%\",\n        height: \"auto\",\n        maxHeight: \"50%\",\n        zIndex: 10,\n        border: \"2px solid $hacker-green\",\n      }}\n      ref={container}\n    >\n      <Paper\n        style={{\n          cursor: \"grab\",\n        }}\n      >\n        <Box display=\"flex\" alignItems=\"center\" onMouseDown={drag}>\n          <Typography color=\"primary\" variant=\"h6\" noWrap component=\"div\">\n            {props.script.filename} {props.script.args.map((x: any): string => `${x}`).join(\" \")}\n          </Typography>\n\n          <Box display=\"flex\" marginLeft=\"auto\">\n            <Button onClick={kill}>Kill Script</Button>\n            <Button onClick={props.onClose}>Close</Button>\n          </Box>\n        </Box>\n      </Paper>\n      <Paper>\n        {props.script.logs.map(\n          (line: string, i: number): JSX.Element => (\n            <Typography key={i} style={{ whiteSpace: \"pre-line\" }}>\n              {line}\n              <br />\n            </Typography>\n          ),\n        )}\n      </Paper>\n    </Paper>\n  );\n}\n","/**\n * Hacknet Node Class\n *\n * Hacknet Nodes are specialized machines that passively earn the player money over time.\n * They can be upgraded to increase their production\n */\nimport { IHacknetNode } from \"./IHacknetNode\";\n\nimport { CONSTANTS } from \"../Constants\";\n\nimport {\n  calculateMoneyGainRate,\n  calculateLevelUpgradeCost,\n  calculateCoreUpgradeCost,\n  calculateRamUpgradeCost,\n} from \"./formulas/HacknetNodes\";\nimport { HacknetNodeConstants } from \"./data/Constants\";\n\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\n\nexport class HacknetNode implements IHacknetNode {\n  // Node's number of cores\n  cores = 1;\n\n  // Node's Level\n  level = 1;\n\n  // Node's production per second\n  moneyGainRatePerSecond = 0;\n\n  // Identifier for Node. Includes the full \"name\" (hacknet-node-N)\n  name: string;\n\n  // How long this Node has existed, in seconds\n  onlineTimeSeconds = 0;\n\n  // Node's RAM (GB)\n  ram = 1;\n\n  // Total money earned by this Node\n  totalMoneyGenerated = 0;\n\n  constructor(name = \"\", prodMult = 1) {\n    this.name = name;\n\n    this.updateMoneyGainRate(prodMult);\n  }\n\n  // Get the cost to upgrade this Node's number of cores\n  calculateCoreUpgradeCost(levels = 1, costMult: number): number {\n    return calculateCoreUpgradeCost(this.cores, levels, costMult);\n  }\n\n  // Get the cost to upgrade this Node's level\n  calculateLevelUpgradeCost(levels = 1, costMult: number): number {\n    return calculateLevelUpgradeCost(this.level, levels, costMult);\n  }\n\n  // Get the cost to upgrade this Node's RAM\n  calculateRamUpgradeCost(levels = 1, costMult: number): number {\n    return calculateRamUpgradeCost(this.ram, levels, costMult);\n  }\n\n  // Process this Hacknet Node in the game loop.\n  // Returns the amount of money generated\n  process(numCycles = 1): number {\n    const seconds = (numCycles * CONSTANTS.MilliPerCycle) / 1000;\n    let gain = this.moneyGainRatePerSecond * seconds;\n    if (isNaN(gain)) {\n      console.error(`Hacknet Node ${this.name} calculated earnings of NaN`);\n      gain = 0;\n    }\n\n    this.totalMoneyGenerated += gain;\n    this.onlineTimeSeconds += seconds;\n\n    return gain;\n  }\n\n  // Upgrade this Node's number of cores, if possible\n  // Returns a boolean indicating whether new cores were successfully bought\n  upgradeCore(levels = 1, prodMult: number): void {\n    this.cores = Math.min(HacknetNodeConstants.MaxCores, Math.round(this.cores + levels));\n    this.updateMoneyGainRate(prodMult);\n  }\n\n  // Upgrade this Node's level, if possible\n  // Returns a boolean indicating whether the level was successfully updated\n  upgradeLevel(levels = 1, prodMult: number): void {\n    this.level = Math.min(HacknetNodeConstants.MaxLevel, Math.round(this.level + levels));\n    this.updateMoneyGainRate(prodMult);\n  }\n\n  // Upgrade this Node's RAM, if possible\n  // Returns a boolean indicating whether the RAM was successfully upgraded\n  upgradeRam(levels = 1, prodMult: number): void {\n    for (let i = 0; i < levels; ++i) {\n      this.ram *= 2; // Ram is always doubled\n    }\n    this.ram = Math.round(this.ram); // Handle any floating point precision issues\n    this.updateMoneyGainRate(prodMult);\n  }\n\n  // Re-calculate this Node's production and update the moneyGainRatePerSecond prop\n  updateMoneyGainRate(prodMult: number): void {\n    this.moneyGainRatePerSecond = calculateMoneyGainRate(this.level, this.ram, this.cores, prodMult);\n    if (isNaN(this.moneyGainRatePerSecond)) {\n      this.moneyGainRatePerSecond = 0;\n      dialogBoxCreate(\"Error in calculating Hacknet Node production. Please report to game developer\");\n    }\n  }\n\n  /**\n   * Serialize the current object to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"HacknetNode\", this);\n  }\n\n  /**\n   * Initiatizes a HacknetNode object from a JSON save state.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): HacknetNode {\n    return Generic_fromJSON(HacknetNode, value.data);\n  }\n}\n\nReviver.constructors.HacknetNode = HacknetNode;\n","/**\n * Map of all Hash Upgrades\n * Key = Hash name, Value = HashUpgrade object\n */\nimport { HashUpgrade, IConstructorParams } from \"./HashUpgrade\";\nimport { HashUpgradesMetadata } from \"./data/HashUpgradesMetadata\";\nimport { IMap } from \"../types\";\n\nexport const HashUpgrades: IMap<HashUpgrade> = {};\n\nfunction createHashUpgrade(p: IConstructorParams): void {\n  HashUpgrades[p.name] = new HashUpgrade(p);\n}\n\nfor (const metadata of HashUpgradesMetadata) {\n  createHashUpgrade(metadata);\n}\n","/**\n * Returns the input array as a comma separated string.\n *\n * Does several things that Array.toString() doesn't do\n *  - Adds brackets around the array\n *  - Adds quotation marks around strings\n */\nexport function arrayToString<T>(a: T[]): string {\n  const vals: any[] = [];\n  for (let i = 0; i < a.length; ++i) {\n    let elem: any = a[i];\n    if (Array.isArray(elem)) {\n      elem = arrayToString(elem);\n    } else if (typeof elem === \"string\") {\n      elem = `\"${elem}\"`;\n    }\n    vals.push(elem);\n  }\n\n  return `[${vals.join(\", \")}]`;\n}\n","import { BitNodeMultipliers } from \"../BitNode/BitNodeMultipliers\";\nimport { CONSTANTS } from \"../Constants\";\n\nexport function getStockMarketAccountCost(): number {\n  return CONSTANTS.WSEAccountCost;\n}\n\nexport function getStockMarketTixApiCost(): number {\n  return CONSTANTS.TIXAPICost;\n}\n\nexport function getStockMarket4SDataCost(): number {\n  return CONSTANTS.MarketData4SCost * BitNodeMultipliers.FourSigmaMarketDataCost;\n}\n\nexport function getStockMarket4STixApiCost(): number {\n  return CONSTANTS.MarketDataTixApi4SCost * BitNodeMultipliers.FourSigmaMarketDataApiCost;\n}\n","/**\n * React Component for a button that's used to apply for a job\n */\nimport * as React from \"react\";\n\nimport { Company } from \"../../Company/Company\";\nimport { CompanyPosition } from \"../../Company/CompanyPosition\";\nimport { getJobRequirementText } from \"../../Company/GetJobRequirementText\";\n\nimport { use } from \"../../ui/Context\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\ntype IProps = {\n  company: Company;\n  entryPosType: CompanyPosition;\n  onClick: (e: React.MouseEvent<HTMLElement>) => void;\n  text: string;\n};\n\nexport function ApplyToJobButton(props: IProps): React.ReactElement {\n  const player = use.Player();\n\n  function getJobRequirementTooltip(): string {\n    const pos = player.getNextCompanyPosition(props.company, props.entryPosType);\n    if (pos == null) {\n      return \"\";\n    }\n\n    if (!props.company.hasPosition(pos)) {\n      return \"\";\n    }\n\n    return getJobRequirementText(props.company, pos, true);\n  }\n\n  return (\n    <>\n      <Tooltip title={<span dangerouslySetInnerHTML={{ __html: getJobRequirementTooltip() }}></span>}>\n        <Button onClick={props.onClick}>{props.text}</Button>\n      </Tooltip>\n      <br />\n    </>\n  );\n}\n","/*\nThe game cannot block every possible exploits. Specially since one of them is\nthat you can just edit your save file and that's impragmatic to prevent.\n\nSo instead we have source file minus 1. It is not obtained by destroying a\nBitNode but instead it is awarded when the player finds innovative ways to break\nthe game, this serves 2 purpose, [one] the developpers don't have to spend time\ntrying to implement anti-cheat measures and [two] finding ways to break a\nhacking game is very much in the spirit of the game.\nSource-File minus 1 is extremely weak because it can be fully level up quickly.\n*/\n\nexport enum Exploit {\n  UndocumentedFunctionCall = \"UndocumentedFunctionCall\",\n  Unclickable = \"Unclickable\",\n  PrototypeTampering = \"PrototypeTampering\",\n  Bypass = \"Bypass\",\n  // To the players reading this. Yes you're supposed to add EditSaveFile by\n  // editing your save file, yes you could add them all, no we don't care\n  // that's not the point.\n  EditSaveFile = \"EditSaveFile\",\n}\n\nconst names: {\n  [key: string]: string;\n} = {\n  UndocumentedFunctionCall: \"by looking beyond the documentation.\",\n  EditSaveFile: \"by editing your save file.\",\n  PrototypeTampering: \"by tampering with Numbers prototype.\",\n  Unclickable: \"by clicking the unclickable.\",\n  Bypass: \"by circumventing the ram cost of document.\",\n};\n\nexport function ExploitName(exploit: string): string {\n  return names[exploit];\n}\n\nexport function sanitizeExploits(exploits: Exploit[]): Exploit[] {\n  return exploits.filter((e: Exploit) => Object.keys(Exploit).includes(e));\n}\n","/**\n * Event emitter that triggers when scripts are started/stopped\n */\nimport { EventEmitter } from \"../utils/EventEmitter\";\n\nexport const WorkerScriptStartStopEventEmitter = new EventEmitter<[]>();\n","import { DarkWebItem } from \"./DarkWebItem\";\nimport { IMap } from \"../types\";\nimport { Programs } from \"../Programs/Programs\";\n\nexport const DarkWebItems: IMap<DarkWebItem> = {\n  BruteSSHProgram: new DarkWebItem(Programs.BruteSSHProgram.name, 500e3, \"Opens up SSH Ports\"),\n  FTPCrackProgram: new DarkWebItem(Programs.FTPCrackProgram.name, 1500e3, \"Opens up FTP Ports\"),\n  RelaySMTPProgram: new DarkWebItem(Programs.RelaySMTPProgram.name, 5e6, \"Opens up SMTP Ports\"),\n  HTTPWormProgram: new DarkWebItem(Programs.HTTPWormProgram.name, 30e6, \"Opens up HTTP Ports\"),\n  SQLInjectProgram: new DarkWebItem(Programs.SQLInjectProgram.name, 250e6, \"Opens up SQL Ports\"),\n  DeepscanV1: new DarkWebItem(Programs.DeepscanV1.name, 500000, \"Enables 'scan-analyze' with a depth up to 5\"),\n  DeepscanV2: new DarkWebItem(Programs.DeepscanV2.name, 25e6, \"Enables 'scan-analyze' with a depth up to 10\"),\n  AutolinkProgram: new DarkWebItem(Programs.AutoLink.name, 1e6, \"Enables direct connect via 'scan-analyze'\"),\n  ServerProfilerProgram: new DarkWebItem(\n    Programs.ServerProfiler.name,\n    1e6,\n    \"Displays hacking and Netscript-related information about a server\",\n  ),\n};\n","export enum RamCalculationErrorCode {\n  SyntaxError = -1,\n  ImportError = -2,\n  URLImportError = -3,\n}\n","export const GangConstants: {\n  GangRespectToReputationRatio: number;\n  MaximumGangMembers: number;\n  CyclesPerTerritoryAndPowerUpdate: number;\n  AscensionMultiplierRatio: number;\n  Names: string[];\n} = {\n  // Respect is divided by this to get rep gain\n  GangRespectToReputationRatio: 25,\n  MaximumGangMembers: 12,\n  CyclesPerTerritoryAndPowerUpdate: 100,\n  // Portion of upgrade multiplier that is kept after ascending\n  AscensionMultiplierRatio: 0.15,\n  // Names of possible Gangs\n  Names: [\n    \"Slum Snakes\",\n    \"Tetrads\",\n    \"The Syndicate\",\n    \"The Dark Army\",\n    \"Speakers for the Dead\",\n    \"NiteSec\",\n    \"The Black Hand\",\n  ],\n};\n","import { getRandomByte } from \"./helpers/getRandomByte\";\n\n/**\n * Generate a random IP address\n * Does not check to see if the IP already exists in the game\n */\nexport function createRandomIp(): string {\n  const ip: string = getRandomByte(99) + \".\" + getRandomByte(9) + \".\" + getRandomByte(9) + \".\" + getRandomByte(9);\n\n  return ip;\n}\n","/**\n * Does a shallow compare of two arrays to determine if they are equal.\n * @param a1 The first array\n * @param a2 The second array\n */\nexport function compareArrays<T>(a1: T[], a2: T[]): boolean {\n  if (a1.length !== a2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < a1.length; ++i) {\n    if (Array.isArray(a1[i])) {\n      // If the other element is not an array, then these cannot be equal\n      if (!Array.isArray(a2[i])) {\n        return false;\n      }\n\n      const elem1 = a1[i] as any;\n      const elem2 = a2[i] as any;\n      if (!compareArrays(elem1, elem2)) {\n        return false;\n      }\n    } else if (a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import React from \"react\";\nimport { createTheme, ThemeProvider, Theme, StyledEngineProvider } from \"@mui/material/styles\";\nimport { EventEmitter } from \"../../utils/EventEmitter\";\nimport { Settings } from \"../../Settings/Settings\";\n\nexport const ThemeEvents = new EventEmitter<[]>();\n\ndeclare module \"@mui/material/styles\" {\n  interface Theme {\n    colors: {\n      hp: React.CSSProperties[\"color\"];\n      money: React.CSSProperties[\"color\"];\n      hack: React.CSSProperties[\"color\"];\n      combat: React.CSSProperties[\"color\"];\n      cha: React.CSSProperties[\"color\"];\n      int: React.CSSProperties[\"color\"];\n      rep: React.CSSProperties[\"color\"];\n    };\n  }\n  interface ThemeOptions {\n    colors: {\n      hp: React.CSSProperties[\"color\"];\n      money: React.CSSProperties[\"color\"];\n      hack: React.CSSProperties[\"color\"];\n      combat: React.CSSProperties[\"color\"];\n      cha: React.CSSProperties[\"color\"];\n      int: React.CSSProperties[\"color\"];\n      rep: React.CSSProperties[\"color\"];\n    };\n  }\n}\n\nlet theme: Theme;\n\nexport function refreshTheme(): void {\n  theme = createTheme({\n    colors: {\n      hp: Settings.theme.hp,\n      money: Settings.theme.money,\n      hack: Settings.theme.hack,\n      combat: Settings.theme.combat,\n      cha: Settings.theme.cha,\n      int: Settings.theme.int,\n      rep: Settings.theme.rep,\n    },\n    palette: {\n      primary: {\n        light: Settings.theme.primarylight,\n        main: Settings.theme.primary,\n        dark: Settings.theme.primarydark,\n      },\n      secondary: {\n        light: Settings.theme.secondarylight,\n        main: Settings.theme.secondary,\n        dark: Settings.theme.secondarydark,\n      },\n      error: {\n        light: Settings.theme.errorlight,\n        main: Settings.theme.error,\n        dark: Settings.theme.errordark,\n      },\n      info: {\n        light: Settings.theme.infolight,\n        main: Settings.theme.info,\n        dark: Settings.theme.infodark,\n      },\n      warning: {\n        light: Settings.theme.warninglight,\n        main: Settings.theme.warning,\n        dark: Settings.theme.warningdark,\n      },\n      background: {\n        default: Settings.theme.black,\n        paper: Settings.theme.well,\n      },\n      action: {\n        disabled: Settings.theme.disabled,\n      },\n    },\n    typography: {\n      fontFamily: \"monospace\",\n      button: {\n        textTransform: \"none\",\n      },\n    },\n    components: {\n      MuiInputBase: {\n        styleOverrides: {\n          root: {\n            backgroundColor: Settings.theme.well,\n            color: Settings.theme.primary,\n          },\n          input: {\n            \"&::placeholder\": {\n              userSelect: \"none\",\n              color: Settings.theme.primarydark,\n            },\n          },\n        },\n      },\n\n      MuiInput: {\n        styleOverrides: {\n          root: {\n            backgroundColor: Settings.theme.well,\n            borderBottomColor: \"#fff\",\n          },\n          underline: {\n            \"&:hover\": {\n              borderBottomColor: Settings.theme.primarydark,\n            },\n            \"&:before\": {\n              borderBottomColor: Settings.theme.primary,\n            },\n            \"&:after\": {\n              borderBottomColor: Settings.theme.primarylight,\n            },\n          },\n        },\n      },\n\n      MuiInputLabel: {\n        styleOverrides: {\n          root: {\n            color: Settings.theme.primarydark, // why is this switched?\n            userSelect: \"none\",\n            \"&:before\": {\n              color: Settings.theme.primarylight,\n            },\n          },\n        },\n      },\n      MuiButton: {\n        styleOverrides: {\n          root: {\n            backgroundColor: \"#333\",\n            border: \"1px solid \" + Settings.theme.well,\n            // color: Settings.theme.primary,\n            \"&:hover\": {\n              backgroundColor: Settings.theme.black,\n            },\n\n            borderRadius: 0,\n          },\n        },\n      },\n      MuiSelect: {\n        styleOverrides: {\n          icon: {\n            color: Settings.theme.primary,\n          },\n        },\n        defaultProps: {\n          variant: \"standard\",\n        },\n      },\n      MuiTextField: {\n        defaultProps: {\n          variant: \"standard\",\n        },\n      },\n      MuiMenu: {\n        styleOverrides: {\n          list: {\n            backgroundColor: Settings.theme.well,\n          },\n        },\n      },\n      MuiMenuItem: {\n        styleOverrides: {\n          root: {\n            color: Settings.theme.primary,\n          },\n        },\n      },\n      MuiAccordionSummary: {\n        styleOverrides: {\n          root: {\n            backgroundColor: \"#111\",\n          },\n        },\n      },\n      MuiAccordionDetails: {\n        styleOverrides: {\n          root: {\n            backgroundColor: Settings.theme.black,\n          },\n        },\n      },\n      MuiIconButton: {\n        styleOverrides: {\n          root: {\n            color: Settings.theme.primary,\n          },\n        },\n      },\n      MuiTooltip: {\n        styleOverrides: {\n          tooltip: {\n            fontSize: \"1em\",\n            color: Settings.theme.primary,\n            backgroundColor: Settings.theme.well,\n            borderRadius: 0,\n            border: \"2px solid white\",\n            maxWidth: \"100vh\",\n          },\n        },\n        defaultProps: {\n          disableInteractive: true,\n        },\n      },\n      MuiSlider: {\n        styleOverrides: {\n          valueLabel: {\n            color: Settings.theme.primary,\n            backgroundColor: Settings.theme.well,\n          },\n        },\n      },\n      MuiDrawer: {\n        styleOverrides: {\n          paper: {\n            \"&::-webkit-scrollbar\": {\n              // webkit\n              display: \"none\",\n            },\n            scrollbarWidth: \"none\", // firefox\n            backgroundColor: Settings.theme.black,\n          },\n          paperAnchorDockedLeft: {\n            borderRight: \"1px solid \" + Settings.theme.welllight,\n          },\n        },\n      },\n      MuiDivider: {\n        styleOverrides: {\n          root: {\n            backgroundColor: Settings.theme.welllight,\n          },\n        },\n      },\n      MuiFormControlLabel: {\n        styleOverrides: {\n          root: {\n            color: Settings.theme.primary,\n          },\n        },\n      },\n      MuiSwitch: {\n        styleOverrides: {\n          switchBase: {\n            color: Settings.theme.primarydark,\n          },\n          track: {\n            backgroundColor: Settings.theme.welllight,\n          },\n        },\n      },\n      MuiPaper: {\n        styleOverrides: {\n          root: {\n            borderRadius: 0,\n            backgroundColor: Settings.theme.black,\n            border: \"1px solid \" + Settings.theme.welllight,\n          },\n        },\n      },\n      MuiTablePagination: {\n        styleOverrides: {\n          select: {\n            color: Settings.theme.primary,\n          },\n        },\n      },\n      MuiTab: {\n        styleOverrides: {\n          textColorPrimary: {\n            color: Settings.theme.secondary,\n            \"&.Mui-selected\": {\n              color: Settings.theme.primary,\n            },\n          },\n        },\n      },\n    },\n  });\n}\nrefreshTheme();\n\ninterface IProps {\n  children: JSX.Element[] | JSX.Element;\n}\n\nexport const TTheme = ({ children }: IProps): React.ReactElement => (\n  <StyledEngineProvider injectFirst>\n    <ThemeProvider theme={theme}>{children}</ThemeProvider>\n  </StyledEngineProvider>\n);\n","import React from \"react\";\nimport { Player } from \"../Player\";\nimport { getRandomInt } from \"../utils/helpers/getRandomInt\";\nimport { addOffset } from \"../utils/helpers/addOffset\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\nimport { BladeburnerConstants } from \"./data/Constants\";\nimport { IBladeburner } from \"./IBladeburner\";\nimport { IAction, ISuccessChanceParams } from \"./IAction\";\n\nclass StatsMultiplier {\n  [key: string]: number;\n\n  hack = 0;\n  str = 0;\n  def = 0;\n  dex = 0;\n  agi = 0;\n  cha = 0;\n  int = 0;\n}\n\nexport interface IActionParams {\n  name?: string;\n  level?: number;\n  maxLevel?: number;\n  autoLevel?: boolean;\n  baseDifficulty?: number;\n  difficultyFac?: number;\n  rewardFac?: number;\n  successes?: number;\n  failures?: number;\n  rankGain?: number;\n  rankLoss?: number;\n  hpLoss?: number;\n  hpLost?: number;\n  isStealth?: boolean;\n  isKill?: boolean;\n  count?: number;\n  weights?: StatsMultiplier;\n  decays?: StatsMultiplier;\n  teamCount?: number;\n}\n\nexport class Action implements IAction {\n  name = \"\";\n\n  // Difficulty scales with level. See getDifficulty() method\n  level = 1;\n  maxLevel = 1;\n  autoLevel = true;\n  baseDifficulty = 100;\n  difficultyFac = 1.01;\n\n  // Rank increase/decrease is affected by this exponent\n  rewardFac = 1.02;\n\n  successes = 0;\n  failures = 0;\n\n  // All of these scale with level/difficulty\n  rankGain = 0;\n  rankLoss = 0;\n  hpLoss = 0;\n  hpLost = 0;\n\n  // Action Category. Current categories are stealth and kill\n  isStealth = false;\n  isKill = false;\n\n  /**\n   * Number of this contract remaining, and its growth rate\n   * Growth rate is an integer and the count will increase by that integer every \"cycle\"\n   */\n  count: number = getRandomInt(1e3, 25e3);\n\n  // Weighting of each stat in determining action success rate\n  weights: StatsMultiplier = {\n    hack: 1 / 7,\n    str: 1 / 7,\n    def: 1 / 7,\n    dex: 1 / 7,\n    agi: 1 / 7,\n    cha: 1 / 7,\n    int: 1 / 7,\n  };\n  // Diminishing returns of stats (stat ^ decay where 0 <= decay <= 1)\n  decays: StatsMultiplier = {\n    hack: 0.9,\n    str: 0.9,\n    def: 0.9,\n    dex: 0.9,\n    agi: 0.9,\n    cha: 0.9,\n    int: 0.9,\n  };\n  teamCount = 0;\n\n  // Base Class for Contracts, Operations, and BlackOps\n  constructor(params: IActionParams | null = null) {\n    //  | null = null\n    if (params && params.name) this.name = params.name;\n\n    if (params && params.baseDifficulty) this.baseDifficulty = addOffset(params.baseDifficulty, 10);\n    if (params && params.difficultyFac) this.difficultyFac = params.difficultyFac;\n\n    if (params && params.rewardFac) this.rewardFac = params.rewardFac;\n    if (params && params.rankGain) this.rankGain = params.rankGain;\n    if (params && params.rankLoss) this.rankLoss = params.rankLoss;\n    if (params && params.hpLoss) this.hpLoss = params.hpLoss;\n\n    if (params && params.isStealth) this.isStealth = params.isStealth;\n    if (params && params.isKill) this.isKill = params.isKill;\n\n    if (params && params.count) this.count = params.count;\n\n    if (params && params.weights) this.weights = params.weights;\n    if (params && params.decays) this.decays = params.decays;\n\n    // Check to make sure weights are summed properly\n    let sum = 0;\n    for (const weight in this.weights) {\n      if (this.weights.hasOwnProperty(weight)) {\n        sum += this.weights[weight];\n      }\n    }\n    if (sum - 1 >= 10 * Number.EPSILON) {\n      throw new Error(\n        \"Invalid weights when constructing Action \" +\n          this.name +\n          \". The weights should sum up to 1. They sum up to :\" +\n          1,\n      );\n    }\n\n    for (const decay in this.decays) {\n      if (this.decays.hasOwnProperty(decay)) {\n        if (this.decays[decay] > 1) {\n          throw new Error(\n            \"Invalid decays when constructing \" + \"Action \" + this.name + \". \" + \"Decay value cannot be greater than 1\",\n          );\n        }\n      }\n    }\n  }\n\n  getDifficulty(): number {\n    const difficulty = this.baseDifficulty * Math.pow(this.difficultyFac, this.level - 1);\n    if (isNaN(difficulty)) {\n      throw new Error(\"Calculated NaN in Action.getDifficulty()\");\n    }\n    return difficulty;\n  }\n\n  /**\n   * Tests for success. Should be called when an action has completed\n   * @param inst {Bladeburner} - Bladeburner instance\n   */\n  attempt(inst: IBladeburner): boolean {\n    return Math.random() < this.getSuccessChance(inst);\n  }\n\n  // To be implemented by subtypes\n  getActionTimePenalty(): number {\n    return 1;\n  }\n\n  getActionTime(inst: IBladeburner): number {\n    const difficulty = this.getDifficulty();\n    let baseTime = difficulty / BladeburnerConstants.DifficultyToTimeFactor;\n    const skillFac = inst.skillMultipliers.actionTime; // Always < 1\n\n    const effAgility = Player.agility * inst.skillMultipliers.effAgi;\n    const effDexterity = Player.dexterity * inst.skillMultipliers.effDex;\n    const statFac =\n      0.5 *\n      (Math.pow(effAgility, BladeburnerConstants.EffAgiExponentialFactor) +\n        Math.pow(effDexterity, BladeburnerConstants.EffDexExponentialFactor) +\n        effAgility / BladeburnerConstants.EffAgiLinearFactor +\n        effDexterity / BladeburnerConstants.EffDexLinearFactor); // Always > 1\n\n    baseTime = Math.max(1, (baseTime * skillFac) / statFac);\n\n    return Math.ceil(baseTime * this.getActionTimePenalty());\n  }\n\n  // For actions that have teams. To be implemented by subtypes.\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getTeamSuccessBonus(inst: IBladeburner): number {\n    return 1;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getActionTypeSkillSuccessBonus(inst: IBladeburner): number {\n    return 1;\n  }\n\n  getChaosCompetencePenalty(inst: IBladeburner, params: ISuccessChanceParams): number {\n    const city = inst.getCurrentCity();\n    if (params.est) {\n      return Math.pow(city.popEst / BladeburnerConstants.PopulationThreshold, BladeburnerConstants.PopulationExponent);\n    } else {\n      return Math.pow(city.pop / BladeburnerConstants.PopulationThreshold, BladeburnerConstants.PopulationExponent);\n    }\n  }\n\n  getChaosDifficultyBonus(inst: IBladeburner /*, params: ISuccessChanceParams*/): number {\n    const city = inst.getCurrentCity();\n    if (city.chaos > BladeburnerConstants.ChaosThreshold) {\n      const diff = 1 + (city.chaos - BladeburnerConstants.ChaosThreshold);\n      const mult = Math.pow(diff, 0.1);\n      return mult;\n    }\n\n    return 1;\n  }\n\n  getEstSuccessChance(inst: IBladeburner): number[] {\n    function clamp(x: number): number {\n      return Math.max(0, Math.min(x, 1));\n    }\n    const est = this.getSuccessChance(inst, { est: true });\n    const real = this.getSuccessChance(inst);\n    const diff = Math.abs(real - est);\n    let low = real - diff;\n    let high = real + diff;\n    const city = inst.getCurrentCity();\n    const r = city.pop / city.popEst;\n\n    if (r < 1) low *= r;\n    else high *= r;\n    return [clamp(low), clamp(high)];\n  }\n\n  /**\n   * @inst - Bladeburner Object\n   * @params - options:\n   *  est (bool): Get success chance estimate instead of real success chance\n   */\n  getSuccessChance(inst: IBladeburner, params: ISuccessChanceParams = { est: false }): number {\n    if (inst == null) {\n      throw new Error(\"Invalid Bladeburner instance passed into Action.getSuccessChance\");\n    }\n    let difficulty = this.getDifficulty();\n    let competence = 0;\n    for (const stat in this.weights) {\n      if (this.weights.hasOwnProperty(stat)) {\n        const playerStatLvl = Player.queryStatFromString(stat);\n        const key = \"eff\" + stat.charAt(0).toUpperCase() + stat.slice(1);\n        let effMultiplier = inst.skillMultipliers[key];\n        if (effMultiplier == null) {\n          console.error(`Failed to find Bladeburner Skill multiplier for: ${stat}`);\n          effMultiplier = 1;\n        }\n        competence += this.weights[stat] * Math.pow(effMultiplier * playerStatLvl, this.decays[stat]);\n      }\n    }\n    competence *= Player.getIntelligenceBonus(0.75);\n    competence *= inst.calculateStaminaPenalty();\n\n    competence *= this.getTeamSuccessBonus(inst);\n\n    competence *= this.getChaosCompetencePenalty(inst, params);\n    difficulty *= this.getChaosDifficultyBonus(inst);\n\n    if (this.name == \"Raid\" && inst.getCurrentCity().comms <= 0) {\n      return 0;\n    }\n\n    // Factor skill multipliers into success chance\n    competence *= inst.skillMultipliers.successChanceAll;\n    competence *= this.getActionTypeSkillSuccessBonus(inst);\n    if (this.isStealth) {\n      competence *= inst.skillMultipliers.successChanceStealth;\n    }\n    if (this.isKill) {\n      competence *= inst.skillMultipliers.successChanceKill;\n    }\n\n    // Augmentation multiplier\n    competence *= Player.bladeburner_success_chance_mult;\n\n    if (isNaN(competence)) {\n      throw new Error(\"Competence calculated as NaN in Action.getSuccessChance()\");\n    }\n    return Math.min(1, competence / difficulty);\n  }\n\n  getSuccessesNeededForNextLevel(baseSuccessesPerLevel: number): number {\n    return Math.ceil(0.5 * this.maxLevel * (2 * baseSuccessesPerLevel + (this.maxLevel - 1)));\n  }\n\n  setMaxLevel(baseSuccessesPerLevel: number): void {\n    if (this.successes >= this.getSuccessesNeededForNextLevel(baseSuccessesPerLevel)) {\n      ++this.maxLevel;\n    }\n  }\n\n  toJSON(): any {\n    return Generic_toJSON(\"Action\", this);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Action {\n    return Generic_fromJSON(Action, value.data);\n  }\n}\n\nReviver.constructors.Action = Action;\n","import { loadAliases, loadGlobalAliases, Aliases, GlobalAliases } from \"./Alias\";\nimport { Companies, loadCompanies } from \"./Company/Companies\";\nimport { CONSTANTS } from \"./Constants\";\nimport { Factions, loadFactions } from \"./Faction/Factions\";\nimport { loadAllGangs, AllGangs } from \"./Gang/AllGangs\";\nimport { loadMessages, initMessages, Messages } from \"./Message/MessageHelpers\";\nimport { Player, loadPlayer } from \"./Player\";\nimport { AllServers, loadAllServers } from \"./Server/AllServers\";\nimport { Settings } from \"./Settings/Settings\";\nimport { loadSpecialServerIps, SpecialServerIps } from \"./Server/SpecialServerIps\";\nimport { SourceFileFlags } from \"./SourceFile/SourceFileFlags\";\nimport { loadStockMarket, StockMarket } from \"./StockMarket/StockMarket\";\n\nimport { GameSavedEvents } from \"./ui/React/Snackbar\";\n\nimport { setTimeoutRef } from \"./utils/SetTimeoutRef\";\nimport * as ExportBonus from \"./ExportBonus\";\n\nimport { dialogBoxCreate } from \"./ui/React/DialogBox\";\nimport { Reviver, Generic_toJSON, Generic_fromJSON } from \"./utils/JSONReviver\";\nimport { save } from \"./db\";\n\n/* SaveObject.js\n *  Defines the object used to save/load games\n */\n\nclass BitburnerSaveObject {\n  PlayerSave = \"\";\n  AllServersSave = \"\";\n  CompaniesSave = \"\";\n  FactionsSave = \"\";\n  SpecialServerIpsSave = \"\";\n  AliasesSave = \"\";\n  GlobalAliasesSave = \"\";\n  MessagesSave = \"\";\n  StockMarketSave = \"\";\n  SettingsSave = \"\";\n  VersionSave = \"\";\n  AllGangsSave = \"\";\n  LastExportBonus = \"\";\n\n  getSaveString(): string {\n    this.PlayerSave = JSON.stringify(Player);\n\n    // Delete all logs from all running scripts\n    const TempAllServers = JSON.parse(JSON.stringify(AllServers), Reviver);\n    for (const ip in TempAllServers) {\n      const server = TempAllServers[ip];\n      if (server == null) {\n        continue;\n      }\n      for (let i = 0; i < server.runningScripts.length; ++i) {\n        const runningScriptObj = server.runningScripts[i];\n        runningScriptObj.logs.length = 0;\n        runningScriptObj.logs = [];\n      }\n    }\n\n    this.AllServersSave = JSON.stringify(TempAllServers);\n    this.CompaniesSave = JSON.stringify(Companies);\n    this.FactionsSave = JSON.stringify(Factions);\n    this.SpecialServerIpsSave = JSON.stringify(SpecialServerIps);\n    this.AliasesSave = JSON.stringify(Aliases);\n    this.GlobalAliasesSave = JSON.stringify(GlobalAliases);\n    this.MessagesSave = JSON.stringify(Messages);\n    this.StockMarketSave = JSON.stringify(StockMarket);\n    this.SettingsSave = JSON.stringify(Settings);\n    this.VersionSave = JSON.stringify(CONSTANTS.Version);\n    this.LastExportBonus = JSON.stringify(ExportBonus.LastExportBonus);\n    if (Player.inGang()) {\n      this.AllGangsSave = JSON.stringify(AllGangs);\n    }\n    const saveString = btoa(unescape(encodeURIComponent(JSON.stringify(this))));\n\n    return saveString;\n  }\n\n  saveGame(): void {\n    const saveString = this.getSaveString();\n\n    save(saveString)\n      .then(() => GameSavedEvents.emit())\n      .catch((err) => console.error(err));\n  }\n\n  exportGame(): void {\n    const saveString = this.getSaveString();\n\n    // Save file name is based on current timestamp and BitNode\n    const epochTime = Math.round(Date.now() / 1000);\n    const bn = Player.bitNodeN;\n    const filename = `bitburnerSave_BN${bn}x${SourceFileFlags[bn]}_${epochTime}.json`;\n    const file = new Blob([saveString], { type: \"text/plain\" });\n    if (window.navigator.msSaveOrOpenBlob) {\n      // IE10+\n      window.navigator.msSaveOrOpenBlob(file, filename);\n    } else {\n      // Others\n      const a = document.createElement(\"a\"),\n        url = URL.createObjectURL(file);\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      setTimeoutRef(function () {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n      }, 0);\n    }\n  }\n\n  toJSON(): any {\n    return Generic_toJSON(\"BitburnerSaveObject\", this);\n  }\n\n  static fromJSON(value: { data: any }): BitburnerSaveObject {\n    return Generic_fromJSON(BitburnerSaveObject, value.data);\n  }\n}\n\n// Makes necessary changes to the loaded/imported data to ensure\n// the game stills works with new versions\nfunction evaluateVersionCompatibility(ver: string): void {\n  // We have to do this because ts won't let us otherwise\n  const anyPlayer = Player as any;\n  // This version refactored the Company/job-related code\n  if (ver <= \"0.41.2\") {\n    // Player's company position is now a string\n    if (anyPlayer.companyPosition != null && typeof anyPlayer.companyPosition !== \"string\") {\n      anyPlayer.companyPosition = anyPlayer.companyPosition.data.positionName;\n      if (anyPlayer.companyPosition == null) {\n        anyPlayer.companyPosition = \"\";\n      }\n    }\n\n    // The \"companyName\" property of all Companies is renamed to \"name\"\n    for (const companyName in Companies) {\n      const company: any = Companies[companyName];\n      if (company.name == 0 && company.companyName != null) {\n        company.name = company.companyName;\n      }\n\n      if (company.companyPositions instanceof Array) {\n        const pos: any = {};\n\n        for (let i = 0; i < company.companyPositions.length; ++i) {\n          pos[company.companyPositions[i]] = true;\n        }\n        company.companyPositions = pos;\n      }\n    }\n  }\n\n  // This version allowed players to hold multiple jobs\n  if (ver < \"0.43.0\") {\n    if (anyPlayer.companyName !== \"\" && anyPlayer.companyPosition != null && anyPlayer.companyPosition !== \"\") {\n      anyPlayer.jobs[anyPlayer.companyName] = anyPlayer.companyPosition;\n    }\n\n    delete anyPlayer.companyPosition;\n  }\n}\n\nfunction loadGame(saveString: string): boolean {\n  if (!saveString) return false;\n  saveString = decodeURIComponent(escape(atob(saveString)));\n\n  const saveObj = JSON.parse(saveString, Reviver);\n\n  loadPlayer(saveObj.PlayerSave);\n  loadAllServers(saveObj.AllServersSave);\n  loadCompanies(saveObj.CompaniesSave);\n  loadFactions(saveObj.FactionsSave);\n  loadSpecialServerIps(saveObj.SpecialServerIpsSave);\n\n  if (saveObj.hasOwnProperty(\"AliasesSave\")) {\n    try {\n      loadAliases(saveObj.AliasesSave);\n    } catch (e) {\n      console.warn(`Could not load Aliases from save`);\n      loadAliases(\"\");\n    }\n  } else {\n    console.warn(`Save file did not contain an Aliases property`);\n    loadAliases(\"\");\n  }\n  if (saveObj.hasOwnProperty(\"GlobalAliasesSave\")) {\n    try {\n      loadGlobalAliases(saveObj.GlobalAliasesSave);\n    } catch (e) {\n      console.warn(`Could not load GlobalAliases from save`);\n      loadGlobalAliases(\"\");\n    }\n  } else {\n    console.warn(`Save file did not contain a GlobalAliases property`);\n    loadGlobalAliases(\"\");\n  }\n  if (saveObj.hasOwnProperty(\"MessagesSave\")) {\n    try {\n      loadMessages(saveObj.MessagesSave);\n    } catch (e) {\n      console.warn(`Could not load Messages from save`);\n      initMessages();\n    }\n  } else {\n    console.warn(`Save file did not contain a Messages property`);\n    initMessages();\n  }\n  if (saveObj.hasOwnProperty(\"StockMarketSave\")) {\n    try {\n      loadStockMarket(saveObj.StockMarketSave);\n    } catch (e) {\n      loadStockMarket(\"\");\n    }\n  } else {\n    loadStockMarket(\"\");\n  }\n  if (saveObj.hasOwnProperty(\"SettingsSave\")) {\n    try {\n      Settings.load(saveObj.SettingsSave);\n    } catch (e) {\n      console.error(\"ERROR: Failed to parse Settings. Re-initing default values\");\n      Settings.init();\n    }\n  } else {\n    Settings.init();\n  }\n  if (saveObj.hasOwnProperty(\"LastExportBonus\")) {\n    try {\n      ExportBonus.setLastExportBonus(JSON.parse(saveObj.LastExportBonus));\n    } catch (err) {\n      ExportBonus.setLastExportBonus(new Date().getTime());\n      console.error(\"ERROR: Failed to parse last export bonus Settings \" + err);\n    }\n  }\n  if (saveObj.hasOwnProperty(\"VersionSave\")) {\n    try {\n      const ver = JSON.parse(saveObj.VersionSave, Reviver);\n      evaluateVersionCompatibility(ver);\n\n      if (window.location.href.toLowerCase().includes(\"bitburner-beta\")) {\n        // Beta branch, always show changes\n        createBetaUpdateText();\n      } else if (ver != CONSTANTS.Version) {\n        createNewUpdateText();\n      }\n    } catch (e) {\n      createNewUpdateText();\n    }\n  } else {\n    createNewUpdateText();\n  }\n  if (Player.inGang() && saveObj.hasOwnProperty(\"AllGangsSave\")) {\n    try {\n      loadAllGangs(saveObj.AllGangsSave);\n    } catch (e) {\n      console.error(\"ERROR: Failed to parse AllGangsSave: \" + e);\n    }\n  }\n\n  return true;\n}\n\nfunction createNewUpdateText(): void {\n  dialogBoxCreate(\n    \"New update!<br>\" +\n      \"Please report any bugs/issues through the github repository \" +\n      \"or the Bitburner subreddit (reddit.com/r/bitburner).<br><br>\" +\n      CONSTANTS.LatestUpdate,\n  );\n}\n\nfunction createBetaUpdateText(): void {\n  dialogBoxCreate(\n    \"You are playing on the beta environment! This branch of the game \" +\n      \"features the latest developments in the game. This version may be unstable.<br>\" +\n      \"Please report any bugs/issues through the github repository (https://github.com/danielyxie/bitburner/issues) \" +\n      \"or the Bitburner subreddit (reddit.com/r/bitburner).<br><br>\" +\n      CONSTANTS.LatestUpdate,\n  );\n}\n\nReviver.constructors.BitburnerSaveObject = BitburnerSaveObject;\n\nexport { saveObject, loadGame };\n\nconst saveObject = new BitburnerSaveObject();\n","/**\n * Sleeves are bodies that contain the player's cloned consciousness.\n * The player can use these bodies to perform different tasks synchronously.\n *\n * Each sleeve is its own individual, meaning it has its own stats/exp\n *\n * Sleeves are unlocked in BitNode-10.\n */\nimport { SleeveTaskType } from \"./SleeveTaskTypesEnum\";\n\nimport { IPlayer } from \"../IPlayer\";\nimport { Person, ITaskTracker, createTaskTracker } from \"../Person\";\n\nimport { Augmentation } from \"../../Augmentation/Augmentation\";\n\nimport { BitNodeMultipliers } from \"../../BitNode/BitNodeMultipliers\";\n\nimport { Crime } from \"../../Crime/Crime\";\nimport { Crimes } from \"../../Crime/Crimes\";\n\nimport { Companies } from \"../../Company/Companies\";\nimport { Company } from \"../../Company/Company\";\nimport { CompanyPosition } from \"../../Company/CompanyPosition\";\nimport { CompanyPositions } from \"../../Company/CompanyPositions\";\n\nimport { CONSTANTS } from \"../../Constants\";\n\nimport { Faction } from \"../../Faction/Faction\";\nimport { Factions } from \"../../Faction/Factions\";\nimport { FactionWorkType } from \"../../Faction/FactionWorkTypeEnum\";\n\nimport { CityName } from \"../../Locations/data/CityNames\";\nimport { LocationName } from \"../../Locations/data/LocationNames\";\n\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../../utils/JSONReviver\";\n\nexport class Sleeve extends Person {\n  /**\n   * Stores the name of the class that the player is currently taking\n   */\n  className = \"\";\n\n  /**\n   * Stores the type of crime the sleeve is currently attempting\n   * Must match the name of a Crime object\n   */\n  crimeType = \"\";\n\n  /**\n   * Enum value for current task\n   */\n  currentTask: SleeveTaskType = SleeveTaskType.Idle;\n\n  /**\n   * Contains details about the sleeve's current task. The info stored\n   * in this depends on the task type\n   *\n   * Faction/Company Work: Name of Faction/Company\n   * Crime: Money earned if successful\n   * Class/Gym: Name of university/gym\n   */\n  currentTaskLocation = \"\";\n\n  /**\n   * Maximum amount of time (in milliseconds) that can  be spent on current task.\n   */\n  currentTaskMaxTime = 0;\n\n  /**\n   * Milliseconds spent on current task\n   */\n  currentTaskTime = 0;\n\n  /**\n   * Keeps track of experience earned for other sleeves\n   */\n  earningsForSleeves: ITaskTracker = createTaskTracker();\n\n  /**\n   * Keeps track of experience + money earned for player\n   */\n  earningsForPlayer: ITaskTracker = createTaskTracker();\n\n  /**\n   * Keeps track of experienced earned in the current task/action\n   */\n  earningsForTask: ITaskTracker = createTaskTracker();\n\n  /**\n   * Keeps track of what type of work sleeve is doing for faction, if applicable\n   */\n  factionWorkType: FactionWorkType = FactionWorkType.None;\n\n  /**\n   * Records experience gain rate for the current task\n   */\n  gainRatesForTask: ITaskTracker = createTaskTracker();\n\n  /**\n   * String that stores what stat the sleeve is training at the gym\n   */\n  gymStatType = \"\";\n\n  /**\n   * Keeps track of events/notifications for this sleeve\n   */\n  logs: string[] = [];\n\n  /**\n   * Clone retains 'memory' synchronization (and maybe exp?) upon prestige/installing Augs\n   */\n  memory = 1;\n\n  /**\n   * Sleeve shock. Number between 0 and 100\n   * Trauma/shock that comes with being in a sleeve. Experience earned\n   * is multipled by shock%. This gets applied before synchronization\n   *\n   * Reputation earned is also multiplied by shock%\n   */\n  shock = 1;\n\n  /**\n   * Stored number of game \"loop\" cycles\n   */\n  storedCycles = 0;\n\n  /**\n   * Synchronization. Number between 0 and 100\n   * When experience is earned  by sleeve, both the player and the sleeve get\n   * sync% of the experience earned. Other sleeves get sync^2% of exp\n   */\n  sync = 1;\n\n  constructor(p: IPlayer | null = null) {\n    super();\n    if (p != null) {\n      this.shockRecovery(p);\n    }\n  }\n\n  /**\n   * Commit crimes\n   */\n  commitCrime(p: IPlayer, crimeKey: string): boolean {\n    const crime: Crime | null = Crimes[crimeKey];\n    if (!(crime instanceof Crime)) {\n      return false;\n    }\n\n    if (this.currentTask !== SleeveTaskType.Idle) {\n      this.finishTask(p);\n    } else {\n      this.resetTaskStatus();\n    }\n\n    this.gainRatesForTask.hack = crime.hacking_exp * this.hacking_exp_mult * BitNodeMultipliers.CrimeExpGain;\n    this.gainRatesForTask.str = crime.strength_exp * this.strength_exp_mult * BitNodeMultipliers.CrimeExpGain;\n    this.gainRatesForTask.def = crime.defense_exp * this.defense_exp_mult * BitNodeMultipliers.CrimeExpGain;\n    this.gainRatesForTask.dex = crime.dexterity_exp * this.dexterity_exp_mult * BitNodeMultipliers.CrimeExpGain;\n    this.gainRatesForTask.agi = crime.agility_exp * this.agility_exp_mult * BitNodeMultipliers.CrimeExpGain;\n    this.gainRatesForTask.cha = crime.charisma_exp * this.charisma_exp_mult * BitNodeMultipliers.CrimeExpGain;\n    this.gainRatesForTask.money = crime.money * this.crime_money_mult * BitNodeMultipliers.CrimeMoney;\n\n    this.currentTaskLocation = String(this.gainRatesForTask.money);\n\n    this.crimeType = crimeKey;\n    this.currentTaskMaxTime = crime.time;\n    this.currentTask = SleeveTaskType.Crime;\n    return true;\n  }\n\n  /**\n   * Called to stop the current task\n   */\n  finishTask(p: IPlayer): ITaskTracker {\n    let retValue: ITaskTracker = createTaskTracker(); // Amount of exp to be gained by other sleeves\n\n    if (this.currentTask === SleeveTaskType.Crime) {\n      // For crimes, all experience and money is gained at the end\n      if (this.currentTaskTime >= this.currentTaskMaxTime) {\n        const crime: Crime | null = Crimes[this.crimeType];\n        if (!(crime instanceof Crime)) {\n          console.error(`Invalid data stored in sleeve.crimeType: ${this.crimeType}`);\n          this.resetTaskStatus();\n          return retValue;\n        }\n        if (Math.random() < crime.successRate(this)) {\n          // Success\n          const successGainRates: ITaskTracker = createTaskTracker();\n\n          const keysForIteration: (keyof ITaskTracker)[] = Object.keys(successGainRates) as (keyof ITaskTracker)[];\n          for (let i = 0; i < keysForIteration.length; ++i) {\n            const key = keysForIteration[i];\n            successGainRates[key] = this.gainRatesForTask[key] * 2;\n          }\n          retValue = this.gainExperience(p, successGainRates);\n          this.gainMoney(p, this.gainRatesForTask);\n\n          p.karma -= crime.karma * (this.sync / 100);\n        } else {\n          retValue = this.gainExperience(p, this.gainRatesForTask);\n        }\n\n        // Do not reset task to IDLE\n        this.currentTaskTime = 0;\n        return retValue;\n      }\n    } else {\n      // For other crimes... I dont think anything else needs to be done\n    }\n\n    this.resetTaskStatus();\n\n    return retValue;\n  }\n\n  /**\n   * Earn experience for any stats (supports multiple)\n   * This function also handles experience propogating to Player and other sleeves\n   */\n  gainExperience(p: IPlayer, exp: ITaskTracker, numCycles = 1, fromOtherSleeve = false): ITaskTracker {\n    // If the experience is coming from another sleeve, it is not multiplied by anything.\n    // Also the player does not earn anything\n    if (fromOtherSleeve) {\n      if (exp.hack > 0) {\n        this.hacking_exp += exp.hack;\n      }\n\n      if (exp.str > 0) {\n        this.strength_exp += exp.str;\n      }\n\n      if (exp.def > 0) {\n        this.defense_exp += exp.def;\n      }\n\n      if (exp.dex > 0) {\n        this.dexterity_exp += exp.dex;\n      }\n\n      if (exp.agi > 0) {\n        this.agility_exp += exp.agi;\n      }\n\n      if (exp.cha > 0) {\n        this.charisma_exp += exp.cha;\n      }\n\n      return createTaskTracker();\n    }\n\n    // Experience is first multiplied by shock. Then 'synchronization'\n    // is accounted for\n\n    const multFac = (this.shock / 100) * (this.sync / 100) * numCycles;\n    const pHackExp = exp.hack * multFac;\n    const pStrExp = exp.str * multFac;\n    const pDefExp = exp.def * multFac;\n    const pDexExp = exp.dex * multFac;\n    const pAgiExp = exp.agi * multFac;\n    const pChaExp = exp.cha * multFac;\n\n    // Experience is gained by both this sleeve and player\n    if (pHackExp > 0) {\n      this.hacking_exp += pHackExp;\n      p.gainHackingExp(pHackExp);\n      this.earningsForPlayer.hack += pHackExp;\n      this.earningsForTask.hack += pHackExp;\n    }\n\n    if (pStrExp > 0) {\n      this.strength_exp += pStrExp;\n      p.gainStrengthExp(pStrExp);\n      this.earningsForPlayer.str += pStrExp;\n      this.earningsForTask.str += pStrExp;\n    }\n\n    if (pDefExp > 0) {\n      this.defense_exp += pDefExp;\n      p.gainDefenseExp(pDefExp);\n      this.earningsForPlayer.def += pDefExp;\n      this.earningsForTask.def += pDefExp;\n    }\n\n    if (pDexExp > 0) {\n      this.dexterity_exp += pDexExp;\n      p.gainDexterityExp(pDexExp);\n      this.earningsForPlayer.dex += pDexExp;\n      this.earningsForTask.dex += pDexExp;\n    }\n\n    if (pAgiExp > 0) {\n      this.agility_exp += pAgiExp;\n      p.gainAgilityExp(pAgiExp);\n      this.earningsForPlayer.agi += pAgiExp;\n      this.earningsForTask.agi += pAgiExp;\n    }\n\n    if (pChaExp > 0) {\n      this.charisma_exp += pChaExp;\n      p.gainCharismaExp(pChaExp);\n      this.earningsForPlayer.cha += pChaExp;\n      this.earningsForTask.cha += pChaExp;\n    }\n\n    // Record earnings for other sleeves\n    this.earningsForSleeves.hack += pHackExp * (this.sync / 100);\n    this.earningsForSleeves.str += pStrExp * (this.sync / 100);\n    this.earningsForSleeves.def += pDefExp * (this.sync / 100);\n    this.earningsForSleeves.dex += pDexExp * (this.sync / 100);\n    this.earningsForSleeves.agi += pAgiExp * (this.sync / 100);\n    this.earningsForSleeves.cha += pChaExp * (this.sync / 100);\n\n    // Return the experience to be gained by other sleeves\n    return {\n      hack: pHackExp * (this.sync / 100),\n      str: pStrExp * (this.sync / 100),\n      def: pDefExp * (this.sync / 100),\n      dex: pDexExp * (this.sync / 100),\n      agi: pAgiExp * (this.sync / 100),\n      cha: pChaExp * (this.sync / 100),\n      money: 0,\n    };\n  }\n\n  /**\n   * Earn money for player\n   */\n  gainMoney(p: IPlayer, task: ITaskTracker, numCycles = 1): void {\n    const gain: number = task.money * numCycles;\n    this.earningsForTask.money += gain;\n    this.earningsForPlayer.money += gain;\n    p.gainMoney(gain);\n    p.recordMoneySource(gain, \"sleeves\");\n  }\n\n  /**\n   * Returns the cost of upgrading this sleeve's memory by a certain amount\n   */\n  getMemoryUpgradeCost(n: number): number {\n    const amt = Math.round(n);\n    if (amt < 0) {\n      return 0;\n    }\n\n    if (this.memory + amt > 100) {\n      return this.getMemoryUpgradeCost(100 - this.memory);\n    }\n\n    const mult = 1.02;\n    const baseCost = 1e12;\n    let currCost = 0;\n    let currMemory = this.memory - 1;\n    for (let i = 0; i < n; ++i) {\n      currCost += Math.pow(mult, currMemory);\n      ++currMemory;\n    }\n\n    return currCost * baseCost;\n  }\n\n  /**\n   * Gets reputation gain for the current task\n   * Only applicable when working for company or faction\n   */\n  getRepGain(p: IPlayer): number {\n    if (this.currentTask === SleeveTaskType.Faction) {\n      let favorMult = 1;\n      const fac: Faction | null = Factions[this.currentTaskLocation];\n      if (fac != null) {\n        favorMult = 1 + fac.favor / 100;\n      }\n\n      switch (this.factionWorkType) {\n        case FactionWorkType.Hacking:\n          return this.getFactionHackingWorkRepGain() * (this.shock / 100) * favorMult;\n        case FactionWorkType.Field:\n          return this.getFactionFieldWorkRepGain() * (this.shock / 100) * favorMult;\n        case FactionWorkType.Security:\n          return this.getFactionSecurityWorkRepGain() * (this.shock / 100) * favorMult;\n        default:\n          console.warn(`Invalid Sleeve.factionWorkType property in Sleeve.getRepGain(): ${this.factionWorkType}`);\n          return 0;\n      }\n    } else if (this.currentTask === SleeveTaskType.Company) {\n      const companyName: string = this.currentTaskLocation;\n      const company: Company | null = Companies[companyName];\n      if (company == null) {\n        console.error(`Invalid company found when trying to calculate rep gain: ${companyName}`);\n        return 0;\n      }\n\n      const companyPosition: CompanyPosition | null = CompanyPositions[p.jobs[companyName]];\n      if (companyPosition == null) {\n        console.error(`Invalid company position name found when trying to calculate rep gain: ${p.jobs[companyName]}`);\n        return 0;\n      }\n\n      const jobPerformance: number = companyPosition.calculateJobPerformance(\n        this.hacking_skill,\n        this.strength,\n        this.defense,\n        this.dexterity,\n        this.agility,\n        this.charisma,\n      );\n      const favorMult = 1 + company.favor / 100;\n\n      return jobPerformance * this.company_rep_mult * favorMult;\n    } else {\n      console.warn(`Sleeve.getRepGain() called for invalid task type: ${this.currentTask}`);\n      return 0;\n    }\n  }\n\n  installAugmentation(aug: Augmentation): void {\n    this.hacking_exp = 0;\n    this.strength_exp = 0;\n    this.defense_exp = 0;\n    this.dexterity_exp = 0;\n    this.agility_exp = 0;\n    this.charisma_exp = 0;\n    this.applyAugmentation(aug);\n    this.augmentations.push({ name: aug.name, level: 1 });\n    this.updateStatLevels();\n  }\n\n  log(entry: string): void {\n    const MaxLogSize = 50;\n    this.logs.push(entry);\n    if (this.logs.length > MaxLogSize) {\n      this.logs.shift();\n    }\n  }\n\n  /**\n   * Called on every sleeve for a Source File prestige\n   */\n  prestige(p: IPlayer): void {\n    // Reset exp\n    this.hacking_exp = 0;\n    this.strength_exp = 0;\n    this.defense_exp = 0;\n    this.dexterity_exp = 0;\n    this.agility_exp = 0;\n    this.charisma_exp = 0;\n\n    // Reset task-related stuff\n    this.resetTaskStatus();\n    this.earningsForSleeves = createTaskTracker();\n    this.earningsForPlayer = createTaskTracker();\n    this.shockRecovery(p);\n\n    // Reset augs and multipliers\n    this.augmentations = [];\n    this.resetMultipliers();\n\n    // Reset sleeve-related stats\n    this.shock = 1;\n    this.storedCycles = 0;\n    this.sync = Math.max(this.memory, 1);\n\n    this.logs = [];\n  }\n\n  /**\n   * Process loop\n   * Returns an object containing the amount of experience that should be\n   * transferred to all other sleeves\n   */\n  process(p: IPlayer, numCycles = 1): ITaskTracker | null {\n    // Only process once every second (5 cycles)\n    const CyclesPerSecond = 1000 / CONSTANTS.MilliPerCycle;\n    this.storedCycles += numCycles;\n    if (this.storedCycles < CyclesPerSecond) {\n      return null;\n    }\n\n    let time = this.storedCycles * CONSTANTS.MilliPerCycle;\n    let cyclesUsed = this.storedCycles;\n    cyclesUsed = Math.min(cyclesUsed, 15);\n    if (this.currentTaskMaxTime !== 0 && this.currentTaskTime + time > this.currentTaskMaxTime) {\n      time = this.currentTaskMaxTime - this.currentTaskTime;\n      cyclesUsed = Math.floor(time / CONSTANTS.MilliPerCycle);\n\n      if (time < 0 || cyclesUsed < 0) {\n        console.warn(`Sleeve.process() calculated negative cycle usage`);\n        time = 0;\n        cyclesUsed = 0;\n      }\n    }\n    this.currentTaskTime += time;\n\n    // Shock gradually goes towards 100\n    this.shock = Math.min(100, this.shock + 0.0001 * cyclesUsed);\n\n    let retValue: ITaskTracker = createTaskTracker();\n    switch (this.currentTask) {\n      case SleeveTaskType.Idle:\n        break;\n      case SleeveTaskType.Class:\n      case SleeveTaskType.Gym:\n        this.updateTaskGainRates(p);\n        retValue = this.gainExperience(p, this.gainRatesForTask, cyclesUsed);\n        this.gainMoney(p, this.gainRatesForTask, cyclesUsed);\n        break;\n      case SleeveTaskType.Faction: {\n        retValue = this.gainExperience(p, this.gainRatesForTask, cyclesUsed);\n        this.gainMoney(p, this.gainRatesForTask, cyclesUsed);\n\n        // Gain faction reputation\n        const fac: Faction = Factions[this.currentTaskLocation];\n        if (!(fac instanceof Faction)) {\n          console.error(`Invalid faction for Sleeve task: ${this.currentTaskLocation}`);\n          break;\n        }\n\n        fac.playerReputation += this.getRepGain(p) * cyclesUsed;\n        break;\n      }\n      case SleeveTaskType.Company: {\n        retValue = this.gainExperience(p, this.gainRatesForTask, cyclesUsed);\n        this.gainMoney(p, this.gainRatesForTask, cyclesUsed);\n\n        const company: Company = Companies[this.currentTaskLocation];\n        if (!(company instanceof Company)) {\n          console.error(`Invalid company for Sleeve task: ${this.currentTaskLocation}`);\n          break;\n        }\n\n        company.playerReputation += this.getRepGain(p) * cyclesUsed;\n        break;\n      }\n      case SleeveTaskType.Recovery:\n        this.shock = Math.min(100, this.shock + 0.0002 * cyclesUsed);\n        break;\n      case SleeveTaskType.Synchro:\n        this.sync = Math.min(100, this.sync + p.getIntelligenceBonus(0.5) * 0.0002 * cyclesUsed);\n        if (this.sync >= 100) this.resetTaskStatus();\n        break;\n      default:\n        break;\n    }\n\n    if (this.currentTaskMaxTime !== 0 && this.currentTaskTime >= this.currentTaskMaxTime) {\n      if (this.currentTask === SleeveTaskType.Crime) {\n        retValue = this.finishTask(p);\n      } else {\n        this.finishTask(p);\n      }\n    }\n\n    this.updateStatLevels();\n\n    this.storedCycles -= cyclesUsed;\n\n    return retValue;\n  }\n\n  /**\n   * Resets all parameters used to keep information about the current task\n   */\n  resetTaskStatus(): void {\n    this.earningsForTask = createTaskTracker();\n    this.gainRatesForTask = createTaskTracker();\n    this.currentTask = SleeveTaskType.Idle;\n    this.currentTaskTime = 0;\n    this.currentTaskMaxTime = 0;\n    this.factionWorkType = FactionWorkType.None;\n    this.crimeType = \"\";\n    this.currentTaskLocation = \"\";\n    this.gymStatType = \"\";\n    this.className = \"\";\n  }\n\n  shockRecovery(p: IPlayer): boolean {\n    if (this.currentTask !== SleeveTaskType.Idle) {\n      this.finishTask(p);\n    } else {\n      this.resetTaskStatus();\n    }\n\n    this.currentTask = SleeveTaskType.Recovery;\n    return true;\n  }\n\n  synchronize(p: IPlayer): boolean {\n    if (this.currentTask !== SleeveTaskType.Idle) {\n      this.finishTask(p);\n    } else {\n      this.resetTaskStatus();\n    }\n\n    this.currentTask = SleeveTaskType.Synchro;\n    return true;\n  }\n\n  /**\n   * Take a course at a university\n   */\n  takeUniversityCourse(p: IPlayer, universityName: string, className: string): boolean {\n    if (this.currentTask !== SleeveTaskType.Idle) {\n      this.finishTask(p);\n    } else {\n      this.resetTaskStatus();\n    }\n\n    // Set exp/money multipliers based on which university.\n    // Also check that the sleeve is in the right city\n    let costMult = 1;\n    switch (universityName.toLowerCase()) {\n      case LocationName.AevumSummitUniversity.toLowerCase():\n        if (this.city !== CityName.Aevum) {\n          return false;\n        }\n        this.currentTaskLocation = LocationName.AevumSummitUniversity;\n        costMult = 4;\n        break;\n      case LocationName.Sector12RothmanUniversity.toLowerCase():\n        if (this.city !== CityName.Sector12) {\n          return false;\n        }\n        this.currentTaskLocation = LocationName.Sector12RothmanUniversity;\n        costMult = 3;\n        break;\n      case LocationName.VolhavenZBInstituteOfTechnology.toLowerCase():\n        if (this.city !== CityName.Volhaven) {\n          return false;\n        }\n        this.currentTaskLocation = LocationName.VolhavenZBInstituteOfTechnology;\n        costMult = 5;\n        break;\n      default:\n        return false;\n    }\n\n    // Set experience/money gains based on class\n    switch (className.toLowerCase()) {\n      case \"study computer science\":\n        break;\n      case \"data structures\":\n        this.gainRatesForTask.money = -1 * (CONSTANTS.ClassDataStructuresBaseCost * costMult);\n        break;\n      case \"networks\":\n        this.gainRatesForTask.money = -1 * (CONSTANTS.ClassNetworksBaseCost * costMult);\n        break;\n      case \"algorithms\":\n        this.gainRatesForTask.money = -1 * (CONSTANTS.ClassAlgorithmsBaseCost * costMult);\n        break;\n      case \"management\":\n        this.gainRatesForTask.money = -1 * (CONSTANTS.ClassManagementBaseCost * costMult);\n        break;\n      case \"leadership\":\n        this.gainRatesForTask.money = -1 * (CONSTANTS.ClassLeadershipBaseCost * costMult);\n        break;\n      default:\n        return false;\n    }\n\n    this.className = className;\n    this.currentTask = SleeveTaskType.Class;\n    return true;\n  }\n\n  /**\n   * Travel to another City. Costs money from player\n   */\n  travel(p: IPlayer, newCity: CityName): boolean {\n    p.loseMoney(CONSTANTS.TravelCost);\n    this.city = newCity;\n\n    return true;\n  }\n\n  tryBuyAugmentation(p: IPlayer, aug: Augmentation): boolean {\n    if (!p.canAfford(aug.startingCost)) {\n      return false;\n    }\n\n    // Verify that this sleeve does not already have that augmentation.\n    if (this.augmentations.some((a) => a.name === aug.name)) {\n      return false;\n    }\n\n    p.loseMoney(aug.startingCost);\n    this.installAugmentation(aug);\n    return true;\n  }\n\n  updateTaskGainRates(p: IPlayer): void {\n    if (this.currentTask === SleeveTaskType.Class) {\n      let expMult = 1;\n      switch (this.currentTaskLocation.toLowerCase()) {\n        case LocationName.AevumSummitUniversity.toLowerCase():\n          expMult = 3;\n          break;\n        case LocationName.Sector12RothmanUniversity.toLowerCase():\n          expMult = 2;\n          break;\n        case LocationName.VolhavenZBInstituteOfTechnology.toLowerCase():\n          expMult = 4;\n          break;\n        default:\n          return;\n      }\n\n      const totalExpMult = expMult * p.hashManager.getStudyMult();\n      switch (this.className.toLowerCase()) {\n        case \"study computer science\":\n          this.gainRatesForTask.hack =\n            CONSTANTS.ClassStudyComputerScienceBaseExp * totalExpMult * this.hacking_exp_mult;\n          break;\n        case \"data structures\":\n          this.gainRatesForTask.hack = CONSTANTS.ClassDataStructuresBaseExp * totalExpMult * this.hacking_exp_mult;\n          break;\n        case \"networks\":\n          this.gainRatesForTask.hack = CONSTANTS.ClassNetworksBaseExp * totalExpMult * this.hacking_exp_mult;\n          break;\n        case \"algorithms\":\n          this.gainRatesForTask.hack = CONSTANTS.ClassAlgorithmsBaseExp * totalExpMult * this.hacking_exp_mult;\n          break;\n        case \"management\":\n          this.gainRatesForTask.cha = CONSTANTS.ClassManagementBaseExp * totalExpMult * this.charisma_exp_mult;\n          break;\n        case \"leadership\":\n          this.gainRatesForTask.cha = CONSTANTS.ClassLeadershipBaseExp * totalExpMult * this.charisma_exp_mult;\n          break;\n        default:\n          break;\n      }\n\n      return;\n    }\n\n    if (this.currentTask === SleeveTaskType.Gym) {\n      // Get gym exp multiplier\n      let expMult = 1;\n      switch (this.currentTaskLocation.toLowerCase()) {\n        case LocationName.AevumCrushFitnessGym.toLowerCase():\n          expMult = 2;\n          break;\n        case LocationName.AevumSnapFitnessGym.toLowerCase():\n          expMult = 5;\n          break;\n        case LocationName.Sector12IronGym.toLowerCase():\n          expMult = 1;\n          break;\n        case LocationName.Sector12PowerhouseGym.toLowerCase():\n          expMult = 10;\n          break;\n        case LocationName.VolhavenMilleniumFitnessGym:\n          expMult = 4;\n          break;\n        default:\n          return;\n      }\n\n      // Set stat gain rate\n      const baseGymExp = 1;\n      const totalExpMultiplier = p.hashManager.getTrainingMult() * expMult;\n      const sanitizedStat: string = this.gymStatType.toLowerCase();\n      if (sanitizedStat.includes(\"str\")) {\n        this.gainRatesForTask.str = baseGymExp * totalExpMultiplier * this.strength_exp_mult;\n      } else if (sanitizedStat.includes(\"def\")) {\n        this.gainRatesForTask.def = baseGymExp * totalExpMultiplier * this.defense_exp_mult;\n      } else if (sanitizedStat.includes(\"dex\")) {\n        this.gainRatesForTask.dex = baseGymExp * totalExpMultiplier * this.dexterity_exp_mult;\n      } else if (sanitizedStat.includes(\"agi\")) {\n        this.gainRatesForTask.agi = baseGymExp * totalExpMultiplier * this.agility_exp_mult;\n      }\n\n      return;\n    }\n\n    console.warn(`Sleeve.updateTaskGainRates() called for unexpected task type ${this.currentTask}`);\n  }\n\n  upgradeMemory(n: number): void {\n    if (n < 0) {\n      console.warn(`Sleeve.upgradeMemory() called with negative value: ${n}`);\n      return;\n    }\n\n    this.memory = Math.min(100, Math.round(this.memory + n));\n  }\n\n  /**\n   * Start work for one of the player's companies\n   * Returns boolean indicating success\n   */\n  workForCompany(p: IPlayer, companyName: string): boolean {\n    if (!(Companies[companyName] instanceof Company) || p.jobs[companyName] == null) {\n      return false;\n    }\n\n    if (this.currentTask !== SleeveTaskType.Idle) {\n      this.finishTask(p);\n    } else {\n      this.resetTaskStatus();\n    }\n\n    const company: Company | null = Companies[companyName];\n    const companyPosition: CompanyPosition | null = CompanyPositions[p.jobs[companyName]];\n    if (company == null) {\n      return false;\n    }\n    if (companyPosition == null) {\n      return false;\n    }\n    this.gainRatesForTask.money =\n      companyPosition.baseSalary *\n      company.salaryMultiplier *\n      this.work_money_mult *\n      BitNodeMultipliers.CompanyWorkMoney;\n    this.gainRatesForTask.hack =\n      companyPosition.hackingExpGain *\n      company.expMultiplier *\n      this.hacking_exp_mult *\n      BitNodeMultipliers.CompanyWorkExpGain;\n    this.gainRatesForTask.str =\n      companyPosition.strengthExpGain *\n      company.expMultiplier *\n      this.strength_exp_mult *\n      BitNodeMultipliers.CompanyWorkExpGain;\n    this.gainRatesForTask.def =\n      companyPosition.defenseExpGain *\n      company.expMultiplier *\n      this.defense_exp_mult *\n      BitNodeMultipliers.CompanyWorkExpGain;\n    this.gainRatesForTask.dex =\n      companyPosition.dexterityExpGain *\n      company.expMultiplier *\n      this.dexterity_exp_mult *\n      BitNodeMultipliers.CompanyWorkExpGain;\n    this.gainRatesForTask.agi =\n      companyPosition.agilityExpGain *\n      company.expMultiplier *\n      this.agility_exp_mult *\n      BitNodeMultipliers.CompanyWorkExpGain;\n    this.gainRatesForTask.cha =\n      companyPosition.charismaExpGain *\n      company.expMultiplier *\n      this.charisma_exp_mult *\n      BitNodeMultipliers.CompanyWorkExpGain;\n\n    this.currentTaskLocation = companyName;\n    this.currentTask = SleeveTaskType.Company;\n    this.currentTaskMaxTime = CONSTANTS.MillisecondsPer8Hours;\n\n    return true;\n  }\n\n  /**\n   * Start work for one of the player's factions\n   * Returns boolean indicating success\n   */\n  workForFaction(p: IPlayer, factionName: string, workType: string): boolean {\n    if (factionName === \"\") {\n      return false;\n    }\n    if (!(Factions[factionName] instanceof Faction) || !p.factions.includes(factionName)) {\n      return false;\n    }\n\n    if (this.currentTask !== SleeveTaskType.Idle) {\n      this.finishTask(p);\n    } else {\n      this.resetTaskStatus();\n    }\n\n    const factionInfo = Factions[factionName].getInfo();\n\n    // Set type of work (hacking/field/security), and the experience gains\n    const sanitizedWorkType: string = workType.toLowerCase();\n    if (sanitizedWorkType.includes(\"hack\")) {\n      if (!factionInfo.offerHackingWork) {\n        return false;\n      }\n      this.factionWorkType = FactionWorkType.Hacking;\n      this.gainRatesForTask.hack = 0.15 * this.hacking_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n    } else if (sanitizedWorkType.includes(\"field\")) {\n      if (!factionInfo.offerFieldWork) {\n        return false;\n      }\n      this.factionWorkType = FactionWorkType.Field;\n      this.gainRatesForTask.hack = 0.1 * this.hacking_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n      this.gainRatesForTask.str = 0.1 * this.strength_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n      this.gainRatesForTask.def = 0.1 * this.defense_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n      this.gainRatesForTask.dex = 0.1 * this.dexterity_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n      this.gainRatesForTask.agi = 0.1 * this.agility_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n      this.gainRatesForTask.cha = 0.1 * this.charisma_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n    } else if (sanitizedWorkType.includes(\"security\")) {\n      if (!factionInfo.offerSecurityWork) {\n        return false;\n      }\n      this.factionWorkType = FactionWorkType.Security;\n      this.gainRatesForTask.hack = 0.1 * this.hacking_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n      this.gainRatesForTask.str = 0.15 * this.strength_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n      this.gainRatesForTask.def = 0.15 * this.defense_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n      this.gainRatesForTask.dex = 0.15 * this.dexterity_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n      this.gainRatesForTask.agi = 0.15 * this.agility_exp_mult * BitNodeMultipliers.FactionWorkExpGain;\n    } else {\n      return false;\n    }\n\n    this.currentTaskLocation = factionName;\n    this.currentTask = SleeveTaskType.Faction;\n    this.currentTaskMaxTime = CONSTANTS.MillisecondsPer20Hours;\n\n    return true;\n  }\n\n  /**\n   * Begin a gym workout task\n   */\n  workoutAtGym(p: IPlayer, gymName: string, stat: string): boolean {\n    if (this.currentTask !== SleeveTaskType.Idle) {\n      this.finishTask(p);\n    } else {\n      this.resetTaskStatus();\n    }\n\n    // Set exp/money multipliers based on which university.\n    // Also check that the sleeve is in the right city\n    let costMult = 1;\n    switch (gymName.toLowerCase()) {\n      case LocationName.AevumCrushFitnessGym.toLowerCase():\n        if (this.city != CityName.Aevum) {\n          return false;\n        }\n        this.currentTaskLocation = LocationName.AevumCrushFitnessGym;\n        costMult = 3;\n        break;\n      case LocationName.AevumSnapFitnessGym.toLowerCase():\n        if (this.city != CityName.Aevum) {\n          return false;\n        }\n        this.currentTaskLocation = LocationName.AevumSnapFitnessGym;\n        costMult = 10;\n        break;\n      case LocationName.Sector12IronGym.toLowerCase():\n        if (this.city != CityName.Sector12) {\n          return false;\n        }\n        this.currentTaskLocation = LocationName.Sector12IronGym;\n        costMult = 1;\n        break;\n      case LocationName.Sector12PowerhouseGym.toLowerCase():\n        if (this.city != CityName.Sector12) {\n          return false;\n        }\n        this.currentTaskLocation = LocationName.Sector12PowerhouseGym;\n        costMult = 20;\n        break;\n      case LocationName.VolhavenMilleniumFitnessGym.toLowerCase():\n        if (this.city != CityName.Volhaven) {\n          return false;\n        }\n        this.currentTaskLocation = LocationName.VolhavenMilleniumFitnessGym;\n        costMult = 7;\n        break;\n      default:\n        return false;\n    }\n\n    // Set experience/money gains based on class\n    const sanitizedStat: string = stat.toLowerCase();\n\n    // Set cost\n    this.gainRatesForTask.money = -1 * (CONSTANTS.ClassGymBaseCost * costMult);\n\n    // Validate \"stat\" argument\n    if (\n      !sanitizedStat.includes(\"str\") &&\n      !sanitizedStat.includes(\"def\") &&\n      !sanitizedStat.includes(\"dex\") &&\n      !sanitizedStat.includes(\"agi\")\n    ) {\n      return false;\n    }\n\n    this.gymStatType = stat;\n    this.currentTask = SleeveTaskType.Gym;\n\n    return true;\n  }\n\n  /**\n   * Serialize the current object to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"Sleeve\", this);\n  }\n\n  /**\n   * Initiatizes a Sleeve object from a JSON save state.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Sleeve {\n    return Generic_fromJSON(Sleeve, value.data);\n  }\n}\n\nReviver.constructors.Sleeve = Sleeve;\n","import { TextFile } from \"../TextFile\";\nimport { Script } from \"../Script/Script\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { IRouter } from \"../ui/Router\";\nimport { Settings } from \"../Settings/Settings\";\nimport { getTimestamp } from \"../utils/helpers/getTimestamp\";\n\nexport class Output {\n  text: string;\n  color: \"inherit\" | \"initial\" | \"primary\" | \"secondary\" | \"error\" | \"textPrimary\" | \"textSecondary\" | undefined;\n  constructor(\n    text: string,\n    color: \"inherit\" | \"initial\" | \"primary\" | \"secondary\" | \"error\" | \"textPrimary\" | \"textSecondary\" | undefined,\n  ) {\n    if (Settings.EnableTimestamps) text = \"[\" + getTimestamp() + \"] \" + text;\n    this.text = text;\n    this.color = color;\n  }\n}\n\nexport class Link {\n  hostname: string;\n  dashes: string;\n  constructor(dashes: string, hostname: string) {\n    if (Settings.EnableTimestamps) dashes = \"[\" + getTimestamp() + \"] \" + dashes;\n    this.hostname = hostname;\n    this.dashes = dashes;\n  }\n}\n\nexport class TTimer {\n  time: number;\n  timeLeft: number;\n  action: \"h\" | \"b\" | \"a\";\n\n  constructor(time: number, action: \"h\" | \"b\" | \"a\") {\n    this.time = time;\n    this.timeLeft = time;\n    this.action = action;\n  }\n}\n\nexport interface ITerminal {\n  action: TTimer | null;\n\n  commandHistory: string[];\n  commandHistoryIndex: number;\n\n  outputHistory: (Output | Link)[];\n\n  // True if a Coding Contract prompt is opened\n  contractOpen: boolean;\n\n  // Full Path of current directory\n  // Excludes the trailing forward slash\n  currDir: string;\n\n  print(s: string): void;\n  error(s: string): void;\n\n  clear(): void;\n  startAnalyze(): void;\n  startBackdoor(player: IPlayer): void;\n  startHack(player: IPlayer): void;\n  finishHack(router: IRouter, player: IPlayer, cancelled?: boolean): void;\n  finishBackdoor(router: IRouter, player: IPlayer, cancelled?: boolean): void;\n  finishAnalyze(player: IPlayer, cancelled?: boolean): void;\n  finishAction(router: IRouter, player: IPlayer, cancelled?: boolean): void;\n  getFilepath(filename: string): string;\n  getFile(player: IPlayer, filename: string): Script | TextFile | string | null;\n  getScript(player: IPlayer, filename: string): Script | null;\n  getTextFile(player: IPlayer, filename: string): TextFile | null;\n  getLitFile(player: IPlayer, filename: string): string | null;\n  cwd(): string;\n  setcwd(dir: string): void;\n  runContract(player: IPlayer, name: string): void;\n  executeScanAnalyzeCommand(player: IPlayer, depth?: number, all?: boolean): void;\n  connectToServer(player: IPlayer, server: string): void;\n  executeCommand(router: IRouter, player: IPlayer, command: string): void;\n  executeCommands(router: IRouter, player: IPlayer, commands: string): void;\n  // If there was any changes, will return true, once.\n  process(router: IRouter, player: IPlayer, cycles: number): void;\n  prestige(): void;\n  getProgressText(): string;\n}\n","import { EventEmitter } from \"../utils/EventEmitter\";\nexport const TerminalEvents = new EventEmitter<[]>();\nexport const TerminalClearEvents = new EventEmitter<[]>();\n","/**\n * The worker agent for running a script instance. Each running script instance\n * has its own underlying WorkerScript object.\n *\n * Note that these objects are not saved and re-loaded when the game is refreshed.\n * Instead, whenever the game is opened, WorkerScripts are re-created from\n * RunningScript objects\n */\nimport { Environment } from \"./Environment\";\nimport { RamCostConstants } from \"./RamCostGenerator\";\n\nimport { RunningScript } from \"../Script/RunningScript\";\nimport { Script } from \"../Script/Script\";\nimport { AllServers } from \"../Server/AllServers\";\nimport { BaseServer } from \"../Server/BaseServer\";\nimport { IMap } from \"../types\";\n\nexport class WorkerScript {\n  /**\n   * Script's arguments\n   */\n  args: any[];\n\n  /**\n   * Copy of the script's code\n   */\n  code = \"\";\n\n  /**\n   * Holds the timeoutID (numeric value) for whenever this script is blocked by a\n   * timed Netscript function. i.e. Holds the return value of setTimeout()\n   */\n  delay: number | null = null;\n\n  /**\n   * Holds the Promise resolve() function for when the script is \"blocked\" by an async op\n   */\n  delayResolve?: () => void;\n\n  /**\n   * Stores names of all functions that have logging disabled\n   */\n  disableLogs: IMap<boolean> = {};\n\n  /**\n   * Used for dynamic RAM calculation. Stores names of all functions that have\n   * already been checked by this script.\n   * TODO: Could probably just combine this with loadedFns?\n   */\n  dynamicLoadedFns: IMap<boolean> = {};\n\n  /**\n   * Tracks dynamic RAM usage\n   */\n  dynamicRamUsage: number = RamCostConstants.ScriptBaseRamCost;\n\n  /**\n   * Netscript Environment for this script\n   */\n  env: Environment;\n\n  /**\n   * Status message in case of script error. Currently unused I think\n   */\n  errorMessage = \"\";\n\n  /**\n   * Used for static RAM calculation. Stores names of all functions that have\n   * already been checked by this script\n   */\n  loadedFns: IMap<boolean> = {};\n\n  /**\n   * Filename of script\n   */\n  name: string;\n\n  /**\n   * Script's output/return value. Currently not used or implemented\n   */\n  output = \"\";\n\n  /**\n   * Process ID. Must be an integer. Used for efficient script\n   * killing and removal.\n   */\n  pid: number;\n\n  /**\n   * Script's Static RAM usage. Equivalent to underlying script's RAM usage\n   */\n  ramUsage = 0;\n\n  /**\n   * Whether or not this workerScript is currently running\n   */\n  running = false;\n\n  /**\n   * Reference to underlying RunningScript object\n   */\n  scriptRef: RunningScript;\n\n  /**\n   * IP Address on which this script is running\n   */\n  serverIp: string;\n\n  constructor(runningScriptObj: RunningScript, pid: number, nsFuncsGenerator?: (ws: WorkerScript) => any) {\n    this.name = runningScriptObj.filename;\n    this.serverIp = runningScriptObj.server;\n\n    const sanitizedPid = Math.round(pid);\n    if (typeof sanitizedPid !== \"number\" || isNaN(sanitizedPid)) {\n      throw new Error(`Invalid PID when constructing WorkerScript: ${pid}`);\n    }\n    this.pid = sanitizedPid;\n    runningScriptObj.pid = sanitizedPid;\n\n    // Get the underlying script's code\n    const server = AllServers[this.serverIp];\n    if (server == null) {\n      throw new Error(`WorkerScript constructed with invalid server ip: ${this.serverIp}`);\n    }\n    let found = false;\n    for (let i = 0; i < server.scripts.length; ++i) {\n      if (server.scripts[i].filename === this.name) {\n        found = true;\n        this.code = server.scripts[i].code;\n      }\n    }\n    if (!found) {\n      throw new Error(`WorkerScript constructed with invalid script filename: ${this.name}`);\n    }\n\n    this.env = new Environment(null);\n    if (typeof nsFuncsGenerator === \"function\") {\n      this.env.vars = nsFuncsGenerator(this);\n    }\n    this.env.set(\"args\", runningScriptObj.args.slice());\n\n    this.scriptRef = runningScriptObj;\n    this.args = runningScriptObj.args.slice();\n  }\n\n  /**\n   * Returns the Server on which this script is running\n   */\n  getServer(): BaseServer {\n    const server = AllServers[this.serverIp];\n    if (server == null) throw new Error(`Script ${this.name} pid ${this.pid} is running on non-existent server?`);\n    return server;\n  }\n\n  /**\n   * Returns the Script object for the underlying script.\n   * Returns null if it cannot be found (which would be a bug)\n   */\n  getScript(): Script | null {\n    const server = this.getServer();\n    for (let i = 0; i < server.scripts.length; ++i) {\n      if (server.scripts[i].filename === this.name) {\n        return server.scripts[i];\n      }\n    }\n\n    console.error(\n      \"Failed to find underlying Script object in WorkerScript.getScript(). This probably means somethings wrong\",\n    );\n    return null;\n  }\n\n  /**\n   * Returns the script with the specified filename on the specified server,\n   * or null if it cannot be found\n   */\n  getScriptOnServer(fn: string, server: BaseServer): Script | null {\n    if (server == null) {\n      server = this.getServer();\n    }\n\n    for (let i = 0; i < server.scripts.length; ++i) {\n      if (server.scripts[i].filename === fn) {\n        return server.scripts[i];\n      }\n    }\n\n    return null;\n  }\n\n  shouldLog(fn: string): boolean {\n    return this.disableLogs[fn] == null;\n  }\n\n  log(func: string, txt: string): void {\n    if (this.shouldLog(func)) {\n      if (func && txt) {\n        this.scriptRef.log(`${func}: ${txt}`);\n      } else if (func) {\n        this.scriptRef.log(func);\n      } else {\n        this.scriptRef.log(txt);\n      }\n    }\n  }\n\n  print(txt: string): void {\n    this.scriptRef.log(txt);\n  }\n}\n","export class DarkWebItem {\n  program: string;\n  price: number;\n  description: string;\n\n  constructor(program: string, price: number, description: string) {\n    this.program = program;\n    this.price = price;\n    this.description = description;\n  }\n}\n","/**\n * Helper functions for determine whether Limit and Stop orders should\n * be executed (and executing them)\n */\nimport { buyStock, sellStock, shortStock, sellShort } from \"./BuyingAndSelling\";\nimport { IOrderBook } from \"./IOrderBook\";\nimport { IStockMarket } from \"./IStockMarket\";\nimport { Order } from \"./Order\";\nimport { Stock } from \"./Stock\";\n\nimport { OrderTypes } from \"./data/OrderTypes\";\nimport { PositionTypes } from \"./data/PositionTypes\";\n\nimport { IMap } from \"../types\";\n\nimport { numeralWrapper } from \"../ui/numeralFormat\";\nimport { Money } from \"../ui/React/Money\";\n\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\n\nimport * as React from \"react\";\n\nexport interface IProcessOrderRefs {\n  stockMarket: IStockMarket;\n  symbolToStockMap: IMap<Stock>;\n}\n\n/**\n * Search for all orders of a specific type and execute them if appropriate\n * @param {Stock} stock - Stock for which orders should be processed\n * @param {OrderTypes} orderType - Type of order to check (Limit/Stop buy/sell)\n * @param {PositionTypes} posType - Long or short\n * @param {IProcessOrderRefs} refs - References to objects/functions that are required for this function\n */\nexport function processOrders(\n  stock: Stock,\n  orderType: OrderTypes,\n  posType: PositionTypes,\n  refs: IProcessOrderRefs,\n): void {\n  const orderBook = refs.stockMarket[\"Orders\"];\n  if (orderBook == null) {\n    const orders: IOrderBook = {};\n    for (const name in refs.stockMarket) {\n      const stock = refs.stockMarket[name];\n      if (!(stock instanceof Stock)) {\n        continue;\n      }\n      orders[stock.symbol] = [];\n    }\n    refs.stockMarket[\"Orders\"] = orders;\n    return; // Newly created, so no orders to process\n  }\n  let stockOrders = orderBook[stock.symbol];\n  if (stockOrders == null || !(stockOrders.constructor === Array)) {\n    console.error(`Invalid Order book for ${stock.symbol} in processOrders(): ${stockOrders}`);\n    stockOrders = [];\n    return;\n  }\n\n  for (const order of stockOrders) {\n    if (order.type === orderType && order.pos === posType) {\n      switch (order.type) {\n        case OrderTypes.LimitBuy:\n          if (order.pos === PositionTypes.Long && stock.price <= order.price) {\n            executeOrder(/*66*/ order, refs);\n          } else if (order.pos === PositionTypes.Short && stock.price >= order.price) {\n            executeOrder(/*66*/ order, refs);\n          }\n          break;\n        case OrderTypes.LimitSell:\n          if (order.pos === PositionTypes.Long && stock.price >= order.price) {\n            executeOrder(/*66*/ order, refs);\n          } else if (order.pos === PositionTypes.Short && stock.price <= order.price) {\n            executeOrder(/*66*/ order, refs);\n          }\n          break;\n        case OrderTypes.StopBuy:\n          if (order.pos === PositionTypes.Long && stock.price >= order.price) {\n            executeOrder(/*66*/ order, refs);\n          } else if (order.pos === PositionTypes.Short && stock.price <= order.price) {\n            executeOrder(/*66*/ order, refs);\n          }\n          break;\n        case OrderTypes.StopSell:\n          if (order.pos === PositionTypes.Long && stock.price <= order.price) {\n            executeOrder(/*66*/ order, refs);\n          } else if (order.pos === PositionTypes.Short && stock.price >= order.price) {\n            executeOrder(/*66*/ order, refs);\n          }\n          break;\n        default:\n          console.warn(`Invalid order type: ${order.type}`);\n          return;\n      }\n    }\n  }\n}\n\n/**\n * Execute a Stop or Limit Order.\n * @param {Order} order - Order being executed\n * @param {IProcessOrderRefs} refs - References to objects/functions that are required for this function\n */\nfunction executeOrder(order: Order, refs: IProcessOrderRefs): void {\n  const stock = refs.symbolToStockMap[order.stockSymbol];\n  if (!(stock instanceof Stock)) {\n    console.error(`Could not find stock for this order: ${order.stockSymbol}`);\n    return;\n  }\n  const stockMarket = refs.stockMarket;\n  const orderBook = stockMarket[\"Orders\"];\n  const stockOrders = orderBook[stock.symbol];\n\n  // When orders are executed, the buying and selling functions shouldn't\n  // emit popup dialog boxes. This options object configures the functions for that\n  const opts = {\n    suppressDialog: true,\n  };\n\n  let res = true;\n  let isBuy = false;\n  switch (order.type) {\n    case OrderTypes.LimitBuy:\n    case OrderTypes.StopBuy:\n      isBuy = true;\n      if (order.pos === PositionTypes.Long) {\n        res = buyStock(stock, order.shares, null, opts) && res;\n      } else if (order.pos === PositionTypes.Short) {\n        res = shortStock(stock, order.shares, null, opts) && res;\n      }\n      break;\n    case OrderTypes.LimitSell:\n    case OrderTypes.StopSell:\n      if (order.pos === PositionTypes.Long) {\n        res = sellStock(stock, order.shares, null, opts) && res;\n      } else if (order.pos === PositionTypes.Short) {\n        res = sellShort(stock, order.shares, null, opts) && res;\n      }\n      break;\n    default:\n      console.warn(`Invalid order type: ${order.type}`);\n      return;\n  }\n\n  // Position type, for logging/message purposes\n  const pos = order.pos === PositionTypes.Long ? \"Long\" : \"Short\";\n\n  if (res) {\n    for (let i = 0; i < stockOrders.length; ++i) {\n      if (order == stockOrders[i]) {\n        stockOrders.splice(i, 1);\n        dialogBoxCreate(\n          <>\n            {order.type} for {stock.symbol} @ <Money money={order.price} /> ({pos}) was filled (\n            {numeralWrapper.formatShares(Math.round(order.shares))} shares)\n          </>,\n        );\n        return;\n      }\n    }\n\n    console.error(\"Could not find the following Order in Order Book: \");\n    console.error(order);\n  } else {\n    if (isBuy) {\n      dialogBoxCreate(\n        <>\n          Failed to execute {order.type} for {stock.symbol} @ <Money money={order.price} /> ({pos}). This is most likely\n          because you do not have enough money or the order would exceed the stock's maximum number of shares\n        </>,\n      );\n    }\n  }\n}\n","import { CorporationState } from \"./CorporationState\";\nimport { CorporationUnlockUpgrade, CorporationUnlockUpgrades } from \"./data/CorporationUnlockUpgrades\";\nimport { CorporationUpgrade, CorporationUpgrades } from \"./data/CorporationUpgrades\";\nimport { Warehouse } from \"./Warehouse\";\nimport { CorporationConstants } from \"./data/Constants\";\nimport { Industry } from \"./Industry\";\n\nimport { BitNodeMultipliers } from \"../BitNode/BitNodeMultipliers\";\nimport { showLiterature } from \"../Literature/LiteratureHelpers\";\nimport { LiteratureNames } from \"../Literature/data/LiteratureNames\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\n\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\nimport { Reviver, Generic_toJSON, Generic_fromJSON } from \"../utils/JSONReviver\";\nimport { isString } from \"../utils/helpers/isString\";\n\n// UI Related Imports\n\nimport Decimal from \"decimal.js\";\n\ninterface IParams {\n  name?: string;\n}\n\nexport class Corporation {\n  name = \"The Corporation\";\n\n  //A division/business sector is represented  by the object:\n  divisions: Industry[] = [];\n\n  //Financial stats\n  funds = new Decimal(150e9);\n  revenue = new Decimal(0);\n  expenses = new Decimal(0);\n  fundingRound = 0;\n  public = false; //Publicly traded\n  totalShares = CorporationConstants.INITIALSHARES; // Total existing shares\n  numShares = CorporationConstants.INITIALSHARES; // Total shares owned by player\n  shareSalesUntilPriceUpdate = CorporationConstants.SHARESPERPRICEUPDATE;\n  shareSaleCooldown = 0; // Game cycles until player can sell shares again\n  issueNewSharesCooldown = 0; // Game cycles until player can issue shares again\n  dividendPercentage = 0;\n  dividendTaxPercentage = 50;\n  issuedShares = 0;\n  sharePrice = 0;\n  storedCycles = 0;\n\n  unlockUpgrades: number[];\n  upgrades: number[];\n  upgradeMultipliers: number[];\n\n  state = new CorporationState();\n\n  constructor(params: IParams = {}) {\n    this.name = params.name ? params.name : \"The Corporation\";\n    const numUnlockUpgrades = Object.keys(CorporationUnlockUpgrades).length;\n    const numUpgrades = Object.keys(CorporationUpgrades).length;\n    this.unlockUpgrades = Array(numUnlockUpgrades).fill(0);\n    this.upgrades = Array(numUpgrades).fill(0);\n    this.upgradeMultipliers = Array(numUpgrades).fill(1);\n  }\n\n  addFunds(amt: number): void {\n    if (!isFinite(amt)) {\n      console.error(\"Trying to add invalid amount of funds. Report to a developper.\");\n      return;\n    }\n    this.funds = this.funds.plus(amt);\n  }\n\n  getState(): string {\n    return this.state.getState();\n  }\n\n  storeCycles(numCycles = 1): void {\n    this.storedCycles += numCycles;\n  }\n\n  process(player: IPlayer): void {\n    if (this.storedCycles >= CorporationConstants.CyclesPerIndustryStateCycle) {\n      const state = this.getState();\n      const marketCycles = 1;\n      const gameCycles = marketCycles * CorporationConstants.CyclesPerIndustryStateCycle;\n      this.storedCycles -= gameCycles;\n\n      this.divisions.forEach((ind) => {\n        ind.process(marketCycles, state, this);\n      });\n\n      // Process cooldowns\n      if (this.shareSaleCooldown > 0) {\n        this.shareSaleCooldown -= gameCycles;\n      }\n      if (this.issueNewSharesCooldown > 0) {\n        this.issueNewSharesCooldown -= gameCycles;\n      }\n\n      //At the start of a new cycle, calculate profits from previous cycle\n      if (state === \"START\") {\n        this.revenue = new Decimal(0);\n        this.expenses = new Decimal(0);\n        this.divisions.forEach((ind) => {\n          if (ind.lastCycleRevenue === -Infinity || ind.lastCycleRevenue === Infinity) {\n            return;\n          }\n          if (ind.lastCycleExpenses === -Infinity || ind.lastCycleExpenses === Infinity) {\n            return;\n          }\n          this.revenue = this.revenue.plus(ind.lastCycleRevenue);\n          this.expenses = this.expenses.plus(ind.lastCycleExpenses);\n        });\n        const profit = this.revenue.minus(this.expenses);\n        const cycleProfit = profit.times(marketCycles * CorporationConstants.SecsPerMarketCycle);\n        if (isNaN(this.funds) || this.funds === Infinity || this.funds === -Infinity) {\n          dialogBoxCreate(\n            \"There was an error calculating your Corporations funds and they got reset to 0. \" +\n              \"This is a bug. Please report to game developer.<br><br>\" +\n              \"(Your funds have been set to $150b for the inconvenience)\",\n          );\n          this.funds = new Decimal(150e9);\n        }\n\n        // Process dividends\n        if (this.dividendPercentage > 0 && cycleProfit > 0) {\n          // Validate input again, just to be safe\n          if (\n            isNaN(this.dividendPercentage) ||\n            this.dividendPercentage < 0 ||\n            this.dividendPercentage > CorporationConstants.DividendMaxPercentage * 100\n          ) {\n            console.error(`Invalid Corporation dividend percentage: ${this.dividendPercentage}`);\n          } else {\n            const totalDividends = (this.dividendPercentage / 100) * cycleProfit;\n            const retainedEarnings = cycleProfit - totalDividends;\n            const dividendsPerShare = totalDividends / this.totalShares;\n            const profit = this.numShares * dividendsPerShare * (1 - this.dividendTaxPercentage / 100);\n            player.gainMoney(profit);\n            player.recordMoneySource(profit, \"corporation\");\n            this.addFunds(retainedEarnings);\n          }\n        } else {\n          this.addFunds(cycleProfit);\n        }\n\n        this.updateSharePrice();\n      }\n\n      this.state.nextState();\n    }\n  }\n\n  determineValuation(): number {\n    let val,\n      profit = this.revenue.minus(this.expenses).toNumber();\n    if (this.public) {\n      // Account for dividends\n      if (this.dividendPercentage > 0) {\n        profit *= (100 - this.dividendPercentage) / 100;\n      }\n\n      val = this.funds.toNumber() + profit * 85e3;\n      val *= Math.pow(1.1, this.divisions.length);\n      val = Math.max(val, 0);\n    } else {\n      val = 10e9 + Math.max(this.funds.toNumber(), 0) / 3; //Base valuation\n      if (profit > 0) {\n        val += profit * 315e3;\n        val *= Math.pow(1.1, this.divisions.length);\n      } else {\n        val = 10e9 * Math.pow(1.1, this.divisions.length);\n      }\n      val -= val % 1e6; //Round down to nearest millionth\n    }\n    return val * BitNodeMultipliers.CorporationValuation;\n  }\n\n  getTargetSharePrice(): number {\n    // Note: totalShares - numShares is not the same as issuedShares because\n    // issuedShares does not account for private investors\n    return this.determineValuation() / (2 * (this.totalShares - this.numShares) + 1);\n  }\n\n  updateSharePrice(): void {\n    const targetPrice = this.getTargetSharePrice();\n    if (this.sharePrice <= targetPrice) {\n      this.sharePrice *= 1 + Math.random() * 0.01;\n    } else {\n      this.sharePrice *= 1 - Math.random() * 0.01;\n    }\n    if (this.sharePrice <= 0.01) {\n      this.sharePrice = 0.01;\n    }\n  }\n\n  immediatelyUpdateSharePrice(): void {\n    this.sharePrice = this.getTargetSharePrice();\n  }\n\n  // Calculates how much money will be made and what the resulting stock price\n  // will be when the player sells his/her shares\n  // @return - [Player profit, final stock price, end shareSalesUntilPriceUpdate property]\n  calculateShareSale(numShares: number): [number, number, number] {\n    let sharesTracker = numShares;\n    let sharesUntilUpdate = this.shareSalesUntilPriceUpdate;\n    let sharePrice = this.sharePrice;\n    let sharesSold = 0;\n    let profit = 0;\n\n    const maxIterations = Math.ceil(numShares / CorporationConstants.SHARESPERPRICEUPDATE);\n    if (isNaN(maxIterations) || maxIterations > 10e6) {\n      console.error(\n        `Something went wrong or unexpected when calculating share sale. Maxiterations calculated to be ${maxIterations}`,\n      );\n      return [0, 0, 0];\n    }\n\n    for (let i = 0; i < maxIterations; ++i) {\n      if (sharesTracker < sharesUntilUpdate) {\n        profit += sharePrice * sharesTracker;\n        sharesUntilUpdate -= sharesTracker;\n        break;\n      } else {\n        profit += sharePrice * sharesUntilUpdate;\n        sharesUntilUpdate = CorporationConstants.SHARESPERPRICEUPDATE;\n        sharesTracker -= sharesUntilUpdate;\n        sharesSold += sharesUntilUpdate;\n\n        // Calculate what new share price would be\n        sharePrice = this.determineValuation() / (2 * (this.totalShares + sharesSold - this.numShares));\n      }\n    }\n\n    return [profit, sharePrice, sharesUntilUpdate];\n  }\n\n  convertCooldownToString(cd: number): string {\n    // The cooldown value is based on game cycles. Convert to a simple string\n    const seconds = cd / 5;\n\n    const SecondsPerMinute = 60;\n    const SecondsPerHour = 3600;\n\n    if (seconds > SecondsPerHour) {\n      return `${Math.floor(seconds / SecondsPerHour)} hour(s)`;\n    } else if (seconds > SecondsPerMinute) {\n      return `${Math.floor(seconds / SecondsPerMinute)} minute(s)`;\n    } else {\n      return `${Math.floor(seconds)} second(s)`;\n    }\n  }\n\n  //One time upgrades that unlock new features\n  unlock(upgrade: CorporationUnlockUpgrade): void {\n    const upgN = upgrade[0],\n      price = upgrade[1];\n    while (this.unlockUpgrades.length <= upgN) {\n      this.unlockUpgrades.push(0);\n    }\n    if (this.funds.lt(price)) {\n      dialogBoxCreate(\"You don't have enough funds to unlock this!\");\n      return;\n    }\n    this.unlockUpgrades[upgN] = 1;\n    this.funds = this.funds.minus(price);\n\n    // Apply effects for one-time upgrades\n    if (upgN === 5) {\n      this.dividendTaxPercentage -= 5;\n    } else if (upgN === 6) {\n      this.dividendTaxPercentage -= 10;\n    }\n  }\n\n  //Levelable upgrades\n  upgrade(upgrade: CorporationUpgrade): void {\n    const upgN = upgrade[0],\n      basePrice = upgrade[1],\n      priceMult = upgrade[2],\n      upgradeAmt = upgrade[3]; //Amount by which the upgrade multiplier gets increased (additive)\n    while (this.upgrades.length <= upgN) {\n      this.upgrades.push(0);\n    }\n    while (this.upgradeMultipliers.length <= upgN) {\n      this.upgradeMultipliers.push(1);\n    }\n    const totalCost = basePrice * Math.pow(priceMult, this.upgrades[upgN]);\n    if (this.funds.lt(totalCost)) {\n      dialogBoxCreate(\"You don't have enough funds to purchase this!\");\n      return;\n    }\n    ++this.upgrades[upgN];\n    this.funds = this.funds.minus(totalCost);\n\n    //Increase upgrade multiplier\n    this.upgradeMultipliers[upgN] = 1 + this.upgrades[upgN] * upgradeAmt;\n\n    //If storage size is being updated, update values in Warehouse objects\n    if (upgN === 1) {\n      for (let i = 0; i < this.divisions.length; ++i) {\n        const industry = this.divisions[i];\n        for (const city in industry.warehouses) {\n          const warehouse = industry.warehouses[city];\n          if (warehouse === 0) continue;\n          if (industry.warehouses.hasOwnProperty(city) && warehouse instanceof Warehouse) {\n            warehouse.updateSize(this, industry);\n          }\n        }\n      }\n    }\n  }\n\n  getProductionMultiplier(): number {\n    const mult = this.upgradeMultipliers[0];\n    if (isNaN(mult) || mult < 1) {\n      return 1;\n    } else {\n      return mult;\n    }\n  }\n\n  getStorageMultiplier(): number {\n    const mult = this.upgradeMultipliers[1];\n    if (isNaN(mult) || mult < 1) {\n      return 1;\n    } else {\n      return mult;\n    }\n  }\n\n  getDreamSenseGain(): number {\n    const gain = this.upgradeMultipliers[2] - 1;\n    return gain <= 0 ? 0 : gain;\n  }\n\n  getAdvertisingMultiplier(): number {\n    const mult = this.upgradeMultipliers[3];\n    if (isNaN(mult) || mult < 1) {\n      return 1;\n    } else {\n      return mult;\n    }\n  }\n\n  getEmployeeCreMultiplier(): number {\n    const mult = this.upgradeMultipliers[4];\n    if (isNaN(mult) || mult < 1) {\n      return 1;\n    } else {\n      return mult;\n    }\n  }\n\n  getEmployeeChaMultiplier(): number {\n    const mult = this.upgradeMultipliers[5];\n    if (isNaN(mult) || mult < 1) {\n      return 1;\n    } else {\n      return mult;\n    }\n  }\n\n  getEmployeeIntMultiplier(): number {\n    const mult = this.upgradeMultipliers[6];\n    if (isNaN(mult) || mult < 1) {\n      return 1;\n    } else {\n      return mult;\n    }\n  }\n\n  getEmployeeEffMultiplier(): number {\n    const mult = this.upgradeMultipliers[7];\n    if (isNaN(mult) || mult < 1) {\n      return 1;\n    } else {\n      return mult;\n    }\n  }\n\n  getSalesMultiplier(): number {\n    const mult = this.upgradeMultipliers[8];\n    if (isNaN(mult) || mult < 1) {\n      return 1;\n    } else {\n      return mult;\n    }\n  }\n\n  getScientificResearchMultiplier(): number {\n    const mult = this.upgradeMultipliers[9];\n    if (isNaN(mult) || mult < 1) {\n      return 1;\n    } else {\n      return mult;\n    }\n  }\n\n  // Adds the Corporation Handbook (Starter Guide) to the player's home computer.\n  // This is a lit file that gives introductory info to the player\n  // This occurs when the player clicks the \"Getting Started Guide\" button on the overview panel\n  getStarterGuide(player: IPlayer): void {\n    // Check if player already has Corporation Handbook\n    const homeComp = player.getHomeComputer();\n    let hasHandbook = false;\n    const handbookFn = LiteratureNames.CorporationManagementHandbook;\n    for (let i = 0; i < homeComp.messages.length; ++i) {\n      if (isString(homeComp.messages[i]) && homeComp.messages[i] === handbookFn) {\n        hasHandbook = true;\n        break;\n      }\n    }\n\n    if (!hasHandbook) {\n      homeComp.messages.push(handbookFn);\n    }\n    showLiterature(handbookFn);\n    return;\n  }\n\n  /**\n   * Serialize the current object to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"Corporation\", this);\n  }\n\n  /**\n   * Initiatizes a Corporation object from a JSON save state.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Corporation {\n    return Generic_fromJSON(Corporation, value.data);\n  }\n}\n\nReviver.constructors.Corporation = Corporation;\n","/**\n * Options specific to creating an anchor (\"<a>\") element.\n */\ninterface ICreateElementAnchorOptions {\n  href?: string;\n  target?: string;\n  text?: string;\n}\n\n/**\n * Options specific to creating an input (\"<input>\") element.\n */\ninterface ICreateElementInputOptions {\n  checked?: boolean;\n  max?: string;\n  maxLength?: number;\n  min?: string;\n  name?: string;\n  pattern?: string;\n  placeholder?: string;\n  step?: string;\n  type?: string;\n  value?: string;\n}\n\n/**\n * Options specific to creating a label (\"<label>\") element.\n */\ninterface ICreateElementLabelOptions {\n  for?: string;\n}\n\n/**\n * Options for setting up event listeners on the element.\n */\ninterface ICreateElementListenerOptions {\n  changeListener?(this: HTMLElement, ev: Event): any;\n  clickListener?(this: HTMLElement, ev: MouseEvent): any;\n  mouseDown?(this: HTMLElement, ev: MouseEvent): any;\n  inputListener?(this: HTMLElement, ev: Event): any;\n  onfocus?(this: HTMLElement, ev: FocusEvent): any;\n  onkeydown?(this: HTMLElement, ev: KeyboardEvent): any;\n  onkeyup?(this: HTMLElement, ev: KeyboardEvent): any;\n}\n\n/**\n * Options for setting up the inline-styling of element.\n * NOTE: Relying on CSS styling should be preferred over forcing the higher specificity via inline styles.\n */\ninterface ICreateElementStyleOptions {\n  backgroundColor?: string;\n  border?: string;\n  color?: string;\n  display?: string;\n  float?: string;\n  fontSize?: string;\n  margin?: string;\n  marginLeft?: string;\n  marginTop?: string;\n  overflow?: string;\n  padding?: string;\n  position?: string;\n  visibility?: string;\n  whiteSpace?: string;\n  width?: string;\n  height?: string;\n  top?: string;\n  left?: string;\n}\n\n/**\n * Options for adding an in-game tooltip to the element.\n */\ninterface ICreateElementTooltipOptions {\n  tooltip?: string;\n  tooltipleft?: string;\n  tooltipsmall?: string;\n  tooltiplow?: string;\n}\n\n/**\n * All possible configuration options when creating an element.\n */\ninterface ICreateElementOptions\n  extends ICreateElementStyleOptions,\n    ICreateElementListenerOptions,\n    ICreateElementInputOptions,\n    ICreateElementAnchorOptions,\n    ICreateElementLabelOptions,\n    ICreateElementTooltipOptions {\n  /**\n   * CSS Class(es) to initially set.\n   */\n  class?: string;\n\n  /**\n   * A (hopefully) unique identifier for the element.\n   */\n  id?: string;\n\n  innerHTML?: string;\n  innerText?: string;\n  tabIndex?: number;\n}\n\nfunction setElementAnchor(el: HTMLAnchorElement, params: ICreateElementAnchorOptions): void {\n  if (params.text !== undefined) {\n    el.text = params.text;\n  }\n  if (params.href !== undefined) {\n    el.href = params.href;\n  }\n  if (params.target !== undefined) {\n    el.target = params.target;\n  }\n}\n\nfunction setElementInput(el: HTMLInputElement, params: ICreateElementInputOptions): void {\n  if (params.name !== undefined) {\n    el.name = params.name;\n  }\n  if (params.value !== undefined) {\n    el.value = params.value;\n  }\n  if (params.type !== undefined) {\n    el.type = params.type;\n  }\n  if (params.checked !== undefined) {\n    el.checked = params.checked;\n  }\n  if (params.pattern !== undefined) {\n    el.pattern = params.pattern;\n  }\n  if (params.maxLength !== undefined) {\n    el.maxLength = params.maxLength;\n  }\n  if (params.placeholder !== undefined) {\n    el.placeholder = params.placeholder;\n  }\n  if (params.max !== undefined) {\n    el.max = params.max;\n  }\n  if (params.min !== undefined) {\n    el.min = params.min;\n  }\n  if (params.step !== undefined) {\n    el.step = params.step;\n  }\n}\n\nfunction setElementLabel(el: HTMLLabelElement, params: ICreateElementLabelOptions): void {\n  if (params.for !== undefined) {\n    el.htmlFor = params.for;\n  }\n}\n\nfunction setElementListeners(el: HTMLElement, params: ICreateElementListenerOptions): void {\n  // tslint:disable:no-unbound-method\n  if (params.clickListener !== undefined) {\n    el.addEventListener(\"click\", params.clickListener);\n  }\n  if (params.mouseDown !== undefined) {\n    el.addEventListener(\"mousedown\", params.mouseDown);\n  }\n  if (params.inputListener !== undefined) {\n    el.addEventListener(\"input\", params.inputListener);\n  }\n  if (params.changeListener !== undefined) {\n    el.addEventListener(\"change\", params.changeListener);\n  }\n  if (params.onkeyup !== undefined) {\n    el.addEventListener(\"keyup\", params.onkeyup);\n  }\n  if (params.onkeydown !== undefined) {\n    el.addEventListener(\"keydown\", params.onkeydown);\n  }\n  if (params.onfocus !== undefined) {\n    el.addEventListener(\"focus\", params.onfocus);\n  }\n  // tslint:enable:no-unbound-method\n}\n\nfunction setElementStyle(el: HTMLElement, params: ICreateElementStyleOptions): void {\n  if (params.display !== undefined) {\n    el.style.display = params.display;\n  }\n  if (params.visibility !== undefined) {\n    el.style.visibility = params.visibility;\n  }\n  if (params.margin !== undefined) {\n    el.style.margin = params.margin;\n  }\n  if (params.marginLeft !== undefined) {\n    el.style.marginLeft = params.marginLeft;\n  }\n  if (params.marginTop !== undefined) {\n    el.style.marginTop = params.marginTop;\n  }\n  if (params.padding !== undefined) {\n    el.style.padding = params.padding;\n  }\n  if (params.color !== undefined) {\n    el.style.color = params.color;\n  }\n  if (params.border !== undefined) {\n    el.style.border = params.border;\n  }\n  if (params.float !== undefined) {\n    el.style.cssFloat = params.float;\n  }\n  if (params.fontSize !== undefined) {\n    el.style.fontSize = params.fontSize;\n  }\n  if (params.whiteSpace !== undefined) {\n    el.style.whiteSpace = params.whiteSpace;\n  }\n  if (params.width !== undefined) {\n    el.style.width = params.width;\n  }\n  if (params.height !== undefined) {\n    el.style.height = params.height;\n  }\n  if (params.top !== undefined) {\n    el.style.top = params.top;\n  }\n  if (params.left !== undefined) {\n    el.style.left = params.left;\n  }\n  if (params.backgroundColor !== undefined) {\n    el.style.backgroundColor = params.backgroundColor;\n  }\n  if (params.position !== undefined) {\n    el.style.position = params.position;\n  }\n  if (params.overflow !== undefined) {\n    el.style.overflow = params.overflow;\n  }\n}\n\nfunction setElementTooltip(el: HTMLElement, params: ICreateElementTooltipOptions): void {\n  if (params.tooltip !== undefined && params.tooltip !== \"\") {\n    el.className += \" tooltip\";\n    el.appendChild(\n      createElement(\"span\", {\n        class: \"tooltiptext\",\n        innerHTML: params.tooltip,\n      }),\n    );\n  } else if (params.tooltipleft !== undefined) {\n    el.className += \" tooltip\";\n    el.appendChild(\n      createElement(\"span\", {\n        class: \"tooltiptextleft\",\n        innerHTML: params.tooltipleft,\n      }),\n    );\n  } else if (params.tooltipsmall !== undefined) {\n    el.className += \" tooltip\";\n    el.appendChild(\n      createElement(\"span\", {\n        class: \"tooltiptext smallfont\",\n        innerHTML: params.tooltipsmall,\n      }),\n    );\n  } else if (params.tooltiplow !== undefined) {\n    el.className += \"tooltip\";\n    el.appendChild(\n      createElement(\"span\", {\n        class: \"tooltiptextlow\",\n        innerHTML: params.tooltiplow,\n      }),\n    );\n  }\n}\n\n/**\n * An all-in-one-call way of creating an element to be added to the DOM at some point.\n * @param tagName The HTML tag/element name\n * @param params Additional parameters to set on the element\n */\nexport function createElement(tagName: string, params: ICreateElementOptions = {}): HTMLElement {\n  const el: HTMLElement = document.createElement(tagName);\n\n  if (params.id !== undefined) {\n    el.id = params.id;\n  }\n  if (params.class !== undefined) {\n    el.className = params.class;\n  }\n  if (params.innerHTML !== undefined) {\n    el.innerHTML = params.innerHTML;\n  }\n  if (params.innerText !== undefined) {\n    el.innerText = params.innerText;\n  }\n  if (params.tabIndex !== undefined) {\n    el.tabIndex = params.tabIndex;\n  }\n\n  setElementAnchor(el as HTMLAnchorElement, params);\n  setElementInput(el as HTMLInputElement, params);\n  setElementLabel(el as HTMLLabelElement, params);\n  setElementListeners(el, params);\n  setElementStyle(el, params);\n  setElementTooltip(el, params);\n\n  return el;\n}\n","import { IBladeburner } from \"./IBladeburner\";\nimport { BladeburnerConstants } from \"./data/Constants\";\nimport { Action, IActionParams } from \"./Action\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\n\nexport interface IOperationParams extends IActionParams {\n  reqdRank?: number;\n  teamCount?: number;\n}\n\nexport class Operation extends Action {\n  reqdRank = 100;\n  teamCount = 0;\n\n  constructor(params: IOperationParams | null = null) {\n    super(params);\n    if (params && params.reqdRank) this.reqdRank = params.reqdRank;\n    if (params && params.teamCount) this.teamCount = params.teamCount;\n  }\n\n  // For actions that have teams. To be implemented by subtypes.\n  getTeamSuccessBonus(inst: IBladeburner): number {\n    if (this.teamCount && this.teamCount > 0) {\n      this.teamCount = Math.min(this.teamCount, inst.teamSize);\n      const teamMultiplier = Math.pow(this.teamCount, 0.05);\n      return teamMultiplier;\n    }\n\n    return 1;\n  }\n\n  getActionTypeSkillSuccessBonus(inst: IBladeburner): number {\n    return inst.skillMultipliers.successChanceOperation;\n  }\n\n  getChaosDifficultyBonus(inst: IBladeburner /*, params: ISuccessChanceParams*/): number {\n    const city = inst.getCurrentCity();\n    if (city.chaos > BladeburnerConstants.ChaosThreshold) {\n      const diff = 1 + (city.chaos - BladeburnerConstants.ChaosThreshold);\n      const mult = Math.pow(diff, 0.1);\n      return mult;\n    }\n\n    return 1;\n  }\n\n  toJSON(): any {\n    return Generic_toJSON(\"Operation\", this);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Operation {\n    return Generic_fromJSON(Operation, value.data);\n  }\n}\n\nReviver.constructors.Operation = Operation;\n","import { Augmentations } from \"./Augmentation/Augmentations\";\nimport { augmentationExists, initAugmentations } from \"./Augmentation/AugmentationHelpers\";\nimport { AugmentationNames } from \"./Augmentation/data/AugmentationNames\";\nimport { initBitNodeMultipliers } from \"./BitNode/BitNode\";\nimport { Bladeburner } from \"./Bladeburner/Bladeburner\";\nimport { Companies, initCompanies } from \"./Company/Companies\";\nimport { resetIndustryResearchTrees } from \"./Corporation/IndustryData\";\nimport { Programs } from \"./Programs/Programs\";\nimport { Faction } from \"./Faction/Faction\";\nimport { Factions, initFactions } from \"./Faction/Factions\";\nimport { joinFaction } from \"./Faction/FactionHelpers\";\nimport { updateHashManagerCapacity } from \"./Hacknet/HacknetHelpers\";\nimport { initMessages } from \"./Message/MessageHelpers\";\nimport { prestigeWorkerScripts } from \"./NetscriptWorker\";\nimport { Player } from \"./Player\";\nimport { Router } from \"./ui/GameRoot\";\nimport { resetPidCounter } from \"./Netscript/Pid\";\nimport { LiteratureNames } from \"./Literature/data/LiteratureNames\";\n\nimport { AllServers, AddToAllServers, initForeignServers, prestigeAllServers } from \"./Server/AllServers\";\nimport { prestigeHomeComputer } from \"./Server/ServerHelpers\";\nimport { SourceFileFlags, updateSourceFileFlags } from \"./SourceFile/SourceFileFlags\";\nimport { SpecialServerIps, prestigeSpecialServerIps, SpecialServerNames } from \"./Server/SpecialServerIps\";\nimport { deleteStockMarket, initStockMarket, initSymbolToStockMap } from \"./StockMarket/StockMarket\";\nimport { Terminal } from \"./Terminal\";\n\nimport { dialogBoxCreate } from \"./ui/React/DialogBox\";\n\nimport Decimal from \"decimal.js\";\n\nconst BitNode8StartingMoney = 250e6;\n\n// Prestige by purchasing augmentation\nfunction prestigeAugmentation(): void {\n  initBitNodeMultipliers(Player);\n\n  const maintainMembership = Player.factions.filter(function (faction) {\n    return Factions[faction].getInfo().keep;\n  });\n  Player.prestigeAugmentation();\n\n  // Delete all Worker Scripts objects\n  prestigeWorkerScripts();\n\n  const homeComp = Player.getHomeComputer();\n  // Delete all servers except home computer\n  prestigeAllServers();\n\n  // Delete Special Server IPs\n  prestigeSpecialServerIps(); // Must be done before initForeignServers()\n\n  // Reset home computer (only the programs) and add to AllServers\n  AddToAllServers(homeComp);\n  prestigeHomeComputer(homeComp);\n\n  if (augmentationExists(AugmentationNames.Neurolink) && Augmentations[AugmentationNames.Neurolink].owned) {\n    homeComp.programs.push(Programs.FTPCrackProgram.name);\n    homeComp.programs.push(Programs.RelaySMTPProgram.name);\n  }\n  if (augmentationExists(AugmentationNames.CashRoot) && Augmentations[AugmentationNames.CashRoot].owned) {\n    Player.setMoney(1e6);\n    homeComp.programs.push(Programs.BruteSSHProgram.name);\n  }\n  if (augmentationExists(AugmentationNames.PCMatrix) && Augmentations[AugmentationNames.PCMatrix].owned) {\n    homeComp.programs.push(Programs.DeepscanV1.name);\n    homeComp.programs.push(Programs.AutoLink.name);\n  }\n\n  // Re-create foreign servers\n  initForeignServers(Player.getHomeComputer());\n\n  // Gain favor for Companies\n  for (const member in Companies) {\n    if (Companies.hasOwnProperty(member)) {\n      Companies[member].gainFavor();\n    }\n  }\n\n  // Gain favor for factions\n  for (const member in Factions) {\n    if (Factions.hasOwnProperty(member)) {\n      Factions[member].gainFavor();\n    }\n  }\n\n  // Stop a Terminal action if there is onerror\n  if (Terminal.action !== null) {\n    Terminal.finishAction(Router, Player, true);\n  }\n\n  // Re-initialize things - This will update any changes\n  initFactions(); // Factions must be initialized before augmentations\n\n  Player.factions = Player.factions.concat(maintainMembership);\n  Player.factions.map((f) => (Factions[f].isMember = true));\n  initAugmentations(); // Calls reapplyAllAugmentations() and resets Player multipliers\n  Player.reapplyAllSourceFiles();\n  initCompanies();\n\n  // Messages\n  initMessages();\n\n  // Gang\n  const gang = Player.gang;\n  if (Player.inGang() && gang !== null) {\n    const faction = Factions[gang.facName];\n    if (faction instanceof Faction) {\n      joinFaction(faction);\n    }\n  }\n\n  // Cancel Bladeburner action\n  if (Player.bladeburner instanceof Bladeburner) {\n    Player.bladeburner.prestige();\n  }\n\n  // BitNode 8: Ghost of Wall Street\n  if (Player.bitNodeN === 8) {\n    Player.money = new Decimal(BitNode8StartingMoney);\n  }\n  if (Player.bitNodeN === 8 || SourceFileFlags[8] > 0) {\n    Player.hasWseAccount = true;\n    Player.hasTixApiAccess = true;\n  }\n\n  // Reset Stock market\n  if (Player.hasWseAccount) {\n    initStockMarket();\n    initSymbolToStockMap();\n  }\n\n  // Red Pill\n  if (augmentationExists(AugmentationNames.TheRedPill) && Augmentations[AugmentationNames.TheRedPill].owned) {\n    const WorldDaemonIP = SpecialServerIps[SpecialServerNames.WorldDaemon];\n    if (typeof WorldDaemonIP !== \"string\") throw new Error(\"WorldDaemonIP should be string\");\n    const WorldDaemon = AllServers[WorldDaemonIP];\n    const DaedalusServerIP = SpecialServerIps[SpecialServerNames.DaedalusServer];\n    if (typeof DaedalusServerIP !== \"string\") throw new Error(\"DaedalusServerIP should be string\");\n    const DaedalusServer = AllServers[DaedalusServerIP];\n    if (WorldDaemon && DaedalusServer) {\n      WorldDaemon.serversOnNetwork.push(DaedalusServer.ip);\n      DaedalusServer.serversOnNetwork.push(WorldDaemon.ip);\n    }\n  }\n\n  resetPidCounter();\n}\n\n// Prestige by destroying Bit Node and gaining a Source File\nfunction prestigeSourceFile(flume: boolean): void {\n  initBitNodeMultipliers(Player);\n  updateSourceFileFlags(Player);\n\n  Player.prestigeSourceFile();\n  prestigeWorkerScripts(); // Delete all Worker Scripts objects\n\n  const homeComp = Player.getHomeComputer();\n\n  // Delete all servers except home computer\n  prestigeAllServers(); // Must be done before initForeignServers()\n\n  // Delete Special Server IPs\n  prestigeSpecialServerIps();\n\n  // Reset home computer (only the programs) and add to AllServers\n  AddToAllServers(homeComp);\n  prestigeHomeComputer(homeComp);\n\n  // Re-create foreign servers\n  initForeignServers(Player.getHomeComputer());\n\n  if (SourceFileFlags[9] >= 2) {\n    homeComp.setMaxRam(128);\n  } else if (SourceFileFlags[1] > 0) {\n    homeComp.setMaxRam(32);\n  } else {\n    homeComp.setMaxRam(8);\n  }\n  homeComp.cpuCores = 1;\n\n  // Reset favor for Companies\n  for (const member in Companies) {\n    if (Companies.hasOwnProperty(member)) {\n      Companies[member].favor = 0;\n    }\n  }\n\n  // Reset favor for factions\n  for (const member in Factions) {\n    if (Factions.hasOwnProperty(member)) {\n      Factions[member].favor = 0;\n    }\n  }\n\n  // Stop a Terminal action if there is one\n  if (Terminal.action !== null) {\n    Terminal.finishAction(Router, Player, true);\n  }\n\n  // Delete all Augmentations\n  for (const name in Augmentations) {\n    if (Augmentations.hasOwnProperty(name)) {\n      delete Augmentations[name];\n    }\n  }\n\n  // Give levels of NeuroFluxGoverner for Source-File 12. Must be done here before Augmentations are recalculated\n  if (SourceFileFlags[12] > 0) {\n    Player.augmentations.push({\n      name: AugmentationNames.NeuroFluxGovernor,\n      level: SourceFileFlags[12],\n    });\n  }\n\n  // Re-initialize things - This will update any changes\n  initFactions(); // Factions must be initialized before augmentations\n  initAugmentations(); // Calls reapplyAllAugmentations() and resets Player multipliers\n  Player.reapplyAllSourceFiles();\n  initCompanies();\n\n  // Messages\n  initMessages();\n\n  // BitNode 3: Corporatocracy\n  if (Player.bitNodeN === 3) {\n    homeComp.messages.push(LiteratureNames.CorporationManagementHandbook);\n    dialogBoxCreate(\n      \"You received a copy of the Corporation Management Handbook on your home computer. \" +\n        \"Read it if you need help getting started with Corporations!\",\n    );\n  }\n\n  // BitNode 8: Ghost of Wall Street\n  if (Player.bitNodeN === 8) {\n    Player.money = new Decimal(BitNode8StartingMoney);\n  }\n  if (Player.bitNodeN === 8 || SourceFileFlags[8] > 0) {\n    Player.hasWseAccount = true;\n    Player.hasTixApiAccess = true;\n  }\n\n  // Bit Node 10: Digital Carbon\n  if (Player.bitNodeN === 10) {\n    dialogBoxCreate(\"Visit VitaLife in New Tokyo if you'd like to purchase a new sleeve!\");\n  }\n\n  // Reset Stock market, gang, and corporation\n  if (Player.hasWseAccount) {\n    initStockMarket();\n    initSymbolToStockMap();\n  } else {\n    deleteStockMarket();\n  }\n\n  Player.gang = null;\n  Player.corporation = null;\n  resetIndustryResearchTrees();\n  Player.bladeburner = null;\n\n  // Source-File 9 (level 3) effect\n  if (SourceFileFlags[9] >= 3) {\n    const hserver = Player.createHacknetServer();\n\n    hserver.level = 100;\n    hserver.cores = 10;\n    hserver.cache = 5;\n    hserver.updateHashRate(Player.hacknet_node_money_mult);\n    hserver.updateHashCapacity();\n    updateHashManagerCapacity(Player);\n  }\n\n  // Gain int exp\n  if (SourceFileFlags[5] !== 0 && !flume) Player.gainIntelligenceExp(300);\n\n  resetPidCounter();\n}\n\nexport { prestigeAugmentation, prestigeSourceFile };\n","export class PlayerOwnedAugmentation {\n  level = 1;\n  name = \"\";\n\n  constructor(name = \"\") {\n    this.name = name;\n  }\n}\n\nexport interface IPlayerOwnedAugmentation {\n  level: number;\n  name: string;\n}\n","export interface RNG {\n  random(): number;\n}\n\n/*\n * very bad RNG, meant to be used as introduction to RNG manipulation. It has a\n * period of 1024.\n */\nclass RNG0 implements RNG {\n  x: number;\n  m = 1024;\n  a = 341;\n  c = 1;\n\n  constructor() {\n    this.x = 0;\n    this.reset();\n  }\n\n  step(): void {\n    this.x = (this.a * this.x + this.c) % this.m;\n  }\n\n  random(): number {\n    this.step();\n    return this.x / this.m;\n  }\n\n  reset(): void {\n    this.x = new Date().getTime() % this.m;\n  }\n}\n\nexport const BadRNG: RNG0 = new RNG0();\n\n/*\n * Wichmann–Hill PRNG\n * The period is 6e12.\n */\nexport class WHRNG implements RNG {\n  s1 = 0;\n  s2 = 0;\n  s3 = 0;\n\n  constructor(totalPlaytime: number) {\n    // This one is seeded by the players total play time.\n    const v: number = (totalPlaytime / 1000) % 30000;\n    this.s1 = v;\n    this.s2 = v;\n    this.s3 = v;\n  }\n\n  step(): void {\n    this.s1 = (171 * this.s1) % 30269;\n    this.s2 = (172 * this.s2) % 30307;\n    this.s3 = (170 * this.s3) % 30323;\n  }\n\n  random(): number {\n    this.step();\n    return (this.s1 / 30269.0 + this.s2 / 30307.0 + this.s3 / 30323.0) % 1.0;\n  }\n}\n","import { CONSTANTS } from \"../Constants\";\nimport * as names from \"./data/companypositionnames\";\n\n/* tslint:disable:completed-docs */\n\nexport interface IConstructorParams {\n  name: string;\n  nextPosition: string | null;\n  baseSalary: number;\n  repMultiplier: number;\n\n  reqdHacking?: number;\n  reqdStrength?: number;\n  reqdDefense?: number;\n  reqdDexterity?: number;\n  reqdAgility?: number;\n  reqdCharisma?: number;\n  reqdReputation?: number;\n\n  hackingEffectiveness?: number;\n  strengthEffectiveness?: number;\n  defenseEffectiveness?: number;\n  dexterityEffectiveness?: number;\n  agilityEffectiveness?: number;\n  charismaEffectiveness?: number;\n\n  hackingExpGain?: number;\n  strengthExpGain?: number;\n  defenseExpGain?: number;\n  dexterityExpGain?: number;\n  agilityExpGain?: number;\n  charismaExpGain?: number;\n}\n\nexport class CompanyPosition {\n  /**\n   * Position title\n   */\n  name: string;\n\n  /**\n   * Title of next position to be promoted to\n   */\n  nextPosition: string | null;\n\n  /**\n   * Base salary for this position ($ per 200ms game cycle)\n   * Will be multiplier by a company-specific multiplier for final salary\n   */\n  baseSalary: number;\n\n  /**\n   * Reputation multiplier\n   */\n  repMultiplier: number;\n\n  /**\n   * Required stats to earn this position\n   */\n  requiredAgility: number;\n  requiredCharisma: number;\n  requiredDefense: number;\n  requiredDexterity: number;\n  requiredHacking: number;\n  requiredStrength: number;\n\n  /**\n   * Required company reputation to earn this position\n   */\n  requiredReputation: number;\n\n  /**\n   * Effectiveness of each stat time for job performance\n   */\n  hackingEffectiveness: number;\n  strengthEffectiveness: number;\n  defenseEffectiveness: number;\n  dexterityEffectiveness: number;\n  agilityEffectiveness: number;\n  charismaEffectiveness: number;\n\n  /**\n   * Experience gain for performing job (per 200ms game cycle)\n   */\n  hackingExpGain: number;\n  strengthExpGain: number;\n  defenseExpGain: number;\n  dexterityExpGain: number;\n  agilityExpGain: number;\n  charismaExpGain: number;\n\n  constructor(p: IConstructorParams) {\n    this.name = p.name;\n    this.nextPosition = p.nextPosition;\n    this.baseSalary = p.baseSalary;\n    this.repMultiplier = p.repMultiplier;\n\n    this.requiredHacking = p.reqdHacking != null ? p.reqdHacking : 0;\n    this.requiredStrength = p.reqdStrength != null ? p.reqdStrength : 0;\n    this.requiredDefense = p.reqdDefense != null ? p.reqdDefense : 0;\n    this.requiredDexterity = p.reqdDexterity != null ? p.reqdDexterity : 0;\n    this.requiredAgility = p.reqdAgility != null ? p.reqdAgility : 0;\n    this.requiredCharisma = p.reqdCharisma != null ? p.reqdCharisma : 0;\n    this.requiredReputation = p.reqdReputation != null ? p.reqdReputation : 0;\n\n    this.hackingEffectiveness = p.hackingEffectiveness != null ? p.hackingEffectiveness : 0;\n    this.strengthEffectiveness = p.strengthEffectiveness != null ? p.strengthEffectiveness : 0;\n    this.defenseEffectiveness = p.defenseEffectiveness != null ? p.defenseEffectiveness : 0;\n    this.dexterityEffectiveness = p.dexterityEffectiveness != null ? p.dexterityEffectiveness : 0;\n    this.agilityEffectiveness = p.agilityEffectiveness != null ? p.agilityEffectiveness : 0;\n    this.charismaEffectiveness = p.charismaEffectiveness != null ? p.charismaEffectiveness : 0;\n\n    if (\n      Math.round(\n        this.hackingEffectiveness +\n          this.strengthEffectiveness +\n          this.defenseEffectiveness +\n          this.dexterityEffectiveness +\n          this.agilityEffectiveness +\n          this.charismaEffectiveness,\n      ) !== 100\n    ) {\n      console.error(`CompanyPosition ${this.name} parameters do not sum to 100`);\n    }\n\n    this.hackingExpGain = p.hackingExpGain != null ? p.hackingExpGain : 0;\n    this.strengthExpGain = p.strengthExpGain != null ? p.strengthExpGain : 0;\n    this.defenseExpGain = p.defenseExpGain != null ? p.defenseExpGain : 0;\n    this.dexterityExpGain = p.dexterityExpGain != null ? p.dexterityExpGain : 0;\n    this.agilityExpGain = p.agilityExpGain != null ? p.agilityExpGain : 0;\n    this.charismaExpGain = p.charismaExpGain != null ? p.charismaExpGain : 0;\n  }\n\n  calculateJobPerformance(hack: number, str: number, def: number, dex: number, agi: number, cha: number): number {\n    const hackRatio: number = (this.hackingEffectiveness * hack) / CONSTANTS.MaxSkillLevel;\n    const strRatio: number = (this.strengthEffectiveness * str) / CONSTANTS.MaxSkillLevel;\n    const defRatio: number = (this.defenseEffectiveness * def) / CONSTANTS.MaxSkillLevel;\n    const dexRatio: number = (this.dexterityEffectiveness * dex) / CONSTANTS.MaxSkillLevel;\n    const agiRatio: number = (this.agilityEffectiveness * agi) / CONSTANTS.MaxSkillLevel;\n    const chaRatio: number = (this.charismaEffectiveness * cha) / CONSTANTS.MaxSkillLevel;\n\n    let reputationGain: number =\n      (this.repMultiplier * (hackRatio + strRatio + defRatio + dexRatio + agiRatio + chaRatio)) / 100;\n    if (isNaN(reputationGain)) {\n      console.error(\"Company reputation gain calculated to be NaN\");\n      reputationGain = 0;\n    }\n\n    return reputationGain;\n  }\n\n  isSoftwareJob(): boolean {\n    return names.SoftwareCompanyPositions.includes(this.name);\n  }\n\n  isITJob(): boolean {\n    return names.ITCompanyPositions.includes(this.name);\n  }\n\n  isSecurityEngineerJob(): boolean {\n    return names.SecurityEngineerCompanyPositions.includes(this.name);\n  }\n\n  isNetworkEngineerJob(): boolean {\n    return names.NetworkEngineerCompanyPositions.includes(this.name);\n  }\n\n  isBusinessJob(): boolean {\n    return names.BusinessCompanyPositions.includes(this.name);\n  }\n\n  isSecurityJob(): boolean {\n    return names.SecurityCompanyPositions.includes(this.name);\n  }\n\n  isAgentJob(): boolean {\n    return names.AgentCompanyPositions.includes(this.name);\n  }\n\n  isSoftwareConsultantJob(): boolean {\n    return names.SoftwareConsultantCompanyPositions.includes(this.name);\n  }\n\n  isBusinessConsultantJob(): boolean {\n    return names.BusinessConsultantCompanyPositions.includes(this.name);\n  }\n\n  isPartTimeJob(): boolean {\n    return names.PartTimeCompanyPositions.includes(this.name);\n  }\n}\n","import React from \"react\";\nimport { SourceFile } from \"./SourceFile\";\nimport { IMap } from \"../types\";\n\nexport const SourceFiles: IMap<SourceFile> = {};\n\nSourceFiles[\"SourceFile1\"] = new SourceFile(\n  1,\n  (\n    <>\n      This Source-File lets the player start with 32GB of RAM on his/her home computer. It also increases all of the\n      player's multipliers by:\n      <br />\n      <br />\n      Level 1: 16%\n      <br />\n      Level 2: 24%\n      <br />\n      Level 3: 28%\n    </>\n  ),\n);\nSourceFiles[\"SourceFile2\"] = new SourceFile(\n  2,\n  (\n    <>\n      This Source-File allows you to form gangs in other BitNodes once your karma decreases to a certain value. It also\n      increases the player's crime success rate, crime money, and charisma multipliers by:\n      <br />\n      <br />\n      Level 1: 24%\n      <br />\n      Level 2: 36%\n      <br />\n      Level 3: 42%\n    </>\n  ),\n);\nSourceFiles[\"SourceFile3\"] = new SourceFile(\n  3,\n  (\n    <>\n      This Source-File lets you create corporations on other BitNodes (although some BitNodes will disable this\n      mechanic). This Source-File also increases your charisma and company salary multipliers by:\n      <br />\n      Level 1: 8%\n      <br />\n      Level 2: 12%\n      <br />\n      Level 3: 14%\n    </>\n  ),\n);\nSourceFiles[\"SourceFile4\"] = new SourceFile(\n  4,\n  (\n    <>\n      This Source-File lets you access and use the Singularity Functions in every BitNode. Every level of this\n      Source-File opens up more of the Singularity Functions you can use.\n    </>\n  ),\n);\nSourceFiles[\"SourceFile5\"] = new SourceFile(\n  5,\n  (\n    <>\n      This Source-File grants a special new stat called Intelligence. Intelligence is unique because it is permanent and\n      persistent (it never gets reset back to 1). However, gaining Intelligence experience is much slower than other\n      stats, and it is also hidden (you won't know when you gain experience and how much). Higher Intelligence levels\n      will boost your production for many actions in the game. In addition, this Source-File will unlock the\n      getBitNodeMultipliers() and getServer() Netscript functions, as well as the formulas API, and will raise all of\n      your hacking-related multipliers by:\n      <br />\n      <br />\n      Level 1: 8%\n      <br />\n      Level 2: 12%\n      <br />\n      Level 3: 14%\n    </>\n  ),\n);\nSourceFiles[\"SourceFile6\"] = new SourceFile(\n  6,\n  (\n    <>\n      This Source-File allows you to access the NSA's Bladeburner Division in other BitNodes. In addition, this\n      Source-File will raise both the level and experience gain rate of all your combat stats by:\n      <br />\n      <br />\n      Level 1: 8%\n      <br />\n      Level 2: 12%\n      <br />\n      Level 3: 14%\n    </>\n  ),\n);\nSourceFiles[\"SourceFile7\"] = new SourceFile(\n  7,\n  (\n    <>\n      This Source-File allows you to access the Bladeburner Netscript API in other BitNodes. In addition, this\n      Source-File will increase all of your Bladeburner multipliers by:\n      <br />\n      <br />\n      Level 1: 8%\n      <br />\n      Level 2: 12%\n      <br />\n      Level 3: 14%\n    </>\n  ),\n);\nSourceFiles[\"SourceFile8\"] = new SourceFile(\n  8,\n  (\n    <>\n      This Source-File grants the following benefits:\n      <br />\n      <br />\n      Level 1: Permanent access to WSE and TIX API\n      <br />\n      Level 2: Ability to short stocks in other BitNodes\n      <br />\n      Level 3: Ability to use limit/stop orders in other BitNodes\n      <br />\n      <br />\n      This Source-File also increases your hacking growth multipliers by:\n      <br />\n      Level 1: 12%\n      <br />\n      Level 2: 18%\n      <br />\n      Level 3: 21%\n    </>\n  ),\n);\nSourceFiles[\"SourceFile9\"] = new SourceFile(\n  9,\n  (\n    <>\n      This Source-File grants the following benefits:\n      <br />\n      <br />\n      Level 1: Permanently unlocks the Hacknet Server in other BitNodes\n      <br />\n      Level 2: You start with 128GB of RAM on your home computer when entering a new BitNode\n      <br />\n      Level 3: Grants a highly-upgraded Hacknet Server when entering a new BitNode\n      <br />\n      <br />\n      (Note that the Level 3 effect of this Source-File only applies when entering a new BitNode, NOT when installing\n      Augmentations)\n    </>\n  ),\n);\nSourceFiles[\"SourceFile10\"] = new SourceFile(\n  10,\n  (\n    <>\n      This Source-File unlocks Sleeve technology in other BitNodes. Each level of this Source-File also grants you a\n      Duplicate Sleeve\n    </>\n  ),\n);\nSourceFiles[\"SourceFile11\"] = new SourceFile(\n  11,\n  (\n    <>\n      This Source-File makes it so that company favor increases BOTH the player's salary and reputation gain rate at\n      that company by 1% per favor (rather than just the reputation gain). This Source-File also increases the player's\n      company salary and reputation gain multipliers by:\n      <br />\n      <br />\n      Level 1: 32%\n      <br />\n      Level 2: 48%\n      <br />\n      Level 3: 56%\n      <br />\n      <br />\n      It also reduces the price increase for every aug bought by:\n      <br />\n      <br />\n      Level 1: 4%\n      <br />\n      Level 2: 6%\n      <br />\n      Level 3: 7%\n    </>\n  ),\n);\nSourceFiles[\"SourceFile12\"] = new SourceFile(\n  12,\n  <>This Source-File lets the player start with Neuroflux Governor equal to the level of this Source-File.</>,\n);\n","import React from \"react\";\n\nimport { IBladeburner } from \"../IBladeburner\";\nimport { BlackOperation } from \"../BlackOperation\";\nimport { use } from \"../../ui/Context\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  type: number;\n  name: string;\n  rerender: () => void;\n}\nexport function StartButton(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const action = props.bladeburner.getActionObject({ name: props.name, type: props.type });\n  if (action == null) {\n    throw new Error(\"Failed to get Operation Object for: \" + props.name);\n  }\n  let disabled = false;\n  if (action.count < 1) {\n    disabled = true;\n  }\n  if (props.name === \"Raid\" && props.bladeburner.getCurrentCity().comms === 0) {\n    disabled = true;\n  }\n\n  if (action instanceof BlackOperation && props.bladeburner.rank < action.reqdRank) {\n    disabled = true;\n  }\n  function onStart(): void {\n    if (disabled) return;\n    props.bladeburner.action.type = props.type;\n    props.bladeburner.action.name = props.name;\n    props.bladeburner.startAction(player, props.bladeburner.action);\n    props.rerender();\n  }\n\n  return (\n    <Button sx={{ mx: 1 }} disabled={disabled} onClick={onStart}>\n      Start\n    </Button>\n  );\n}\n","/**\n * Class representing a Script instance that is actively running.\n * A Script can have multiple active instances\n */\nimport { Script } from \"./Script\";\nimport { Settings } from \"../Settings/Settings\";\nimport { IMap } from \"../types\";\nimport { Terminal } from \"../Terminal\";\n\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\nimport { getTimestamp } from \"../utils/helpers/getTimestamp\";\n\nexport class RunningScript {\n  // Script arguments\n  args: any[] = [];\n\n  // Map of [key: server ip] -> Hacking data. Used for offline progress calculations.\n  // Hacking data format: [MoneyStolen, NumTimesHacked, NumTimesGrown, NumTimesWeaken]\n  dataMap: IMap<number[]> = {};\n\n  // Script filename\n  filename = \"\";\n\n  // This script's logs. An array of log entries\n  logs: string[] = [];\n\n  // Flag indicating whether the logs have been updated since\n  // the last time the UI was updated\n  logUpd = false;\n\n  // Total amount of hacking experience earned from this script when offline\n  offlineExpGained = 0;\n\n  // Total amount of money made by this script when offline\n  offlineMoneyMade = 0;\n\n  // Number of seconds that the script has been running offline\n  offlineRunningTime = 0.01;\n\n  // Total amount of hacking experience earned from this script when online\n  onlineExpGained = 0;\n\n  // Total amount of money made by this script when online\n  onlineMoneyMade = 0;\n\n  // Number of seconds that this script has been running online\n  onlineRunningTime = 0.01;\n\n  // Process ID. Must be an integer and equals the PID of corresponding WorkerScript\n  pid = -1;\n\n  // How much RAM this script uses for ONE thread\n  ramUsage = 0;\n\n  // IP of the server on which this script is running\n  server = \"\";\n\n  // Number of threads that this script is running with\n  threads = 1;\n\n  constructor(script: Script | null = null, args: any[] = []) {\n    if (script == null) {\n      return;\n    }\n    this.filename = script.filename;\n    this.args = args;\n    this.server = script.server;\n    this.ramUsage = script.ramUsage;\n  }\n\n  log(txt: string): void {\n    if (this.logs.length > Settings.MaxLogCapacity) {\n      this.logs.shift();\n    }\n\n    let logEntry = txt;\n    if (Settings.EnableTimestamps) {\n      logEntry = \"[\" + getTimestamp() + \"] \" + logEntry;\n    }\n\n    this.logs.push(logEntry);\n    this.logUpd = true;\n  }\n\n  displayLog(): void {\n    for (let i = 0; i < this.logs.length; ++i) {\n      Terminal.print(this.logs[i]);\n    }\n  }\n\n  clearLog(): void {\n    this.logs.length = 0;\n  }\n\n  // Update the moneyStolen and numTimesHack maps when hacking\n  recordHack(serverIp: string, moneyGained: number, n = 1): void {\n    if (this.dataMap[serverIp] == null || this.dataMap[serverIp].constructor !== Array) {\n      this.dataMap[serverIp] = [0, 0, 0, 0];\n    }\n    this.dataMap[serverIp][0] += moneyGained;\n    this.dataMap[serverIp][1] += n;\n  }\n\n  // Update the grow map when calling grow()\n  recordGrow(serverIp: string, n = 1): void {\n    if (this.dataMap[serverIp] == null || this.dataMap[serverIp].constructor !== Array) {\n      this.dataMap[serverIp] = [0, 0, 0, 0];\n    }\n    this.dataMap[serverIp][2] += n;\n  }\n\n  // Update the weaken map when calling weaken() {\n  recordWeaken(serverIp: string, n = 1): void {\n    if (this.dataMap[serverIp] == null || this.dataMap[serverIp].constructor !== Array) {\n      this.dataMap[serverIp] = [0, 0, 0, 0];\n    }\n    this.dataMap[serverIp][3] += n;\n  }\n\n  // Serialize the current object to a JSON save state\n  toJSON(): any {\n    return Generic_toJSON(\"RunningScript\", this);\n  }\n\n  // Initializes a RunningScript Object from a JSON save state\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): RunningScript {\n    return Generic_fromJSON(RunningScript, value.data);\n  }\n}\n\nReviver.constructors.RunningScript = RunningScript;\n","/**\n * Class representing a script file.\n *\n * This does NOT represent a script that is actively running and\n * being evaluated. See RunningScript for that\n */\nimport { calculateRamUsage } from \"./RamCalculations\";\nimport { ScriptUrl } from \"./ScriptUrl\";\n\nimport { setTimeoutRef } from \"../utils/SetTimeoutRef\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\nimport { roundToTwo } from \"../utils/helpers/roundToTwo\";\n\nlet globalModuleSequenceNumber = 0;\n\nexport class Script {\n  // Code for this script\n  code = \"\";\n\n  // Filename for the script file\n  filename = \"\";\n\n  // url of the script if any, only for NS2.\n  url = \"\";\n\n  // The dynamic module generated for this script when it is run.\n  // This is only applicable for NetscriptJS\n  module: any = \"\";\n\n  // The timestamp when when the script was last updated.\n  moduleSequenceNumber: number;\n\n  // Only used with NS2 scripts; the list of dependency script filenames. This is constructed\n  // whenever the script is first evaluated, and therefore may be out of date if the script\n  // has been updated since it was last run.\n  dependencies: ScriptUrl[] = [];\n\n  // Amount of RAM this Script requres to run\n  ramUsage = 0;\n\n  // IP of server that this script is on.\n  server = \"\";\n\n  constructor(fn = \"\", code = \"\", server = \"\", otherScripts: Script[] = []) {\n    this.filename = fn;\n    this.code = code;\n    this.ramUsage = 0;\n    this.server = server; // IP of server this script is on\n    this.module = \"\";\n    this.moduleSequenceNumber = ++globalModuleSequenceNumber;\n    if (this.code !== \"\") {\n      this.updateRamUsage(otherScripts);\n    }\n  }\n\n  /**\n   * Download the script as a file\n   */\n  download(): void {\n    const filename = this.filename + \".js\";\n    const file = new Blob([this.code], { type: \"text/plain\" });\n    if (window.navigator.msSaveOrOpenBlob) {\n      // IE10+\n      window.navigator.msSaveOrOpenBlob(file, filename);\n    } else {\n      // Others\n      const a = document.createElement(\"a\"),\n        url = URL.createObjectURL(file);\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      setTimeoutRef(function () {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(url);\n      }, 0);\n    }\n  }\n\n  /**\n   * Marks this script as having been updated. It will be recompiled next time something tries\n   * to exec it.\n   */\n  markUpdated(): void {\n    this.module = \"\";\n    this.moduleSequenceNumber = ++globalModuleSequenceNumber;\n  }\n\n  /**\n   * Save a script from the script editor\n   * @param {string} code - The new contents of the script\n   * @param {Script[]} otherScripts - Other scripts on the server. Used to process imports\n   */\n  saveScript(filename: string, code: string, serverIp: string, otherScripts: Script[]): void {\n    // Update code and filename\n    this.code = code.replace(/^\\s+|\\s+$/g, \"\");\n\n    this.filename = filename;\n    this.server = serverIp;\n    this.updateRamUsage(otherScripts);\n    this.markUpdated();\n  }\n\n  /**\n   * Calculates and updates the script's RAM usage based on its code\n   * @param {Script[]} otherScripts - Other scripts on the server. Used to process imports\n   */\n  async updateRamUsage(otherScripts: Script[]): Promise<void> {\n    const res = await calculateRamUsage(this.code, otherScripts);\n    if (res > 0) {\n      this.ramUsage = roundToTwo(res);\n    }\n  }\n\n  // Serialize the current object to a JSON save state\n  toJSON(): any {\n    return Generic_toJSON(\"Script\", this);\n  }\n\n  // Initializes a Script Object from a JSON save state\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Script {\n    return Generic_fromJSON(Script, value.data);\n  }\n}\n\nReviver.constructors.Script = Script;\n","// The Research Map is an object that holds all Corporation Research objects\n// as values. They are identified by their names\nimport { Research, IConstructorParams } from \"./Research\";\nimport { researchMetadata } from \"./data/ResearchMetadata\";\nimport { IMap } from \"../types\";\n\nexport const ResearchMap: IMap<Research> = {};\n\nfunction addResearch(p: IConstructorParams): void {\n  if (ResearchMap[p.name] != null) {\n    console.warn(`Duplicate Research being defined: ${p.name}`);\n  }\n  ResearchMap[p.name] = new Research(p);\n}\n\nfor (const metadata of researchMetadata) {\n  addResearch(metadata);\n}\n","import { Factions } from \"./Faction/Factions\";\nimport { IPlayer } from \"./PersonObjects/IPlayer\";\n\nexport let LastExportBonus = 0;\n\nconst bonusTimer = 24 * 60 * 60 * 1000; // 24h\nexport function canGetBonus(): boolean {\n  const now = new Date().getTime();\n  if (now - LastExportBonus > bonusTimer) return true;\n  return false;\n}\n\nexport function onExport(p: IPlayer): void {\n  if (!canGetBonus()) return;\n  for (const facName of p.factions) {\n    Factions[facName].favor++;\n  }\n  LastExportBonus = new Date().getTime();\n}\n\nexport function setLastExportBonus(unixTime: number): void {\n  LastExportBonus = unixTime;\n}\n","import { EventEmitter } from \"../../utils/EventEmitter\";\nexport const ITutorialEvents = new EventEmitter<[]>();\n","import {\n  CodingContract,\n  CodingContractRewardType,\n  CodingContractTypes,\n  ICodingContractReward,\n} from \"./CodingContracts\";\nimport { Factions } from \"./Faction/Factions\";\nimport { Player } from \"./Player\";\nimport { AllServers } from \"./Server/AllServers\";\nimport { GetServerByHostname } from \"./Server/ServerHelpers\";\nimport { SpecialServerNames } from \"./Server/SpecialServerIps\";\nimport { Server } from \"./Server/Server\";\nimport { HacknetServer } from \"./Hacknet/HacknetServer\";\n\nimport { getRandomInt } from \"./utils/helpers/getRandomInt\";\n\nexport function generateRandomContract(): void {\n  // First select a random problem type\n  const problemType = getRandomProblemType();\n\n  // Then select a random reward type. 'Money' will always be the last reward type\n  const reward = getRandomReward();\n\n  // Choose random server\n  const randServer = getRandomServer();\n\n  const contractFn = getRandomFilename(randServer, reward);\n  const contract = new CodingContract(contractFn, problemType, reward);\n\n  randServer.addContract(contract);\n}\n\nexport function generateRandomContractOnHome(): void {\n  // First select a random problem type\n  const problemType = getRandomProblemType();\n\n  // Then select a random reward type. 'Money' will always be the last reward type\n  const reward = getRandomReward();\n\n  // Choose random server\n  const serv = Player.getHomeComputer();\n\n  const contractFn = getRandomFilename(serv, reward);\n  const contract = new CodingContract(contractFn, problemType, reward);\n\n  serv.addContract(contract);\n}\n\nexport interface IGenerateContractParams {\n  problemType?: string;\n  server?: string;\n  fn?: string;\n}\n\nexport function generateContract(params: IGenerateContractParams): void {\n  // Problem Type\n  let problemType;\n  const problemTypes = Object.keys(CodingContractTypes);\n  if (params.problemType != null && problemTypes.includes(params.problemType)) {\n    problemType = params.problemType;\n  } else {\n    problemType = getRandomProblemType();\n  }\n\n  // Reward Type - This is always random for now\n  const reward = getRandomReward();\n\n  // Server\n  let server;\n  if (params.server != null) {\n    server = GetServerByHostname(params.server);\n    if (server == null) {\n      server = AllServers[params.server];\n    }\n    if (server == null) {\n      server = getRandomServer();\n    }\n  } else {\n    server = getRandomServer();\n  }\n\n  // Filename\n  let fn;\n  if (params.fn != null) {\n    fn = params.fn;\n  } else {\n    fn = getRandomFilename(server, reward);\n  }\n\n  const contract = new CodingContract(fn, problemType, reward);\n  server.addContract(contract);\n}\n\n// Ensures that a contract's reward type is valid\nfunction sanitizeRewardType(rewardType: CodingContractRewardType): CodingContractRewardType {\n  let type = rewardType; // Create copy\n\n  const factionsThatAllowHacking = Player.factions.filter((fac) => {\n    try {\n      return Factions[fac].getInfo().offerHackingWork;\n    } catch (e) {\n      console.error(`Error when trying to filter Hacking Factions for Coding Contract Generation: ${e}`);\n      return false;\n    }\n  });\n  if (type === CodingContractRewardType.FactionReputation && factionsThatAllowHacking.length === 0) {\n    type = CodingContractRewardType.CompanyReputation;\n  }\n  if (type === CodingContractRewardType.FactionReputationAll && factionsThatAllowHacking.length === 0) {\n    type = CodingContractRewardType.CompanyReputation;\n  }\n  if (type === CodingContractRewardType.CompanyReputation && Object.keys(Player.jobs).length === 0) {\n    type = CodingContractRewardType.Money;\n  }\n\n  return type;\n}\n\nfunction getRandomProblemType(): string {\n  const problemTypes = Object.keys(CodingContractTypes);\n  const randIndex = getRandomInt(0, problemTypes.length - 1);\n\n  return problemTypes[randIndex];\n}\n\nfunction getRandomReward(): ICodingContractReward {\n  const reward: ICodingContractReward = {\n    name: \"\",\n    type: getRandomInt(0, CodingContractRewardType.Money),\n  };\n  reward.type = sanitizeRewardType(reward.type);\n\n  // Add additional information based on the reward type\n  const factionsThatAllowHacking = Player.factions.filter((fac) => {\n    try {\n      return Factions[fac].getInfo().offerHackingWork;\n    } catch (e) {\n      console.error(`Error when trying to filter Hacking Factions for Coding Contract Generation: ${e}`);\n      return false;\n    }\n  });\n\n  switch (reward.type) {\n    case CodingContractRewardType.FactionReputation: {\n      // Get a random faction that player is a part of. That\n      // faction must allow hacking contracts\n      const numFactions = factionsThatAllowHacking.length;\n      const randFaction = factionsThatAllowHacking[getRandomInt(0, numFactions - 1)];\n      reward.name = randFaction;\n      break;\n    }\n    case CodingContractRewardType.CompanyReputation: {\n      const allJobs = Object.keys(Player.jobs);\n      if (allJobs.length > 0) {\n        reward.name = allJobs[getRandomInt(0, allJobs.length - 1)];\n      } else {\n        reward.type = CodingContractRewardType.Money;\n      }\n      break;\n    }\n    default:\n      break;\n  }\n\n  return reward;\n}\n\nfunction getRandomServer(): Server | HacknetServer {\n  const servers = Object.keys(AllServers);\n  let randIndex = getRandomInt(0, servers.length - 1);\n  let randServer = AllServers[servers[randIndex]];\n\n  // An infinite loop shouldn't ever happen, but to be safe we'll use\n  // a for loop with a limited number of tries\n  for (let i = 0; i < 200; ++i) {\n    if (\n      randServer instanceof Server &&\n      !randServer.purchasedByPlayer &&\n      randServer.hostname !== SpecialServerNames.WorldDaemon\n    ) {\n      break;\n    }\n    randIndex = getRandomInt(0, servers.length - 1);\n    randServer = AllServers[servers[randIndex]];\n  }\n\n  return randServer;\n}\n\nfunction getRandomFilename(server: Server | HacknetServer, reward: ICodingContractReward): string {\n  let contractFn = `contract-${getRandomInt(0, 1e6)}`;\n\n  for (let i = 0; i < 1000; ++i) {\n    if (\n      server.contracts.filter((c: CodingContract) => {\n        return c.fn === contractFn;\n      }).length <= 0\n    ) {\n      break;\n    }\n    contractFn = `contract-${getRandomInt(0, 1e6)}`;\n  }\n\n  if (reward.name) {\n    contractFn += `-${reward.name.replace(/\\s/g, \"\")}`;\n  }\n\n  return contractFn;\n}\n","import { EmployeePositions } from \"./EmployeePositions\";\nimport { CorporationConstants } from \"./data/Constants\";\nimport { getRandomInt } from \"../utils/helpers/getRandomInt\";\nimport { generateRandomString } from \"../utils/StringHelperFunctions\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\nimport { Employee } from \"./Employee\";\nimport { IIndustry } from \"./IIndustry\";\nimport { ICorporation } from \"./ICorporation\";\n\ninterface IParams {\n  loc?: string;\n  size?: number;\n}\n\nexport class OfficeSpace {\n  loc: string;\n  size: number;\n  minEne = 0;\n  maxEne = 100;\n  minHap = 0;\n  maxHap = 100;\n  maxMor = 100;\n  employees: Employee[] = [];\n  employeeProd: { [key: string]: number } = {\n    [EmployeePositions.Operations]: 0,\n    [EmployeePositions.Engineer]: 0,\n    [EmployeePositions.Business]: 0,\n    [EmployeePositions.Management]: 0,\n    [EmployeePositions.RandD]: 0,\n    total: 0,\n  };\n\n  constructor(params: IParams = {}) {\n    this.loc = params.loc ? params.loc : \"\";\n    this.size = params.size ? params.size : 1;\n  }\n\n  atCapacity(): boolean {\n    return this.employees.length >= this.size;\n  }\n\n  process(marketCycles = 1, corporation: ICorporation, industry: IIndustry): number {\n    // HRBuddy AutoRecruitment and training\n    if (industry.hasResearch(\"HRBuddy-Recruitment\") && !this.atCapacity()) {\n      const emp = this.hireRandomEmployee();\n      if (industry.hasResearch(\"HRBuddy-Training\") && emp !== undefined) {\n        emp.pos = EmployeePositions.Training;\n      }\n    }\n\n    // Process Office properties\n    this.maxEne = 100;\n    this.maxHap = 100;\n    this.maxMor = 100;\n    if (industry.hasResearch(\"Go-Juice\")) {\n      this.maxEne += 10;\n    }\n    if (industry.hasResearch(\"JoyWire\")) {\n      this.maxHap += 10;\n    }\n    if (industry.hasResearch(\"Sti.mu\")) {\n      this.maxMor += 10;\n    }\n\n    // Calculate changes in Morale/Happiness/Energy for Employees\n    let perfMult = 1; //Multiplier for employee morale/happiness/energy based on company performance\n    if (corporation.funds < 0 && industry.lastCycleRevenue < 0) {\n      perfMult = Math.pow(0.99, marketCycles);\n    } else if (corporation.funds > 0 && industry.lastCycleRevenue > 0) {\n      perfMult = Math.pow(1.01, marketCycles);\n    }\n\n    const hasAutobrew = industry.hasResearch(\"AutoBrew\");\n    const hasAutoparty = industry.hasResearch(\"AutoPartyManager\");\n\n    let salaryPaid = 0;\n    for (let i = 0; i < this.employees.length; ++i) {\n      const emp = this.employees[i];\n      if (hasAutoparty) {\n        emp.mor = this.maxMor;\n        emp.hap = this.maxHap;\n      } else {\n        emp.mor *= perfMult;\n        emp.hap *= perfMult;\n        emp.mor = Math.min(emp.mor, this.maxMor);\n        emp.hap = Math.min(emp.hap, this.maxHap);\n      }\n\n      if (hasAutobrew) {\n        emp.ene = this.maxEne;\n      } else {\n        emp.ene *= perfMult;\n        emp.ene = Math.min(emp.ene, this.maxEne);\n      }\n\n      const salary = emp.process(marketCycles, this);\n      salaryPaid += salary;\n    }\n\n    this.calculateEmployeeProductivity(corporation, industry);\n    return salaryPaid;\n  }\n\n  calculateEmployeeProductivity(corporation: ICorporation, industry: IIndustry): void {\n    //Reset\n    for (const name in this.employeeProd) {\n      this.employeeProd[name] = 0;\n    }\n\n    let total = 0;\n    for (let i = 0; i < this.employees.length; ++i) {\n      const employee = this.employees[i];\n      const prod = employee.calculateProductivity(corporation, industry);\n      this.employeeProd[employee.pos] += prod;\n      total += prod;\n    }\n    this.employeeProd.total = total;\n  }\n\n  hireRandomEmployee(): Employee | undefined {\n    if (this.atCapacity()) return;\n    if (document.getElementById(\"cmpy-mgmt-hire-employee-popup\") != null) return;\n\n    //Generate three random employees (meh, decent, amazing)\n    const int = getRandomInt(50, 100),\n      cha = getRandomInt(50, 100),\n      exp = getRandomInt(50, 100),\n      cre = getRandomInt(50, 100),\n      eff = getRandomInt(50, 100),\n      sal = CorporationConstants.EmployeeSalaryMultiplier * (int + cha + exp + cre + eff);\n\n    const emp = new Employee({\n      intelligence: int,\n      charisma: cha,\n      experience: exp,\n      creativity: cre,\n      efficiency: eff,\n      salary: sal,\n    });\n\n    const name = generateRandomString(7);\n\n    for (let i = 0; i < this.employees.length; ++i) {\n      if (this.employees[i].name === name) {\n        return this.hireRandomEmployee();\n      }\n    }\n    emp.name = name;\n    this.employees.push(emp);\n\n    return emp;\n  }\n\n  //Finds the first unassigned employee and assigns its to the specified job\n  assignEmployeeToJob(job: string): boolean {\n    for (let i = 0; i < this.employees.length; ++i) {\n      if (this.employees[i].pos === EmployeePositions.Unassigned) {\n        this.employees[i].pos = job;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  //Finds the first employee with the given job and unassigns it\n  unassignEmployeeFromJob(job: string): boolean {\n    for (let i = 0; i < this.employees.length; ++i) {\n      if (this.employees[i].pos === job) {\n        this.employees[i].pos = EmployeePositions.Unassigned;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  copy(): OfficeSpace {\n    const office = new OfficeSpace();\n    office.loc = this.loc;\n    office.size = this.size;\n    office.minEne = this.minEne;\n    office.maxEne = this.maxEne;\n    office.minHap = this.minHap;\n    office.maxHap = this.maxHap;\n    office.maxMor = this.maxMor;\n    office.employeeProd = {\n      [EmployeePositions.Operations]: this.employeeProd[EmployeePositions.Operations],\n      [EmployeePositions.Engineer]: this.employeeProd[EmployeePositions.Engineer],\n      [EmployeePositions.Business]: this.employeeProd[EmployeePositions.Business],\n      [EmployeePositions.Management]: this.employeeProd[EmployeePositions.Management],\n      [EmployeePositions.RandD]: this.employeeProd[EmployeePositions.RandD],\n      total: this.employeeProd[\"total\"],\n    };\n    office.employees = [];\n    for (const employee of this.employees) {\n      office.employees.push(employee.copy());\n    }\n    return office;\n  }\n\n  toJSON(): any {\n    return Generic_toJSON(\"OfficeSpace\", this);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): OfficeSpace {\n    return Generic_fromJSON(OfficeSpace, value.data);\n  }\n}\n\nReviver.constructors.OfficeSpace = OfficeSpace;\n","import { IMap } from \"../types\";\n\nexport type IndustryUpgrade = [number, number, number, number, string, string];\n\n// Industry upgrades\n// The data structure is an array with the following format:\n//  [index in array, base price, price mult, benefit mult (if applicable), name, desc]\nexport const IndustryUpgrades: IMap<IndustryUpgrade> = {\n  \"0\": [0, 500e3, 1, 1.05, \"Coffee\", \"Provide your employees with coffee, increasing their energy by 5%.\"],\n  \"1\": [\n    1,\n    1e9,\n    1.06,\n    1.03,\n    \"AdVert.Inc\",\n    \"Hire AdVert.Inc to advertise your company. Each level of \" +\n      \"this upgrade grants your company a static increase of 3 and 1 to its awareness and \" +\n      \"popularity, respectively. It will then increase your company's awareness by 1%, and its popularity \" +\n      \"by a random percentage between 1% and 3%. These effects are increased by other upgrades \" +\n      \"that increase the power of your advertising.\",\n  ],\n};\n","/**\n * This is a central class for storing and managing the player's hashes,\n * which are generated by Hacknet Servers\n *\n * It is also used to keep track of what upgrades the player has bought with\n * his hashes, and contains method for grabbing the data/multipliers from\n * those upgrades\n */\nimport { HashUpgrades } from \"./HashUpgrades\";\nimport { HashUpgrade } from \"./HashUpgrade\";\n\nimport { IMap } from \"../types\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\n\nexport class HashManager {\n  // Max number of hashes this can hold. Equal to the sum of capacities of\n  // all Hacknet Servers\n  capacity = 0;\n\n  // Number of hashes currently in storage\n  hashes = 0;\n\n  // Map of Hash Upgrade Name -> levels in that upgrade\n  upgrades: IMap<number> = {};\n\n  constructor() {\n    for (const name in HashUpgrades) {\n      this.upgrades[name] = 0;\n    }\n  }\n\n  /**\n   * Generic helper function for getting a multiplier from a HashUpgrade\n   */\n  getMult(upgName: string): number {\n    const upg = HashUpgrades[upgName];\n    const currLevel = this.upgrades[upgName];\n    if (upg == null || currLevel == null) {\n      console.error(`Could not find Hash Study upgrade`);\n      return 1;\n    }\n\n    return 1 + (upg.value * currLevel) / 100;\n  }\n\n  /**\n   * One of the Hash upgrades improves studying. This returns that multiplier\n   */\n  getStudyMult(): number {\n    const upgName = \"Improve Studying\";\n\n    return this.getMult(upgName);\n  }\n\n  /**\n   * One of the Hash upgrades improves gym training. This returns that multiplier\n   */\n  getTrainingMult(): number {\n    const upgName = \"Improve Gym Training\";\n\n    return this.getMult(upgName);\n  }\n\n  getUpgrade(upgName: string): HashUpgrade | null {\n    const upg = HashUpgrades[upgName];\n    if (!upg) {\n      console.error(`Invalid Upgrade Name given to HashManager.getUpgrade(): ${upgName}`);\n      return null;\n    }\n    return upg;\n  }\n\n  /**\n   * Get the cost (in hashes) of an upgrade\n   */\n  getUpgradeCost(upgName: string): number {\n    const upg = this.getUpgrade(upgName);\n    const currLevel = this.upgrades[upgName];\n    if (upg == null || currLevel == null) {\n      console.error(`Invalid Upgrade Name given to HashManager.getUpgradeCost(): ${upgName}`);\n      return Infinity;\n    }\n\n    return upg.getCost(currLevel);\n  }\n\n  prestige(): void {\n    for (const name in HashUpgrades) {\n      this.upgrades[name] = 0;\n    }\n    this.hashes = 0;\n\n    // When prestiging, player's hacknet nodes are always reset. So capacity = 0\n    this.updateCapacity(0);\n  }\n\n  /**\n   * Reverts an upgrade and refunds the hashes used to buy it\n   */\n  refundUpgrade(upgName: string): void {\n    const upg = HashUpgrades[upgName];\n\n    // Reduce the level first, so we get the right cost\n    --this.upgrades[upgName];\n\n    const currLevel = this.upgrades[upgName];\n    if (upg == null || currLevel == null || currLevel < 0) {\n      console.error(`Invalid Upgrade Name given to HashManager.upgrade(): ${upgName}`);\n      return;\n    }\n\n    const cost = upg.getCost(currLevel);\n    this.hashes += cost;\n  }\n\n  storeHashes(numHashes: number): void {\n    this.hashes += numHashes;\n    this.hashes = Math.min(this.hashes, this.capacity);\n  }\n\n  updateCapacity(newCap: number): void {\n    if (newCap < 0) {\n      this.capacity = 0;\n    }\n    this.capacity = Math.max(newCap, 0);\n  }\n\n  /**\n   * Returns boolean indicating whether or not the upgrade was successfully purchased\n   * Note that this does NOT actually implement the effect\n   */\n  upgrade(upgName: string): boolean {\n    const upg = HashUpgrades[upgName];\n    if (upg == null) {\n      console.error(`Invalid Upgrade Name given to HashManager.upgrade(): ${upgName}`);\n      return false;\n    }\n\n    const cost = this.getUpgradeCost(upgName);\n\n    if (this.hashes < cost) {\n      return false;\n    }\n\n    this.hashes -= cost;\n    ++this.upgrades[upgName];\n\n    return true;\n  }\n\n  //Serialize the current object to a JSON save state.\n  toJSON(): any {\n    return Generic_toJSON(\"HashManager\", this);\n  }\n\n  // Initiatizes a HashManager object from a JSON save state.\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): HashManager {\n    return Generic_fromJSON(HashManager, value.data);\n  }\n}\n\nReviver.constructors.HashManager = HashManager;\n","import * as React from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    favor: {\n      color: theme.colors.rep,\n    },\n  }),\n);\n\nexport function Favor({ favor }: { favor: number | string }): React.ReactElement {\n  const classes = useStyles();\n  return <span className={classes.favor}>{typeof favor === \"number\" ? numeralWrapper.formatFavor(favor) : favor}</span>;\n}\n","/**\n * This is an object that is used to keep track of where all of the player's\n * money is coming from (or going to)\n */\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"./JSONReviver\";\n\nexport class MoneySourceTracker {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  [key: string]: number | Function;\n\n  bladeburner = 0;\n  casino = 0;\n  class = 0;\n  codingcontract = 0;\n  corporation = 0;\n  crime = 0;\n  gang = 0;\n  hacking = 0;\n  hacknetnode = 0;\n  hospitalization = 0;\n  infiltration = 0;\n  sleeves = 0;\n  stock = 0;\n  total = 0;\n  work = 0;\n\n  // Record money earned\n  record(amt: number, source: string): void {\n    const sanitizedSource = source.toLowerCase();\n    if (typeof this[sanitizedSource] !== \"number\") {\n      console.warn(`MoneySourceTracker.record() called with invalid source: ${source}`);\n      return;\n    }\n\n    (this[sanitizedSource] as number) += amt;\n    this.total += amt;\n  }\n\n  // Reset the money tracker by setting all stats to 0\n  reset(): void {\n    for (const prop in this) {\n      if (typeof this[prop] === \"number\") {\n        (this[prop] as number) = 0;\n      }\n    }\n  }\n\n  // Serialize the current object to a JSON save state.\n  toJSON(): any {\n    return Generic_toJSON(\"MoneySourceTracker\", this);\n  }\n\n  // Initiatizes a MoneySourceTracker object from a JSON save state.\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): MoneySourceTracker {\n    return Generic_fromJSON(MoneySourceTracker, value.data);\n  }\n}\n\nReviver.constructors.MoneySourceTracker = MoneySourceTracker;\n","/**\n * React component for a selectable option on the Faction UI. These\n * options including working for the faction, hacking missions, purchasing\n * augmentations, etc.\n */\nimport * as React from \"react\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\n\ntype IProps = {\n  buttonText: string;\n  infoText: string;\n  onClick: (e: React.MouseEvent<HTMLElement>) => void;\n};\n\nexport function Option(props: IProps): React.ReactElement {\n  return (\n    <Box>\n      <Paper sx={{ my: 1, p: 1, width: \"100%\" }}>\n        <Button onClick={props.onClick}>{props.buttonText}</Button>\n        <Typography>{props.infoText}</Typography>\n      </Paper>\n    </Box>\n  );\n}\n","/**\n * Returns a MM/DD HH:MM timestamp for the current time\n */\nexport function getTimestamp(): string {\n  const d: Date = new Date();\n  // A negative slice value takes from the end of the string rather than the beginning.\n  const stringWidth = -2;\n  const formattedHours: string = `0${d.getHours()}`.slice(stringWidth);\n  const formattedMinutes: string = `0${d.getMinutes()}`.slice(stringWidth);\n\n  return `${d.getMonth() + 1}/${d.getDate()} ${formattedHours}:${formattedMinutes}`;\n}\n","/**\n * Rounds a number to two decimal places.\n * @param decimal A decimal value to trim to two places.\n */\nexport function roundToTwo(decimal: number): number {\n  const leftShift: number = Math.round(parseFloat(`${decimal}e+2`));\n\n  return +`${leftShift}e-2`;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { EventEmitter } from \"../../utils/EventEmitter\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport Typography from \"@mui/material/Typography\";\n\nexport const AlertEvents = new EventEmitter<[string | JSX.Element]>();\n\ninterface Alert {\n  id: string;\n  text: string | JSX.Element;\n}\n\nlet i = 0;\nexport function AlertManager(): React.ReactElement {\n  const [alerts, setAlerts] = useState<Alert[]>([]);\n  useEffect(\n    () =>\n      AlertEvents.subscribe((text: string | JSX.Element) => {\n        const id = i + \"\";\n        i++;\n        setAlerts((old) => {\n          return [\n            ...old,\n            {\n              id: id,\n              text: text,\n            },\n          ];\n        });\n      }),\n    [],\n  );\n\n  function close(): void {\n    setAlerts((old) => {\n      return old.slice(1, 1e99);\n    });\n  }\n\n  return (\n    <>\n      {alerts.length > 0 && (\n        <Modal open={true} onClose={close}>\n          <Typography>{alerts[0].text}</Typography>\n        </Modal>\n      )}\n    </>\n  );\n}\n","export function calculateIntelligenceBonus(intelligence: number, weight = 1): number {\n  return 1 + (weight * Math.pow(intelligence, 0.8)) / 600;\n}\n","import { CONSTANTS } from \"../Constants\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\n\nexport function getHospitalizationCost(p: IPlayer): number {\n  let money;\n  if (typeof p.money === \"number\") {\n    money = p.money;\n  } else {\n    money = p.money.toNumber();\n  }\n\n  if (money < 0) {\n    return 0;\n  }\n\n  return Math.min(money * 0.1, (p.max_hp - p.hp) * CONSTANTS.HospitalCostPerHp);\n}\n\nexport function calculateHospitalizationCost(p: IPlayer, damage: number): number {\n  const oldhp = p.hp;\n  p.hp -= damage;\n  const cost = getHospitalizationCost(p);\n  p.hp = oldhp;\n  return cost;\n}\n","function getDB(): Promise<IDBObjectStore> {\n  return new Promise((resolve, reject) => {\n    if (!window.indexedDB) {\n      reject(\"Indexed DB does not exists\");\n    }\n    /**\n     * DB is called bitburnerSave\n     * Object store is called savestring\n     * key for the Object store is called save\n     * Version `1` is important\n     */\n    const indexedDbRequest: IDBOpenDBRequest = window.indexedDB.open(\"bitburnerSave\", 1);\n\n    // This is called when there's no db to begin with. It's important, don't remove it.\n    indexedDbRequest.onupgradeneeded = function (this: IDBRequest<IDBDatabase>) {\n      const db = this.result;\n      db.createObjectStore(\"savestring\");\n    };\n\n    indexedDbRequest.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\n      reject(`Failed to get IDB ${ev}`);\n    };\n\n    indexedDbRequest.onsuccess = function (this: IDBRequest<IDBDatabase>) {\n      const db = this.result;\n      if (!db) {\n        reject(\"database loadign result was undefined\");\n        return;\n      }\n      resolve(db.transaction([\"savestring\"], \"readwrite\").objectStore(\"savestring\"));\n    };\n  });\n}\n\nexport function load(): Promise<string> {\n  return new Promise(async (resolve, reject) => {\n    await getDB()\n      .then((db) => {\n        return new Promise<string>((resolve, reject) => {\n          const request: IDBRequest<string> = db.get(\"save\");\n          request.onerror = function (this: IDBRequest<string>, ev: Event) {\n            reject(\"Error in Database request to get savestring: \" + ev);\n          };\n\n          request.onsuccess = function (this: IDBRequest<string>) {\n            resolve(this.result);\n          };\n        }).then((saveString) => resolve(saveString));\n      })\n      .catch((r) => reject(r));\n  });\n}\n\nexport function save(saveString: string): Promise<void> {\n  return getDB().then((db) => {\n    return new Promise<void>((resolve, reject) => {\n      // We'll save to both localstorage and indexedDb\n      const request = db.put(saveString, \"save\");\n\n      request.onerror = function (e) {\n        reject(\"Error saving game to IndexedDB: \" + e);\n      };\n\n      request.onsuccess = () => resolve();\n    });\n  });\n}\n\nexport function deleteGame(): Promise<void> {\n  return getDB().then((db) => {\n    db.delete(\"save\");\n  });\n}\n","import { EmployeePositions } from \"./EmployeePositions\";\nimport { MaterialSizes } from \"./MaterialSizes\";\nimport { IIndustry } from \"./IIndustry\";\nimport { ProductRatingWeights, IProductRatingWeight } from \"./ProductRatingWeights\";\n\nimport { createCityMap } from \"../Locations/createCityMap\";\nimport { IMap } from \"../types\";\n\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\nimport { getRandomInt } from \"../utils/helpers/getRandomInt\";\n\ninterface IConstructorParams {\n  name?: string;\n  demand?: number;\n  competition?: number;\n  markup?: number;\n  createCity?: string;\n  designCost?: number;\n  advCost?: number;\n  quality?: number;\n  performance?: number;\n  durability?: number;\n  reliability?: number;\n  aesthetics?: number;\n  features?: number;\n  loc?: string;\n  size?: number;\n  req?: IMap<number>;\n}\n\nexport class Product {\n  // Product name\n  name = \"\";\n\n  // The demand for this Product in the market. Gradually decreases\n  dmd = 0;\n\n  // How much competition there is in the market for this Product\n  cmp = 0;\n\n  // Markup. Affects how high of a price you can charge for this Product\n  // without suffering a loss in the # of sales\n  mku = 0;\n\n  // Production cost - estimation of how much money it costs to make this Product\n  pCost = 0;\n\n  // Sell cost\n  sCost: string | number = 0;\n\n  // Variables for handling the creation process of this Product\n  fin = false; // Whether this Product has finished being created\n  prog = 0; // Creation progress - A number betwee 0-100 representing percentage\n  createCity = \"\"; // City in which the product is/was being created\n  designCost = 0; // How much money was invested into designing this Product\n  advCost = 0; // How much money was invested into advertising this Product\n\n  // Aggregate score for this Product's 'rating'\n  // This is based on the stats/properties below. The weighting of the\n  // stats/properties below differs between different industries\n  rat = 0;\n\n  // Stats/properties of this Product\n  qlt = 0;\n  per = 0;\n  dur = 0;\n  rel = 0;\n  aes = 0;\n  fea = 0;\n\n  // Data refers to the production, sale, and quantity of the products\n  // These values are specific to a city\n  // For each city, the data is [qty, prod, sell]\n  data: IMap<number[]> = createCityMap<number[]>([0, 0, 0]);\n\n  // Location of this Product\n  // Only applies for location-based products like restaurants/hospitals\n  loc = \"\";\n\n  // How much space 1 unit of the Product takes (in the warehouse)\n  // Not applicable for all Products\n  siz = 0;\n\n  // Material requirements. An object that maps the name of a material to how much it requires\n  // to make 1 unit of the product.\n  reqMats: IMap<number> = {};\n\n  // Data to keep track of whether production/sale of this Product is\n  // manually limited. These values are specific to a city\n  //  [Whether production/sale is limited, limit amount]\n  prdman: IMap<any[]> = createCityMap<any[]>([false, 0]);\n  sllman: IMap<any[]> = createCityMap<any[]>([false, 0]);\n\n  // Flags that signal whether automatic sale pricing through Market TA is enabled\n  marketTa1 = false;\n  marketTa2 = false;\n  marketTa2Price: IMap<number> = createCityMap<number>(0);\n\n  constructor(params: IConstructorParams = {}) {\n    this.name = params.name ? params.name : \"\";\n    this.dmd = params.demand ? params.demand : 0;\n    this.cmp = params.competition ? params.competition : 0;\n    this.mku = params.markup ? params.markup : 0;\n    this.createCity = params.createCity ? params.createCity : \"\";\n    this.designCost = params.designCost ? params.designCost : 0;\n    this.advCost = params.advCost ? params.advCost : 0;\n    this.qlt = params.quality ? params.quality : 0;\n    this.per = params.performance ? params.performance : 0;\n    this.dur = params.durability ? params.durability : 0;\n    this.rel = params.reliability ? params.reliability : 0;\n    this.aes = params.aesthetics ? params.aesthetics : 0;\n    this.fea = params.features ? params.features : 0;\n    this.loc = params.loc ? params.loc : \"\";\n    this.siz = params.size ? params.size : 0;\n    this.reqMats = params.req ? params.req : {};\n  }\n\n  // empWorkMult is a multiplier that increases progress rate based on\n  // productivity of employees\n  createProduct(marketCycles = 1, empWorkMult = 1): void {\n    if (this.fin) {\n      return;\n    }\n    this.prog += marketCycles * 0.01 * empWorkMult;\n  }\n\n  // @param industry - Industry object. Reference to industry that makes this Product\n  finishProduct(employeeProd: { [key: string]: number }, industry: IIndustry): void {\n    this.fin = true;\n\n    //Calculate properties\n    const progrMult = this.prog / 100;\n\n    const engrRatio = employeeProd[EmployeePositions.Engineer] / employeeProd[\"total\"];\n    const mgmtRatio = employeeProd[EmployeePositions.Management] / employeeProd[\"total\"];\n    const rndRatio = employeeProd[EmployeePositions.RandD] / employeeProd[\"total\"];\n    const opsRatio = employeeProd[EmployeePositions.Operations] / employeeProd[\"total\"];\n    const busRatio = employeeProd[EmployeePositions.Business] / employeeProd[\"total\"];\n    const designMult = 1 + Math.pow(this.designCost, 0.1) / 100;\n    const balanceMult = 1.2 * engrRatio + 0.9 * mgmtRatio + 1.3 * rndRatio + 1.5 * opsRatio + busRatio;\n    const sciMult = 1 + Math.pow(industry.sciResearch.qty, industry.sciFac) / 800;\n    const totalMult = progrMult * balanceMult * designMult * sciMult;\n\n    this.qlt =\n      totalMult *\n      (0.1 * employeeProd[EmployeePositions.Engineer] +\n        0.05 * employeeProd[EmployeePositions.Management] +\n        0.05 * employeeProd[EmployeePositions.RandD] +\n        0.02 * employeeProd[EmployeePositions.Operations] +\n        0.02 * employeeProd[EmployeePositions.Business]);\n    this.per =\n      totalMult *\n      (0.15 * employeeProd[EmployeePositions.Engineer] +\n        0.02 * employeeProd[EmployeePositions.Management] +\n        0.02 * employeeProd[EmployeePositions.RandD] +\n        0.02 * employeeProd[EmployeePositions.Operations] +\n        0.02 * employeeProd[EmployeePositions.Business]);\n    this.dur =\n      totalMult *\n      (0.05 * employeeProd[EmployeePositions.Engineer] +\n        0.02 * employeeProd[EmployeePositions.Management] +\n        0.08 * employeeProd[EmployeePositions.RandD] +\n        0.05 * employeeProd[EmployeePositions.Operations] +\n        0.05 * employeeProd[EmployeePositions.Business]);\n    this.rel =\n      totalMult *\n      (0.02 * employeeProd[EmployeePositions.Engineer] +\n        0.08 * employeeProd[EmployeePositions.Management] +\n        0.02 * employeeProd[EmployeePositions.RandD] +\n        0.05 * employeeProd[EmployeePositions.Operations] +\n        0.08 * employeeProd[EmployeePositions.Business]);\n    this.aes =\n      totalMult *\n      (0.0 * employeeProd[EmployeePositions.Engineer] +\n        0.08 * employeeProd[EmployeePositions.Management] +\n        0.05 * employeeProd[EmployeePositions.RandD] +\n        0.02 * employeeProd[EmployeePositions.Operations] +\n        0.1 * employeeProd[EmployeePositions.Business]);\n    this.fea =\n      totalMult *\n      (0.08 * employeeProd[EmployeePositions.Engineer] +\n        0.05 * employeeProd[EmployeePositions.Management] +\n        0.02 * employeeProd[EmployeePositions.RandD] +\n        0.05 * employeeProd[EmployeePositions.Operations] +\n        0.05 * employeeProd[EmployeePositions.Business]);\n    this.calculateRating(industry);\n    const advMult = 1 + Math.pow(this.advCost, 0.1) / 100;\n    this.mku = 100 / (advMult * Math.pow(this.qlt + 0.001, 0.65) * (busRatio + mgmtRatio));\n\n    // I actually don't understand well enough to know if this is right.\n    // I'm adding this to prevent a crash.\n    if (this.mku === 0) this.mku = 1;\n\n    this.dmd =\n      industry.awareness === 0 ? 20 : Math.min(100, advMult * (100 * (industry.popularity / industry.awareness)));\n    this.cmp = getRandomInt(0, 70);\n\n    //Calculate the product's required materials\n    //For now, just set it to be the same as the requirements to make materials\n    for (const matName in industry.reqMats) {\n      if (industry.reqMats.hasOwnProperty(matName)) {\n        const reqMat = industry.reqMats[matName];\n        if (reqMat === undefined) continue;\n        this.reqMats[matName] = reqMat;\n      }\n    }\n\n    //Calculate the product's size\n    //For now, just set it to be the same size as the requirements to make materials\n    this.siz = 0;\n    for (const matName in industry.reqMats) {\n      const reqMat = industry.reqMats[matName];\n      if (reqMat === undefined) continue;\n      this.siz += MaterialSizes[matName] * reqMat;\n    }\n  }\n\n  calculateRating(industry: IIndustry): void {\n    const weights: IProductRatingWeight = ProductRatingWeights[industry.type];\n    if (weights == null) {\n      console.error(`Could not find product rating weights for: ${industry}`);\n      return;\n    }\n    this.rat = 0;\n    this.rat += weights.Quality ? this.qlt * weights.Quality : 0;\n    this.rat += weights.Performance ? this.per * weights.Performance : 0;\n    this.rat += weights.Durability ? this.dur * weights.Durability : 0;\n    this.rat += weights.Reliability ? this.rel * weights.Reliability : 0;\n    this.rat += weights.Aesthetics ? this.aes * weights.Aesthetics : 0;\n    this.rat += weights.Features ? this.fea * weights.Features : 0;\n  }\n\n  // Serialize the current object to a JSON save state.\n  toJSON(): any {\n    return Generic_toJSON(\"Product\", this);\n  }\n\n  // Initiatizes a Product object from a JSON save state.\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Product {\n    return Generic_fromJSON(Product, value.data);\n  }\n}\n\nReviver.constructors.Product = Product;\n","import { BladeburnerConstants } from \"./data/Constants\";\nimport { getRandomInt } from \"../utils/helpers/getRandomInt\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\nimport { addOffset } from \"../utils/helpers/addOffset\";\n\ninterface IChangePopulationByCountParams {\n  estChange: number;\n  estOffset: number;\n}\n\ninterface IChangePopulationByPercentageParams {\n  nonZero: boolean;\n  changeEstEqually: boolean;\n}\n\nexport class City {\n  /**\n   * Name of the city.\n   */\n  name = \"\";\n\n  /**\n   * Population of the city.\n   */\n  pop = 0;\n\n  /**\n   * Population estimation of the city.\n   */\n  popEst = 0;\n\n  /**\n   * Number of communities in the city.\n   */\n  comms = 0;\n\n  /**\n   * Estimated number of communities in the city.\n   */\n  commsEst = 0;\n\n  /**\n   * Chaos level of the city.\n   */\n  chaos = 0;\n\n  constructor(name: string = BladeburnerConstants.CityNames[2]) {\n    this.name = name;\n\n    // Synthoid population and estimate\n    this.pop = getRandomInt(BladeburnerConstants.PopulationThreshold, 1.5 * BladeburnerConstants.PopulationThreshold);\n    this.popEst = this.pop * (Math.random() + 0.5);\n\n    // Number of Synthoid communities population and estimate\n    this.comms = getRandomInt(5, 150);\n    this.commsEst = this.comms + getRandomInt(-5, 5);\n    if (this.commsEst < 0) this.commsEst = 0;\n    this.chaos = 0;\n  }\n\n  /**\n   * p is the percentage, not the multiplier (e.g. pass in p = 5 for 5%)\n   */\n  changeChaosByPercentage(p: number): void {\n    if (isNaN(p)) {\n      throw new Error(\"NaN passed into City.chaosChaosByPercentage()\");\n    }\n    if (p === 0) {\n      return;\n    }\n    this.chaos += this.chaos * (p / 100);\n    if (this.chaos < 0) {\n      this.chaos = 0;\n    }\n  }\n\n  improvePopulationEstimateByCount(n: number): void {\n    if (isNaN(n)) {\n      throw new Error(\"NaN passeed into City.improvePopulationEstimateByCount()\");\n    }\n    if (this.popEst < this.pop) {\n      this.popEst += n;\n      if (this.popEst > this.pop) {\n        this.popEst = this.pop;\n      }\n    } else if (this.popEst > this.pop) {\n      this.popEst -= n;\n      if (this.popEst < this.pop) {\n        this.popEst = this.pop;\n      }\n    }\n  }\n\n  /**\n   * p is the percentage, not the multiplier (e.g. pass in p = 5 for 5%)\n   */\n  improvePopulationEstimateByPercentage(p: number, skillMult = 1): void {\n    p = p * skillMult;\n    if (isNaN(p)) {\n      throw new Error(\"NaN passed into City.improvePopulationEstimateByPercentage()\");\n    }\n    if (this.popEst < this.pop) {\n      ++this.popEst; // In case estimate is 0\n      this.popEst *= 1 + p / 100;\n      if (this.popEst > this.pop) {\n        this.popEst = this.pop;\n      }\n    } else if (this.popEst > this.pop) {\n      this.popEst *= 1 - p / 100;\n      if (this.popEst < this.pop) {\n        this.popEst = this.pop;\n      }\n    }\n  }\n\n  improveCommunityEstimate(n = 1): void {\n    if (isNaN(n)) {\n      throw new Error(\"NaN passed into City.improveCommunityEstimate()\");\n    }\n    if (this.commsEst < this.comms) {\n      this.commsEst += n;\n      if (this.commsEst > this.comms) {\n        this.commsEst = this.comms;\n      }\n    } else if (this.commsEst > this.comms) {\n      this.commsEst -= n;\n      if (this.commsEst < this.comms) {\n        this.commsEst = this.comms;\n      }\n    }\n  }\n\n  /**\n   * @params options:\n   *  estChange(int): How much the estimate should change by\n   *  estOffset(int): Add offset to estimate (offset by percentage)\n   */\n  changePopulationByCount(n: number, params: IChangePopulationByCountParams = { estChange: 0, estOffset: 0 }): void {\n    if (isNaN(n)) {\n      throw new Error(\"NaN passed into City.changePopulationByCount()\");\n    }\n    this.pop += n;\n    if (params.estChange && !isNaN(params.estChange)) {\n      this.popEst += params.estChange;\n    }\n    if (params.estOffset) {\n      this.popEst = addOffset(this.popEst, params.estOffset);\n    }\n    this.popEst = Math.max(this.popEst, 0);\n  }\n\n  /**\n   * @p is the percentage, not the multiplier. e.g. pass in p = 5 for 5%\n   * @params options:\n   *  changeEstEqually(bool) - Change the population estimate by an equal amount\n   *  nonZero (bool)         - Set to true to ensure that population always changes by at least 1\n   */\n  changePopulationByPercentage(\n    p: number,\n    params: IChangePopulationByPercentageParams = {\n      nonZero: false,\n      changeEstEqually: false,\n    },\n  ): number {\n    if (isNaN(p)) {\n      throw new Error(\"NaN passed into City.changePopulationByPercentage()\");\n    }\n    if (p === 0) {\n      return 0;\n    }\n    let change = Math.round(this.pop * (p / 100));\n\n    // Population always changes by at least 1\n    if (params.nonZero && change === 0) {\n      p > 0 ? (change = 1) : (change = -1);\n    }\n\n    this.pop += change;\n    if (params.changeEstEqually) {\n      this.popEst += change;\n      if (this.popEst < 0) {\n        this.popEst = 0;\n      }\n    }\n    return change;\n  }\n\n  changeChaosByCount(n: number): void {\n    if (isNaN(n)) {\n      throw new Error(\"NaN passed into City.changeChaosByCount()\");\n    }\n    if (n === 0) {\n      return;\n    }\n    this.chaos += n;\n    if (this.chaos < 0) {\n      this.chaos = 0;\n    }\n  }\n\n  /**\n   * Serialize the current object to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"City\", this);\n  }\n\n  /**\n   * Initiatizes a City object from a JSON save state.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): City {\n    return Generic_fromJSON(City, value.data);\n  }\n}\n\nReviver.constructors.City = City;\n","/**\n * Class representing a City in the game\n */\nimport { CityName } from \"./data/CityNames\";\nimport { LocationName } from \"./data/LocationNames\";\n\nexport class City {\n  /**\n   * List of all locations in this city\n   */\n  locations: LocationName[];\n\n  /**\n   * Name of this city\n   */\n  name: CityName;\n\n  /**\n   * Metro map ascii art\n   */\n  asciiArt: string;\n\n  constructor(name: CityName, locations: LocationName[] = [], asciiArt = \"\") {\n    this.name = name;\n    this.locations = locations;\n    this.asciiArt = asciiArt;\n  }\n\n  addLocation(loc: LocationName): void {\n    this.locations.push(loc);\n  }\n}\n","/**\n * React component for the tickers configuration section of the Stock Market UI.\n * This config lets you change the way stock tickers are displayed (watchlist,\n * all/portoflio mode, etc)\n */\nimport * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\n\nexport enum TickerDisplayMode {\n  AllStocks,\n  Portfolio,\n}\n\ntype IProps = {\n  changeDisplayMode: () => void;\n  changeWatchlistFilter: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  tickerDisplayMode: TickerDisplayMode;\n};\n\nfunction DisplayModeButton(props: IProps): React.ReactElement {\n  let txt = \"\";\n  let tooltip = \"\";\n  if (props.tickerDisplayMode === TickerDisplayMode.Portfolio) {\n    txt = \"Switch to 'All Stocks' Mode\";\n    tooltip = \"Displays all stocks on the WSE\";\n  } else {\n    txt = \"Switch to 'Portfolio' Mode\";\n    tooltip = \"Displays only the stocks for which you have shares or orders\";\n  }\n\n  return (\n    <Tooltip title={<Typography>{tooltip}</Typography>}>\n      <Button onClick={props.changeDisplayMode}>{txt}</Button>\n    </Tooltip>\n  );\n}\n\nexport function StockTickersConfig(props: IProps): React.ReactElement {\n  return (\n    <>\n      <DisplayModeButton {...props} />\n      <br />\n      <TextField\n        sx={{ width: \"100%\" }}\n        onChange={props.changeWatchlistFilter}\n        placeholder=\"Filter Stocks by symbol (comma-separated list)\"\n        type=\"text\"\n      />\n    </>\n  );\n}\n","import { Factions } from \"../../Faction/Factions\";\nimport { Faction } from \"../../Faction/Faction\";\nimport { Gang } from \"../../Gang/Gang\";\nimport { SourceFileFlags } from \"../../SourceFile/SourceFileFlags\";\nimport { BitNodeMultipliers } from \"../../BitNode/BitNodeMultipliers\";\nimport { IPlayer } from \"../IPlayer\";\n\n// Amount of negative karma needed to manage a gang in BitNodes other than 2\nconst GangKarmaRequirement = -54000;\n\nexport function canAccessGang(this: IPlayer): boolean {\n  if (this.bitNodeN === 2) {\n    return true;\n  }\n  if (SourceFileFlags[2] <= 0) {\n    return false;\n  }\n\n  return this.karma <= BitNodeMultipliers.GangKarmaRequirement * GangKarmaRequirement;\n}\n\nexport function getGangFaction(this: IPlayer): Faction {\n  const gang = this.gang;\n  if (gang === null) {\n    throw new Error(\"Cannot get gang faction because player is not in a gang.\");\n  }\n  const fac = Factions[gang.facName];\n  if (fac == null) {\n    throw new Error(`Gang has invalid faction name: ${gang.facName}`);\n  }\n\n  return fac;\n}\n\nexport function getGangName(this: IPlayer): string {\n  if (!this.inGang()) return \"\";\n  const gang = this.gang;\n  if (gang === null) {\n    throw new Error(\"Cannot get gang faction because player is not in a gang.\");\n  }\n  return gang.facName;\n}\n\nexport function hasGangWith(this: IPlayer, facName: string): boolean {\n  if (!this.inGang()) return false;\n  const gang = this.gang;\n  if (gang === null) {\n    throw new Error(\"Cannot get gang faction because player is not in a gang.\");\n  }\n  return gang.facName === facName;\n}\n\nexport function inGang(this: IPlayer): boolean {\n  if (this.gang == null || this.gang == undefined) {\n    return false;\n  }\n\n  return this.gang instanceof Gang;\n}\n\nexport function startGang(this: IPlayer, factionName: string, hacking: boolean): void {\n  this.gang = new Gang(factionName, hacking);\n\n  const fac = Factions[factionName];\n  if (fac == null) {\n    throw new Error(`Invalid faction name when creating gang: ${factionName}`);\n  }\n  fac.playerReputation = 0;\n}\n","import { IMap } from \"../../types\";\n\nexport type CorporationUnlockUpgrade = [number, number, string, string];\n\n// Corporation Unlock Upgrades\n// Upgrades for entire corporation, unlocks features, either you have it or you dont\n// The data structure is an array with the following format:\n//  [index in Corporation feature upgrades array, price, name, description]\nexport const CorporationUnlockUpgrades: IMap<CorporationUnlockUpgrade> = {\n  //Lets you export goods\n  \"0\": [\n    0,\n    20e9,\n    \"Export\",\n    \"Develop infrastructure to export your materials to your other facilities. \" +\n      \"This allows you to move materials around between different divisions and cities.\",\n  ],\n\n  //Lets you buy exactly however many required materials you need for production\n  \"1\": [\n    1,\n    25e9,\n    \"Smart Supply\",\n    \"Use advanced AI to anticipate your supply needs. \" +\n      \"This allows you to purchase exactly however many materials you need for production.\",\n  ],\n\n  //Displays each material/product's demand\n  \"2\": [\n    2,\n    5e9,\n    \"Market Research - Demand\",\n    \"Mine and analyze market data to determine the demand of all resources. \" +\n      \"The demand attribute, which affects sales, will be displayed for every material and product.\",\n  ],\n\n  //Display's each material/product's competition\n  \"3\": [\n    3,\n    5e9,\n    \"Market Data - Competition\",\n    \"Mine and analyze market data to determine how much competition there is on the market \" +\n      \"for all resources. The competition attribute, which affects sales, will be displayed for \" +\n      \"every material and product.\",\n  ],\n  \"4\": [\n    4,\n    10e9,\n    \"VeChain\",\n    \"Use AI and blockchain technology to identify where you can improve your supply chain systems. \" +\n      \"This upgrade will allow you to view a wide array of useful statistics about your \" +\n      \"Corporation.\",\n  ],\n  \"5\": [\n    5,\n    500e9,\n    \"Shady Accounting\",\n    \"Utilize unscrupulous accounting practices and pay off government officials to save money \" +\n      \"on taxes. This reduces the dividend tax rate by 5%.\",\n  ],\n  \"6\": [\n    6,\n    2e12,\n    \"Government Partnership\",\n    \"Help national governments further their agendas in exchange for lowered taxes. \" +\n      \"This reduces the dividend tax rate by 10%\",\n  ],\n};\n","import { IMap } from \"../../types\";\n\nexport type CorporationUpgrade = [number, number, number, number, string, string];\n\n// Corporation Upgrades\n// Upgrades for entire corporation, levelable upgrades\n// The data structure is an array with the following format\n//  [index in Corporation upgrades array, base price, price mult, benefit mult (additive), name, desc]\nexport const CorporationUpgrades: IMap<CorporationUpgrade> = {\n  //Smart factories, increases production\n  \"0\": [\n    0,\n    2e9,\n    1.06,\n    0.03,\n    \"Smart Factories\",\n    \"Advanced AI automatically optimizes the operation and productivity \" +\n      \"of factories. Each level of this upgrade increases your global production by 3% (additive).\",\n  ],\n\n  //Smart warehouses, increases storage size\n  \"1\": [\n    1,\n    2e9,\n    1.06,\n    0.1,\n    \"Smart Storage\",\n    \"Advanced AI automatically optimizes your warehouse storage methods. \" +\n      \"Each level of this upgrade increases your global warehouse storage size by 10% (additive).\",\n  ],\n\n  //Advertise through dreams, passive popularity/ awareness gain\n  \"2\": [\n    2,\n    4e9,\n    1.1,\n    0.001,\n    \"DreamSense\",\n    \"Use DreamSense LCC Technologies to advertise your corporation \" +\n      \"to consumers through their dreams. Each level of this upgrade provides a passive \" +\n      \"increase in awareness of all of your companies (divisions) by 0.004 / market cycle,\" +\n      \"and in popularity by 0.001 / market cycle. A market cycle is approximately \" +\n      \"15 seconds.\",\n  ],\n\n  //Makes advertising more effective\n  \"3\": [\n    3,\n    4e9,\n    1.12,\n    0.005,\n    \"Wilson Analytics\",\n    \"Purchase data and analysis from Wilson, a marketing research \" +\n      \"firm. Each level of this upgrades increases the effectiveness of your \" +\n      \"advertising by 0.5% (additive).\",\n  ],\n\n  //Augmentation for employees, increases cre\n  \"4\": [\n    4,\n    1e9,\n    1.06,\n    0.1,\n    \"Nuoptimal Nootropic Injector Implants\",\n    \"Purchase the Nuoptimal Nootropic \" +\n      \"Injector augmentation for your employees. Each level of this upgrade \" +\n      \"globally increases the creativity of your employees by 10% (additive).\",\n  ],\n\n  //Augmentation for employees, increases cha\n  \"5\": [\n    5,\n    1e9,\n    1.06,\n    0.1,\n    \"Speech Processor Implants\",\n    \"Purchase the Speech Processor augmentation for your employees. \" +\n      \"Each level of this upgrade globally increases the charisma of your employees by 10% (additive).\",\n  ],\n\n  //Augmentation for employees, increases int\n  \"6\": [\n    6,\n    1e9,\n    1.06,\n    0.1,\n    \"Neural Accelerators\",\n    \"Purchase the Neural Accelerator augmentation for your employees. \" +\n      \"Each level of this upgrade globally increases the intelligence of your employees \" +\n      \"by 10% (additive).\",\n  ],\n\n  //Augmentation for employees, increases eff\n  \"7\": [\n    7,\n    1e9,\n    1.06,\n    0.1,\n    \"FocusWires\",\n    \"Purchase the FocusWire augmentation for your employees. Each level \" +\n      \"of this upgrade globally increases the efficiency of your employees by 10% (additive).\",\n  ],\n\n  //Improves sales of materials/products\n  \"8\": [\n    8,\n    1e9,\n    1.07,\n    0.01,\n    \"ABC SalesBots\",\n    \"Always Be Closing. Purchase these robotic salesmen to increase the amount of \" +\n      \"materials and products you sell. Each level of this upgrade globally increases your sales \" +\n      \"by 1% (additive).\",\n  ],\n\n  //Improves scientific research rate\n  \"9\": [\n    9,\n    5e9,\n    1.07,\n    0.05,\n    \"Project Insight\",\n    \"Purchase 'Project Insight', a R&D service provided by the secretive \" +\n      \"Fulcrum Technologies. Each level of this upgrade globally increases the amount of \" +\n      \"Scientific Research you produce by 5% (additive).\",\n  ],\n};\n","/**\n * Returns a reference to the first object with the specified value of the ID or NAME attribute,\n * throwing an error if it is unable to find it.\n * @param elementId The HTML ID to retrieve the element by.\n * @throws {Error} When the 'elementId' cannot be found.\n */\nexport function getElementById(elementId: string): HTMLElement {\n  const el: HTMLElement | null = document.getElementById(elementId);\n  if (el === null) {\n    throw new Error(`Unable to find element with id '${elementId}'`);\n  }\n\n  return el;\n}\n","import React from \"react\";\nimport { CityName } from \"../../Locations/data/CityNames\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\ninterface ICityProps {\n  currentCity: CityName;\n  city: CityName;\n  onTravel: (city: CityName) => void;\n}\n\nfunction City(props: ICityProps): React.ReactElement {\n  if (props.city !== props.currentCity) {\n    return (\n      <Tooltip title={props.city}>\n        <span\n          onClick={() => props.onTravel(props.city)}\n          style={{ color: \"white\", lineHeight: \"1em\", whiteSpace: \"pre\" }}\n        >\n          {props.city[0]}\n        </span>\n      </Tooltip>\n    );\n  }\n  return <span>{props.city[0]}</span>;\n}\n\ninterface IProps {\n  currentCity: CityName;\n  onTravel: (city: CityName) => void;\n}\n\nexport function WorldMap(props: IProps): React.ReactElement {\n  // prettier-ignore\n  return (\n    <>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>               ,_   .  ._. _.  .</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>           , _-\\','|~\\~      ~/      ;-'_   _-'     ,;_;_,    ~~-</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>  /~~-\\_/-'~'--' \\~~| ',    ,'      /  / ~|-_\\_/~/~      ~~--~~~~'--_</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>  /              ,/'-/~ '\\ ,' _  , '<City onTravel={props.onTravel} currentCity={props.currentCity} city={CityName.Volhaven} />,'|~                   ._/-, /~</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>  ~/-'~\\_,       '-,| '|. '   ~  ,\\ /'~                /    /_  /~</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>.-~      '|        '',\\~|\\       _\\~     ,_  ,     <City onTravel={props.onTravel} currentCity={props.currentCity} city={CityName.Chongqing} />         /,</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>          '\\     <City onTravel={props.onTravel} currentCity={props.currentCity} city={CityName.Sector12} />  /'~          |_/~\\\\,-,~  \\ \"         ,_,/ |</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>           |       /            ._-~'\\_ _~|              \\ ) <City onTravel={props.onTravel} currentCity={props.currentCity} city={CityName.NewTokyo} /></Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>            \\   __-\\           '/      ~ |\\  \\_          /  ~</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>  .,         '\\ |,  ~-_      - |          \\\\_' ~|  /\\  \\~ ,</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>               ~-_'  _;       '\\           '-,   \\,' /\\/  |</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>                 '\\_,~'\\_       \\_ _,       /'    '  |, /|'</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>                   /     \\_       ~ |      /         \\  ~'; -,_.</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>                   |       ~\\        |    |  ,        '-_, ,; ~ ~\\</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>                    \\,   <City onTravel={props.onTravel} currentCity={props.currentCity} city={CityName.Aevum} />  /        \\    / /|            ,-, ,   -,</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>                     |    ,/          |  |' |/          ,-   ~ \\   '.</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>                    ,|   ,/           \\ ,/              \\   <City onTravel={props.onTravel} currentCity={props.currentCity} city={CityName.Ishima} />   |</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>                    /    |             ~                 -~~-, /   _</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>                    | ,-'                                    ~    /</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>                    / ,'                                      ~</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>                    ',|  ~</Typography>\n        <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>                      ~'</Typography>\n    </>\n  );\n}\n","import React from \"react\";\nimport { formatNumber } from \"../../utils/StringHelperFunctions\";\nimport { StealthIcon } from \"./StealthIcon\";\nimport { KillIcon } from \"./KillIcon\";\nimport { IAction } from \"../IAction\";\nimport { IBladeburner } from \"../IBladeburner\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  action: IAction;\n}\n\nexport function SuccessChance(props: IProps): React.ReactElement {\n  const estimatedSuccessChance = props.action.getEstSuccessChance(props.bladeburner);\n\n  let chance = <></>;\n  if (estimatedSuccessChance[0] === estimatedSuccessChance[1]) {\n    chance = <>{formatNumber(estimatedSuccessChance[0] * 100, 1)}%</>;\n  } else {\n    chance = (\n      <>\n        {formatNumber(estimatedSuccessChance[0] * 100, 1)}% ~ {formatNumber(estimatedSuccessChance[1] * 100, 1)}%\n      </>\n    );\n  }\n\n  return (\n    <>\n      Estimated success chance: {chance} {props.action.isStealth ? <StealthIcon /> : <></>}\n      {props.action.isKill ? <KillIcon /> : <></>}\n    </>\n  );\n}\n","import { getElementById } from \"./getElementById\";\nimport { removeElement } from \"./removeElement\";\n\n/**\n * Given its id, this function removes an element AND its children\n * @param id The HTML identifier to search for and remove.\n */\nexport function removeElementById(id: string): void {\n  try {\n    const elem: HTMLElement = getElementById(id);\n    removeElement(elem);\n  } catch (e) {\n    // Probably should log this as we're trying to remove elements that don't exist.\n  }\n}\n","import React from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Reputation } from \"../../ui/React/Reputation\";\n\nexport function ReputationRate({ reputation }: { reputation: number }): React.ReactElement {\n  return <Reputation reputation={`${numeralWrapper.formatReputation(reputation)} / sec`} />;\n}\n","import { Crimes } from \"./Crimes\";\nimport { Crime } from \"./Crime\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\n\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\n\nexport function determineCrimeSuccess(p: IPlayer, type: string): boolean {\n  let chance = 0;\n  let found = false;\n  for (const i in Crimes) {\n    const crime = Crimes[i];\n    if (crime.type == type) {\n      chance = crime.successRate(p);\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) {\n    dialogBoxCreate(`ERR: Unrecognized crime type: ${type} This is probably a bug please contact the developer`);\n    return false;\n  }\n\n  if (Math.random() <= chance) {\n    //Success\n    return true;\n  } else {\n    //Failure\n    return false;\n  }\n}\n\nexport function findCrime(roughName: string): Crime | null {\n  if (roughName.includes(\"shoplift\")) {\n    return Crimes.Shoplift;\n  } else if (roughName.includes(\"rob\") && roughName.includes(\"store\")) {\n    return Crimes.RobStore;\n  } else if (roughName.includes(\"mug\")) {\n    return Crimes.Mug;\n  } else if (roughName.includes(\"larceny\")) {\n    return Crimes.Larceny;\n  } else if (roughName.includes(\"drugs\")) {\n    return Crimes.DealDrugs;\n  } else if (roughName.includes(\"bond\") && roughName.includes(\"forge\")) {\n    return Crimes.BondForgery;\n  } else if (roughName.includes(\"traffick\") && roughName.includes(\"arms\")) {\n    return Crimes.TraffickArms;\n  } else if (roughName.includes(\"homicide\")) {\n    return Crimes.Homicide;\n  } else if (roughName.includes(\"grand\") && roughName.includes(\"auto\")) {\n    return Crimes.GrandTheftAuto;\n  } else if (roughName.includes(\"kidnap\")) {\n    return Crimes.Kidnap;\n  } else if (roughName.includes(\"assassinate\") || roughName.includes(\"assassination\")) {\n    return Crimes.Assassination;\n  } else if (roughName.includes(\"heist\")) {\n    return Crimes.Heist;\n  }\n\n  return null;\n}\n","/**\n * Implements the purchasing of extra Duplicate Sleeves from The Covenant,\n * as well as the purchasing of upgrades (memory)\n */\n\nexport const MaxSleevesFromCovenant = 5;\nexport const BaseCostPerSleeve = 10e12;\n","/**\n * Server and HacknetServer-related methods for the Player class (PlayerObject)\n */\nimport { IPlayer } from \"../IPlayer\";\n\nimport { CONSTANTS } from \"../../Constants\";\n\nimport { BitNodeMultipliers } from \"../../BitNode/BitNodeMultipliers\";\nimport { Server } from \"../../Server/Server\";\nimport { HacknetServer } from \"../../Hacknet/HacknetServer\";\nimport { AddToAllServers, AllServers, createUniqueRandomIp } from \"../../Server/AllServers\";\nimport { SpecialServerIps } from \"../../Server/SpecialServerIps\";\n\nexport function hasTorRouter(this: IPlayer): boolean {\n  return SpecialServerIps.hasOwnProperty(\"Darkweb Server\");\n}\n\nexport function getCurrentServer(this: IPlayer): Server | HacknetServer {\n  const server = AllServers[this.currentServer];\n  if (server === null) throw new Error(\"somehow connected to a server that does not exist.\");\n  return server;\n}\n\nexport function getHomeComputer(this: IPlayer): Server {\n  const home = AllServers[this.homeComputer];\n  if (home instanceof Server) return home;\n  throw new Error(\"home computer was not a normal server\");\n}\n\nexport function getUpgradeHomeRamCost(this: IPlayer): number {\n  //Calculate how many times ram has been upgraded (doubled)\n  const currentRam = this.getHomeComputer().maxRam;\n  const numUpgrades = Math.log2(currentRam);\n\n  //Calculate cost\n  //Have cost increase by some percentage each time RAM has been upgraded\n  const mult = Math.pow(1.58, numUpgrades);\n  const cost = currentRam * CONSTANTS.BaseCostFor1GBOfRamHome * mult * BitNodeMultipliers.HomeComputerRamCost;\n  return cost;\n}\n\nexport function createHacknetServer(this: IPlayer): HacknetServer {\n  const numOwned = this.hacknetNodes.length;\n  const name = `hacknet-node-${numOwned}`;\n  const server = new HacknetServer({\n    adminRights: true,\n    hostname: name,\n    ip: createUniqueRandomIp(),\n    // player: this,\n  });\n  this.hacknetNodes.push(server.ip);\n\n  // Configure the HacknetServer to actually act as a Server\n  AddToAllServers(server);\n  const homeComputer = this.getHomeComputer();\n  homeComputer.serversOnNetwork.push(server.ip);\n  server.serversOnNetwork.push(homeComputer.ip);\n\n  return server;\n}\n","import { DarkWebItems } from \"./DarkWebItems\";\n\nimport { Player } from \"../Player\";\nimport { Terminal } from \"../Terminal\";\nimport { SpecialServerIps } from \"../Server/SpecialServerIps\";\nimport { numeralWrapper } from \"../ui/numeralFormat\";\n\nimport { isValidIPAddress } from \"../utils/helpers/isValidIPAddress\";\n\n//Posts a \"help\" message if connected to DarkWeb\nexport function checkIfConnectedToDarkweb(): void {\n  if (SpecialServerIps.hasOwnProperty(\"Darkweb Server\")) {\n    const darkwebIp = SpecialServerIps.getIp(\"Darkweb Server\");\n    if (!isValidIPAddress(darkwebIp)) {\n      return;\n    }\n    const server = Player.getCurrentServer();\n    if (server !== null && darkwebIp == server.ip) {\n      Terminal.print(\n        \"You are now connected to the dark web. From the dark web you can purchase illegal items. \" +\n          \"Use the 'buy -l' command to display a list of all the items you can buy. Use 'buy [item-name] \" +\n          \"to purchase an item.\",\n      );\n    }\n  }\n}\n\nexport function listAllDarkwebItems(): void {\n  for (const key in DarkWebItems) {\n    const item = DarkWebItems[key];\n    Terminal.print(`${item.program} - ${numeralWrapper.formatMoney(item.price)} - ${item.description}`);\n  }\n}\n\nexport function buyDarkwebItem(itemName: string): void {\n  itemName = itemName.toLowerCase();\n\n  // find the program that matches, if any\n  let item = null;\n  for (const key in DarkWebItems) {\n    const i = DarkWebItems[key];\n    if (i.program.toLowerCase() == itemName) {\n      item = i;\n    }\n  }\n\n  // return if invalid\n  if (item === null) {\n    Terminal.print(\"Unrecognized item: \" + itemName);\n    return;\n  }\n\n  // return if the player already has it.\n  if (Player.hasProgram(item.program)) {\n    Terminal.print(\"You already have the \" + item.program + \" program\");\n    return;\n  }\n\n  // return if the player doesn't have enough money\n  if (Player.money.lt(item.price)) {\n    Terminal.print(\"Not enough money to purchase \" + item.program);\n    return;\n  }\n\n  // buy and push\n  Player.loseMoney(item.price);\n  Player.getHomeComputer().programs.push(item.program);\n  Terminal.print(\n    \"You have purchased the \" + item.program + \" program. The new program can be found on your home computer.\",\n  );\n}\n","import { Company } from \"./Company\";\nimport { CompanyPosition } from \"./CompanyPosition\";\n\n/**\n * Returns a string with the given CompanyPosition's stat requirements\n */\n\nexport function getJobRequirementText(company: Company, pos: CompanyPosition, tooltiptext = false): string {\n  let reqText = \"\";\n  const offset: number = company.jobStatReqOffset;\n  const reqHacking: number = pos.requiredHacking > 0 ? pos.requiredHacking + offset : 0;\n  const reqStrength: number = pos.requiredStrength > 0 ? pos.requiredStrength + offset : 0;\n  const reqDefense: number = pos.requiredDefense > 0 ? pos.requiredDefense + offset : 0;\n  const reqDexterity: number = pos.requiredDexterity > 0 ? pos.requiredDexterity + offset : 0;\n  const reqAgility: number = pos.requiredDexterity > 0 ? pos.requiredDexterity + offset : 0;\n  const reqCharisma: number = pos.requiredCharisma > 0 ? pos.requiredCharisma + offset : 0;\n  const reqRep: number = pos.requiredReputation;\n  if (tooltiptext) {\n    reqText = \"Requires:<br>\";\n    reqText += reqHacking.toString() + \" hacking<br>\";\n    reqText += reqStrength.toString() + \" strength<br>\";\n    reqText += reqDefense.toString() + \" defense<br>\";\n    reqText += reqDexterity.toString() + \" dexterity<br>\";\n    reqText += reqAgility.toString() + \" agility<br>\";\n    reqText += reqCharisma.toString() + \" charisma<br>\";\n    reqText += reqRep.toString() + \" reputation\";\n  } else {\n    reqText = \"(Requires \";\n    if (reqHacking > 0) {\n      reqText += reqHacking + \" hacking, \";\n    }\n    if (reqStrength > 0) {\n      reqText += reqStrength + \" strength, \";\n    }\n    if (reqDefense > 0) {\n      reqText += reqDefense + \" defense, \";\n    }\n    if (reqDexterity > 0) {\n      reqText += reqDexterity + \" dexterity, \";\n    }\n    if (reqAgility > 0) {\n      reqText += reqAgility + \" agility, \";\n    }\n    if (reqCharisma > 0) {\n      reqText += reqCharisma + \" charisma, \";\n    }\n    if (reqRep > 1) {\n      reqText += reqRep + \" reputation, \";\n    }\n    reqText = reqText.substring(0, reqText.length - 2);\n    reqText += \")\";\n  }\n  return reqText;\n}\n","import { vsprintf, sprintf } from \"sprintf-js\";\nimport * as libarg from \"arg\";\n\nimport { getRamCost } from \"./Netscript/RamCostGenerator\";\nimport { WorkerScriptStartStopEventEmitter } from \"./Netscript/WorkerScriptStartStopEventEmitter\";\n\nimport { Augmentations } from \"./Augmentation/Augmentations\";\nimport { augmentationExists, installAugmentations } from \"./Augmentation/AugmentationHelpers\";\nimport { prestigeAugmentation } from \"./Prestige\";\nimport { AugmentationNames } from \"./Augmentation/data/AugmentationNames\";\nimport { BitNodeMultipliers } from \"./BitNode/BitNodeMultipliers\";\nimport { findCrime } from \"./Crime/CrimeHelpers\";\nimport { Bladeburner } from \"./Bladeburner/Bladeburner\";\nimport { Company } from \"./Company/Company\";\nimport { Companies } from \"./Company/Companies\";\nimport { CompanyPosition } from \"./Company/CompanyPosition\";\nimport { CompanyPositions } from \"./Company/CompanyPositions\";\nimport { CONSTANTS } from \"./Constants\";\nimport { DarkWebItems } from \"./DarkWeb/DarkWebItems\";\nimport {\n  NewIndustry,\n  NewCity,\n  UnlockUpgrade,\n  LevelUpgrade,\n  IssueDividends,\n  SellMaterial,\n  SellProduct,\n  SetSmartSupply,\n  BuyMaterial,\n  AssignJob,\n  UpgradeOfficeSize,\n  ThrowParty,\n  PurchaseWarehouse,\n  UpgradeWarehouse,\n  BuyCoffee,\n  HireAdVert,\n  MakeProduct,\n  Research,\n  ExportMaterial,\n  CancelExportMaterial,\n  SetMaterialMarketTA1,\n  SetMaterialMarketTA2,\n  SetProductMarketTA1,\n  SetProductMarketTA2,\n} from \"./Corporation/Actions\";\nimport { CorporationUnlockUpgrades } from \"./Corporation/data/CorporationUnlockUpgrades\";\nimport { CorporationUpgrades } from \"./Corporation/data/CorporationUpgrades\";\nimport {\n  calculateHackingChance,\n  calculateHackingExpGain,\n  calculatePercentMoneyHacked,\n  calculateHackingTime,\n  calculateGrowTime,\n  calculateWeakenTime,\n} from \"./Hacking\";\nimport { calculateServerGrowth } from \"./Server/formulas/grow\";\nimport { Gang } from \"./Gang/Gang\";\nimport { AllGangs } from \"./Gang/AllGangs\";\nimport { GangMemberTasks } from \"./Gang/GangMemberTasks\";\nimport { GangMemberUpgrades } from \"./Gang/GangMemberUpgrades\";\nimport { Factions, factionExists } from \"./Faction/Factions\";\nimport { joinFaction, purchaseAugmentation } from \"./Faction/FactionHelpers\";\nimport { FactionWorkType } from \"./Faction/FactionWorkTypeEnum\";\nimport { netscriptCanGrow, netscriptCanHack, netscriptCanWeaken } from \"./Hacking/netscriptCanHack\";\n\nimport {\n  getCostOfNextHacknetNode,\n  getCostOfNextHacknetServer,\n  hasHacknetServers,\n  purchaseHacknet,\n  purchaseLevelUpgrade,\n  purchaseRamUpgrade,\n  purchaseCoreUpgrade,\n  purchaseCacheUpgrade,\n  purchaseHashUpgrade,\n  updateHashManagerCapacity,\n} from \"./Hacknet/HacknetHelpers\";\nimport {\n  calculateMoneyGainRate,\n  calculateLevelUpgradeCost,\n  calculateRamUpgradeCost,\n  calculateCoreUpgradeCost,\n  calculateNodeCost,\n} from \"./Hacknet/formulas/HacknetNodes\";\nimport {\n  calculateHashGainRate as HScalculateHashGainRate,\n  calculateLevelUpgradeCost as HScalculateLevelUpgradeCost,\n  calculateRamUpgradeCost as HScalculateRamUpgradeCost,\n  calculateCoreUpgradeCost as HScalculateCoreUpgradeCost,\n  calculateCacheUpgradeCost as HScalculateCacheUpgradeCost,\n  calculateServerCost as HScalculateServerCost,\n} from \"./Hacknet/formulas/HacknetServers\";\nimport { HacknetNodeConstants, HacknetServerConstants } from \"./Hacknet/data/Constants\";\nimport { HacknetServer } from \"./Hacknet/HacknetServer\";\nimport { CityName } from \"./Locations/data/CityNames\";\nimport { LocationName } from \"./Locations/data/LocationNames\";\nimport { Terminal } from \"./Terminal\";\nimport { calculateSkill, calculateExp } from \"./PersonObjects/formulas/skill\";\n\nimport { Message } from \"./Message/Message\";\nimport { inMission } from \"./Missions\";\nimport { Player } from \"./Player\";\nimport { Programs } from \"./Programs/Programs\";\nimport { Script } from \"./Script/Script\";\nimport { findRunningScript, findRunningScriptByPid } from \"./Script/ScriptHelpers\";\nimport { isScriptFilename } from \"./Script/isScriptFilename\";\n\nimport { AllServers, AddToAllServers, createUniqueRandomIp } from \"./Server/AllServers\";\nimport { RunningScript } from \"./Script/RunningScript\";\nimport {\n  GetServerByHostname,\n  getServer,\n  getServerOnNetwork,\n  numCycleForGrowth,\n  processSingleServerGrowth,\n  safetlyCreateUniqueServer,\n} from \"./Server/ServerHelpers\";\nimport { getPurchaseServerCost, getPurchaseServerLimit, getPurchaseServerMaxRam } from \"./Server/ServerPurchases\";\nimport { Server } from \"./Server/Server\";\nimport { SpecialServerIps } from \"./Server/SpecialServerIps\";\nimport { SourceFileFlags } from \"./SourceFile/SourceFileFlags\";\nimport { buyStock, sellStock, shortStock, sellShort } from \"./StockMarket/BuyingAndSelling\";\nimport { influenceStockThroughServerHack, influenceStockThroughServerGrow } from \"./StockMarket/PlayerInfluencing\";\nimport { StockMarket, SymbolToStockMap, placeOrder, cancelOrder } from \"./StockMarket/StockMarket\";\nimport { getBuyTransactionCost, getSellTransactionGain } from \"./StockMarket/StockMarketHelpers\";\nimport { OrderTypes } from \"./StockMarket/data/OrderTypes\";\nimport { PositionTypes } from \"./StockMarket/data/PositionTypes\";\nimport { StockSymbols } from \"./StockMarket/data/StockSymbols\";\nimport { getStockMarket4SDataCost, getStockMarket4STixApiCost } from \"./StockMarket/StockMarketCosts\";\nimport { isValidFilePath, removeLeadingSlash } from \"./Terminal/DirectoryHelpers\";\nimport { TextFile, getTextFile, createTextFile } from \"./TextFile\";\n\nimport { NetscriptPorts, runScriptFromScript, startWorkerScript } from \"./NetscriptWorker\";\nimport { killWorkerScript } from \"./Netscript/killWorkerScript\";\nimport { workerScripts } from \"./Netscript/WorkerScripts\";\nimport { WorkerScript } from \"./Netscript/WorkerScript\";\nimport { makeRuntimeRejectMsg, netscriptDelay, resolveNetscriptRequestedThreads } from \"./NetscriptEvaluator\";\nimport { Interpreter } from \"./ThirdParty/JSInterpreter\";\nimport { SleeveTaskType } from \"./PersonObjects/Sleeve/SleeveTaskTypesEnum\";\nimport { findSleevePurchasableAugs } from \"./PersonObjects/Sleeve/SleeveHelpers\";\nimport { Exploit } from \"./Exploits/Exploit\";\nimport { Router } from \"./ui/GameRoot\";\n\nimport { numeralWrapper } from \"./ui/numeralFormat\";\nimport { setTimeoutRef } from \"./utils/SetTimeoutRef\";\nimport { is2DArray } from \"./utils/helpers/is2DArray\";\nimport { convertTimeMsToTimeElapsedString } from \"./utils/StringHelperFunctions\";\n\nimport { LogBoxEvents } from \"./ui/React/LogBoxManager\";\nimport { arrayToString } from \"./utils/helpers/arrayToString\";\nimport { isString } from \"./utils/helpers/isString\";\n\nimport { createElement } from \"./ui/uiHelpers/createElement\";\nimport { createPopup } from \"./ui/uiHelpers/createPopup\";\nimport { removeElementById } from \"./ui/uiHelpers/removeElementById\";\n\nimport { OfficeSpace } from \"./Corporation/OfficeSpace\";\nimport { Employee } from \"./Corporation/Employee\";\nimport { Product } from \"./Corporation/Product\";\nimport { Material } from \"./Corporation/Material\";\nimport { Warehouse } from \"./Corporation/Warehouse\";\nimport { IIndustry } from \"./Corporation/IIndustry\";\n\nimport { Faction } from \"./Faction/Faction\";\nimport { Augmentation } from \"./Augmentation/Augmentation\";\nimport { HacknetNode } from \"./Hacknet/HacknetNode\";\n\nimport { CodingContract } from \"./CodingContracts\";\nimport { GangMember } from \"./Gang/GangMember\";\nimport { GangMemberTask } from \"./Gang/GangMemberTask\";\nimport { Stock } from \"./StockMarket/Stock\";\nimport { BaseServer } from \"./Server/BaseServer\";\n\nconst defaultInterpreter = new Interpreter(\"\", () => undefined);\n\n// the acorn interpreter has a bug where it doesn't convert arrays correctly.\n// so we have to more or less copy it here.\nfunction toNative(pseudoObj: any): any {\n  if (pseudoObj == null) return null;\n  if (\n    !pseudoObj.hasOwnProperty(\"properties\") ||\n    !pseudoObj.hasOwnProperty(\"getter\") ||\n    !pseudoObj.hasOwnProperty(\"setter\") ||\n    !pseudoObj.hasOwnProperty(\"proto\")\n  ) {\n    return pseudoObj; // it wasn't a pseudo object anyway.\n  }\n\n  let nativeObj: any;\n  if (pseudoObj.hasOwnProperty(\"class\") && pseudoObj.class === \"Array\") {\n    nativeObj = [];\n    const length = defaultInterpreter.getProperty(pseudoObj, \"length\");\n    for (let i = 0; i < length; i++) {\n      if (defaultInterpreter.hasProperty(pseudoObj, i)) {\n        nativeObj[i] = toNative(defaultInterpreter.getProperty(pseudoObj, i));\n      }\n    }\n  } else {\n    // Object.\n    nativeObj = {};\n    for (const key in pseudoObj.properties) {\n      const val = pseudoObj.properties[key];\n      nativeObj[key] = toNative(val);\n    }\n  }\n  return nativeObj;\n}\n\ninterface NS {\n  [key: string]: any;\n}\n\nfunction NetscriptFunctions(workerScript: WorkerScript): NS {\n  const updateDynamicRam = function (fnName: string, ramCost: number): void {\n    if (workerScript.dynamicLoadedFns[fnName]) {\n      return;\n    }\n    workerScript.dynamicLoadedFns[fnName] = true;\n\n    let threads = workerScript.scriptRef.threads;\n    if (typeof threads !== \"number\") {\n      console.warn(`WorkerScript detected NaN for threadcount for ${workerScript.name} on ${workerScript.serverIp}`);\n      threads = 1;\n    }\n\n    workerScript.dynamicRamUsage += ramCost * threads;\n    if (workerScript.dynamicRamUsage > 1.01 * workerScript.ramUsage) {\n      throw makeRuntimeRejectMsg(\n        workerScript,\n        `Dynamic RAM usage calculated to be greater than initial RAM usage on fn: ${fnName}.\n        This is probably because you somehow circumvented the static RAM calculation.\n\n        Dynamic RAM Usage: ${numeralWrapper.formatRAM(workerScript.dynamicRamUsage)}\n        Static RAM Usage: ${numeralWrapper.formatRAM(workerScript.ramUsage)}\n\n        One of these could be the reason:\n        * Using eval() to get a reference to a ns function\n        &nbsp;&nbsp;const scan = eval('ns.scan');\n\n        * Using map access to do the same\n        &nbsp;&nbsp;const scan = ns['scan'];\n\n        * Saving script in the improper order.\n        &nbsp;&nbsp;Increase the cost of an imported script, save it, then run the\n        &nbsp;&nbsp;parent. To fix this just re-open & save every script in order\n        &nbsp;&nbsp;from most imported to least imported (parent script).\n\n        Sorry :(`,\n      );\n    }\n  };\n\n  /**\n   * Gets the Server for a specific hostname/ip, throwing an error\n   * if the server doesn't exist.\n   * @param {string} ip - Hostname or IP of the server\n   * @param {string} callingFnName - Name of calling function. For logging purposes\n   * @returns {Server} The specified Server\n   */\n  const safeGetServer = function (ip: any, callingFnName: any = \"\"): BaseServer {\n    const server = getServer(ip);\n    if (server == null) {\n      throw makeRuntimeErrorMsg(callingFnName, `Invalid IP/hostname: ${ip}`);\n    }\n    return server;\n  };\n\n  /**\n   * Searches for and returns the RunningScript object for the specified script.\n   * If the 'fn' argument is not specified, this returns the current RunningScript.\n   * @param {string} fn - Filename of script\n   * @param {string} ip - Hostname/ip of the server on which the script resides\n   * @param {any[]} scriptArgs - Running script's arguments\n   * @returns {RunningScript}\n   *      Running script identified by the parameters, or null if no such script\n   *      exists, or the current running script if the first argument 'fn'\n   *      is not specified.\n   */\n  const getRunningScript = function (fn: any, ip: any, callingFnName: any, scriptArgs: any): RunningScript | null {\n    if (typeof callingFnName !== \"string\" || callingFnName === \"\") {\n      callingFnName = \"getRunningScript\";\n    }\n\n    if (!Array.isArray(scriptArgs)) {\n      throw makeRuntimeRejectMsg(\n        workerScript,\n        `Invalid scriptArgs argument passed into getRunningScript() from ${callingFnName}(). ` +\n          `This is probably a bug. Please report to game developer`,\n      );\n    }\n\n    if (fn != null && typeof fn === \"string\") {\n      // Get Logs of another script\n      if (ip == null) {\n        ip = workerScript.serverIp;\n      }\n      const server = safeGetServer(ip, callingFnName);\n\n      return findRunningScript(fn, scriptArgs, server);\n    }\n\n    // If no arguments are specified, return the current RunningScript\n    return workerScript.scriptRef;\n  };\n\n  const getRunningScriptByPid = function (pid: any, callingFnName: any): RunningScript | null {\n    if (typeof callingFnName !== \"string\" || callingFnName === \"\") {\n      callingFnName = \"getRunningScriptgetRunningScriptByPid\";\n    }\n\n    for (const name of Object.keys(AllServers)) {\n      const server = AllServers[name];\n      const runningScript = findRunningScriptByPid(pid, server);\n      if (runningScript) return runningScript;\n    }\n    return null;\n  };\n\n  /**\n   * Helper function for getting the error log message when the user specifies\n   * a nonexistent running script\n   * @param {string} fn - Filename of script\n   * @param {string} ip - Hostname/ip of the server on which the script resides\n   * @param {any[]} scriptArgs - Running script's arguments\n   * @returns {string} Error message to print to logs\n   */\n  const getCannotFindRunningScriptErrorMessage = function (fn: any, ip: any, scriptArgs: any): string {\n    if (!Array.isArray(scriptArgs)) {\n      scriptArgs = [];\n    }\n\n    return `Cannot find running script ${fn} on server ${ip} with args: ${arrayToString(scriptArgs)}`;\n  };\n\n  /**\n   * Checks if the player has TIX API access. Throws an error if the player does not\n   */\n  const checkTixApiAccess = function (callingFn: any = \"\"): void {\n    if (!Player.hasWseAccount) {\n      throw makeRuntimeErrorMsg(callingFn, `You don't have WSE Access! Cannot use ${callingFn}()`);\n    }\n    if (!Player.hasTixApiAccess) {\n      throw makeRuntimeErrorMsg(callingFn, `You don't have TIX API Access! Cannot use ${callingFn}()`);\n    }\n  };\n\n  /**\n   * Gets a stock, given its symbol. Throws an error if the symbol is invalid\n   * @param {string} symbol - Stock's symbol\n   * @returns {Stock} stock object\n   */\n  const getStockFromSymbol = function (symbol: any, callingFn: any = \"\"): Stock {\n    const stock = SymbolToStockMap[symbol];\n    if (stock == null) {\n      throw makeRuntimeErrorMsg(callingFn, `Invalid stock symbol: '${symbol}'`);\n    }\n\n    return stock;\n  };\n\n  /**\n   * Used to fail a function if the function's target is a Hacknet Server.\n   * This is used for functions that should run on normal Servers, but not Hacknet Servers\n   * @param {Server} server - Target server\n   * @param {string} callingFn - Name of calling function. For logging purposes\n   * @returns {boolean} True if the server is a Hacknet Server, false otherwise\n   */\n  const failOnHacknetServer = function (server: any, callingFn: any = \"\"): boolean {\n    if (server instanceof HacknetServer) {\n      workerScript.log(callingFn, `Does not work on Hacknet Servers`);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  // Utility function to get Hacknet Node object\n  const getHacknetNode = function (i: any, callingFn = \"\"): HacknetNode | HacknetServer {\n    if (isNaN(i)) {\n      throw makeRuntimeErrorMsg(callingFn, \"Invalid index specified for Hacknet Node: \" + i);\n    }\n    if (i < 0 || i >= Player.hacknetNodes.length) {\n      throw makeRuntimeErrorMsg(callingFn, \"Index specified for Hacknet Node is out-of-bounds: \" + i);\n    }\n\n    if (hasHacknetServers(Player)) {\n      const hi = Player.hacknetNodes[i];\n      if (typeof hi !== \"string\") throw new Error(\"hacknet node was not a string\");\n      const hserver = AllServers[hi];\n      if (!(hserver instanceof HacknetServer)) throw new Error(\"hacknet server was not actually hacknet server\");\n      if (hserver == null) {\n        throw makeRuntimeErrorMsg(\n          callingFn,\n          `Could not get Hacknet Server for index ${i}. This is probably a bug, please report to game dev`,\n        );\n      }\n\n      return hserver;\n    } else {\n      const node = Player.hacknetNodes[i];\n      if (!(node instanceof HacknetNode)) throw new Error(\"hacknet node was not node.\");\n      return node;\n    }\n  };\n\n  const makeRuntimeErrorMsg = function (caller: string, msg: string): string {\n    const errstack = new Error().stack;\n    if (errstack === undefined) throw new Error(\"how did we not throw an error?\");\n    const stack = errstack.split(\"\\n\").slice(1);\n    const scripts = workerScript.getServer().scripts;\n    const userstack = [];\n    for (const stackline of stack) {\n      let filename;\n      for (const script of scripts) {\n        if (script.url && stackline.includes(script.url)) {\n          filename = script.filename;\n        }\n        for (const dependency of script.dependencies) {\n          if (stackline.includes(dependency.url)) {\n            filename = dependency.filename;\n          }\n        }\n      }\n      if (!filename) continue;\n\n      interface ILine {\n        line: string;\n        func: string;\n      }\n\n      function parseChromeStackline(line: string): ILine | null {\n        const lineRe = /.*:(\\d+):\\d+.*/;\n        const funcRe = /.*at (.+) \\(.*/;\n\n        const lineMatch = line.match(lineRe);\n        const funcMatch = line.match(funcRe);\n        if (lineMatch && funcMatch) {\n          return { line: lineMatch[1], func: funcMatch[1] };\n        }\n        return null;\n      }\n      let call = { line: \"-1\", func: \"unknown\" };\n      const chromeCall = parseChromeStackline(stackline);\n      if (chromeCall) {\n        call = chromeCall;\n      }\n\n      function parseFirefoxStackline(line: string): ILine | null {\n        const lineRe = /.*:(\\d+):\\d+$/;\n        const lineMatch = line.match(lineRe);\n\n        const lio = line.lastIndexOf(\"@\");\n\n        if (lineMatch && lio !== -1) {\n          return { line: lineMatch[1], func: line.slice(0, lio) };\n        }\n        return null;\n      }\n\n      const firefoxCall = parseFirefoxStackline(stackline);\n      if (firefoxCall) {\n        call = firefoxCall;\n      }\n\n      userstack.push(`${filename}:L${call.line}@${call.func}`);\n    }\n\n    workerScript.log(caller, msg);\n    let rejectMsg = `${caller}: ${msg}`;\n    if (userstack.length !== 0) rejectMsg += `<br><br>Stack:<br>${userstack.join(\"<br>\")}`;\n    return makeRuntimeRejectMsg(workerScript, rejectMsg);\n  };\n\n  const checkFormulasAccess = function (func: any, n: any): void {\n    if ((SourceFileFlags[5] < 1 && Player.bitNodeN !== 5) || (SourceFileFlags[n] < 1 && Player.bitNodeN !== n)) {\n      let extra = \"\";\n      if (n !== 5) {\n        extra = ` and Source-File ${n}-1`;\n      }\n      throw makeRuntimeErrorMsg(`formulas.${func}`, `Requires Source-File 5-1${extra} to run.`);\n    }\n  };\n\n  const checkSingularityAccess = function (func: any, n: any): void {\n    if (Player.bitNodeN !== 4) {\n      if (SourceFileFlags[4] < n) {\n        throw makeRuntimeErrorMsg(func, `This singularity function requires Source-File 4-${n} to run.`);\n      }\n    }\n  };\n\n  const checkBladeburnerAccess = function (func: any, skipjoined: any = false): void {\n    const bladeburner = Player.bladeburner;\n    if (bladeburner === null) throw new Error(\"Must have joined bladeburner\");\n    const apiAccess =\n      Player.bitNodeN === 7 ||\n      Player.sourceFiles.some((a) => {\n        return a.n === 7;\n      });\n    if (!apiAccess) {\n      const apiDenied = `You do not currently have access to the Bladeburner API. You must either be in BitNode-7 or have Source-File 7.`;\n      throw makeRuntimeErrorMsg(`bladeburner.${func}`, apiDenied);\n    }\n    if (!skipjoined) {\n      const bladeburnerAccess = bladeburner instanceof Bladeburner;\n      if (!bladeburnerAccess) {\n        const bladeburnerDenied = `You must be a member of the Bladeburner division to use this API.`;\n        throw makeRuntimeErrorMsg(`bladeburner.${func}`, bladeburnerDenied);\n      }\n    }\n  };\n\n  const checkBladeburnerCity = function (func: any, city: any): void {\n    const bladeburner = Player.bladeburner;\n    if (bladeburner === null) throw new Error(\"Must have joined bladeburner\");\n    if (!bladeburner.cities.hasOwnProperty(city)) {\n      throw makeRuntimeErrorMsg(`bladeburner.${func}`, `Invalid city: ${city}`);\n    }\n  };\n\n  const checkSleeveAPIAccess = function (func: any): void {\n    if (Player.bitNodeN !== 10 && !SourceFileFlags[10]) {\n      throw makeRuntimeErrorMsg(\n        `sleeve.${func}`,\n        \"You do not currently have access to the Sleeve API. This is either because you are not in BitNode-10 or because you do not have Source-File 10\",\n      );\n    }\n  };\n\n  const checkSleeveNumber = function (func: any, sleeveNumber: any): void {\n    if (sleeveNumber >= Player.sleeves.length || sleeveNumber < 0) {\n      const msg = `Invalid sleeve number: ${sleeveNumber}`;\n      workerScript.log(func, msg);\n      throw makeRuntimeErrorMsg(`sleeve.${func}`, msg);\n    }\n  };\n\n  const getCodingContract = function (func: any, ip: any, fn: any): CodingContract {\n    const server = safeGetServer(ip, func);\n    const contract = server.getContract(fn);\n    if (contract == null) {\n      throw makeRuntimeErrorMsg(`codingcontract.${func}`, `Cannot find contract '${fn}' on server '${ip}'`);\n    }\n\n    return contract;\n  };\n\n  const checkGangApiAccess = function (func: any): void {\n    const gang = Player.gang;\n    if (gang === null) throw new Error(\"Must have joined gang\");\n    const hasAccess = gang instanceof Gang;\n    if (!hasAccess) {\n      throw makeRuntimeErrorMsg(`gang.${func}`, `You do not currently have a Gang`);\n    }\n  };\n\n  const getGangMember = function (func: any, name: any): GangMember {\n    const gang = Player.gang;\n    if (gang === null) throw new Error(\"Must have joined gang\");\n    for (const member of gang.members) if (member.name === name) return member;\n    throw makeRuntimeErrorMsg(`gang.${func}`, `Invalid gang member: '${name}'`);\n  };\n\n  const getGangTask = function (func: any, name: any): GangMemberTask {\n    const task = GangMemberTasks[name];\n    if (!task) {\n      throw makeRuntimeErrorMsg(`gang.${func}`, `Invalid task: '${name}'`);\n    }\n\n    return task;\n  };\n\n  const getBladeburnerActionObject = function (func: any, type: any, name: any): any {\n    const bladeburner = Player.bladeburner;\n    if (bladeburner === null) throw new Error(\"Must have joined bladeburner\");\n    const actionId = bladeburner.getActionIdFromTypeAndName(type, name);\n    if (!actionId) {\n      throw makeRuntimeErrorMsg(`bladeburner.${func}`, `Invalid action type='${type}', name='${name}'`);\n    }\n    const actionObj = bladeburner.getActionObject(actionId);\n    if (!actionObj) {\n      throw makeRuntimeErrorMsg(`bladeburner.${func}`, `Invalid action type='${type}', name='${name}'`);\n    }\n\n    return actionObj;\n  };\n\n  const getCompany = function (func: any, name: any): Company {\n    const company = Companies[name];\n    if (company == null || !(company instanceof Company)) {\n      throw makeRuntimeErrorMsg(func, `Invalid company name: '${name}'`);\n    }\n    return company;\n  };\n\n  const getFaction = function (func: any, name: any): Faction {\n    if (!factionExists(name)) {\n      throw makeRuntimeErrorMsg(func, `Invalid faction name: '${name}`);\n    }\n\n    return Factions[name];\n  };\n\n  const getAugmentation = function (func: any, name: any): Augmentation {\n    if (!augmentationExists(name)) {\n      throw makeRuntimeErrorMsg(func, `Invalid augmentation: '${name}'`);\n    }\n\n    return Augmentations[name];\n  };\n\n  function getDivision(divisionName: any): IIndustry {\n    const corporation = Player.corporation;\n    if (corporation === null) throw new Error(\"cannot be called without a corporation\");\n    const division = corporation.divisions.find((div) => div.name === divisionName);\n    if (division === undefined) throw new Error(`No division named '${divisionName}'`);\n    return division;\n  }\n\n  function getOffice(divisionName: any, cityName: any): OfficeSpace {\n    const division = getDivision(divisionName);\n    if (!(cityName in division.offices)) throw new Error(`Invalid city name '${cityName}'`);\n    const office = division.offices[cityName];\n    if (office === 0) throw new Error(`${division.name} has not expanded to '${cityName}'`);\n    return office;\n  }\n\n  function getWarehouse(divisionName: any, cityName: any): Warehouse {\n    const division = getDivision(divisionName);\n    if (!(cityName in division.warehouses)) throw new Error(`Invalid city name '${cityName}'`);\n    const warehouse = division.warehouses[cityName];\n    if (warehouse === 0) throw new Error(`${division.name} has not expanded to '${cityName}'`);\n    return warehouse;\n  }\n\n  function getMaterial(divisionName: any, cityName: any, materialName: any): Material {\n    const warehouse = getWarehouse(divisionName, cityName);\n    const material = warehouse.materials[materialName];\n    if (material === undefined) throw new Error(`Invalid material name: '${materialName}'`);\n    return material;\n  }\n\n  function getProduct(divisionName: any, productName: any): Product {\n    const division = getDivision(divisionName);\n    const product = division.products[productName];\n    if (product === undefined) throw new Error(`Invalid product name: '${productName}'`);\n    return product;\n  }\n\n  function getEmployee(divisionName: any, cityName: any, employeeName: any): Employee {\n    const office = getOffice(divisionName, cityName);\n    const employee = office.employees.find((e) => e.name === employeeName);\n    if (employee === undefined) throw new Error(`Invalid employee name: '${employeeName}'`);\n    return employee;\n  }\n\n  const runAfterReset = function (cbScript = null): void {\n    //Run a script after reset\n    if (cbScript && isString(cbScript)) {\n      const home = Player.getHomeComputer();\n      for (const script of home.scripts) {\n        if (script.filename === cbScript) {\n          const ramUsage = script.ramUsage;\n          const ramAvailable = home.maxRam - home.ramUsed;\n          if (ramUsage > ramAvailable) {\n            return; // Not enough RAM\n          }\n          const runningScriptObj = new RunningScript(script, []); // No args\n          runningScriptObj.threads = 1; // Only 1 thread\n          startWorkerScript(runningScriptObj, home);\n        }\n      }\n    }\n  };\n\n  const hack = function (ip: any, manual: any, { threads: requestedThreads, stock }: any = {}): Promise<number> {\n    if (ip === undefined) {\n      throw makeRuntimeErrorMsg(\"hack\", \"Takes 1 argument.\");\n    }\n    const threads = resolveNetscriptRequestedThreads(workerScript, \"hack\", requestedThreads);\n    const server = getServer(ip);\n    if (!(server instanceof Server)) {\n      throw makeRuntimeErrorMsg(\"hack\", `Invalid IP/hostname: ${ip}.`);\n    }\n\n    if (server == null) {\n      throw makeRuntimeErrorMsg(\"hack\", `Invalid IP/hostname: ${ip}.`);\n    }\n\n    // Calculate the hacking time\n    const hackingTime = calculateHackingTime(server, Player); // This is in seconds\n\n    // No root access or skill level too low\n    const canHack = netscriptCanHack(server, Player);\n    if (!canHack.res) {\n      throw makeRuntimeErrorMsg(\"hack\", canHack.msg || \"\");\n    }\n\n    workerScript.log(\n      \"hack\",\n      `Executing ${ip} in ${convertTimeMsToTimeElapsedString(\n        hackingTime * 1000,\n        true,\n      )} (t=${numeralWrapper.formatThreads(threads)})`,\n    );\n\n    return netscriptDelay(hackingTime * 1000, workerScript).then(function () {\n      if (workerScript.env.stopFlag) {\n        return Promise.reject(workerScript);\n      }\n      const hackChance = calculateHackingChance(server, Player);\n      const rand = Math.random();\n      let expGainedOnSuccess = calculateHackingExpGain(server, Player) * threads;\n      const expGainedOnFailure = expGainedOnSuccess / 4;\n      if (rand < hackChance) {\n        // Success!\n        const percentHacked = calculatePercentMoneyHacked(server, Player);\n        let maxThreadNeeded = Math.ceil((1 / percentHacked) * (server.moneyAvailable / server.moneyMax));\n        if (isNaN(maxThreadNeeded)) {\n          // Server has a 'max money' of 0 (probably). We'll set this to an arbitrarily large value\n          maxThreadNeeded = 1e6;\n        }\n\n        let moneyDrained = Math.floor(server.moneyAvailable * percentHacked) * threads;\n\n        // Over-the-top safety checks\n        if (moneyDrained <= 0) {\n          moneyDrained = 0;\n          expGainedOnSuccess = expGainedOnFailure;\n        }\n        if (moneyDrained > server.moneyAvailable) {\n          moneyDrained = server.moneyAvailable;\n        }\n        server.moneyAvailable -= moneyDrained;\n        if (server.moneyAvailable < 0) {\n          server.moneyAvailable = 0;\n        }\n\n        const moneyGained = moneyDrained * BitNodeMultipliers.ScriptHackMoneyGain;\n\n        Player.gainMoney(moneyGained);\n        workerScript.scriptRef.onlineMoneyMade += moneyGained;\n        Player.scriptProdSinceLastAug += moneyGained;\n        Player.recordMoneySource(moneyGained, \"hacking\");\n        workerScript.scriptRef.recordHack(server.ip, moneyGained, threads);\n        Player.gainHackingExp(expGainedOnSuccess);\n        workerScript.scriptRef.onlineExpGained += expGainedOnSuccess;\n        workerScript.log(\n          \"hack\",\n          `Successfully hacked '${server.hostname}' for ${numeralWrapper.formatMoney(\n            moneyGained,\n          )} and ${numeralWrapper.formatExp(expGainedOnSuccess)} exp (t=${numeralWrapper.formatThreads(threads)})`,\n        );\n        server.fortify(CONSTANTS.ServerFortifyAmount * Math.min(threads, maxThreadNeeded));\n        if (stock) {\n          influenceStockThroughServerHack(server, moneyGained);\n        }\n        if (manual) {\n          server.backdoorInstalled = true;\n        }\n        return Promise.resolve(moneyGained);\n      } else {\n        // Player only gains 25% exp for failure?\n        Player.gainHackingExp(expGainedOnFailure);\n        workerScript.scriptRef.onlineExpGained += expGainedOnFailure;\n        workerScript.log(\n          \"hack\",\n          `Failed to hack '${server.hostname}'. Gained ${numeralWrapper.formatExp(\n            expGainedOnFailure,\n          )} exp (t=${numeralWrapper.formatThreads(threads)})`,\n        );\n        return Promise.resolve(0);\n      }\n    });\n  };\n\n  const argsToString = function (args: any[]): string {\n    let out = \"\";\n    for (let arg of args) {\n      arg = toNative(arg);\n      if (typeof arg === \"object\") {\n        out += JSON.stringify(arg);\n        continue;\n      }\n      out += `${arg}`;\n    }\n\n    return out;\n  };\n\n  const functions = {\n    hacknet: {\n      numNodes: function (): any {\n        return Player.hacknetNodes.length;\n      },\n      maxNumNodes: function (): any {\n        if (hasHacknetServers(Player)) {\n          return HacknetServerConstants.MaxServers;\n        }\n        return Infinity;\n      },\n      purchaseNode: function (): any {\n        return purchaseHacknet(Player);\n      },\n      getPurchaseNodeCost: function (): any {\n        if (hasHacknetServers(Player)) {\n          return getCostOfNextHacknetServer(Player);\n        } else {\n          return getCostOfNextHacknetNode(Player);\n        }\n      },\n      getNodeStats: function (i: any): any {\n        const node = getHacknetNode(i, \"getNodeStats\");\n        const hasUpgraded = hasHacknetServers(Player);\n        const res: any = {\n          name: node instanceof HacknetServer ? node.hostname : node.name,\n          level: node.level,\n          ram: node instanceof HacknetServer ? node.maxRam : node.ram,\n          cores: node.cores,\n          production: node instanceof HacknetServer ? node.hashRate : node.moneyGainRatePerSecond,\n          timeOnline: node.onlineTimeSeconds,\n          totalProduction: node instanceof HacknetServer ? node.totalHashesGenerated : node.totalMoneyGenerated,\n        };\n\n        if (hasUpgraded && node instanceof HacknetServer) {\n          res.cache = node.cache;\n          res.hashCapacity = node.hashCapacity;\n        }\n\n        return res;\n      },\n      upgradeLevel: function (i: any, n: any): any {\n        const node = getHacknetNode(i, \"upgradeLevel\");\n        return purchaseLevelUpgrade(Player, node, n);\n      },\n      upgradeRam: function (i: any, n: any): any {\n        const node = getHacknetNode(i, \"upgradeRam\");\n        return purchaseRamUpgrade(Player, node, n);\n      },\n      upgradeCore: function (i: any, n: any): any {\n        const node = getHacknetNode(i, \"upgradeCore\");\n        return purchaseCoreUpgrade(Player, node, n);\n      },\n      upgradeCache: function (i: any, n: any): any {\n        if (!hasHacknetServers(Player)) {\n          return false;\n        }\n        const node = getHacknetNode(i, \"upgradeCache\");\n        if (!(node instanceof HacknetServer)) {\n          workerScript.log(\"upgradeCache\", \"Can only be called on hacknet servers\");\n          return false;\n        }\n        const res = purchaseCacheUpgrade(Player, node, n);\n        if (res) {\n          updateHashManagerCapacity(Player);\n        }\n        return res;\n      },\n      getLevelUpgradeCost: function (i: any, n: any): any {\n        const node = getHacknetNode(i, \"upgradeLevel\");\n        return node.calculateLevelUpgradeCost(n, Player.hacknet_node_level_cost_mult);\n      },\n      getRamUpgradeCost: function (i: any, n: any): any {\n        const node = getHacknetNode(i, \"upgradeRam\");\n        return node.calculateRamUpgradeCost(n, Player.hacknet_node_ram_cost_mult);\n      },\n      getCoreUpgradeCost: function (i: any, n: any): any {\n        const node = getHacknetNode(i, \"upgradeCore\");\n        return node.calculateCoreUpgradeCost(n, Player.hacknet_node_core_cost_mult);\n      },\n      getCacheUpgradeCost: function (i: any, n: any): any {\n        if (!hasHacknetServers(Player)) {\n          return Infinity;\n        }\n        const node = getHacknetNode(i, \"upgradeCache\");\n        if (!(node instanceof HacknetServer)) {\n          workerScript.log(\"getCacheUpgradeCost\", \"Can only be called on hacknet servers\");\n          return -1;\n        }\n        return node.calculateCacheUpgradeCost(n);\n      },\n      numHashes: function (): any {\n        if (!hasHacknetServers(Player)) {\n          return 0;\n        }\n        return Player.hashManager.hashes;\n      },\n      hashCapacity: function (): any {\n        if (!hasHacknetServers(Player)) {\n          return 0;\n        }\n        return Player.hashManager.capacity;\n      },\n      hashCost: function (upgName: any): any {\n        if (!hasHacknetServers(Player)) {\n          return Infinity;\n        }\n\n        return Player.hashManager.getUpgradeCost(upgName);\n      },\n      spendHashes: function (upgName: any, upgTarget: any): any {\n        if (!hasHacknetServers(Player)) {\n          return false;\n        }\n        return purchaseHashUpgrade(Player, upgName, upgTarget);\n      },\n      getHashUpgradeLevel: function (upgName: any): any {\n        const level = Player.hashManager.upgrades[upgName];\n        if (level === undefined) {\n          throw makeRuntimeErrorMsg(\"hacknet.hashUpgradeLevel\", `Invalid Hash Upgrade: ${upgName}`);\n        }\n        return level;\n      },\n      getStudyMult: function (): any {\n        if (!hasHacknetServers(Player)) {\n          return false;\n        }\n        return Player.hashManager.getStudyMult();\n      },\n      getTrainingMult: function (): any {\n        if (!hasHacknetServers(Player)) {\n          return false;\n        }\n        return Player.hashManager.getTrainingMult();\n      },\n    },\n    sprintf: sprintf,\n    vsprintf: vsprintf,\n    scan: function (ip: any = workerScript.serverIp, hostnames: any = true): any {\n      updateDynamicRam(\"scan\", getRamCost(\"scan\"));\n      const server = getServer(ip);\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"scan\", `Invalid IP/hostname: ${ip}.`);\n      }\n      const out = [];\n      for (let i = 0; i < server.serversOnNetwork.length; i++) {\n        let entry;\n        const s = getServerOnNetwork(server, i);\n        if (s === null) continue;\n        if (hostnames) {\n          entry = s.hostname;\n        } else {\n          entry = s.ip;\n        }\n        if (entry == null) {\n          continue;\n        }\n        out.push(entry);\n      }\n      workerScript.log(\"scan\", `returned ${server.serversOnNetwork.length} connections for ${server.hostname}`);\n      return out;\n    },\n    hack: function (ip: any, { threads: requestedThreads, stock }: any = {}): any {\n      updateDynamicRam(\"hack\", getRamCost(\"hack\"));\n      return hack(ip, false, { threads: requestedThreads, stock: stock });\n    },\n    hackAnalyzeThreads: function (ip: any, hackAmount: any): any {\n      updateDynamicRam(\"hackAnalyzeThreads\", getRamCost(\"hackAnalyzeThreads\"));\n\n      // Check argument validity\n      const server = safeGetServer(ip, \"hackAnalyzeThreads\");\n      if (!(server instanceof Server)) {\n        workerScript.log(\"hackAnalyzeThreads\", \"Cannot be executed on this server.\");\n        return -1;\n      }\n      if (isNaN(hackAmount)) {\n        throw makeRuntimeErrorMsg(\n          \"hackAnalyzeThreads\",\n          `Invalid growth argument passed into hackAnalyzeThreads: ${hackAmount}. Must be numeric.`,\n        );\n      }\n\n      if (hackAmount < 0 || hackAmount > server.moneyAvailable) {\n        return -1;\n      }\n\n      const percentHacked = calculatePercentMoneyHacked(server, Player);\n\n      return hackAmount / Math.floor(server.moneyAvailable * percentHacked);\n    },\n    hackAnalyzePercent: function (ip: any): any {\n      updateDynamicRam(\"hackAnalyzePercent\", getRamCost(\"hackAnalyzePercent\"));\n\n      const server = safeGetServer(ip, \"hackAnalyzePercent\");\n      if (!(server instanceof Server)) {\n        workerScript.log(\"hackAnalyzePercent\", \"Cannot be executed on this server.\");\n        return false;\n      }\n\n      return calculatePercentMoneyHacked(server, Player) * 100;\n    },\n    hackChance: function (ip: any): any {\n      updateDynamicRam(\"hackChance\", getRamCost(\"hackChance\"));\n\n      const server = safeGetServer(ip, \"hackChance\");\n      if (!(server instanceof Server)) {\n        workerScript.log(\"hackChance\", \"Cannot be executed on this server.\");\n        return false;\n      }\n\n      return calculateHackingChance(server, Player);\n    },\n    sleep: function (time: any): any {\n      if (time === undefined) {\n        throw makeRuntimeErrorMsg(\"sleep\", \"Takes 1 argument.\");\n      }\n      workerScript.log(\"sleep\", `Sleeping for ${time} milliseconds`);\n      return netscriptDelay(time, workerScript).then(function () {\n        return Promise.resolve(true);\n      });\n    },\n    grow: function (ip: any, { threads: requestedThreads, stock }: any = {}): any {\n      updateDynamicRam(\"grow\", getRamCost(\"grow\"));\n      const threads = resolveNetscriptRequestedThreads(workerScript, \"grow\", requestedThreads);\n      if (ip === undefined) {\n        throw makeRuntimeErrorMsg(\"grow\", \"Takes 1 argument.\");\n      }\n      const server = getServer(ip);\n      if (!(server instanceof Server)) {\n        workerScript.log(\"grow\", \"Cannot be executed on this server.\");\n        return false;\n      }\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"grow\", `Invalid IP/hostname: ${ip}.`);\n      }\n\n      const host = getServer(workerScript.serverIp);\n      if (!(host instanceof Server)) {\n        workerScript.log(\"grow\", \"Cannot be executed on this server.\");\n        return false;\n      }\n\n      // No root access or skill level too low\n      const canHack = netscriptCanGrow(server);\n      if (!canHack.res) {\n        throw makeRuntimeErrorMsg(\"grow\", canHack.msg || \"\");\n      }\n\n      const growTime = calculateGrowTime(server, Player);\n      workerScript.log(\n        \"grow\",\n        `Executing on '${server.hostname}' in ${convertTimeMsToTimeElapsedString(\n          growTime * 1000,\n          true,\n        )} (t=${numeralWrapper.formatThreads(threads)}).`,\n      );\n      return netscriptDelay(growTime * 1000, workerScript).then(function () {\n        if (workerScript.env.stopFlag) {\n          return Promise.reject(workerScript);\n        }\n        const moneyBefore = server.moneyAvailable <= 0 ? 1 : server.moneyAvailable;\n        server.moneyAvailable += 1 * threads; // It can be grown even if it has no money\n        processSingleServerGrowth(server, threads, Player, host.cpuCores);\n        const moneyAfter = server.moneyAvailable;\n        workerScript.scriptRef.recordGrow(server.ip, threads);\n        const expGain = calculateHackingExpGain(server, Player) * threads;\n        const logGrowPercent = moneyAfter / moneyBefore - 1;\n        workerScript.log(\n          \"grow\",\n          `Available money on '${server.hostname}' grown by ${numeralWrapper.formatPercentage(\n            logGrowPercent,\n            6,\n          )}. Gained ${numeralWrapper.formatExp(expGain)} hacking exp (t=${numeralWrapper.formatThreads(threads)}).`,\n        );\n        workerScript.scriptRef.onlineExpGained += expGain;\n        Player.gainHackingExp(expGain);\n        if (stock) {\n          influenceStockThroughServerGrow(server, moneyAfter - moneyBefore);\n        }\n        return Promise.resolve(moneyAfter / moneyBefore);\n      });\n    },\n    growthAnalyze: function (ip: any, growth: any): any {\n      updateDynamicRam(\"growthAnalyze\", getRamCost(\"growthAnalyze\"));\n\n      // Check argument validity\n      const server = safeGetServer(ip, \"growthAnalyze\");\n      if (!(server instanceof Server)) {\n        workerScript.log(\"growthAnalyze\", \"Cannot be executed on this server.\");\n        return false;\n      }\n      if (typeof growth !== \"number\" || isNaN(growth) || growth < 1 || !isFinite(growth)) {\n        throw makeRuntimeErrorMsg(\"growthAnalyze\", `Invalid argument: growth must be numeric and >= 1, is ${growth}.`);\n      }\n\n      return numCycleForGrowth(server, Number(growth), Player);\n    },\n    weaken: function (ip: any, { threads: requestedThreads }: any = {}): any {\n      updateDynamicRam(\"weaken\", getRamCost(\"weaken\"));\n      const threads = resolveNetscriptRequestedThreads(workerScript, \"weaken\", requestedThreads);\n      if (ip === undefined) {\n        throw makeRuntimeErrorMsg(\"weaken\", \"Takes 1 argument.\");\n      }\n      const server = getServer(ip);\n      if (!(server instanceof Server)) {\n        workerScript.log(\"weaken\", \"Cannot be executed on this server.\");\n        return false;\n      }\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"weaken\", `Invalid IP/hostname: ${ip}`);\n      }\n\n      // No root access or skill level too low\n      const canHack = netscriptCanWeaken(server);\n      if (!canHack.res) {\n        throw makeRuntimeErrorMsg(\"weaken\", canHack.msg || \"\");\n      }\n\n      const weakenTime = calculateWeakenTime(server, Player);\n      workerScript.log(\n        \"weaken\",\n        `Executing on '${server.hostname}' in ${convertTimeMsToTimeElapsedString(\n          weakenTime * 1000,\n          true,\n        )} (t=${numeralWrapper.formatThreads(threads)})`,\n      );\n      return netscriptDelay(weakenTime * 1000, workerScript).then(function () {\n        if (workerScript.env.stopFlag) return Promise.reject(workerScript);\n        const host = getServer(workerScript.serverIp);\n        if (host === null) {\n          workerScript.log(\"weaken\", \"Server is null, did it die?\");\n          return Promise.resolve(0);\n        }\n        const coreBonus = 1 + (host.cpuCores - 1) / 16;\n        server.weaken(CONSTANTS.ServerWeakenAmount * threads * coreBonus);\n        workerScript.scriptRef.recordWeaken(server.ip, threads);\n        const expGain = calculateHackingExpGain(server, Player) * threads;\n        workerScript.log(\n          \"weaken\",\n          `'${server.hostname}' security level weakened to ${server.hackDifficulty}. Gained ${numeralWrapper.formatExp(\n            expGain,\n          )} hacking exp (t=${numeralWrapper.formatThreads(threads)})`,\n        );\n        workerScript.scriptRef.onlineExpGained += expGain;\n        Player.gainHackingExp(expGain);\n        return Promise.resolve(CONSTANTS.ServerWeakenAmount * threads);\n      });\n    },\n    print: function (...args: any[]): void {\n      if (args.length === 0) {\n        throw makeRuntimeErrorMsg(\"print\", \"Takes at least 1 argument.\");\n      }\n      workerScript.print(argsToString(args));\n    },\n    tprint: function (...args: any[]): void {\n      if (args.length === 0) {\n        throw makeRuntimeErrorMsg(\"tprint\", \"Takes at least 1 argument.\");\n      }\n      Terminal.print(`${workerScript.scriptRef.filename}: ${argsToString(args)}`);\n    },\n    tprintf: function (format: any, ...args: any): any {\n      Terminal.print(vsprintf(format, args));\n    },\n    clearLog: function (): any {\n      workerScript.scriptRef.clearLog();\n    },\n    disableLog: function (fn: any): any {\n      if (fn === \"ALL\") {\n        for (fn in possibleLogs) {\n          workerScript.disableLogs[fn] = true;\n        }\n        workerScript.log(\"disableLog\", `Disabled logging for all functions`);\n      } else if (possibleLogs[fn] === undefined) {\n        throw makeRuntimeErrorMsg(\"disableLog\", `Invalid argument: ${fn}.`);\n      } else {\n        workerScript.disableLogs[fn] = true;\n        workerScript.log(\"disableLog\", `Disabled logging for ${fn}`);\n      }\n    },\n    enableLog: function (fn: any): any {\n      if (possibleLogs[fn] === undefined) {\n        throw makeRuntimeErrorMsg(\"enableLog\", `Invalid argument: ${fn}.`);\n      }\n      delete workerScript.disableLogs[fn];\n      workerScript.log(\"enableLog\", `Enabled logging for ${fn}`);\n    },\n    isLogEnabled: function (fn: any): any {\n      if (possibleLogs[fn] === undefined) {\n        throw makeRuntimeErrorMsg(\"isLogEnabled\", `Invalid argument: ${fn}.`);\n      }\n      return workerScript.disableLogs[fn] ? false : true;\n    },\n    getScriptLogs: function (fn: any, ip: any, ...scriptArgs: any): any {\n      const runningScriptObj = getRunningScript(fn, ip, \"getScriptLogs\", scriptArgs);\n      if (runningScriptObj == null) {\n        workerScript.log(\"getScriptLogs\", getCannotFindRunningScriptErrorMessage(fn, ip, scriptArgs));\n        return \"\";\n      }\n\n      return runningScriptObj.logs.slice();\n    },\n    tail: function (fn: any, ip: any = workerScript.serverIp, ...scriptArgs: any): any {\n      let runningScriptObj;\n      if (arguments.length === 0) {\n        runningScriptObj = workerScript.scriptRef;\n      } else if (typeof fn === \"number\") {\n        runningScriptObj = getRunningScriptByPid(fn, \"tail\");\n      } else {\n        runningScriptObj = getRunningScript(fn, ip, \"tail\", scriptArgs);\n      }\n      if (runningScriptObj == null) {\n        workerScript.log(\"tail\", getCannotFindRunningScriptErrorMessage(fn, ip, scriptArgs));\n        return;\n      }\n\n      LogBoxEvents.emit(runningScriptObj);\n    },\n    nuke: function (ip: any): any {\n      updateDynamicRam(\"nuke\", getRamCost(\"nuke\"));\n      if (ip === undefined) {\n        throw makeRuntimeErrorMsg(\"nuke\", \"Takes 1 argument.\");\n      }\n      const server = getServer(ip);\n      if (!(server instanceof Server)) {\n        workerScript.log(\"nuke\", \"Cannot be executed on this server.\");\n        return false;\n      }\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"nuke\", `Invalid IP/hostname: ${ip}.`);\n      }\n      if (!Player.hasProgram(Programs.NukeProgram.name)) {\n        throw makeRuntimeErrorMsg(\"nuke\", \"You do not have the NUKE.exe virus!\");\n      }\n      if (server.openPortCount < server.numOpenPortsRequired) {\n        throw makeRuntimeErrorMsg(\"nuke\", \"Not enough ports opened to use NUKE.exe virus.\");\n      }\n      if (server.hasAdminRights) {\n        workerScript.log(\"nuke\", `Already have root access to '${server.hostname}'.`);\n      } else {\n        server.hasAdminRights = true;\n        workerScript.log(\"nuke\", `Executed NUKE.exe virus on '${server.hostname}' to gain root access.`);\n      }\n      return true;\n    },\n    brutessh: function (ip: any): any {\n      updateDynamicRam(\"brutessh\", getRamCost(\"brutessh\"));\n      if (ip === undefined) {\n        throw makeRuntimeErrorMsg(\"brutessh\", \"Takes 1 argument.\");\n      }\n      const server = getServer(ip);\n      if (!(server instanceof Server)) {\n        workerScript.log(\"brutessh\", \"Cannot be executed on this server.\");\n        return false;\n      }\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"brutessh\", `Invalid IP/hostname: ${ip}.`);\n      }\n      if (!Player.hasProgram(Programs.BruteSSHProgram.name)) {\n        throw makeRuntimeErrorMsg(\"brutessh\", \"You do not have the BruteSSH.exe program!\");\n      }\n      if (!server.sshPortOpen) {\n        workerScript.log(\"brutessh\", `Executed BruteSSH.exe on '${server.hostname}' to open SSH port (22).`);\n        server.sshPortOpen = true;\n        ++server.openPortCount;\n      } else {\n        workerScript.log(\"brutessh\", `SSH Port (22) already opened on '${server.hostname}'.`);\n      }\n      return true;\n    },\n    ftpcrack: function (ip: any): any {\n      updateDynamicRam(\"ftpcrack\", getRamCost(\"ftpcrack\"));\n      if (ip === undefined) {\n        throw makeRuntimeErrorMsg(\"ftpcrack\", \"Takes 1 argument.\");\n      }\n      const server = getServer(ip);\n      if (!(server instanceof Server)) {\n        workerScript.log(\"ftpcrack\", \"Cannot be executed on this server.\");\n        return false;\n      }\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"ftpcrack\", `Invalid IP/hostname: ${ip}.`);\n      }\n      if (!Player.hasProgram(Programs.FTPCrackProgram.name)) {\n        throw makeRuntimeErrorMsg(\"ftpcrack\", \"You do not have the FTPCrack.exe program!\");\n      }\n      if (!server.ftpPortOpen) {\n        workerScript.log(\"ftpcrack\", `Executed FTPCrack.exe on '${server.hostname}' to open FTP port (21).`);\n        server.ftpPortOpen = true;\n        ++server.openPortCount;\n      } else {\n        workerScript.log(\"ftpcrack\", `FTP Port (21) already opened on '${server.hostname}'.`);\n      }\n      return true;\n    },\n    relaysmtp: function (ip: any): any {\n      updateDynamicRam(\"relaysmtp\", getRamCost(\"relaysmtp\"));\n      if (ip === undefined) {\n        throw makeRuntimeErrorMsg(\"relaysmtp\", \"Takes 1 argument.\");\n      }\n      const server = getServer(ip);\n      if (!(server instanceof Server)) {\n        workerScript.log(\"relaysmtp\", \"Cannot be executed on this server.\");\n        return false;\n      }\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"relaysmtp\", `Invalid IP/hostname: ${ip}.`);\n      }\n      if (!Player.hasProgram(Programs.RelaySMTPProgram.name)) {\n        throw makeRuntimeErrorMsg(\"relaysmtp\", \"You do not have the relaySMTP.exe program!\");\n      }\n      if (!server.smtpPortOpen) {\n        workerScript.log(\"relaysmtp\", `Executed relaySMTP.exe on '${server.hostname}' to open SMTP port (25).`);\n        server.smtpPortOpen = true;\n        ++server.openPortCount;\n      } else {\n        workerScript.log(\"relaysmtp\", `SMTP Port (25) already opened on '${server.hostname}'.`);\n      }\n      return true;\n    },\n    httpworm: function (ip: any): any {\n      updateDynamicRam(\"httpworm\", getRamCost(\"httpworm\"));\n      if (ip === undefined) {\n        throw makeRuntimeErrorMsg(\"httpworm\", \"Takes 1 argument\");\n      }\n      const server = getServer(ip);\n      if (!(server instanceof Server)) {\n        workerScript.log(\"httpworm\", \"Cannot be executed on this server.\");\n        return false;\n      }\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"httpworm\", `Invalid IP/hostname: ${ip}`);\n      }\n      if (!Player.hasProgram(Programs.HTTPWormProgram.name)) {\n        throw makeRuntimeErrorMsg(\"httpworm\", \"You do not have the HTTPWorm.exe program!\");\n      }\n      if (!server.httpPortOpen) {\n        workerScript.log(\"httpworm\", `Executed HTTPWorm.exe on '${server.hostname}' to open HTTP port (80).`);\n        server.httpPortOpen = true;\n        ++server.openPortCount;\n      } else {\n        workerScript.log(\"httpworm\", `HTTP Port (80) already opened on '${server.hostname}'.`);\n      }\n      return true;\n    },\n    sqlinject: function (ip: any): any {\n      updateDynamicRam(\"sqlinject\", getRamCost(\"sqlinject\"));\n      if (ip === undefined) {\n        throw makeRuntimeErrorMsg(\"sqlinject\", \"Takes 1 argument.\");\n      }\n      const server = getServer(ip);\n      if (!(server instanceof Server)) {\n        workerScript.log(\"sqlinject\", \"Cannot be executed on this server.\");\n        return false;\n      }\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"sqlinject\", `Invalid IP/hostname: ${ip}`);\n      }\n      if (!Player.hasProgram(Programs.SQLInjectProgram.name)) {\n        throw makeRuntimeErrorMsg(\"sqlinject\", \"You do not have the SQLInject.exe program!\");\n      }\n      if (!server.sqlPortOpen) {\n        workerScript.log(\"sqlinject\", `Executed SQLInject.exe on '${server.hostname}' to open SQL port (1433).`);\n        server.sqlPortOpen = true;\n        ++server.openPortCount;\n      } else {\n        workerScript.log(\"sqlinject\", `SQL Port (1433) already opened on '${server.hostname}'.`);\n      }\n      return true;\n    },\n    run: function (scriptname: any, threads: any = 1, ...args: any[]): any {\n      updateDynamicRam(\"run\", getRamCost(\"run\"));\n      if (scriptname === undefined) {\n        throw makeRuntimeErrorMsg(\"run\", \"Usage: run(scriptname, [numThreads], [arg1], [arg2]...)\");\n      }\n      if (isNaN(threads) || threads <= 0) {\n        throw makeRuntimeErrorMsg(\"run\", `Invalid thread count. Must be numeric and > 0, is ${threads}`);\n      }\n      const scriptServer = getServer(workerScript.serverIp);\n      if (scriptServer == null) {\n        throw makeRuntimeErrorMsg(\"run\", \"Could not find server. This is a bug. Report to dev.\");\n      }\n\n      return runScriptFromScript(\"run\", scriptServer, scriptname, args, workerScript, threads);\n    },\n    exec: function (scriptname: any, ip: any, threads: any = 1, ...args: any[]): any {\n      updateDynamicRam(\"exec\", getRamCost(\"exec\"));\n      if (scriptname === undefined || ip === undefined) {\n        throw makeRuntimeErrorMsg(\"exec\", \"Usage: exec(scriptname, server, [numThreads], [arg1], [arg2]...)\");\n      }\n      if (isNaN(threads) || threads <= 0) {\n        throw makeRuntimeErrorMsg(\"exec\", `Invalid thread count. Must be numeric and > 0, is ${threads}`);\n      }\n      const server = getServer(ip);\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"exec\", `Invalid IP/hostname: ${ip}`);\n      }\n      return runScriptFromScript(\"exec\", server, scriptname, args, workerScript, threads);\n    },\n    spawn: function (scriptname: any, threads: any, ...args: any[]): any {\n      updateDynamicRam(\"spawn\", getRamCost(\"spawn\"));\n      if (!scriptname || !threads) {\n        throw makeRuntimeErrorMsg(\"spawn\", \"Usage: spawn(scriptname, threads)\");\n      }\n\n      const spawnDelay = 10;\n      setTimeoutRef(() => {\n        if (isNaN(threads) || threads <= 0) {\n          throw makeRuntimeErrorMsg(\"spawn\", `Invalid thread count. Must be numeric and > 0, is ${threads}`);\n        }\n        const scriptServer = getServer(workerScript.serverIp);\n        if (scriptServer == null) {\n          throw makeRuntimeErrorMsg(\"spawn\", \"Could not find server. This is a bug. Report to dev\");\n        }\n\n        return runScriptFromScript(\"spawn\", scriptServer, scriptname, args, workerScript, threads);\n      }, spawnDelay * 1e3);\n\n      workerScript.log(\"spawn\", `Will execute '${scriptname}' in ${spawnDelay} seconds`);\n\n      workerScript.running = false; // Prevent workerScript from \"finishing execution naturally\"\n      if (killWorkerScript(workerScript)) {\n        workerScript.log(\"spawn\", \"Exiting...\");\n      }\n    },\n    kill: function (filename: any, ip: any, ...scriptArgs: any): any {\n      updateDynamicRam(\"kill\", getRamCost(\"kill\"));\n\n      let res;\n      const killByPid = typeof filename === \"number\";\n      if (killByPid) {\n        // Kill by pid\n        res = killWorkerScript(filename);\n      } else {\n        // Kill by filename/ip\n        if (filename === undefined || ip === undefined) {\n          throw makeRuntimeErrorMsg(\"kill\", \"Usage: kill(scriptname, server, [arg1], [arg2]...)\");\n        }\n\n        const server = safeGetServer(ip);\n        const runningScriptObj = getRunningScript(filename, ip, \"kill\", scriptArgs);\n        if (runningScriptObj == null) {\n          workerScript.log(\"kill\", getCannotFindRunningScriptErrorMessage(filename, ip, scriptArgs));\n          return false;\n        }\n\n        res = killWorkerScript(runningScriptObj, server.ip);\n      }\n\n      if (res) {\n        if (killByPid) {\n          workerScript.log(\"kill\", `Killing script with PID ${filename}`);\n        } else {\n          workerScript.log(\"kill\", `Killing '${filename}' on '${ip}' with args: ${arrayToString(scriptArgs)}.`);\n        }\n        return true;\n      } else {\n        if (killByPid) {\n          workerScript.log(\"kill\", `No script with PID ${filename}`);\n        } else {\n          workerScript.log(\"kill\", `No such script '${filename}' on '${ip}' with args: ${arrayToString(scriptArgs)}`);\n        }\n        return false;\n      }\n    },\n    killall: function (ip: any = workerScript.serverIp): any {\n      updateDynamicRam(\"killall\", getRamCost(\"killall\"));\n      if (ip === undefined) {\n        throw makeRuntimeErrorMsg(\"killall\", \"Takes 1 argument\");\n      }\n      const server = getServer(ip);\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"killall\", `Invalid IP/hostname: ${ip}`);\n      }\n      const scriptsRunning = server.runningScripts.length > 0;\n      for (let i = server.runningScripts.length - 1; i >= 0; --i) {\n        killWorkerScript(server.runningScripts[i], server.ip, false);\n      }\n      WorkerScriptStartStopEventEmitter.emit();\n      workerScript.log(\n        \"killall\",\n        `Killing all scripts on '${server.hostname}'. May take a few minutes for the scripts to die.`,\n      );\n\n      return scriptsRunning;\n    },\n    exit: function (): any {\n      workerScript.running = false; // Prevent workerScript from \"finishing execution naturally\"\n      if (killWorkerScript(workerScript)) {\n        workerScript.log(\"exit\", \"Exiting...\");\n      } else {\n        workerScript.log(\"exit\", \"Failed. This is a bug. Report to dev.\");\n      }\n    },\n    scp: function (scriptname: any, ip1: any, ip2: any): any {\n      updateDynamicRam(\"scp\", getRamCost(\"scp\"));\n      if (arguments.length !== 2 && arguments.length !== 3) {\n        throw makeRuntimeErrorMsg(\"scp\", \"Takes 2 or 3 arguments\");\n      }\n      if (scriptname && scriptname.constructor === Array) {\n        // Recursively call scp on all elements of array\n        let res = false;\n        scriptname.forEach(function (script) {\n          if (NetscriptFunctions(workerScript).scp(script, ip1, ip2)) {\n            res = true;\n          }\n        });\n        return res;\n      }\n\n      // Invalid file type\n      if (!isValidFilePath(scriptname)) {\n        throw makeRuntimeErrorMsg(\"scp\", `Invalid filename: '${scriptname}'`);\n      }\n\n      // Invalid file name\n      if (!scriptname.endsWith(\".lit\") && !isScriptFilename(scriptname) && !scriptname.endsWith(\"txt\")) {\n        throw makeRuntimeErrorMsg(\"scp\", \"Only works for .script, .lit, and .txt files\");\n      }\n\n      let destServer, currServ;\n\n      if (ip2 != null) {\n        // 3 Argument version: scriptname, source, destination\n        if (scriptname === undefined || ip1 === undefined || ip2 === undefined) {\n          throw makeRuntimeErrorMsg(\"scp\", \"Takes 2 or 3 arguments\");\n        }\n        destServer = getServer(ip2);\n        if (destServer == null) {\n          throw makeRuntimeErrorMsg(\"scp\", `Invalid IP/hostname: ${ip2}`);\n        }\n\n        currServ = getServer(ip1);\n        if (currServ == null) {\n          throw makeRuntimeErrorMsg(\"scp\", `Invalid IP/hostname: ${ip1}`);\n        }\n      } else if (ip1 != null) {\n        // 2 Argument version: scriptname, destination\n        if (scriptname === undefined || ip1 === undefined) {\n          throw makeRuntimeErrorMsg(\"scp\", \"Takes 2 or 3 arguments\");\n        }\n        destServer = getServer(ip1);\n        if (destServer == null) {\n          throw makeRuntimeErrorMsg(\"scp\", `Invalid IP/hostname: ${ip1}`);\n        }\n\n        currServ = getServer(workerScript.serverIp);\n        if (currServ == null) {\n          throw makeRuntimeErrorMsg(\"scp\", \"Could not find server ip for this script. This is a bug. Report to dev.\");\n        }\n      } else {\n        throw makeRuntimeErrorMsg(\"scp\", \"Takes 2 or 3 arguments\");\n      }\n\n      // Scp for lit files\n      if (scriptname.endsWith(\".lit\")) {\n        let found = false;\n        for (let i = 0; i < currServ.messages.length; ++i) {\n          if (!(currServ.messages[i] instanceof Message) && currServ.messages[i] == scriptname) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          workerScript.log(\"scp\", `File '${scriptname}' does not exist.`);\n          return false;\n        }\n\n        for (let i = 0; i < destServer.messages.length; ++i) {\n          if (destServer.messages[i] === scriptname) {\n            workerScript.log(\"scp\", `File '${scriptname}' copied over to '${destServer.hostname}'.`);\n            return true; // Already exists\n          }\n        }\n        destServer.messages.push(scriptname);\n        workerScript.log(\"scp\", `File '${scriptname}' copied over to '${destServer.hostname}'.`);\n        return true;\n      }\n\n      // Scp for text files\n      if (scriptname.endsWith(\".txt\")) {\n        let txtFile;\n        for (let i = 0; i < currServ.textFiles.length; ++i) {\n          if (currServ.textFiles[i].fn === scriptname) {\n            txtFile = currServ.textFiles[i];\n            break;\n          }\n        }\n        if (txtFile === undefined) {\n          workerScript.log(\"scp\", `File '${scriptname}' does not exist.`);\n          return false;\n        }\n\n        for (let i = 0; i < destServer.textFiles.length; ++i) {\n          if (destServer.textFiles[i].fn === scriptname) {\n            // Overwrite\n            destServer.textFiles[i].text = txtFile.text;\n            workerScript.log(\"scp\", `File '${scriptname}' copied over to '${destServer.hostname}'.`);\n            return true;\n          }\n        }\n        const newFile = new TextFile(txtFile.fn, txtFile.text);\n        destServer.textFiles.push(newFile);\n        workerScript.log(\"scp\", `File '${scriptname}' copied over to '${destServer.hostname}'.`);\n        return true;\n      }\n\n      // Scp for script files\n      let sourceScript = null;\n      for (let i = 0; i < currServ.scripts.length; ++i) {\n        if (scriptname == currServ.scripts[i].filename) {\n          sourceScript = currServ.scripts[i];\n          break;\n        }\n      }\n      if (sourceScript == null) {\n        workerScript.log(\"scp\", `File '${scriptname}' does not exist.`);\n        return false;\n      }\n\n      // Overwrite script if it already exists\n      for (let i = 0; i < destServer.scripts.length; ++i) {\n        if (scriptname == destServer.scripts[i].filename) {\n          workerScript.log(\"scp\", `WARNING: File '${scriptname}' overwritten on '${destServer.hostname}'`);\n          const oldScript = destServer.scripts[i];\n          // If it's the exact same file don't actually perform the\n          // copy to avoid recompiling uselessly. Players tend to scp\n          // liberally.\n          if (oldScript.code === sourceScript.code) return true;\n          oldScript.code = sourceScript.code;\n          oldScript.ramUsage = sourceScript.ramUsage;\n          oldScript.markUpdated();\n          return true;\n        }\n      }\n\n      // Create new script if it does not already exist\n      const newScript = new Script(scriptname);\n      newScript.code = sourceScript.code;\n      newScript.ramUsage = sourceScript.ramUsage;\n      newScript.server = destServer.ip;\n      destServer.scripts.push(newScript);\n      workerScript.log(\"scp\", `File '${scriptname}' copied over to '${destServer.hostname}'.`);\n      return true;\n    },\n    ls: function (ip: any, grep: any): any {\n      updateDynamicRam(\"ls\", getRamCost(\"ls\"));\n      if (ip === undefined) {\n        throw makeRuntimeErrorMsg(\"ls\", \"Usage: ls(ip/hostname, [grep filter])\");\n      }\n      const server = getServer(ip);\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"ls\", `Invalid IP/hostname: ${ip}`);\n      }\n\n      // Get the grep filter, if one exists\n      let filter = \"\";\n      if (arguments.length >= 2) {\n        filter = grep.toString();\n      }\n\n      const allFiles = [];\n      for (let i = 0; i < server.programs.length; i++) {\n        if (filter) {\n          if (server.programs[i].includes(filter)) {\n            allFiles.push(server.programs[i]);\n          }\n        } else {\n          allFiles.push(server.programs[i]);\n        }\n      }\n      for (let i = 0; i < server.scripts.length; i++) {\n        if (filter) {\n          if (server.scripts[i].filename.includes(filter)) {\n            allFiles.push(server.scripts[i].filename);\n          }\n        } else {\n          allFiles.push(server.scripts[i].filename);\n        }\n      }\n      for (let i = 0; i < server.messages.length; i++) {\n        if (filter) {\n          const msg = server.messages[i];\n          if (msg instanceof Message) {\n            if (msg.filename.includes(filter)) {\n              allFiles.push(msg.filename);\n            }\n          } else if (msg.includes(filter)) {\n            allFiles.push(msg);\n          }\n        } else {\n          const msg = server.messages[i];\n          if (msg instanceof Message) {\n            allFiles.push(msg.filename);\n          } else {\n            allFiles.push(msg);\n          }\n        }\n      }\n\n      for (let i = 0; i < server.textFiles.length; i++) {\n        if (filter) {\n          if (server.textFiles[i].fn.includes(filter)) {\n            allFiles.push(server.textFiles[i].fn);\n          }\n        } else {\n          allFiles.push(server.textFiles[i].fn);\n        }\n      }\n\n      for (let i = 0; i < server.contracts.length; ++i) {\n        if (filter) {\n          if (server.contracts[i].fn.includes(filter)) {\n            allFiles.push(server.contracts[i].fn);\n          }\n        } else {\n          allFiles.push(server.contracts[i].fn);\n        }\n      }\n\n      // Sort the files alphabetically then print each\n      allFiles.sort();\n      return allFiles;\n    },\n    ps: function (ip: any = workerScript.serverIp): any {\n      updateDynamicRam(\"ps\", getRamCost(\"ps\"));\n      const server = getServer(ip);\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"ps\", `Invalid IP/hostname: ${ip}`);\n      }\n      const processes = [];\n      for (const i in server.runningScripts) {\n        const script = server.runningScripts[i];\n        processes.push({\n          filename: script.filename,\n          threads: script.threads,\n          args: script.args.slice(),\n          pid: script.pid,\n        });\n      }\n      return processes;\n    },\n    hasRootAccess: function (ip: any): any {\n      updateDynamicRam(\"hasRootAccess\", getRamCost(\"hasRootAccess\"));\n      if (ip === undefined) {\n        throw makeRuntimeErrorMsg(\"hasRootAccess\", \"Takes 1 argument\");\n      }\n      const server = getServer(ip);\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"hasRootAccess\", `Invalid IP/hostname: ${ip}`);\n      }\n      return server.hasAdminRights;\n    },\n    getIp: function (): any {\n      updateDynamicRam(\"getIp\", getRamCost(\"getIp\"));\n      const scriptServer = getServer(workerScript.serverIp);\n      if (scriptServer == null) {\n        throw makeRuntimeErrorMsg(\"getIp\", \"Could not find server. This is a bug. Report to dev.\");\n      }\n      return scriptServer.ip;\n    },\n    getHostname: function (): any {\n      updateDynamicRam(\"getHostname\", getRamCost(\"getHostname\"));\n      const scriptServer = getServer(workerScript.serverIp);\n      if (scriptServer == null) {\n        throw makeRuntimeErrorMsg(\"getHostname\", \"Could not find server. This is a bug. Report to dev.\");\n      }\n      return scriptServer.hostname;\n    },\n    getHackingLevel: function (): any {\n      updateDynamicRam(\"getHackingLevel\", getRamCost(\"getHackingLevel\"));\n      Player.updateSkillLevels();\n      workerScript.log(\"getHackingLevel\", `returned ${Player.hacking_skill}`);\n      return Player.hacking_skill;\n    },\n    getHackingMultipliers: function (): any {\n      updateDynamicRam(\"getHackingMultipliers\", getRamCost(\"getHackingMultipliers\"));\n      return {\n        chance: Player.hacking_chance_mult,\n        speed: Player.hacking_speed_mult,\n        money: Player.hacking_money_mult,\n        growth: Player.hacking_grow_mult,\n      };\n    },\n    getHacknetMultipliers: function (): any {\n      updateDynamicRam(\"getHacknetMultipliers\", getRamCost(\"getHacknetMultipliers\"));\n      return {\n        production: Player.hacknet_node_money_mult,\n        purchaseCost: Player.hacknet_node_purchase_cost_mult,\n        ramCost: Player.hacknet_node_ram_cost_mult,\n        coreCost: Player.hacknet_node_core_cost_mult,\n        levelCost: Player.hacknet_node_level_cost_mult,\n      };\n    },\n    getBitNodeMultipliers: function (): any {\n      updateDynamicRam(\"getBitNodeMultipliers\", getRamCost(\"getBitNodeMultipliers\"));\n      if (SourceFileFlags[5] <= 0 && Player.bitNodeN !== 5) {\n        throw makeRuntimeErrorMsg(\"getBitNodeMultipliers\", \"Requires Source-File 5 to run.\");\n      }\n      const copy = Object.assign({}, BitNodeMultipliers);\n      return copy;\n    },\n    getServer: function (ip: any): any {\n      updateDynamicRam(\"getServer\", getRamCost(\"getServer\"));\n      if (SourceFileFlags[5] <= 0 && Player.bitNodeN !== 5) {\n        throw makeRuntimeErrorMsg(\"getServer\", \"Requires Source-File 5 to run.\");\n      }\n      const server = safeGetServer(ip, \"getServer\");\n      const copy = Object.assign({}, server);\n      // These fields should be hidden.\n      copy.contracts = [];\n      copy.messages = [];\n      copy.runningScripts = [];\n      copy.scripts = [];\n      copy.textFiles = [];\n      copy.programs = [];\n      copy.serversOnNetwork = [];\n      return copy;\n    },\n    getServerMoneyAvailable: function (ip: any): any {\n      updateDynamicRam(\"getServerMoneyAvailable\", getRamCost(\"getServerMoneyAvailable\"));\n      const server = safeGetServer(ip, \"getServerMoneyAvailable\");\n      if (!(server instanceof Server)) {\n        workerScript.log(\"getServerNumPortsRequired\", \"Cannot be executed on this server.\");\n        return 0;\n      }\n      if (failOnHacknetServer(server, \"getServerMoneyAvailable\")) {\n        return 0;\n      }\n      if (server.hostname == \"home\") {\n        // Return player's money\n        workerScript.log(\n          \"getServerMoneyAvailable\",\n          `returned player's money: ${numeralWrapper.formatMoney(Player.money.toNumber())}`,\n        );\n        return Player.money.toNumber();\n      }\n      workerScript.log(\n        \"getServerMoneyAvailable\",\n        `returned ${numeralWrapper.formatMoney(server.moneyAvailable)} for '${server.hostname}'`,\n      );\n      return server.moneyAvailable;\n    },\n    getServerSecurityLevel: function (ip: any): any {\n      updateDynamicRam(\"getServerSecurityLevel\", getRamCost(\"getServerSecurityLevel\"));\n      const server = safeGetServer(ip, \"getServerSecurityLevel\");\n      if (!(server instanceof Server)) {\n        workerScript.log(\"getServerNumPortsRequired\", \"Cannot be executed on this server.\");\n        return 1;\n      }\n      if (failOnHacknetServer(server, \"getServerSecurityLevel\")) {\n        return 1;\n      }\n      workerScript.log(\n        \"getServerSecurityLevel\",\n        `returned ${numeralWrapper.formatServerSecurity(server.hackDifficulty)} for '${server.hostname}'`,\n      );\n      return server.hackDifficulty;\n    },\n    getServerBaseSecurityLevel: function (ip: any): any {\n      updateDynamicRam(\"getServerBaseSecurityLevel\", getRamCost(\"getServerBaseSecurityLevel\"));\n      const server = safeGetServer(ip, \"getServerBaseSecurityLevel\");\n      if (!(server instanceof Server)) {\n        workerScript.log(\"getServerNumPortsRequired\", \"Cannot be executed on this server.\");\n        return 1;\n      }\n      if (failOnHacknetServer(server, \"getServerBaseSecurityLevel\")) {\n        return 1;\n      }\n      workerScript.log(\n        \"getServerBaseSecurityLevel\",\n        `returned ${numeralWrapper.formatServerSecurity(server.baseDifficulty)} for '${server.hostname}'`,\n      );\n      return server.baseDifficulty;\n    },\n    getServerMinSecurityLevel: function (ip: any): any {\n      updateDynamicRam(\"getServerMinSecurityLevel\", getRamCost(\"getServerMinSecurityLevel\"));\n      const server = safeGetServer(ip, \"getServerMinSecurityLevel\");\n      if (!(server instanceof Server)) {\n        workerScript.log(\"getServerNumPortsRequired\", \"Cannot be executed on this server.\");\n        return 1;\n      }\n      if (failOnHacknetServer(server, \"getServerMinSecurityLevel\")) {\n        return 1;\n      }\n      workerScript.log(\n        \"getServerMinSecurityLevel\",\n        `returned ${numeralWrapper.formatServerSecurity(server.minDifficulty)} for ${server.hostname}`,\n      );\n      return server.minDifficulty;\n    },\n    getServerRequiredHackingLevel: function (ip: any): any {\n      updateDynamicRam(\"getServerRequiredHackingLevel\", getRamCost(\"getServerRequiredHackingLevel\"));\n      const server = safeGetServer(ip, \"getServerRequiredHackingLevel\");\n      if (!(server instanceof Server)) {\n        workerScript.log(\"getServerNumPortsRequired\", \"Cannot be executed on this server.\");\n        return 1;\n      }\n      if (failOnHacknetServer(server, \"getServerRequiredHackingLevel\")) {\n        return 1;\n      }\n      workerScript.log(\n        \"getServerRequiredHackingLevel\",\n        `returned ${numeralWrapper.formatSkill(server.requiredHackingSkill)} for '${server.hostname}'`,\n      );\n      return server.requiredHackingSkill;\n    },\n    getServerMaxMoney: function (ip: any): any {\n      updateDynamicRam(\"getServerMaxMoney\", getRamCost(\"getServerMaxMoney\"));\n      const server = safeGetServer(ip, \"getServerMaxMoney\");\n      if (!(server instanceof Server)) {\n        workerScript.log(\"getServerNumPortsRequired\", \"Cannot be executed on this server.\");\n        return 0;\n      }\n      if (failOnHacknetServer(server, \"getServerMaxMoney\")) {\n        return 0;\n      }\n      workerScript.log(\n        \"getServerMaxMoney\",\n        `returned ${numeralWrapper.formatMoney(server.moneyMax)} for '${server.hostname}'`,\n      );\n      return server.moneyMax;\n    },\n    getServerGrowth: function (ip: any): any {\n      updateDynamicRam(\"getServerGrowth\", getRamCost(\"getServerGrowth\"));\n      const server = safeGetServer(ip, \"getServerGrowth\");\n      if (!(server instanceof Server)) {\n        workerScript.log(\"getServerNumPortsRequired\", \"Cannot be executed on this server.\");\n        return 1;\n      }\n      if (failOnHacknetServer(server, \"getServerGrowth\")) {\n        return 1;\n      }\n      workerScript.log(\"getServerGrowth\", `returned ${server.serverGrowth} for '${server.hostname}'`);\n      return server.serverGrowth;\n    },\n    getServerNumPortsRequired: function (ip: any): any {\n      updateDynamicRam(\"getServerNumPortsRequired\", getRamCost(\"getServerNumPortsRequired\"));\n      const server = safeGetServer(ip, \"getServerNumPortsRequired\");\n      if (!(server instanceof Server)) {\n        workerScript.log(\"getServerNumPortsRequired\", \"Cannot be executed on this server.\");\n        return 5;\n      }\n      if (failOnHacknetServer(server, \"getServerNumPortsRequired\")) {\n        return 5;\n      }\n      workerScript.log(\"getServerNumPortsRequired\", `returned ${server.numOpenPortsRequired} for '${server.hostname}'`);\n      return server.numOpenPortsRequired;\n    },\n    getServerRam: function (ip: any): any {\n      updateDynamicRam(\"getServerRam\", getRamCost(\"getServerRam\"));\n      const server = safeGetServer(ip, \"getServerRam\");\n      workerScript.log(\n        \"getServerRam\",\n        `returned [${numeralWrapper.formatRAM(server.maxRam)}, ${numeralWrapper.formatRAM(server.ramUsed)}]`,\n      );\n      return [server.maxRam, server.ramUsed];\n    },\n    getServerMaxRam: function (ip: any): any {\n      updateDynamicRam(\"getServerMaxRam\", getRamCost(\"getServerMaxRam\"));\n      const server = safeGetServer(ip, \"getServerMaxRam\");\n      workerScript.log(\"getServerMaxRam\", `returned ${numeralWrapper.formatRAM(server.maxRam)}`);\n      return server.maxRam;\n    },\n    getServerUsedRam: function (ip: any): any {\n      updateDynamicRam(\"getServerUsedRam\", getRamCost(\"getServerUsedRam\"));\n      const server = safeGetServer(ip, \"getServerUsedRam\");\n      workerScript.log(\"getServerUsedRam\", `returned ${numeralWrapper.formatRAM(server.ramUsed)}`);\n      return server.ramUsed;\n    },\n    serverExists: function (ip: any): any {\n      updateDynamicRam(\"serverExists\", getRamCost(\"serverExists\"));\n      return getServer(ip) !== null;\n    },\n    fileExists: function (filename: any, ip: any = workerScript.serverIp): any {\n      updateDynamicRam(\"fileExists\", getRamCost(\"fileExists\"));\n      if (filename === undefined) {\n        throw makeRuntimeErrorMsg(\"fileExists\", \"Usage: fileExists(scriptname, [server])\");\n      }\n      const server = getServer(ip);\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"fileExists\", `Invalid IP/hostname: ${ip}`);\n      }\n      for (let i = 0; i < server.scripts.length; ++i) {\n        if (filename == server.scripts[i].filename) {\n          return true;\n        }\n      }\n      for (let i = 0; i < server.programs.length; ++i) {\n        if (filename.toLowerCase() == server.programs[i].toLowerCase()) {\n          return true;\n        }\n      }\n      for (let i = 0; i < server.messages.length; ++i) {\n        if (!(server.messages[i] instanceof Message) && filename.toLowerCase() === server.messages[i]) {\n          return true;\n        }\n      }\n      const txtFile = getTextFile(filename, server);\n      if (txtFile != null) {\n        return true;\n      }\n      return false;\n    },\n    isRunning: function (fn: any, ip: any = workerScript.serverIp, ...scriptArgs: any): any {\n      updateDynamicRam(\"isRunning\", getRamCost(\"isRunning\"));\n      if (fn === undefined || ip === undefined) {\n        throw makeRuntimeErrorMsg(\"isRunning\", \"Usage: isRunning(scriptname, server, [arg1], [arg2]...)\");\n      }\n      if (typeof fn === \"number\") {\n        return getRunningScriptByPid(fn, \"isRunning\") != null;\n      } else {\n        return getRunningScript(fn, ip, \"isRunning\", scriptArgs) != null;\n      }\n    },\n    getStockSymbols: function (): any {\n      updateDynamicRam(\"getStockSymbols\", getRamCost(\"getStockSymbols\"));\n      checkTixApiAccess(\"getStockSymbols\");\n      return Object.values(StockSymbols);\n    },\n    getStockPrice: function (symbol: any): any {\n      updateDynamicRam(\"getStockPrice\", getRamCost(\"getStockPrice\"));\n      checkTixApiAccess(\"getStockPrice\");\n      const stock = getStockFromSymbol(symbol, \"getStockPrice\");\n\n      return stock.price;\n    },\n    getStockAskPrice: function (symbol: any): any {\n      updateDynamicRam(\"getStockAskPrice\", getRamCost(\"getStockAskPrice\"));\n      checkTixApiAccess(\"getStockAskPrice\");\n      const stock = getStockFromSymbol(symbol, \"getStockAskPrice\");\n\n      return stock.getAskPrice();\n    },\n    getStockBidPrice: function (symbol: any): any {\n      updateDynamicRam(\"getStockBidPrice\", getRamCost(\"getStockBidPrice\"));\n      checkTixApiAccess(\"getStockBidPrice\");\n      const stock = getStockFromSymbol(symbol, \"getStockBidPrice\");\n\n      return stock.getBidPrice();\n    },\n    getStockPosition: function (symbol: any): any {\n      updateDynamicRam(\"getStockPosition\", getRamCost(\"getStockPosition\"));\n      checkTixApiAccess(\"getStockPosition\");\n      const stock = SymbolToStockMap[symbol];\n      if (stock == null) {\n        throw makeRuntimeErrorMsg(\"getStockPosition\", `Invalid stock symbol: ${symbol}`);\n      }\n      return [stock.playerShares, stock.playerAvgPx, stock.playerShortShares, stock.playerAvgShortPx];\n    },\n    getStockMaxShares: function (symbol: any): any {\n      updateDynamicRam(\"getStockMaxShares\", getRamCost(\"getStockMaxShares\"));\n      checkTixApiAccess(\"getStockMaxShares\");\n      const stock = getStockFromSymbol(symbol, \"getStockMaxShares\");\n\n      return stock.maxShares;\n    },\n    getStockPurchaseCost: function (symbol: any, shares: any, posType: any): any {\n      updateDynamicRam(\"getStockPurchaseCost\", getRamCost(\"getStockPurchaseCost\"));\n      checkTixApiAccess(\"getStockPurchaseCost\");\n      const stock = getStockFromSymbol(symbol, \"getStockPurchaseCost\");\n      shares = Math.round(shares);\n\n      let pos;\n      const sanitizedPosType = posType.toLowerCase();\n      if (sanitizedPosType.includes(\"l\")) {\n        pos = PositionTypes.Long;\n      } else if (sanitizedPosType.includes(\"s\")) {\n        pos = PositionTypes.Short;\n      } else {\n        return Infinity;\n      }\n\n      const res = getBuyTransactionCost(stock, shares, pos);\n      if (res == null) {\n        return Infinity;\n      }\n\n      return res;\n    },\n    getStockSaleGain: function (symbol: any, shares: any, posType: any): any {\n      updateDynamicRam(\"getStockSaleGain\", getRamCost(\"getStockSaleGain\"));\n      checkTixApiAccess(\"getStockSaleGain\");\n      const stock = getStockFromSymbol(symbol, \"getStockSaleGain\");\n      shares = Math.round(shares);\n\n      let pos;\n      const sanitizedPosType = posType.toLowerCase();\n      if (sanitizedPosType.includes(\"l\")) {\n        pos = PositionTypes.Long;\n      } else if (sanitizedPosType.includes(\"s\")) {\n        pos = PositionTypes.Short;\n      } else {\n        return 0;\n      }\n\n      const res = getSellTransactionGain(stock, shares, pos);\n      if (res == null) {\n        return 0;\n      }\n\n      return res;\n    },\n    buyStock: function (symbol: any, shares: any): any {\n      updateDynamicRam(\"buyStock\", getRamCost(\"buyStock\"));\n      checkTixApiAccess(\"buyStock\");\n      const stock = getStockFromSymbol(symbol, \"buyStock\");\n      const res = buyStock(stock, shares, workerScript, {});\n      return res ? stock.price : 0;\n    },\n    sellStock: function (symbol: any, shares: any): any {\n      updateDynamicRam(\"sellStock\", getRamCost(\"sellStock\"));\n      checkTixApiAccess(\"sellStock\");\n      const stock = getStockFromSymbol(symbol, \"sellStock\");\n      const res = sellStock(stock, shares, workerScript, {});\n\n      return res ? stock.price : 0;\n    },\n    shortStock: function (symbol: any, shares: any): any {\n      updateDynamicRam(\"shortStock\", getRamCost(\"shortStock\"));\n      checkTixApiAccess(\"shortStock\");\n      if (Player.bitNodeN !== 8) {\n        if (SourceFileFlags[8] <= 1) {\n          throw makeRuntimeErrorMsg(\n            \"shortStock\",\n            \"You must either be in BitNode-8 or you must have Source-File 8 Level 2.\",\n          );\n        }\n      }\n      const stock = getStockFromSymbol(symbol, \"shortStock\");\n      const res = shortStock(stock, shares, workerScript, {});\n\n      return res ? stock.price : 0;\n    },\n    sellShort: function (symbol: any, shares: any): any {\n      updateDynamicRam(\"sellShort\", getRamCost(\"sellShort\"));\n      checkTixApiAccess(\"sellShort\");\n      if (Player.bitNodeN !== 8) {\n        if (SourceFileFlags[8] <= 1) {\n          throw makeRuntimeErrorMsg(\n            \"sellShort\",\n            \"You must either be in BitNode-8 or you must have Source-File 8 Level 2.\",\n          );\n        }\n      }\n      const stock = getStockFromSymbol(symbol, \"sellShort\");\n      const res = sellShort(stock, shares, workerScript, {});\n\n      return res ? stock.price : 0;\n    },\n    placeOrder: function (symbol: any, shares: any, price: any, type: any, pos: any): any {\n      updateDynamicRam(\"placeOrder\", getRamCost(\"placeOrder\"));\n      checkTixApiAccess(\"placeOrder\");\n      if (Player.bitNodeN !== 8) {\n        if (SourceFileFlags[8] <= 2) {\n          throw makeRuntimeErrorMsg(\n            \"placeOrder\",\n            \"You must either be in BitNode-8 or you must have Source-File 8 Level 3.\",\n          );\n        }\n      }\n      const stock = getStockFromSymbol(symbol, \"placeOrder\");\n\n      let orderType;\n      let orderPos;\n      const ltype = type.toLowerCase();\n      if (ltype.includes(\"limit\") && ltype.includes(\"buy\")) {\n        orderType = OrderTypes.LimitBuy;\n      } else if (ltype.includes(\"limit\") && ltype.includes(\"sell\")) {\n        orderType = OrderTypes.LimitSell;\n      } else if (ltype.includes(\"stop\") && ltype.includes(\"buy\")) {\n        orderType = OrderTypes.StopBuy;\n      } else if (ltype.includes(\"stop\") && ltype.includes(\"sell\")) {\n        orderType = OrderTypes.StopSell;\n      } else {\n        throw makeRuntimeErrorMsg(\"placeOrder\", `Invalid order type: ${type}`);\n      }\n\n      const lpos = pos.toLowerCase();\n      if (lpos.includes(\"l\")) {\n        orderPos = PositionTypes.Long;\n      } else if (lpos.includes(\"s\")) {\n        orderPos = PositionTypes.Short;\n      } else {\n        throw makeRuntimeErrorMsg(\"placeOrder\", `Invalid position type: ${pos}`);\n      }\n\n      return placeOrder(stock, shares, price, orderType, orderPos, workerScript);\n    },\n    cancelOrder: function (symbol: any, shares: any, price: any, type: any, pos: any): any {\n      updateDynamicRam(\"cancelOrder\", getRamCost(\"cancelOrder\"));\n      checkTixApiAccess(\"cancelOrder\");\n      if (Player.bitNodeN !== 8) {\n        if (SourceFileFlags[8] <= 2) {\n          throw makeRuntimeErrorMsg(\n            \"cancelOrder\",\n            \"You must either be in BitNode-8 or you must have Source-File 8 Level 3.\",\n          );\n        }\n      }\n      const stock = getStockFromSymbol(symbol, \"cancelOrder\");\n      if (isNaN(shares) || isNaN(price)) {\n        throw makeRuntimeErrorMsg(\n          \"cancelOrder\",\n          `Invalid shares or price. Must be numeric. shares=${shares}, price=${price}`,\n        );\n      }\n      let orderType;\n      let orderPos;\n      const ltype = type.toLowerCase();\n      if (ltype.includes(\"limit\") && ltype.includes(\"buy\")) {\n        orderType = OrderTypes.LimitBuy;\n      } else if (ltype.includes(\"limit\") && ltype.includes(\"sell\")) {\n        orderType = OrderTypes.LimitSell;\n      } else if (ltype.includes(\"stop\") && ltype.includes(\"buy\")) {\n        orderType = OrderTypes.StopBuy;\n      } else if (ltype.includes(\"stop\") && ltype.includes(\"sell\")) {\n        orderType = OrderTypes.StopSell;\n      } else {\n        throw makeRuntimeErrorMsg(\"cancelOrder\", `Invalid order type: ${type}`);\n      }\n\n      const lpos = pos.toLowerCase();\n      if (lpos.includes(\"l\")) {\n        orderPos = PositionTypes.Long;\n      } else if (lpos.includes(\"s\")) {\n        orderPos = PositionTypes.Short;\n      } else {\n        throw makeRuntimeErrorMsg(\"cancelOrder\", `Invalid position type: ${pos}`);\n      }\n      const params = {\n        stock: stock,\n        shares: shares,\n        price: price,\n        type: orderType,\n        pos: orderPos,\n      };\n      return cancelOrder(params, workerScript);\n    },\n    getOrders: function (): any {\n      updateDynamicRam(\"getOrders\", getRamCost(\"getOrders\"));\n      checkTixApiAccess(\"getOrders\");\n      if (Player.bitNodeN !== 8) {\n        if (SourceFileFlags[8] <= 2) {\n          throw makeRuntimeErrorMsg(\"getOrders\", \"You must either be in BitNode-8 or have Source-File 8 Level 3.\");\n        }\n      }\n\n      const orders: any = {};\n\n      const stockMarketOrders = StockMarket[\"Orders\"];\n      for (const symbol in stockMarketOrders) {\n        const orderBook = stockMarketOrders[symbol];\n        if (orderBook.constructor === Array && orderBook.length > 0) {\n          orders[symbol] = [];\n          for (let i = 0; i < orderBook.length; ++i) {\n            orders[symbol].push({\n              shares: orderBook[i].shares,\n              price: orderBook[i].price,\n              type: orderBook[i].type,\n              position: orderBook[i].pos,\n            });\n          }\n        }\n      }\n\n      return orders;\n    },\n    getStockVolatility: function (symbol: any): any {\n      updateDynamicRam(\"getStockVolatility\", getRamCost(\"getStockVolatility\"));\n      if (!Player.has4SDataTixApi) {\n        throw makeRuntimeErrorMsg(\"getStockVolatility\", \"You don't have 4S Market Data TIX API Access!\");\n      }\n      const stock = getStockFromSymbol(symbol, \"getStockVolatility\");\n\n      return stock.mv / 100; // Convert from percentage to decimal\n    },\n    getStockForecast: function (symbol: any): any {\n      updateDynamicRam(\"getStockForecast\", getRamCost(\"getStockForecast\"));\n      if (!Player.has4SDataTixApi) {\n        throw makeRuntimeErrorMsg(\"getStockForecast\", \"You don't have 4S Market Data TIX API Access!\");\n      }\n      const stock = getStockFromSymbol(symbol, \"getStockForecast\");\n\n      let forecast = 50;\n      stock.b ? (forecast += stock.otlkMag) : (forecast -= stock.otlkMag);\n      return forecast / 100; // Convert from percentage to decimal\n    },\n    purchase4SMarketData: function () {\n      updateDynamicRam(\"purchase4SMarketData\", getRamCost(\"purchase4SMarketData\"));\n      checkTixApiAccess(\"purchase4SMarketData\");\n\n      if (Player.has4SData) {\n        workerScript.log(\"purchase4SMarketData\", \"Already purchased 4S Market Data.\");\n        return true;\n      }\n\n      if (Player.money.lt(getStockMarket4SDataCost())) {\n        workerScript.log(\"purchase4SMarketData\", \"Not enough money to purchase 4S Market Data.\");\n        return false;\n      }\n\n      Player.has4SData = true;\n      Player.loseMoney(getStockMarket4SDataCost());\n      workerScript.log(\"purchase4SMarketData\", \"Purchased 4S Market Data\");\n      return true;\n    },\n    purchase4SMarketDataTixApi: function () {\n      updateDynamicRam(\"purchase4SMarketDataTixApi\", getRamCost(\"purchase4SMarketDataTixApi\"));\n      checkTixApiAccess(\"purchase4SMarketDataTixApi\");\n\n      if (Player.has4SDataTixApi) {\n        workerScript.log(\"purchase4SMarketDataTixApi\", \"Already purchased 4S Market Data TIX API\");\n        return true;\n      }\n\n      if (Player.money.lt(getStockMarket4STixApiCost())) {\n        workerScript.log(\"purchase4SMarketDataTixApi\", \"Not enough money to purchase 4S Market Data TIX API\");\n        return false;\n      }\n\n      Player.has4SDataTixApi = true;\n      Player.loseMoney(getStockMarket4STixApiCost());\n      workerScript.log(\"purchase4SMarketDataTixApi\", \"Purchased 4S Market Data TIX API\");\n      return true;\n    },\n    getPurchasedServerLimit: function (): any {\n      updateDynamicRam(\"getPurchasedServerLimit\", getRamCost(\"getPurchasedServerLimit\"));\n\n      return getPurchaseServerLimit();\n    },\n    getPurchasedServerMaxRam: function (): any {\n      updateDynamicRam(\"getPurchasedServerMaxRam\", getRamCost(\"getPurchasedServerMaxRam\"));\n\n      return getPurchaseServerMaxRam();\n    },\n    getPurchasedServerCost: function (ram: any): any {\n      updateDynamicRam(\"getPurchasedServerCost\", getRamCost(\"getPurchasedServerCost\"));\n\n      const cost = getPurchaseServerCost(ram);\n      if (cost === Infinity) {\n        workerScript.log(\"getPurchasedServerCost\", `Invalid argument: ram='${ram}'`);\n        return Infinity;\n      }\n\n      return cost;\n    },\n    purchaseServer: function (hostname: any, ram: any): any {\n      updateDynamicRam(\"purchaseServer\", getRamCost(\"purchaseServer\"));\n      let hostnameStr = String(hostname);\n      hostnameStr = hostnameStr.replace(/\\s+/g, \"\");\n      if (hostnameStr == \"\") {\n        workerScript.log(\"purchaseServer\", `Invalid argument: hostname='${hostnameStr}'`);\n        return \"\";\n      }\n\n      if (Player.purchasedServers.length >= getPurchaseServerLimit()) {\n        workerScript.log(\n          \"purchaseServer\",\n          `You have reached the maximum limit of ${getPurchaseServerLimit()} servers. You cannot purchase any more.`,\n        );\n        return \"\";\n      }\n\n      const cost = getPurchaseServerCost(ram);\n      if (cost === Infinity) {\n        workerScript.log(\"purchaseServer\", `Invalid argument: ram='${ram}'`);\n        return \"\";\n      }\n\n      if (Player.money.lt(cost)) {\n        workerScript.log(\n          \"purchaseServer\",\n          `Not enough money to purchase server. Need ${numeralWrapper.formatMoney(cost)}`,\n        );\n        return \"\";\n      }\n      const newServ = safetlyCreateUniqueServer({\n        ip: createUniqueRandomIp(),\n        hostname: hostnameStr,\n        organizationName: \"\",\n        isConnectedTo: false,\n        adminRights: true,\n        purchasedByPlayer: true,\n        maxRam: ram,\n      });\n      AddToAllServers(newServ);\n\n      Player.purchasedServers.push(newServ.ip);\n      const homeComputer = Player.getHomeComputer();\n      homeComputer.serversOnNetwork.push(newServ.ip);\n      newServ.serversOnNetwork.push(homeComputer.ip);\n      Player.loseMoney(cost);\n      workerScript.log(\n        \"purchaseServer\",\n        `Purchased new server with hostname '${newServ.hostname}' for ${numeralWrapper.formatMoney(cost)}`,\n      );\n      return newServ.hostname;\n    },\n    deleteServer: function (hostname: any): any {\n      updateDynamicRam(\"deleteServer\", getRamCost(\"deleteServer\"));\n      let hostnameStr = String(hostname);\n      hostnameStr = hostnameStr.replace(/\\s\\s+/g, \"\");\n      const server = GetServerByHostname(hostnameStr);\n      if (!(server instanceof Server)) {\n        workerScript.log(\"deleteServer\", `Invalid argument: hostname='${hostnameStr}'`);\n        return false;\n      }\n      if (server == null) {\n        workerScript.log(\"deleteServer\", `Invalid argument: hostname='${hostnameStr}'`);\n        return false;\n      }\n\n      if (!server.purchasedByPlayer || server.hostname === \"home\") {\n        workerScript.log(\"deleteServer\", \"Cannot delete non-purchased server.\");\n        return false;\n      }\n\n      const ip = server.ip;\n\n      // Can't delete server you're currently connected to\n      if (server.isConnectedTo) {\n        workerScript.log(\"deleteServer\", \"You are currently connected to the server you are trying to delete.\");\n        return false;\n      }\n\n      // A server cannot delete itself\n      if (ip === workerScript.serverIp) {\n        workerScript.log(\"deleteServer\", \"Cannot delete the server this script is running on.\");\n        return false;\n      }\n\n      // Delete all scripts running on server\n      if (server.runningScripts.length > 0) {\n        workerScript.log(\n          \"deleteServer\",\n          `Cannot delete server '${server.hostname}' because it still has scripts running.`,\n        );\n        return false;\n      }\n\n      // Delete from player's purchasedServers array\n      let found = false;\n      for (let i = 0; i < Player.purchasedServers.length; ++i) {\n        if (ip == Player.purchasedServers[i]) {\n          found = true;\n          Player.purchasedServers.splice(i, 1);\n          break;\n        }\n      }\n\n      if (!found) {\n        workerScript.log(\n          \"deleteServer\",\n          `Could not identify server ${server.hostname} as a purchased server. This is a bug. Report to dev.`,\n        );\n        return false;\n      }\n\n      // Delete from all servers\n      delete AllServers[ip];\n\n      // Delete from home computer\n      found = false;\n      const homeComputer = Player.getHomeComputer();\n      for (let i = 0; i < homeComputer.serversOnNetwork.length; ++i) {\n        if (ip == homeComputer.serversOnNetwork[i]) {\n          homeComputer.serversOnNetwork.splice(i, 1);\n          workerScript.log(\"deleteServer\", `Deleted server '${hostnameStr}`);\n          return true;\n        }\n      }\n      // Wasn't found on home computer\n      workerScript.log(\n        \"deleteServer\",\n        `Could not find server ${server.hostname} as a purchased server. This is a bug. Report to dev.`,\n      );\n      return false;\n    },\n    getPurchasedServers: function (hostname: any = true): any {\n      updateDynamicRam(\"getPurchasedServers\", getRamCost(\"getPurchasedServers\"));\n      const res: string[] = [];\n      Player.purchasedServers.forEach(function (ip) {\n        if (hostname) {\n          const server = getServer(ip);\n          if (server == null) {\n            throw makeRuntimeErrorMsg(\"getPurchasedServers\", \"Could not find server. This is a bug. Report to dev.\");\n          }\n          res.push(server.hostname);\n        } else {\n          res.push(ip);\n        }\n      });\n      return res;\n    },\n    write: function (port: any, data: any = \"\", mode: any = \"a\"): any {\n      updateDynamicRam(\"write\", getRamCost(\"write\"));\n      if (!isNaN(port)) {\n        // Write to port\n        // Port 1-10\n        port = Math.round(port);\n        if (port < 1 || port > CONSTANTS.NumNetscriptPorts) {\n          throw makeRuntimeErrorMsg(\n            \"write\",\n            `Trying to write to invalid port: ${port}. Only ports 1-${CONSTANTS.NumNetscriptPorts} are valid.`,\n          );\n        }\n        const iport = NetscriptPorts[port - 1];\n        if (iport == null || !(iport instanceof Object)) {\n          throw makeRuntimeErrorMsg(\"write\", `Could not find port: ${port}. This is a bug. Report to dev.`);\n        }\n        return iport.write(data);\n      } else if (isString(port)) {\n        // Write to script or text file\n        let fn = port;\n        if (!isValidFilePath(fn)) {\n          throw makeRuntimeErrorMsg(\"write\", `Invalid filepath: ${fn}`);\n        }\n\n        if (fn.lastIndexOf(\"/\") === 0) {\n          fn = removeLeadingSlash(fn);\n        }\n\n        // Coerce 'data' to be a string\n        try {\n          data = String(data);\n        } catch (e) {\n          throw makeRuntimeErrorMsg(\"write\", `Invalid data (${e}). Data being written must be convertible to a string`);\n        }\n\n        const server = workerScript.getServer();\n        if (server == null) {\n          throw makeRuntimeErrorMsg(\"write\", \"Error getting Server. This is a bug. Report to dev.\");\n        }\n        if (isScriptFilename(fn)) {\n          // Write to script\n          let script = workerScript.getScriptOnServer(fn, server);\n          if (script == null) {\n            // Create a new script\n            script = new Script(fn, data, server.ip, server.scripts);\n            server.scripts.push(script);\n            return true;\n          }\n          mode === \"w\" ? (script.code = data) : (script.code += data);\n          script.updateRamUsage(server.scripts);\n          script.markUpdated();\n        } else {\n          // Write to text file\n          const txtFile = getTextFile(fn, server);\n          if (txtFile == null) {\n            createTextFile(fn, data, server);\n            return true;\n          }\n          if (mode === \"w\") {\n            txtFile.write(data);\n          } else {\n            txtFile.append(data);\n          }\n        }\n        return true;\n      } else {\n        throw makeRuntimeErrorMsg(\"write\", `Invalid argument: ${port}`);\n      }\n    },\n    tryWrite: function (port: any, data: any = \"\"): any {\n      updateDynamicRam(\"tryWrite\", getRamCost(\"tryWrite\"));\n      if (!isNaN(port)) {\n        port = Math.round(port);\n        if (port < 1 || port > CONSTANTS.NumNetscriptPorts) {\n          throw makeRuntimeErrorMsg(\n            \"tryWrite\",\n            `Invalid port: ${port}. Only ports 1-${CONSTANTS.NumNetscriptPorts} are valid.`,\n          );\n        }\n        const iport = NetscriptPorts[port - 1];\n        if (iport == null || !(iport instanceof Object)) {\n          throw makeRuntimeErrorMsg(\"tryWrite\", `Could not find port: ${port}. This is a bug. Report to dev.`);\n        }\n        return iport.tryWrite(data);\n      } else {\n        throw makeRuntimeErrorMsg(\"tryWrite\", `Invalid argument: ${port}`);\n      }\n    },\n    read: function (port: any): any {\n      updateDynamicRam(\"read\", getRamCost(\"read\"));\n      if (!isNaN(port)) {\n        // Read from port\n        // Port 1-10\n        port = Math.round(port);\n        if (port < 1 || port > CONSTANTS.NumNetscriptPorts) {\n          throw makeRuntimeErrorMsg(\n            \"read\",\n            `Invalid port: ${port}. Only ports 1-${CONSTANTS.NumNetscriptPorts} are valid.`,\n          );\n        }\n        const iport = NetscriptPorts[port - 1];\n        if (iport == null || !(iport instanceof Object)) {\n          throw makeRuntimeErrorMsg(\"read\", `Could not find port: ${port}. This is a bug. Report to dev.`);\n        }\n        return iport.read();\n      } else if (isString(port)) {\n        // Read from script or text file\n        const fn = port;\n        const server = getServer(workerScript.serverIp);\n        if (server == null) {\n          throw makeRuntimeErrorMsg(\"read\", \"Error getting Server. This is a bug. Report to dev.\");\n        }\n        if (isScriptFilename(fn)) {\n          // Read from script\n          const script = workerScript.getScriptOnServer(fn, server);\n          if (script == null) {\n            return \"\";\n          }\n          return script.code;\n        } else {\n          // Read from text file\n          const txtFile = getTextFile(fn, server);\n          if (txtFile !== null) {\n            return txtFile.text;\n          } else {\n            return \"\";\n          }\n        }\n      } else {\n        throw makeRuntimeErrorMsg(\"read\", `Invalid argument: ${port}`);\n      }\n    },\n    peek: function (port: any): any {\n      updateDynamicRam(\"peek\", getRamCost(\"peek\"));\n      if (isNaN(port)) {\n        throw makeRuntimeErrorMsg(\n          \"peek\",\n          `Invalid argument. Must be a port number between 1 and ${CONSTANTS.NumNetscriptPorts}, is ${port}`,\n        );\n      }\n      port = Math.round(port);\n      if (port < 1 || port > CONSTANTS.NumNetscriptPorts) {\n        throw makeRuntimeErrorMsg(\n          \"peek\",\n          `Invalid argument. Must be a port number between 1 and ${CONSTANTS.NumNetscriptPorts}, is ${port}`,\n        );\n      }\n      const iport = NetscriptPorts[port - 1];\n      if (iport == null || !(iport instanceof Object)) {\n        throw makeRuntimeErrorMsg(\"peek\", `Could not find port: ${port}. This is a bug. Report to dev.`);\n      }\n      return iport.peek();\n    },\n    clear: function (port: any): any {\n      updateDynamicRam(\"clear\", getRamCost(\"clear\"));\n      if (!isNaN(port)) {\n        // Clear port\n        port = Math.round(port);\n        if (port < 1 || port > CONSTANTS.NumNetscriptPorts) {\n          throw makeRuntimeErrorMsg(\n            \"clear\",\n            `Trying to clear invalid port: ${port}. Only ports 1-${CONSTANTS.NumNetscriptPorts} are valid`,\n          );\n        }\n        const iport = NetscriptPorts[port - 1];\n        if (iport == null || !(iport instanceof Object)) {\n          throw makeRuntimeErrorMsg(\"clear\", `Could not find port: ${port}. This is a bug. Report to dev.`);\n        }\n        return iport.clear();\n      } else if (isString(port)) {\n        // Clear text file\n        const fn = port;\n        const server = getServer(workerScript.serverIp);\n        if (server == null) {\n          throw makeRuntimeErrorMsg(\"clear\", \"Error getting Server. This is a bug. Report to dev.\");\n        }\n        const txtFile = getTextFile(fn, server);\n        if (txtFile != null) {\n          txtFile.write(\"\");\n        }\n      } else {\n        throw makeRuntimeErrorMsg(\"clear\", `Invalid argument: ${port}`);\n      }\n      return 0;\n    },\n    getPortHandle: function (port: any): any {\n      updateDynamicRam(\"getPortHandle\", getRamCost(\"getPortHandle\"));\n      if (isNaN(port)) {\n        throw makeRuntimeErrorMsg(\n          \"getPortHandle\",\n          `Invalid port: ${port} Must be an integer between 1 and ${CONSTANTS.NumNetscriptPorts}.`,\n        );\n      }\n      port = Math.round(port);\n      if (port < 1 || port > CONSTANTS.NumNetscriptPorts) {\n        throw makeRuntimeErrorMsg(\n          \"getPortHandle\",\n          `Invalid port: ${port}. Only ports 1-${CONSTANTS.NumNetscriptPorts} are valid.`,\n        );\n      }\n      const iport = NetscriptPorts[port - 1];\n      if (iport == null || !(iport instanceof Object)) {\n        throw makeRuntimeErrorMsg(\"getPortHandle\", `Could not find port: ${port}. This is a bug. Report to dev.`);\n      }\n      return iport;\n    },\n    rm: function (fn: any, ip: any): any {\n      updateDynamicRam(\"rm\", getRamCost(\"rm\"));\n\n      if (ip == null || ip === \"\") {\n        ip = workerScript.serverIp;\n      }\n      const s = safeGetServer(ip, \"rm\");\n\n      const status = s.removeFile(fn);\n      if (!status.res) {\n        workerScript.log(\"rm\", status.msg + \"\");\n      }\n\n      return status.res;\n    },\n    scriptRunning: function (scriptname: any, ip: any): any {\n      updateDynamicRam(\"scriptRunning\", getRamCost(\"scriptRunning\"));\n      const server = getServer(ip);\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"scriptRunning\", `Invalid IP/hostname: ${ip}`);\n      }\n      for (let i = 0; i < server.runningScripts.length; ++i) {\n        if (server.runningScripts[i].filename == scriptname) {\n          return true;\n        }\n      }\n      return false;\n    },\n    scriptKill: function (scriptname: any, ip: any): any {\n      updateDynamicRam(\"scriptKill\", getRamCost(\"scriptKill\"));\n      const server = getServer(ip);\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"scriptKill\", `Invalid IP/hostname: ${ip}`);\n      }\n      let suc = false;\n      for (let i = 0; i < server.runningScripts.length; ++i) {\n        if (server.runningScripts[i].filename == scriptname) {\n          killWorkerScript(server.runningScripts[i], server.ip);\n          suc = true;\n        }\n      }\n      return suc;\n    },\n    getScriptName: function (): any {\n      return workerScript.name;\n    },\n    getScriptRam: function (scriptname: any, ip: any = workerScript.serverIp): any {\n      updateDynamicRam(\"getScriptRam\", getRamCost(\"getScriptRam\"));\n      const server = getServer(ip);\n      if (server == null) {\n        throw makeRuntimeErrorMsg(\"getScriptRam\", `Invalid IP/hostname: ${ip}`);\n      }\n      for (let i = 0; i < server.scripts.length; ++i) {\n        if (server.scripts[i].filename == scriptname) {\n          return server.scripts[i].ramUsage;\n        }\n      }\n      return 0;\n    },\n    getRunningScript: function (fn: any, ip: any, ...args: any[]): any {\n      updateDynamicRam(\"getRunningScript\", getRamCost(\"getRunningScript\"));\n\n      let runningScript;\n      if (args.length === 0) {\n        runningScript = workerScript.scriptRef;\n      } else if (typeof fn === \"number\") {\n        runningScript = getRunningScriptByPid(fn, \"getRunningScript\");\n      } else {\n        const scriptArgs = [];\n        for (let i = 2; i < args.length; ++i) {\n          scriptArgs.push(args[i]);\n        }\n        runningScript = getRunningScript(fn, ip, \"getRunningScript\", scriptArgs);\n      }\n      if (runningScript === null) return null;\n      return {\n        args: runningScript.args.slice(),\n        filename: runningScript.filename,\n        logs: runningScript.logs.slice(),\n        offlineExpGained: runningScript.offlineExpGained,\n        offlineMoneyMade: runningScript.offlineMoneyMade,\n        offlineRunningTime: runningScript.offlineRunningTime,\n        onlineExpGained: runningScript.onlineExpGained,\n        onlineMoneyMade: runningScript.onlineMoneyMade,\n        onlineRunningTime: runningScript.onlineRunningTime,\n        pid: runningScript.pid,\n        ramUsage: runningScript.ramUsage,\n        server: runningScript.server,\n        threads: runningScript.threads,\n      };\n    },\n    getHackTime: function (ip: any): any {\n      updateDynamicRam(\"getHackTime\", getRamCost(\"getHackTime\"));\n      const server = safeGetServer(ip, \"getHackTime\");\n      if (!(server instanceof Server)) {\n        workerScript.log(\"getHackTime\", \"invalid for this kind of server\");\n        return Infinity;\n      }\n      if (failOnHacknetServer(server, \"getHackTime\")) {\n        return Infinity;\n      }\n\n      return calculateHackingTime(server, Player); // Returns seconds\n    },\n    getGrowTime: function (ip: any): any {\n      updateDynamicRam(\"getGrowTime\", getRamCost(\"getGrowTime\"));\n      const server = safeGetServer(ip, \"getGrowTime\");\n      if (!(server instanceof Server)) {\n        workerScript.log(\"getGrowTime\", \"invalid for this kind of server\");\n        return Infinity;\n      }\n      if (failOnHacknetServer(server, \"getGrowTime\")) {\n        return Infinity;\n      }\n\n      return calculateGrowTime(server, Player); // Returns seconds\n    },\n    getWeakenTime: function (ip: any): any {\n      updateDynamicRam(\"getWeakenTime\", getRamCost(\"getWeakenTime\"));\n      const server = safeGetServer(ip, \"getWeakenTime\");\n      if (!(server instanceof Server)) {\n        workerScript.log(\"getWeakenTime\", \"invalid for this kind of server\");\n        return Infinity;\n      }\n      if (failOnHacknetServer(server, \"getWeakenTime\")) {\n        return Infinity;\n      }\n\n      return calculateWeakenTime(server, Player); // Returns seconds\n    },\n    getScriptIncome: function (scriptname: any, ip: any, ...args: any[]): any {\n      updateDynamicRam(\"getScriptIncome\", getRamCost(\"getScriptIncome\"));\n      if (arguments.length === 0) {\n        const res = [];\n\n        // First element is total income of all currently running scripts\n        let total = 0;\n        for (const script of workerScripts.values()) {\n          total += script.scriptRef.onlineMoneyMade / script.scriptRef.onlineRunningTime;\n        }\n        res.push(total);\n\n        // Second element is total income you've earned from scripts since you installed Augs\n        res.push(Player.scriptProdSinceLastAug / (Player.playtimeSinceLastAug / 1000));\n        return res;\n      } else {\n        // Get income for a particular script\n        const server = getServer(ip);\n        if (server == null) {\n          throw makeRuntimeErrorMsg(\"getScriptIncome\", `Invalid IP/hostnamed: ${ip}`);\n        }\n        const runningScriptObj = findRunningScript(scriptname, args, server);\n        if (runningScriptObj == null) {\n          workerScript.log(\n            \"getScriptIncome\",\n            `No such script '${scriptname}' on '${server.hostname}' with args: ${arrayToString(args)}`,\n          );\n          return -1;\n        }\n        return runningScriptObj.onlineMoneyMade / runningScriptObj.onlineRunningTime;\n      }\n    },\n    getScriptExpGain: function (scriptname: any, ip: any, ...args: any[]): any {\n      updateDynamicRam(\"getScriptExpGain\", getRamCost(\"getScriptExpGain\"));\n      if (arguments.length === 0) {\n        let total = 0;\n        for (const ws of workerScripts.values()) {\n          total += ws.scriptRef.onlineExpGained / ws.scriptRef.onlineRunningTime;\n        }\n        return total;\n      } else {\n        // Get income for a particular script\n        const server = getServer(ip);\n        if (server == null) {\n          throw makeRuntimeErrorMsg(\"getScriptExpGain\", `Invalid IP/hostnamed: ${ip}`);\n        }\n        const runningScriptObj = findRunningScript(scriptname, args, server);\n        if (runningScriptObj == null) {\n          workerScript.log(\n            \"getScriptExpGain\",\n            `No such script '${scriptname}' on '${server.hostname}' with args: ${arrayToString(args)}`,\n          );\n          return -1;\n        }\n        return runningScriptObj.onlineExpGained / runningScriptObj.onlineRunningTime;\n      }\n    },\n    nFormat: function (n: any, format: any): any {\n      if (isNaN(n) || isNaN(parseFloat(n)) || typeof format !== \"string\") {\n        return \"\";\n      }\n\n      return numeralWrapper.format(parseFloat(n), format);\n    },\n    tFormat: function (milliseconds: any, milliPrecision: any = false): any {\n      return convertTimeMsToTimeElapsedString(milliseconds, milliPrecision);\n    },\n    getTimeSinceLastAug: function (): any {\n      updateDynamicRam(\"getTimeSinceLastAug\", getRamCost(\"getTimeSinceLastAug\"));\n      return Player.playtimeSinceLastAug;\n    },\n    prompt: function (txt: any): any {\n      if (!isString(txt)) {\n        txt = JSON.stringify(txt);\n      }\n\n      // The id for this popup will consist of the first 20 characters of the prompt string..\n      // Thats hopefully good enough to be unique\n      const popupId = `prompt-popup-${txt.slice(0, 20)}`;\n      const textElement = createElement(\"p\", { innerHTML: txt });\n\n      return new Promise(function (resolve) {\n        const yesBtn = createElement(\"button\", {\n          class: \"popup-box-button\",\n          innerText: \"Yes\",\n          clickListener: () => {\n            removeElementById(popupId);\n            resolve(true);\n          },\n        });\n\n        const noBtn = createElement(\"button\", {\n          class: \"popup-box-button\",\n          innerText: \"No\",\n          clickListener: () => {\n            removeElementById(popupId);\n            resolve(false);\n          },\n        });\n\n        createPopup(popupId, [textElement, yesBtn, noBtn]);\n      });\n    },\n    wget: async function (url: any, target: any, ip: any = workerScript.serverIp): Promise<boolean> {\n      if (!isScriptFilename(target) && !target.endsWith(\".txt\")) {\n        workerScript.log(\"wget\", `Invalid target file: '${target}'. Must be a script or text file.`);\n        return Promise.resolve(false);\n      }\n      const s = safeGetServer(ip, \"wget\");\n      return new Promise(function (resolve) {\n        $.get(\n          url,\n          function (data) {\n            let res;\n            if (isScriptFilename(target)) {\n              res = s.writeToScriptFile(target, data);\n            } else {\n              res = s.writeToTextFile(target, data);\n            }\n            if (!res.success) {\n              workerScript.log(\"wget\", \"Failed.\");\n              return resolve(false);\n            }\n            if (res.overwritten) {\n              workerScript.log(\"wget\", `Successfully retrieved content and overwrote '${target}' on '${ip}'`);\n              return resolve(true);\n            }\n            workerScript.log(\"wget\", `Successfully retrieved content to new file '${target}' on '${ip}'`);\n            return resolve(true);\n          },\n          \"text\",\n        ).fail(function (e) {\n          workerScript.log(\"wget\", JSON.stringify(e));\n          return resolve(false);\n        });\n      });\n    },\n    getFavorToDonate: function (): any {\n      updateDynamicRam(\"getFavorToDonate\", getRamCost(\"getFavorToDonate\"));\n      return Math.floor(CONSTANTS.BaseFavorToDonate * BitNodeMultipliers.RepToDonateToFaction);\n    },\n\n    /* Singularity Functions */\n    universityCourse: function (universityName: any, className: any): any {\n      updateDynamicRam(\"universityCourse\", getRamCost(\"universityCourse\"));\n      checkSingularityAccess(\"universityCourse\", 1);\n      if (inMission) {\n        workerScript.log(\"universityCourse\", \"You are in the middle of a mission.\");\n        return;\n      }\n      if (Player.isWorking) {\n        const txt = Player.singularityStopWork();\n        workerScript.log(\"universityCourse\", txt);\n      }\n\n      let costMult, expMult;\n      switch (universityName.toLowerCase()) {\n        case LocationName.AevumSummitUniversity.toLowerCase():\n          if (Player.city != CityName.Aevum) {\n            workerScript.log(\n              \"universityCourse\",\n              \"You cannot study at 'Summit University' because you are not in 'Aevum'.\",\n            );\n            return false;\n          }\n          Player.gotoLocation(LocationName.AevumSummitUniversity);\n          costMult = 4;\n          expMult = 3;\n          break;\n        case LocationName.Sector12RothmanUniversity.toLowerCase():\n          if (Player.city != CityName.Sector12) {\n            workerScript.log(\n              \"universityCourse\",\n              \"You cannot study at 'Rothman University' because you are not in 'Sector-12'.\",\n            );\n            return false;\n          }\n          Player.location = LocationName.Sector12RothmanUniversity;\n          costMult = 3;\n          expMult = 2;\n          break;\n        case LocationName.VolhavenZBInstituteOfTechnology.toLowerCase():\n          if (Player.city != CityName.Volhaven) {\n            workerScript.log(\n              \"universityCourse\",\n              \"You cannot study at 'ZB Institute of Technology' because you are not in 'Volhaven'.\",\n            );\n            return false;\n          }\n          Player.location = LocationName.VolhavenZBInstituteOfTechnology;\n          costMult = 5;\n          expMult = 4;\n          break;\n        default:\n          workerScript.log(\"universityCourse\", `Invalid university name: '${universityName}'.`);\n          return false;\n      }\n\n      let task;\n      switch (className.toLowerCase()) {\n        case \"Study Computer Science\".toLowerCase():\n          task = CONSTANTS.ClassStudyComputerScience;\n          break;\n        case \"Data Structures\".toLowerCase():\n          task = CONSTANTS.ClassDataStructures;\n          break;\n        case \"Networks\".toLowerCase():\n          task = CONSTANTS.ClassNetworks;\n          break;\n        case \"Algorithms\".toLowerCase():\n          task = CONSTANTS.ClassAlgorithms;\n          break;\n        case \"Management\".toLowerCase():\n          task = CONSTANTS.ClassManagement;\n          break;\n        case \"Leadership\".toLowerCase():\n          task = CONSTANTS.ClassLeadership;\n          break;\n        default:\n          workerScript.log(\"universityCourse\", `Invalid class name: ${className}.`);\n          return false;\n      }\n      Player.startClass(Router, costMult, expMult, task);\n      workerScript.log(\"universityCourse\", `Started ${task} at ${universityName}`);\n      return true;\n    },\n\n    gymWorkout: function (gymName: any, stat: any): any {\n      updateDynamicRam(\"gymWorkout\", getRamCost(\"gymWorkout\"));\n      checkSingularityAccess(\"gymWorkout\", 1);\n      if (inMission) {\n        workerScript.log(\"gymWorkout\", \"You are in the middle of a mission.\");\n        return;\n      }\n      if (Player.isWorking) {\n        const txt = Player.singularityStopWork();\n        workerScript.log(\"gymWorkout\", txt);\n      }\n      let costMult, expMult;\n      switch (gymName.toLowerCase()) {\n        case LocationName.AevumCrushFitnessGym.toLowerCase():\n          if (Player.city != CityName.Aevum) {\n            workerScript.log(\"gymWorkout\", \"You cannot workout at 'Crush Fitness' because you are not in 'Aevum'.\");\n            return false;\n          }\n          Player.location = LocationName.AevumCrushFitnessGym;\n          costMult = 3;\n          expMult = 2;\n          break;\n        case LocationName.AevumSnapFitnessGym.toLowerCase():\n          if (Player.city != CityName.Aevum) {\n            workerScript.log(\"gymWorkout\", \"You cannot workout at 'Snap Fitness' because you are not in 'Aevum'.\");\n            return false;\n          }\n          Player.location = LocationName.AevumSnapFitnessGym;\n          costMult = 10;\n          expMult = 5;\n          break;\n        case LocationName.Sector12IronGym.toLowerCase():\n          if (Player.city != CityName.Sector12) {\n            workerScript.log(\"gymWorkout\", \"You cannot workout at 'Iron Gym' because you are not in 'Sector-12'.\");\n            return false;\n          }\n          Player.location = LocationName.Sector12IronGym;\n          costMult = 1;\n          expMult = 1;\n          break;\n        case LocationName.Sector12PowerhouseGym.toLowerCase():\n          if (Player.city != CityName.Sector12) {\n            workerScript.log(\n              \"gymWorkout\",\n              \"You cannot workout at 'Powerhouse Gym' because you are not in 'Sector-12'.\",\n            );\n            return false;\n          }\n          Player.location = LocationName.Sector12PowerhouseGym;\n          costMult = 20;\n          expMult = 10;\n          break;\n        case LocationName.VolhavenMilleniumFitnessGym.toLowerCase():\n          if (Player.city != CityName.Volhaven) {\n            workerScript.log(\n              \"gymWorkout\",\n              \"You cannot workout at 'Millenium Fitness Gym' because you are not in 'Volhaven'.\",\n            );\n            return false;\n          }\n          Player.location = LocationName.VolhavenMilleniumFitnessGym;\n          costMult = 7;\n          expMult = 4;\n          break;\n        default:\n          workerScript.log(\"gymWorkout\", `Invalid gym name: ${gymName}. gymWorkout() failed`);\n          return false;\n      }\n\n      switch (stat.toLowerCase()) {\n        case \"strength\".toLowerCase():\n        case \"str\".toLowerCase():\n          Player.startClass(Router, costMult, expMult, CONSTANTS.ClassGymStrength);\n          break;\n        case \"defense\".toLowerCase():\n        case \"def\".toLowerCase():\n          Player.startClass(Router, costMult, expMult, CONSTANTS.ClassGymDefense);\n          break;\n        case \"dexterity\".toLowerCase():\n        case \"dex\".toLowerCase():\n          Player.startClass(Router, costMult, expMult, CONSTANTS.ClassGymDexterity);\n          break;\n        case \"agility\".toLowerCase():\n        case \"agi\".toLowerCase():\n          Player.startClass(Router, costMult, expMult, CONSTANTS.ClassGymAgility);\n          break;\n        default:\n          workerScript.log(\"gymWorkout\", `Invalid stat: ${stat}.`);\n          return false;\n      }\n      workerScript.log(\"gymWorkout\", `Started training ${stat} at ${gymName}`);\n      return true;\n    },\n\n    travelToCity: function (cityname: any): any {\n      updateDynamicRam(\"travelToCity\", getRamCost(\"travelToCity\"));\n      checkSingularityAccess(\"travelToCity\", 1);\n\n      switch (cityname) {\n        case CityName.Aevum:\n        case CityName.Chongqing:\n        case CityName.Sector12:\n        case CityName.NewTokyo:\n        case CityName.Ishima:\n        case CityName.Volhaven:\n          if (Player.money.lt(CONSTANTS.TravelCost)) {\n            throw makeRuntimeErrorMsg(\"travelToCity\", \"Not enough money to travel.\");\n          }\n          Player.loseMoney(CONSTANTS.TravelCost);\n          Player.city = cityname;\n          workerScript.log(\"travelToCity\", `Traveled to ${cityname}`);\n          return true;\n        default:\n          workerScript.log(\"travelToCity\", `Invalid city name: '${cityname}'.`);\n          return false;\n      }\n    },\n\n    purchaseTor: function (): any {\n      updateDynamicRam(\"purchaseTor\", getRamCost(\"purchaseTor\"));\n      checkSingularityAccess(\"purchaseTor\", 1);\n\n      if (SpecialServerIps[\"Darkweb Server\"] != null) {\n        workerScript.log(\"purchaseTor\", \"You already have a TOR router!\");\n        return false;\n      }\n\n      if (Player.money.lt(CONSTANTS.TorRouterCost)) {\n        workerScript.log(\"purchaseTor\", \"You cannot afford to purchase a Tor router.\");\n        return false;\n      }\n      Player.loseMoney(CONSTANTS.TorRouterCost);\n\n      const darkweb = safetlyCreateUniqueServer({\n        ip: createUniqueRandomIp(),\n        hostname: \"darkweb\",\n        organizationName: \"\",\n        isConnectedTo: false,\n        adminRights: false,\n        purchasedByPlayer: false,\n        maxRam: 1,\n      });\n      AddToAllServers(darkweb);\n      SpecialServerIps.addIp(\"Darkweb Server\", darkweb.ip);\n\n      Player.getHomeComputer().serversOnNetwork.push(darkweb.ip);\n      darkweb.serversOnNetwork.push(Player.getHomeComputer().ip);\n      Player.gainIntelligenceExp(CONSTANTS.IntelligenceSingFnBaseExpGain);\n      workerScript.log(\"purchaseTor\", \"You have purchased a Tor router!\");\n      return true;\n    },\n    purchaseProgram: function (programName: any): any {\n      updateDynamicRam(\"purchaseProgram\", getRamCost(\"purchaseProgram\"));\n      checkSingularityAccess(\"purchaseProgram\", 1);\n\n      if (SpecialServerIps[\"Darkweb Server\"] == null) {\n        workerScript.log(\"purchaseProgram\", \"You do not have the TOR router.\");\n        return false;\n      }\n\n      programName = programName.toLowerCase();\n\n      let item = null;\n      for (const key in DarkWebItems) {\n        const i = DarkWebItems[key];\n        if (i.program.toLowerCase() == programName) {\n          item = i;\n        }\n      }\n\n      if (item == null) {\n        workerScript.log(\"purchaseProgram\", `Invalid program name: '${programName}.`);\n        return false;\n      }\n\n      if (Player.money.lt(item.price)) {\n        workerScript.log(\n          \"purchaseProgram\",\n          `Not enough money to purchase '${item.program}'. Need ${numeralWrapper.formatMoney(item.price)}`,\n        );\n        return false;\n      }\n\n      if (Player.hasProgram(item.program)) {\n        workerScript.log(\"purchaseProgram\", `You already have the '${item.program}' program`);\n        return true;\n      }\n\n      Player.loseMoney(item.price);\n      Player.getHomeComputer().programs.push(item.program);\n      workerScript.log(\n        \"purchaseProgram\",\n        `You have purchased the '${item.program}' program. The new program can be found on your home computer.`,\n      );\n      return true;\n    },\n    getCurrentServer: function (): any {\n      updateDynamicRam(\"getCurrentServer\", getRamCost(\"getCurrentServer\"));\n      checkSingularityAccess(\"getCurrentServer\", 1);\n      return Player.getCurrentServer().hostname;\n    },\n    connect: function (hostname: any): any {\n      updateDynamicRam(\"connect\", getRamCost(\"connect\"));\n      checkSingularityAccess(\"connect\", 1);\n      if (!hostname) {\n        throw makeRuntimeErrorMsg(\"connect\", `Invalid hostname: '${hostname}'`);\n      }\n\n      const target = getServer(hostname);\n      if (target == null) {\n        throw makeRuntimeErrorMsg(\"connect\", `Invalid hostname: '${hostname}'`);\n        return;\n      }\n\n      if (hostname === \"home\") {\n        Player.getCurrentServer().isConnectedTo = false;\n        Player.currentServer = Player.getHomeComputer().ip;\n        Player.getCurrentServer().isConnectedTo = true;\n        Terminal.setcwd(\"/\");\n        return true;\n      }\n\n      const server = Player.getCurrentServer();\n      for (let i = 0; i < server.serversOnNetwork.length; i++) {\n        const other = getServerOnNetwork(server, i);\n        if (other === null) continue;\n        if (other.ip == hostname || other.hostname == hostname) {\n          Player.getCurrentServer().isConnectedTo = false;\n          Player.currentServer = target.ip;\n          Player.getCurrentServer().isConnectedTo = true;\n          Terminal.setcwd(\"/\");\n          return true;\n        }\n      }\n\n      return false;\n    },\n    manualHack: function (): any {\n      updateDynamicRam(\"manualHack\", getRamCost(\"manualHack\"));\n      checkSingularityAccess(\"manualHack\", 1);\n      const server = Player.getCurrentServer();\n      return hack(server.hostname, true);\n    },\n    installBackdoor: function (): any {\n      updateDynamicRam(\"installBackdoor\", getRamCost(\"installBackdoor\"));\n      checkSingularityAccess(\"installBackdoor\", 1);\n      const baseserver = Player.getCurrentServer();\n      if (!(baseserver instanceof Server)) {\n        workerScript.log(\"installBackdoor\", \"cannot backdoor this kind of server\");\n        return Promise.resolve();\n      }\n      const server = baseserver as Server;\n      const installTime = (calculateHackingTime(server, Player) / 4) * 1000;\n\n      // No root access or skill level too low\n      const canHack = netscriptCanHack(server, Player);\n      if (!canHack.res) {\n        throw makeRuntimeErrorMsg(\"installBackdoor\", canHack.msg || \"\");\n      }\n\n      workerScript.log(\n        \"installBackdoor\",\n        `Installing backdoor on '${server.hostname}' in ${convertTimeMsToTimeElapsedString(installTime, true)}`,\n      );\n\n      return netscriptDelay(installTime, workerScript).then(function () {\n        if (workerScript.env.stopFlag) {\n          return Promise.reject(workerScript);\n        }\n        workerScript.log(\"installBackdoor\", `Successfully installed backdoor on '${server.hostname}'`);\n\n        server.backdoorInstalled = true;\n        return Promise.resolve();\n      });\n    },\n    getStats: function (): any {\n      updateDynamicRam(\"getStats\", getRamCost(\"getStats\"));\n      checkSingularityAccess(\"getStats\", 1);\n      workerScript.log(\"getStats\", `getStats is deprecated, please use getPlayer`);\n\n      return {\n        hacking: Player.hacking_skill,\n        strength: Player.strength,\n        defense: Player.defense,\n        dexterity: Player.dexterity,\n        agility: Player.agility,\n        charisma: Player.charisma,\n        intelligence: Player.intelligence,\n      };\n    },\n    getCharacterInformation: function (): any {\n      updateDynamicRam(\"getCharacterInformation\", getRamCost(\"getCharacterInformation\"));\n      checkSingularityAccess(\"getCharacterInformation\", 1);\n      workerScript.log(\"getCharacterInformation\", `getCharacterInformation is deprecated, please use getPlayer`);\n\n      return {\n        bitnode: Player.bitNodeN,\n        city: Player.city,\n        factions: Player.factions.slice(),\n        hp: Player.hp,\n        jobs: Object.keys(Player.jobs),\n        jobTitles: Object.values(Player.jobs),\n        maxHp: Player.max_hp,\n        mult: {\n          agility: Player.agility_mult,\n          agilityExp: Player.agility_exp_mult,\n          companyRep: Player.company_rep_mult,\n          crimeMoney: Player.crime_money_mult,\n          crimeSuccess: Player.crime_success_mult,\n          defense: Player.defense_mult,\n          defenseExp: Player.defense_exp_mult,\n          dexterity: Player.dexterity_mult,\n          dexterityExp: Player.dexterity_exp_mult,\n          factionRep: Player.faction_rep_mult,\n          hacking: Player.hacking_mult,\n          hackingExp: Player.hacking_exp_mult,\n          strength: Player.strength_mult,\n          strengthExp: Player.strength_exp_mult,\n          workMoney: Player.work_money_mult,\n        },\n        timeWorked: Player.timeWorked,\n        tor: SpecialServerIps.hasOwnProperty(\"Darkweb Server\"),\n        workHackExpGain: Player.workHackExpGained,\n        workStrExpGain: Player.workStrExpGained,\n        workDefExpGain: Player.workDefExpGained,\n        workDexExpGain: Player.workDexExpGained,\n        workAgiExpGain: Player.workAgiExpGained,\n        workChaExpGain: Player.workChaExpGained,\n        workRepGain: Player.workRepGained,\n        workMoneyGain: Player.workMoneyGained,\n        hackingExp: Player.hacking_exp,\n        strengthExp: Player.strength_exp,\n        defenseExp: Player.defense_exp,\n        dexterityExp: Player.dexterity_exp,\n        agilityExp: Player.agility_exp,\n        charismaExp: Player.charisma_exp,\n      };\n    },\n    getPlayer: function (): any {\n      updateDynamicRam(\"getPlayer\", getRamCost(\"getPlayer\"));\n\n      const data = {\n        hacking_skill: Player.hacking_skill,\n        hp: Player.hp,\n        max_hp: Player.max_hp,\n        strength: Player.strength,\n        defense: Player.defense,\n        dexterity: Player.dexterity,\n        agility: Player.agility,\n        charisma: Player.charisma,\n        intelligence: Player.intelligence,\n        hacking_chance_mult: Player.hacking_chance_mult,\n        hacking_speed_mult: Player.hacking_speed_mult,\n        hacking_money_mult: Player.hacking_money_mult,\n        hacking_grow_mult: Player.hacking_grow_mult,\n        hacking_exp: Player.hacking_exp,\n        strength_exp: Player.strength_exp,\n        defense_exp: Player.defense_exp,\n        dexterity_exp: Player.dexterity_exp,\n        agility_exp: Player.agility_exp,\n        charisma_exp: Player.charisma_exp,\n        hacking_mult: Player.hacking_mult,\n        strength_mult: Player.strength_mult,\n        defense_mult: Player.defense_mult,\n        dexterity_mult: Player.dexterity_mult,\n        agility_mult: Player.agility_mult,\n        charisma_mult: Player.charisma_mult,\n        hacking_exp_mult: Player.hacking_exp_mult,\n        strength_exp_mult: Player.strength_exp_mult,\n        defense_exp_mult: Player.defense_exp_mult,\n        dexterity_exp_mult: Player.dexterity_exp_mult,\n        agility_exp_mult: Player.agility_exp_mult,\n        charisma_exp_mult: Player.charisma_exp_mult,\n        company_rep_mult: Player.company_rep_mult,\n        faction_rep_mult: Player.faction_rep_mult,\n        numPeopleKilled: Player.numPeopleKilled,\n        money: Player.money.toNumber(),\n        city: Player.city,\n        location: Player.location,\n        companyName: Player.companyName,\n        crime_money_mult: Player.crime_money_mult,\n        crime_success_mult: Player.crime_success_mult,\n        isWorking: Player.isWorking,\n        workType: Player.workType,\n        currentWorkFactionName: Player.currentWorkFactionName,\n        currentWorkFactionDescription: Player.currentWorkFactionDescription,\n        workHackExpGainRate: Player.workHackExpGainRate,\n        workStrExpGainRate: Player.workStrExpGainRate,\n        workDefExpGainRate: Player.workDefExpGainRate,\n        workDexExpGainRate: Player.workDexExpGainRate,\n        workAgiExpGainRate: Player.workAgiExpGainRate,\n        workChaExpGainRate: Player.workChaExpGainRate,\n        workRepGainRate: Player.workRepGainRate,\n        workMoneyGainRate: Player.workMoneyGainRate,\n        workMoneyLossRate: Player.workMoneyLossRate,\n        workHackExpGained: Player.workHackExpGained,\n        workStrExpGained: Player.workStrExpGained,\n        workDefExpGained: Player.workDefExpGained,\n        workDexExpGained: Player.workDexExpGained,\n        workAgiExpGained: Player.workAgiExpGained,\n        workChaExpGained: Player.workChaExpGained,\n        workRepGained: Player.workRepGained,\n        workMoneyGained: Player.workMoneyGained,\n        createProgramName: Player.createProgramName,\n        createProgramReqLvl: Player.createProgramReqLvl,\n        className: Player.className,\n        crimeType: Player.crimeType,\n        work_money_mult: Player.work_money_mult,\n        hacknet_node_money_mult: Player.hacknet_node_money_mult,\n        hacknet_node_purchase_cost_mult: Player.hacknet_node_purchase_cost_mult,\n        hacknet_node_ram_cost_mult: Player.hacknet_node_ram_cost_mult,\n        hacknet_node_core_cost_mult: Player.hacknet_node_core_cost_mult,\n        hacknet_node_level_cost_mult: Player.hacknet_node_level_cost_mult,\n        hasWseAccount: Player.hasWseAccount,\n        hasTixApiAccess: Player.hasTixApiAccess,\n        has4SData: Player.has4SData,\n        has4SDataTixApi: Player.has4SDataTixApi,\n        bladeburner_max_stamina_mult: Player.bladeburner_max_stamina_mult,\n        bladeburner_stamina_gain_mult: Player.bladeburner_stamina_gain_mult,\n        bladeburner_analysis_mult: Player.bladeburner_analysis_mult,\n        bladeburner_success_chance_mult: Player.bladeburner_success_chance_mult,\n        bitNodeN: Player.bitNodeN,\n        totalPlaytime: Player.totalPlaytime,\n        playtimeSinceLastAug: Player.playtimeSinceLastAug,\n        playtimeSinceLastBitnode: Player.playtimeSinceLastBitnode,\n        jobs: {},\n        factions: Player.factions.slice(),\n        tor: SpecialServerIps.hasOwnProperty(\"Darkweb Server\"),\n      };\n      Object.assign(data.jobs, Player.jobs);\n      return data;\n    },\n    hospitalize: function (): any {\n      updateDynamicRam(\"hospitalize\", getRamCost(\"hospitalize\"));\n      checkSingularityAccess(\"hospitalize\", 1);\n      return Player.hospitalize();\n    },\n    isBusy: function (): any {\n      updateDynamicRam(\"isBusy\", getRamCost(\"isBusy\"));\n      checkSingularityAccess(\"isBusy\", 1);\n      return Player.isWorking || inMission;\n    },\n    stopAction: function (): any {\n      updateDynamicRam(\"stopAction\", getRamCost(\"stopAction\"));\n      checkSingularityAccess(\"stopAction\", 1);\n      if (Player.isWorking) {\n        Router.toTerminal();\n        const txt = Player.singularityStopWork();\n        workerScript.log(\"stopAction\", txt);\n        return true;\n      }\n      return false;\n    },\n    upgradeHomeRam: function (): any {\n      updateDynamicRam(\"upgradeHomeRam\", getRamCost(\"upgradeHomeRam\"));\n      checkSingularityAccess(\"upgradeHomeRam\", 2);\n\n      // Check if we're at max RAM\n      const homeComputer = Player.getHomeComputer();\n      if (homeComputer.maxRam >= CONSTANTS.HomeComputerMaxRam) {\n        workerScript.log(\"upgradeHomeRam\", `Your home computer is at max RAM.`);\n        return false;\n      }\n\n      const cost = Player.getUpgradeHomeRamCost();\n      if (Player.money.lt(cost)) {\n        workerScript.log(\"upgradeHomeRam\", `You don't have enough money. Need ${numeralWrapper.formatMoney(cost)}`);\n        return false;\n      }\n\n      homeComputer.maxRam *= 2;\n      Player.loseMoney(cost);\n\n      Player.gainIntelligenceExp(CONSTANTS.IntelligenceSingFnBaseExpGain);\n      workerScript.log(\n        \"upgradeHomeRam\",\n        `Purchased additional RAM for home computer! It now has ${homeComputer.maxRam}GB of RAM.`,\n      );\n      return true;\n    },\n    getUpgradeHomeRamCost: function (): any {\n      updateDynamicRam(\"getUpgradeHomeRamCost\", getRamCost(\"getUpgradeHomeRamCost\"));\n      checkSingularityAccess(\"getUpgradeHomeRamCost\", 2);\n\n      return Player.getUpgradeHomeRamCost();\n    },\n    workForCompany: function (companyName: any): any {\n      updateDynamicRam(\"workForCompany\", getRamCost(\"workForCompany\"));\n      checkSingularityAccess(\"workForCompany\", 2);\n\n      // Sanitize input\n      if (companyName == null) {\n        companyName = Player.companyName;\n      }\n\n      // Make sure its a valid company\n      if (companyName == null || companyName === \"\" || !(Companies[companyName] instanceof Company)) {\n        workerScript.log(\"workForCompany\", `Invalid company: '${companyName}'`);\n        return false;\n      }\n\n      // Make sure player is actually employed at the comapny\n      if (!Object.keys(Player.jobs).includes(companyName)) {\n        workerScript.log(\"workForCompany\", `You do not have a job at '${companyName}'`);\n        return false;\n      }\n\n      // Cant work while in a mission\n      if (inMission) {\n        workerScript.log(\"workForCompany\", \"You are in the middle of a mission.\");\n        return false;\n      }\n\n      // Check to make sure company position data is valid\n      const companyPositionName = Player.jobs[companyName];\n      const companyPosition = CompanyPositions[companyPositionName];\n      if (companyPositionName === \"\" || !(companyPosition instanceof CompanyPosition)) {\n        workerScript.log(\"workForCompany\", \"You do not have a job\");\n        return false;\n      }\n\n      if (Player.isWorking) {\n        const txt = Player.singularityStopWork();\n        workerScript.log(\"workForCompany\", txt);\n      }\n\n      if (companyPosition.isPartTimeJob()) {\n        Player.startWorkPartTime(Router, companyName);\n      } else {\n        Player.startWork(Router, companyName);\n      }\n      workerScript.log(\"workForCompany\", `Began working at '${Player.companyName}' as a '${companyPositionName}'`);\n      return true;\n    },\n    applyToCompany: function (companyName: any, field: any): any {\n      updateDynamicRam(\"applyToCompany\", getRamCost(\"applyToCompany\"));\n      checkSingularityAccess(\"applyToCompany\", 2);\n      getCompany(\"applyToCompany\", companyName);\n\n      Player.location = companyName;\n      let res;\n      switch (field.toLowerCase()) {\n        case \"software\":\n          res = Player.applyForSoftwareJob(true);\n          break;\n        case \"software consultant\":\n          res = Player.applyForSoftwareConsultantJob(true);\n          break;\n        case \"it\":\n          res = Player.applyForItJob(true);\n          break;\n        case \"security engineer\":\n          res = Player.applyForSecurityEngineerJob(true);\n          break;\n        case \"network engineer\":\n          res = Player.applyForNetworkEngineerJob(true);\n          break;\n        case \"business\":\n          res = Player.applyForBusinessJob(true);\n          break;\n        case \"business consultant\":\n          res = Player.applyForBusinessConsultantJob(true);\n          break;\n        case \"security\":\n          res = Player.applyForSecurityJob(true);\n          break;\n        case \"agent\":\n          res = Player.applyForAgentJob(true);\n          break;\n        case \"employee\":\n          res = Player.applyForEmployeeJob(true);\n          break;\n        case \"part-time employee\":\n          res = Player.applyForPartTimeEmployeeJob(true);\n          break;\n        case \"waiter\":\n          res = Player.applyForWaiterJob(true);\n          break;\n        case \"part-time waiter\":\n          res = Player.applyForPartTimeWaiterJob(true);\n          break;\n        default:\n          workerScript.log(\"applyToCompany\", `Invalid job: '${field}'.`);\n          return false;\n      }\n      // TODO https://github.com/danielyxie/bitburner/issues/1378\n      // The Player object's applyForJob function can return string with special error messages\n      // if (isString(res)) {\n      //   workerScript.log(\"applyToCompany\", res);\n      //   return false;\n      // }\n      if (res) {\n        workerScript.log(\n          \"applyToCompany\",\n          `You were offered a new job at '${companyName}' as a '${Player.jobs[companyName]}'`,\n        );\n      } else {\n        workerScript.log(\n          \"applyToCompany\",\n          `You failed to get a new job/promotion at '${companyName}' in the '${field}' field.`,\n        );\n      }\n      return res;\n    },\n    getCompanyRep: function (companyName: any): any {\n      updateDynamicRam(\"getCompanyRep\", getRamCost(\"getCompanyRep\"));\n      checkSingularityAccess(\"getCompanyRep\", 2);\n      const company = getCompany(\"getCompanyRep\", companyName);\n      return company.playerReputation;\n    },\n    getCompanyFavor: function (companyName: any): any {\n      updateDynamicRam(\"getCompanyFavor\", getRamCost(\"getCompanyFavor\"));\n      checkSingularityAccess(\"getCompanyFavor\", 2);\n      const company = getCompany(\"getCompanyFavor\", companyName);\n      return company.favor;\n    },\n    getCompanyFavorGain: function (companyName: any): any {\n      updateDynamicRam(\"getCompanyFavorGain\", getRamCost(\"getCompanyFavorGain\"));\n      checkSingularityAccess(\"getCompanyFavorGain\", 2);\n      const company = getCompany(\"getCompanyFavorGain\", companyName);\n      return company.getFavorGain()[0];\n    },\n    checkFactionInvitations: function (): any {\n      updateDynamicRam(\"checkFactionInvitations\", getRamCost(\"checkFactionInvitations\"));\n      checkSingularityAccess(\"checkFactionInvitations\", 2);\n      // Make a copy of Player.factionInvitations\n      return Player.factionInvitations.slice();\n    },\n    joinFaction: function (name: any): any {\n      updateDynamicRam(\"joinFaction\", getRamCost(\"joinFaction\"));\n      checkSingularityAccess(\"joinFaction\", 2);\n      getFaction(\"joinFaction\", name);\n\n      if (!Player.factionInvitations.includes(name)) {\n        workerScript.log(\"joinFaction\", `You have not been invited by faction '${name}'`);\n        return false;\n      }\n      const fac = Factions[name];\n      joinFaction(fac);\n\n      // Update Faction Invitation list to account for joined + banned factions\n      for (let i = 0; i < Player.factionInvitations.length; ++i) {\n        if (Player.factionInvitations[i] == name || Factions[Player.factionInvitations[i]].isBanned) {\n          Player.factionInvitations.splice(i, 1);\n          i--;\n        }\n      }\n      Player.gainIntelligenceExp(CONSTANTS.IntelligenceSingFnBaseExpGain);\n      workerScript.log(\"joinFaction\", `Joined the '${name}' faction.`);\n      return true;\n    },\n    workForFaction: function (name: any, type: any): any {\n      updateDynamicRam(\"workForFaction\", getRamCost(\"workForFaction\"));\n      checkSingularityAccess(\"workForFaction\", 2);\n      getFaction(\"workForFaction\", name);\n\n      // if the player is in a gang and the target faction is any of the gang faction, fail\n      if (Player.inGang() && AllGangs[name] !== undefined) {\n        workerScript.log(\"workForFaction\", `Faction '${name}' does not offer work at the moment.`);\n        return;\n      }\n\n      if (inMission) {\n        workerScript.log(\"workForFaction\", \"You are in the middle of a mission.\");\n        return;\n      }\n\n      if (!Player.factions.includes(name)) {\n        workerScript.log(\"workForFaction\", `You are not a member of '${name}'`);\n        return false;\n      }\n\n      if (Player.isWorking) {\n        const txt = Player.singularityStopWork();\n        workerScript.log(\"workForFaction\", txt);\n      }\n\n      const fac = Factions[name];\n      // Arrays listing factions that allow each time of work\n      const hackAvailable = [\n        \"Illuminati\",\n        \"Daedalus\",\n        \"The Covenant\",\n        \"ECorp\",\n        \"MegaCorp\",\n        \"Bachman & Associates\",\n        \"Blade Industries\",\n        \"NWO\",\n        \"Clarke Incorporated\",\n        \"OmniTek Incorporated\",\n        \"Four Sigma\",\n        \"KuaiGong International\",\n        \"Fulcrum Secret Technologies\",\n        \"BitRunners\",\n        \"The Black Hand\",\n        \"NiteSec\",\n        \"Chongqing\",\n        \"Sector-12\",\n        \"New Tokyo\",\n        \"Aevum\",\n        \"Ishima\",\n        \"Volhaven\",\n        \"Speakers for the Dead\",\n        \"The Dark Army\",\n        \"The Syndicate\",\n        \"Silhouette\",\n        \"Netburners\",\n        \"Tian Di Hui\",\n        \"CyberSec\",\n      ];\n      const fdWkAvailable = [\n        \"Illuminati\",\n        \"Daedalus\",\n        \"The Covenant\",\n        \"ECorp\",\n        \"MegaCorp\",\n        \"Bachman & Associates\",\n        \"Blade Industries\",\n        \"NWO\",\n        \"Clarke Incorporated\",\n        \"OmniTek Incorporated\",\n        \"Four Sigma\",\n        \"KuaiGong International\",\n        \"The Black Hand\",\n        \"Chongqing\",\n        \"Sector-12\",\n        \"New Tokyo\",\n        \"Aevum\",\n        \"Ishima\",\n        \"Volhaven\",\n        \"Speakers for the Dead\",\n        \"The Dark Army\",\n        \"The Syndicate\",\n        \"Silhouette\",\n        \"Tetrads\",\n        \"Slum Snakes\",\n      ];\n      const scWkAvailable = [\n        \"ECorp\",\n        \"MegaCorp\",\n        \"Bachman & Associates\",\n        \"Blade Industries\",\n        \"NWO\",\n        \"Clarke Incorporated\",\n        \"OmniTek Incorporated\",\n        \"Four Sigma\",\n        \"KuaiGong International\",\n        \"Fulcrum Secret Technologies\",\n        \"Chongqing\",\n        \"Sector-12\",\n        \"New Tokyo\",\n        \"Aevum\",\n        \"Ishima\",\n        \"Volhaven\",\n        \"Speakers for the Dead\",\n        \"The Syndicate\",\n        \"Tetrads\",\n        \"Slum Snakes\",\n        \"Tian Di Hui\",\n      ];\n\n      switch (type.toLowerCase()) {\n        case \"hacking\":\n        case \"hacking contracts\":\n        case \"hackingcontracts\":\n          if (!hackAvailable.includes(fac.name)) {\n            workerScript.log(\"workForFaction\", `Faction '${fac.name}' do not need help with hacking contracts.`);\n            return false;\n          }\n          Player.startFactionHackWork(Router, fac);\n          workerScript.log(\"workForFaction\", `Started carrying out hacking contracts for '${fac.name}'`);\n          return true;\n        case \"field\":\n        case \"fieldwork\":\n        case \"field work\":\n          if (!fdWkAvailable.includes(fac.name)) {\n            workerScript.log(\"workForFaction\", `Faction '${fac.name}' do not need help with field missions.`);\n            return false;\n          }\n          Player.startFactionFieldWork(Router, fac);\n          workerScript.log(\"workForFaction\", `Started carrying out field missions for '${fac.name}'`);\n          return true;\n        case \"security\":\n        case \"securitywork\":\n        case \"security work\":\n          if (!scWkAvailable.includes(fac.name)) {\n            workerScript.log(\"workForFaction\", `Faction '${fac.name}' do not need help with security work.`);\n            return false;\n          }\n          Player.startFactionSecurityWork(Router, fac);\n          workerScript.log(\"workForFaction\", `Started carrying out security work for '${fac.name}'`);\n          return true;\n        default:\n          workerScript.log(\"workForFaction\", `Invalid work type: '${type}`);\n      }\n      return true;\n    },\n    getFactionRep: function (name: any): any {\n      updateDynamicRam(\"getFactionRep\", getRamCost(\"getFactionRep\"));\n      checkSingularityAccess(\"getFactionRep\", 2);\n      const faction = getFaction(\"getFactionRep\", name);\n      return faction.playerReputation;\n    },\n    getFactionFavor: function (name: any): any {\n      updateDynamicRam(\"getFactionFavor\", getRamCost(\"getFactionFavor\"));\n      checkSingularityAccess(\"getFactionFavor\", 2);\n      const faction = getFaction(\"getFactionFavor\", name);\n      return faction.favor;\n    },\n    getFactionFavorGain: function (name: any): any {\n      updateDynamicRam(\"getFactionFavorGain\", getRamCost(\"getFactionFavorGain\"));\n      checkSingularityAccess(\"getFactionFavorGain\", 2);\n      const faction = getFaction(\"getFactionFavorGain\", name);\n      return faction.getFavorGain()[0];\n    },\n    donateToFaction: function (name: any, amt: any): any {\n      updateDynamicRam(\"donateToFaction\", getRamCost(\"donateToFaction\"));\n      checkSingularityAccess(\"donateToFaction\", 3);\n      const faction = getFaction(\"donateToFaction\", name);\n\n      if (typeof amt !== \"number\" || amt <= 0) {\n        workerScript.log(\"donateToFaction\", `Invalid donation amount: '${amt}'.`);\n        return false;\n      }\n      if (Player.money.lt(amt)) {\n        workerScript.log(\n          \"donateToFaction\",\n          `You do not have enough money to donate ${numeralWrapper.formatMoney(amt)} to '${name}'`,\n        );\n        return false;\n      }\n      const repNeededToDonate = Math.round(CONSTANTS.BaseFavorToDonate * BitNodeMultipliers.RepToDonateToFaction);\n      if (faction.favor < repNeededToDonate) {\n        workerScript.log(\n          \"donateToFaction\",\n          `You do not have enough favor to donate to this faction. Have ${faction.favor}, need ${repNeededToDonate}`,\n        );\n        return false;\n      }\n      const repGain = (amt / CONSTANTS.DonateMoneyToRepDivisor) * Player.faction_rep_mult;\n      faction.playerReputation += repGain;\n      Player.loseMoney(amt);\n      workerScript.log(\n        \"donateToFaction\",\n        `${numeralWrapper.formatMoney(amt)} donated to '${name}' for ${numeralWrapper.formatReputation(\n          repGain,\n        )} reputation`,\n      );\n      return true;\n    },\n    createProgram: function (name: any): any {\n      updateDynamicRam(\"createProgram\", getRamCost(\"createProgram\"));\n      checkSingularityAccess(\"createProgram\", 3);\n\n      if (inMission) {\n        workerScript.log(\"createProgram\", \"You are in the middle of a mission.\");\n        return;\n      }\n      if (Player.isWorking) {\n        const txt = Player.singularityStopWork();\n        workerScript.log(\"createProgram\", txt);\n      }\n\n      name = name.toLowerCase();\n\n      let p = null;\n      for (const key in Programs) {\n        if (Programs[key].name.toLowerCase() == name) {\n          p = Programs[key];\n        }\n      }\n\n      if (p == null) {\n        workerScript.log(\"createProgram\", `The specified program does not exist: '${name}`);\n        return false;\n      }\n\n      if (Player.hasProgram(p.name)) {\n        workerScript.log(\"createProgram\", `You already have the '${p.name}' program`);\n        return false;\n      }\n\n      const create = p.create;\n      if (create === null) {\n        workerScript.log(\"createProgram\", `You cannot create the '${p.name}' program`);\n        return false;\n      }\n\n      if (!create.req(Player)) {\n        workerScript.log(\"createProgram\", `Hacking level is too low to create '${p.name}' (level ${create.level} req)`);\n        return false;\n      }\n\n      Player.startCreateProgramWork(Router, p.name, create.time, create.level);\n      workerScript.log(\"createProgram\", `Began creating program: '${name}'`);\n      return true;\n    },\n    commitCrime: function (crimeRoughName: any): any {\n      updateDynamicRam(\"commitCrime\", getRamCost(\"commitCrime\"));\n      checkSingularityAccess(\"commitCrime\", 3);\n      if (inMission) {\n        workerScript.log(\"commitCrime\", \"You are in the middle of a mission.\");\n        return;\n      }\n      if (Player.isWorking) {\n        const txt = Player.singularityStopWork();\n        workerScript.log(\"commitCrime\", txt);\n      }\n\n      // Set Location to slums\n      Player.gotoLocation(LocationName.Slums);\n\n      const crime = findCrime(crimeRoughName.toLowerCase());\n      if (crime == null) {\n        // couldn't find crime\n        throw makeRuntimeErrorMsg(\"commitCrime\", `Invalid crime: '${crimeRoughName}'`);\n      }\n      workerScript.log(\"commitCrime\", `Attempting to commit ${crime.name}...`);\n      return crime.commit(Router, Player, 1, workerScript);\n    },\n    getCrimeChance: function (crimeRoughName: any): any {\n      updateDynamicRam(\"getCrimeChance\", getRamCost(\"getCrimeChance\"));\n      checkSingularityAccess(\"getCrimeChance\", 3);\n\n      const crime = findCrime(crimeRoughName.toLowerCase());\n      if (crime == null) {\n        throw makeRuntimeErrorMsg(\"getCrimeChance\", `Invalid crime: ${crimeRoughName}`);\n      }\n\n      return crime.successRate(Player);\n    },\n    getCrimeStats: function (crimeRoughName: any): any {\n      updateDynamicRam(\"getCrimeStats\", getRamCost(\"getCrimeStats\"));\n      checkSingularityAccess(\"getCrimeStats\", 3);\n\n      const crime = findCrime(crimeRoughName.toLowerCase());\n      if (crime == null) {\n        throw makeRuntimeErrorMsg(\"getCrimeStats\", `Invalid crime: ${crimeRoughName}`);\n      }\n\n      return Object.assign({}, crime);\n    },\n    getOwnedAugmentations: function (purchased: any = false): any {\n      updateDynamicRam(\"getOwnedAugmentations\", getRamCost(\"getOwnedAugmentations\"));\n      checkSingularityAccess(\"getOwnedAugmentations\", 3);\n      const res = [];\n      for (let i = 0; i < Player.augmentations.length; ++i) {\n        res.push(Player.augmentations[i].name);\n      }\n      if (purchased) {\n        for (let i = 0; i < Player.queuedAugmentations.length; ++i) {\n          res.push(Player.queuedAugmentations[i].name);\n        }\n      }\n      return res;\n    },\n    getOwnedSourceFiles: function (): any {\n      updateDynamicRam(\"getOwnedSourceFiles\", getRamCost(\"getOwnedSourceFiles\"));\n      checkSingularityAccess(\"getOwnedSourceFiles\", 3);\n      const res = [];\n      for (let i = 0; i < Player.sourceFiles.length; ++i) {\n        res.push({\n          n: Player.sourceFiles[i].n,\n          lvl: Player.sourceFiles[i].lvl,\n        });\n      }\n      return res;\n    },\n    getAugmentationsFromFaction: function (facname: any): any {\n      updateDynamicRam(\"getAugmentationsFromFaction\", getRamCost(\"getAugmentationsFromFaction\"));\n      checkSingularityAccess(\"getAugmentationsFromFaction\", 3);\n      const faction = getFaction(\"getAugmentationsFromFaction\", facname);\n\n      // If player has a gang with this faction, return all augmentations.\n      if (Player.hasGangWith(facname)) {\n        const res = [];\n        for (const augName in Augmentations) {\n          const aug = Augmentations[augName];\n          if (!aug.isSpecial) {\n            res.push(augName);\n          }\n        }\n\n        return res;\n      }\n\n      return faction.augmentations.slice();\n    },\n    getAugmentationCost: function (name: any): any {\n      updateDynamicRam(\"getAugmentationCost\", getRamCost(\"getAugmentationCost\"));\n      checkSingularityAccess(\"getAugmentationCost\", 3);\n      const aug = getAugmentation(\"getAugmentationCost\", name);\n      return [aug.baseRepRequirement, aug.baseCost];\n    },\n    getAugmentationPrereq: function (name: any): any {\n      updateDynamicRam(\"getAugmentationPrereq\", getRamCost(\"getAugmentationPrereq\"));\n      checkSingularityAccess(\"getAugmentationPrereq\", 3);\n      const aug = getAugmentation(\"getAugmentationPrereq\", name);\n      return aug.prereqs.slice();\n    },\n    getAugmentationPrice: function (name: any): any {\n      updateDynamicRam(\"getAugmentationPrice\", getRamCost(\"getAugmentationPrice\"));\n      checkSingularityAccess(\"getAugmentationPrice\", 3);\n      const aug = getAugmentation(\"getAugmentationPrice\", name);\n      return aug.baseCost;\n    },\n    getAugmentationRepReq: function (name: any): any {\n      updateDynamicRam(\"getAugmentationRepReq\", getRamCost(\"getAugmentationRepReq\"));\n      checkSingularityAccess(\"getAugmentationRepReq\", 3);\n      const aug = getAugmentation(\"getAugmentationRepReq\", name);\n      return aug.baseRepRequirement;\n    },\n    getAugmentationStats: function (name: any): any {\n      updateDynamicRam(\"getAugmentationStats\", getRamCost(\"getAugmentationStats\"));\n      checkSingularityAccess(\"getAugmentationStats\", 3);\n      const aug = getAugmentation(\"getAugmentationStats\", name);\n      return Object.assign({}, aug.mults);\n    },\n    purchaseAugmentation: function (faction: any, name: any): any {\n      updateDynamicRam(\"purchaseAugmentation\", getRamCost(\"purchaseAugmentation\"));\n      checkSingularityAccess(\"purchaseAugmentation\", 3);\n      const fac = getFaction(\"purchaseAugmentation\", faction);\n      const aug = getAugmentation(\"purchaseAugmentation\", name);\n\n      let augs = [];\n      if (Player.hasGangWith(faction)) {\n        for (const augName in Augmentations) {\n          const tempAug = Augmentations[augName];\n          if (!tempAug.isSpecial) {\n            augs.push(augName);\n          }\n        }\n      } else {\n        augs = fac.augmentations;\n      }\n\n      if (!augs.includes(name)) {\n        workerScript.log(\"purchaseAugmentation\", `Faction '${faction}' does not have the '${name}' augmentation.`);\n        return false;\n      }\n\n      const isNeuroflux = aug.name === AugmentationNames.NeuroFluxGovernor;\n      if (!isNeuroflux) {\n        for (let j = 0; j < Player.queuedAugmentations.length; ++j) {\n          if (Player.queuedAugmentations[j].name === aug.name) {\n            workerScript.log(\"purchaseAugmentation\", `You already have the '${name}' augmentation.`);\n            return false;\n          }\n        }\n        for (let j = 0; j < Player.augmentations.length; ++j) {\n          if (Player.augmentations[j].name === aug.name) {\n            workerScript.log(\"purchaseAugmentation\", `You already have the '${name}' augmentation.`);\n            return false;\n          }\n        }\n      }\n\n      if (fac.playerReputation < aug.baseRepRequirement) {\n        workerScript.log(\"purchaseAugmentation\", `You do not have enough reputation with '${fac.name}'.`);\n        return false;\n      }\n\n      const res = purchaseAugmentation(aug, fac, true);\n      workerScript.log(\"purchaseAugmentation\", res);\n      if (isString(res) && res.startsWith(\"You purchased\")) {\n        Player.gainIntelligenceExp(CONSTANTS.IntelligenceSingFnBaseExpGain);\n        return true;\n      } else {\n        return false;\n      }\n    },\n    softReset: function (cbScript: any): any {\n      updateDynamicRam(\"softReset\", getRamCost(\"softReset\"));\n      checkSingularityAccess(\"softReset\", 3);\n\n      workerScript.log(\"softReset\", \"Soft resetting. This will cause this script to be killed\");\n      setTimeoutRef(() => {\n        prestigeAugmentation();\n        runAfterReset(cbScript);\n      }, 0);\n\n      // Prevent workerScript from \"finishing execution naturally\"\n      workerScript.running = false;\n      killWorkerScript(workerScript);\n    },\n    installAugmentations: function (cbScript: any): any {\n      updateDynamicRam(\"installAugmentations\", getRamCost(\"installAugmentations\"));\n      checkSingularityAccess(\"installAugmentations\", 3);\n\n      if (Player.queuedAugmentations.length === 0) {\n        workerScript.log(\"installAugmentations\", \"You do not have any Augmentations to be installed.\");\n        return false;\n      }\n      Player.gainIntelligenceExp(CONSTANTS.IntelligenceSingFnBaseExpGain);\n      workerScript.log(\"installAugmentations\", \"Installing Augmentations. This will cause this script to be killed\");\n      setTimeoutRef(() => {\n        installAugmentations();\n        runAfterReset(cbScript);\n      }, 0);\n\n      workerScript.running = false; // Prevent workerScript from \"finishing execution naturally\"\n      killWorkerScript(workerScript);\n    },\n\n    // Gang API\n    gang: {\n      createGang: function (faction: any): any {\n        updateDynamicRam(\"createGang\", getRamCost(\"gang\", \"createGang\"));\n        // this list is copied from Faction/ui/Root.tsx\n        const GangNames = [\n          \"Slum Snakes\",\n          \"Tetrads\",\n          \"The Syndicate\",\n          \"The Dark Army\",\n          \"Speakers for the Dead\",\n          \"NiteSec\",\n          \"The Black Hand\",\n        ];\n        if (!Player.canAccessGang() || !GangNames.includes(faction)) return false;\n        if (Player.inGang()) return false;\n        if (!Player.factions.includes(faction)) return false;\n\n        const isHacking = faction === \"NiteSec\" || faction === \"The Black Hand\";\n        Player.startGang(faction, isHacking);\n        return true;\n      },\n      inGang: function (): any {\n        updateDynamicRam(\"inGang\", getRamCost(\"gang\", \"inGang\"));\n        return Player.inGang();\n      },\n      getMemberNames: function (): any {\n        updateDynamicRam(\"getMemberNames\", getRamCost(\"gang\", \"getMemberNames\"));\n        checkGangApiAccess(\"getMemberNames\");\n        const gang = Player.gang;\n        if (gang === null) throw new Error(\"Should not be called without Gang\");\n        return gang.members.map((member) => member.name);\n      },\n      getGangInformation: function (): any {\n        updateDynamicRam(\"getGangInformation\", getRamCost(\"gang\", \"getGangInformation\"));\n        checkGangApiAccess(\"getGangInformation\");\n        const gang = Player.gang;\n        if (gang === null) throw new Error(\"Should not be called without Gang\");\n        return {\n          faction: gang.facName,\n          isHacking: gang.isHackingGang,\n          moneyGainRate: gang.moneyGainRate,\n          power: gang.getPower(),\n          respect: gang.respect,\n          respectGainRate: gang.respectGainRate,\n          territory: gang.getTerritory(),\n          territoryClashChance: gang.territoryClashChance,\n          territoryWarfareEngaged: gang.territoryWarfareEngaged,\n          wantedLevel: gang.wanted,\n          wantedLevelGainRate: gang.wantedGainRate,\n        };\n      },\n      getOtherGangInformation: function (): any {\n        updateDynamicRam(\"getOtherGangInformation\", getRamCost(\"gang\", \"getOtherGangInformation\"));\n        checkGangApiAccess(\"getOtherGangInformation\");\n        const cpy: any = {};\n        for (const gang in AllGangs) {\n          cpy[gang] = Object.assign({}, AllGangs[gang]);\n        }\n\n        return cpy;\n      },\n      getMemberInformation: function (name: any): any {\n        updateDynamicRam(\"getMemberInformation\", getRamCost(\"gang\", \"getMemberInformation\"));\n        checkGangApiAccess(\"getMemberInformation\");\n        const member = getGangMember(\"getMemberInformation\", name);\n        return {\n          name: member.name,\n          task: member.task,\n          earnedRespect: member.earnedRespect,\n          hack: member.hack,\n          str: member.str,\n          def: member.def,\n          dex: member.dex,\n          agi: member.agi,\n          cha: member.cha,\n\n          hack_exp: member.hack_exp,\n          str_exp: member.str_exp,\n          def_exp: member.def_exp,\n          dex_exp: member.dex_exp,\n          agi_exp: member.agi_exp,\n          cha_exp: member.cha_exp,\n\n          hack_mult: member.hack_mult,\n          str_mult: member.str_mult,\n          def_mult: member.def_mult,\n          dex_mult: member.dex_mult,\n          agi_mult: member.agi_mult,\n          cha_mult: member.cha_mult,\n\n          hack_asc_mult: member.calculateAscensionMult(member.hack_asc_points),\n          str_asc_mult: member.calculateAscensionMult(member.str_asc_points),\n          def_asc_mult: member.calculateAscensionMult(member.def_asc_points),\n          dex_asc_mult: member.calculateAscensionMult(member.dex_asc_points),\n          agi_asc_mult: member.calculateAscensionMult(member.agi_asc_points),\n          cha_asc_mult: member.calculateAscensionMult(member.cha_asc_points),\n\n          hack_asc_points: member.hack_asc_points,\n          str_asc_points: member.str_asc_points,\n          def_asc_points: member.def_asc_points,\n          dex_asc_points: member.dex_asc_points,\n          agi_asc_points: member.agi_asc_points,\n          cha_asc_points: member.cha_asc_points,\n\n          upgrades: member.upgrades.slice(),\n          augmentations: member.augmentations.slice(),\n        };\n      },\n      canRecruitMember: function (): any {\n        updateDynamicRam(\"canRecruitMember\", getRamCost(\"gang\", \"canRecruitMember\"));\n        checkGangApiAccess(\"canRecruitMember\");\n        const gang = Player.gang;\n        if (gang === null) throw new Error(\"Should not be called without Gang\");\n        return gang.canRecruitMember();\n      },\n      recruitMember: function (name: any): any {\n        updateDynamicRam(\"recruitMember\", getRamCost(\"gang\", \"recruitMember\"));\n        checkGangApiAccess(\"recruitMember\");\n        const gang = Player.gang;\n        if (gang === null) throw new Error(\"Should not be called without Gang\");\n        const recruited = gang.recruitMember(name);\n        if (recruited) {\n          workerScript.log(\"recruitMember\", `Successfully recruited Gang Member '${name}'`);\n        } else {\n          workerScript.log(\"recruitMember\", `Failed to recruit Gang Member '${name}'`);\n        }\n\n        return recruited;\n      },\n      getTaskNames: function (): any {\n        updateDynamicRam(\"getTaskNames\", getRamCost(\"gang\", \"getTaskNames\"));\n        checkGangApiAccess(\"getTaskNames\");\n        const gang = Player.gang;\n        if (gang === null) throw new Error(\"Should not be called without Gang\");\n        const tasks = gang.getAllTaskNames();\n        tasks.unshift(\"Unassigned\");\n        return tasks;\n      },\n      setMemberTask: function (memberName: any, taskName: any): any {\n        updateDynamicRam(\"setMemberTask\", getRamCost(\"gang\", \"setMemberTask\"));\n        checkGangApiAccess(\"setMemberTask\");\n        const member = getGangMember(\"setMemberTask\", memberName);\n        const success = member.assignToTask(taskName);\n        if (success) {\n          workerScript.log(\"setMemberTask\", `Successfully assigned Gang Member '${memberName}' to '${taskName}' task`);\n        } else {\n          workerScript.log(\n            \"setMemberTask\",\n            `Failed to assign Gang Member '${memberName}' to '${taskName}' task. '${memberName}' is now Unassigned`,\n          );\n        }\n\n        return success;\n      },\n      getTaskStats: function (taskName: any): any {\n        updateDynamicRam(\"getTaskStats\", getRamCost(\"gang\", \"getTaskStats\"));\n        checkGangApiAccess(\"getTaskStats\");\n        const task = getGangTask(\"getTaskStats\", taskName);\n        const copy = Object.assign({}, task);\n        copy.territory = Object.assign({}, task.territory);\n        return copy;\n      },\n      getEquipmentNames: function (): any {\n        updateDynamicRam(\"getEquipmentNames\", getRamCost(\"gang\", \"getEquipmentNames\"));\n        checkGangApiAccess(\"getEquipmentNames\");\n        return Object.keys(GangMemberUpgrades);\n      },\n      getEquipmentCost: function (equipName: any): any {\n        updateDynamicRam(\"getEquipmentCost\", getRamCost(\"gang\", \"getEquipmentCost\"));\n        checkGangApiAccess(\"getEquipmentCost\");\n        const gang = Player.gang;\n        if (gang === null) throw new Error(\"Should not be called without Gang\");\n        const upg = GangMemberUpgrades[equipName];\n        if (upg === null) return Infinity;\n        return gang.getUpgradeCost(upg);\n      },\n      getEquipmentType: function (equipName: any): any {\n        updateDynamicRam(\"getEquipmentType\", getRamCost(\"gang\", \"getEquipmentType\"));\n        checkGangApiAccess(\"getEquipmentType\");\n        const upg = GangMemberUpgrades[equipName];\n        if (upg == null) return \"\";\n        return upg.getType();\n      },\n      getEquipmentStats: function (equipName: any): any {\n        updateDynamicRam(\"getEquipmentStats\", getRamCost(\"gang\", \"getEquipmentStats\"));\n        checkGangApiAccess(\"getEquipmentStats\");\n        const equipment = GangMemberUpgrades[equipName];\n        if (!equipment) {\n          throw makeRuntimeErrorMsg(\"getEquipmentStats\", `Invalid equipment: ${equipName}`);\n        }\n        return Object.assign({}, equipment.mults);\n      },\n      purchaseEquipment: function (memberName: any, equipName: any): any {\n        updateDynamicRam(\"purchaseEquipment\", getRamCost(\"gang\", \"purchaseEquipment\"));\n        checkGangApiAccess(\"purchaseEquipment\");\n        const gang = Player.gang;\n        if (gang === null) throw new Error(\"Should not be called without Gang\");\n        const member = getGangMember(\"purchaseEquipment\", memberName);\n        const equipment = GangMemberUpgrades[equipName];\n        if (!equipment) return false;\n        const res = member.buyUpgrade(equipment, Player, gang);\n        if (res) {\n          workerScript.log(\"purchaseEquipment\", `Purchased '${equipName}' for Gang member '${memberName}'`);\n        } else {\n          workerScript.log(\"purchaseEquipment\", `Failed to purchase '${equipName}' for Gang member '${memberName}'`);\n        }\n\n        return res;\n      },\n      ascendMember: function (name: any): any {\n        updateDynamicRam(\"ascendMember\", getRamCost(\"gang\", \"ascendMember\"));\n        checkGangApiAccess(\"ascendMember\");\n        const gang = Player.gang;\n        if (gang === null) throw new Error(\"Should not be called without Gang\");\n        const member = getGangMember(\"ascendMember\", name);\n        if (!member.canAscend()) return;\n        return gang.ascendMember(member, workerScript);\n      },\n      setTerritoryWarfare: function (engage: any): any {\n        updateDynamicRam(\"setTerritoryWarfare\", getRamCost(\"gang\", \"setTerritoryWarfare\"));\n        checkGangApiAccess(\"setTerritoryWarfare\");\n        const gang = Player.gang;\n        if (gang === null) throw new Error(\"Should not be called without Gang\");\n        if (engage) {\n          gang.territoryWarfareEngaged = true;\n          workerScript.log(\"setTerritoryWarfare\", \"Engaging in Gang Territory Warfare\");\n        } else {\n          gang.territoryWarfareEngaged = false;\n          workerScript.log(\"setTerritoryWarfare\", \"Disengaging in Gang Territory Warfare\");\n        }\n      },\n      getChanceToWinClash: function (otherGang: any): any {\n        updateDynamicRam(\"getChanceToWinClash\", getRamCost(\"gang\", \"getChanceToWinClash\"));\n        checkGangApiAccess(\"getChanceToWinClash\");\n        const gang = Player.gang;\n        if (gang === null) throw new Error(\"Should not be called without Gang\");\n        if (AllGangs[otherGang] == null) {\n          throw makeRuntimeErrorMsg(`gang.getChanceToWinClash`, `Invalid gang: ${otherGang}`);\n        }\n\n        const playerPower = AllGangs[gang.facName].power;\n        const otherPower = AllGangs[otherGang].power;\n\n        return playerPower / (otherPower + playerPower);\n      },\n      getBonusTime: function (): any {\n        updateDynamicRam(\"getBonusTime\", getRamCost(\"gang\", \"getBonusTime\"));\n        checkGangApiAccess(\"getBonusTime\");\n        const gang = Player.gang;\n        if (gang === null) throw new Error(\"Should not be called without Gang\");\n        return Math.round(gang.storedCycles / 5);\n      },\n    }, // end gang namespace\n\n    // Bladeburner API\n    bladeburner: {\n      getContractNames: function (): any {\n        updateDynamicRam(\"getContractNames\", getRamCost(\"bladeburner\", \"getContractNames\"));\n        checkBladeburnerAccess(\"getContractNames\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return bladeburner.getContractNamesNetscriptFn();\n      },\n      getOperationNames: function (): any {\n        updateDynamicRam(\"getOperationNames\", getRamCost(\"bladeburner\", \"getOperationNames\"));\n        checkBladeburnerAccess(\"getOperationNames\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return bladeburner.getOperationNamesNetscriptFn();\n      },\n      getBlackOpNames: function (): any {\n        updateDynamicRam(\"getBlackOpNames\", getRamCost(\"bladeburner\", \"getBlackOpNames\"));\n        checkBladeburnerAccess(\"getBlackOpNames\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return bladeburner.getBlackOpNamesNetscriptFn();\n      },\n      getBlackOpRank: function (name: any = \"\"): any {\n        updateDynamicRam(\"getBlackOpRank\", getRamCost(\"bladeburner\", \"getBlackOpRank\"));\n        checkBladeburnerAccess(\"getBlackOpRank\");\n        const action: any = getBladeburnerActionObject(\"getBlackOpRank\", \"blackops\", name);\n        return action.reqdRank;\n      },\n      getGeneralActionNames: function (): any {\n        updateDynamicRam(\"getGeneralActionNames\", getRamCost(\"bladeburner\", \"getGeneralActionNames\"));\n        checkBladeburnerAccess(\"getGeneralActionNames\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return bladeburner.getGeneralActionNamesNetscriptFn();\n      },\n      getSkillNames: function (): any {\n        updateDynamicRam(\"getSkillNames\", getRamCost(\"bladeburner\", \"getSkillNames\"));\n        checkBladeburnerAccess(\"getSkillNames\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return bladeburner.getSkillNamesNetscriptFn();\n      },\n      startAction: function (type: any = \"\", name: any = \"\"): any {\n        updateDynamicRam(\"startAction\", getRamCost(\"bladeburner\", \"startAction\"));\n        checkBladeburnerAccess(\"startAction\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        try {\n          return bladeburner.startActionNetscriptFn(Player, type, name, workerScript);\n        } catch (e) {\n          throw makeRuntimeErrorMsg(\"bladeburner.startAction\", e);\n        }\n      },\n      stopBladeburnerAction: function (): any {\n        updateDynamicRam(\"stopBladeburnerAction\", getRamCost(\"bladeburner\", \"stopBladeburnerAction\"));\n        checkBladeburnerAccess(\"stopBladeburnerAction\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return bladeburner.resetAction();\n      },\n      getCurrentAction: function (): any {\n        updateDynamicRam(\"getCurrentAction\", getRamCost(\"bladeburner\", \"getCurrentAction\"));\n        checkBladeburnerAccess(\"getCurrentAction\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return bladeburner.getTypeAndNameFromActionId(bladeburner.action);\n      },\n      getActionTime: function (type: any = \"\", name: any = \"\"): any {\n        updateDynamicRam(\"getActionTime\", getRamCost(\"bladeburner\", \"getActionTime\"));\n        checkBladeburnerAccess(\"getActionTime\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        try {\n          return bladeburner.getActionTimeNetscriptFn(Player, type, name, workerScript);\n        } catch (e) {\n          throw makeRuntimeErrorMsg(\"bladeburner.getActionTime\", e);\n        }\n      },\n      getActionEstimatedSuccessChance: function (type: any = \"\", name: any = \"\"): any {\n        updateDynamicRam(\n          \"getActionEstimatedSuccessChance\",\n          getRamCost(\"bladeburner\", \"getActionEstimatedSuccessChance\"),\n        );\n        checkBladeburnerAccess(\"getActionEstimatedSuccessChance\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        try {\n          return bladeburner.getActionEstimatedSuccessChanceNetscriptFn(Player, type, name, workerScript);\n        } catch (e) {\n          throw makeRuntimeErrorMsg(\"bladeburner.getActionEstimatedSuccessChance\", e);\n        }\n      },\n      getActionRepGain: function (type: any = \"\", name: any = \"\", level: any): any {\n        updateDynamicRam(\"getActionRepGain\", getRamCost(\"bladeburner\", \"getActionRepGain\"));\n        checkBladeburnerAccess(\"getActionRepGain\");\n        const action = getBladeburnerActionObject(\"getActionRepGain\", type, name);\n        let rewardMultiplier;\n        if (level == null || isNaN(level)) {\n          rewardMultiplier = Math.pow(action.rewardFac, action.level - 1);\n        } else {\n          rewardMultiplier = Math.pow(action.rewardFac, level - 1);\n        }\n\n        return action.rankGain * rewardMultiplier * BitNodeMultipliers.BladeburnerRank;\n      },\n      getActionCountRemaining: function (type: any = \"\", name: any = \"\"): any {\n        updateDynamicRam(\"getActionCountRemaining\", getRamCost(\"bladeburner\", \"getActionCountRemaining\"));\n        checkBladeburnerAccess(\"getActionCountRemaining\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        try {\n          return bladeburner.getActionCountRemainingNetscriptFn(type, name, workerScript);\n        } catch (e) {\n          throw makeRuntimeErrorMsg(\"bladeburner.getActionCountRemaining\", e);\n        }\n      },\n      getActionMaxLevel: function (type: any = \"\", name: any = \"\"): any {\n        updateDynamicRam(\"getActionMaxLevel\", getRamCost(\"bladeburner\", \"getActionMaxLevel\"));\n        checkBladeburnerAccess(\"getActionMaxLevel\");\n        const action = getBladeburnerActionObject(\"getActionMaxLevel\", type, name);\n        return action.maxLevel;\n      },\n      getActionCurrentLevel: function (type: any = \"\", name: any = \"\"): any {\n        updateDynamicRam(\"getActionCurrentLevel\", getRamCost(\"bladeburner\", \"getActionCurrentLevel\"));\n        checkBladeburnerAccess(\"getActionCurrentLevel\");\n        const action = getBladeburnerActionObject(\"getActionCurrentLevel\", type, name);\n        return action.level;\n      },\n      getActionAutolevel: function (type: any = \"\", name: any = \"\"): any {\n        updateDynamicRam(\"getActionAutolevel\", getRamCost(\"bladeburner\", \"getActionAutolevel\"));\n        checkBladeburnerAccess(\"getActionAutolevel\");\n        const action = getBladeburnerActionObject(\"getActionCurrentLevel\", type, name);\n        return action.autoLevel;\n      },\n      setActionAutolevel: function (type: any = \"\", name: any = \"\", autoLevel: any = true): any {\n        updateDynamicRam(\"setActionAutolevel\", getRamCost(\"bladeburner\", \"setActionAutolevel\"));\n        checkBladeburnerAccess(\"setActionAutolevel\");\n        const action = getBladeburnerActionObject(\"setActionAutolevel\", type, name);\n        action.autoLevel = autoLevel;\n      },\n      setActionLevel: function (type: any = \"\", name: any = \"\", level: any = 1): any {\n        updateDynamicRam(\"setActionLevel\", getRamCost(\"bladeburner\", \"setActionLevel\"));\n        checkBladeburnerAccess(\"setActionLevel\");\n        const action = getBladeburnerActionObject(\"setActionLevel\", type, name);\n        if (level < 1 || level > action.maxLevel) {\n          throw makeRuntimeErrorMsg(\n            \"bladeburner.setActionLevel\",\n            `Level must be between 1 and ${action.maxLevel}, is ${level}`,\n          );\n        }\n        action.level = level;\n      },\n      getRank: function (): any {\n        updateDynamicRam(\"getRank\", getRamCost(\"bladeburner\", \"getRank\"));\n        checkBladeburnerAccess(\"getRank\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return bladeburner.rank;\n      },\n      getSkillPoints: function (): any {\n        updateDynamicRam(\"getSkillPoints\", getRamCost(\"bladeburner\", \"getSkillPoints\"));\n        checkBladeburnerAccess(\"getSkillPoints\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return bladeburner.skillPoints;\n      },\n      getSkillLevel: function (skillName: any = \"\"): any {\n        updateDynamicRam(\"getSkillLevel\", getRamCost(\"bladeburner\", \"getSkillLevel\"));\n        checkBladeburnerAccess(\"getSkillLevel\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        try {\n          return bladeburner.getSkillLevelNetscriptFn(skillName, workerScript);\n        } catch (e) {\n          throw makeRuntimeErrorMsg(\"bladeburner.getSkillLevel\", e);\n        }\n      },\n      getSkillUpgradeCost: function (skillName: any = \"\"): any {\n        updateDynamicRam(\"getSkillUpgradeCost\", getRamCost(\"bladeburner\", \"getSkillUpgradeCost\"));\n        checkBladeburnerAccess(\"getSkillUpgradeCost\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        try {\n          return bladeburner.getSkillUpgradeCostNetscriptFn(skillName, workerScript);\n        } catch (e) {\n          throw makeRuntimeErrorMsg(\"bladeburner.getSkillUpgradeCost\", e);\n        }\n      },\n      upgradeSkill: function (skillName: any): any {\n        updateDynamicRam(\"upgradeSkill\", getRamCost(\"bladeburner\", \"upgradeSkill\"));\n        checkBladeburnerAccess(\"upgradeSkill\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        try {\n          return bladeburner.upgradeSkillNetscriptFn(skillName, workerScript);\n        } catch (e) {\n          throw makeRuntimeErrorMsg(\"bladeburner.upgradeSkill\", e);\n        }\n      },\n      getTeamSize: function (type: any = \"\", name: any = \"\"): any {\n        updateDynamicRam(\"getTeamSize\", getRamCost(\"bladeburner\", \"getTeamSize\"));\n        checkBladeburnerAccess(\"getTeamSize\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        try {\n          return bladeburner.getTeamSizeNetscriptFn(type, name, workerScript);\n        } catch (e) {\n          throw makeRuntimeErrorMsg(\"bladeburner.getTeamSize\", e);\n        }\n      },\n      setTeamSize: function (type: any = \"\", name: any = \"\", size: any): any {\n        updateDynamicRam(\"setTeamSize\", getRamCost(\"bladeburner\", \"setTeamSize\"));\n        checkBladeburnerAccess(\"setTeamSize\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        try {\n          return bladeburner.setTeamSizeNetscriptFn(type, name, size, workerScript);\n        } catch (e) {\n          throw makeRuntimeErrorMsg(\"bladeburner.setTeamSize\", e);\n        }\n      },\n      getCityEstimatedPopulation: function (cityName: any): any {\n        updateDynamicRam(\"getCityEstimatedPopulation\", getRamCost(\"bladeburner\", \"getCityEstimatedPopulation\"));\n        checkBladeburnerAccess(\"getCityEstimatedPopulation\");\n        checkBladeburnerCity(\"getCityEstimatedPopulation\", cityName);\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return bladeburner.cities[cityName].popEst;\n      },\n      getCityEstimatedCommunities: function (cityName: any): any {\n        updateDynamicRam(\"getCityEstimatedCommunities\", getRamCost(\"bladeburner\", \"getCityEstimatedCommunities\"));\n        checkBladeburnerAccess(\"getCityEstimatedCommunities\");\n        checkBladeburnerCity(\"getCityEstimatedCommunities\", cityName);\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return bladeburner.cities[cityName].commsEst;\n      },\n      getCityChaos: function (cityName: any): any {\n        updateDynamicRam(\"getCityChaos\", getRamCost(\"bladeburner\", \"getCityChaos\"));\n        checkBladeburnerAccess(\"getCityChaos\");\n        checkBladeburnerCity(\"getCityChaos\", cityName);\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return bladeburner.cities[cityName].chaos;\n      },\n      getCity: function (): any {\n        updateDynamicRam(\"getCity\", getRamCost(\"bladeburner\", \"getCity\"));\n        checkBladeburnerAccess(\"getCityChaos\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return bladeburner.city;\n      },\n      switchCity: function (cityName: any): any {\n        updateDynamicRam(\"switchCity\", getRamCost(\"bladeburner\", \"switchCity\"));\n        checkBladeburnerAccess(\"switchCity\");\n        checkBladeburnerCity(\"switchCity\", cityName);\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return (bladeburner.city = cityName);\n      },\n      getStamina: function (): any {\n        updateDynamicRam(\"getStamina\", getRamCost(\"bladeburner\", \"getStamina\"));\n        checkBladeburnerAccess(\"getStamina\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return [bladeburner.stamina, bladeburner.maxStamina];\n      },\n      joinBladeburnerFaction: function (): any {\n        updateDynamicRam(\"joinBladeburnerFaction\", getRamCost(\"bladeburner\", \"joinBladeburnerFaction\"));\n        checkBladeburnerAccess(\"joinBladeburnerFaction\", true);\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return bladeburner.joinBladeburnerFactionNetscriptFn(workerScript);\n      },\n      joinBladeburnerDivision: function (): any {\n        updateDynamicRam(\"joinBladeburnerDivision\", getRamCost(\"bladeburner\", \"joinBladeburnerDivision\"));\n        checkBladeburnerAccess(\"joinBladeburnerDivision\", true);\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        if (Player.bitNodeN === 7 || SourceFileFlags[7] > 0) {\n          if (Player.bitNodeN === 8) {\n            return false;\n          }\n          if (Player.bladeburner instanceof Bladeburner) {\n            return true; // Already member\n          } else if (\n            Player.strength >= 100 &&\n            Player.defense >= 100 &&\n            Player.dexterity >= 100 &&\n            Player.agility >= 100\n          ) {\n            Player.bladeburner = new Bladeburner(Player);\n            workerScript.log(\"joinBladeburnerDivision\", \"You have been accepted into the Bladeburner division\");\n\n            const worldHeader = document.getElementById(\"world-menu-header\");\n            if (worldHeader instanceof HTMLElement) {\n              worldHeader.click();\n              worldHeader.click();\n            }\n\n            return true;\n          } else {\n            workerScript.log(\n              \"joinBladeburnerDivision\",\n              \"You do not meet the requirements for joining the Bladeburner division\",\n            );\n            return false;\n          }\n        }\n      },\n      getBonusTime: function (): any {\n        updateDynamicRam(\"getBonusTime\", getRamCost(\"bladeburner\", \"getBonusTime\"));\n        checkBladeburnerAccess(\"getBonusTime\");\n        const bladeburner = Player.bladeburner;\n        if (bladeburner === null) throw new Error(\"Should not be called without Bladeburner\");\n        return Math.round(bladeburner.storedCycles / 5);\n      },\n    }, // End Bladeburner\n\n    // Hi, if you're reading this you're a bit nosy.\n    // There's a corporation API but it's very imbalanced right now.\n    // It's here so players can test with if they want.\n    corporation: {\n      expandIndustry: function (industryName: any, divisionName: any): any {\n        const corporation = Player.corporation;\n        if (corporation === null) throw new Error(\"Should not be called without a corporation\");\n        NewIndustry(corporation, industryName, divisionName);\n      },\n      expandCity: function (divisionName: any, cityName: any): any {\n        const division = getDivision(divisionName);\n        const corporation = Player.corporation;\n        if (corporation === null) throw new Error(\"Should not be called without a corporation\");\n        NewCity(corporation, division, cityName);\n      },\n      unlockUpgrade: function (upgradeName: any): any {\n        const upgrade = Object.values(CorporationUnlockUpgrades).find((upgrade) => upgrade[2] === upgradeName);\n        if (upgrade === undefined) throw new Error(`No upgrade named '${upgradeName}'`);\n        const corporation = Player.corporation;\n        if (corporation === null) throw new Error(\"Should not be called without a corporation\");\n        UnlockUpgrade(corporation, upgrade);\n      },\n      levelUpgrade: function (upgradeName: any): any {\n        const upgrade = Object.values(CorporationUpgrades).find((upgrade) => upgrade[4] === upgradeName);\n        if (upgrade === undefined) throw new Error(`No upgrade named '${upgradeName}'`);\n        const corporation = Player.corporation;\n        if (corporation === null) throw new Error(\"Should not be called without a corporation\");\n        LevelUpgrade(corporation, upgrade);\n      },\n      issueDividends: function (percent: any): any {\n        const corporation = Player.corporation;\n        if (corporation === null) throw new Error(\"Should not be called without a corporation\");\n        IssueDividends(corporation, percent);\n      },\n      sellMaterial: function (divisionName: any, cityName: any, materialName: any, amt: any, price: any): any {\n        const material = getMaterial(divisionName, cityName, materialName);\n        SellMaterial(material, amt, price);\n      },\n      sellProduct: function (divisionName: any, cityName: any, productName: any, amt: any, price: any, all: any): any {\n        const product = getProduct(divisionName, productName);\n        SellProduct(product, cityName, amt, price, all);\n      },\n      discontinueProduct: function (divisionName: any, productName: any): any {\n        getDivision(divisionName).discontinueProduct(getProduct(divisionName, productName));\n      },\n      setSmartSupply: function (divisionName: any, cityName: any, enabled: any): any {\n        const warehouse = getWarehouse(divisionName, cityName);\n        SetSmartSupply(warehouse, enabled);\n      },\n      // setSmartSupplyUseLeftovers: function (): any {},\n      buyMaterial: function (divisionName: any, cityName: any, materialName: any, amt: any): any {\n        const material = getMaterial(divisionName, cityName, materialName);\n        BuyMaterial(material, amt);\n      },\n      employees: function (divisionName: any, cityName: any): any {\n        const office = getOffice(divisionName, cityName);\n        return office.employees.map((e) => Object.assign({}, e));\n      },\n      assignJob: function (divisionName: any, cityName: any, employeeName: any, job: any): any {\n        const employee = getEmployee(divisionName, cityName, employeeName);\n        AssignJob(employee, job);\n      },\n      hireEmployee: function (divisionName: any, cityName: any): any {\n        const office = getOffice(divisionName, cityName);\n        office.hireRandomEmployee();\n      },\n      upgradeOfficeSize: function (divisionName: any, cityName: any, size: any): any {\n        const office = getOffice(divisionName, cityName);\n        const corporation = Player.corporation;\n        if (corporation === null) throw new Error(\"Should not be called without a corporation\");\n        UpgradeOfficeSize(corporation, office, size);\n      },\n      throwParty: function (divisionName: any, cityName: any, costPerEmployee: any): any {\n        const office = getOffice(divisionName, cityName);\n        const corporation = Player.corporation;\n        if (corporation === null) throw new Error(\"Should not be called without a corporation\");\n        ThrowParty(corporation, office, costPerEmployee);\n      },\n      purchaseWarehouse: function (divisionName: any, cityName: any): any {\n        const corporation = Player.corporation;\n        if (corporation === null) throw new Error(\"Should not be called without a corporation\");\n        PurchaseWarehouse(corporation, getDivision(divisionName), cityName);\n      },\n      upgradeWarehouse: function (divisionName: any, cityName: any): any {\n        const corporation = Player.corporation;\n        if (corporation === null) throw new Error(\"Should not be called without a corporation\");\n        UpgradeWarehouse(corporation, getDivision(divisionName), getWarehouse(divisionName, cityName));\n      },\n      buyCoffee: function (divisionName: any, cityName: any): any {\n        const corporation = Player.corporation;\n        if (corporation === null) throw new Error(\"Should not be called without a corporation\");\n        BuyCoffee(corporation, getDivision(divisionName), getOffice(divisionName, cityName));\n      },\n      hireAdVert: function (divisionName: any): any {\n        const corporation = Player.corporation;\n        if (corporation === null) throw new Error(\"Should not be called without a corporation\");\n        HireAdVert(corporation, getDivision(divisionName), getOffice(divisionName, \"Sector-12\"));\n      },\n      makeProduct: function (\n        divisionName: any,\n        cityName: any,\n        productName: any,\n        designInvest: any,\n        marketingInvest: any,\n      ): any {\n        const corporation = Player.corporation;\n        if (corporation === null) throw new Error(\"Should not be called without a corporation\");\n        MakeProduct(corporation, getDivision(divisionName), cityName, productName, designInvest, marketingInvest);\n      },\n      research: function (divisionName: any, researchName: any): any {\n        Research(getDivision(divisionName), researchName);\n      },\n      exportMaterial: function (\n        sourceDivision: any,\n        sourceCity: any,\n        targetDivision: any,\n        targetCity: any,\n        materialName: any,\n        amt: any,\n      ): any {\n        ExportMaterial(targetDivision, targetCity, getMaterial(sourceDivision, sourceCity, materialName), amt + \"\");\n      },\n      cancelExportMaterial: function (\n        sourceDivision: any,\n        sourceCity: any,\n        targetDivision: any,\n        targetCity: any,\n        materialName: any,\n        amt: any,\n      ): any {\n        CancelExportMaterial(\n          targetDivision,\n          targetCity,\n          getMaterial(sourceDivision, sourceCity, materialName),\n          amt + \"\",\n        );\n      },\n      setMaterialMarketTA1: function (divisionName: any, cityName: any, materialName: any, on: any): any {\n        SetMaterialMarketTA1(getMaterial(divisionName, cityName, materialName), on);\n      },\n      setMaterialMarketTA2: function (divisionName: any, cityName: any, materialName: any, on: any) {\n        SetMaterialMarketTA2(getMaterial(divisionName, cityName, materialName), on);\n      },\n      setProductMarketTA1: function (divisionName: any, productName: any, on: any): any {\n        SetProductMarketTA1(getProduct(divisionName, productName), on);\n      },\n      setProductMarketTA2: function (divisionName: any, productName: any, on: any) {\n        SetProductMarketTA2(getProduct(divisionName, productName), on);\n      },\n      // If you modify these objects you will affect them for real, it's not\n      // copies.\n      getDivision: function (divisionName: any): any {\n        return getDivision(divisionName);\n      },\n      getOffice: function (divisionName: any, cityName: any): any {\n        return getOffice(divisionName, cityName);\n      },\n      getWarehouse: function (divisionName: any, cityName: any): any {\n        return getWarehouse(divisionName, cityName);\n      },\n      getMaterial: function (divisionName: any, cityName: any, materialName: any): any {\n        return getMaterial(divisionName, cityName, materialName);\n      },\n      getProduct: function (divisionName: any, productName: any): any {\n        return getProduct(divisionName, productName);\n      },\n      getEmployee: function (divisionName: any, cityName: any, employeeName: any): any {\n        return getEmployee(divisionName, cityName, employeeName);\n      },\n    }, // End Corporation API\n\n    // Coding Contract API\n    codingcontract: {\n      attempt: function (answer: any, fn: any, ip: any = workerScript.serverIp, { returnReward }: any = {}): any {\n        updateDynamicRam(\"attempt\", getRamCost(\"codingcontract\", \"attempt\"));\n        const contract = getCodingContract(\"attempt\", ip, fn);\n\n        // Convert answer to string. If the answer is a 2D array, then we have to\n        // manually add brackets for the inner arrays\n        if (is2DArray(answer)) {\n          const answerComponents = [];\n          for (let i = 0; i < answer.length; ++i) {\n            answerComponents.push([\"[\", answer[i].toString(), \"]\"].join(\"\"));\n          }\n\n          answer = answerComponents.join(\",\");\n        } else {\n          answer = String(answer);\n        }\n\n        const creward = contract.reward;\n        if (creward === null) throw new Error(\"Somehow solved a contract that didn't have a reward\");\n\n        const serv = safeGetServer(ip, \"codingcontract.attempt\");\n        if (contract.isSolution(answer)) {\n          const reward = Player.gainCodingContractReward(creward, contract.getDifficulty());\n          workerScript.log(\"attempt\", `Successfully completed Coding Contract '${fn}'. Reward: ${reward}`);\n          serv.removeContract(fn);\n          return returnReward ? reward : true;\n        } else {\n          ++contract.tries;\n          if (contract.tries >= contract.getMaxNumTries()) {\n            workerScript.log(\"attempt\", `Coding Contract attempt '${fn}' failed. Contract is now self-destructing`);\n            serv.removeContract(fn);\n          } else {\n            workerScript.log(\n              \"attempt\",\n              `Coding Contract attempt '${fn}' failed. ${\n                contract.getMaxNumTries() - contract.tries\n              } attempts remaining.`,\n            );\n          }\n\n          return returnReward ? \"\" : false;\n        }\n      },\n      getContractType: function (fn: any, ip: any = workerScript.serverIp): any {\n        updateDynamicRam(\"getContractType\", getRamCost(\"codingcontract\", \"getContractType\"));\n        const contract = getCodingContract(\"getContractType\", ip, fn);\n        return contract.getType();\n      },\n      getData: function (fn: any, ip: any = workerScript.serverIp): any {\n        updateDynamicRam(\"getData\", getRamCost(\"codingcontract\", \"getData\"));\n        const contract = getCodingContract(\"getData\", ip, fn);\n        const data = contract.getData();\n        if (data.constructor === Array) {\n          // For two dimensional arrays, we have to copy the internal arrays using\n          // slice() as well. As of right now, no contract has arrays that have\n          // more than two dimensions\n          const copy = data.slice();\n          for (let i = 0; i < copy.length; ++i) {\n            if (data[i].constructor === Array) {\n              copy[i] = data[i].slice();\n            }\n          }\n\n          return copy;\n        } else {\n          return data;\n        }\n      },\n      getDescription: function (fn: any, ip: any = workerScript.serverIp): any {\n        updateDynamicRam(\"getDescription\", getRamCost(\"codingcontract\", \"getDescription\"));\n        const contract = getCodingContract(\"getDescription\", ip, fn);\n        return contract.getDescription();\n      },\n      getNumTriesRemaining: function (fn: any, ip: any = workerScript.serverIp): any {\n        updateDynamicRam(\"getNumTriesRemaining\", getRamCost(\"codingcontract\", \"getNumTriesRemaining\"));\n        const contract = getCodingContract(\"getNumTriesRemaining\", ip, fn);\n        return contract.getMaxNumTries() - contract.tries;\n      },\n    }, // End coding contracts\n\n    // Duplicate Sleeve API\n    sleeve: {\n      getNumSleeves: function (): any {\n        updateDynamicRam(\"getNumSleeves\", getRamCost(\"sleeve\", \"getNumSleeves\"));\n        checkSleeveAPIAccess(\"getNumSleeves\");\n        return Player.sleeves.length;\n      },\n      setToShockRecovery: function (sleeveNumber: any = 0): any {\n        updateDynamicRam(\"setToShockRecovery\", getRamCost(\"sleeve\", \"setToShockRecovery\"));\n        checkSleeveAPIAccess(\"setToShockRecovery\");\n        checkSleeveNumber(\"setToShockRecovery\", sleeveNumber);\n        return Player.sleeves[sleeveNumber].shockRecovery(Player);\n      },\n      setToSynchronize: function (sleeveNumber: any = 0): any {\n        updateDynamicRam(\"setToSynchronize\", getRamCost(\"sleeve\", \"setToSynchronize\"));\n        checkSleeveAPIAccess(\"setToSynchronize\");\n        checkSleeveNumber(\"setToSynchronize\", sleeveNumber);\n        return Player.sleeves[sleeveNumber].synchronize(Player);\n      },\n      setToCommitCrime: function (sleeveNumber: any = 0, crimeName: any = \"\"): any {\n        updateDynamicRam(\"setToCommitCrime\", getRamCost(\"sleeve\", \"setToCommitCrime\"));\n        checkSleeveAPIAccess(\"setToCommitCrime\");\n        checkSleeveNumber(\"setToCommitCrime\", sleeveNumber);\n        return Player.sleeves[sleeveNumber].commitCrime(Player, crimeName);\n      },\n      setToUniversityCourse: function (sleeveNumber: any = 0, universityName: any = \"\", className: any = \"\"): any {\n        updateDynamicRam(\"setToUniversityCourse\", getRamCost(\"sleeve\", \"setToUniversityCourse\"));\n        checkSleeveAPIAccess(\"setToUniversityCourse\");\n        checkSleeveNumber(\"setToUniversityCourse\", sleeveNumber);\n        return Player.sleeves[sleeveNumber].takeUniversityCourse(Player, universityName, className);\n      },\n      travel: function (sleeveNumber: any = 0, cityName: any = \"\"): any {\n        updateDynamicRam(\"travel\", getRamCost(\"sleeve\", \"travel\"));\n        checkSleeveAPIAccess(\"travel\");\n        checkSleeveNumber(\"travel\", sleeveNumber);\n        return Player.sleeves[sleeveNumber].travel(Player, cityName);\n      },\n      setToCompanyWork: function (sleeveNumber: any = 0, companyName: any = \"\"): any {\n        updateDynamicRam(\"setToCompanyWork\", getRamCost(\"sleeve\", \"setToCompanyWork\"));\n        checkSleeveAPIAccess(\"setToCompanyWork\");\n        checkSleeveNumber(\"setToCompanyWork\", sleeveNumber);\n\n        // Cannot work at the same company that another sleeve is working at\n        for (let i = 0; i < Player.sleeves.length; ++i) {\n          if (i === sleeveNumber) {\n            continue;\n          }\n          const other = Player.sleeves[i];\n          if (other.currentTask === SleeveTaskType.Company && other.currentTaskLocation === companyName) {\n            throw makeRuntimeErrorMsg(\n              \"sleeve.setToFactionWork\",\n              `Sleeve ${sleeveNumber} cannot work for company ${companyName} because Sleeve ${i} is already working for them.`,\n            );\n          }\n        }\n\n        return Player.sleeves[sleeveNumber].workForCompany(Player, companyName);\n      },\n      setToFactionWork: function (sleeveNumber: any = 0, factionName: any = \"\", workType: any = \"\"): any {\n        updateDynamicRam(\"setToFactionWork\", getRamCost(\"sleeve\", \"setToFactionWork\"));\n        checkSleeveAPIAccess(\"setToFactionWork\");\n        checkSleeveNumber(\"setToFactionWork\", sleeveNumber);\n\n        // Cannot work at the same faction that another sleeve is working at\n        for (let i = 0; i < Player.sleeves.length; ++i) {\n          if (i === sleeveNumber) {\n            continue;\n          }\n          const other = Player.sleeves[i];\n          if (other.currentTask === SleeveTaskType.Faction && other.currentTaskLocation === factionName) {\n            throw makeRuntimeErrorMsg(\n              \"sleeve.setToFactionWork\",\n              `Sleeve ${sleeveNumber} cannot work for faction ${factionName} because Sleeve ${i} is already working for them.`,\n            );\n          }\n        }\n\n        return Player.sleeves[sleeveNumber].workForFaction(Player, factionName, workType);\n      },\n      setToGymWorkout: function (sleeveNumber: any = 0, gymName: any = \"\", stat: any = \"\"): any {\n        updateDynamicRam(\"setToGymWorkout\", getRamCost(\"sleeve\", \"setToGymWorkout\"));\n        checkSleeveAPIAccess(\"setToGymWorkout\");\n        checkSleeveNumber(\"setToGymWorkout\", sleeveNumber);\n\n        return Player.sleeves[sleeveNumber].workoutAtGym(Player, gymName, stat);\n      },\n      getSleeveStats: function (sleeveNumber: any = 0): any {\n        updateDynamicRam(\"getSleeveStats\", getRamCost(\"sleeve\", \"getSleeveStats\"));\n        checkSleeveAPIAccess(\"getSleeveStats\");\n        checkSleeveNumber(\"getSleeveStats\", sleeveNumber);\n\n        const sl = Player.sleeves[sleeveNumber];\n        return {\n          shock: 100 - sl.shock,\n          sync: sl.sync,\n          hacking_skill: sl.hacking_skill,\n          strength: sl.strength,\n          defense: sl.defense,\n          dexterity: sl.dexterity,\n          agility: sl.agility,\n          charisma: sl.charisma,\n        };\n      },\n      getTask: function (sleeveNumber: any = 0): any {\n        updateDynamicRam(\"getTask\", getRamCost(\"sleeve\", \"getTask\"));\n        checkSleeveAPIAccess(\"getTask\");\n        checkSleeveNumber(\"getTask\", sleeveNumber);\n\n        const sl = Player.sleeves[sleeveNumber];\n        return {\n          task: SleeveTaskType[sl.currentTask],\n          crime: sl.crimeType,\n          location: sl.currentTaskLocation,\n          gymStatType: sl.gymStatType,\n          factionWorkType: FactionWorkType[sl.factionWorkType],\n        };\n      },\n      getInformation: function (sleeveNumber: any = 0): any {\n        updateDynamicRam(\"getInformation\", getRamCost(\"sleeve\", \"getInformation\"));\n        checkSleeveAPIAccess(\"getInformation\");\n        checkSleeveNumber(\"getInformation\", sleeveNumber);\n\n        const sl = Player.sleeves[sleeveNumber];\n        return {\n          city: sl.city,\n          hp: sl.hp,\n          jobs: Object.keys(Player.jobs), // technically sleeves have the same jobs as the player.\n          jobTitle: Object.values(Player.jobs),\n          maxHp: sl.max_hp,\n          tor: SpecialServerIps.hasOwnProperty(\"Darkweb Server\"), // There's no reason not to give that infomation here as well. Worst case scenario it isn't used.\n\n          mult: {\n            agility: sl.agility_mult,\n            agilityExp: sl.agility_exp_mult,\n            companyRep: sl.company_rep_mult,\n            crimeMoney: sl.crime_money_mult,\n            crimeSuccess: sl.crime_success_mult,\n            defense: sl.defense_mult,\n            defenseExp: sl.defense_exp_mult,\n            dexterity: sl.dexterity_mult,\n            dexterityExp: sl.dexterity_exp_mult,\n            factionRep: sl.faction_rep_mult,\n            hacking: sl.hacking_mult,\n            hackingExp: sl.hacking_exp_mult,\n            strength: sl.strength_mult,\n            strengthExp: sl.strength_exp_mult,\n            workMoney: sl.work_money_mult,\n          },\n\n          timeWorked: sl.currentTaskTime,\n          earningsForSleeves: {\n            workHackExpGain: sl.earningsForSleeves.hack,\n            workStrExpGain: sl.earningsForSleeves.str,\n            workDefExpGain: sl.earningsForSleeves.def,\n            workDexExpGain: sl.earningsForSleeves.dex,\n            workAgiExpGain: sl.earningsForSleeves.agi,\n            workChaExpGain: sl.earningsForSleeves.cha,\n            workMoneyGain: sl.earningsForSleeves.money,\n          },\n          earningsForPlayer: {\n            workHackExpGain: sl.earningsForPlayer.hack,\n            workStrExpGain: sl.earningsForPlayer.str,\n            workDefExpGain: sl.earningsForPlayer.def,\n            workDexExpGain: sl.earningsForPlayer.dex,\n            workAgiExpGain: sl.earningsForPlayer.agi,\n            workChaExpGain: sl.earningsForPlayer.cha,\n            workMoneyGain: sl.earningsForPlayer.money,\n          },\n          earningsForTask: {\n            workHackExpGain: sl.earningsForTask.hack,\n            workStrExpGain: sl.earningsForTask.str,\n            workDefExpGain: sl.earningsForTask.def,\n            workDexExpGain: sl.earningsForTask.dex,\n            workAgiExpGain: sl.earningsForTask.agi,\n            workChaExpGain: sl.earningsForTask.cha,\n            workMoneyGain: sl.earningsForTask.money,\n          },\n          workRepGain: sl.getRepGain(Player),\n        };\n      },\n      getSleeveAugmentations: function (sleeveNumber: any = 0): any {\n        updateDynamicRam(\"getSleeveAugmentations\", getRamCost(\"sleeve\", \"getSleeveAugmentations\"));\n        checkSleeveAPIAccess(\"getSleeveAugmentations\");\n        checkSleeveNumber(\"getSleeveAugmentations\", sleeveNumber);\n\n        const augs = [];\n        for (let i = 0; i < Player.sleeves[sleeveNumber].augmentations.length; i++) {\n          augs.push(Player.sleeves[sleeveNumber].augmentations[i].name);\n        }\n        return augs;\n      },\n      getSleevePurchasableAugs: function (sleeveNumber: any = 0): any {\n        updateDynamicRam(\"getSleevePurchasableAugs\", getRamCost(\"sleeve\", \"getSleevePurchasableAugs\"));\n        checkSleeveAPIAccess(\"getSleevePurchasableAugs\");\n        checkSleeveNumber(\"getSleevePurchasableAugs\", sleeveNumber);\n\n        const purchasableAugs = findSleevePurchasableAugs(Player.sleeves[sleeveNumber], Player);\n        const augs = [];\n        for (let i = 0; i < purchasableAugs.length; i++) {\n          const aug = purchasableAugs[i];\n          augs.push({\n            name: aug.name,\n            cost: aug.startingCost,\n          });\n        }\n\n        return augs;\n      },\n      purchaseSleeveAug: function (sleeveNumber: any = 0, augName: any = \"\"): any {\n        updateDynamicRam(\"purchaseSleeveAug\", getRamCost(\"sleeve\", \"purchaseSleeveAug\"));\n        checkSleeveAPIAccess(\"purchaseSleeveAug\");\n        checkSleeveNumber(\"purchaseSleeveAug\", sleeveNumber);\n\n        const aug = Augmentations[augName];\n        if (!aug) {\n          throw makeRuntimeErrorMsg(\"sleeve.purchaseSleeveAug\", `Invalid aug: ${augName}`);\n        }\n\n        return Player.sleeves[sleeveNumber].tryBuyAugmentation(Player, aug);\n      },\n    }, // End sleeve\n    formulas: {\n      basic: {\n        calculateSkill: function (exp: any, mult: any = 1): any {\n          checkFormulasAccess(\"basic.calculateSkill\", 5);\n          return calculateSkill(exp, mult);\n        },\n        calculateExp: function (skill: any, mult: any = 1): any {\n          checkFormulasAccess(\"basic.calculateExp\", 5);\n          return calculateExp(skill, mult);\n        },\n        hackChance: function (server: any, player: any): any {\n          checkFormulasAccess(\"basic.hackChance\", 5);\n          return calculateHackingChance(server, player);\n        },\n        hackExp: function (server: any, player: any): any {\n          checkFormulasAccess(\"basic.hackExp\", 5);\n          return calculateHackingExpGain(server, player);\n        },\n        hackPercent: function (server: any, player: any): any {\n          checkFormulasAccess(\"basic.hackPercent\", 5);\n          return calculatePercentMoneyHacked(server, player);\n        },\n        growPercent: function (server: any, threads: any, player: any, cores: any = 1): any {\n          checkFormulasAccess(\"basic.growPercent\", 5);\n          return calculateServerGrowth(server, threads, player, cores);\n        },\n        hackTime: function (server: any, player: any): any {\n          checkFormulasAccess(\"basic.hackTime\", 5);\n          return calculateHackingTime(server, player);\n        },\n        growTime: function (server: any, player: any): any {\n          checkFormulasAccess(\"basic.growTime\", 5);\n          return calculateGrowTime(server, player);\n        },\n        weakenTime: function (server: any, player: any): any {\n          checkFormulasAccess(\"basic.weakenTime\", 5);\n          return calculateWeakenTime(server, player);\n        },\n      },\n      hacknetNodes: {\n        moneyGainRate: function (level: any, ram: any, cores: any, mult: any = 1): any {\n          checkFormulasAccess(\"hacknetNodes.moneyGainRate\", 5);\n          return calculateMoneyGainRate(level, ram, cores, mult);\n        },\n        levelUpgradeCost: function (startingLevel: any, extraLevels: any = 1, costMult: any = 1): any {\n          checkFormulasAccess(\"hacknetNodes.levelUpgradeCost\", 5);\n          return calculateLevelUpgradeCost(startingLevel, extraLevels, costMult);\n        },\n        ramUpgradeCost: function (startingRam: any, extraLevels: any = 1, costMult: any = 1): any {\n          checkFormulasAccess(\"hacknetNodes.ramUpgradeCost\", 5);\n          return calculateRamUpgradeCost(startingRam, extraLevels, costMult);\n        },\n        coreUpgradeCost: function (startingCore: any, extraCores: any = 1, costMult: any = 1): any {\n          checkFormulasAccess(\"hacknetNodes.coreUpgradeCost\", 5);\n          return calculateCoreUpgradeCost(startingCore, extraCores, costMult);\n        },\n        hacknetNodeCost: function (n: any, mult: any): any {\n          checkFormulasAccess(\"hacknetNodes.hacknetNodeCost\", 5);\n          return calculateNodeCost(n, mult);\n        },\n        constants: function (): any {\n          checkFormulasAccess(\"hacknetNodes.constants\", 5);\n          return Object.assign({}, HacknetNodeConstants);\n        },\n      },\n      hacknetServers: {\n        hashGainRate: function (level: any, ramUsed: any, maxRam: any, cores: any, mult: any = 1): any {\n          checkFormulasAccess(\"hacknetServers.hashGainRate\", 9);\n          return HScalculateHashGainRate(level, ramUsed, maxRam, cores, mult);\n        },\n        levelUpgradeCost: function (startingLevel: any, extraLevels: any = 1, costMult: any = 1): any {\n          checkFormulasAccess(\"hacknetServers.levelUpgradeCost\", 9);\n          return HScalculateLevelUpgradeCost(startingLevel, extraLevels, costMult);\n        },\n        ramUpgradeCost: function (startingRam: any, extraLevels: any = 1, costMult: any = 1): any {\n          checkFormulasAccess(\"hacknetServers.ramUpgradeCost\", 9);\n          return HScalculateRamUpgradeCost(startingRam, extraLevels, costMult);\n        },\n        coreUpgradeCost: function (startingCore: any, extraCores: any = 1, costMult: any = 1): any {\n          checkFormulasAccess(\"hacknetServers.coreUpgradeCost\", 9);\n          return HScalculateCoreUpgradeCost(startingCore, extraCores, costMult);\n        },\n        cacheUpgradeCost: function (startingCache: any, extraCache: any = 1): any {\n          checkFormulasAccess(\"hacknetServers.cacheUpgradeCost\", 9);\n          return HScalculateCacheUpgradeCost(startingCache, extraCache);\n        },\n        hashUpgradeCost: function (upgName: any, level: any): any {\n          checkFormulasAccess(\"hacknetServers.hashUpgradeCost\", 9);\n          const upg = Player.hashManager.getUpgrade(upgName);\n          if (!upg) {\n            throw makeRuntimeErrorMsg(\n              \"formulas.hacknetServers.calculateHashUpgradeCost\",\n              `Invalid Hash Upgrade: ${upgName}`,\n            );\n          }\n          return upg.getCost(level);\n        },\n        hacknetServerCost: function (n: any, mult: any): any {\n          checkFormulasAccess(\"hacknetServers.hacknetServerCost\", 9);\n          return HScalculateServerCost(n, mult);\n        },\n        constants: function (): any {\n          checkFormulasAccess(\"hacknetServers.constants\", 9);\n          return Object.assign({}, HacknetServerConstants);\n        },\n      },\n    }, // end formulas\n    heart: {\n      // Easter egg function\n      break: function (): number {\n        return Player.karma;\n      },\n    },\n    exploit: function (): any {\n      Player.giveExploit(Exploit.UndocumentedFunctionCall);\n    },\n    bypass: function (doc: any): any {\n      // reset both fields first\n      doc.completely_unused_field = undefined;\n      const real_document: any = document;\n      real_document.completely_unused_field = undefined;\n      // set one to true and check that it affected the other.\n      real_document.completely_unused_field = true;\n      if (doc.completely_unused_field && workerScript.ramUsage === 1.6) {\n        Player.giveExploit(Exploit.Bypass);\n      }\n      doc.completely_unused_field = undefined;\n      real_document.completely_unused_field = undefined;\n    },\n    flags: function (data: any): any {\n      data = toNative(data);\n      // We always want the help flag.\n      const args: {\n        [key: string]: any;\n      } = {};\n\n      for (const d of data) {\n        let t: any = String;\n        if (typeof d[1] === \"number\") {\n          t = Number;\n        } else if (typeof d[1] === \"boolean\") {\n          t = Boolean;\n        } else if (Array.isArray(d[1])) {\n          t = [String];\n        }\n        const numDashes = d[0].length > 1 ? 2 : 1;\n        args[\"-\".repeat(numDashes) + d[0]] = t;\n      }\n      const ret = libarg(args, { argv: workerScript.args });\n      for (const d of data) {\n        if (!ret.hasOwnProperty(\"--\" + d[0]) || !ret.hasOwnProperty(\"-\" + d[0])) ret[d[0]] = d[1];\n      }\n      for (const key of Object.keys(ret)) {\n        if (!key.startsWith(\"-\")) continue;\n        const value = ret[key];\n        delete ret[key];\n        const numDashes = key.length === 2 ? 1 : 2;\n        ret[key.slice(numDashes)] = value;\n      }\n      return ret;\n    },\n  };\n\n  function getFunctionNames(obj: NS): string[] {\n    const functionNames: string[] = [];\n    for (const [key, value] of Object.entries(obj)) {\n      if (typeof value == \"function\") {\n        functionNames.push(key);\n      } else if (typeof value == \"object\") {\n        functionNames.push(...getFunctionNames(value));\n      }\n    }\n    return functionNames;\n  }\n\n  const possibleLogs = Object.fromEntries([...getFunctionNames(functions)].map((a) => [a, true]));\n\n  return functions;\n} // End NetscriptFunction()\n\nexport { NetscriptFunctions };\n","/**\n * TODO\n * Add police clashes\n * balance point to keep them from running out of control\n */\n\nimport { Faction } from \"../Faction/Faction\";\nimport { Factions } from \"../Faction/Factions\";\n\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\nimport { Reviver, Generic_toJSON, Generic_fromJSON } from \"../utils/JSONReviver\";\n\nimport { exceptionAlert } from \"../utils/helpers/exceptionAlert\";\nimport { getRandomInt } from \"../utils/helpers/getRandomInt\";\n\nimport { GangMemberUpgrade } from \"./GangMemberUpgrade\";\nimport { GangConstants } from \"./data/Constants\";\nimport { CONSTANTS } from \"../Constants\";\nimport { GangMemberTasks } from \"./GangMemberTasks\";\nimport { IAscensionResult } from \"./IAscensionResult\";\n\nimport { AllGangs } from \"./AllGangs\";\nimport { GangMember } from \"./GangMember\";\n\nimport { WorkerScript } from \"../Netscript/WorkerScript\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\n\nexport class Gang {\n  facName: string;\n  members: GangMember[];\n  wanted: number;\n  respect: number;\n\n  isHackingGang: boolean;\n\n  respectGainRate: number;\n  wantedGainRate: number;\n  moneyGainRate: number;\n\n  storedCycles: number;\n\n  storedTerritoryAndPowerCycles: number;\n\n  territoryClashChance: number;\n  territoryWarfareEngaged: boolean;\n\n  notifyMemberDeath: boolean;\n\n  constructor(facName = \"\", hacking = false) {\n    this.facName = facName;\n    this.members = [];\n    this.wanted = 1;\n    this.respect = 1;\n\n    this.isHackingGang = hacking;\n\n    this.respectGainRate = 0;\n    this.wantedGainRate = 0;\n    this.moneyGainRate = 0;\n\n    // When processing gains, this stores the number of cycles until some\n    // limit is reached, and then calculates and applies the gains only at that limit\n    this.storedCycles = 0;\n\n    // Separate variable to keep track of cycles for Territry + Power gang, which\n    // happens on a slower \"clock\" than normal processing\n    this.storedTerritoryAndPowerCycles = 0;\n\n    this.territoryClashChance = 0;\n    this.territoryWarfareEngaged = false;\n\n    this.notifyMemberDeath = true;\n  }\n\n  getPower(): number {\n    return AllGangs[this.facName].power;\n  }\n\n  getTerritory(): number {\n    return AllGangs[this.facName].territory;\n  }\n\n  process(numCycles = 1, player: IPlayer): void {\n    const CyclesPerSecond = 1000 / CONSTANTS._idleSpeed;\n\n    if (isNaN(numCycles)) {\n      console.error(`NaN passed into Gang.process(): ${numCycles}`);\n    }\n    this.storedCycles += numCycles;\n\n    // Only process if there are at least 2 seconds, and at most 5 seconds\n    if (this.storedCycles < 2 * CyclesPerSecond) return;\n    const cycles = Math.min(this.storedCycles, 5 * CyclesPerSecond);\n\n    try {\n      this.processGains(cycles, player);\n      this.processExperienceGains(cycles);\n      this.processTerritoryAndPowerGains(cycles);\n      this.storedCycles -= cycles;\n    } catch (e) {\n      console.error(`Exception caught when processing Gang: ${e}`);\n    }\n  }\n\n  processGains(numCycles = 1, player: IPlayer): void {\n    // Get gains per cycle\n    let moneyGains = 0;\n    let respectGains = 0;\n    let wantedLevelGains = 0;\n    let justice = 0;\n    for (let i = 0; i < this.members.length; ++i) {\n      respectGains += this.members[i].calculateRespectGain(this);\n      moneyGains += this.members[i].calculateMoneyGain(this);\n      const wantedLevelGain = this.members[i].calculateWantedLevelGain(this);\n      wantedLevelGains += wantedLevelGain;\n      if (this.members[i].getTask().baseWanted < 0) justice++; // this member is lowering wanted.\n    }\n    this.respectGainRate = respectGains;\n    this.wantedGainRate = wantedLevelGains;\n    this.moneyGainRate = moneyGains;\n    const gain = respectGains * numCycles;\n    this.respect += gain;\n    // Faction reputation gains is respect gain divided by some constant\n    const fac = Factions[this.facName];\n    if (!(fac instanceof Faction)) {\n      dialogBoxCreate(\n        \"ERROR: Could not get Faction associates with your gang. This is a bug, please report to game dev\",\n      );\n      throw new Error(\"Could not find the faction associated with this gang.\");\n    }\n    const favorMult = 1 + fac.favor / 100;\n\n    fac.playerReputation += (player.faction_rep_mult * gain * favorMult) / GangConstants.GangRespectToReputationRatio;\n\n    // Keep track of respect gained per member\n    for (let i = 0; i < this.members.length; ++i) {\n      this.members[i].recordEarnedRespect(numCycles, this);\n    }\n    if (!(this.wanted === 1 && wantedLevelGains < 0)) {\n      const oldWanted = this.wanted;\n      let newWanted = oldWanted + wantedLevelGains * numCycles;\n      newWanted = newWanted * (1 - justice * 0.001); // safeguard\n      // Prevent overflow\n      if (wantedLevelGains <= 0 && newWanted > oldWanted) newWanted = 1;\n\n      this.wanted = newWanted;\n      if (this.wanted < 1) this.wanted = 1;\n    }\n    player.gainMoney(moneyGains * numCycles);\n    player.recordMoneySource(moneyGains * numCycles, \"gang\");\n  }\n\n  processTerritoryAndPowerGains(numCycles = 1): void {\n    this.storedTerritoryAndPowerCycles += numCycles;\n    if (this.storedTerritoryAndPowerCycles < GangConstants.CyclesPerTerritoryAndPowerUpdate) return;\n    this.storedTerritoryAndPowerCycles -= GangConstants.CyclesPerTerritoryAndPowerUpdate;\n\n    // Process power first\n    const gangName = this.facName;\n    for (const name in AllGangs) {\n      if (AllGangs.hasOwnProperty(name)) {\n        if (name == gangName) {\n          AllGangs[name].power += this.calculatePower();\n        } else {\n          // All NPC gangs get random power gains\n          const gainRoll = Math.random();\n          if (gainRoll < 0.5) {\n            // Multiplicative gain (50% chance)\n            // This is capped per cycle, to prevent it from getting out of control\n            const multiplicativeGain = AllGangs[name].power * 0.005;\n            AllGangs[name].power += Math.min(0.85, multiplicativeGain);\n          } else {\n            // Additive gain (50% chance)\n            const additiveGain = 0.75 * gainRoll * AllGangs[name].territory;\n            AllGangs[name].power += additiveGain;\n          }\n        }\n      }\n    }\n\n    // Determine if territory should be processed\n    if (this.territoryWarfareEngaged) {\n      this.territoryClashChance = 1;\n    } else if (this.territoryClashChance > 0) {\n      // Engagement turned off, but still a positive clash chance. So there's\n      // still a chance of clashing but it slowly goes down over time\n      this.territoryClashChance = Math.max(0, this.territoryClashChance - 0.01);\n    }\n\n    // Then process territory\n    for (let i = 0; i < GangConstants.Names.length; ++i) {\n      const others = GangConstants.Names.filter((e) => {\n        return e !== GangConstants.Names[i];\n      });\n      const other = getRandomInt(0, others.length - 1);\n\n      const thisGang = GangConstants.Names[i];\n      const otherGang = others[other];\n\n      // If either of the gangs involved in this clash is the player, determine\n      // whether to skip or process it using the clash chance\n      if (thisGang === gangName || otherGang === gangName) {\n        if (!(Math.random() < this.territoryClashChance)) continue;\n      }\n\n      const thisPwr = AllGangs[thisGang].power;\n      const otherPwr = AllGangs[otherGang].power;\n      const thisChance = thisPwr / (thisPwr + otherPwr);\n\n      function calculateTerritoryGain(winGang: string, loseGang: string): number {\n        const powerBonus = Math.max(1, 1 + Math.log(AllGangs[winGang].power / AllGangs[loseGang].power) / Math.log(50));\n        const gains = Math.min(AllGangs[loseGang].territory, powerBonus * 0.0001 * (Math.random() + 0.5));\n        return gains;\n      }\n\n      if (Math.random() < thisChance) {\n        if (AllGangs[otherGang].territory <= 0) return;\n        const territoryGain = calculateTerritoryGain(thisGang, otherGang);\n        AllGangs[thisGang].territory += territoryGain;\n        AllGangs[otherGang].territory -= territoryGain;\n        if (thisGang === gangName) {\n          this.clash(true); // Player won\n          AllGangs[otherGang].power *= 1 / 1.01;\n        } else if (otherGang === gangName) {\n          this.clash(false); // Player lost\n        } else {\n          AllGangs[otherGang].power *= 1 / 1.01;\n        }\n      } else {\n        if (AllGangs[thisGang].territory <= 0) return;\n        const territoryGain = calculateTerritoryGain(otherGang, thisGang);\n        AllGangs[thisGang].territory -= territoryGain;\n        AllGangs[otherGang].territory += territoryGain;\n        if (thisGang === gangName) {\n          this.clash(false); // Player lost\n        } else if (otherGang === gangName) {\n          this.clash(true); // Player won\n          AllGangs[thisGang].power *= 1 / 1.01;\n        } else {\n          AllGangs[thisGang].power *= 1 / 1.01;\n        }\n      }\n    }\n  }\n\n  processExperienceGains(numCycles = 1): void {\n    for (let i = 0; i < this.members.length; ++i) {\n      this.members[i].gainExperience(numCycles);\n      this.members[i].updateSkillLevels();\n    }\n  }\n\n  clash(won = false): void {\n    // Determine if a gang member should die\n    let baseDeathChance = 0.01;\n    if (won) baseDeathChance /= 2;\n    // If the clash was lost, the player loses a small percentage of power\n    else AllGangs[this.facName].power *= 1 / 1.008;\n\n    // Deaths can only occur during X% of clashes\n    if (Math.random() < 0.65) return;\n\n    for (let i = this.members.length - 1; i >= 0; --i) {\n      const member = this.members[i];\n\n      // Only members assigned to Territory Warfare can die\n      if (member.task !== \"Territory Warfare\") continue;\n\n      // Chance to die is decreased based on defense\n      const modifiedDeathChance = baseDeathChance / Math.pow(member.def, 0.6);\n      if (Math.random() < modifiedDeathChance) {\n        this.killMember(member);\n      }\n    }\n  }\n\n  canRecruitMember(): boolean {\n    if (this.members.length >= GangConstants.MaximumGangMembers) return false;\n    return this.respect >= this.getRespectNeededToRecruitMember();\n  }\n\n  getRespectNeededToRecruitMember(): number {\n    // First N gang members are free (can be recruited at 0 respect)\n    const numFreeMembers = 3;\n    if (this.members.length < numFreeMembers) return 0;\n\n    const i = this.members.length - (numFreeMembers - 1);\n    return Math.pow(5, i);\n  }\n\n  recruitMember(name: string): boolean {\n    name = String(name);\n    if (name === \"\" || !this.canRecruitMember()) return false;\n\n    // Check for already-existing names\n    const sameNames = this.members.filter((m) => m.name === name);\n    if (sameNames.length >= 1) return false;\n\n    const member = new GangMember(name);\n    this.members.push(member);\n    return true;\n  }\n\n  // Money and Respect gains multiplied by this number (< 1)\n  getWantedPenalty(): number {\n    return this.respect / (this.respect + this.wanted);\n  }\n\n  //Calculates power GAIN, which is added onto the Gang's existing power\n  calculatePower(): number {\n    let memberTotal = 0;\n    for (let i = 0; i < this.members.length; ++i) {\n      if (!GangMemberTasks.hasOwnProperty(this.members[i].task) || this.members[i].task !== \"Territory Warfare\")\n        continue;\n      memberTotal += this.members[i].calculatePower();\n    }\n    return 0.015 * Math.max(0.002, this.getTerritory()) * memberTotal;\n  }\n\n  killMember(member: GangMember): void {\n    // Player loses a percentage of total respect, plus whatever respect that member has earned\n    const totalRespect = this.respect;\n    const lostRespect = 0.05 * totalRespect + member.earnedRespect;\n    this.respect = Math.max(0, totalRespect - lostRespect);\n\n    for (let i = 0; i < this.members.length; ++i) {\n      if (member.name === this.members[i].name) {\n        this.members.splice(i, 1);\n        break;\n      }\n    }\n\n    // Notify of death\n    if (this.notifyMemberDeath) {\n      dialogBoxCreate(`${member.name} was killed in a gang clash! You lost ${lostRespect} respect`);\n    }\n  }\n\n  ascendMember(member: GangMember, workerScript?: WorkerScript): IAscensionResult {\n    try {\n      const res = member.ascend();\n      this.respect = Math.max(1, this.respect - res.respect);\n      if (workerScript) {\n        workerScript.log(\"ascend\", `Ascended Gang member ${member.name}`);\n      }\n      return res;\n    } catch (e) {\n      if (workerScript == null) {\n        exceptionAlert(e);\n      }\n      throw e; // Re-throw, will be caught in the Netscript Function\n    }\n  }\n\n  // Cost of upgrade gets cheaper as gang increases in respect + power\n  getDiscount(): number {\n    const power = this.getPower();\n    const respect = this.respect;\n\n    const respectLinearFac = 5e6;\n    const powerLinearFac = 1e6;\n    const discount =\n      Math.pow(respect, 0.01) + respect / respectLinearFac + Math.pow(power, 0.01) + power / powerLinearFac - 1;\n    return Math.max(1, discount);\n  }\n\n  // Returns only valid tasks for this gang. Excludes 'Unassigned'\n  getAllTaskNames(): string[] {\n    return Object.keys(GangMemberTasks).filter((taskName: string) => {\n      const task = GangMemberTasks[taskName];\n      if (task == null) return false;\n      if (task.name === \"Unassigned\") return false;\n      // yes you need both checks\n      return this.isHackingGang === task.isHacking || !this.isHackingGang === task.isCombat;\n    });\n  }\n\n  getUpgradeCost(upg: GangMemberUpgrade | null): number {\n    if (upg == null) {\n      return Infinity;\n    }\n    return upg.cost / this.getDiscount();\n  }\n\n  /**\n   * Serialize the current object to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"Gang\", this);\n  }\n\n  /**\n   * Initiatizes a Gang object from a JSON save state.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Gang {\n    return Generic_fromJSON(Gang, value.data);\n  }\n}\n\nReviver.constructors.Gang = Gang;\n","/**\n * Implementation of the mechanisms that allow the player to affect the\n * Stock Market\n */\nimport { Stock } from \"./Stock\";\nimport { StockMarket } from \"./StockMarket\";\n\nimport { Company } from \"../Company/Company\";\nimport { Server } from \"../Server/Server\";\n\n// Change in second-order forecast due to hacks/grows\nexport const forecastForecastChangeFromHack = 0.1;\n\n// Change in second-order forecast due to company work\nexport const forecastForecastChangeFromCompanyWork = 0.001;\n\n/**\n * Potentially decreases a stock's second-order forecast when its corresponding\n * server is hacked. The chance of the hack decreasing the stock's second-order\n * forecast is dependent on what percentage of the server's money is hacked\n * @param {Server} server - Server being hack()ed\n * @param {number} moneyHacked - Amount of money stolen from the server\n */\nexport function influenceStockThroughServerHack(server: Server, moneyHacked: number): void {\n  const orgName = server.organizationName;\n  let stock: Stock | null = null;\n  if (typeof orgName === \"string\" && orgName !== \"\") {\n    stock = StockMarket[orgName];\n  }\n  if (!(stock instanceof Stock)) {\n    return;\n  }\n\n  const percTotalMoneyHacked = moneyHacked / server.moneyMax;\n  if (Math.random() < percTotalMoneyHacked) {\n    stock.changeForecastForecast(stock.otlkMagForecast - forecastForecastChangeFromHack);\n  }\n}\n\n/**\n * Potentially increases a stock's second-order forecast when its corresponding\n * server is grown (grow()). The chance of the grow() to increase the stock's\n * second-order forecast is dependent on how much money is added to the server\n * @param {Server} server - Server being grow()n\n * @param {number} moneyHacked - Amount of money added to the server\n */\nexport function influenceStockThroughServerGrow(server: Server, moneyGrown: number): void {\n  const orgName = server.organizationName;\n  let stock: Stock | null = null;\n  if (typeof orgName === \"string\" && orgName !== \"\") {\n    stock = StockMarket[orgName];\n  }\n  if (!(stock instanceof Stock)) {\n    return;\n  }\n\n  const percTotalMoneyGrown = moneyGrown / server.moneyMax;\n  if (Math.random() < percTotalMoneyGrown) {\n    stock.changeForecastForecast(stock.otlkMagForecast + forecastForecastChangeFromHack);\n  }\n}\n\n/**\n * Potentially increases a stock's second-order forecast when the player works for\n * its corresponding company.\n * @param {Company} company - Company being worked for\n * @param {number} performanceMult - Effectiveness of player's work. Affects influence\n * @param {number} cyclesOfWork - # game cycles of work being processed\n */\nexport function influenceStockThroughCompanyWork(\n  company: Company,\n  performanceMult: number,\n  cyclesOfWork: number,\n): void {\n  const compName = company.name;\n  let stock: Stock | null = null;\n  if (typeof compName === \"string\" && compName !== \"\") {\n    stock = StockMarket[compName];\n  }\n  if (!(stock instanceof Stock)) {\n    return;\n  }\n\n  if (Math.random() < 0.002 * cyclesOfWork) {\n    const change = forecastForecastChangeFromCompanyWork * performanceMult;\n    stock.changeForecastForecast(stock.otlkMagForecast + change);\n  }\n}\n","import { workerScripts } from \"./WorkerScripts\";\n\nlet pidCounter = 1;\n\n/**\n * Find and return the next availble PID for a script\n */\nexport function generateNextPid(): number {\n  let tempCounter = pidCounter;\n\n  // Cap the number of search iterations at some arbitrary value to avoid\n  // infinite loops. We'll assume that players wont have 1mil+ running scripts\n  let found = false;\n  for (let i = 0; i < 1e6; ) {\n    if (!workerScripts.has(tempCounter + i)) {\n      found = true;\n      tempCounter = tempCounter + i;\n      break;\n    }\n\n    if (i === Number.MAX_SAFE_INTEGER - 1) {\n      i = 1;\n    } else {\n      ++i;\n    }\n  }\n\n  if (found) {\n    pidCounter = tempCounter + 1;\n    if (pidCounter >= Number.MAX_SAFE_INTEGER) {\n      pidCounter = 1;\n    }\n\n    return tempCounter;\n  } else {\n    return -1;\n  }\n}\n\nexport function resetPidCounter(): void {\n  pidCounter = 1;\n}\n","import React, { useState } from \"react\";\n\nimport { CinematicLine } from \"./CinematicLine\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  lines: string[];\n  auto?: boolean;\n  onDone?: () => void;\n}\n\nexport function CinematicText(props: IProps): React.ReactElement {\n  const [i, setI] = useState(0);\n  const [done, setDone] = useState(false);\n\n  function advance(): void {\n    const newI = i + 1;\n    setI(newI);\n    if (newI >= props.lines.length) {\n      if (props.onDone && props.auto) props.onDone();\n      setDone(true);\n    }\n  }\n\n  return (\n    <>\n      {props.lines.slice(0, i).map((line, i) => (\n        <Typography key={i}>{line}</Typography>\n      ))}\n      {props.lines.length > i && <CinematicLine key={i} text={props.lines[i]} onDone={advance} />}\n      {!props.auto && props.onDone && done && <Button onClick={props.onDone}>Continue ...</Button>}\n    </>\n  );\n}\n","import { getRandomInt } from \"./getRandomInt\";\n\n/**\n * Gets a random value in the range of a byte (0 - 255), or up to the maximum.\n * @param max The maximum value (up to 255).\n */\nexport function getRandomByte(max: number): number {\n  // Technically 2^8 is 256, but the values are 0-255, not 1-256.\n  const byteMaximum = 255;\n  const upper: number = Math.max(Math.min(max, byteMaximum), 0);\n\n  return getRandomInt(0, upper);\n}\n","/**\n * Utility function that creates a \"city map\", which is an object where\n * each city is a key (property).\n *\n * This map uses the official name of the city, NOT its key in the 'Cities' object\n */\nimport { Cities } from \"./Cities\";\nimport { IMap } from \"../types\";\n\nexport function createCityMap<T>(initValue: T): IMap<T> {\n  const map: IMap<any> = {};\n  const cities = Object.keys(Cities);\n  for (let i = 0; i < cities.length; ++i) {\n    map[cities[i]] = initValue;\n  }\n\n  return map;\n}\n","/**\n * Represents a Hand of cards.\n *\n * This class is IMMUTABLE\n */\n\nimport { Card } from \"./Card\";\n\nexport class Hand {\n  constructor(readonly cards: readonly Card[]) {}\n\n  addCards(...cards: Card[]): Hand {\n    return new Hand([...this.cards, ...cards]);\n  }\n\n  removeByIndex(i: number): Hand {\n    if (i >= this.cards.length) {\n      throw new Error(`Tried to remove invalid card from Hand by index: ${i}`);\n    }\n\n    return new Hand([...this.cards.slice().splice(i, 1)]);\n  }\n}\n","/**\n * Functions used to determine whether the target can be hacked (or grown/weakened).\n * Meant to be used for Netscript implementation\n *\n * The returned status object's message should be used for logging in Netscript\n */\nimport { IReturnStatus } from \"../types\";\n\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { Server } from \"../Server/Server\";\n\nfunction baseCheck(server: Server, fnName: string): IReturnStatus {\n  const hostname = server.hostname;\n\n  if (!(\"requiredHackingSkill\" in server)) {\n    return {\n      res: false,\n      msg: `Cannot ${fnName} ${hostname} server because it is a Hacknet Node`,\n    };\n  }\n\n  if (server.hasAdminRights === false) {\n    return {\n      res: false,\n      msg: `Cannot ${fnName} ${hostname} server because you do not have root access`,\n    };\n  }\n\n  return { res: true };\n}\n\nexport function netscriptCanHack(server: Server, p: IPlayer): IReturnStatus {\n  const initialCheck = baseCheck(server, \"hack\");\n  if (!initialCheck.res) {\n    return initialCheck;\n  }\n\n  const s = server;\n  if (s.requiredHackingSkill > p.hacking_skill) {\n    return {\n      res: false,\n      msg: `Cannot hack ${server.hostname} server because your hacking skill is not high enough`,\n    };\n  }\n\n  return { res: true };\n}\n\nexport function netscriptCanGrow(server: Server): IReturnStatus {\n  return baseCheck(server, \"grow\");\n}\n\nexport function netscriptCanWeaken(server: Server): IReturnStatus {\n  return baseCheck(server, \"weaken\");\n}\n","/**\n * React Component for a button that initiates a transaction on the Stock Market UI\n * (Buy, Sell, Buy Max, etc.)\n */\nimport * as React from \"react\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Button from \"@mui/material/Button\";\ntype IProps = {\n  onClick: () => void;\n  text: string;\n  tooltip?: JSX.Element | null;\n};\n\nexport function StockTickerTxButton(props: IProps): React.ReactElement {\n  return (\n    <Tooltip title={props.tooltip != null ? <Typography>{props.tooltip}</Typography> : \"\"}>\n      <Button onClick={props.onClick}>{props.text}</Button>\n    </Tooltip>\n  );\n}\n","/**\n * Abstract Base Class for any Server object\n */\nimport { CodingContract } from \"../CodingContracts\";\nimport { Message } from \"../Message/Message\";\nimport { RunningScript } from \"../Script/RunningScript\";\nimport { Script } from \"../Script/Script\";\nimport { isValidFilePath } from \"../Terminal/DirectoryHelpers\";\nimport { TextFile } from \"../TextFile\";\nimport { IReturnStatus } from \"../types\";\n\nimport { isScriptFilename } from \"../Script/isScriptFilename\";\n\nimport { createRandomIp } from \"../utils/IPAddress\";\nimport { compareArrays } from \"../utils/helpers/compareArrays\";\n\ninterface IConstructorParams {\n  adminRights?: boolean;\n  hostname: string;\n  ip?: string;\n  isConnectedTo?: boolean;\n  maxRam?: number;\n  organizationName?: string;\n}\n\ninterface writeResult {\n  success: boolean;\n  overwritten: boolean;\n}\n\nexport class BaseServer {\n  // Coding Contract files on this server\n  contracts: CodingContract[] = [];\n\n  // How many CPU cores this server has. Maximum of 8.\n  // Currently, this only affects hacking missions\n  cpuCores = 1;\n\n  // Flag indicating whether the FTP port is open\n  ftpPortOpen = false;\n\n  // Flag indicating whether player has admin/root access to this server\n  hasAdminRights = false;\n\n  // Hostname. Must be unique\n  hostname = \"\";\n\n  // Flag indicating whether HTTP Port is open\n  httpPortOpen = false;\n\n  // IP Address. Must be unique\n  ip = \"\";\n\n  // Flag indicating whether player is curently connected to this server\n  isConnectedTo = false;\n\n  // RAM (GB) available on this server\n  maxRam = 0;\n\n  // Message files AND Literature files on this Server\n  // For Literature files, this array contains only the filename (string)\n  // For Messages, it contains the actual Message object\n  // TODO Separate literature files into its own property\n  messages: (Message | string)[] = [];\n\n  // Name of company/faction/etc. that this server belongs to.\n  // Optional, not applicable to all Servers\n  organizationName = \"\";\n\n  // Programs on this servers. Contains only the names of the programs\n  programs: string[] = [];\n\n  // RAM (GB) used. i.e. unavailable RAM\n  ramUsed = 0;\n\n  // RunningScript files on this server\n  runningScripts: RunningScript[] = [];\n\n  // Script files on this Server\n  scripts: Script[] = [];\n\n  // Contains the IP Addresses of all servers that are immediately\n  // reachable from this one\n  serversOnNetwork: string[] = [];\n\n  // Flag indicating whether SMTP Port is open\n  smtpPortOpen = false;\n\n  // Flag indicating whether SQL Port is open\n  sqlPortOpen = false;\n\n  // Flag indicating whether the SSH Port is open\n  sshPortOpen = false;\n\n  // Text files on this server\n  textFiles: TextFile[] = [];\n\n  constructor(params: IConstructorParams = { hostname: \"\", ip: createRandomIp() }) {\n    this.ip = params.ip ? params.ip : createRandomIp();\n\n    this.hostname = params.hostname;\n    this.organizationName = params.organizationName != null ? params.organizationName : \"\";\n    this.isConnectedTo = params.isConnectedTo != null ? params.isConnectedTo : false;\n\n    //Access information\n    this.hasAdminRights = params.adminRights != null ? params.adminRights : false;\n  }\n\n  addContract(contract: CodingContract): void {\n    this.contracts.push(contract);\n  }\n\n  getContract(contractName: string): CodingContract | null {\n    for (const contract of this.contracts) {\n      if (contract.fn === contractName) {\n        return contract;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Find an actively running script on this server\n   * @param scriptName - Filename of script to search for\n   * @param scriptArgs - Arguments that script is being run with\n   * @returns RunningScript for the specified active script\n   *          Returns null if no such script can be found\n   */\n  getRunningScript(scriptName: string, scriptArgs: any[]): RunningScript | null {\n    for (const rs of this.runningScripts) {\n      if (rs.filename === scriptName && compareArrays(rs.args, scriptArgs)) {\n        return rs;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Given the name of the script, returns the corresponding\n   * Script object on the server (if it exists)\n   */\n  getScript(scriptName: string): Script | null {\n    for (let i = 0; i < this.scripts.length; i++) {\n      if (this.scripts[i].filename === scriptName) {\n        return this.scripts[i];\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns boolean indicating whether the given script is running on this server\n   */\n  isRunning(fn: string): boolean {\n    for (const runningScriptObj of this.runningScripts) {\n      if (runningScriptObj.filename === fn) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  removeContract(contract: CodingContract): void {\n    if (contract instanceof CodingContract) {\n      this.contracts = this.contracts.filter((c) => {\n        return c.fn !== contract.fn;\n      });\n    } else {\n      this.contracts = this.contracts.filter((c) => {\n        return c.fn !== contract;\n      });\n    }\n  }\n\n  /**\n   * Remove a file from the server\n   * @param fn {string} Name of file to be deleted\n   * @returns {IReturnStatus} Return status object indicating whether or not file was deleted\n   */\n  removeFile(fn: string): IReturnStatus {\n    if (fn.endsWith(\".exe\") || fn.match(/^.+\\.exe-\\d+(?:\\.\\d*)?%-INC$/) != null) {\n      for (let i = 0; i < this.programs.length; ++i) {\n        if (this.programs[i] === fn) {\n          this.programs.splice(i, 1);\n          return { res: true };\n        }\n      }\n    } else if (isScriptFilename(fn)) {\n      for (let i = 0; i < this.scripts.length; ++i) {\n        if (this.scripts[i].filename === fn) {\n          if (this.isRunning(fn)) {\n            return {\n              res: false,\n              msg: \"Cannot delete a script that is currently running!\",\n            };\n          }\n\n          this.scripts.splice(i, 1);\n          return { res: true };\n        }\n      }\n    } else if (fn.endsWith(\".lit\")) {\n      for (let i = 0; i < this.messages.length; ++i) {\n        const f = this.messages[i];\n        if (typeof f === \"string\" && f === fn) {\n          this.messages.splice(i, 1);\n          return { res: true };\n        }\n      }\n    } else if (fn.endsWith(\".txt\")) {\n      for (let i = 0; i < this.textFiles.length; ++i) {\n        if (this.textFiles[i].fn === fn) {\n          this.textFiles.splice(i, 1);\n          return { res: true };\n        }\n      }\n    } else if (fn.endsWith(\".cct\")) {\n      for (let i = 0; i < this.contracts.length; ++i) {\n        if (this.contracts[i].fn === fn) {\n          this.contracts.splice(i, 1);\n          return { res: true };\n        }\n      }\n    }\n\n    return { res: false, msg: \"No such file exists\" };\n  }\n\n  /**\n   * Called when a script is run on this server.\n   * All this function does is add a RunningScript object to the\n   * `runningScripts` array. It does NOT check whether the script actually can\n   * be run.\n   */\n  runScript(script: RunningScript): void {\n    this.runningScripts.push(script);\n  }\n\n  setMaxRam(ram: number): void {\n    this.maxRam = ram;\n  }\n\n  /**\n   * Write to a script file\n   * Overwrites existing files. Creates new files if the script does not eixst\n   */\n  writeToScriptFile(fn: string, code: string): writeResult {\n    const ret = { success: false, overwritten: false };\n    if (!isValidFilePath(fn) || !isScriptFilename(fn)) {\n      return ret;\n    }\n\n    // Check if the script already exists, and overwrite it if it does\n    for (let i = 0; i < this.scripts.length; ++i) {\n      if (fn === this.scripts[i].filename) {\n        const script = this.scripts[i];\n        script.code = code;\n        script.updateRamUsage(this.scripts);\n        script.markUpdated();\n        ret.overwritten = true;\n        ret.success = true;\n        return ret;\n      }\n    }\n\n    // Otherwise, create a new script\n    const newScript = new Script(fn, code, this.ip, this.scripts);\n    this.scripts.push(newScript);\n    ret.success = true;\n    return ret;\n  }\n\n  // Write to a text file\n  // Overwrites existing files. Creates new files if the text file does not exist\n  writeToTextFile(fn: string, txt: string): writeResult {\n    const ret = { success: false, overwritten: false };\n    if (!isValidFilePath(fn) || !fn.endsWith(\"txt\")) {\n      return ret;\n    }\n\n    // Check if the text file already exists, and overwrite if it does\n    for (let i = 0; i < this.textFiles.length; ++i) {\n      if (this.textFiles[i].fn === fn) {\n        ret.overwritten = true;\n        this.textFiles[i].text = txt;\n        ret.success = true;\n        return ret;\n      }\n    }\n\n    // Otherwise create a new text file\n    const newFile = new TextFile(fn, txt);\n    this.textFiles.push(newFile);\n    ret.success = true;\n    return ret;\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { KEY } from \"../../utils/helpers/keyCodes\";\n\nimport { CodingContract, CodingContractType, CodingContractTypes } from \"../../CodingContracts\";\nimport { CopyableText } from \"./CopyableText\";\nimport { Modal } from \"./Modal\";\nimport { EventEmitter } from \"../../utils/EventEmitter\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  c: CodingContract;\n  onClose: () => void;\n  onAttempt: (answer: string) => void;\n}\n\nexport const CodingContractEvent = new EventEmitter<[IProps]>();\n\nexport function CodingContractModal(): React.ReactElement {\n  const [props, setProps] = useState<IProps | null>(null);\n  const [answer, setAnswer] = useState(\"\");\n\n  useEffect(() => {\n    CodingContractEvent.subscribe((props) => setProps(props));\n  });\n  if (props === null) return <></>;\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setAnswer(event.target.value);\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (props === null) return;\n    // React just won't cooperate on this one.\n    // \"React.KeyboardEvent<HTMLInputElement>\" seems like the right type but\n    // whatever ...\n    const value = (event.target as any).value;\n\n    if (event.keyCode === KEY.ENTER && value !== \"\") {\n      event.preventDefault();\n      props.onAttempt(answer);\n    }\n  }\n\n  function close(): void {\n    if (props === null) return;\n    props.onClose();\n    setProps(null);\n  }\n\n  const contractType: CodingContractType = CodingContractTypes[props.c.type];\n  const description = [];\n  for (const [i, value] of contractType.desc(props.c.data).split(\"\\n\").entries())\n    description.push(<span key={i} dangerouslySetInnerHTML={{ __html: value + \"<br />\" }}></span>);\n  return (\n    <Modal open={props !== null} onClose={close}>\n      <CopyableText variant=\"h4\" value={props.c.type} />\n      <Typography>\n        You are attempting to solve a Coding Contract. You have {props.c.getMaxNumTries() - props.c.tries} tries\n        remaining, after which the contract will self-destruct.\n      </Typography>\n      <br />\n      <Typography>{description}</Typography>\n      <br />\n      <TextField\n        autoFocus\n        placeholder=\"Enter Solution here\"\n        value={answer}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        InputProps={{\n          endAdornment: (\n            <Button\n              onClick={() => {\n                props.onAttempt(answer);\n                close();\n              }}\n            >\n              Solve\n            </Button>\n          ),\n        }}\n      />\n    </Modal>\n  );\n}\n","/**\n * Implements RAM Calculation functionality.\n *\n * Uses the acorn.js library to parse a script's code into an AST and\n * recursively walk through that AST, calculating RAM usage along\n * the way\n */\nimport * as walk from \"acorn-walk\";\nimport { parse } from \"acorn\";\n\nimport { RamCalculationErrorCode } from \"./RamCalculationErrorCodes\";\n\nimport { RamCosts, RamCostConstants } from \"../Netscript/RamCostGenerator\";\nimport { Script } from \"../Script/Script\";\nimport { WorkerScript } from \"../Netscript/WorkerScript\";\n\n// These special strings are used to reference the presence of a given logical\n// construct within a user script.\nconst specialReferenceIF = \"__SPECIAL_referenceIf\";\nconst specialReferenceFOR = \"__SPECIAL_referenceFor\";\nconst specialReferenceWHILE = \"__SPECIAL_referenceWhile\";\n\n// The global scope of a script is registered under this key during parsing.\nconst memCheckGlobalKey = \".__GLOBAL__\";\n\n/**\n * Parses code into an AST and walks through it recursively to calculate\n * RAM usage. Also accounts for imported modules.\n * @param {Script[]} otherScripts - All other scripts on the server. Used to account for imported scripts\n * @param {string} codeCopy - The code being parsed\n * @param {WorkerScript} workerScript - Object containing RAM costs of Netscript functions. Also used to\n *                                      keep track of what functions have/havent been accounted for\n */\nasync function parseOnlyRamCalculate(\n  otherScripts: Script[],\n  code: string,\n  workerScript: WorkerScript,\n): Promise<number | RamCalculationErrorCode> {\n  try {\n    /**\n     * Maps dependent identifiers to their dependencies.\n     *\n     * The initial identifier is __SPECIAL_INITIAL_MODULE__.__GLOBAL__.\n     * It depends on all the functions declared in the module, all the global scopes\n     * of its imports, and any identifiers referenced in this global scope. Each\n     * function depends on all the identifiers referenced internally.\n     * We walk the dependency graph to calculate RAM usage, given that some identifiers\n     * reference Netscript functions which have a RAM cost.\n     */\n    let dependencyMap: { [key: string]: string[] } = {};\n\n    // Scripts we've parsed.\n    const completedParses = new Set();\n\n    // Scripts we've discovered that need to be parsed.\n    const parseQueue: string[] = [];\n\n    // Parses a chunk of code with a given module name, and updates parseQueue and dependencyMap.\n    function parseCode(code: string, moduleName: string): void {\n      const result = parseOnlyCalculateDeps(code, moduleName);\n      completedParses.add(moduleName);\n\n      // Add any additional modules to the parse queue;\n      for (let i = 0; i < result.additionalModules.length; ++i) {\n        if (!completedParses.has(result.additionalModules[i])) {\n          parseQueue.push(result.additionalModules[i]);\n        }\n      }\n\n      // Splice all the references in\n      dependencyMap = Object.assign(dependencyMap, result.dependencyMap);\n    }\n\n    // Parse the initial module, which is the \"main\" script that is being run\n    const initialModule = \"__SPECIAL_INITIAL_MODULE__\";\n    parseCode(code, initialModule);\n\n    // Process additional modules, which occurs if the \"main\" script has any imports\n    while (parseQueue.length > 0) {\n      const nextModule = parseQueue.shift();\n      if (nextModule === undefined) throw new Error(\"nextModule should not be undefined\");\n\n      // Additional modules can either be imported from the web (in which case we use\n      // a dynamic import), or from other in-game scripts\n      let code;\n      if (nextModule.startsWith(\"https://\") || nextModule.startsWith(\"http://\")) {\n        try {\n          // eslint-disable-next-line no-await-in-loop\n          const module = await eval(\"import(nextModule)\");\n          code = \"\";\n          for (const prop in module) {\n            if (typeof module[prop] === \"function\") {\n              code += module[prop].toString() + \";\\n\";\n            }\n          }\n        } catch (e) {\n          console.error(`Error dynamically importing module from ${nextModule} for RAM calculations: ${e}`);\n          return RamCalculationErrorCode.URLImportError;\n        }\n      } else {\n        if (!Array.isArray(otherScripts)) {\n          console.warn(`parseOnlyRamCalculate() not called with array of scripts`);\n          return RamCalculationErrorCode.ImportError;\n        }\n\n        let script = null;\n        const fn = nextModule.startsWith(\"./\") ? nextModule.slice(2) : nextModule;\n        for (const s of otherScripts) {\n          if (s.filename === fn) {\n            script = s;\n            break;\n          }\n        }\n\n        if (script == null) {\n          return RamCalculationErrorCode.ImportError; // No such script on the server\n        }\n\n        code = script.code;\n      }\n\n      parseCode(code, nextModule);\n    }\n\n    // Finally, walk the reference map and generate a ram cost. The initial set of keys to scan\n    // are those that start with __SPECIAL_INITIAL_MODULE__.\n    let ram = RamCostConstants.ScriptBaseRamCost;\n    const unresolvedRefs = Object.keys(dependencyMap).filter((s) => s.startsWith(initialModule));\n    const resolvedRefs = new Set();\n    while (unresolvedRefs.length > 0) {\n      const ref = unresolvedRefs.shift();\n      if (ref === undefined) throw new Error(\"ref should not be undefined\");\n\n      // Check if this is one of the special keys, and add the appropriate ram cost if so.\n      if (ref === \"hacknet\" && !resolvedRefs.has(\"hacknet\")) {\n        ram += RamCostConstants.ScriptHacknetNodesRamCost;\n      }\n      if (ref === \"document\" && !resolvedRefs.has(\"document\")) {\n        ram += RamCostConstants.ScriptDomRamCost;\n      }\n      if (ref === \"window\" && !resolvedRefs.has(\"window\")) {\n        ram += RamCostConstants.ScriptDomRamCost;\n      }\n\n      resolvedRefs.add(ref);\n\n      if (ref.endsWith(\".*\")) {\n        // A prefix reference. We need to find all matching identifiers.\n        const prefix = ref.slice(0, ref.length - 2);\n        for (const ident of Object.keys(dependencyMap).filter((k) => k.startsWith(prefix))) {\n          for (const dep of dependencyMap[ident] || []) {\n            if (!resolvedRefs.has(dep)) unresolvedRefs.push(dep);\n          }\n        }\n      } else {\n        // An exact reference. Add all dependencies of this ref.\n        for (const dep of dependencyMap[ref] || []) {\n          if (!resolvedRefs.has(dep)) unresolvedRefs.push(dep);\n        }\n      }\n\n      // Check if this identifier is a function in the workerScript environment.\n      // If it is, then we need to get its RAM cost.\n      try {\n        function applyFuncRam(func: any): number {\n          if (typeof func === \"function\") {\n            try {\n              let res;\n              if (func.constructor.name === \"AsyncFunction\") {\n                res = 0; // Async functions will always be 0 RAM\n              } else {\n                res = func.apply(null, []);\n              }\n              if (typeof res === \"number\") {\n                return res;\n              }\n              return 0;\n            } catch (e) {\n              console.error(`Error applying function: ${e}`);\n              return 0;\n            }\n          } else {\n            return 0;\n          }\n        }\n\n        // Only count each function once\n        if (workerScript.loadedFns[ref]) {\n          continue;\n        } else {\n          workerScript.loadedFns[ref] = true;\n        }\n\n        // This accounts for namespaces (Bladeburner, CodingCpntract, etc.)\n        let func;\n        if (ref in workerScript.env.vars.bladeburner) {\n          func = workerScript.env.vars.bladeburner[ref];\n        } else if (ref in workerScript.env.vars.codingcontract) {\n          func = workerScript.env.vars.codingcontract[ref];\n        } else if (ref in workerScript.env.vars.gang) {\n          func = workerScript.env.vars.gang[ref];\n        } else if (ref in workerScript.env.vars.sleeve) {\n          func = workerScript.env.vars.sleeve[ref];\n        } else {\n          func = workerScript.env.vars[ref];\n        }\n        ram += applyFuncRam(func);\n      } catch (error) {\n        continue;\n      }\n    }\n    return ram;\n  } catch (error) {\n    // console.info(\"parse or eval error: \", error);\n    // This is not unexpected. The user may be editing a script, and it may be in\n    // a transitory invalid state.\n    return RamCalculationErrorCode.SyntaxError;\n  }\n}\n\n/**\n * Helper function that parses a single script. It returns a map of all dependencies,\n * which are items in the code's AST that potentially need to be evaluated\n * for RAM usage calculations. It also returns an array of additional modules\n * that need to be parsed (i.e. are 'import'ed scripts).\n */\nfunction parseOnlyCalculateDeps(code: string, currentModule: string): any {\n  const ast = parse(code, { sourceType: \"module\", ecmaVersion: \"latest\" });\n\n  // Everything from the global scope goes in \".\". Everything else goes in \".function\", where only\n  // the outermost layer of functions counts.\n  const globalKey = currentModule + memCheckGlobalKey;\n  const dependencyMap: { [key: string]: Set<string> | undefined } = {};\n  dependencyMap[globalKey] = new Set<string>();\n\n  // If we reference this internal name, we're really referencing that external name.\n  // Filled when we import names from other modules.\n  const internalToExternal: { [key: string]: string | undefined } = {};\n\n  const additionalModules: string[] = [];\n\n  // References get added pessimistically. They are added for thisModule.name, name, and for\n  // any aliases.\n  function addRef(key: string, name: string): void {\n    const s = dependencyMap[key] || (dependencyMap[key] = new Set());\n    const external = internalToExternal[name];\n    if (external !== undefined) {\n      s.add(external);\n    }\n    s.add(currentModule + \".\" + name);\n    s.add(name); // For builtins like hack.\n  }\n\n  //A list of identifiers that resolve to \"native Javascript code\"\n  const objectPrototypeProperties = Object.getOwnPropertyNames(Object.prototype);\n\n  // If we discover a dependency identifier, state.key is the dependent identifier.\n  // walkDeeper is for doing recursive walks of expressions in composites that we handle.\n  function commonVisitors(): any {\n    return {\n      Identifier: (node: any, st: any) => {\n        if (objectPrototypeProperties.includes(node.name)) {\n          return;\n        }\n        addRef(st.key, node.name);\n      },\n      WhileStatement: (node: any, st: any, walkDeeper: any) => {\n        addRef(st.key, specialReferenceWHILE);\n        node.test && walkDeeper(node.test, st);\n        node.body && walkDeeper(node.body, st);\n      },\n      DoWhileStatement: (node: any, st: any, walkDeeper: any) => {\n        addRef(st.key, specialReferenceWHILE);\n        node.test && walkDeeper(node.test, st);\n        node.body && walkDeeper(node.body, st);\n      },\n      ForStatement: (node: any, st: any, walkDeeper: any) => {\n        addRef(st.key, specialReferenceFOR);\n        node.init && walkDeeper(node.init, st);\n        node.test && walkDeeper(node.test, st);\n        node.update && walkDeeper(node.update, st);\n        node.body && walkDeeper(node.body, st);\n      },\n      IfStatement: (node: any, st: any, walkDeeper: any) => {\n        addRef(st.key, specialReferenceIF);\n        node.test && walkDeeper(node.test, st);\n        node.consequent && walkDeeper(node.consequent, st);\n        node.alternate && walkDeeper(node.alternate, st);\n      },\n      MemberExpression: (node: any, st: any, walkDeeper: any) => {\n        node.object && walkDeeper(node.object, st);\n        node.property && walkDeeper(node.property, st);\n      },\n    };\n  }\n\n  walk.recursive(\n    ast,\n    { key: globalKey },\n    Object.assign(\n      {\n        ImportDeclaration: (node: any, st: any) => {\n          const importModuleName = node.source.value;\n          additionalModules.push(importModuleName);\n\n          // This module's global scope refers to that module's global scope, no matter how we\n          // import it.\n          const set = dependencyMap[st.key];\n          if (set === undefined) throw new Error(\"set should not be undefined\");\n          set.add(importModuleName + memCheckGlobalKey);\n\n          for (let i = 0; i < node.specifiers.length; ++i) {\n            const spec = node.specifiers[i];\n            if (spec.imported !== undefined && spec.local !== undefined) {\n              // We depend on specific things.\n              internalToExternal[spec.local.name] = importModuleName + \".\" + spec.imported.name;\n            } else {\n              // We depend on everything.\n              const set = dependencyMap[st.key];\n              if (set === undefined) throw new Error(\"set should not be undefined\");\n              set.add(importModuleName + \".*\");\n            }\n          }\n        },\n        FunctionDeclaration: (node: any) => {\n          const key = currentModule + \".\" + node.id.name;\n          walk.recursive(node, { key: key }, commonVisitors());\n        },\n      },\n      commonVisitors(),\n    ),\n  );\n\n  return { dependencyMap: dependencyMap, additionalModules: additionalModules };\n}\n\n/**\n * Calculate's a scripts RAM Usage\n * @param {string} codeCopy - The script's code\n * @param {Script[]} otherScripts - All other scripts on the server.\n *                                  Used to account for imported scripts\n */\nexport async function calculateRamUsage(\n  codeCopy: string,\n  otherScripts: Script[],\n): Promise<RamCalculationErrorCode | number> {\n  // We don't need a real WorkerScript for this. Just an object that keeps\n  // track of whatever's needed for RAM calculations\n  const workerScript = {\n    loadedFns: {},\n    env: {\n      vars: RamCosts,\n    },\n  } as WorkerScript;\n\n  try {\n    return await parseOnlyRamCalculate(otherScripts, codeCopy, workerScript);\n  } catch (e) {\n    console.error(`Failed to parse script for RAM calculations:`);\n    console.error(e);\n    return RamCalculationErrorCode.SyntaxError;\n  }\n\n  return RamCalculationErrorCode.SyntaxError;\n}\n","import { CONSTANTS } from \"../../Constants\";\nimport { Server } from \"../Server\";\nimport { BitNodeMultipliers } from \"../../BitNode/BitNodeMultipliers\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\nexport function calculateServerGrowth(server: Server, threads: number, p: IPlayer, cores = 1): number {\n  const numServerGrowthCycles = Math.max(Math.floor(threads), 0);\n\n  //Get adjusted growth rate, which accounts for server security\n  const growthRate = CONSTANTS.ServerBaseGrowthRate;\n  let adjGrowthRate = 1 + (growthRate - 1) / server.hackDifficulty;\n  if (adjGrowthRate > CONSTANTS.ServerMaxGrowthRate) {\n    adjGrowthRate = CONSTANTS.ServerMaxGrowthRate;\n  }\n\n  //Calculate adjusted server growth rate based on parameters\n  const serverGrowthPercentage = server.serverGrowth / 100;\n  const numServerGrowthCyclesAdjusted =\n    numServerGrowthCycles * serverGrowthPercentage * BitNodeMultipliers.ServerGrowthRate;\n\n  //Apply serverGrowth for the calculated number of growth cycles\n  const coreBonus = 1 + (cores - 1) / 16;\n  return Math.pow(adjGrowthRate, numServerGrowthCyclesAdjusted * p.hacking_grow_mult * coreBonus);\n}\n","/**\n * Checks whether a IP Address string is valid.\n * @param ipaddress A string representing a potential IP Address\n */\nexport function isValidIPAddress(ipaddress: string): boolean {\n  const byteRange = \"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\";\n  const regexStr = `^${byteRange}\\.${byteRange}\\.${byteRange}\\.${byteRange}$`;\n  const ipAddressRegex = new RegExp(regexStr);\n\n  return ipAddressRegex.test(ipaddress);\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { use } from \"../../ui/Context\";\nimport { EventEmitter } from \"../../utils/EventEmitter\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nexport const BitFlumeEvent = new EventEmitter<[]>();\n\nexport function BitFlumeModal(): React.ReactElement {\n  const router = use.Router();\n  const [open, setOpen] = useState(false);\n  function flume(): void {\n    router.toBitVerse(true, false);\n    setOpen(false);\n  }\n\n  useEffect(() => BitFlumeEvent.subscribe(() => setOpen(true)), []);\n\n  return (\n    <Modal open={open} onClose={() => setOpen(false)}>\n      <Typography>\n        WARNING: USING THIS PROGRAM WILL CAUSE YOU TO LOSE ALL OF YOUR PROGRESS ON THE CURRENT BITNODE.\n        <br />\n        <br />\n        Do you want to travel to the BitNode Nexus? This allows you to reset the current BitNode and select a new one.\n      </Typography>\n      <br />\n      <br />\n      <Button onClick={flume}>Travel to the BitVerse</Button>\n    </Modal>\n  );\n}\n","import { Literatures } from \"./Literatures\";\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\n\nexport function showLiterature(fn: string): void {\n  const litObj = Literatures[fn];\n  if (litObj == null) {\n    return;\n  }\n  const txt = `<i>${litObj.title}</i><br><br>${litObj.txt}`;\n  dialogBoxCreate(txt);\n}\n","import React from \"react\";\nimport { IMap } from \"../types\";\n\n/**\n * Contains the \"information\" property for all the Factions, which is just a description of each faction\n */\nexport class FactionInfo {\n  /**\n   * The multiplier to apply to augmentation base purchase price.\n   */\n  augmentationPriceMult: number;\n\n  /**\n   * The multiplier to apply to augmentation reputation base requirement.\n   */\n  augmentationRepRequirementMult: number;\n\n  /**\n   * The names of all other factions considered to be enemies to this faction.\n   */\n  enemies: string[];\n\n  /**\n   * The descriptive text to show on the faction's page.\n   */\n  infoText: JSX.Element;\n\n  /**\n   * A flag indicating if the faction supports field work to earn reputation.\n   */\n  offerFieldWork: boolean;\n\n  /**\n   * A flag indicating if the faction supports hacking missions to earn reputation.\n   */\n  offerHackingMission: boolean;\n\n  /**\n   * A flag indicating if the faction supports hacking work to earn reputation.\n   */\n  offerHackingWork: boolean;\n\n  /**\n   * A flag indicating if the faction supports security work to earn reputation.\n   */\n  offerSecurityWork: boolean;\n\n  /**\n   * Keep faction on install.\n   */\n  keep: boolean;\n\n  constructor(\n    infoText: JSX.Element,\n    enemies: string[],\n    offerHackingMission: boolean,\n    offerHackingWork: boolean,\n    offerFieldWork: boolean,\n    offerSecurityWork: boolean,\n    keep: boolean,\n  ) {\n    this.infoText = infoText;\n    this.enemies = enemies;\n    this.offerHackingMission = offerHackingMission;\n    this.offerHackingWork = offerHackingWork;\n    this.offerFieldWork = offerFieldWork;\n    this.offerSecurityWork = offerSecurityWork;\n\n    // These are always all 1 for now.\n    this.augmentationPriceMult = 1;\n    this.augmentationRepRequirementMult = 1;\n    this.keep = keep;\n  }\n\n  offersWork(): boolean {\n    return this.offerFieldWork || this.offerHackingMission || this.offerHackingWork || this.offerSecurityWork;\n  }\n}\n\n/**\n * A map of all factions and associated info to them.\n */\n// tslint:disable-next-line:variable-name\nexport const FactionInfos: IMap<FactionInfo> = {\n  // Endgame\n  Illuminati: new FactionInfo(\n    (\n      <>\n        Humanity never changes. No matter how civilized society becomes, it will eventually fall back into chaos. And\n        from this chaos, we are the invisible hand that guides them to order.{\" \"}\n      </>\n    ),\n    [],\n    true,\n    true,\n    true,\n    false,\n    false,\n  ),\n\n  Daedalus: new FactionInfo(\n    <>Yesterday we obeyed kings and bent our necks to emperors. Today we kneel only to truth.</>,\n    [],\n    true,\n    true,\n    true,\n    false,\n    false,\n  ),\n\n  \"The Covenant\": new FactionInfo(\n    (\n      <>\n        Surrender yourself. Give up your empty individuality to become part of something great, something eternal.\n        Become a slave. Submit your mind, body, and soul. Only then can you set yourself free.\n        <br />\n        <br />\n        Only then can you discover immortality.\n      </>\n    ),\n    [],\n    true,\n    true,\n    true,\n    false,\n    false,\n  ),\n\n  // Megacorporations, each forms its own faction\n  ECorp: new FactionInfo(\n    (\n      <>\n        ECorp's mission is simple: to connect the world of today with the technology of tomorrow. With our wide range of\n        Internet-related software and commercial hardware, ECorp makes the world's information universally accessible.\n      </>\n    ),\n    [],\n    true,\n    true,\n    true,\n    true,\n    true,\n  ),\n\n  MegaCorp: new FactionInfo(\n    (\n      <>\n        MegaCorp does what no other dares to do. We imagine. We create. We invent. We create what others have never even\n        dreamed of. Our work fills the world's needs for food, water, power, and transporation on an unprecendented\n        scale, in ways that no other company can.\n        <br />\n        <br />\n        In our labs and factories and on the ground with customers, MegaCorp is ushering in a new era for the world.\n      </>\n    ),\n    [],\n    true,\n    true,\n    true,\n    true,\n    true,\n  ),\n\n  \"Bachman & Associates\": new FactionInfo(\n    (\n      <>\n        Where Law and Business meet - thats where we are.\n        <br />\n        <br />\n        Legal Insight - Business Instinct - Innovative Experience.\n      </>\n    ),\n    [],\n    true,\n    true,\n    true,\n    true,\n    true,\n  ),\n\n  \"Blade Industries\": new FactionInfo(<>Augmentation is Salvation.</>, [], true, true, true, true, true),\n\n  NWO: new FactionInfo(\n    (\n      <>\n        Humans don't truly desire freedom. They want to be observed, understood, and judged. They want to be given\n        purpose and direction in life. That is why they created God. And that is why they created civilization - not\n        because of willingness, but because of a need to be incorporated into higher orders of structure and meaning.\n      </>\n    ),\n    [],\n    true,\n    true,\n    true,\n    true,\n    true,\n  ),\n\n  \"Clarke Incorporated\": new FactionInfo(<>The Power of the Genome - Unlocked.</>, [], true, true, true, true, true),\n\n  \"OmniTek Incorporated\": new FactionInfo(\n    <>Simply put, our mission is to design and build robots that make a difference.</>,\n    [],\n    true,\n    true,\n    true,\n    true,\n    true,\n  ),\n\n  \"Four Sigma\": new FactionInfo(\n    (\n      <>\n        The scientific method is the best way to approach investing. Big strategies backed up with big data. Driven by\n        deep learning and innovative ideas. And improved by iteration. That's Four Sigma.\n      </>\n    ),\n    [],\n    true,\n    true,\n    true,\n    true,\n    true,\n  ),\n\n  \"KuaiGong International\": new FactionInfo(<>Dream big. Work hard. Make history.</>, [], true, true, true, true, true),\n\n  // Other Corporations\n  \"Fulcrum Secret Technologies\": new FactionInfo(\n    (\n      <>\n        The human organism has an innate desire to worship. That is why they created gods. If there were no gods, it\n        would be necessary to create them. And now we can.\n      </>\n    ),\n    [],\n    true,\n    true,\n    false,\n    true,\n    true,\n  ),\n\n  // Hacker groups\n  BitRunners: new FactionInfo(\n    (\n      <>\n        Our entire lives are controlled by bits. All of our actions, our thoughts, our personal information. It's all\n        transformed into bits, stored in bits, communicated through bits. It’s impossible for any person to move, to\n        live, to operate at any level without the use of bits. And when a person moves, lives, and operates, they leave\n        behind their bits, mere traces of seemingly meaningless fragments of information. But these bits can be\n        reconstructed. Transformed. Used.\n        <br />\n        <br />\n        Those who run the bits, run the world.\n      </>\n    ),\n    [],\n    true,\n    true,\n    false,\n    false,\n    false,\n  ),\n\n  \"The Black Hand\": new FactionInfo(\n    (\n      <>\n        The world, so afraid of strong government, now has no government. Only power - Digital power. Financial power.\n        Technological power. And those at the top rule with an invisible hand. They built a society where the rich get\n        richer, and everyone else suffers.\n        <br />\n        <br />\n        So much pain. So many lives. Their darkness must end.\n      </>\n    ),\n    [],\n    true,\n    true,\n    true,\n    false,\n    false,\n  ),\n\n  // prettier-ignore\n  NiteSec: new FactionInfo(<>\n{\"                  __..__               \"}<br />\n{\"                _.nITESECNIt.            \"}<br />\n{\"             .-'NITESECNITESEc.          \"}<br />\n{\"           .'    NITESECNITESECn         \"}<br />\n{\"          /       NITESECNITESEC;        \"}<br />\n{\"         :        :NITESECNITESEC;       \"}<br />\n{\"         ;       $ NITESECNITESECN       \"}<br />\n{\"        :    _,   ,N'ITESECNITESEC       \"}<br />\n{\"        : .+^^`,  :    `NITESECNIT       \"}<br />\n{\"         ) /),     `-,-=,NITESECNI       \"}<br />\n{\"        /  ^         ,-;|NITESECN;       \"}<br />\n{\"       /     _.'     '-';NITESECN        \"}<br />\n{\"      (  ,           ,-''`^NITE'         \"}<br />\n{\"       )`            :`.    .'           \"}<br />\n{\"       )--           ;  `- /             \"}<br />\n{\"       '        _.-'     :              \"}<br />\n{\"       (     _.-'   .                  \"}<br />\n{\"        ------.                       \"}<br />\n{\"                .                     \"}<br />\n{\"                         _.nIt          \"}<br />\n{\"                    _.nITESECNi         \"}<br />\n{\"                   nITESECNIT^'         \"}<br />\n{\"                   NITE^' ___           \"}<br />\n{\"                  /    .gP''''Tp.       \"}<br />\n{\"                 :    d'     .  `b      \"}<br />\n{\"                 ;   d'       o  `b ;    \"}<br />\n{\"                /   d;            `b|    \"}<br />\n{\"               /,   $;          @  `:    \"}<br />\n{\"              /'    $$               ;   \"}<br />\n{\"            .'      $$b          o   |   \"}<br />\n{\"          .'       d$$$;             :   \"}<br />\n{\"         /       .d$$$$;          ,   ;  \"}<br />\n{\"        d      .dNITESEC          $   |  \"}<br />\n{\"       :bp.__.gNITESEC$$         :$   ;  \"}<br />\n{\"       NITESECNITESECNIT         $$b :   \"}<br /></>,\n    [],\n    true,\n    true,\n    false,\n    false,\n    false,\n  ),\n\n  // City factions, essentially governments\n  Aevum: new FactionInfo(\n    <>The Silicon City.</>,\n    [\"Chongqing\", \"New Tokyo\", \"Ishima\", \"Volhaven\"],\n    true,\n    true,\n    true,\n    true,\n    false,\n  ),\n  Chongqing: new FactionInfo(<>Serve the People.</>, [\"Sector-12\", \"Aevum\", \"Volhaven\"], true, true, true, true, false),\n  Ishima: new FactionInfo(\n    <>The East Asian Order of the Future.</>,\n    [\"Sector-12\", \"Aevum\", \"Volhaven\"],\n    true,\n    true,\n    true,\n    true,\n    false,\n  ),\n  \"New Tokyo\": new FactionInfo(\n    <>Asia's World City.</>,\n    [\"Sector-12\", \"Aevum\", \"Volhaven\"],\n    true,\n    true,\n    true,\n    true,\n    false,\n  ),\n  \"Sector-12\": new FactionInfo(\n    <>The City of the Future.</>,\n    [\"Chongqing\", \"New Tokyo\", \"Ishima\", \"Volhaven\"],\n    true,\n    true,\n    true,\n    true,\n    false,\n  ),\n  Volhaven: new FactionInfo(\n    <>Benefit, Honor, and Glory.</>,\n    [\"Chongqing\", \"Sector-12\", \"New Tokyo\", \"Aevum\", \"Ishima\"],\n    true,\n    true,\n    true,\n    true,\n    false,\n  ),\n\n  // Criminal Organizations/Gangs\n  \"Speakers for the Dead\": new FactionInfo(\n    <>It is better to reign in Hell than to serve in Heaven.</>,\n    [],\n    true,\n    true,\n    true,\n    true,\n    false,\n  ),\n\n  \"The Dark Army\": new FactionInfo(\n    <>The World doesn't care about right or wrong. It only cares about power.</>,\n    [],\n    true,\n    true,\n    true,\n    false,\n    false,\n  ),\n\n  \"The Syndicate\": new FactionInfo(<>Honor holds you back.</>, [], true, true, true, true, false),\n\n  Silhouette: new FactionInfo(\n    (\n      <>\n        Corporations have filled the void of power left behind by the collapse of Western government. The issue is\n        they've become so big that you don't know who they're working for. And if you're employed at one of these\n        corporations, you don't even know who you're working for.\n        <br />\n        <br />\n        That's terror. Terror, fear, and corruption. All born into the system, all propagated by the system.\n      </>\n    ),\n    [],\n    true,\n    true,\n    true,\n    false,\n    false,\n  ),\n\n  Tetrads: new FactionInfo(\n    <>Following the mandate of Heaven and carrying out the way.</>,\n    [],\n    false,\n    false,\n    true,\n    true,\n    false,\n  ),\n\n  \"Slum Snakes\": new FactionInfo(<>Slum Snakes rule!</>, [], false, false, true, true, false),\n\n  // Earlygame factions - factions the player will prestige with early on that don't belong in other categories.\n  Netburners: new FactionInfo(<>{\"~~//*>H4CK||3T 8URN3R5**>?>\\\\~~\"}</>, [], true, true, false, false, false),\n\n  \"Tian Di Hui\": new FactionInfo(<>Obey Heaven and work righteously.</>, [], true, true, false, true, false),\n\n  CyberSec: new FactionInfo(\n    (\n      <>\n        The Internet is the first thing that was built that we don't fully understand, the largest experiment in anarchy\n        that we have ever had. And as the world becomes increasingly dominated by it, society approaches the brink of\n        total chaos. We serve only to protect society, to protect humanity, to protect the world from imminent collapse.\n      </>\n    ),\n    [],\n    true,\n    true,\n    false,\n    false,\n    false,\n  ),\n\n  // Special Factions\n  Bladeburners: new FactionInfo(\n    (\n      <>\n        It's too bad they won't live. But then again, who does?\n        <br />\n        <br />\n        Note that for this faction, reputation can only be gained through Bladeburner actions. Completing Bladeburner\n        contracts/operations will increase your reputation.\n      </>\n    ),\n    [],\n    false,\n    false,\n    false,\n    false,\n    false,\n  ),\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { Snackbar as S } from \"@mui/material\";\nimport { EventEmitter } from \"../../utils/EventEmitter\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\n\nexport const GameSavedEvents = new EventEmitter<[]>();\n\nexport function Snackbar(): React.ReactElement {\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => GameSavedEvents.subscribe(() => setOpen(true)));\n  return (\n    <S\n      open={open}\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      autoHideDuration={2000}\n      onClose={() => setOpen(false)}\n    >\n      <Paper sx={{ p: 2 }}>\n        <Typography>Game Saved!</Typography>\n      </Paper>\n    </S>\n  );\n}\n","import { Programs } from \"./Programs\";\nimport { Program } from \"./Program\";\n\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\n\n//Returns the programs this player can create.\nexport function getAvailableCreatePrograms(player: IPlayer): Program[] {\n  const programs: Program[] = [];\n  for (const key in Programs) {\n    // Non-creatable program\n    const create = Programs[key].create;\n    if (create == null) continue;\n\n    // Already has program\n    if (player.hasProgram(Programs[key].name)) continue;\n\n    // Does not meet requirements\n    if (!create.req(player)) continue;\n\n    programs.push(Programs[key]);\n  }\n\n  return programs;\n}\n","/**\n * React Component for displaying a single Augmentation as an accordion.\n *\n * The header of the accordion contains the Augmentation's name (and level, if\n * applicable), and the accordion's panel contains the Augmentation's description.\n */\nimport React, { useState } from \"react\";\n\nimport { Augmentation } from \"../../Augmentation/Augmentation\";\nimport { AugmentationNames } from \"../../Augmentation/data/AugmentationNames\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Collapse from \"@mui/material/Collapse\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\n\ntype IProps = {\n  aug: Augmentation;\n  level?: number | string | null;\n};\n\nexport function AugmentationAccordion(props: IProps): React.ReactElement {\n  const [open, setOpen] = useState(false);\n  let displayName = props.aug.name;\n  if (props.level != null) {\n    if (props.aug.name === AugmentationNames.NeuroFluxGovernor) {\n      displayName += ` - Level ${props.level}`;\n    }\n  }\n\n  if (typeof props.aug.info === \"string\") {\n    return (\n      <Box component={Paper}>\n        <ListItemButton onClick={() => setOpen((old) => !old)}>\n          <ListItemText primary={<Typography style={{ whiteSpace: \"pre-wrap\" }}>{displayName}</Typography>} />\n          {open ? <ExpandLess color=\"primary\" /> : <ExpandMore color=\"primary\" />}\n        </ListItemButton>\n        <Collapse in={open} unmountOnExit>\n          <Box m={4}>\n            <Typography dangerouslySetInnerHTML={{ __html: props.aug.info }} />\n            {props.aug.stats && (\n              <>\n                <br />\n                <br />\n                <Typography>{props.aug.stats}</Typography>\n              </>\n            )}\n          </Box>\n        </Collapse>\n      </Box>\n    );\n  }\n\n  return (\n    <Box component={Paper}>\n      <ListItemButton onClick={() => setOpen((old) => !old)}>\n        <ListItemText primary={<Typography style={{ whiteSpace: \"pre-wrap\" }}>{displayName}</Typography>} />\n        {open ? <ExpandLess color=\"primary\" /> : <ExpandMore color=\"primary\" />}\n      </ListItemButton>\n      <Collapse in={open} unmountOnExit>\n        <Box m={4}>\n          <Typography>\n            {props.aug.info}\n            {props.aug.stats && (\n              <>\n                <br />\n                <br />\n                {props.aug.stats}\n              </>\n            )}\n          </Typography>\n        </Box>\n      </Collapse>\n    </Box>\n  );\n}\n","export class PlayerOwnedSourceFile {\n  // Source-File level\n  lvl = 1;\n\n  // Source-File number\n  n = 1;\n\n  constructor(n: number, level: number) {\n    this.n = n;\n    this.lvl = level;\n  }\n}\n\nexport interface IPlayerOwnedSourceFile {\n  lvl: number;\n  n: number;\n}\n","import * as React from \"react\";\n\nexport const stealthIcon = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16px\" height=\"16px\" viewBox=\"0 0 166 132\" style={{ fill: \"#adff2f\" }}>\n    <g>\n      <path d=\"M132.658-0.18l-24.321,24.321c-7.915-2.71-16.342-4.392-25.087-4.392c-45.84,0-83,46-83,46   s14.1,17.44,35.635,30.844L12.32,120.158l12.021,12.021L144.68,11.841L132.658-0.18z M52.033,80.445   c-2.104-4.458-3.283-9.438-3.283-14.695c0-19.054,15.446-34.5,34.5-34.5c5.258,0,10.237,1.179,14.695,3.284L52.033,80.445z\" />\n      <path d=\"M134.865,37.656l-18.482,18.482c0.884,3.052,1.367,6.275,1.367,9.612c0,19.055-15.446,34.5-34.5,34.5   c-3.337,0-6.56-0.483-9.611-1.367l-10.124,10.124c6.326,1.725,12.934,2.743,19.735,2.743c45.84,0,83-46,83-46   S153.987,50.575,134.865,37.656z\" />\n    </g>\n  </svg>\n);\nexport const killIcon = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16px\"\n    height=\"16px\"\n    viewBox=\"-22 0 511 511.99561\"\n    style={{ fill: \"#adff2f\" }}\n  >\n    <path d=\"m.496094 466.242188 39.902344-39.902344 45.753906 45.753906-39.898438 39.902344zm0 0\" />\n    <path d=\"m468.421875 89.832031-1.675781-89.832031-300.265625 300.265625 45.753906 45.753906zm0 0\" />\n    <path d=\"m95.210938 316.785156 16.84375 16.847656h.003906l83.65625 83.65625 22.753906-22.753906-100.503906-100.503906zm0 0\" />\n    <path d=\"m101.445312 365.300781-39.902343 39.902344 45.753906 45.753906 39.902344-39.902343-39.90625-39.902344zm0 0\" />\n  </svg>\n);\n","import React from \"react\";\nimport { IAction } from \"../IAction\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { BladeburnerConstants } from \"../data/Constants\";\nimport { use } from \"../../ui/Context\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\n\ninterface IProps {\n  action: IAction;\n  isActive: boolean;\n  bladeburner: IBladeburner;\n  rerender: () => void;\n}\n\nexport function ActionLevel({ action, isActive, bladeburner, rerender }: IProps): React.ReactElement {\n  const player = use.Player();\n\n  const canIncrease = action.level < action.maxLevel;\n  const canDecrease = action.level > 1;\n\n  function increaseLevel(): void {\n    if (!canIncrease) return;\n    ++action.level;\n    if (isActive) bladeburner.startAction(player, bladeburner.action);\n    rerender();\n  }\n\n  function decreaseLevel(): void {\n    if (!canDecrease) return;\n    --action.level;\n    if (isActive) bladeburner.startAction(player, bladeburner.action);\n    rerender();\n  }\n\n  return (\n    <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n      <Box display=\"flex\">\n        <Tooltip\n          title={\n            <Typography>\n              {action.getSuccessesNeededForNextLevel(BladeburnerConstants.ContractSuccessesPerLevel)} successes needed\n              for next level\n            </Typography>\n          }\n        >\n          <Typography>\n            Level: {action.level} / {action.maxLevel}\n          </Typography>\n        </Tooltip>\n      </Box>\n      <Tooltip title={isActive ? <Typography>WARNING: changing the level will restart the Operation</Typography> : \"\"}>\n        <IconButton disabled={!canIncrease} onClick={increaseLevel}>\n          <ArrowDropUpIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title={isActive ? <Typography>WARNING: changing the level will restart the Operation</Typography> : \"\"}>\n        <IconButton disabled={!canDecrease} onClick={decreaseLevel}>\n          <ArrowDropDownIcon />\n        </IconButton>\n      </Tooltip>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { IAction } from \"../IAction\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Box from \"@mui/material/Box\";\nimport Switch from \"@mui/material/Switch\";\n\ninterface IProps {\n  action: IAction;\n  rerender: () => void;\n}\n\nexport function Autolevel(props: IProps): React.ReactElement {\n  function onAutolevel(event: React.ChangeEvent<HTMLInputElement>): void {\n    props.action.autoLevel = event.target.checked;\n    props.rerender();\n  }\n  return (\n    <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n      <Tooltip title={<Typography>Automatically increase operation level when possible</Typography>}>\n        <Typography> Autolevel:</Typography>\n      </Tooltip>\n      <Switch checked={props.action.autoLevel} onChange={onAutolevel} />\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Operation } from \"../Operation\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { TeamSizeModal } from \"./TeamSizeModal\";\nimport { formatNumber } from \"../../utils/StringHelperFunctions\";\nimport Button from \"@mui/material/Button\";\ninterface IProps {\n  action: Operation;\n  bladeburner: IBladeburner;\n}\nexport function TeamSizeButton(props: IProps): React.ReactElement {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <Button disabled={props.bladeburner.teamSize === 0} onClick={() => setOpen(true)}>\n        Set Team Size (Curr Size: {formatNumber(props.action.teamCount, 0)})\n      </Button>\n      <TeamSizeModal open={open} onClose={() => setOpen(false)} action={props.action} bladeburner={props.bladeburner} />\n    </>\n  );\n}\n","import { ITaskParams, ITerritory } from \"./ITaskParams\";\n\nexport class GangMemberTask {\n  name: string;\n  desc: string;\n\n  isHacking: boolean;\n  isCombat: boolean;\n\n  baseRespect: number;\n  baseWanted: number;\n  baseMoney: number;\n\n  hackWeight: number;\n  strWeight: number;\n  defWeight: number;\n  dexWeight: number;\n  agiWeight: number;\n  chaWeight: number;\n\n  difficulty: number;\n\n  territory: ITerritory;\n\n  // Defines tasks that Gang Members can work on\n  constructor(name: string, desc: string, isHacking: boolean, isCombat: boolean, params: ITaskParams) {\n    this.name = name;\n    this.desc = desc;\n\n    // Flags that describe whether this Task is applicable for Hacking/Combat gangs\n    this.isHacking = isHacking;\n    this.isCombat = isCombat;\n\n    // Base gain rates for respect/wanted/money\n    this.baseRespect = params.baseRespect ? params.baseRespect : 0;\n    this.baseWanted = params.baseWanted ? params.baseWanted : 0;\n    this.baseMoney = params.baseMoney ? params.baseMoney : 0;\n\n    // Weighting for the effect that each stat has on the tasks effectiveness.\n    // Weights must add up to 100\n    this.hackWeight = params.hackWeight ? params.hackWeight : 0;\n    this.strWeight = params.strWeight ? params.strWeight : 0;\n    this.defWeight = params.defWeight ? params.defWeight : 0;\n    this.dexWeight = params.dexWeight ? params.dexWeight : 0;\n    this.agiWeight = params.agiWeight ? params.agiWeight : 0;\n    this.chaWeight = params.chaWeight ? params.chaWeight : 0;\n\n    if (\n      Math.round(\n        this.hackWeight + this.strWeight + this.defWeight + this.dexWeight + this.agiWeight + this.chaWeight,\n      ) != 100\n    ) {\n      console.error(`GangMemberTask ${this.name} weights do not add up to 100`);\n    }\n\n    // 1 - 100\n    this.difficulty = params.difficulty ? params.difficulty : 1;\n\n    // Territory Factors. Exponential factors that dictate how territory affects gains\n    // Formula: Territory Mutiplier = (Territory * 100) ^ factor / 100\n    // So factor should be > 1 if something should scale exponentially with territory\n    // and should be < 1 if it should have diminshing returns\n    this.territory = params.territory ? params.territory : { money: 1, respect: 1, wanted: 1 };\n  }\n}\n","import React from \"react\";\nimport { Modal } from \"./Modal\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  children: JSX.Element[] | JSX.Element | React.ReactElement[] | React.ReactElement;\n}\n\nexport function StaticModal(props: IProps): React.ReactElement {\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      {props.children}\n    </Modal>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport function BlinkingCursor(): React.ReactElement {\n  const [on, setOn] = useState(true);\n  useEffect(() => {\n    const i = setInterval(() => setOn((old) => !old), 1000);\n    return () => clearInterval(i);\n  });\n  return <>{on ? \"|\" : \"\"}</>;\n}\n","/**\n * Implements the Re-sleeving mechanic for BitNode-10.\n * This allows the player to purchase and \"use\" new sleeves at VitaLife.\n * These new sleeves come with different starting experience and Augmentations\n * The cost of these new sleeves scales based on the exp and Augs.\n *\n * Note that this is different from the \"Sleeve mechanic\". The \"Sleeve\" mechanic\n * provides new sleeves, essentially clones. This Re-sleeving mechanic lets\n * the player purchase a new body with pre-existing Augmentations and experience\n *\n * As of right now, this feature is only available in BitNode 10\n */\nimport { Resleeve } from \"./Resleeve\";\nimport { IPlayer } from \"../IPlayer\";\n\nimport { Augmentation } from \"../../Augmentation/Augmentation\";\nimport { Augmentations } from \"../../Augmentation/Augmentations\";\nimport { IPlayerOwnedAugmentation, PlayerOwnedAugmentation } from \"../../Augmentation/PlayerOwnedAugmentation\";\nimport { AugmentationNames } from \"../../Augmentation/data/AugmentationNames\";\n\nimport { getRandomInt } from \"../../utils/helpers/getRandomInt\";\n\n// Executes the actual re-sleeve when one is purchased\nexport function purchaseResleeve(r: Resleeve, p: IPlayer): boolean {\n  const cost: number = r.getCost();\n  if (!p.canAfford(cost)) {\n    return false;\n  }\n  p.loseMoney(cost);\n\n  // Set the player's exp\n  p.hacking_exp = r.hacking_exp;\n  p.strength_exp = r.strength_exp;\n  p.defense_exp = r.defense_exp;\n  p.dexterity_exp = r.dexterity_exp;\n  p.agility_exp = r.agility_exp;\n  p.charisma_exp = r.charisma_exp;\n\n  // Reset Augmentation \"owned\" data\n  for (const augKey in Augmentations) {\n    Augmentations[augKey].owned = false;\n  }\n\n  // Clear all of the player's augmentations, except the NeuroFlux Governor\n  // which is kept\n  for (let i = p.augmentations.length - 1; i >= 0; --i) {\n    if (p.augmentations[i].name !== AugmentationNames.NeuroFluxGovernor) {\n      p.augmentations.splice(i, 1);\n    } else {\n      // NeuroFlux Governor\n      Augmentations[AugmentationNames.NeuroFluxGovernor].owned = true;\n    }\n  }\n\n  for (let i = 0; i < r.augmentations.length; ++i) {\n    p.augmentations.push(new PlayerOwnedAugmentation(r.augmentations[i].name));\n    Augmentations[r.augmentations[i].name].owned = true;\n  }\n\n  // The player's purchased Augmentations should remain the same, but any purchased\n  // Augmentations that are given by the resleeve should be removed so there are no duplicates\n  for (let i = p.queuedAugmentations.length - 1; i >= 0; --i) {\n    const name: string = p.queuedAugmentations[i].name;\n\n    if (\n      p.augmentations.filter((e: IPlayerOwnedAugmentation) => {\n        return e.name !== AugmentationNames.NeuroFluxGovernor && e.name === name;\n      }).length >= 1\n    ) {\n      p.queuedAugmentations.splice(i, 1);\n    }\n  }\n\n  p.reapplyAllAugmentations(true);\n  p.reapplyAllSourceFiles(); //Multipliers get reset, so have to re-process source files too\n  return true;\n}\n\n// Creates all of the Re-sleeves that will be available for purchase at VitaLife\nexport function generateResleeves(): Resleeve[] {\n  const NumResleeves = 40; // Total number of Resleeves to generate\n\n  const ret: Resleeve[] = [];\n  for (let i = 0; i < NumResleeves; ++i) {\n    // i will be a number indicating how \"powerful\" the Re-sleeve should be\n    const r: Resleeve = new Resleeve();\n\n    // Generate experience\n    const expMult: number = 5 * i + 1;\n    r.hacking_exp = expMult * getRandomInt(1000, 5000);\n    r.strength_exp = expMult * getRandomInt(1000, 5000);\n    r.defense_exp = expMult * getRandomInt(1000, 5000);\n    r.dexterity_exp = expMult * getRandomInt(1000, 5000);\n    r.agility_exp = expMult * getRandomInt(1000, 5000);\n    r.charisma_exp = expMult * getRandomInt(1000, 5000);\n\n    // Generate Augs\n    // Augmentation prequisites will be ignored for this\n    const baseNumAugs: number = Math.max(2, Math.ceil((i + 3) / 2));\n    const numAugs: number = getRandomInt(baseNumAugs, baseNumAugs + 2);\n    const augKeys: string[] = Object.keys(Augmentations);\n    for (let a = 0; a < numAugs; ++a) {\n      // Get a random aug\n      const randIndex: number = getRandomInt(0, augKeys.length - 1);\n      const randKey: string = augKeys[randIndex];\n\n      // Forbidden augmentations\n      if (randKey === AugmentationNames.TheRedPill || randKey === AugmentationNames.NeuroFluxGovernor) {\n        continue;\n      }\n\n      const randAug: Augmentation | null = Augmentations[randKey];\n      if (randAug === null) throw new Error(`null augmentation: ${randKey}`);\n      r.augmentations.push({ name: randAug.name, level: 1 });\n      r.applyAugmentation(Augmentations[randKey]);\n      r.updateStatLevels();\n\n      // Remove Augmentation so that there are no duplicates\n      augKeys.splice(randIndex, 1);\n    }\n\n    ret.push(r);\n  }\n\n  return ret;\n}\n","import { Sleeve } from \"./Sleeve\";\n\nimport { IPlayer } from \"../IPlayer\";\n\nimport { Augmentation } from \"../../Augmentation/Augmentation\";\nimport { Augmentations } from \"../../Augmentation/Augmentations\";\nimport { AugmentationNames } from \"../../Augmentation/data/AugmentationNames\";\nimport { Faction } from \"../../Faction/Faction\";\nimport { Factions } from \"../../Faction/Factions\";\n\nexport function findSleevePurchasableAugs(sleeve: Sleeve, p: IPlayer): Augmentation[] {\n  // You can only purchase Augmentations that are actually available from\n  // your factions. I.e. you must be in a faction that has the Augmentation\n  // and you must also have enough rep in that faction in order to purchase it.\n\n  const ownedAugNames: string[] = sleeve.augmentations.map((e) => {\n    return e.name;\n  });\n  const availableAugs: Augmentation[] = [];\n\n  // Helper function that helps filter out augs that are already owned\n  // and augs that aren't allowed for sleeves\n  function isAvailableForSleeve(aug: Augmentation): boolean {\n    if (aug.name === AugmentationNames.NeuroFluxGovernor) {\n      return false;\n    }\n    if (ownedAugNames.includes(aug.name)) {\n      return false;\n    }\n    if (availableAugs.includes(aug)) {\n      return false;\n    }\n    if (aug.isSpecial) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // If player is in a gang, then we return all augs that the player\n  // has enough reputation for (since that gang offers all augs)\n  if (p.inGang()) {\n    const fac = p.getGangFaction();\n\n    for (const augName in Augmentations) {\n      const aug = Augmentations[augName];\n      if (!isAvailableForSleeve(aug)) {\n        continue;\n      }\n\n      if (fac.playerReputation > aug.baseRepRequirement) {\n        availableAugs.push(aug);\n      }\n    }\n\n    return availableAugs;\n  }\n\n  for (const facName of p.factions) {\n    if (facName === \"Bladeburners\") {\n      continue;\n    }\n    if (facName === \"Netburners\") {\n      continue;\n    }\n    const fac: Faction | null = Factions[facName];\n    if (fac == null) {\n      continue;\n    }\n\n    for (const augName of fac.augmentations) {\n      const aug: Augmentation = Augmentations[augName];\n      if (!isAvailableForSleeve(aug)) {\n        continue;\n      }\n\n      if (fac.playerReputation > aug.baseRepRequirement) {\n        availableAugs.push(aug);\n      }\n    }\n  }\n\n  return availableAugs;\n}\n","import React from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Hashes } from \"../../ui/React/Hashes\";\n\nexport function HashRate({ hashes }: { hashes: number }): React.ReactElement {\n  return <Hashes hashes={`${numeralWrapper.formatHashes(hashes)} / sec`} />;\n}\n","/**\n * React Subcomponent for displaying a location's UI, when that location is a Travel Agency\n *\n * TThis subcomponent renders all of the buttons for traveling to different cities\n */\nimport React, { useState, useEffect } from \"react\";\n\nimport { CityName } from \"../data/CityNames\";\nimport { TravelConfirmationModal } from \"./TravelConfirmationModal\";\n\nimport { CONSTANTS } from \"../../Constants\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { IRouter } from \"../../ui/Router\";\nimport { Settings } from \"../../Settings/Settings\";\n\nimport { use } from \"../../ui/Context\";\nimport { Money } from \"../../ui/React/Money\";\nimport { WorldMap } from \"../../ui/React/WorldMap\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\n\ntype IProps = {\n  p: IPlayer;\n  router: IRouter;\n};\n\nfunction travel(p: IPlayer, router: IRouter, to: CityName): void {\n  const cost = CONSTANTS.TravelCost;\n  if (!p.canAfford(cost)) {\n    return;\n  }\n\n  p.loseMoney(cost);\n  p.travel(to);\n  dialogBoxCreate(<>You are now in {to}!</>);\n  router.toCity();\n}\n\nexport function TravelAgencyRoot(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const router = use.Router();\n  const setRerender = useState(false)[1];\n  const [open, setOpen] = useState(false);\n  const [destination, setDestination] = useState(CityName.Sector12);\n  function rerender(): void {\n    setRerender((o) => !o);\n  }\n\n  useEffect(() => {\n    const id = setInterval(rerender, 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  function startTravel(city: CityName): void {\n    const cost = CONSTANTS.TravelCost;\n    if (!player.canAfford(cost)) {\n      return;\n    }\n    if (Settings.SuppressTravelConfirmation) {\n      travel(player, router, city);\n      return;\n    }\n    setOpen(true);\n    setDestination(city);\n  }\n\n  return (\n    <>\n      <Typography variant=\"h4\">Travel Agency</Typography>\n      <Box mx={2}>\n        <Typography>\n          From here, you can travel to any other city! A ticket costs{\" \"}\n          <Money money={CONSTANTS.TravelCost} player={props.p} />.\n        </Typography>\n        {Settings.DisableASCIIArt ? (\n          <>\n            {Object.values(CityName)\n              .filter((city: string) => city != props.p.city)\n              .map((city: string) => {\n                const match = Object.entries(CityName).find((entry) => entry[1] === city);\n                if (match === undefined) throw new Error(`could not find key for city '${city}'`);\n                return (\n                  <React.Fragment key={city}>\n                    <Button onClick={() => startTravel(city as CityName)} sx={{ m: 2 }}>\n                      <Typography>Travel to {city}</Typography>\n                    </Button>\n                    <br />\n                  </React.Fragment>\n                );\n              })}\n          </>\n        ) : (\n          <WorldMap currentCity={props.p.city} onTravel={(city: CityName) => startTravel(city)} />\n        )}\n      </Box>\n      <TravelConfirmationModal\n        city={destination}\n        travel={() => travel(player, router, destination)}\n        open={open}\n        onClose={() => setOpen(false)}\n      />\n    </>\n  );\n}\n","import * as acorn from \"acorn\";\n/**\n * @license\n * JavaScript Interpreter\n *\n * Copyright 2013 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Interpreting JavaScript in JavaScript.\n * @author fraser@google.com (Neil Fraser)\n */\n(\"use strict\");\n\n/**\n * Create a new interpreter.\n * @param {string|!Object} code Raw JavaScript text or AST.\n * @param {Function=} opt_initFunc Optional initialization function.  Used to\n *     define APIs.  When called it is passed the interpreter object and the\n *     global scope object.\n * @param {Number} Bitburner-specific number used for determining exception line numbers\n * @constructor\n */\nvar Interpreter = function (code, opt_initFunc, lineOffset = 0) {\n  this.sourceCode = code;\n  this.sourceCodeLineOffset = lineOffset;\n  if (typeof code === \"string\") {\n    code = acorn.parse(code, Interpreter.PARSE_OPTIONS);\n  }\n  this.ast = code;\n  this.initFunc_ = opt_initFunc;\n  this.paused_ = false;\n  this.polyfills_ = [];\n  // Unique identifier for native functions.  Used in serialization.\n  this.functionCounter_ = 0;\n  // Map node types to our step function names; a property lookup is faster\n  // than string concatenation with \"step\" prefix.\n  this.stepFunctions_ = Object.create(null);\n  var stepMatch = /^step([A-Z]\\w*)$/;\n  var m;\n  for (var methodName in this) {\n    if (typeof this[methodName] === \"function\" && (m = methodName.match(stepMatch))) {\n      this.stepFunctions_[m[1]] = this[methodName].bind(this);\n    }\n  }\n  // Create and initialize the global scope.\n  this.global = this.createScope(this.ast, null);\n  // Run the polyfills.\n  this.ast = acorn.parse(this.polyfills_.join(\"\\n\"), Interpreter.PARSE_OPTIONS);\n  this.polyfills_ = undefined; // Allow polyfill strings to garbage collect.\n  this.stripLocations_(this.ast, undefined, undefined);\n  var state = new Interpreter.State(this.ast, this.global);\n  state.done = false;\n  this.stateStack = [state];\n  this.run();\n  this.value = undefined;\n  // Point at the main program.\n  this.ast = code;\n  var state = new Interpreter.State(this.ast, this.global);\n  state.done = false;\n  this.stateStack.length = 0;\n  this.stateStack[0] = state;\n  // Get a handle on Acorn's node_t object.  It's tricky to access.\n  this.nodeConstructor = state.node.constructor;\n  // Preserve publicly properties from being pruned/renamed by JS compilers.\n  // Add others as needed.\n  this[\"stateStack\"] = this.stateStack;\n};\n\n/**\n * @const {!Object} Configuration used for all Acorn parsing.\n */\nInterpreter.PARSE_OPTIONS = {\n  ecmaVersion: 5,\n  locations: true,\n};\n\n/**\n * Property descriptor of readonly properties.\n */\nInterpreter.READONLY_DESCRIPTOR = {\n  configurable: true,\n  enumerable: true,\n  writable: false,\n};\n\n/**\n * Property descriptor of non-enumerable properties.\n */\nInterpreter.NONENUMERABLE_DESCRIPTOR = {\n  configurable: true,\n  enumerable: false,\n  writable: true,\n};\n\n/**\n * Property descriptor of readonly, non-enumerable properties.\n */\nInterpreter.READONLY_NONENUMERABLE_DESCRIPTOR = {\n  configurable: true,\n  enumerable: false,\n  writable: false,\n};\n\n/**\n * Property descriptor of variables.\n */\nInterpreter.VARIABLE_DESCRIPTOR = {\n  configurable: false,\n  enumerable: true,\n  writable: true,\n};\n\n/**\n * Unique symbol for indicating that a step has encountered an error, has\n * added it to the stack, and will be thrown within the user's program.\n * When STEP_ERROR is thrown in the JS-Interpreter, the error can be ignored.\n */\nInterpreter.STEP_ERROR = {};\n\n/**\n * Unique symbol for indicating that a reference is a variable on the scope,\n * not an object property.\n */\nInterpreter.SCOPE_REFERENCE = {};\n\n/**\n * Unique symbol for indicating, when used as the value of the value\n * parameter in calls to setProperty and friends, that the value\n * should be taken from the property descriptor instead.\n */\nInterpreter.VALUE_IN_DESCRIPTOR = {};\n\n/**\n * For cycle detection in array to string and error conversion;\n * see spec bug github.com/tc39/ecma262/issues/289\n * Since this is for atomic actions only, it can be a class property.\n */\nInterpreter.toStringCycles_ = [];\n\n/**\n * Determine error/exception line number in Bitburner source code\n * @param {Object} AST Node that causes Error/Exception\n */\nInterpreter.prototype.getErrorLineNumber = function (node) {\n  var code = this.sourceCode;\n  if (node == null || node.start == null) {\n    return NaN;\n  }\n  try {\n    code = code.substring(0, node.start);\n    return (code.match(/\\n/g) || []).length + 1 - this.sourceCodeLineOffset;\n  } catch (e) {\n    return NaN;\n  }\n};\n\n/**\n * Generate the appropriate line number error message for Bitburner\n * @param {Number} lineNumber\n */\nInterpreter.prototype.getErrorLineNumberMessage = function (lineNumber) {\n  if (isNaN(lineNumber)) {\n    return \" (Unknown line number)\";\n  } else if (lineNumber <= 0) {\n    return \" (Error occurred in an imported function)\";\n  } else {\n    return (\n      \" (Line Number \" +\n      lineNumber +\n      \". This line number is probably incorrect \" +\n      \"if your script is importing any functions. This is being worked on)\"\n    );\n  }\n};\n\n/**\n * Add more code to the interpreter.\n * @param {string|!Object} code Raw JavaScript text or AST.\n */\nInterpreter.prototype.appendCode = function (code) {\n  var state = this.stateStack[0];\n  if (!state || state.node[\"type\"] !== \"Program\") {\n    throw Error(\"Expecting original AST to start with a Program node.\");\n  }\n  if (typeof code === \"string\") {\n    code = acorn.parse(code, Interpreter.PARSE_OPTIONS);\n  }\n  if (!code || code[\"type\"] !== \"Program\") {\n    throw Error(\"Expecting new AST to start with a Program node.\");\n  }\n  this.populateScope_(code, state.scope);\n  // Append the new program to the old one.\n  for (var i = 0, node; (node = code[\"body\"][i]); i++) {\n    state.node[\"body\"].push(node);\n  }\n  state.done = false;\n};\n\n/**\n * Execute one step of the interpreter.\n * @return {boolean} True if a step was executed, false if no more instructions.\n */\nInterpreter.prototype.step = function () {\n  var stack = this.stateStack;\n  var state = stack[stack.length - 1];\n  if (!state) {\n    return false;\n  }\n  var node = state.node,\n    type = node[\"type\"];\n  if (type === \"Program\" && state.done) {\n    return false;\n  } else if (this.paused_) {\n    return true;\n  }\n  try {\n    var nextState = this.stepFunctions_[type](stack, state, node);\n  } catch (e) {\n    // Eat any step errors.  They have been thrown on the stack.\n    if (e !== Interpreter.STEP_ERROR) {\n      // Uh oh.  This is a real error in the JS-Interpreter.  Rethrow.\n      throw e;\n    }\n  }\n  if (nextState) {\n    stack.push(nextState);\n  }\n  if (!node[\"end\"]) {\n    // This is polyfill code.  Keep executing until we arrive at user code.\n    return this.step();\n  }\n  return true;\n};\n\n/**\n * Execute the interpreter to program completion.  Vulnerable to infinite loops.\n * @return {boolean} True if a execution is asynchronously blocked,\n *     false if no more instructions.\n */\nInterpreter.prototype.run = function () {\n  while (!this.paused_ && this.step()) {}\n  return this.paused_;\n};\n\n/**\n * Initialize the global scope with buitin properties and functions.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initGlobalScope = function (scope) {\n  // Initialize uneditable global properties.\n  this.setProperty(scope, \"NaN\", NaN, Interpreter.READONLY_DESCRIPTOR);\n  this.setProperty(scope, \"Infinity\", Infinity, Interpreter.READONLY_DESCRIPTOR);\n  this.setProperty(scope, \"undefined\", undefined, Interpreter.READONLY_DESCRIPTOR);\n  this.setProperty(scope, \"window\", scope, Interpreter.READONLY_DESCRIPTOR);\n  this.setProperty(scope, \"this\", scope, Interpreter.READONLY_DESCRIPTOR);\n  this.setProperty(scope, \"self\", scope); // Editable.\n\n  // Create the objects which will become Object.prototype and\n  // Function.prototype, which are needed to bootstrap everything else.\n  this.OBJECT_PROTO = new Interpreter.Object(null);\n  this.FUNCTION_PROTO = new Interpreter.Object(this.OBJECT_PROTO);\n  // Initialize global objects.\n  this.initFunction(scope);\n  this.initObject(scope);\n  // Unable to set scope's parent prior (OBJECT did not exist).\n  // Note that in a browser this would be 'Window', whereas in Node.js it would\n  // be 'Object'.  This interpreter is closer to Node in that it has no DOM.\n  scope.proto = this.OBJECT_PROTO;\n  this.setProperty(scope, \"constructor\", this.OBJECT, Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.initArray(scope);\n  this.initString(scope);\n  this.initBoolean(scope);\n  this.initNumber(scope);\n  this.initDate(scope);\n  this.initRegExp(scope);\n  this.initError(scope);\n  this.initMath(scope);\n  this.initJSON(scope);\n\n  // Initialize global functions.\n  var thisInterpreter = this;\n  var func = this.createNativeFunction(function (x) {\n    throw EvalError(\"Can't happen\");\n  }, false);\n  func.eval = true;\n  this.setProperty(scope, \"eval\", func);\n\n  this.setProperty(scope, \"parseInt\", this.createNativeFunction(parseInt, false));\n  this.setProperty(scope, \"parseFloat\", this.createNativeFunction(parseFloat, false));\n\n  this.setProperty(scope, \"isNaN\", this.createNativeFunction(isNaN, false));\n\n  this.setProperty(scope, \"isFinite\", this.createNativeFunction(isFinite, false));\n\n  var strFunctions = [\n    [escape, \"escape\"],\n    [unescape, \"unescape\"],\n    [decodeURI, \"decodeURI\"],\n    [decodeURIComponent, \"decodeURIComponent\"],\n    [encodeURI, \"encodeURI\"],\n    [encodeURIComponent, \"encodeURIComponent\"],\n  ];\n  for (var i = 0; i < strFunctions.length; i++) {\n    var wrapper = (function (nativeFunc) {\n      return function (str) {\n        try {\n          return nativeFunc(str);\n        } catch (e) {\n          // decodeURI('%xy') will throw an error.  Catch and rethrow.\n          thisInterpreter.throwException(thisInterpreter.URI_ERROR, e.message);\n        }\n      };\n    })(strFunctions[i][0]);\n    this.setProperty(\n      scope,\n      strFunctions[i][1],\n      this.createNativeFunction(wrapper, false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR,\n    );\n  }\n  // Preserve publicly properties from being pruned/renamed by JS compilers.\n  // Add others as needed.\n  this[\"OBJECT\"] = this.OBJECT;\n  this[\"OBJECT_PROTO\"] = this.OBJECT_PROTO;\n  this[\"FUNCTION\"] = this.FUNCTION;\n  this[\"FUNCTION_PROTO\"] = this.FUNCTION_PROTO;\n  this[\"ARRAY\"] = this.ARRAY;\n  this[\"ARRAY_PROTO\"] = this.ARRAY_PROTO;\n  this[\"REGEXP\"] = this.REGEXP;\n  this[\"REGEXP_PROTO\"] = this.REGEXP_PROTO;\n  this[\"DATE\"] = this.DATE;\n  this[\"DATE_PROTO\"] = this.DATE_PROTO;\n  // The following properties are obsolete.  Do not use.\n  this[\"UNDEFINED\"] = undefined;\n  this[\"NULL\"] = null;\n  this[\"NAN\"] = NaN;\n  this[\"TRUE\"] = true;\n  this[\"FALSE\"] = false;\n  this[\"STRING_EMPTY\"] = \"\";\n  this[\"NUMBER_ZERO\"] = 0;\n  this[\"NUMBER_ONE\"] = 1;\n\n  // Run any user-provided initialization.\n  if (this.initFunc_) {\n    this.initFunc_(this, scope);\n  }\n};\n\n/**\n * Initialize the Function class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initFunction = function (scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  var identifierRegexp = /^[A-Za-z_$][\\w$]*$/;\n  // Function constructor.\n  wrapper = function (var_args) {\n    if (thisInterpreter.calledWithNew()) {\n      // Called as new Function().\n      var newFunc = this;\n    } else {\n      // Called as Function().\n      var newFunc = thisInterpreter.createObjectProto(thisInterpreter.FUNCTION_PROTO);\n    }\n    if (arguments.length) {\n      var code = String(arguments[arguments.length - 1]);\n    } else {\n      var code = \"\";\n    }\n    var argsStr = Array.prototype.slice.call(arguments, 0, -1).join(\",\").trim();\n    if (argsStr) {\n      var args = argsStr.split(/\\s*,\\s*/);\n      for (var i = 0; i < args.length; i++) {\n        var name = args[i];\n        if (!identifierRegexp.test(name)) {\n          thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR, \"Invalid function argument: \" + name);\n        }\n      }\n      argsStr = args.join(\", \");\n    }\n    // Interestingly, the scope for constructed functions is the global scope,\n    // even if they were constructed in some other scope.\n    newFunc.parentScope = thisInterpreter.global;\n    // Acorn needs to parse code in the context of a function or else 'return'\n    // statements will be syntax errors.\n    try {\n      var ast = acorn.parse(\"(function(\" + argsStr + \") {\" + code + \"})\", Interpreter.PARSE_OPTIONS);\n    } catch (e) {\n      // Acorn threw a SyntaxError.  Rethrow as a trappable error.\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR, \"Invalid code: \" + e.message);\n    }\n    if (ast[\"body\"].length !== 1) {\n      // Function('a', 'return a + 6;}; {alert(1);');\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR, \"Invalid code in function body.\");\n    }\n    newFunc.node = ast[\"body\"][0][\"expression\"];\n    thisInterpreter.setProperty(newFunc, \"length\", newFunc.node[\"length\"], Interpreter.READONLY_DESCRIPTOR);\n    return newFunc;\n  };\n  wrapper.id = this.functionCounter_++;\n  this.FUNCTION = this.createObjectProto(this.FUNCTION_PROTO);\n\n  this.setProperty(scope, \"Function\", this.FUNCTION);\n  // Manually setup type and prototype because createObj doesn't recognize\n  // this object as a function (this.FUNCTION did not exist).\n  this.setProperty(this.FUNCTION, \"prototype\", this.FUNCTION_PROTO);\n  this.FUNCTION.nativeFunc = wrapper;\n\n  // Configure Function.prototype.\n  this.setProperty(this.FUNCTION_PROTO, \"constructor\", this.FUNCTION, Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.FUNCTION_PROTO.nativeFunc = function () {};\n  this.FUNCTION_PROTO.nativeFunc.id = this.functionCounter_++;\n  this.setProperty(this.FUNCTION_PROTO, \"length\", 0, Interpreter.READONLY_DESCRIPTOR);\n\n  var boxThis = function (value) {\n    // In non-strict mode 'this' must be an object.\n    if ((!value || !value.isObject) && !thisInterpreter.getScope().strict) {\n      if (value === undefined || value === null) {\n        // 'Undefined' and 'null' are changed to global object.\n        value = thisInterpreter.global;\n      } else {\n        // Primitives must be boxed in non-strict mode.\n        var box = thisInterpreter.createObjectProto(thisInterpreter.getPrototype(value));\n        box.data = value;\n        value = box;\n      }\n    }\n    return value;\n  };\n\n  wrapper = function (thisArg, args) {\n    var state = thisInterpreter.stateStack[thisInterpreter.stateStack.length - 1];\n    // Rewrite the current 'CallExpression' to apply a different function.\n    state.func_ = this;\n    // Assign the 'this' object.\n    state.funcThis_ = boxThis(thisArg);\n    // Bind any provided arguments.\n    state.arguments_ = [];\n    if (args !== null && args !== undefined) {\n      if (args.isObject) {\n        state.arguments_ = thisInterpreter.arrayPseudoToNative(args);\n      } else {\n        thisInterpreter.throwException(thisInterpreter.TYPE_ERROR, \"CreateListFromArrayLike called on non-object\");\n      }\n    }\n    state.doneExec_ = false;\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, \"apply\", wrapper);\n\n  wrapper = function (thisArg /*, var_args */) {\n    var state = thisInterpreter.stateStack[thisInterpreter.stateStack.length - 1];\n    // Rewrite the current 'CallExpression' to call a different function.\n    state.func_ = this;\n    // Assign the 'this' object.\n    state.funcThis_ = boxThis(thisArg);\n    // Bind any provided arguments.\n    state.arguments_ = [];\n    for (var i = 1; i < arguments.length; i++) {\n      state.arguments_.push(arguments[i]);\n    }\n    state.doneExec_ = false;\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, \"call\", wrapper);\n\n  this.polyfills_.push(\n    // Polyfill copied from:\n    // developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bind\n    \"Object.defineProperty(Function.prototype, 'bind',\",\n    \"{configurable: true, writable: true, value:\",\n    \"function(oThis) {\",\n    \"if (typeof this !== 'function') {\",\n    \"throw TypeError('What is trying to be bound is not callable');\",\n    \"}\",\n    \"var aArgs   = Array.prototype.slice.call(arguments, 1),\",\n    \"fToBind = this,\",\n    \"fNOP    = function() {},\",\n    \"fBound  = function() {\",\n    \"return fToBind.apply(this instanceof fNOP\",\n    \"? this\",\n    \": oThis,\",\n    \"aArgs.concat(Array.prototype.slice.call(arguments)));\",\n    \"};\",\n    \"if (this.prototype) {\",\n    \"fNOP.prototype = this.prototype;\",\n    \"}\",\n    \"fBound.prototype = new fNOP();\",\n    \"return fBound;\",\n    \"}\",\n    \"});\",\n    \"\",\n  );\n\n  // Function has no parent to inherit from, so it needs its own mandatory\n  // toString and valueOf functions.\n  wrapper = function () {\n    return this.toString();\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, \"toString\", wrapper);\n  this.setProperty(\n    this.FUNCTION,\n    \"toString\",\n    this.createNativeFunction(wrapper, false),\n    Interpreter.NONENUMERABLE_DESCRIPTOR,\n  );\n  wrapper = function () {\n    return this.valueOf();\n  };\n  this.setNativeFunctionPrototype(this.FUNCTION, \"valueOf\", wrapper);\n  this.setProperty(\n    this.FUNCTION,\n    \"valueOf\",\n    this.createNativeFunction(wrapper, false),\n    Interpreter.NONENUMERABLE_DESCRIPTOR,\n  );\n};\n\n/**\n * Initialize the Object class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initObject = function (scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Object constructor.\n  wrapper = function (value) {\n    if (value === undefined || value === null) {\n      // Create a new object.\n      if (thisInterpreter.calledWithNew()) {\n        // Called as new Object().\n        return this;\n      } else {\n        // Called as Object().\n        return thisInterpreter.createObjectProto(thisInterpreter.OBJECT_PROTO);\n      }\n    }\n    if (!value.isObject) {\n      // Wrap the value as an object.\n      var box = thisInterpreter.createObjectProto(thisInterpreter.getPrototype(value));\n      box.data = value;\n      return box;\n    }\n    // Return the provided object.\n    return value;\n  };\n  this.OBJECT = this.createNativeFunction(wrapper, true);\n  // Throw away the created prototype and use the root prototype.\n  this.setProperty(this.OBJECT, \"prototype\", this.OBJECT_PROTO);\n  this.setProperty(this.OBJECT_PROTO, \"constructor\", this.OBJECT, Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(scope, \"Object\", this.OBJECT);\n\n  /**\n   * Checks if the provided value is null or undefined.\n   * If so, then throw an error in the call stack.\n   * @param {Interpreter.Value} value Value to check.\n   */\n  var throwIfNullUndefined = function (value) {\n    if (value === undefined || value === null) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR, \"Cannot convert '\" + value + \"' to object\");\n    }\n  };\n\n  // Static methods on Object.\n  wrapper = function (obj) {\n    throwIfNullUndefined(obj);\n    var props = obj.isObject ? obj.properties : obj;\n    return thisInterpreter.arrayNativeToPseudo(Object.getOwnPropertyNames(props));\n  };\n  this.setProperty(\n    this.OBJECT,\n    \"getOwnPropertyNames\",\n    this.createNativeFunction(wrapper, false),\n    Interpreter.NONENUMERABLE_DESCRIPTOR,\n  );\n\n  wrapper = function (obj) {\n    throwIfNullUndefined(obj);\n    if (obj.isObject) {\n      obj = obj.properties;\n    }\n    return thisInterpreter.arrayNativeToPseudo(Object.keys(obj));\n  };\n  this.setProperty(\n    this.OBJECT,\n    \"keys\",\n    this.createNativeFunction(wrapper, false),\n    Interpreter.NONENUMERABLE_DESCRIPTOR,\n  );\n\n  wrapper = function (proto) {\n    // Support for the second argument is the responsibility of a polyfill.\n    if (proto === null) {\n      return thisInterpreter.createObjectProto(null);\n    }\n    if (proto === undefined || !proto.isObject) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR, \"Object prototype may only be an Object or null\");\n    }\n    return thisInterpreter.createObjectProto(proto);\n  };\n  this.setProperty(\n    this.OBJECT,\n    \"create\",\n    this.createNativeFunction(wrapper, false),\n    Interpreter.NONENUMERABLE_DESCRIPTOR,\n  );\n\n  // Add a polyfill to handle create's second argument.\n  this.polyfills_.push(\n    \"(function() {\",\n    \"var create_ = Object.create;\",\n    \"Object.create = function(proto, props) {\",\n    \"var obj = create_(proto);\",\n    \"props && Object.defineProperties(obj, props);\",\n    \"return obj;\",\n    \"};\",\n    \"})();\",\n    \"\",\n  );\n\n  wrapper = function (obj, prop, descriptor) {\n    prop = String(prop);\n    if (!obj || !obj.isObject) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR, \"Object.defineProperty called on non-object\");\n    }\n    if (!descriptor || !descriptor.isObject) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR, \"Property description must be an object\");\n    }\n    if (!obj.properties[prop] && obj.preventExtensions) {\n      thisInterpreter.throwException(\n        thisInterpreter.TYPE_ERROR,\n        \"Can't define property '\" + prop + \"', object is not extensible\",\n      );\n    }\n    // The polyfill guarantees no inheritance and no getter functions.\n    // Therefore the descriptor properties map is the native object needed.\n    thisInterpreter.setProperty(obj, prop, Interpreter.VALUE_IN_DESCRIPTOR, descriptor.properties);\n    return obj;\n  };\n  this.setProperty(\n    this.OBJECT,\n    \"defineProperty\",\n    this.createNativeFunction(wrapper, false),\n    Interpreter.NONENUMERABLE_DESCRIPTOR,\n  );\n\n  this.polyfills_.push(\n    // Flatten the descriptor to remove any inheritance or getter functions.\n    \"(function() {\",\n    \"var defineProperty_ = Object.defineProperty;\",\n    \"Object.defineProperty = function(obj, prop, d1) {\",\n    \"var d2 = {};\",\n    \"if ('configurable' in d1) d2.configurable = d1.configurable;\",\n    \"if ('enumerable' in d1) d2.enumerable = d1.enumerable;\",\n    \"if ('writable' in d1) d2.writable = d1.writable;\",\n    \"if ('value' in d1) d2.value = d1.value;\",\n    \"if ('get' in d1) d2.get = d1.get;\",\n    \"if ('set' in d1) d2.set = d1.set;\",\n    \"return defineProperty_(obj, prop, d2);\",\n    \"};\",\n    \"})();\",\n\n    \"Object.defineProperty(Object, 'defineProperties',\",\n    \"{configurable: true, writable: true, value:\",\n    \"function(obj, props) {\",\n    \"var keys = Object.keys(props);\",\n    \"for (var i = 0; i < keys.length; i++) {\",\n    \"Object.defineProperty(obj, keys[i], props[keys[i]]);\",\n    \"}\",\n    \"return obj;\",\n    \"}\",\n    \"});\",\n    \"\",\n  );\n\n  wrapper = function (obj, prop) {\n    if (!obj || !obj.isObject) {\n      thisInterpreter.throwException(\n        thisInterpreter.TYPE_ERROR,\n        \"Object.getOwnPropertyDescriptor called on non-object\",\n      );\n    }\n    prop = String(prop);\n    if (!(prop in obj.properties)) {\n      return undefined;\n    }\n    var descriptor = Object.getOwnPropertyDescriptor(obj.properties, prop);\n    var getter = obj.getter[prop];\n    var setter = obj.setter[prop];\n\n    if (getter || setter) {\n      descriptor.get = getter;\n      descriptor.set = setter;\n      delete descriptor.value;\n      delete descriptor.writable;\n    }\n    // Preserve value, but remove it for the nativeToPseudo call.\n    var value = descriptor.value;\n    var hasValue = \"value\" in descriptor;\n    delete descriptor.value;\n    var pseudoDescriptor = thisInterpreter.nativeToPseudo(descriptor);\n    if (hasValue) {\n      thisInterpreter.setProperty(pseudoDescriptor, \"value\", value);\n    }\n    return pseudoDescriptor;\n  };\n  this.setProperty(\n    this.OBJECT,\n    \"getOwnPropertyDescriptor\",\n    this.createNativeFunction(wrapper, false),\n    Interpreter.NONENUMERABLE_DESCRIPTOR,\n  );\n\n  wrapper = function (obj) {\n    throwIfNullUndefined(obj);\n    return thisInterpreter.getPrototype(obj);\n  };\n  this.setProperty(\n    this.OBJECT,\n    \"getPrototypeOf\",\n    this.createNativeFunction(wrapper, false),\n    Interpreter.NONENUMERABLE_DESCRIPTOR,\n  );\n\n  wrapper = function (obj) {\n    return Boolean(obj) && !obj.preventExtensions;\n  };\n  this.setProperty(\n    this.OBJECT,\n    \"isExtensible\",\n    this.createNativeFunction(wrapper, false),\n    Interpreter.NONENUMERABLE_DESCRIPTOR,\n  );\n\n  wrapper = function (obj) {\n    if (obj && obj.isObject) {\n      obj.preventExtensions = true;\n    }\n    return obj;\n  };\n  this.setProperty(\n    this.OBJECT,\n    \"preventExtensions\",\n    this.createNativeFunction(wrapper, false),\n    Interpreter.NONENUMERABLE_DESCRIPTOR,\n  );\n\n  // Instance methods on Object.\n  this.setNativeFunctionPrototype(this.OBJECT, \"toString\", Interpreter.Object.prototype.toString);\n  this.setNativeFunctionPrototype(this.OBJECT, \"toLocaleString\", Interpreter.Object.prototype.toString);\n  this.setNativeFunctionPrototype(this.OBJECT, \"valueOf\", Interpreter.Object.prototype.valueOf);\n\n  wrapper = function (prop) {\n    throwIfNullUndefined(this);\n    if (!this.isObject) {\n      return this.hasOwnProperty(prop);\n    }\n    return String(prop) in this.properties;\n  };\n  this.setNativeFunctionPrototype(this.OBJECT, \"hasOwnProperty\", wrapper);\n\n  wrapper = function (prop) {\n    throwIfNullUndefined(this);\n    if (!this.isObject) {\n      return this.propertyIsEnumerable(prop);\n    }\n    return Object.prototype.propertyIsEnumerable.call(this.properties, prop);\n  };\n  this.setNativeFunctionPrototype(this.OBJECT, \"propertyIsEnumerable\", wrapper);\n\n  wrapper = function (obj) {\n    while (true) {\n      // Note, circular loops shouldn't be possible.\n      obj = thisInterpreter.getPrototype(obj);\n      if (!obj) {\n        // No parent; reached the top.\n        return false;\n      }\n      if (obj === this) {\n        return true;\n      }\n    }\n  };\n  this.setNativeFunctionPrototype(this.OBJECT, \"isPrototypeOf\", wrapper);\n};\n\n/**\n * Initialize the Array class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initArray = function (scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Array constructor.\n  wrapper = function (var_args) {\n    if (thisInterpreter.calledWithNew()) {\n      // Called as new Array().\n      var newArray = this;\n    } else {\n      // Called as Array().\n      var newArray = thisInterpreter.createObjectProto(thisInterpreter.ARRAY_PROTO);\n    }\n    var first = arguments[0];\n    if (arguments.length === 1 && typeof first === \"number\") {\n      if (isNaN(Interpreter.legalArrayLength(first))) {\n        thisInterpreter.throwException(thisInterpreter.RANGE_ERROR, \"Invalid array length\");\n      }\n      newArray.properties.length = first;\n    } else {\n      for (var i = 0; i < arguments.length; i++) {\n        newArray.properties[i] = arguments[i];\n      }\n      newArray.properties.length = i;\n    }\n    return newArray;\n  };\n  this.ARRAY = this.createNativeFunction(wrapper, true);\n  this.ARRAY_PROTO = this.ARRAY.properties[\"prototype\"];\n  this.setProperty(scope, \"Array\", this.ARRAY);\n\n  // Static methods on Array.\n  wrapper = function (obj) {\n    return obj && obj.class === \"Array\";\n  };\n  this.setProperty(\n    this.ARRAY,\n    \"isArray\",\n    this.createNativeFunction(wrapper, false),\n    Interpreter.NONENUMERABLE_DESCRIPTOR,\n  );\n\n  // Instance methods on Array.\n  wrapper = function () {\n    return Array.prototype.pop.call(this.properties);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, \"pop\", wrapper);\n\n  wrapper = function (var_args) {\n    return Array.prototype.push.apply(this.properties, arguments);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, \"push\", wrapper);\n\n  wrapper = function () {\n    return Array.prototype.shift.call(this.properties);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, \"shift\", wrapper);\n\n  wrapper = function (var_args) {\n    return Array.prototype.unshift.apply(this.properties, arguments);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, \"unshift\", wrapper);\n\n  wrapper = function () {\n    Array.prototype.reverse.call(this.properties);\n    return this;\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, \"reverse\", wrapper);\n\n  wrapper = function (index, howmany /*, var_args*/) {\n    var list = Array.prototype.splice.apply(this.properties, arguments);\n    return thisInterpreter.arrayNativeToPseudo(list);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, \"splice\", wrapper);\n\n  wrapper = function (opt_begin, opt_end) {\n    var list = Array.prototype.slice.call(this.properties, opt_begin, opt_end);\n    return thisInterpreter.arrayNativeToPseudo(list);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, \"slice\", wrapper);\n\n  wrapper = function (opt_separator) {\n    return Array.prototype.join.call(this.properties, opt_separator);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, \"join\", wrapper);\n\n  wrapper = function (var_args) {\n    var list = [];\n    var length = 0;\n    // Start by copying the current array.\n    var iLength = thisInterpreter.getProperty(this, \"length\");\n    for (var i = 0; i < iLength; i++) {\n      if (thisInterpreter.hasProperty(this, i)) {\n        var element = thisInterpreter.getProperty(this, i);\n        list[length] = element;\n      }\n      length++;\n    }\n    // Loop through all arguments and copy them in.\n    for (var i = 0; i < arguments.length; i++) {\n      var value = arguments[i];\n      if (thisInterpreter.isa(value, thisInterpreter.ARRAY)) {\n        var jLength = thisInterpreter.getProperty(value, \"length\");\n        for (var j = 0; j < jLength; j++) {\n          if (thisInterpreter.hasProperty(value, j)) {\n            list[length] = thisInterpreter.getProperty(value, j);\n          }\n          length++;\n        }\n      } else {\n        list[length] = value;\n      }\n    }\n    return thisInterpreter.arrayNativeToPseudo(list);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, \"concat\", wrapper);\n\n  wrapper = function (searchElement, opt_fromIndex) {\n    return Array.prototype.indexOf.apply(this.properties, arguments);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, \"indexOf\", wrapper);\n\n  wrapper = function (searchElement, opt_fromIndex) {\n    return Array.prototype.lastIndexOf.apply(this.properties, arguments);\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, \"lastIndexOf\", wrapper);\n\n  wrapper = function () {\n    Array.prototype.sort.call(this.properties);\n    return this;\n  };\n  this.setNativeFunctionPrototype(this.ARRAY, \"sort\", wrapper);\n\n  this.polyfills_.push(\n    // Polyfill copied from:\n    // developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/every\n    \"Object.defineProperty(Array.prototype, 'every',\",\n    \"{configurable: true, writable: true, value:\",\n    \"function(callbackfn, thisArg) {\",\n    \"if (!this || typeof callbackfn !== 'function') throw TypeError();\",\n    \"var T, k;\",\n    \"var O = Object(this);\",\n    \"var len = O.length >>> 0;\",\n    \"if (arguments.length > 1) T = thisArg;\",\n    \"k = 0;\",\n    \"while (k < len) {\",\n    \"if (k in O && !callbackfn.call(T, O[k], k, O)) return false;\",\n    \"k++;\",\n    \"}\",\n    \"return true;\",\n    \"}\",\n    \"});\",\n\n    // Polyfill copied from:\n    // developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\n    \"Object.defineProperty(Array.prototype, 'filter',\",\n    \"{configurable: true, writable: true, value:\",\n    \"function(fun/*, thisArg*/) {\",\n    \"if (this === void 0 || this === null || typeof fun !== 'function') throw TypeError();\",\n    \"var t = Object(this);\",\n    \"var len = t.length >>> 0;\",\n    \"var res = [];\",\n    \"var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\",\n    \"for (var i = 0; i < len; i++) {\",\n    \"if (i in t) {\",\n    \"var val = t[i];\",\n    \"if (fun.call(thisArg, val, i, t)) res.push(val);\",\n    \"}\",\n    \"}\",\n    \"return res;\",\n    \"}\",\n    \"});\",\n\n    // Polyfill copied from:\n    // https://tc39.github.io/ecma262/#sec-array.prototype.find\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n    \"if (!Array.prototype.find) {\",\n    \"Object.defineProperty(Array.prototype, 'find', {\",\n    \"value: function(predicate) {\",\n    \"if (this == null) {\",\n    \"throw new TypeError('\\\"this\\\" is null or not defined');\",\n    \"}\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    \"if (typeof predicate !== 'function') {\",\n    \"throw new TypeError('predicate must be a function');\",\n    \"}\",\n    \"var thisArg = arguments[1];\",\n    \"var k = 0;\",\n    \"while (k < len) {\",\n    \"var kValue = o[k];\",\n    \"if (predicate.call(thisArg, kValue, k, o)) {\",\n    \"return kValue;\",\n    \"}\",\n    \"k++;\",\n    \"}\",\n    \"return undefined;\",\n    \"},\",\n    \"configurable: true,\",\n    \"writable: true\",\n    \"});\",\n    \"}\",\n\n    // Poly fill copied from:\n    // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\n    \"if (!Array.prototype.findIndex) {\",\n    \"Object.defineProperty(Array.prototype, 'findIndex', {\",\n    \"value: function(predicate) {\",\n    \"if (this == null) {\",\n    \"throw new TypeError('\\\"this\\\" is null or not defined');\",\n    \"}\",\n    \"var o = Object(this);\",\n    \"var len = o.length >>> 0;\",\n    \"if (typeof predicate !== 'function') {\",\n    \"throw new TypeError('predicate must be a function');\",\n    \"}\",\n    \"var thisArg = arguments[1];\",\n    \"var k = 0;\",\n    \"while (k < len) {\",\n    \"var kValue = o[k];\",\n    \"if (predicate.call(thisArg, kValue, k, o)) {\",\n    \"return k;\",\n    \"}\",\n    \"k++;\",\n    \"}\",\n    \"return -1;\",\n    \"},\",\n    \"configurable: true,\",\n    \"writable: true\",\n    \"});\",\n    \"}\",\n\n    // Polyfill copied from:\n    // developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\n    \"Object.defineProperty(Array.prototype, 'forEach',\",\n    \"{configurable: true, writable: true, value:\",\n    \"function(callback, thisArg) {\",\n    \"if (!this || typeof callback !== 'function') throw TypeError();\",\n    \"var T, k;\",\n    \"var O = Object(this);\",\n    \"var len = O.length >>> 0;\",\n    \"if (arguments.length > 1) T = thisArg;\",\n    \"k = 0;\",\n    \"while (k < len) {\",\n    \"if (k in O) callback.call(T, O[k], k, O);\",\n    \"k++;\",\n    \"}\",\n    \"}\",\n    \"});\",\n\n    // Polyfill copied from:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#Polyfill\n    \"Object.defineProperty(Array.prototype, 'includes', {\",\n    \"value: function(searchElement, fromIndex) {\",\n    \"if (this == null) {\",\n    \"throw new TypeError('\\\"this\\\" is null or not defined');\",\n    \"}\",\n    \"// 1. Let O be ? ToObject(this value).\",\n    \"var o = Object(this);\",\n    '// 2. Let len be ? ToLength(? Get(O, \"length\")).',\n    \"var len = o.length >>> 0;\",\n    \"// 3. If len is 0, return false.\",\n    \"if (len === 0) {\",\n    \"return false;\",\n    \"}\",\n    \"// 4. Let n be ? ToInteger(fromIndex).\",\n    \"//    (If fromIndex is undefined, this step produces the value 0.)\",\n    \"var n = fromIndex | 0;\",\n    \"// 5. If n ≥ 0, then\",\n    \"//  a. Let k be n.\",\n    \"// 6. Else n < 0,\",\n    \"//  a. Let k be len + n.\",\n    \"//  b. If k < 0, let k be 0.\",\n    \"var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\",\n    \"function sameValueZero(x, y) {\",\n    \"return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\",\n    \"}\",\n    \"// 7. Repeat, while k < len\",\n    \"while (k < len) {\",\n    \"// a. Let elementK be the result of ? Get(O, ! ToString(k)).\",\n    \"// b. If SameValueZero(searchElement, elementK) is true, return true.\",\n    \"if (sameValueZero(o[k], searchElement)) {\",\n    \"return true;\",\n    \"}\",\n    \"// c. Increase k by 1. \",\n    \"k++;\",\n    \"}\",\n    \"// 8. Return false\",\n    \"return false;\",\n    \"}\",\n    \"});\",\n\n    // Polyfill copied from:\n    // developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/map\n    \"Object.defineProperty(Array.prototype, 'map',\",\n    \"{configurable: true, writable: true, value:\",\n    \"function(callback, thisArg) {\",\n    \"if (!this || typeof callback !== 'function') new TypeError;\",\n    \"var T, A, k;\",\n    \"var O = Object(this);\",\n    \"var len = O.length >>> 0;\",\n    \"if (arguments.length > 1) T = thisArg;\",\n    \"A = new Array(len);\",\n    \"k = 0;\",\n    \"while (k < len) {\",\n    \"if (k in O) A[k] = callback.call(T, O[k], k, O);\",\n    \"k++;\",\n    \"}\",\n    \"return A;\",\n    \"}\",\n    \"});\",\n\n    // Polyfill copied from:\n    // developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\n    \"Object.defineProperty(Array.prototype, 'reduce',\",\n    \"{configurable: true, writable: true, value:\",\n    \"function(callback /*, initialValue*/) {\",\n    \"if (!this || typeof callback !== 'function') throw TypeError();\",\n    \"var t = Object(this), len = t.length >>> 0, k = 0, value;\",\n    \"if (arguments.length === 2) {\",\n    \"value = arguments[1];\",\n    \"} else {\",\n    \"while (k < len && !(k in t)) k++;\",\n    \"if (k >= len) {\",\n    \"throw TypeError('Reduce of empty array with no initial value');\",\n    \"}\",\n    \"value = t[k++];\",\n    \"}\",\n    \"for (; k < len; k++) {\",\n    \"if (k in t) value = callback(value, t[k], k, t);\",\n    \"}\",\n    \"return value;\",\n    \"}\",\n    \"});\",\n\n    // Polyfill copied from:\n    // developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/ReduceRight\n    \"Object.defineProperty(Array.prototype, 'reduceRight',\",\n    \"{configurable: true, writable: true, value:\",\n    \"function(callback /*, initialValue*/) {\",\n    \"if (null === this || 'undefined' === typeof this || 'function' !== typeof callback) throw TypeError();\",\n    \"var t = Object(this), len = t.length >>> 0, k = len - 1, value;\",\n    \"if (arguments.length >= 2) {\",\n    \"value = arguments[1];\",\n    \"} else {\",\n    \"while (k >= 0 && !(k in t)) k--;\",\n    \"if (k < 0) {\",\n    \"throw TypeError('Reduce of empty array with no initial value');\",\n    \"}\",\n    \"value = t[k--];\",\n    \"}\",\n    \"for (; k >= 0; k--) {\",\n    \"if (k in t) value = callback(value, t[k], k, t);\",\n    \"}\",\n    \"return value;\",\n    \"}\",\n    \"});\",\n\n    // Polyfill copied from:\n    // developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/some\n    \"Object.defineProperty(Array.prototype, 'some',\",\n    \"{configurable: true, writable: true, value:\",\n    \"function(fun/*, thisArg*/) {\",\n    \"if (!this || typeof fun !== 'function') throw TypeError();\",\n    \"var t = Object(this);\",\n    \"var len = t.length >>> 0;\",\n    \"var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\",\n    \"for (var i = 0; i < len; i++) {\",\n    \"if (i in t && fun.call(thisArg, t[i], i, t)) {\",\n    \"return true;\",\n    \"}\",\n    \"}\",\n    \"return false;\",\n    \"}\",\n    \"});\",\n\n    \"(function() {\",\n    \"var sort_ = Array.prototype.sort;\",\n    \"Array.prototype.sort = function(opt_comp) {\",\n    // Fast native sort.\n    \"if (typeof opt_comp !== 'function') {\",\n    \"return sort_.call(this);\",\n    \"}\",\n    // Slow bubble sort.\n    \"for (var i = 0; i < this.length; i++) {\",\n    \"var changes = 0;\",\n    \"for (var j = 0; j < this.length - i - 1; j++) {\",\n    \"if (opt_comp(this[j], this[j + 1]) > 0) {\",\n    \"var swap = this[j];\",\n    \"this[j] = this[j + 1];\",\n    \"this[j + 1] = swap;\",\n    \"changes++;\",\n    \"}\",\n    \"}\",\n    \"if (!changes) break;\",\n    \"}\",\n    \"return this;\",\n    \"};\",\n    \"})();\",\n\n    \"Object.defineProperty(Array.prototype, 'toLocaleString',\",\n    \"{configurable: true, writable: true, value:\",\n    \"function() {\",\n    \"var out = [];\",\n    \"for (var i = 0; i < this.length; i++) {\",\n    \"out[i] = (this[i] === null || this[i] === undefined) ? '' : this[i].toLocaleString();\",\n    \"}\",\n    \"return out.join(',');\",\n    \"}\",\n    \"});\",\n    \"\",\n  );\n};\n\n/**\n * Initialize the String class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initString = function (scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  // String constructor.\n  wrapper = function (value) {\n    value = String(value);\n    if (thisInterpreter.calledWithNew()) {\n      // Called as new String().\n      this.data = value;\n      return this;\n    } else {\n      // Called as String().\n      return value;\n    }\n  };\n  this.STRING = this.createNativeFunction(wrapper, true);\n  this.setProperty(scope, \"String\", this.STRING);\n\n  // Static methods on String.\n  this.setProperty(\n    this.STRING,\n    \"fromCharCode\",\n    this.createNativeFunction(String.fromCharCode, false),\n    Interpreter.NONENUMERABLE_DESCRIPTOR,\n  );\n\n  // Instance methods on String.\n  // Methods with exclusively primitive arguments.\n  var functions = [\n    \"charAt\",\n    \"charCodeAt\",\n    \"concat\",\n    \"indexOf\",\n    \"lastIndexOf\",\n    \"slice\",\n    \"substr\",\n    \"substring\",\n    \"toLocaleLowerCase\",\n    \"toLocaleUpperCase\",\n    \"toLowerCase\",\n    \"toUpperCase\",\n    \"trim\",\n  ];\n  for (var i = 0; i < functions.length; i++) {\n    this.setNativeFunctionPrototype(this.STRING, functions[i], String.prototype[functions[i]]);\n  }\n\n  wrapper = function (compareString, locales, options) {\n    locales = locales ? thisInterpreter.pseudoToNative(locales) : undefined;\n    options = options ? thisInterpreter.pseudoToNative(options) : undefined;\n    return String(this).localeCompare(compareString, locales, options);\n  };\n  this.setNativeFunctionPrototype(this.STRING, \"localeCompare\", wrapper);\n\n  wrapper = function (separator, limit) {\n    if (thisInterpreter.isa(separator, thisInterpreter.REGEXP)) {\n      separator = separator.data;\n    }\n    var jsList = String(this).split(separator, limit);\n    return thisInterpreter.arrayNativeToPseudo(jsList);\n  };\n  this.setNativeFunctionPrototype(this.STRING, \"split\", wrapper);\n\n  wrapper = function (regexp) {\n    if (thisInterpreter.isa(regexp, thisInterpreter.REGEXP)) {\n      regexp = regexp.data;\n    }\n    var m = String(this).match(regexp);\n    return m && thisInterpreter.arrayNativeToPseudo(m);\n  };\n  this.setNativeFunctionPrototype(this.STRING, \"match\", wrapper);\n\n  wrapper = function (regexp) {\n    if (thisInterpreter.isa(regexp, thisInterpreter.REGEXP)) {\n      regexp = regexp.data;\n    }\n    return String(this).search(regexp);\n  };\n  this.setNativeFunctionPrototype(this.STRING, \"search\", wrapper);\n\n  wrapper = function (substr, newSubstr) {\n    // Support for function replacements is the responsibility of a polyfill.\n    if (thisInterpreter.isa(substr, thisInterpreter.REGEXP)) {\n      substr = substr.data;\n    }\n    return String(this).replace(substr, newSubstr);\n  };\n  this.setNativeFunctionPrototype(this.STRING, \"replace\", wrapper);\n  // Add a polyfill to handle replace's second argument being a function.\n  this.polyfills_.push(\n    \"(function() {\",\n    \"var replace_ = String.prototype.replace;\",\n    \"String.prototype.replace = function(substr, newSubstr) {\",\n    \"if (typeof newSubstr !== 'function') {\",\n    // string.replace(string|regexp, string)\n    \"return replace_.call(this, substr, newSubstr);\",\n    \"}\",\n    \"var str = this;\",\n    \"if (substr instanceof RegExp) {\", // string.replace(regexp, function)\n    \"var subs = [];\",\n    \"var m = substr.exec(str);\",\n    \"while (m) {\",\n    \"m.push(m.index, str);\",\n    \"var inject = newSubstr.apply(null, m);\",\n    \"subs.push([m.index, m[0].length, inject]);\",\n    \"m = substr.global ? substr.exec(str) : null;\",\n    \"}\",\n    \"for (var i = subs.length - 1; i >= 0; i--) {\",\n    \"str = str.substring(0, subs[i][0]) + subs[i][2] + \" + \"str.substring(subs[i][0] + subs[i][1]);\",\n    \"}\",\n    \"} else {\", // string.replace(string, function)\n    \"var i = str.indexOf(substr);\",\n    \"if (i !== -1) {\",\n    \"var inject = newSubstr(str.substr(i, substr.length), i, str);\",\n    \"str = str.substring(0, i) + inject + \" + \"str.substring(i + substr.length);\",\n    \"}\",\n    \"}\",\n    \"return str;\",\n    \"};\",\n    \"})();\",\n\n    // Polyfill copied from:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n    \"if (!String.prototype.endsWith) {\",\n    \"String.prototype.endsWith = function(search, this_len) {\",\n    \"if (this_len === undefined || this_len > this.length) {\",\n    \"this_len = this.length;\",\n    \"}\",\n    \"return this.substring(this_len - search.length, this_len) === search;\",\n    \"};\",\n    \"}\",\n\n    //Polyfill copied from:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n    \"if (!String.prototype.includes) {\",\n    \"String.prototype.includes = function(search, start) {\",\n    \"'use strict';\",\n    \"if (typeof start !== 'number') {\",\n    \"start = 0;\",\n    \"}\",\n    \"    \",\n    \"if (start + search.length > this.length) {\",\n    \"return false;\",\n    \"} else {\",\n    \"return this.indexOf(search, start) !== -1;\",\n    \"}\",\n    \"};\",\n    \"}\",\n\n    // Polyfill copied from:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n    \"if (!String.prototype.startsWith) {\",\n    \"String.prototype.startsWith = function(search, pos) {\",\n    \"return this.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\",\n    \"};\",\n    \"}\",\n\n    \"\",\n  );\n};\n\n/**\n * Initialize the Boolean class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initBoolean = function (scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Boolean constructor.\n  wrapper = function (value) {\n    value = Boolean(value);\n    if (thisInterpreter.calledWithNew()) {\n      // Called as new Boolean().\n      this.data = value;\n      return this;\n    } else {\n      // Called as Boolean().\n      return value;\n    }\n  };\n  this.BOOLEAN = this.createNativeFunction(wrapper, true);\n  this.setProperty(scope, \"Boolean\", this.BOOLEAN);\n};\n\n/**\n * Initialize the Number class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initNumber = function (scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Number constructor.\n  wrapper = function (value) {\n    value = Number(value);\n    if (thisInterpreter.calledWithNew()) {\n      // Called as new Number().\n      this.data = value;\n      return this;\n    } else {\n      // Called as Number().\n      return value;\n    }\n  };\n  this.NUMBER = this.createNativeFunction(wrapper, true);\n  this.setProperty(scope, \"Number\", this.NUMBER);\n\n  var numConsts = [\"MAX_VALUE\", \"MIN_VALUE\", \"NaN\", \"NEGATIVE_INFINITY\", \"POSITIVE_INFINITY\"];\n  for (var i = 0; i < numConsts.length; i++) {\n    this.setProperty(this.NUMBER, numConsts[i], Number[numConsts[i]], Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  }\n\n  // Instance methods on Number.\n  wrapper = function (fractionDigits) {\n    try {\n      return Number(this).toExponential(fractionDigits);\n    } catch (e) {\n      // Throws if fractionDigits isn't within 0-20.\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, \"toExponential\", wrapper);\n\n  wrapper = function (digits) {\n    try {\n      return Number(this).toFixed(digits);\n    } catch (e) {\n      // Throws if digits isn't within 0-20.\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, \"toFixed\", wrapper);\n\n  wrapper = function (precision) {\n    try {\n      return Number(this).toPrecision(precision);\n    } catch (e) {\n      // Throws if precision isn't within range (depends on implementation).\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, \"toPrecision\", wrapper);\n\n  wrapper = function (radix) {\n    try {\n      return Number(this).toString(radix);\n    } catch (e) {\n      // Throws if radix isn't within 2-36.\n      thisInterpreter.throwException(thisInterpreter.ERROR, e.message);\n    }\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, \"toString\", wrapper);\n\n  wrapper = function (locales, options) {\n    locales = locales ? thisInterpreter.pseudoToNative(locales) : undefined;\n    options = options ? thisInterpreter.pseudoToNative(options) : undefined;\n    return Number(this).toLocaleString(locales, options);\n  };\n  this.setNativeFunctionPrototype(this.NUMBER, \"toLocaleString\", wrapper);\n};\n\n/**\n * Initialize the Date class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initDate = function (scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  // Date constructor.\n  wrapper = function (value, var_args) {\n    if (!thisInterpreter.calledWithNew()) {\n      // Called as Date().\n      // Calling Date() as a function returns a string, no arguments are heeded.\n      return Date();\n    }\n    // Called as new Date().\n    var args = [null].concat(Array.from(arguments));\n    this.data = new (Function.prototype.bind.apply(Date, args))();\n    return this;\n  };\n  this.DATE = this.createNativeFunction(wrapper, true);\n  this.DATE_PROTO = this.DATE.properties[\"prototype\"];\n  this.setProperty(scope, \"Date\", this.DATE);\n\n  // Static methods on Date.\n  this.setProperty(this.DATE, \"now\", this.createNativeFunction(Date.now, false), Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  this.setProperty(\n    this.DATE,\n    \"parse\",\n    this.createNativeFunction(Date.parse, false),\n    Interpreter.NONENUMERABLE_DESCRIPTOR,\n  );\n\n  this.setProperty(this.DATE, \"UTC\", this.createNativeFunction(Date.UTC, false), Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  // Instance methods on Date.\n  var functions = [\n    \"getDate\",\n    \"getDay\",\n    \"getFullYear\",\n    \"getHours\",\n    \"getMilliseconds\",\n    \"getMinutes\",\n    \"getMonth\",\n    \"getSeconds\",\n    \"getTime\",\n    \"getTimezoneOffset\",\n    \"getUTCDate\",\n    \"getUTCDay\",\n    \"getUTCFullYear\",\n    \"getUTCHours\",\n    \"getUTCMilliseconds\",\n    \"getUTCMinutes\",\n    \"getUTCMonth\",\n    \"getUTCSeconds\",\n    \"getYear\",\n    \"setDate\",\n    \"setFullYear\",\n    \"setHours\",\n    \"setMilliseconds\",\n    \"setMinutes\",\n    \"setMonth\",\n    \"setSeconds\",\n    \"setTime\",\n    \"setUTCDate\",\n    \"setUTCFullYear\",\n    \"setUTCHours\",\n    \"setUTCMilliseconds\",\n    \"setUTCMinutes\",\n    \"setUTCMonth\",\n    \"setUTCSeconds\",\n    \"setYear\",\n    \"toDateString\",\n    \"toISOString\",\n    \"toJSON\",\n    \"toGMTString\",\n    \"toLocaleDateString\",\n    \"toLocaleString\",\n    \"toLocaleTimeString\",\n    \"toTimeString\",\n    \"toUTCString\",\n  ];\n  for (var i = 0; i < functions.length; i++) {\n    wrapper = (function (nativeFunc) {\n      return function (var_args) {\n        var args = [];\n        for (var i = 0; i < arguments.length; i++) {\n          args[i] = thisInterpreter.pseudoToNative(arguments[i]);\n        }\n        return this.data[nativeFunc].apply(this.data, args);\n      };\n    })(functions[i]);\n    this.setNativeFunctionPrototype(this.DATE, functions[i], wrapper);\n  }\n};\n\n/**\n * Initialize Regular Expression object.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initRegExp = function (scope) {\n  var thisInterpreter = this;\n  var wrapper;\n  // RegExp constructor.\n  wrapper = function (pattern, flags) {\n    if (thisInterpreter.calledWithNew()) {\n      // Called as new RegExp().\n      var rgx = this;\n    } else {\n      // Called as RegExp().\n      var rgx = thisInterpreter.createObjectProto(thisInterpreter.REGEXP_PROTO);\n    }\n    pattern = pattern ? pattern.toString() : \"\";\n    flags = flags ? flags.toString() : \"\";\n    thisInterpreter.populateRegExp(rgx, new RegExp(pattern, flags));\n    return rgx;\n  };\n  this.REGEXP = this.createNativeFunction(wrapper, true);\n  this.REGEXP_PROTO = this.REGEXP.properties[\"prototype\"];\n  this.setProperty(scope, \"RegExp\", this.REGEXP);\n\n  this.setProperty(\n    this.REGEXP.properties[\"prototype\"],\n    \"global\",\n    undefined,\n    Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR,\n  );\n  this.setProperty(\n    this.REGEXP.properties[\"prototype\"],\n    \"ignoreCase\",\n    undefined,\n    Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR,\n  );\n  this.setProperty(\n    this.REGEXP.properties[\"prototype\"],\n    \"multiline\",\n    undefined,\n    Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR,\n  );\n  this.setProperty(\n    this.REGEXP.properties[\"prototype\"],\n    \"source\",\n    \"(?:)\",\n    Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR,\n  );\n\n  wrapper = function (str) {\n    return this.data.test(str);\n  };\n  this.setNativeFunctionPrototype(this.REGEXP, \"test\", wrapper);\n\n  wrapper = function (str) {\n    str = str.toString();\n    // Get lastIndex from wrapped regex, since this is settable.\n    this.data.lastIndex = Number(thisInterpreter.getProperty(this, \"lastIndex\"));\n    var match = this.data.exec(str);\n    thisInterpreter.setProperty(this, \"lastIndex\", this.data.lastIndex);\n\n    if (match) {\n      var result = thisInterpreter.createObjectProto(thisInterpreter.ARRAY_PROTO);\n      for (var i = 0; i < match.length; i++) {\n        thisInterpreter.setProperty(result, i, match[i]);\n      }\n      // match has additional properties.\n      thisInterpreter.setProperty(result, \"index\", match.index);\n      thisInterpreter.setProperty(result, \"input\", match.input);\n      return result;\n    }\n    return null;\n  };\n  this.setNativeFunctionPrototype(this.REGEXP, \"exec\", wrapper);\n};\n\n/**\n * Initialize the Error class.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initError = function (scope) {\n  var thisInterpreter = this;\n  // Error constructor.\n  this.ERROR = this.createNativeFunction(function (opt_message) {\n    if (thisInterpreter.calledWithNew()) {\n      // Called as new Error().\n      var newError = this;\n    } else {\n      // Called as Error().\n      var newError = thisInterpreter.createObject(thisInterpreter.ERROR);\n    }\n    if (opt_message) {\n      thisInterpreter.setProperty(newError, \"message\", String(opt_message), Interpreter.NONENUMERABLE_DESCRIPTOR);\n    }\n    return newError;\n  }, true);\n  this.setProperty(scope, \"Error\", this.ERROR);\n  this.setProperty(this.ERROR.properties[\"prototype\"], \"message\", \"\", Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(this.ERROR.properties[\"prototype\"], \"name\", \"Error\", Interpreter.NONENUMERABLE_DESCRIPTOR);\n\n  var createErrorSubclass = function (name) {\n    var constructor = thisInterpreter.createNativeFunction(function (opt_message) {\n      if (thisInterpreter.calledWithNew()) {\n        // Called as new XyzError().\n        var newError = this;\n      } else {\n        // Called as XyzError().\n        var newError = thisInterpreter.createObject(constructor);\n      }\n      if (opt_message) {\n        thisInterpreter.setProperty(newError, \"message\", String(opt_message), Interpreter.NONENUMERABLE_DESCRIPTOR);\n      }\n      return newError;\n    }, true);\n    thisInterpreter.setProperty(constructor, \"prototype\", thisInterpreter.createObject(thisInterpreter.ERROR));\n    thisInterpreter.setProperty(\n      constructor.properties[\"prototype\"],\n      \"name\",\n      name,\n      Interpreter.NONENUMERABLE_DESCRIPTOR,\n    );\n    thisInterpreter.setProperty(scope, name, constructor);\n\n    return constructor;\n  };\n\n  this.EVAL_ERROR = createErrorSubclass(\"EvalError\");\n  this.RANGE_ERROR = createErrorSubclass(\"RangeError\");\n  this.REFERENCE_ERROR = createErrorSubclass(\"ReferenceError\");\n  this.SYNTAX_ERROR = createErrorSubclass(\"SyntaxError\");\n  this.TYPE_ERROR = createErrorSubclass(\"TypeError\");\n  this.URI_ERROR = createErrorSubclass(\"URIError\");\n};\n\n/**\n * Initialize Math object.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initMath = function (scope) {\n  var thisInterpreter = this;\n  var myMath = this.createObjectProto(this.OBJECT_PROTO);\n  this.setProperty(scope, \"Math\", myMath);\n  var mathConsts = [\"E\", \"LN2\", \"LN10\", \"LOG2E\", \"LOG10E\", \"PI\", \"SQRT1_2\", \"SQRT2\"];\n  for (var i = 0; i < mathConsts.length; i++) {\n    this.setProperty(myMath, mathConsts[i], Math[mathConsts[i]], Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  }\n  var numFunctions = [\n    \"abs\",\n    \"acos\",\n    \"asin\",\n    \"atan\",\n    \"atan2\",\n    \"ceil\",\n    \"cos\",\n    \"exp\",\n    \"floor\",\n    \"log\",\n    \"max\",\n    \"min\",\n    \"pow\",\n    \"random\",\n    \"round\",\n    \"sin\",\n    \"sqrt\",\n    \"tan\",\n  ];\n  for (var i = 0; i < numFunctions.length; i++) {\n    this.setProperty(\n      myMath,\n      numFunctions[i],\n      this.createNativeFunction(Math[numFunctions[i]], false),\n      Interpreter.NONENUMERABLE_DESCRIPTOR,\n    );\n  }\n};\n\n/**\n * Initialize JSON object.\n * @param {!Interpreter.Object} scope Global scope.\n */\nInterpreter.prototype.initJSON = function (scope) {\n  var thisInterpreter = this;\n  var myJSON = thisInterpreter.createObjectProto(this.OBJECT_PROTO);\n  this.setProperty(scope, \"JSON\", myJSON);\n\n  var wrapper = function (text) {\n    try {\n      var nativeObj = JSON.parse(text.toString());\n    } catch (e) {\n      thisInterpreter.throwException(thisInterpreter.SYNTAX_ERROR, e.message);\n    }\n    return thisInterpreter.nativeToPseudo(nativeObj);\n  };\n  this.setProperty(myJSON, \"parse\", this.createNativeFunction(wrapper, false));\n\n  wrapper = function (value) {\n    var nativeObj = thisInterpreter.pseudoToNative(value);\n    try {\n      var str = JSON.stringify(nativeObj);\n    } catch (e) {\n      thisInterpreter.throwException(thisInterpreter.TYPE_ERROR, e.message);\n    }\n    return str;\n  };\n  this.setProperty(myJSON, \"stringify\", this.createNativeFunction(wrapper, false));\n};\n\n/**\n * Is an object of a certain class?\n * @param {Interpreter.Value} child Object to check.\n * @param {Interpreter.Object} constructor Constructor of object.\n * @return {boolean} True if object is the class or inherits from it.\n *     False otherwise.\n */\nInterpreter.prototype.isa = function (child, constructor) {\n  if (child === null || child === undefined || !constructor) {\n    return false;\n  }\n  var proto = constructor.properties[\"prototype\"];\n  if (child === proto) {\n    return true;\n  }\n  // The first step up the prototype chain is harder since the child might be\n  // a primitive value.  Subsequent steps can just follow the .proto property.\n  child = this.getPrototype(child);\n  while (child) {\n    if (child === proto) {\n      return true;\n    }\n    child = child.proto;\n  }\n  return false;\n};\n\n/**\n * Is a value a legal integer for an array length?\n * @param {Interpreter.Value} x Value to check.\n * @return {number} Zero, or a positive integer if the value can be\n *     converted to such.  NaN otherwise.\n */\nInterpreter.legalArrayLength = function (x) {\n  var n = x >>> 0;\n  // Array length must be between 0 and 2^32-1 (inclusive).\n  return n === Number(x) ? n : NaN;\n};\n\n/**\n * Is a value a legal integer for an array index?\n * @param {Interpreter.Value} x Value to check.\n * @return {number} Zero, or a positive integer if the value can be\n *     converted to such.  NaN otherwise.\n */\nInterpreter.legalArrayIndex = function (x) {\n  var n = x >>> 0;\n  // Array index cannot be 2^32-1, otherwise length would be 2^32.\n  // 0xffffffff is 2^32-1.\n  return String(n) === String(x) && n !== 0xffffffff ? n : NaN;\n};\n\n/**\n * Typedef for JS values.\n * @typedef {!Interpreter.Object|boolean|number|string|undefined|null}\n */\nInterpreter.Value;\n\n/**\n * Class for an object.\n * @param {Interpreter.Object} proto Prototype object or null.\n * @constructor\n */\nInterpreter.Object = function (proto) {\n  this.getter = Object.create(null);\n  this.setter = Object.create(null);\n  this.properties = Object.create(null);\n  this.proto = proto;\n};\n\n/** @type {Interpreter.Object} */\nInterpreter.Object.prototype.proto = null;\n\n/** @type {boolean} */\nInterpreter.Object.prototype.isObject = true;\n\n/** @type {string} */\nInterpreter.Object.prototype.class = \"Object\";\n\n/** @type {Date|RegExp|boolean|number|string|undefined|null} */\nInterpreter.Object.prototype.data = null;\n\n/**\n * Convert this object into a string.\n * @return {string} String value.\n * @override\n */\nInterpreter.Object.prototype.toString = function () {\n  if (this.class === \"Array\") {\n    // Array\n    var cycles = Interpreter.toStringCycles_;\n    cycles.push(this);\n    try {\n      var strs = [];\n      for (var i = 0; i < this.properties.length; i++) {\n        var value = this.properties[i];\n        strs[i] = value && value.isObject && cycles.indexOf(value) !== -1 ? \"...\" : value;\n      }\n    } finally {\n      cycles.pop();\n    }\n    return strs.join(\",\");\n  }\n  if (this.class === \"Error\") {\n    var cycles = Interpreter.toStringCycles_;\n    if (cycles.indexOf(this) !== -1) {\n      return \"[object Error]\";\n    }\n    var name, message;\n    // Bug: Does not support getters and setters for name or message.\n    var obj = this;\n    do {\n      if (\"name\" in obj.properties) {\n        name = obj.properties[\"name\"];\n        break;\n      }\n    } while ((obj = obj.proto));\n    var obj = this;\n    do {\n      if (\"message\" in obj.properties) {\n        message = obj.properties[\"message\"];\n        break;\n      }\n    } while ((obj = obj.proto));\n    cycles.push(this);\n    try {\n      name = name && name.toString();\n      message = message && message.toString();\n    } finally {\n      cycles.pop();\n    }\n    return message ? name + \": \" + message : String(name);\n  }\n\n  // RegExp, Date, and boxed primitives.\n  if (this.data !== null) {\n    return String(this.data);\n  }\n\n  return \"[object \" + this.class + \"]\";\n};\n\n/**\n * Return the object's value.\n * @return {Interpreter.Value} Value.\n * @override\n */\nInterpreter.Object.prototype.valueOf = function () {\n  if (this.data === undefined || this.data === null || this.data instanceof RegExp) {\n    return this; // An Object.\n  }\n  if (this.data instanceof Date) {\n    return this.data.valueOf(); // Milliseconds.\n  }\n  return /** @type {(boolean|number|string)} */ (this.data); // Boxed primitive.\n};\n\n/**\n * Create a new data object based on a constructor's prototype.\n * @param {Interpreter.Object} constructor Parent constructor function,\n *     or null if scope object.\n * @return {!Interpreter.Object} New data object.\n */\nInterpreter.prototype.createObject = function (constructor) {\n  return this.createObjectProto(constructor && constructor.properties[\"prototype\"]);\n};\n\n/**\n * Create a new data object based on a prototype.\n * @param {Interpreter.Object} proto Prototype object.\n * @return {!Interpreter.Object} New data object.\n */\nInterpreter.prototype.createObjectProto = function (proto) {\n  if (typeof proto !== \"object\") {\n    throw Error(\"Non object prototype\");\n  }\n  var obj = new Interpreter.Object(proto);\n  // Functions have prototype objects.\n  if (this.isa(obj, this.FUNCTION)) {\n    this.setProperty(obj, \"prototype\", this.createObjectProto(this.OBJECT_PROTO || null));\n    obj.class = \"Function\";\n  }\n  // Arrays have length.\n  if (this.isa(obj, this.ARRAY)) {\n    this.setProperty(obj, \"length\", 0, {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n    });\n    obj.class = \"Array\";\n  }\n  if (this.isa(obj, this.ERROR)) {\n    obj.class = \"Error\";\n  }\n  return obj;\n};\n\n/**\n * Initialize a pseudo regular expression object based on a native regular\n * expression object.\n * @param {!Interpreter.Object} pseudoRegexp The existing object to set.\n * @param {!RegExp} nativeRegexp The native regular expression.\n */\nInterpreter.prototype.populateRegExp = function (pseudoRegexp, nativeRegexp) {\n  pseudoRegexp.data = nativeRegexp;\n  // lastIndex is settable, all others are read-only attributes\n  this.setProperty(pseudoRegexp, \"lastIndex\", nativeRegexp.lastIndex, Interpreter.NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, \"source\", nativeRegexp.source, Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, \"global\", nativeRegexp.global, Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, \"ignoreCase\", nativeRegexp.ignoreCase, Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n  this.setProperty(pseudoRegexp, \"multiline\", nativeRegexp.multiline, Interpreter.READONLY_NONENUMERABLE_DESCRIPTOR);\n};\n\n/**\n * Create a new function.\n * @param {!Object} node AST node defining the function.\n * @param {!Object} scope Parent scope.\n * @return {!Interpreter.Object} New function.\n */\nInterpreter.prototype.createFunction = function (node, scope) {\n  var func = this.createObjectProto(this.FUNCTION_PROTO);\n  func.parentScope = scope;\n  func.node = node;\n  this.setProperty(func, \"length\", func.node[\"params\"].length, Interpreter.READONLY_DESCRIPTOR);\n  return func;\n};\n\n/**\n * Create a new native function.\n * @param {!Function} nativeFunc JavaScript function.\n * @param {boolean=} opt_constructor If true, the function's\n * prototype will have its constructor property set to the function.\n * If false, the function cannot be called as a constructor (e.g. escape).\n * Defaults to undefined.\n * @return {!Interpreter.Object} New function.\n */\nInterpreter.prototype.createNativeFunction = function (nativeFunc, opt_constructor) {\n  var func = this.createObjectProto(this.FUNCTION_PROTO);\n  func.nativeFunc = nativeFunc;\n  nativeFunc.id = this.functionCounter_++;\n  this.setProperty(func, \"length\", nativeFunc.length, Interpreter.READONLY_DESCRIPTOR);\n  if (opt_constructor) {\n    this.setProperty(func.properties[\"prototype\"], \"constructor\", func, Interpreter.NONENUMERABLE_DESCRIPTOR);\n  } else if (opt_constructor === false) {\n    func.illegalConstructor = true;\n    this.setProperty(func, \"prototype\", undefined);\n  }\n  return func;\n};\n\n/**\n * Create a new native asynchronous function.\n * @param {!Function} asyncFunc JavaScript function.\n * @return {!Interpreter.Object} New function.\n */\nInterpreter.prototype.createAsyncFunction = function (asyncFunc) {\n  var func = this.createObjectProto(this.FUNCTION_PROTO);\n  func.asyncFunc = asyncFunc;\n  asyncFunc.id = this.functionCounter_++;\n  this.setProperty(func, \"length\", asyncFunc.length, Interpreter.READONLY_DESCRIPTOR);\n  return func;\n};\n\n/**\n * Converts from a native JS object or value to a JS interpreter object.\n * Can handle JSON-style values, does NOT handle cycles.\n * @param {*} nativeObj The native JS object to be converted.\n * @return {Interpreter.Value} The equivalent JS interpreter object.\n */\nInterpreter.prototype.nativeToPseudo = function (nativeObj) {\n  if ((typeof nativeObj !== \"object\" && typeof nativeObj !== \"function\") || nativeObj === null) {\n    return nativeObj;\n  }\n\n  if (nativeObj instanceof RegExp) {\n    var pseudoRegexp = this.createObjectProto(this.REGEXP_PROTO);\n    this.populateRegExp(pseudoRegexp, nativeObj);\n    return pseudoRegexp;\n  }\n\n  if (nativeObj instanceof Date) {\n    var pseudoDate = this.createObjectProto(this.DATE_PROTO);\n    pseudoDate.data = nativeObj;\n    return pseudoDate;\n  }\n\n  if (nativeObj instanceof Function) {\n    var interpreter = this;\n    var wrapper = function () {\n      return interpreter.nativeToPseudo(\n        nativeObj.apply(\n          interpreter,\n          Array.prototype.slice.call(arguments).map(function (i) {\n            return interpreter.pseudoToNative(i);\n          }),\n        ),\n      );\n    };\n    return this.createNativeFunction(wrapper, undefined);\n  }\n\n  var pseudoObj;\n  if (Array.isArray(nativeObj)) {\n    // Array.\n    pseudoObj = this.createObjectProto(this.ARRAY_PROTO);\n    for (var i = 0; i < nativeObj.length; i++) {\n      if (i in nativeObj) {\n        this.setProperty(pseudoObj, i, this.nativeToPseudo(nativeObj[i]));\n      }\n    }\n  } else {\n    // Object.\n    pseudoObj = this.createObjectProto(this.OBJECT_PROTO);\n    for (var key in nativeObj) {\n      this.setProperty(pseudoObj, key, this.nativeToPseudo(nativeObj[key]));\n    }\n  }\n  return pseudoObj;\n};\n\n/**\n * Converts from a JS interpreter object to native JS object.\n * Can handle JSON-style values, plus cycles.\n * @param {Interpreter.Value} pseudoObj The JS interpreter object to be\n * converted.\n * @param {Object=} opt_cycles Cycle detection (used in recursive calls).\n * @return {*} The equivalent native JS object or value.\n */\nInterpreter.prototype.pseudoToNative = function (pseudoObj, opt_cycles) {\n  if ((typeof pseudoObj !== \"object\" && typeof pseudoObj !== \"function\") || pseudoObj === null) {\n    return pseudoObj;\n  }\n\n  if (this.isa(pseudoObj, this.REGEXP)) {\n    // Regular expression.\n    return pseudoObj.data;\n  }\n\n  if (this.isa(pseudoObj, this.DATE)) {\n    // Date.\n    return pseudoObj.data;\n  }\n\n  var cycles = opt_cycles || {\n    pseudo: [],\n    native: [],\n  };\n  var i = cycles.pseudo.indexOf(pseudoObj);\n  if (i !== -1) {\n    return cycles.native[i];\n  }\n  cycles.pseudo.push(pseudoObj);\n  var nativeObj;\n  if (this.isa(pseudoObj, this.ARRAY)) {\n    // Array.\n    nativeObj = [];\n    cycles.native.push(nativeObj);\n    var length = this.getProperty(pseudoObj, \"length\");\n    for (var i = 0; i < length; i++) {\n      if (this.hasProperty(pseudoObj, i)) {\n        nativeObj[i] = this.pseudoToNative(this.getProperty(pseudoObj, i), cycles);\n      }\n    }\n  } else {\n    // Object.\n    nativeObj = {};\n    cycles.native.push(nativeObj);\n    var val;\n    for (var key in pseudoObj.properties) {\n      val = pseudoObj.properties[key];\n      nativeObj[key] = this.pseudoToNative(val, cycles);\n    }\n  }\n  cycles.pseudo.pop();\n  cycles.native.pop();\n  return nativeObj;\n};\n\n/**\n * Converts from a native JS array to a JS interpreter array.\n * Does handle non-numeric properties (like str.match's index prop).\n * Does NOT recurse into the array's contents.\n * @param {!Array} nativeArray The JS array to be converted.\n * @return {!Interpreter.Object} The equivalent JS interpreter array.\n */\nInterpreter.prototype.arrayNativeToPseudo = function (nativeArray) {\n  var pseudoArray = this.createObjectProto(this.ARRAY_PROTO);\n  var props = Object.getOwnPropertyNames(nativeArray);\n  for (var i = 0; i < props.length; i++) {\n    this.setProperty(pseudoArray, props[i], nativeArray[props[i]]);\n  }\n  return pseudoArray;\n};\n\n/**\n * Converts from a JS interpreter array to native JS array.\n * Does handle non-numeric properties (like str.match's index prop).\n * Does NOT recurse into the array's contents.\n * @param {!Interpreter.Object} pseudoArray The JS interpreter array,\n *     or JS interpreter object pretending to be an array.\n * @return {!Array} The equivalent native JS array.\n */\nInterpreter.prototype.arrayPseudoToNative = function (pseudoArray) {\n  var nativeArray = [];\n  for (var key in pseudoArray.properties) {\n    nativeArray[key] = this.getProperty(pseudoArray, key);\n  }\n  // pseudoArray might be an object pretending to be an array.  In this case\n  // it's possible that length is non-existent, invalid, or smaller than the\n  // largest defined numeric property.  Set length explicitly here.\n  nativeArray.length = Interpreter.legalArrayLength(this.getProperty(pseudoArray, \"length\")) || 0;\n  return nativeArray;\n};\n\n/**\n * Look up the prototype for this value.\n * @param {Interpreter.Value} value Data object.\n * @return {Interpreter.Object} Prototype object, null if none.\n */\nInterpreter.prototype.getPrototype = function (value) {\n  switch (typeof value) {\n    case \"number\":\n      return this.NUMBER.properties[\"prototype\"];\n    case \"boolean\":\n      return this.BOOLEAN.properties[\"prototype\"];\n    case \"string\":\n      return this.STRING.properties[\"prototype\"];\n  }\n  if (value) {\n    return value.proto;\n  }\n  return null;\n};\n\n/**\n * Fetch a property value from a data object.\n * @param {Interpreter.Value} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @param {Acorn AST Node} node Node that triggered this function. Used by Bitburner for getting error line numbers\n * @return {Interpreter.Value} Property value (may be undefined).\n */\nInterpreter.prototype.getProperty = function (obj, name, node) {\n  name = String(name);\n  if (obj === undefined || obj === null) {\n    let lineNum;\n    if (node != null && node.loc != null && node.loc.start != null) {\n      lineNum = node.loc.start.line;\n    }\n    this.throwException(this.TYPE_ERROR, \"Cannot read property '\" + name + \"' of \" + obj, lineNum);\n  }\n  if (name === \"length\") {\n    // Special cases for magic length property.\n    if (this.isa(obj, this.STRING)) {\n      return String(obj).length;\n    }\n  } else if (name.charCodeAt(0) < 0x40) {\n    // Might have numbers in there?\n    // Special cases for string array indexing\n    if (this.isa(obj, this.STRING)) {\n      var n = Interpreter.legalArrayIndex(name);\n      if (!isNaN(n) && n < String(obj).length) {\n        return String(obj)[n];\n      }\n    }\n  }\n  do {\n    if (obj.properties && name in obj.properties) {\n      var getter = obj.getter[name];\n      if (getter) {\n        // Flag this function as being a getter and thus needing immediate\n        // execution (rather than being the value of the property).\n        getter.isGetter = true;\n        return getter;\n      }\n      return obj.properties[name];\n    }\n  } while ((obj = this.getPrototype(obj)));\n  return undefined;\n};\n\n/**\n * Does the named property exist on a data object.\n * @param {Interpreter.Value} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @return {boolean} True if property exists.\n */\nInterpreter.prototype.hasProperty = function (obj, name) {\n  if (!obj.isObject) {\n    throw TypeError(\"Primitive data type has no properties\");\n  }\n  name = String(name);\n  if (name === \"length\" && this.isa(obj, this.STRING)) {\n    return true;\n  }\n  if (this.isa(obj, this.STRING)) {\n    var n = Interpreter.legalArrayIndex(name);\n    if (!isNaN(n) && n < String(obj).length) {\n      return true;\n    }\n  }\n  do {\n    if (obj.properties && name in obj.properties) {\n      return true;\n    }\n  } while ((obj = this.getPrototype(obj)));\n  return false;\n};\n\n/**\n * Set a property value on a data object.\n * @param {!Interpreter.Object} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @param {Interpreter.Value} value New property value.\n *     Use Interpreter.VALUE_IN_DESCRIPTOR if value is handled by\n *     descriptor instead.\n * @param {Object=} opt_descriptor Optional descriptor object.\n * @return {!Interpreter.Object|undefined} Returns a setter function if one\n *     needs to be called, otherwise undefined.\n */\nInterpreter.prototype.setProperty = function (obj, name, value, opt_descriptor) {\n  name = String(name);\n  if (obj === undefined || obj === null) {\n    this.throwException(this.TYPE_ERROR, \"Cannot set property '\" + name + \"' of \" + obj);\n  }\n  if (\n    opt_descriptor &&\n    (\"get\" in opt_descriptor || \"set\" in opt_descriptor) &&\n    (\"value\" in opt_descriptor || \"writable\" in opt_descriptor)\n  ) {\n    this.throwException(\n      this.TYPE_ERROR,\n      \"Invalid property descriptor. \" + \"Cannot both specify accessors and a value or writable attribute\",\n    );\n  }\n  var strict = !this.stateStack || this.getScope().strict;\n  if (!obj.isObject) {\n    if (strict) {\n      this.throwException(this.TYPE_ERROR, \"Can't create property '\" + name + \"' on '\" + obj + \"'\");\n    }\n    return;\n  }\n  if (this.isa(obj, this.STRING)) {\n    var n = Interpreter.legalArrayIndex(name);\n    if (name === \"length\" || (!isNaN(n) && n < String(obj).length)) {\n      // Can't set length or letters on String objects.\n      if (strict) {\n        this.throwException(\n          this.TYPE_ERROR,\n          \"Cannot assign to read only \" + \"property '\" + name + \"' of String '\" + obj.data + \"'\",\n        );\n      }\n      return;\n    }\n  }\n  if (obj.class === \"Array\") {\n    // Arrays have a magic length variable that is bound to the elements.\n    var length = obj.properties.length;\n    var i;\n    if (name === \"length\") {\n      // Delete elements if length is smaller.\n      if (opt_descriptor) {\n        if (!(\"value\" in opt_descriptor)) {\n          return;\n        }\n        value = opt_descriptor.value;\n      }\n      value = Interpreter.legalArrayLength(value);\n      if (isNaN(value)) {\n        this.throwException(this.RANGE_ERROR, \"Invalid array length\");\n      }\n      if (value < length) {\n        for (i in obj.properties) {\n          i = Interpreter.legalArrayIndex(i);\n          if (!isNaN(i) && value <= i) {\n            delete obj.properties[i];\n          }\n        }\n      }\n    } else if (!isNaN((i = Interpreter.legalArrayIndex(name)))) {\n      // Increase length if this index is larger.\n      obj.properties.length = Math.max(length, i + 1);\n    }\n  }\n  if (obj.preventExtensions && !(name in obj.properties)) {\n    if (strict) {\n      this.throwException(this.TYPE_ERROR, \"Can't add property '\" + name + \"', object is not extensible\");\n    }\n    return;\n  }\n  if (opt_descriptor) {\n    // Define the property.\n    if (\"get\" in opt_descriptor) {\n      if (opt_descriptor.get) {\n        obj.getter[name] = opt_descriptor.get;\n      } else {\n        delete obj.getter[name];\n      }\n    }\n    if (\"set\" in opt_descriptor) {\n      if (opt_descriptor.set) {\n        obj.setter[name] = opt_descriptor.set;\n      } else {\n        delete obj.setter[name];\n      }\n    }\n    var descriptor = {};\n    if (\"configurable\" in opt_descriptor) {\n      descriptor.configurable = opt_descriptor.configurable;\n    }\n    if (\"enumerable\" in opt_descriptor) {\n      descriptor.enumerable = opt_descriptor.enumerable;\n    }\n    if (\"writable\" in opt_descriptor) {\n      descriptor.writable = opt_descriptor.writable;\n      delete obj.getter[name];\n      delete obj.setter[name];\n    }\n    if (\"value\" in opt_descriptor) {\n      descriptor.value = opt_descriptor.value;\n      delete obj.getter[name];\n      delete obj.setter[name];\n    } else if (value !== Interpreter.VALUE_IN_DESCRIPTOR) {\n      descriptor.value = value;\n      delete obj.getter[name];\n      delete obj.setter[name];\n    }\n    try {\n      Object.defineProperty(obj.properties, name, descriptor);\n    } catch (e) {\n      this.throwException(this.TYPE_ERROR, \"Cannot redefine property: \" + name);\n    }\n  } else {\n    // Set the property.\n    if (value === Interpreter.VALUE_IN_DESCRIPTOR) {\n      throw ReferenceError(\"Value not specified.\");\n    }\n    // Determine the parent (possibly self) where the property is defined.\n    var defObj = obj;\n    while (!(name in defObj.properties)) {\n      defObj = this.getPrototype(defObj);\n      if (!defObj) {\n        // This is a new property.\n        defObj = obj;\n        break;\n      }\n    }\n    if (defObj.setter && defObj.setter[name]) {\n      return defObj.setter[name];\n    }\n    if (defObj.getter && defObj.getter[name]) {\n      if (strict) {\n        this.throwException(\n          this.TYPE_ERROR,\n          \"Cannot set property '\" + name + \"' of object '\" + obj + \"' which only has a getter\",\n        );\n      }\n    } else {\n      // No setter, simple assignment.\n      try {\n        obj.properties[name] = value;\n      } catch (e) {\n        if (strict) {\n          this.throwException(\n            this.TYPE_ERROR,\n            \"Cannot assign to read only \" + \"property '\" + name + \"' of object '\" + obj + \"'\",\n          );\n        }\n      }\n    }\n  }\n};\n\n/**\n * Convenience method for adding a native function as a non-enumerable property\n * onto an object's prototype.\n * @param {!Interpreter.Object} obj Data object.\n * @param {Interpreter.Value} name Name of property.\n * @param {!Function} wrapper Function object.\n */\nInterpreter.prototype.setNativeFunctionPrototype = function (obj, name, wrapper) {\n  this.setProperty(\n    obj.properties[\"prototype\"],\n    name,\n    this.createNativeFunction(wrapper, false),\n    Interpreter.NONENUMERABLE_DESCRIPTOR,\n  );\n};\n\n/**\n * Returns the current scope from the stateStack.\n * @return {!Interpreter.Object} Current scope dictionary.\n */\nInterpreter.prototype.getScope = function () {\n  var scope = this.stateStack[this.stateStack.length - 1].scope;\n  if (!scope) {\n    throw Error(\"No scope found.\");\n  }\n  return scope;\n};\n\n/**\n * Create a new scope dictionary.\n * @param {!Object} node AST node defining the scope container\n *     (e.g. a function).\n * @param {Interpreter.Object} parentScope Scope to link to.\n * @return {!Interpreter.Object} New scope.\n */\nInterpreter.prototype.createScope = function (node, parentScope) {\n  var scope = this.createObjectProto(null);\n  scope.parentScope = parentScope;\n  if (!parentScope) {\n    this.initGlobalScope(scope);\n  }\n  this.populateScope_(node, scope);\n\n  // Determine if this scope starts with 'use strict'.\n  scope.strict = false;\n  if (parentScope && parentScope.strict) {\n    scope.strict = true;\n  } else {\n    var firstNode = node[\"body\"] && node[\"body\"][0];\n    if (\n      firstNode &&\n      firstNode.expression &&\n      firstNode.expression[\"type\"] === \"Literal\" &&\n      firstNode.expression.value === \"use strict\"\n    ) {\n      scope.strict = true;\n    }\n  }\n  return scope;\n};\n\n/**\n * Create a new special scope dictionary. Similar to createScope(), but\n * doesn't assume that the scope is for a function body.\n * This is used for 'catch' clauses and 'with' statements.\n * @param {!Interpreter.Object} parentScope Scope to link to.\n * @param {Interpreter.Object=} opt_scope Optional object to transform into\n *     scope.\n * @return {!Interpreter.Object} New scope.\n */\nInterpreter.prototype.createSpecialScope = function (parentScope, opt_scope) {\n  if (!parentScope) {\n    throw Error(\"parentScope required\");\n  }\n  var scope = opt_scope || this.createObjectProto(null);\n  scope.parentScope = parentScope;\n  scope.strict = parentScope.strict;\n  return scope;\n};\n\n/**\n * Retrieves a value from the scope chain.\n * @param {string} name Name of variable.\n * @param {Acorn AST Node} node Node that triggered this function. Used by Bitburner for getting error line number\n * @return {Interpreter.Value} Any value.\n *   May be flagged as being a getter and thus needing immediate execution\n *   (rather than being the value of the property).\n */\nInterpreter.prototype.getValueFromScope = function (name, node) {\n  var scope = this.getScope();\n  while (scope && scope !== this.global) {\n    if (name in scope.properties) {\n      return scope.properties[name];\n    }\n    scope = scope.parentScope;\n  }\n  // The root scope is also an object which has inherited properties and\n  // could also have getters.\n  if (scope === this.global && this.hasProperty(scope, name)) {\n    return this.getProperty(scope, name);\n  }\n  // Typeof operator is unique: it can safely look at non-defined variables.\n  var prevNode = this.stateStack[this.stateStack.length - 1].node;\n  if (prevNode[\"type\"] === \"UnaryExpression\" && prevNode[\"operator\"] === \"typeof\") {\n    return undefined;\n  }\n\n  var lineNum;\n  if (node != null && node.loc != null && node.loc.start != null) {\n    lineNum = node.loc.start.line;\n  }\n  this.throwException(this.REFERENCE_ERROR, name + \" is not defined\", lineNum);\n};\n\n/**\n * Sets a value to the current scope.\n * @param {string} name Name of variable.\n * @param {Interpreter.Value} value Value.\n * @return {!Interpreter.Object|undefined} Returns a setter function if one\n *     needs to be called, otherwise undefined.\n */\nInterpreter.prototype.setValueToScope = function (name, value) {\n  var scope = this.getScope();\n  var strict = scope.strict;\n  while (scope && scope !== this.global) {\n    if (name in scope.properties) {\n      scope.properties[name] = value;\n      return undefined;\n    }\n    scope = scope.parentScope;\n  }\n  // The root scope is also an object which has readonly properties and\n  // could also have setters.\n  if (scope === this.global && (!strict || this.hasProperty(scope, name))) {\n    return this.setProperty(scope, name, value);\n  }\n  this.throwException(this.REFERENCE_ERROR, name + \" is not defined\");\n};\n\n/**\n * Create a new scope for the given node.\n * @param {!Object} node AST node (program or function).\n * @param {!Interpreter.Object} scope Scope dictionary to populate.\n * @private\n */\nInterpreter.prototype.populateScope_ = function (node, scope) {\n  if (node[\"type\"] === \"VariableDeclaration\") {\n    for (var i = 0; i < node[\"declarations\"].length; i++) {\n      this.setProperty(scope, node[\"declarations\"][i][\"id\"][\"name\"], undefined, Interpreter.VARIABLE_DESCRIPTOR);\n    }\n  } else if (node[\"type\"] === \"FunctionDeclaration\") {\n    this.setProperty(scope, node[\"id\"][\"name\"], this.createFunction(node, scope), Interpreter.VARIABLE_DESCRIPTOR);\n    return; // Do not recurse into function.\n  } else if (node[\"type\"] === \"FunctionExpression\") {\n    return; // Do not recurse into function.\n  } else if (node[\"type\"] === \"ExpressionStatement\") {\n    return; // Expressions can't contain variable/function declarations.\n  }\n  var nodeClass = node[\"constructor\"];\n  for (var name in node) {\n    var prop = node[name];\n    if (prop && typeof prop === \"object\") {\n      if (Array.isArray(prop)) {\n        for (var i = 0; i < prop.length; i++) {\n          if (prop[i] && prop[i].constructor === nodeClass) {\n            this.populateScope_(prop[i], scope);\n          }\n        }\n      } else {\n        if (prop.constructor === nodeClass) {\n          this.populateScope_(prop, scope);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Remove start and end values from AST, or set start and end values to a\n * constant value.  Used to remove highlighting from polyfills and to set\n * highlighting in an eval to cover the entire eval expression.\n * @param {!Object} node AST node.\n * @param {number=} start Starting character of all nodes, or undefined.\n * @param {number=} end Ending character of all nodes, or undefined.\n * @private\n */\nInterpreter.prototype.stripLocations_ = function (node, start, end) {\n  if (start) {\n    node[\"start\"] = start;\n  } else {\n    delete node[\"start\"];\n  }\n  if (end) {\n    node[\"end\"] = end;\n  } else {\n    delete node[\"end\"];\n  }\n  for (var name in node) {\n    if (node.hasOwnProperty(name)) {\n      var prop = node[name];\n      if (prop && typeof prop === \"object\") {\n        this.stripLocations_(prop, start, end);\n      }\n    }\n  }\n};\n\n/**\n * Is the current state directly being called with as a construction with 'new'.\n * @return {boolean} True if 'new foo()', false if 'foo()'.\n */\nInterpreter.prototype.calledWithNew = function () {\n  return this.stateStack[this.stateStack.length - 1].isConstructor;\n};\n\n/**\n * Gets a value from the scope chain or from an object property.\n * @param {!Array} ref Name of variable or object/propname tuple.\n * @param {Acorn AST Node} node Node that triggered this function. Used by Bitburner for getting error line number\n * @return {Interpreter.Value} Any value.\n *   May be flagged as being a getter and thus needing immediate execution\n *   (rather than being the value of the property).\n */\nInterpreter.prototype.getValue = function (ref, node) {\n  if (ref[0] === Interpreter.SCOPE_REFERENCE) {\n    // A null/varname variable lookup.\n    return this.getValueFromScope(ref[1], node);\n  } else {\n    // An obj/prop components tuple (foo.bar).\n    return this.getProperty(ref[0], ref[1], node);\n  }\n};\n\n/**\n * Sets a value to the scope chain or to an object property.\n * @param {!Array} ref Name of variable or object/propname tuple.\n * @param {Interpreter.Value} value Value.\n * @return {!Interpreter.Object|undefined} Returns a setter function if one\n *     needs to be called, otherwise undefined.\n */\nInterpreter.prototype.setValue = function (ref, value) {\n  if (ref[0] === Interpreter.SCOPE_REFERENCE) {\n    // A null/varname variable lookup.\n    return this.setValueToScope(ref[1], value);\n  } else {\n    // An obj/prop components tuple (foo.bar).\n    return this.setProperty(ref[0], ref[1], value);\n  }\n};\n\n/**\n * Completion Value Types.\n * @enum {number}\n */\nInterpreter.Completion = {\n  NORMAL: 0,\n  BREAK: 1,\n  CONTINUE: 2,\n  RETURN: 3,\n  THROW: 4,\n};\n\n/**\n * Throw an exception in the interpreter that can be handled by an\n * interpreter try/catch statement.  If unhandled, a real exception will\n * be thrown.  Can be called with either an error class and a message, or\n * with an actual object to be thrown.\n * @param {!Interpreter.Object} errorClass Type of error (if message is\n *   provided) or the value to throw (if no message).\n * @param {string=} opt_message Message being thrown.\n */\nInterpreter.prototype.throwException = function (errorClass, opt_message, lineNumber) {\n  if (opt_message === undefined) {\n    var error = errorClass; // This is a value to throw, not an error class.\n  } else {\n    var error = this.createObject(errorClass);\n    this.setProperty(error, \"message\", opt_message, Interpreter.NONENUMERABLE_DESCRIPTOR);\n  }\n  var lineNumErrorMsg;\n  if (lineNumber != null) {\n    lineNumErrorMsg = this.getErrorLineNumberMessage(lineNumber);\n  }\n  this.unwind(Interpreter.Completion.THROW, error, undefined, lineNumErrorMsg);\n  // Abort anything related to the current step.\n  throw Interpreter.STEP_ERROR;\n};\n\n/**\n * Unwind the stack to the innermost relevant enclosing TryStatement,\n * For/ForIn/WhileStatement or Call/NewExpression.  If this results in\n * the stack being completely unwound the thread will be terminated\n * and the appropriate error being thrown.\n * @param {Interpreter.Completion} type Completion type.\n * @param {Interpreter.Value=} value Value computed, returned or thrown.\n * @param {string=} label Target label for break or return.\n */\nInterpreter.prototype.unwind = function (type, value, label, lineNumberMsg = \"\") {\n  if (type === Interpreter.Completion.NORMAL) {\n    throw TypeError(\"Should not unwind for NORMAL completions\");\n  }\n\n  for (var stack = this.stateStack; stack.length > 0; stack.pop()) {\n    var state = stack[stack.length - 1];\n    switch (state.node[\"type\"]) {\n      case \"TryStatement\":\n        state.cv = { type: type, value: value, label: label };\n        return;\n      case \"CallExpression\":\n      case \"NewExpression\":\n        if (type === Interpreter.Completion.RETURN) {\n          state.value = value;\n          return;\n        } else if (type !== Interpreter.Completion.THROW) {\n          throw Error(\"Unsynatctic break/continue not rejected by Acorn\");\n        }\n    }\n    if (type === Interpreter.Completion.BREAK) {\n      if (label ? state.labels && state.labels.indexOf(label) !== -1 : state.isLoop || state.isSwitch) {\n        stack.pop();\n        return;\n      }\n    } else if (type === Interpreter.Completion.CONTINUE) {\n      if (label ? state.labels && state.labels.indexOf(label) !== -1 : state.isLoop) {\n        return;\n      }\n    }\n  }\n\n  // Unhandled completion.  Throw a real error.\n  var realError;\n  if (this.isa(value, this.ERROR)) {\n    var errorTable = {\n      EvalError: EvalError,\n      RangeError: RangeError,\n      ReferenceError: ReferenceError,\n      SyntaxError: SyntaxError,\n      TypeError: TypeError,\n      URIError: URIError,\n    };\n    var name = this.getProperty(value, \"name\").toString();\n    var message = this.getProperty(value, \"message\").valueOf();\n    var type = errorTable[name] || Error;\n    realError = type(message + lineNumberMsg);\n  } else {\n    realError = String(value) + lineNumberMsg;\n  }\n  throw realError;\n};\n\n/**\n * Create a call to a getter function.\n * @param {!Interpreter.Object} func Function to execute.\n * @param {!Interpreter.Object|!Array} left\n *     Name of variable or object/propname tuple.\n * @private\n */\nInterpreter.prototype.createGetter_ = function (func, left) {\n  // Normally 'this' will be specified as the object component (o.x).\n  // Sometimes 'this' is explicitly provided (o).\n  var funcThis = Array.isArray(left) ? left[0] : left;\n  var node = new this.nodeConstructor();\n  node[\"type\"] = \"CallExpression\";\n  var state = new Interpreter.State(node, this.stateStack[this.stateStack.length - 1].scope);\n  state.doneCallee_ = true;\n  state.funcThis_ = funcThis;\n  state.func_ = func;\n  state.doneArgs_ = true;\n  state.arguments_ = [];\n  return state;\n};\n\n/**\n * Create a call to a setter function.\n * @param {!Interpreter.Object} func Function to execute.\n * @param {!Interpreter.Object|!Array} left\n *     Name of variable or object/propname tuple.\n * @param {Interpreter.Value} value Value to set.\n * @private\n */\nInterpreter.prototype.createSetter_ = function (func, left, value) {\n  // Normally 'this' will be specified as the object component (o.x).\n  // Sometimes 'this' is implicitly the global object (x).\n  var funcThis = Array.isArray(left) ? left[0] : this.global;\n  var node = new this.nodeConstructor();\n  node[\"type\"] = \"CallExpression\";\n  var state = new Interpreter.State(node, this.stateStack[this.stateStack.length - 1].scope);\n  state.doneCallee_ = true;\n  state.funcThis_ = funcThis;\n  state.func_ = func;\n  state.doneArgs_ = true;\n  state.arguments_ = [value];\n  return state;\n};\n\n/**\n * Class for a state.\n * @param {!Object} node AST node for the state.\n * @param {!Interpreter.Object} scope Scope object for the state.\n * @constructor\n */\nInterpreter.State = function (node, scope) {\n  this.node = node;\n  this.scope = scope;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// Functions to handle each node type.\n///////////////////////////////////////////////////////////////////////////////\n\nInterpreter.prototype[\"stepArrayExpression\"] = function (stack, state, node) {\n  var elements = node[\"elements\"];\n  var n = state.n_ || 0;\n  if (!state.array_) {\n    state.array_ = this.createObjectProto(this.ARRAY_PROTO);\n    state.array_.properties.length = elements.length;\n  } else {\n    this.setProperty(state.array_, n, state.value);\n    n++;\n  }\n  while (n < elements.length) {\n    // Skip missing elements - they're not defined, not undefined.\n    if (elements[n]) {\n      state.n_ = n;\n      return new Interpreter.State(elements[n], state.scope);\n    }\n    n++;\n  }\n  stack.pop();\n  stack[stack.length - 1].value = state.array_;\n};\n\nInterpreter.prototype[\"stepAssignmentExpression\"] = function (stack, state, node) {\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    var nextState = new Interpreter.State(node[\"left\"], state.scope);\n    nextState.components = true;\n    return nextState;\n  }\n  if (!state.doneRight_) {\n    if (!state.leftReference_) {\n      state.leftReference_ = state.value;\n    }\n    if (state.doneGetter_) {\n      state.leftValue_ = state.value;\n    }\n    if (!state.doneGetter_ && node[\"operator\"] !== \"=\") {\n      var leftValue = this.getValue(state.leftReference_, node);\n      state.leftValue_ = leftValue;\n      if (leftValue && typeof leftValue === \"object\" && leftValue.isGetter) {\n        // Clear the getter flag and call the getter function.\n        leftValue.isGetter = false;\n        state.doneGetter_ = true;\n        var func = /** @type {!Interpreter.Object} */ (leftValue);\n        return this.createGetter_(func, state.leftReference_);\n      }\n    }\n    state.doneRight_ = true;\n    return new Interpreter.State(node[\"right\"], state.scope);\n  }\n  if (state.doneSetter_) {\n    // Return if setter function.\n    // Setter method on property has completed.\n    // Ignore its return value, and use the original set value instead.\n    stack.pop();\n    stack[stack.length - 1].value = state.setterValue_;\n    return;\n  }\n  var value = state.leftValue_;\n  var rightValue = state.value;\n  switch (node[\"operator\"]) {\n    case \"=\":\n      value = rightValue;\n      break;\n    case \"+=\":\n      value += rightValue;\n      break;\n    case \"-=\":\n      value -= rightValue;\n      break;\n    case \"*=\":\n      value *= rightValue;\n      break;\n    case \"/=\":\n      value /= rightValue;\n      break;\n    case \"%=\":\n      value %= rightValue;\n      break;\n    case \"<<=\":\n      value <<= rightValue;\n      break;\n    case \">>=\":\n      value >>= rightValue;\n      break;\n    case \">>>=\":\n      value >>>= rightValue;\n      break;\n    case \"&=\":\n      value &= rightValue;\n      break;\n    case \"^=\":\n      value ^= rightValue;\n      break;\n    case \"|=\":\n      value |= rightValue;\n      break;\n    default:\n      throw SyntaxError(\"Unknown assignment expression: \" + node[\"operator\"]);\n  }\n  var setter = this.setValue(state.leftReference_, value);\n  if (setter) {\n    state.doneSetter_ = true;\n    state.setterValue_ = value;\n    return this.createSetter_(setter, state.leftReference_, value);\n  }\n  // Return if no setter function.\n  stack.pop();\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype[\"stepBinaryExpression\"] = function (stack, state, node) {\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    return new Interpreter.State(node[\"left\"], state.scope);\n  }\n  if (!state.doneRight_) {\n    state.doneRight_ = true;\n    state.leftValue_ = state.value;\n    return new Interpreter.State(node[\"right\"], state.scope);\n  }\n  stack.pop();\n  var leftValue = state.leftValue_;\n  var rightValue = state.value;\n  var value;\n  switch (node[\"operator\"]) {\n    case \"==\":\n      value = leftValue == rightValue;\n      break;\n    case \"!=\":\n      value = leftValue != rightValue;\n      break;\n    case \"===\":\n      value = leftValue === rightValue;\n      break;\n    case \"!==\":\n      value = leftValue !== rightValue;\n      break;\n    case \">\":\n      value = leftValue > rightValue;\n      break;\n    case \">=\":\n      value = leftValue >= rightValue;\n      break;\n    case \"<\":\n      value = leftValue < rightValue;\n      break;\n    case \"<=\":\n      value = leftValue <= rightValue;\n      break;\n    case \"+\":\n      value = leftValue + rightValue;\n      break;\n    case \"-\":\n      value = leftValue - rightValue;\n      break;\n    case \"*\":\n      value = leftValue * rightValue;\n      break;\n    case \"/\":\n      value = leftValue / rightValue;\n      break;\n    case \"%\":\n      value = leftValue % rightValue;\n      break;\n    case \"&\":\n      value = leftValue & rightValue;\n      break;\n    case \"|\":\n      value = leftValue | rightValue;\n      break;\n    case \"^\":\n      value = leftValue ^ rightValue;\n      break;\n    case \"<<\":\n      value = leftValue << rightValue;\n      break;\n    case \">>\":\n      value = leftValue >> rightValue;\n      break;\n    case \">>>\":\n      value = leftValue >>> rightValue;\n      break;\n    case \"in\":\n      if (!rightValue || !rightValue.isObject) {\n        let lineNum = this.getErrorLineNumber(node);\n        this.throwException(this.TYPE_ERROR, \"'in' expects an object, not '\" + rightValue + \"'\", lineNum);\n      }\n      value = this.hasProperty(rightValue, leftValue);\n      break;\n    case \"instanceof\":\n      if (!this.isa(rightValue, this.FUNCTION)) {\n        let lineNum = this.getErrorLineNumber(node);\n        this.throwException(this.TYPE_ERROR, \"Right-hand side of instanceof is not an object\", lineNum);\n      }\n      value = leftValue.isObject ? this.isa(leftValue, rightValue) : false;\n      break;\n    default:\n      throw SyntaxError(\"Unknown binary operator: \" + node[\"operator\"]);\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype[\"stepBlockStatement\"] = function (stack, state, node) {\n  var n = state.n_ || 0;\n  var expression = node[\"body\"][n];\n  if (expression) {\n    state.n_ = n + 1;\n    return new Interpreter.State(expression, state.scope);\n  }\n  stack.pop();\n};\n\nInterpreter.prototype[\"stepBreakStatement\"] = function (stack, state, node) {\n  var label = node[\"label\"] && node[\"label\"][\"name\"];\n  this.unwind(Interpreter.Completion.BREAK, undefined, label);\n};\n\nInterpreter.prototype[\"stepCallExpression\"] = function (stack, state, node) {\n  if (!state.doneCallee_) {\n    state.doneCallee_ = 1;\n    // Components needed to determine value of 'this'.\n    var nextState = new Interpreter.State(node[\"callee\"], state.scope);\n    nextState.components = true;\n    return nextState;\n  }\n  if (state.doneCallee_ === 1) {\n    // Determine value of the function.\n    state.doneCallee_ = 2;\n    var func = state.value;\n    if (Array.isArray(func)) {\n      state.func_ = this.getValue(func, node);\n      if (func[0] === Interpreter.SCOPE_REFERENCE) {\n        // (Globally or locally) named function.  Is it named 'eval'?\n        state.directEval_ = func[1] === \"eval\";\n      } else {\n        // Method function, 'this' is object (ignored if invoked as 'new').\n        state.funcThis_ = func[0];\n      }\n      func = state.func_;\n      if (func && typeof func === \"object\" && func.isGetter) {\n        // Clear the getter flag and call the getter function.\n        func.isGetter = false;\n        state.doneCallee_ = 1;\n        return this.createGetter_(/** @type {!Interpreter.Object} */ (func), state.value);\n      }\n    } else {\n      // Already evaluated function: (function(){...})();\n      state.func_ = func;\n    }\n    state.arguments_ = [];\n    state.n_ = 0;\n  }\n  var func = state.func_;\n  if (!state.doneArgs_) {\n    if (state.n_ !== 0) {\n      state.arguments_.push(state.value);\n    }\n    if (node[\"arguments\"][state.n_]) {\n      return new Interpreter.State(node[\"arguments\"][state.n_++], state.scope);\n    }\n    // Determine value of 'this' in function.\n    if (node[\"type\"] === \"NewExpression\") {\n      if (func.illegalConstructor) {\n        // Illegal: new escape();\n        let lineNum = this.getErrorLineNumber(node);\n        this.throwException(this.TYPE_ERROR, func + \" is not a constructor\", lineNum);\n      }\n      // Constructor, 'this' is new object.\n      var proto = func.properties[\"prototype\"];\n      if (typeof proto !== \"object\" || proto === null) {\n        // Non-object prototypes default to Object.prototype.\n        proto = this.OBJECT_PROTO;\n      }\n      state.funcThis_ = this.createObjectProto(proto);\n      state.isConstructor = true;\n    } else if (state.funcThis_ === undefined) {\n      // Global function, 'this' is global object (or 'undefined' if strict).\n      state.funcThis_ = state.scope.strict ? undefined : this.global;\n    }\n    state.doneArgs_ = true;\n  }\n  if (!state.doneExec_) {\n    state.doneExec_ = true;\n    if (!func || !func.isObject) {\n      let lineNum = this.getErrorLineNumber(node);\n      this.throwException(this.TYPE_ERROR, func + \" is not a function\", lineNum);\n    }\n    var funcNode = func.node;\n    if (funcNode) {\n      var scope = this.createScope(funcNode[\"body\"], func.parentScope);\n      // Add all arguments.\n      for (var i = 0; i < funcNode[\"params\"].length; i++) {\n        var paramName = funcNode[\"params\"][i][\"name\"];\n        var paramValue = state.arguments_.length > i ? state.arguments_[i] : undefined;\n        this.setProperty(scope, paramName, paramValue);\n      }\n      // Build arguments variable.\n      var argsList = this.createObjectProto(this.ARRAY_PROTO);\n      for (var i = 0; i < state.arguments_.length; i++) {\n        this.setProperty(argsList, i, state.arguments_[i]);\n      }\n      this.setProperty(scope, \"arguments\", argsList);\n      // Add the function's name (var x = function foo(){};)\n      var name = funcNode[\"id\"] && funcNode[\"id\"][\"name\"];\n      if (name) {\n        this.setProperty(scope, name, func);\n      }\n      this.setProperty(scope, \"this\", state.funcThis_, Interpreter.READONLY_DESCRIPTOR);\n      state.value = undefined; // Default value if no explicit return.\n      return new Interpreter.State(funcNode[\"body\"], scope);\n    } else if (func.eval) {\n      var code = state.arguments_[0];\n      if (typeof code !== \"string\") {\n        // JS does not parse String objects:\n        // eval(new String('1 + 1')) -> '1 + 1'\n        state.value = code;\n      } else {\n        try {\n          var ast = acorn.parse(code.toString(), Interpreter.PARSE_OPTIONS);\n        } catch (e) {\n          // Acorn threw a SyntaxError.  Rethrow as a trappable error.\n          let lineNum = this.getErrorLineNumber(node);\n          this.throwException(this.SYNTAX_ERROR, \"Invalid code: \" + e.message, lineNum);\n        }\n        var evalNode = new this.nodeConstructor();\n        evalNode[\"type\"] = \"EvalProgram_\";\n        evalNode[\"body\"] = ast[\"body\"];\n        this.stripLocations_(evalNode, node[\"start\"], node[\"end\"]);\n        // Create new scope and update it with definitions in eval().\n        var scope = state.directEval_ ? state.scope : this.global;\n        if (scope.strict) {\n          // Strict mode get its own scope in eval.\n          scope = this.createScope(ast, scope);\n        } else {\n          // Non-strict mode pollutes the current scope.\n          this.populateScope_(ast, scope);\n        }\n        this.value = undefined; // Default value if no code.\n        return new Interpreter.State(evalNode, scope);\n      }\n    } else if (func.nativeFunc) {\n      state.value = func.nativeFunc.apply(state.funcThis_, state.arguments_);\n    } else if (func.asyncFunc) {\n      var thisInterpreter = this;\n      var callback = function (value) {\n        state.value = value;\n        thisInterpreter.paused_ = false;\n      };\n      var argsWithCallback = state.arguments_.concat(callback);\n      this.paused_ = true;\n      func.asyncFunc.apply(state.funcThis_, argsWithCallback);\n      return;\n    } else {\n      /* A child of a function is a function but is not callable.  For example:\n      var F = function() {};\n      F.prototype = escape;\n      var f = new F();\n      f();\n      */\n      let lineNum = this.getErrorLineNumber(node);\n      this.throwException(this.TYPE_ERROR, func.class + \" is not a function\", lineNum);\n    }\n  } else {\n    // Execution complete.  Put the return value on the stack.\n    stack.pop();\n    if (state.isConstructor && typeof state.value !== \"object\") {\n      stack[stack.length - 1].value = state.funcThis_;\n    } else {\n      stack[stack.length - 1].value = state.value;\n    }\n  }\n};\n\nInterpreter.prototype[\"stepCatchClause\"] = function (stack, state, node) {\n  if (!state.done_) {\n    state.done_ = true;\n    // Create an empty scope.\n    var scope = this.createSpecialScope(state.scope);\n    // Add the argument.\n    this.setProperty(scope, node[\"param\"][\"name\"], state.throwValue);\n    // Execute catch clause.\n    return new Interpreter.State(node[\"body\"], scope);\n  } else {\n    stack.pop();\n  }\n};\n\nInterpreter.prototype[\"stepConditionalExpression\"] = function (stack, state, node) {\n  var mode = state.mode_ || 0;\n  if (mode === 0) {\n    state.mode_ = 1;\n    return new Interpreter.State(node[\"test\"], state.scope);\n  }\n  if (mode === 1) {\n    state.mode_ = 2;\n    var value = Boolean(state.value);\n    if (value && node[\"consequent\"]) {\n      // Execute 'if' block.\n      return new Interpreter.State(node[\"consequent\"], state.scope);\n    } else if (!value && node[\"alternate\"]) {\n      // Execute 'else' block.\n      return new Interpreter.State(node[\"alternate\"], state.scope);\n    }\n    // eval('1;if(false){2}') -> undefined\n    this.value = undefined;\n  }\n  stack.pop();\n  if (node[\"type\"] === \"ConditionalExpression\") {\n    stack[stack.length - 1].value = state.value;\n  }\n};\n\nInterpreter.prototype[\"stepContinueStatement\"] = function (stack, state, node) {\n  var label = node[\"label\"] && node[\"label\"][\"name\"];\n  this.unwind(Interpreter.Completion.CONTINUE, undefined, label);\n};\n\nInterpreter.prototype[\"stepDebuggerStatement\"] = function (stack, state, node) {\n  // Do nothing.  May be overridden by developers.\n  stack.pop();\n};\n\nInterpreter.prototype[\"stepDoWhileStatement\"] = function (stack, state, node) {\n  if (node[\"type\"] === \"DoWhileStatement\" && state.test_ === undefined) {\n    // First iteration of do/while executes without checking test.\n    state.value = true;\n    state.test_ = true;\n  }\n  if (!state.test_) {\n    state.test_ = true;\n    return new Interpreter.State(node[\"test\"], state.scope);\n  }\n  if (!state.value) {\n    // Done, exit loop.\n    stack.pop();\n  } else if (node[\"body\"]) {\n    // Execute the body.\n    state.test_ = false;\n    state.isLoop = true;\n    return new Interpreter.State(node[\"body\"], state.scope);\n  }\n};\n\nInterpreter.prototype[\"stepEmptyStatement\"] = function (stack, state, node) {\n  stack.pop();\n};\n\nInterpreter.prototype[\"stepEvalProgram_\"] = function (stack, state, node) {\n  var n = state.n_ || 0;\n  var expression = node[\"body\"][n];\n  if (expression) {\n    state.n_ = n + 1;\n    return new Interpreter.State(expression, state.scope);\n  }\n  stack.pop();\n  stack[stack.length - 1].value = this.value;\n};\n\nInterpreter.prototype[\"stepExpressionStatement\"] = function (stack, state, node) {\n  if (!state.done_) {\n    state.done_ = true;\n    return new Interpreter.State(node[\"expression\"], state.scope);\n  }\n  stack.pop();\n  // Save this value to interpreter.value for use as a return value if\n  // this code is inside an eval function.\n  this.value = state.value;\n};\n\nInterpreter.prototype[\"stepForInStatement\"] = function (stack, state, node) {\n  // First, initialize a variable if exists.  Only do so once, ever.\n  if (!state.doneInit_) {\n    state.doneInit_ = true;\n    if (node[\"left\"][\"declarations\"] && node[\"left\"][\"declarations\"][0][\"init\"]) {\n      if (state.scope.strict) {\n        let lineNum = this.getErrorLineNumber(node);\n        this.throwException(\n          this.SYNTAX_ERROR,\n          \"for-in loop variable declaration may not have an initializer.\",\n          lineNum,\n        );\n      }\n      // Variable initialization: for (var x = 4 in y)\n      return new Interpreter.State(node[\"left\"], state.scope);\n    }\n  }\n  // Second, look up the object.  Only do so once, ever.\n  if (!state.doneObject_) {\n    state.doneObject_ = true;\n    if (!state.variable_) {\n      state.variable_ = state.value;\n    }\n    return new Interpreter.State(node[\"right\"], state.scope);\n  }\n  if (!state.isLoop) {\n    // First iteration.\n    state.isLoop = true;\n    state.object_ = state.value;\n    state.visited_ = Object.create(null);\n  }\n  // Third, find the property name for this iteration.\n  if (state.name_ === undefined) {\n    gotPropName: while (true) {\n      if (state.object_ && state.object_.isObject) {\n        if (!state.props_) {\n          state.props_ = Object.getOwnPropertyNames(state.object_.properties);\n        }\n        while (true) {\n          var prop = state.props_.shift();\n          if (prop === undefined) {\n            break; // Reached end of this object's properties.\n          }\n          if (!Object.prototype.hasOwnProperty.call(state.object_.properties, prop)) {\n            continue; // Property has been deleted in the loop.\n          }\n          if (state.visited_[prop]) {\n            continue; // Already seen this property on a child.\n          }\n          state.visited_[prop] = true;\n          if (!Object.prototype.propertyIsEnumerable.call(state.object_.properties, prop)) {\n            continue; // Skip non-enumerable property.\n          }\n          state.name_ = prop;\n          break gotPropName;\n        }\n      } else if (state.object_ !== null && state.object_ !== undefined) {\n        // Primitive value (other than null or undefined).\n        if (!state.props_) {\n          state.props_ = Object.getOwnPropertyNames(state.object_);\n        }\n        while (true) {\n          var prop = state.props_.shift();\n          if (prop === undefined) {\n            break; // Reached end of this value's properties.\n          }\n          state.visited_[prop] = true;\n          if (!Object.prototype.propertyIsEnumerable.call(state.object_, prop)) {\n            continue; // Skip non-enumerable property.\n          }\n          state.name_ = prop;\n          break gotPropName;\n        }\n      }\n      state.object_ = this.getPrototype(state.object_);\n      state.props_ = null;\n      if (state.object_ === null) {\n        // Done, exit loop.\n        stack.pop();\n        return;\n      }\n    }\n  }\n  // Fourth, find the variable\n  if (!state.doneVariable_) {\n    state.doneVariable_ = true;\n    var left = node[\"left\"];\n    if (left[\"type\"] === \"VariableDeclaration\") {\n      // Inline variable declaration: for (var x in y)\n      state.variable_ = [Interpreter.SCOPE_REFERENCE, left[\"declarations\"][0][\"id\"][\"name\"]];\n    } else {\n      // Arbitrary left side: for (foo().bar in y)\n      state.variable_ = null;\n      var nextState = new Interpreter.State(left, state.scope);\n      nextState.components = true;\n      return nextState;\n    }\n  }\n  if (!state.variable_) {\n    state.variable_ = state.value;\n  }\n  // Fifth, set the variable.\n  if (!state.doneSetter_) {\n    state.doneSetter_ = true;\n    var value = state.name_;\n    var setter = this.setValue(state.variable_, value);\n    if (setter) {\n      return this.createSetter_(setter, state.variable_, value);\n    }\n  }\n  // Next step will be step three.\n  state.name_ = undefined;\n  // Reevaluate the variable since it could be a setter on the global object.\n  state.doneVariable_ = false;\n  state.doneSetter_ = false;\n  // Sixth and finally, execute the body if there was one.  this.\n  if (node[\"body\"]) {\n    return new Interpreter.State(node[\"body\"], state.scope);\n  }\n};\n\nInterpreter.prototype[\"stepForStatement\"] = function (stack, state, node) {\n  var mode = state.mode_ || 0;\n  if (mode === 0) {\n    state.mode_ = 1;\n    if (node[\"init\"]) {\n      return new Interpreter.State(node[\"init\"], state.scope);\n    }\n  } else if (mode === 1) {\n    state.mode_ = 2;\n    if (node[\"test\"]) {\n      return new Interpreter.State(node[\"test\"], state.scope);\n    }\n  } else if (mode === 2) {\n    state.mode_ = 3;\n    if (node[\"test\"] && !state.value) {\n      // Done, exit loop.\n      stack.pop();\n    } else {\n      // Execute the body.\n      state.isLoop = true;\n      return new Interpreter.State(node[\"body\"], state.scope);\n    }\n  } else if (mode === 3) {\n    state.mode_ = 1;\n    if (node[\"update\"]) {\n      return new Interpreter.State(node[\"update\"], state.scope);\n    }\n  }\n};\n\nInterpreter.prototype[\"stepFunctionDeclaration\"] = function (stack, state, node) {\n  // This was found and handled when the scope was populated.\n  stack.pop();\n};\n\nInterpreter.prototype[\"stepFunctionExpression\"] = function (stack, state, node) {\n  stack.pop();\n  stack[stack.length - 1].value = this.createFunction(node, state.scope);\n};\n\nInterpreter.prototype[\"stepIdentifier\"] = function (stack, state, node) {\n  stack.pop();\n  if (state.components) {\n    stack[stack.length - 1].value = [Interpreter.SCOPE_REFERENCE, node[\"name\"]];\n    return;\n  }\n  var value = this.getValueFromScope(node[\"name\"], node);\n  // An identifier could be a getter if it's a property on the global object.\n  if (value && typeof value === \"object\" && value.isGetter) {\n    // Clear the getter flag and call the getter function.\n    value.isGetter = false;\n    var scope = state.scope;\n    while (!this.hasProperty(scope, node[\"name\"])) {\n      scope = scope.parentScope;\n    }\n    var func = /** @type {!Interpreter.Object} */ (value);\n    return this.createGetter_(func, this.global);\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype[\"stepIfStatement\"] = Interpreter.prototype[\"stepConditionalExpression\"];\n\nInterpreter.prototype[\"stepLabeledStatement\"] = function (stack, state, node) {\n  // No need to hit this node again on the way back up the stack.\n  stack.pop();\n  // Note that a statement might have multiple labels.\n  var labels = state.labels || [];\n  labels.push(node[\"label\"][\"name\"]);\n  var nextState = new Interpreter.State(node[\"body\"], state.scope);\n  nextState.labels = labels;\n  return nextState;\n};\n\nInterpreter.prototype[\"stepLiteral\"] = function (stack, state, node) {\n  stack.pop();\n  var value = node[\"value\"];\n  if (value instanceof RegExp) {\n    var pseudoRegexp = this.createObjectProto(this.REGEXP_PROTO);\n    this.populateRegExp(pseudoRegexp, value);\n    value = pseudoRegexp;\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype[\"stepLogicalExpression\"] = function (stack, state, node) {\n  if (node[\"operator\"] !== \"&&\" && node[\"operator\"] !== \"||\") {\n    throw SyntaxError(\"Unknown logical operator: \" + node[\"operator\"]);\n  }\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    return new Interpreter.State(node[\"left\"], state.scope);\n  }\n  if (!state.doneRight_) {\n    if ((node[\"operator\"] === \"&&\" && !state.value) || (node[\"operator\"] === \"||\" && state.value)) {\n      // Shortcut evaluation.\n      stack.pop();\n      stack[stack.length - 1].value = state.value;\n    } else {\n      state.doneRight_ = true;\n      return new Interpreter.State(node[\"right\"], state.scope);\n    }\n  } else {\n    stack.pop();\n    stack[stack.length - 1].value = state.value;\n  }\n};\n\nInterpreter.prototype[\"stepMemberExpression\"] = function (stack, state, node) {\n  if (!state.doneObject_) {\n    state.doneObject_ = true;\n    return new Interpreter.State(node[\"object\"], state.scope);\n  }\n  var propName;\n  if (!node[\"computed\"]) {\n    state.object_ = state.value;\n    // obj.foo -- Just access 'foo' directly.\n    propName = node[\"property\"][\"name\"];\n  } else if (!state.doneProperty_) {\n    state.object_ = state.value;\n    // obj[foo] -- Compute value of 'foo'.\n    state.doneProperty_ = true;\n    return new Interpreter.State(node[\"property\"], state.scope);\n  } else {\n    propName = state.value;\n  }\n  stack.pop();\n  if (state.components) {\n    stack[stack.length - 1].value = [state.object_, propName];\n  } else {\n    var value = this.getProperty(state.object_, propName);\n    if (value && typeof value === \"object\" && value.isGetter) {\n      // Clear the getter flag and call the getter function.\n      value.isGetter = false;\n      var func = /** @type {!Interpreter.Object} */ (value);\n      return this.createGetter_(func, state.object_);\n    }\n    stack[stack.length - 1].value = value;\n  }\n};\n\nInterpreter.prototype[\"stepNewExpression\"] = Interpreter.prototype[\"stepCallExpression\"];\n\nInterpreter.prototype[\"stepObjectExpression\"] = function (stack, state, node) {\n  var n = state.n_ || 0;\n  var property = node[\"properties\"][n];\n  if (!state.object_) {\n    // First execution.\n    state.object_ = this.createObjectProto(this.OBJECT_PROTO);\n    state.properties_ = Object.create(null);\n  } else {\n    // Determine property name.\n    var key = property[\"key\"];\n    if (key[\"type\"] === \"Identifier\") {\n      var propName = key[\"name\"];\n    } else if (key[\"type\"] === \"Literal\") {\n      var propName = key[\"value\"];\n    } else {\n      throw SyntaxError(\"Unknown object structure: \" + key[\"type\"]);\n    }\n    // Set the property computed in the previous execution.\n    if (!state.properties_[propName]) {\n      // Create temp object to collect value, getter, and/or setter.\n      state.properties_[propName] = {};\n    }\n    state.properties_[propName][property[\"kind\"]] = state.value;\n    state.n_ = ++n;\n    property = node[\"properties\"][n];\n  }\n  if (property) {\n    return new Interpreter.State(property[\"value\"], state.scope);\n  }\n  for (var key in state.properties_) {\n    var kinds = state.properties_[key];\n    if (\"get\" in kinds || \"set\" in kinds) {\n      // Set a property with a getter or setter.\n      var descriptor = {\n        configurable: true,\n        enumerable: true,\n        get: kinds[\"get\"],\n        set: kinds[\"set\"],\n      };\n      this.setProperty(state.object_, key, null, descriptor);\n    } else {\n      // Set a normal property with a value.\n      this.setProperty(state.object_, key, kinds[\"init\"]);\n    }\n  }\n  stack.pop();\n  stack[stack.length - 1].value = state.object_;\n};\n\nInterpreter.prototype[\"stepProgram\"] = function (stack, state, node) {\n  var expression = node[\"body\"].shift();\n  if (expression) {\n    state.done = false;\n    return new Interpreter.State(expression, state.scope);\n  }\n  state.done = true;\n  // Don't pop the stateStack.\n  // Leave the root scope on the tree in case the program is appended to.\n};\n\nInterpreter.prototype[\"stepReturnStatement\"] = function (stack, state, node) {\n  if (node[\"argument\"] && !state.done_) {\n    state.done_ = true;\n    return new Interpreter.State(node[\"argument\"], state.scope);\n  }\n  this.unwind(Interpreter.Completion.RETURN, state.value, undefined);\n};\n\nInterpreter.prototype[\"stepSequenceExpression\"] = function (stack, state, node) {\n  var n = state.n_ || 0;\n  var expression = node[\"expressions\"][n];\n  if (expression) {\n    state.n_ = n + 1;\n    return new Interpreter.State(expression, state.scope);\n  }\n  stack.pop();\n  stack[stack.length - 1].value = state.value;\n};\n\nInterpreter.prototype[\"stepSwitchStatement\"] = function (stack, state, node) {\n  if (!state.test_) {\n    state.test_ = 1;\n    return new Interpreter.State(node[\"discriminant\"], state.scope);\n  }\n  if (state.test_ === 1) {\n    state.test_ = 2;\n    // Preserve switch value between case tests.\n    state.switchValue_ = state.value;\n    state.defaultCase_ = -1;\n  }\n\n  while (true) {\n    var index = state.index_ || 0;\n    var switchCase = node[\"cases\"][index];\n    if (!state.matched_ && switchCase && !switchCase[\"test\"]) {\n      // Test on the default case is null.\n      // Bypass (but store) the default case, and get back to it later.\n      state.defaultCase_ = index;\n      state.index_ = index + 1;\n      continue;\n    }\n    if (!switchCase && !state.matched_ && state.defaultCase_ !== -1) {\n      // Ran through all cases, no match.  Jump to the default.\n      state.matched_ = true;\n      state.index_ = state.defaultCase_;\n      continue;\n    }\n    if (switchCase) {\n      if (!state.matched_ && !state.tested_ && switchCase[\"test\"]) {\n        state.tested_ = true;\n        return new Interpreter.State(switchCase[\"test\"], state.scope);\n      }\n      if (state.matched_ || state.value === state.switchValue_) {\n        state.matched_ = true;\n        var n = state.n_ || 0;\n        if (switchCase[\"consequent\"][n]) {\n          state.isSwitch = true;\n          state.n_ = n + 1;\n          return new Interpreter.State(switchCase[\"consequent\"][n], state.scope);\n        }\n      }\n      // Move on to next case.\n      state.tested_ = false;\n      state.n_ = 0;\n      state.index_ = index + 1;\n    } else {\n      stack.pop();\n      return;\n    }\n  }\n};\n\nInterpreter.prototype[\"stepThisExpression\"] = function (stack, state, node) {\n  stack.pop();\n  stack[stack.length - 1].value = this.getValueFromScope(\"this\", node);\n};\n\nInterpreter.prototype[\"stepThrowStatement\"] = function (stack, state, node) {\n  if (!state.done_) {\n    state.done_ = true;\n    return new Interpreter.State(node[\"argument\"], state.scope);\n  } else {\n    this.throwException(state.value);\n  }\n};\n\nInterpreter.prototype[\"stepTryStatement\"] = function (stack, state, node) {\n  if (!state.doneBlock_) {\n    state.doneBlock_ = true;\n    return new Interpreter.State(node[\"block\"], state.scope);\n  }\n  if (state.cv && state.cv.type === Interpreter.Completion.THROW && !state.doneHandler_ && node[\"handler\"]) {\n    state.doneHandler_ = true;\n    var nextState = new Interpreter.State(node[\"handler\"], state.scope);\n    nextState.throwValue = state.cv.value;\n    state.cv = undefined; // This error has been handled, don't rethrow.\n    return nextState;\n  }\n  if (!state.doneFinalizer_ && node[\"finalizer\"]) {\n    state.doneFinalizer_ = true;\n    return new Interpreter.State(node[\"finalizer\"], state.scope);\n  }\n  stack.pop();\n  if (state.cv) {\n    // There was no catch handler, or the catch/finally threw an error.\n    // Throw the error up to a higher try.\n    this.unwind(state.cv.type, state.cv.value, state.cv.label);\n  }\n};\n\nInterpreter.prototype[\"stepUnaryExpression\"] = function (stack, state, node) {\n  if (!state.done_) {\n    state.done_ = true;\n    var nextState = new Interpreter.State(node[\"argument\"], state.scope);\n    nextState.components = node[\"operator\"] === \"delete\";\n    return nextState;\n  }\n  stack.pop();\n  var value = state.value;\n  if (node[\"operator\"] === \"-\") {\n    value = -value;\n  } else if (node[\"operator\"] === \"+\") {\n    value = +value;\n  } else if (node[\"operator\"] === \"!\") {\n    value = !value;\n  } else if (node[\"operator\"] === \"~\") {\n    value = ~value;\n  } else if (node[\"operator\"] === \"delete\") {\n    var result = true;\n    // If value is not an array, then it is a primitive, or some other value.\n    // If so, skip the delete and return true.\n    if (Array.isArray(value)) {\n      var obj = value[0];\n      if (obj === Interpreter.SCOPE_REFERENCE) {\n        // 'delete foo;' is the same as 'delete window.foo'.\n        obj = state.scope;\n      }\n      var name = String(value[1]);\n      try {\n        delete obj.properties[name];\n      } catch (e) {\n        if (state.scope.strict) {\n          this.throwException(this.TYPE_ERROR, \"Cannot delete property '\" + name + \"' of '\" + obj + \"'\");\n        } else {\n          result = false;\n        }\n      }\n    }\n    value = result;\n  } else if (node[\"operator\"] === \"typeof\") {\n    value = value && value.class === \"Function\" ? \"function\" : typeof value;\n  } else if (node[\"operator\"] === \"void\") {\n    value = undefined;\n  } else {\n    throw SyntaxError(\"Unknown unary operator: \" + node[\"operator\"]);\n  }\n  stack[stack.length - 1].value = value;\n};\n\nInterpreter.prototype[\"stepUpdateExpression\"] = function (stack, state, node) {\n  if (!state.doneLeft_) {\n    state.doneLeft_ = true;\n    var nextState = new Interpreter.State(node[\"argument\"], state.scope);\n    nextState.components = true;\n    return nextState;\n  }\n  if (!state.leftSide_) {\n    state.leftSide_ = state.value;\n  }\n  if (state.doneGetter_) {\n    state.leftValue_ = state.value;\n  }\n  if (!state.doneGetter_) {\n    var leftValue = this.getValue(state.leftSide_, node);\n    state.leftValue_ = leftValue;\n    if (leftValue && typeof leftValue === \"object\" && leftValue.isGetter) {\n      // Clear the getter flag and call the getter function.\n      leftValue.isGetter = false;\n      state.doneGetter_ = true;\n      var func = /** @type {!Interpreter.Object} */ (leftValue);\n      return this.createGetter_(func, state.leftSide_);\n    }\n  }\n  if (state.doneSetter_) {\n    // Return if setter function.\n    // Setter method on property has completed.\n    // Ignore its return value, and use the original set value instead.\n    stack.pop();\n    stack[stack.length - 1].value = state.setterValue_;\n    return;\n  }\n  var leftValue = Number(state.leftValue_);\n  var changeValue;\n  if (node[\"operator\"] === \"++\") {\n    changeValue = leftValue + 1;\n  } else if (node[\"operator\"] === \"--\") {\n    changeValue = leftValue - 1;\n  } else {\n    throw SyntaxError(\"Unknown update expression: \" + node[\"operator\"]);\n  }\n  var returnValue = node[\"prefix\"] ? changeValue : leftValue;\n  var setter = this.setValue(state.leftSide_, changeValue);\n  if (setter) {\n    state.doneSetter_ = true;\n    state.setterValue_ = returnValue;\n    return this.createSetter_(setter, state.leftSide_, changeValue);\n  }\n  // Return if no setter function.\n  stack.pop();\n  stack[stack.length - 1].value = returnValue;\n};\n\nInterpreter.prototype[\"stepVariableDeclaration\"] = function (stack, state, node) {\n  var declarations = node[\"declarations\"];\n  var n = state.n_ || 0;\n  var declarationNode = declarations[n];\n  if (state.init_ && declarationNode) {\n    // This setValue call never needs to deal with calling a setter function.\n    // Note that this is setting the init value, not defining the variable.\n    // Variable definition is done when scope is populated.\n    this.setValueToScope(declarationNode[\"id\"][\"name\"], state.value);\n    state.init_ = false;\n    declarationNode = declarations[++n];\n  }\n  while (declarationNode) {\n    // Skip any declarations that are not initialized.  They have already\n    // been defined as undefined in populateScope_.\n    if (declarationNode[\"init\"]) {\n      state.n_ = n;\n      state.init_ = true;\n      return new Interpreter.State(declarationNode[\"init\"], state.scope);\n    }\n    declarationNode = declarations[++n];\n  }\n  stack.pop();\n};\n\nInterpreter.prototype[\"stepWithStatement\"] = function (stack, state, node) {\n  if (!state.doneObject_) {\n    state.doneObject_ = true;\n    return new Interpreter.State(node[\"object\"], state.scope);\n  } else if (!state.doneBody_) {\n    state.doneBody_ = true;\n    var scope = this.createSpecialScope(state.scope, state.value);\n    return new Interpreter.State(node[\"body\"], scope);\n  } else {\n    stack.pop();\n  }\n};\n\nInterpreter.prototype[\"stepWhileStatement\"] = Interpreter.prototype[\"stepDoWhileStatement\"];\n\n// Preserve top-level API functions from being pruned/renamed by JS compilers.\n// Add others as needed.\n// The global object ('window' in a browser, 'global' in node.js) is 'this'.\n//this['Interpreter'] = Interpreter;\nInterpreter.prototype[\"step\"] = Interpreter.prototype.step;\nInterpreter.prototype[\"run\"] = Interpreter.prototype.run;\nInterpreter.prototype[\"appendCode\"] = Interpreter.prototype.appendCode;\nInterpreter.prototype[\"createObject\"] = Interpreter.prototype.createObject;\nInterpreter.prototype[\"createObjectProto\"] = Interpreter.prototype.createObjectProto;\nInterpreter.prototype[\"createAsyncFunction\"] = Interpreter.prototype.createAsyncFunction;\nInterpreter.prototype[\"createNativeFunction\"] = Interpreter.prototype.createNativeFunction;\nInterpreter.prototype[\"getProperty\"] = Interpreter.prototype.getProperty;\nInterpreter.prototype[\"setProperty\"] = Interpreter.prototype.setProperty;\nInterpreter.prototype[\"nativeToPseudo\"] = Interpreter.prototype.nativeToPseudo;\nInterpreter.prototype[\"pseudoToNative\"] = Interpreter.prototype.pseudoToNative;\n// Obsolete.  Do not use.\nInterpreter.prototype[\"createPrimitive\"] = function (x) {\n  return x;\n};\n\nexport { Interpreter };\n","import { AllServers } from \"../Server/AllServers\";\nimport { RunningScript } from \"./RunningScript\";\n\nexport function getRamUsageFromRunningScript(script: RunningScript): number {\n  if (script.ramUsage != null && script.ramUsage > 0) {\n    return script.ramUsage; // Use cached value\n  }\n\n  const server = AllServers[script.server];\n  if (server == null) {\n    return 0;\n  }\n  for (let i = 0; i < server.scripts.length; ++i) {\n    if (server.scripts[i].filename === script.filename) {\n      // Cache the ram usage for the next call\n      script.ramUsage = server.scripts[i].ramUsage;\n      return script.ramUsage;\n    }\n  }\n\n  return 0;\n}\n","import * as React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\";\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\";\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\n\ninterface TablePaginationActionsProps {\n  count: number;\n  page: number;\n  rowsPerPage: number;\n  onPageChange: (event: React.MouseEvent<HTMLButtonElement>, newPage: number) => void;\n}\n\nexport function TablePaginationActionsAll(props: TablePaginationActionsProps): React.ReactElement {\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n\n  const handleFirstPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { joinFaction } from \"../FactionHelpers\";\nimport { Faction } from \"../Faction\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { use } from \"../../ui/Context\";\nimport { EventEmitter } from \"../../utils/EventEmitter\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nexport const InvitationEvent = new EventEmitter<[Faction]>();\n\nexport function InvitationModal(): React.ReactElement {\n  const [faction, setFaction] = useState<Faction | null>(null);\n  const player = use.Player();\n  function join(): void {\n    if (faction === null) return;\n    //Remove from invited factions\n    const i = player.factionInvitations.findIndex((facName) => facName === faction.name);\n    if (i === -1) {\n      console.error(\"Could not find faction in Player.factionInvitations\");\n    }\n    joinFaction(faction);\n    setFaction(null);\n  }\n\n  useEffect(() => InvitationEvent.subscribe((faction) => setFaction(faction)), []);\n\n  return (\n    <Modal open={faction !== null} onClose={() => setFaction(null)}>\n      <Typography variant=\"h4\">You have received a faction invitation.</Typography>\n      <Typography>\n        Would you like to join {(faction || { name: \"\" }).name}? <br />\n        <br />\n        Warning: Joining this faction may prevent you from joining other factions during this run!\n      </Typography>\n      <Button onClick={join}>Join!</Button>\n      <Button onClick={() => setFaction(null)}>Decide later</Button>\n    </Modal>\n  );\n}\n","// The initial formulas was sum 0 to f of 500*1.02^f.\n// These formulas were derived on wolfram alpha.\n\n// Wolfram Alpha: sum from 0 to n of 500*1.02^n\n// 500 * ((pow(51, f+1)) / pow(50,f) - 50)\n// Then we use https://herbie.uwplse.org/demo/ to simplify it and prevent\n// Infinity issues.\nexport function favorToRep(f: number): number {\n  function fma(a: number, b: number, c: number): number {\n    return a * b + c;\n  }\n  const ex = fma(f, Math.log(51.0) - Math.log(50.0), Math.log(51.0));\n  return fma(500.0, Math.exp(ex), -25000.0);\n}\n\n// Wolfram Alpha: 500 (50^(-n) 51^(n + 1) - 50) solve for n\nexport function repToFavor(r: number): number {\n  return -Math.log(25500 / (r + 25000)) / Math.log(51 / 50);\n}\n","import { Bladeburner } from \"../../Bladeburner/Bladeburner\";\nimport { SourceFileFlags } from \"../../SourceFile/SourceFileFlags\";\nimport { IPlayer } from \"../IPlayer\";\n\nexport function canAccessBladeburner(this: IPlayer): boolean {\n  if (this.bitNodeN === 8) {\n    return false;\n  }\n\n  return this.bitNodeN === 6 || this.bitNodeN === 7 || SourceFileFlags[6] > 0 || SourceFileFlags[7] > 0;\n}\n\nexport function inBladeburner(this: IPlayer): boolean {\n  if (this.bladeburner == null) {\n    return false;\n  }\n  return this.bladeburner instanceof Bladeburner;\n}\n\nexport function startBladeburner(this: IPlayer): void {\n  this.bladeburner = new Bladeburner(this);\n}\n","import { IBladeburner } from \"./IBladeburner\";\nimport { Action, IActionParams } from \"./Action\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\n\nexport class Contract extends Action {\n  constructor(params: IActionParams | null = null) {\n    super(params);\n  }\n\n  getActionTypeSkillSuccessBonus(inst: IBladeburner): number {\n    return inst.skillMultipliers.successChanceContract;\n  }\n\n  toJSON(): any {\n    return Generic_toJSON(\"Contract\", this);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Contract {\n    return Generic_fromJSON(Contract, value.data);\n  }\n}\n\nReviver.constructors.Contract = Contract;\n","export const ConsoleHelpText: {\n  [key: string]: string[];\n  helpList: string[];\n  automate: string[];\n  clear: string[];\n  cls: string[];\n  help: string[];\n  log: string[];\n  skill: string[];\n  start: string[];\n  stop: string[];\n} = {\n  helpList: [\n    \"Use 'help [command]' to get more information about a particular Bladeburner console command.\",\n    \"\",\n    \"    automate [var] [val] [hi/low] Configure simple automation for Bladeburner tasks\",\n    \"    clear/cls                     Clear the console\",\n    \"    help [cmd]                    Display this help text, or help text for a specific command\",\n    \"    log [en/dis] [type]           Enable or disable logging for events and actions\",\n    \"    skill [action] [name]         Level or display info about your Bladeburner skills\",\n    \"    start [type] [name]           Start a Bladeburner action/task\",\n    \"    stop                          Stops your current Bladeburner action/task\",\n  ],\n  automate: [\n    \"automate [var] [val] [hi/low]\",\n    \"\",\n    \"A simple way to automate your Bladeburner actions. This console command can be used \" +\n      \"to automatically start an action when your stamina rises above a certain threshold, and \" +\n      \"automatically switch to another action when your stamina drops below another threshold.\",\n    \"    automate status - Check the current status of your automation and get a brief description of what it'll do\",\n    \"    automate en - Enable the automation feature\",\n    \"    automate dis - Disable the automation feature\",\n    \"\",\n    \"There are four properties that must be set for this automation to work properly. Here is how to set them:\",\n    \"\",\n    \"    automate stamina 100 high\",\n    \"    automate contract Tracking high\",\n    \"    automate stamina 50 low\",\n    \"    automate general 'Field Analysis' low\",\n    \"\",\n    \"Using the four console commands above will set the automation to perform Tracking contracts \" +\n      \"if your stamina is 100 or higher, and then switch to Field Analysis if your stamina drops below \" +\n      \"50. Note that when setting the action, the name of the action is CASE-SENSITIVE. It must \" +\n      \"exactly match whatever the name is in the UI.\",\n  ],\n  clear: [\"clear\", \"\", \"Clears the console\"],\n  cls: [\"cls\", \"\", \"Clears the console\"],\n  help: [\n    \"help [command]\",\n    \"\",\n    \"Running 'help' with no arguments displays the general help text, which lists all console commands \" +\n      \"and a brief description of what they do. A command can be specified to get more specific help text \" +\n      \"about that particular command. For example:\",\n    \"\",\n    \"    help automate\",\n    \"\",\n    \"will display specific information about using the automate console command\",\n  ],\n  log: [\n    \"log [en/dis] [type]\",\n    \"\",\n    \"Enable or disable logging. By default, the results of completing actions such as contracts/operations are logged \" +\n      \"in the console. There are also random events that are logged in the console as well. The five categories of \" +\n      \"things that get logged are:\",\n    \"\",\n    \"[general, contracts, ops, blackops, events]\",\n    \"\",\n    \"The logging for these categories can be enabled or disabled like so:\",\n    \"\",\n    \"    log dis contracts - Disables logging that occurs when contracts are completed\",\n    \"    log en contracts - Enables logging that occurs when contracts are completed\",\n    \"    log dis events - Disables logging for Bladeburner random events\",\n    \"\",\n    \"Logging can be universally enabled/disabled using the 'all' keyword:\",\n    \"\",\n    \"    log dis all\",\n    \"    log en all\",\n  ],\n  skill: [\n    \"skill [action] [name]\",\n    \"\",\n    \"Level or display information about your skills.\",\n    \"\",\n    \"To display information about all of your skills and your multipliers, use:\",\n    \"\",\n    \"    skill list\",\n    \"\",\n    \"To display information about a specific skill, specify the name of the skill afterwards. \" +\n      \"Note that the name of the skill is case-sensitive. Enter it exactly as seen in the UI. If \" +\n      \"the name of the skill has whitespace, enclose the name of the skill in double quotation marks:\",\n    \"\",\n    \"    skill list Reaper<br>\" + \"    skill list 'Digital Observer'\",\n    \"\",\n    \"This console command can also be used to level up skills:\",\n    \"\",\n    \"    skill level [skill name]\",\n  ],\n  start: [\n    \"start [type] [name]\",\n    \"\",\n    \"Start an action. An action is specified by its type and its name. The \" +\n      \"name is case-sensitive. It must appear exactly as it does in the UI. If \" +\n      \"the name of the action has whitespace, enclose it in double quotation marks. \" +\n      \"Valid action types include:\",\n    \"\",\n    \"[general, contract, op, blackop]\",\n    \"\",\n    \"Examples:\",\n    \"\",\n    \"    start contract Tracking\",\n    \"    start op 'Undercover Operation'\",\n  ],\n  stop: [\"stop\", \"\", \"Stop your current action and go idle.\"],\n};\n","// Defines a \"Research Tree\"\n// Each Industry has a unique Research Tree\n// Each Node in the Research Trees only holds the name(s) of Research,\n// not an actual Research object. The name can be used to obtain a reference\n// to the corresponding Research object using the ResearchMap\nimport { Research } from \"./Research\";\nimport { ResearchMap } from \"./ResearchMap\";\n\nimport { IMap } from \"../types\";\n\nimport { numeralWrapper } from \"../ui/numeralFormat\";\n\ninterface IConstructorParams {\n  children?: Node[];\n  cost: number;\n  text: string;\n  parent?: Node | null;\n}\n\nexport class Node {\n  // All child Nodes in the tree\n  // The Research held in this Node is a prerequisite for all Research in\n  // child Nodes\n  children: Node[] = [];\n\n  // How much Scientific Research is needed for this\n  // Necessary to show it on the UI\n  cost = 0;\n\n  // Whether or not this Research has been unlocked\n  researched = false;\n\n  // Parent node in the tree\n  // The parent node defines the prerequisite Research (there can only be one)\n  // Set as null for no prerequisites\n  parent: Node | null = null;\n\n  // Name of the Research held in this Node\n  text = \"\";\n\n  constructor(p: IConstructorParams = { cost: 0, text: \"\" }) {\n    if (ResearchMap[p.text] == null) {\n      throw new Error(`Invalid Research name used when constructing ResearchTree Node: ${p.text}`);\n    }\n\n    this.text = p.text;\n    this.cost = p.cost;\n\n    if (p.children && p.children.length > 0) {\n      this.children = p.children;\n    }\n\n    if (p.parent != null) {\n      this.parent = p.parent;\n    }\n  }\n\n  addChild(n: Node): void {\n    this.children.push(n);\n    n.parent = this;\n  }\n\n  // Return an object that describes a TreantJS-compatible markup/config for this Node\n  // See: http://fperucic.github.io/treant-js/\n  createTreantMarkup(): any {\n    const childrenArray = [];\n    for (let i = 0; i < this.children.length; ++i) {\n      childrenArray.push(this.children[i].createTreantMarkup());\n    }\n\n    // Determine what css class this Node should have in the diagram\n    let htmlClass = \"tooltip\";\n    if (this.researched) {\n      htmlClass += \" researched\";\n    } else if (this.parent && this.parent.researched === false) {\n      htmlClass += \" locked\";\n    } else {\n      htmlClass += \" unlocked\";\n    }\n\n    const research: Research | null = ResearchMap[this.text];\n    const sanitizedName: string = this.text.replace(/\\s/g, \"\");\n    return {\n      children: childrenArray,\n      HTMLclass: htmlClass,\n      innerHTML:\n        `<div id=\"${sanitizedName}-corp-research-click-listener\">` +\n        `${this.text}<br>${numeralWrapper.format(this.cost, \"0,0\")} Scientific Research` +\n        `<span class=\"tooltiptext\">` +\n        `${research.desc}` +\n        `</span>` +\n        `</div>`,\n      text: { name: this.text },\n    };\n  }\n\n  // Recursive function for finding a Node with the specified text\n  findNode(text: string): Node | null {\n    // Is this the Node?\n    if (this.text === text) {\n      return this;\n    }\n\n    // Recursively search chilren\n    let res = null;\n    for (let i = 0; i < this.children.length; ++i) {\n      res = this.children[i].findNode(text);\n      if (res != null) {\n        return res;\n      }\n    }\n\n    return null;\n  }\n\n  setParent(n: Node): void {\n    this.parent = n;\n  }\n}\n\n// A ResearchTree defines all available Research in an Industry\n// The root node in a Research Tree must always be the \"Hi-Tech R&D Laboratory\"\nexport class ResearchTree {\n  // Object containing names of all acquired Research by name\n  researched: IMap<boolean> = {};\n\n  // Root Node\n  root: Node | null = null;\n\n  // Return an object that contains a Tree markup for TreantJS (using the JSON approach)\n  // See: http://fperucic.github.io/treant-js/\n  createTreantMarkup(): any {\n    if (this.root == null) {\n      return {};\n    }\n\n    const treeMarkup = this.root.createTreantMarkup();\n\n    return {\n      chart: {\n        container: \"\",\n      },\n      nodeStructure: treeMarkup,\n    };\n  }\n\n  // Gets an array with the 'text' values of ALL Nodes in the Research Tree\n  getAllNodes(): string[] {\n    const res: string[] = [];\n    const queue: Node[] = [];\n\n    if (this.root == null) {\n      return res;\n    }\n\n    queue.push(this.root);\n    while (queue.length !== 0) {\n      const node: Node | undefined = queue.shift();\n      if (node == null) {\n        continue;\n      }\n\n      res.push(node.text);\n      for (let i = 0; i < node.children.length; ++i) {\n        queue.push(node.children[i]);\n      }\n    }\n\n    return res;\n  }\n\n  // Get total multipliers from this Research Tree\n  getAdvertisingMultiplier(): number {\n    return this.getMultiplierHelper(\"advertisingMult\");\n  }\n\n  getEmployeeChaMultiplier(): number {\n    return this.getMultiplierHelper(\"employeeChaMult\");\n  }\n\n  getEmployeeCreMultiplier(): number {\n    return this.getMultiplierHelper(\"employeeCreMult\");\n  }\n\n  getEmployeeEffMultiplier(): number {\n    return this.getMultiplierHelper(\"employeeEffMult\");\n  }\n\n  getEmployeeIntMultiplier(): number {\n    return this.getMultiplierHelper(\"employeeIntMult\");\n  }\n\n  getProductionMultiplier(): number {\n    return this.getMultiplierHelper(\"productionMult\");\n  }\n\n  getProductProductionMultiplier(): number {\n    return this.getMultiplierHelper(\"productProductionMult\");\n  }\n\n  getSalesMultiplier(): number {\n    return this.getMultiplierHelper(\"salesMult\");\n  }\n\n  getScientificResearchMultiplier(): number {\n    return this.getMultiplierHelper(\"sciResearchMult\");\n  }\n\n  getStorageMultiplier(): number {\n    return this.getMultiplierHelper(\"storageMult\");\n  }\n\n  // Helper function for all the multiplier getter fns\n  getMultiplierHelper(propName: string): number {\n    let res = 1;\n    if (this.root == null) {\n      return res;\n    }\n\n    const queue: Node[] = [];\n    queue.push(this.root);\n    while (queue.length !== 0) {\n      const node: Node | undefined = queue.shift();\n\n      // If the Node has not been researched, there's no need to\n      // process it or its children\n      if (node == null || !node.researched) {\n        continue;\n      }\n\n      const research: Research | null = ResearchMap[node.text];\n\n      // Safety checks\n      if (research == null) {\n        console.warn(`Invalid Research name in node: ${node.text}`);\n        continue;\n      }\n\n      const mult: any = (research as any)[propName];\n      if (mult == null) {\n        console.warn(`Invalid propName specified in ResearchTree.getMultiplierHelper: ${propName}`);\n        continue;\n      }\n\n      res *= mult;\n      for (let i = 0; i < node.children.length; ++i) {\n        queue.push(node.children[i]);\n      }\n    }\n\n    return res;\n  }\n\n  // Search for a Node with the given name ('text' property on the Node)\n  // Returns 'null' if it cannot be found\n  findNode(name: string): Node | null {\n    if (this.root == null) {\n      return null;\n    }\n    return this.root.findNode(name);\n  }\n\n  // Marks a Node as researched\n  research(name: string): void {\n    if (this.root == null) {\n      return;\n    }\n\n    const queue: Node[] = [];\n    queue.push(this.root);\n    while (queue.length !== 0) {\n      const node: Node | undefined = queue.shift();\n      if (node == null) {\n        continue;\n      }\n\n      if (node.text === name) {\n        node.researched = true;\n        this.researched[name] = true;\n        return;\n      }\n\n      for (let i = 0; i < node.children.length; ++i) {\n        queue.push(node.children[i]);\n      }\n    }\n\n    console.warn(`ResearchTree.research() did not find the specified Research node for: ${name}`);\n  }\n\n  // Set the tree's Root Node\n  setRoot(root: Node): void {\n    this.root = root;\n  }\n}\n","/**\n * How many stock market 'ticks' before a 'cycle' is triggered.\n * A 'tick' is whenver stock prices update\n */\nexport const TicksPerCycle = 75;\n","import { Corporation } from \"../../Corporation/Corporation\";\nimport { SourceFileFlags } from \"../../SourceFile/SourceFileFlags\";\nimport { IPlayer } from \"../IPlayer\";\n\nexport function canAccessCorporation(this: IPlayer): boolean {\n  return this.bitNodeN === 3 || SourceFileFlags[3] > 0;\n}\n\nexport function hasCorporation(this: IPlayer): boolean {\n  if (this.corporation == null) {\n    return false;\n  }\n  return this.corporation instanceof Corporation;\n}\n\nexport function startCorporation(this: IPlayer, corpName: string, additionalShares = 0): void {\n  this.corporation = new Corporation({\n    name: corpName,\n  });\n\n  this.corporation.totalShares += additionalShares;\n}\n","// Function that returns the next Company Position in the \"ladder\"\n// i.e. the next position to get promoted to\nimport { CompanyPosition } from \"./CompanyPosition\";\nimport { CompanyPositions } from \"./CompanyPositions\";\n\nexport function getNextCompanyPositionHelper(currPos: CompanyPosition | null): CompanyPosition | null {\n  if (currPos == null) {\n    return null;\n  }\n\n  const nextPosName: string | null = currPos.nextPosition;\n  if (nextPosName == null) {\n    return null;\n  }\n\n  return CompanyPositions[nextPosName];\n}\n","/**\n * Game engine. Handles the main game loop.\n */\nimport { convertTimeMsToTimeElapsedString } from \"./utils/StringHelperFunctions\";\nimport { Augmentations } from \"./Augmentation/Augmentations\";\nimport { initAugmentations } from \"./Augmentation/AugmentationHelpers\";\nimport { AugmentationNames } from \"./Augmentation/data/AugmentationNames\";\nimport { initBitNodeMultipliers } from \"./BitNode/BitNode\";\nimport { Bladeburner } from \"./Bladeburner/Bladeburner\";\nimport { generateRandomContract } from \"./CodingContractGenerator\";\nimport { initCompanies } from \"./Company/Companies\";\nimport { Corporation } from \"./Corporation/Corporation\";\nimport { CONSTANTS } from \"./Constants\";\nimport { Factions, initFactions } from \"./Faction/Factions\";\nimport { processPassiveFactionRepGain, inviteToFaction } from \"./Faction/FactionHelpers\";\nimport { Router } from \"./ui/GameRoot\";\n\nimport {\n  getHackingWorkRepGain,\n  getFactionSecurityWorkRepGain,\n  getFactionFieldWorkRepGain,\n} from \"./PersonObjects/formulas/reputation\";\nimport { hasHacknetServers, processHacknetEarnings } from \"./Hacknet/HacknetHelpers\";\nimport { iTutorialStart } from \"./InteractiveTutorial\";\nimport { checkForMessagesToSend, initMessages } from \"./Message/MessageHelpers\";\nimport { inMission, currMission } from \"./Missions\";\nimport { loadAllRunningScripts, updateOnlineScriptTimes } from \"./NetscriptWorker\";\nimport { Player } from \"./Player\";\nimport { saveObject, loadGame } from \"./SaveObject\";\nimport { initForeignServers } from \"./Server/AllServers\";\nimport { Settings } from \"./Settings/Settings\";\nimport { ThemeEvents } from \"./ui/React/Theme\";\nimport { updateSourceFileFlags } from \"./SourceFile/SourceFileFlags\";\nimport { initSpecialServerIps } from \"./Server/SpecialServerIps\";\nimport { initSymbolToStockMap, processStockPrices } from \"./StockMarket/StockMarket\";\nimport { Terminal } from \"./Terminal\";\nimport { Sleeve } from \"./PersonObjects/Sleeve/Sleeve\";\nimport { Locations } from \"./Locations/Locations\";\nimport { LocationName } from \"./Locations/data/LocationNames\";\n\nimport { Money } from \"./ui/React/Money\";\nimport { Hashes } from \"./ui/React/Hashes\";\nimport { Reputation } from \"./ui/React/Reputation\";\n\nimport { AlertEvents } from \"./ui/React/AlertManager\";\nimport { exceptionAlert } from \"./utils/helpers/exceptionAlert\";\n\nimport { startTampering } from \"./Exploits/tampering\";\n\nimport React from \"react\";\n\nconst Engine: {\n  _lastUpdate: number;\n  updateGame: (numCycles?: number) => void;\n  Counters: {\n    [key: string]: number | undefined;\n    autoSaveCounter: number;\n    updateSkillLevelsCounter: number;\n    updateDisplays: number;\n    updateDisplaysLong: number;\n    updateActiveScriptsDisplay: number;\n    createProgramNotifications: number;\n    augmentationsNotifications: number;\n    checkFactionInvitations: number;\n    passiveFactionGrowth: number;\n    messages: number;\n    mechanicProcess: number;\n    contractGeneration: number;\n  };\n  decrementAllCounters: (numCycles?: number) => void;\n  checkCounters: () => void;\n  load: (saveString: string) => void;\n  start: () => void;\n} = {\n  // Time variables (milliseconds unix epoch time)\n  _lastUpdate: new Date().getTime(),\n\n  updateGame: function (numCycles = 1) {\n    const time = numCycles * CONSTANTS._idleSpeed;\n    if (Player.totalPlaytime == null) {\n      Player.totalPlaytime = 0;\n    }\n    if (Player.playtimeSinceLastAug == null) {\n      Player.playtimeSinceLastAug = 0;\n    }\n    if (Player.playtimeSinceLastBitnode == null) {\n      Player.playtimeSinceLastBitnode = 0;\n    }\n    Player.totalPlaytime += time;\n    Player.playtimeSinceLastAug += time;\n    Player.playtimeSinceLastBitnode += time;\n\n    Terminal.process(Router, Player, numCycles);\n\n    // Working\n    if (Player.isWorking) {\n      if (Player.workType == CONSTANTS.WorkTypeFaction) {\n        if (Player.workForFaction(numCycles)) {\n          Router.toFaction();\n        }\n      } else if (Player.workType == CONSTANTS.WorkTypeCreateProgram) {\n        if (Player.createProgramWork(numCycles)) {\n          Router.toTerminal();\n        }\n      } else if (Player.workType == CONSTANTS.WorkTypeStudyClass) {\n        if (Player.takeClass(numCycles)) {\n          Router.toCity();\n        }\n      } else if (Player.workType == CONSTANTS.WorkTypeCrime) {\n        if (Player.commitCrime(numCycles)) {\n          Router.toLocation(Locations[LocationName.Slums]);\n        }\n      } else if (Player.workType == CONSTANTS.WorkTypeCompanyPartTime) {\n        if (Player.workPartTime(numCycles)) {\n          Router.toCity();\n        }\n      } else {\n        if (Player.work(numCycles)) {\n          Router.toCity();\n        }\n      }\n    }\n\n    // Update stock prices\n    if (Player.hasWseAccount) {\n      processStockPrices(numCycles);\n    }\n\n    // Gang, if applicable\n    if (Player.inGang() && Player.gang !== null) {\n      Player.gang.process(numCycles, Player);\n    }\n\n    // Mission\n    if (inMission && currMission) {\n      currMission.process(numCycles);\n    }\n\n    // Corporation\n    if (Player.corporation instanceof Corporation) {\n      // Stores cycles in a \"buffer\". Processed separately using Engine Counters\n      Player.corporation.storeCycles(numCycles);\n    }\n\n    if (Player.bladeburner instanceof Bladeburner) {\n      Player.bladeburner.storeCycles(numCycles);\n    }\n\n    // Sleeves\n    for (let i = 0; i < Player.sleeves.length; ++i) {\n      if (Player.sleeves[i] instanceof Sleeve) {\n        const expForOtherSleeves = Player.sleeves[i].process(Player, numCycles);\n\n        // This sleeve earns experience for other sleeves\n        if (expForOtherSleeves == null) {\n          continue;\n        }\n        for (let j = 0; j < Player.sleeves.length; ++j) {\n          if (j === i) {\n            continue;\n          }\n          Player.sleeves[j].gainExperience(Player, expForOtherSleeves, numCycles, true);\n        }\n      }\n    }\n\n    // Counters\n    Engine.decrementAllCounters(numCycles);\n    Engine.checkCounters();\n\n    // Update the running time of all active scripts\n    updateOnlineScriptTimes(numCycles);\n\n    // Hacknet Nodes\n    processHacknetEarnings(Player, numCycles);\n  },\n\n  /**\n   * Counters for the main event loop. Represent the number of game cycles that\n   * are required for something to happen. These counters are in game cycles,\n   * which is once every 200ms\n   */\n  Counters: {\n    autoSaveCounter: 300,\n    updateSkillLevelsCounter: 10,\n    updateDisplays: 3,\n    updateDisplaysLong: 15,\n    updateActiveScriptsDisplay: 5,\n    createProgramNotifications: 10,\n    augmentationsNotifications: 10,\n    checkFactionInvitations: 100,\n    passiveFactionGrowth: 5,\n    messages: 150,\n    mechanicProcess: 5, // Processes certain mechanics (Corporation, Bladeburner)\n    contractGeneration: 3000, // Generate Coding Contracts\n  },\n\n  decrementAllCounters: function (numCycles = 1) {\n    for (const counterName in Engine.Counters) {\n      const counter = Engine.Counters[counterName];\n      if (counter === undefined) throw new Error(\"counter should not be undefined\");\n      Engine.Counters[counterName] = counter - numCycles;\n    }\n  },\n\n  /**\n   * Checks if any counters are 0. If they are, executes whatever\n   * is necessary and then resets the counter\n   */\n  checkCounters: function () {\n    if (Engine.Counters.autoSaveCounter <= 0) {\n      if (Settings.AutosaveInterval == null) {\n        Settings.AutosaveInterval = 60;\n      }\n      if (Settings.AutosaveInterval === 0) {\n        Engine.Counters.autoSaveCounter = Infinity;\n      } else {\n        Engine.Counters.autoSaveCounter = Settings.AutosaveInterval * 5;\n        saveObject.saveGame();\n      }\n    }\n\n    if (Engine.Counters.checkFactionInvitations <= 0) {\n      const invitedFactions = Player.checkForFactionInvitations();\n      if (invitedFactions.length > 0) {\n        const randFaction = invitedFactions[Math.floor(Math.random() * invitedFactions.length)];\n        inviteToFaction(randFaction);\n      }\n      Engine.Counters.checkFactionInvitations = 100;\n    }\n\n    if (Engine.Counters.passiveFactionGrowth <= 0) {\n      const adjustedCycles = Math.floor(5 - Engine.Counters.passiveFactionGrowth);\n      processPassiveFactionRepGain(adjustedCycles);\n      Engine.Counters.passiveFactionGrowth = 5;\n    }\n\n    if (Engine.Counters.messages <= 0) {\n      checkForMessagesToSend();\n      if (Augmentations[AugmentationNames.TheRedPill].owned) {\n        Engine.Counters.messages = 4500; // 15 minutes for Red pill message\n      } else {\n        Engine.Counters.messages = 150;\n      }\n    }\n\n    if (Engine.Counters.mechanicProcess <= 0) {\n      if (Player.corporation instanceof Corporation) {\n        Player.corporation.process(Player);\n      }\n      if (Player.bladeburner instanceof Bladeburner) {\n        try {\n          Player.bladeburner.process(Router, Player);\n        } catch (e) {\n          exceptionAlert(\"Exception caught in Bladeburner.process(): \" + e);\n        }\n      }\n      Engine.Counters.mechanicProcess = 5;\n    }\n\n    if (Engine.Counters.contractGeneration <= 0) {\n      // X% chance of a contract being generated\n      if (Math.random() <= 0.25) {\n        generateRandomContract();\n      }\n      Engine.Counters.contractGeneration = 3000;\n    }\n  },\n\n  load: function (saveString) {\n    startTampering();\n    // Load game from save or create new game\n    if (loadGame(saveString)) {\n      ThemeEvents.emit();\n\n      initBitNodeMultipliers(Player);\n      updateSourceFileFlags(Player);\n      initAugmentations(); // Also calls Player.reapplyAllAugmentations()\n      Player.reapplyAllSourceFiles();\n      if (Player.hasWseAccount) {\n        initSymbolToStockMap();\n      }\n\n      // Calculate the number of cycles have elapsed while offline\n      Engine._lastUpdate = new Date().getTime();\n      const lastUpdate = Player.lastUpdate;\n      const timeOffline = Engine._lastUpdate - lastUpdate;\n      const numCyclesOffline = Math.floor(timeOffline / CONSTANTS._idleSpeed);\n\n      let offlineReputation = 0;\n      const offlineHackingIncome = (Player.moneySourceA.hacking / Player.playtimeSinceLastAug) * timeOffline * 0.75;\n      Player.gainMoney(offlineHackingIncome);\n      // Process offline progress\n      loadAllRunningScripts(); // This also takes care of offline production for those scripts\n      if (Player.isWorking) {\n        Player.focus = true;\n        if (Player.workType == CONSTANTS.WorkTypeFaction) {\n          Player.workForFaction(numCyclesOffline);\n        } else if (Player.workType == CONSTANTS.WorkTypeCreateProgram) {\n          Player.createProgramWork(numCyclesOffline);\n        } else if (Player.workType == CONSTANTS.WorkTypeStudyClass) {\n          Player.takeClass(numCyclesOffline);\n        } else if (Player.workType == CONSTANTS.WorkTypeCrime) {\n          Player.commitCrime(numCyclesOffline);\n        } else if (Player.workType == CONSTANTS.WorkTypeCompanyPartTime) {\n          Player.workPartTime(numCyclesOffline);\n        } else {\n          Player.work(numCyclesOffline);\n        }\n      } else {\n        for (let i = 0; i < Player.factions.length; i++) {\n          const facName = Player.factions[i];\n          if (!Factions.hasOwnProperty(facName)) continue;\n          const faction = Factions[facName];\n          if (!faction.isMember) continue;\n          // No rep for special factions.\n          const info = faction.getInfo();\n          if (!info.offersWork()) continue;\n          // No rep for gangs.\n          if (Player.getGangName() === facName) continue;\n\n          const hRep = getHackingWorkRepGain(Player, faction);\n          const sRep = getFactionSecurityWorkRepGain(Player, faction);\n          const fRep = getFactionFieldWorkRepGain(Player, faction);\n          // can be infinite, doesn't matter.\n          const reputationRate = Math.max(hRep, sRep, fRep) / Player.factions.length;\n\n          const rep = reputationRate * numCyclesOffline;\n          faction.playerReputation += rep;\n          offlineReputation += rep;\n        }\n      }\n\n      // Hacknet Nodes offline progress\n      const offlineProductionFromHacknetNodes = processHacknetEarnings(Player, numCyclesOffline);\n      const hacknetProdInfo = hasHacknetServers(Player) ? (\n        <>\n          <Hashes hashes={offlineProductionFromHacknetNodes} /> hashes\n        </>\n      ) : (\n        <Money money={offlineProductionFromHacknetNodes} />\n      );\n\n      // Passive faction rep gain offline\n      processPassiveFactionRepGain(numCyclesOffline);\n\n      // Stock Market offline progress\n      if (Player.hasWseAccount) {\n        processStockPrices(numCyclesOffline);\n      }\n\n      // Gang progress for BitNode 2\n      const gang = Player.gang;\n      if (Player.inGang() && gang !== null) {\n        gang.process(numCyclesOffline, Player);\n      }\n\n      // Corporation offline progress\n      if (Player.corporation instanceof Corporation) {\n        Player.corporation.storeCycles(numCyclesOffline);\n      }\n\n      // Bladeburner offline progress\n      if (Player.bladeburner instanceof Bladeburner) {\n        Player.bladeburner.storeCycles(numCyclesOffline);\n      }\n\n      // Sleeves offline progress\n      for (let i = 0; i < Player.sleeves.length; ++i) {\n        if (Player.sleeves[i] instanceof Sleeve) {\n          const expForOtherSleeves = Player.sleeves[i].process(Player, numCyclesOffline);\n\n          // This sleeve earns experience for other sleeves\n          if (expForOtherSleeves == null) {\n            continue;\n          }\n          for (let j = 0; j < Player.sleeves.length; ++j) {\n            if (j === i) {\n              continue;\n            }\n            Player.sleeves[j].gainExperience(Player, expForOtherSleeves, numCyclesOffline, true);\n          }\n        }\n      }\n\n      // Update total playtime\n      const time = numCyclesOffline * CONSTANTS._idleSpeed;\n      if (Player.totalPlaytime == null) {\n        Player.totalPlaytime = 0;\n      }\n      if (Player.playtimeSinceLastAug == null) {\n        Player.playtimeSinceLastAug = 0;\n      }\n      if (Player.playtimeSinceLastBitnode == null) {\n        Player.playtimeSinceLastBitnode = 0;\n      }\n      Player.totalPlaytime += time;\n      Player.playtimeSinceLastAug += time;\n      Player.playtimeSinceLastBitnode += time;\n\n      Player.lastUpdate = Engine._lastUpdate;\n      Engine.start(); // Run main game loop and Scripts loop\n      const timeOfflineString = convertTimeMsToTimeElapsedString(time);\n      setTimeout(\n        () =>\n          AlertEvents.emit(\n            <>\n              Offline for {timeOfflineString}. While you were offline, your scripts generated{\" \"}\n              <Money money={offlineHackingIncome} />, your Hacknet Nodes generated {hacknetProdInfo} and you gained{\" \"}\n              <Reputation reputation={offlineReputation} /> reputation divided amongst your factions.\n            </>,\n          ),\n        250,\n      );\n    } else {\n      // No save found, start new game\n      initBitNodeMultipliers(Player);\n      initSpecialServerIps();\n      Engine.start(); // Run main game loop and Scripts loop\n      Player.init();\n      initForeignServers(Player.getHomeComputer());\n      initCompanies();\n      initFactions();\n      initAugmentations();\n      initMessages();\n      updateSourceFileFlags(Player);\n\n      // Start interactive tutorial\n      iTutorialStart();\n    }\n  },\n\n  start: function () {\n    // Get time difference\n    const _thisUpdate = new Date().getTime();\n    let diff = _thisUpdate - Engine._lastUpdate;\n    const offset = diff % CONSTANTS._idleSpeed;\n\n    // Divide this by cycle time to determine how many cycles have elapsed since last update\n    diff = Math.floor(diff / CONSTANTS._idleSpeed);\n\n    if (diff > 0) {\n      // Update the game engine by the calculated number of cycles\n      Engine._lastUpdate = _thisUpdate - offset;\n      Player.lastUpdate = _thisUpdate - offset;\n      Engine.updateGame(diff);\n    }\n\n    window.requestAnimationFrame(Engine.start);\n  },\n};\n\nexport { Engine };\n","import React, { useState, useEffect } from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\n\nimport { Terminal } from \"../Terminal\";\nimport { load } from \"../db\";\nimport { Player } from \"../Player\";\nimport { Engine } from \"../engine\";\nimport { GameRoot } from \"./GameRoot\";\n\nimport { CONSTANTS } from \"../Constants\";\n\nexport function LoadingScreen(): React.ReactElement {\n  const [show, setShow] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    const id = setTimeout(() => {\n      if (!loaded) setShow(true);\n    }, 2000);\n    return () => clearTimeout(id);\n  });\n\n  useEffect(() => {\n    async function doLoad(): Promise<void> {\n      await load()\n        .then((saveString) => {\n          Engine.load(saveString);\n          setLoaded(true);\n        })\n        .catch((reason) => {\n          console.error(reason);\n          Engine.load(\"\");\n          setLoaded(true);\n        });\n    }\n    doLoad();\n  }, []);\n\n  if (loaded) {\n    return <GameRoot terminal={Terminal} engine={Engine} player={Player} />;\n  }\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: \"100vh\" }}>\n      <Grid item>\n        <CircularProgress size={150} color=\"primary\" />\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h3\">Loading Bitburner v{CONSTANTS.Version}</Typography>\n      </Grid>\n      {show && (\n        <Grid item>\n          <Typography>\n            If the game fails to load, consider <a href=\"?noScripts\">killing all scripts</a>\n          </Typography>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n","/**\n * Checks that a variable is a valid number. A valid number\n * must be a \"number\" type and cannot be NaN\n */\nexport function isValidNumber(n: number): boolean {\n  return typeof n === \"number\" && !isNaN(n);\n}\n","import { getRandomInt } from \"../../utils/helpers/getRandomInt\";\n\nexport const Growths: {\n  [key: string]: (() => number) | undefined;\n  [\"Tracking\"]: () => number;\n  [\"Bounty Hunter\"]: () => number;\n  [\"Retirement\"]: () => number;\n  [\"Investigation\"]: () => number;\n  [\"Undercover Operation\"]: () => number;\n  [\"Sting Operation\"]: () => number;\n  [\"Raid\"]: () => number;\n  [\"Stealth Retirement Operation\"]: () => number;\n  [\"Assassination\"]: () => number;\n} = {\n  Tracking: () => getRandomInt(5, 75) / 10,\n  \"Bounty Hunter\": () => getRandomInt(5, 75) / 10,\n  Retirement: () => getRandomInt(5, 75) / 10,\n  Investigation: () => getRandomInt(10, 40) / 10,\n  \"Undercover Operation\": () => getRandomInt(10, 40) / 10,\n  \"Sting Operation\": () => getRandomInt(3, 40) / 10,\n  Raid: () => getRandomInt(2, 40) / 10,\n  \"Stealth Retirement Operation\": () => getRandomInt(1, 20) / 10,\n  Assassination: () => getRandomInt(1, 20) / 10,\n};\n","/**\n * Represents a Limit or Buy Order on the stock market. Does not represent\n * a Market Order since those are just executed immediately\n */\nimport { OrderTypes } from \"./data/OrderTypes\";\nimport { PositionTypes } from \"./data/PositionTypes\";\n\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\n\nexport class Order {\n  readonly pos: PositionTypes;\n  readonly price: number;\n  shares: number;\n  readonly stockSymbol: string;\n  readonly type: OrderTypes;\n\n  constructor(\n    stockSymbol = \"\",\n    shares = 0,\n    price = 0,\n    typ: OrderTypes = OrderTypes.LimitBuy,\n    pos: PositionTypes = PositionTypes.Long,\n  ) {\n    // Validate arguments\n    let invalidArgs = false;\n    if (typeof shares !== \"number\" || typeof price !== \"number\") {\n      invalidArgs = true;\n    }\n    if (isNaN(shares) || isNaN(price)) {\n      invalidArgs = true;\n    }\n    if (typeof stockSymbol !== \"string\") {\n      invalidArgs = true;\n    }\n    if (invalidArgs) {\n      throw new Error(`Invalid constructor paramters for Order`);\n    }\n\n    this.stockSymbol = stockSymbol;\n    this.shares = shares;\n    this.price = price;\n    this.type = typ;\n    this.pos = pos;\n  }\n\n  /**\n   * Serialize the Order to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"Order\", this);\n  }\n\n  /**\n   * Initializes a Order from a JSON save state\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Order {\n    return Generic_fromJSON(Order, value.data);\n  }\n}\n\nReviver.constructors.Order = Order;\n","/**\n * Class representing a visitable location in the world\n */\nimport { CityName } from \"./data/CityNames\";\nimport { LocationName } from \"./data/LocationNames\";\nimport { LocationType } from \"./LocationTypeEnum\";\n\ninterface IInfiltrationMetadata {\n  maxClearanceLevel: number;\n  startingSecurityLevel: number;\n}\n\nexport interface IConstructorParams {\n  city?: CityName | null;\n  costMult?: number;\n  expMult?: number;\n  infiltrationData?: IInfiltrationMetadata;\n  name?: LocationName;\n  types?: LocationType[];\n  techVendorMaxRam?: number;\n  techVendorMinRam?: number;\n}\n\nexport class Location {\n  /**\n   * Name of city this location is in. If this property is null, it means this i\n   * is a generic location that is available in all cities\n   */\n  city: CityName | null = null;\n\n  /**\n   * Cost multiplier that influences how expensive a gym/university is\n   */\n  costMult = 0;\n\n  /**\n   * Exp multiplier that influences how effective a gym/university is\n   */\n  expMult = 0;\n\n  /**\n   * Companies can be infiltrated. This contains the data required for that\n   * infiltration event\n   */\n  infiltrationData?: IInfiltrationMetadata;\n\n  /**\n   * Identifier for location\n   */\n  name: LocationName = LocationName.Void;\n\n  /**\n   * List of what type(s) this location is. A location can be multiple types\n   * (e.g. company and tech vendor)\n   */\n  types: LocationType[] = [];\n\n  /**\n   * Tech vendors allow you to purchase servers.\n   * This property defines the max RAM server you can purchase from this vendor\n   */\n  techVendorMaxRam = 0;\n\n  /**\n   * Tech vendors allow you to purchase servers.\n   * This property defines the max RAM server you can purchase from this vendor\n   */\n  techVendorMinRam = 0;\n\n  constructor(p: IConstructorParams) {\n    if (p.city) {\n      this.city = p.city;\n    }\n    if (p.costMult) {\n      this.costMult = p.costMult;\n    }\n    if (p.expMult) {\n      this.expMult = p.expMult;\n    }\n    if (p.infiltrationData) {\n      this.infiltrationData = p.infiltrationData;\n    }\n    if (p.name) {\n      this.name = p.name;\n    }\n    if (p.types) {\n      this.types = p.types;\n    }\n    if (p.techVendorMaxRam) {\n      this.techVendorMaxRam = p.techVendorMaxRam;\n    }\n    if (p.techVendorMinRam) {\n      this.techVendorMinRam = p.techVendorMinRam;\n    }\n  }\n}\n","/**\n * Creates a dropdown (select HTML element) with server hostnames as options\n *\n * Configurable to only contain certain types of servers\n */\nimport React from \"react\";\nimport { AllServers } from \"../../Server/AllServers\";\nimport { Server } from \"../../Server/Server\";\n\nimport { HacknetServer } from \"../../Hacknet/HacknetServer\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\n// TODO make this an enum when this gets converted to TypeScript\nexport const ServerType = {\n  All: 0,\n  Foreign: 1, // Hackable, non-owned servers\n  Owned: 2, // Home Computer, Purchased Servers, and Hacknet Servers\n  Purchased: 3, // Everything from Owned except home computer\n};\n\ninterface IProps {\n  serverType: number;\n  onChange: (event: SelectChangeEvent<string>) => void;\n  value: string;\n}\n\nexport function ServerDropdown(props: IProps): React.ReactElement {\n  /**\n   * Checks if the server should be shown in the dropdown menu, based on the\n   * 'serverType' property\n   */\n  function isValidServer(s: Server | HacknetServer): boolean {\n    const purchased = s instanceof Server && s.purchasedByPlayer;\n    const type = props.serverType;\n    switch (type) {\n      case ServerType.All:\n        return true;\n      case ServerType.Foreign:\n        return s.hostname !== \"home\" && !purchased;\n      case ServerType.Owned:\n        return purchased || s instanceof HacknetServer || s.hostname === \"home\";\n      case ServerType.Purchased:\n        return purchased || s instanceof HacknetServer;\n      default:\n        console.warn(`Invalid ServerType specified for ServerDropdown component: ${type}`);\n        return false;\n    }\n  }\n\n  const servers = [];\n  for (const serverName in AllServers) {\n    const server = AllServers[serverName];\n    if (isValidServer(server)) {\n      servers.push(\n        <MenuItem key={server.hostname} value={server.hostname}>\n          {server.hostname}\n        </MenuItem>,\n      );\n    }\n  }\n\n  return (\n    <Select sx={{ mx: 1 }} value={props.value} onChange={props.onChange}>\n      {servers}\n    </Select>\n  );\n}\n","/**\n * React Component for displaying a location's UI\n *\n * This is a \"router\" component of sorts, meaning it deduces the type of\n * location that is being rendered and then creates the proper component(s) for that.\n */\nimport * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nimport { CompanyLocation } from \"./CompanyLocation\";\nimport { GymLocation } from \"./GymLocation\";\nimport { HospitalLocation } from \"./HospitalLocation\";\nimport { SlumsLocation } from \"./SlumsLocation\";\nimport { SpecialLocation } from \"./SpecialLocation\";\nimport { TechVendorLocation } from \"./TechVendorLocation\";\nimport { TravelAgencyRoot } from \"./TravelAgencyRoot\";\nimport { UniversityLocation } from \"./UniversityLocation\";\nimport { CasinoLocation } from \"./CasinoLocation\";\n\nimport { Location } from \"../Location\";\nimport { LocationType } from \"../LocationTypeEnum\";\n\nimport { Settings } from \"../../Settings/Settings\";\n\nimport { SpecialServerIps } from \"../../Server/SpecialServerIps\";\nimport { getServer, isBackdoorInstalled } from \"../../Server/ServerHelpers\";\n\nimport { CorruptableText } from \"../../ui/React/CorruptableText\";\nimport { use } from \"../../ui/Context\";\n\ntype IProps = {\n  loc: Location;\n};\n\nexport function GenericLocation({ loc }: IProps): React.ReactElement {\n  const router = use.Router();\n  const player = use.Player();\n  /**\n   * Determine what needs to be rendered for this location based on the locations\n   * type. Returns an array of React components that should be rendered\n   */\n  function getLocationSpecificContent(): React.ReactNode[] {\n    const content: React.ReactNode[] = [];\n\n    if (loc.types.includes(LocationType.Company)) {\n      content.push(<CompanyLocation key={\"companylocation\"} locName={loc.name} />);\n    }\n\n    if (loc.types.includes(LocationType.Gym)) {\n      content.push(<GymLocation key={\"gymlocation\"} router={router} loc={loc} p={player} />);\n    }\n\n    if (loc.types.includes(LocationType.Hospital)) {\n      content.push(<HospitalLocation key={\"hospitallocation\"} p={player} />);\n    }\n\n    if (loc.types.includes(LocationType.Slums)) {\n      content.push(<SlumsLocation key={\"slumslocation\"} />);\n    }\n\n    if (loc.types.includes(LocationType.Special)) {\n      content.push(<SpecialLocation key={\"speciallocation\"} loc={loc} />);\n    }\n\n    if (loc.types.includes(LocationType.TechVendor)) {\n      content.push(<TechVendorLocation key={\"techvendorlocation\"} loc={loc} />);\n    }\n\n    if (loc.types.includes(LocationType.TravelAgency)) {\n      content.push(<TravelAgencyRoot key={\"travelagencylocation\"} p={player} router={router} />);\n    }\n\n    if (loc.types.includes(LocationType.University)) {\n      content.push(<UniversityLocation key={\"universitylocation\"} loc={loc} />);\n    }\n\n    if (loc.types.includes(LocationType.Casino)) {\n      content.push(<CasinoLocation key={\"casinoLocation\"} p={player} />);\n    }\n\n    return content;\n  }\n\n  const locContent: React.ReactNode[] = getLocationSpecificContent();\n  const ip = SpecialServerIps.getIp(loc.name);\n  const server = getServer(ip);\n  const backdoorInstalled = server !== null && isBackdoorInstalled(server);\n\n  return (\n    <>\n      <Button onClick={() => router.toCity()}>Return to World</Button>\n      <Typography variant=\"h4\">\n        {backdoorInstalled && !Settings.DisableTextEffects ? <CorruptableText content={loc.name} /> : loc.name}\n      </Typography>\n      {locContent}\n    </>\n  );\n}\n","import React, { FC } from \"react\";\nimport { Card, Suit } from \"./Card\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\n\ntype Props = {\n  card: Card;\n  hidden?: boolean;\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    card: {\n      padding: \"10px\",\n      border: \"solid 1px #808080\",\n      backgroundColor: \"white\",\n      display: \"inline-block\",\n      borderRadius: \"10px\",\n      fontSize: \"18.5px\",\n      textAlign: \"center\",\n      margin: \"3px\",\n      fontWeight: \"bold\",\n    },\n    red: {\n      color: \"red\",\n    },\n\n    black: {\n      color: \"black\",\n    },\n    value: {\n      fontSize: \"20px\",\n      fontFamily: \"sans-serif\",\n    },\n  }),\n);\n\nexport const ReactCard: FC<Props> = ({ card, hidden }) => {\n  const classes = useStyles();\n  let suit: React.ReactNode;\n  switch (card.suit) {\n    case Suit.Clubs:\n      suit = <span>&#9827;</span>;\n      break;\n    case Suit.Diamonds:\n      suit = <span>&#9830;</span>;\n      break;\n    case Suit.Hearts:\n      suit = <span>&#9829;</span>;\n      break;\n    case Suit.Spades:\n      suit = <span>&#9824;</span>;\n      break;\n    default:\n      throw new Error(`MissingCaseException: ${card.suit}`);\n  }\n  return (\n    <Paper className={`${classes.card} ${card.isRedSuit() ? classes.red : classes.black}`}>\n      <>\n        <span className={classes.value}>{hidden ? \" - \" : card.formatValue()}</span>\n        <span>{hidden ? \" - \" : suit}</span>\n      </>\n    </Paper>\n  );\n};\n","export type Position = {\n  row: number;\n  column: number;\n};\n\nclass PositionTracker {\n  positions: Map<string, Position>;\n\n  constructor() {\n    this.positions = new Map<string, Position>();\n  }\n\n  saveCursor(filename: string, pos: Position): void {\n    this.positions.set(filename, pos);\n  }\n\n  getCursor(filename: string): Position {\n    const position = this.positions.get(filename);\n    if (!position) {\n      return {\n        row: -1,\n        column: -1,\n      };\n    }\n    return position;\n  }\n}\n\nexport const CursorPositions: PositionTracker = new PositionTracker();\n","export const libSource = `interface NS {\n    args: string[];\n    /**\n     * Example documentation for scan.\n     * Example documentation for scan.\n     * Example documentation for scan.\n     * Example documentation for scan.\n     * Example documentation for scan.\n     * Example documentation for scan.\n     * Example documentation for scan.\n     * Example documentation for scan.\n     * Example documentation for scan.\n     */\n    scan(ip: string, hostnames: boolean): string[];\n    hack(ip: string, threads: number, stock: boolean): Promise<string>;\n    hackAnalyzeThreads(ip: string, hackAmount: number): number;\n    hackAnalyzePercent(ip: string): number;\n    hackChance(ip: string): number;\n    sleep(time: number): Promise<void>;\n    grow(ip: string, threads: number, stock: boolean): Promise<string>;\n    growthAnalyze(ip: string, growth: number): number;\n    weaken(ip: string, threads: boolean): Promise<string>;\n    print(...args: any[]): void;\n    tprint(...args: any[]): void;\n    clearLog(): void;\n    disableLog(fn: string): void;\n    enableLog(fn: string): void;\n    isLogEnabled(fn: string): boolean;\n    getScriptLogs(fn: string, ip: string, ...scriptArgs: any[]): string[];\n    tail(fn: string, ip: string, ...scriptArgs: any[]): void;\n    nuke(ip: string): boolean;\n    brutessh(ip: string): boolean;\n    ftpcrack(ip: string): boolean;\n    relaysmtp(ip: string): boolean;\n    httpworm(ip: string): boolean;\n    sqlinject(ip: string): boolean;\n    run(scriptname: string, threads: number): number;\n    exec(scriptname: string, ip: string, threads: number): number;\n    spawn(scriptname: string, threads: number): void;\n    kill(filename: string, ip: string, ...scriptArgs: any[]): boolean;\n    killall(ip: string): boolean;\n    exit(): void;\n    scp(scriptname: string, ip1: string, ip2: string): boolean;\n    ls(ip: string, grep: string): string[];\n    ps(ip: string): {filename: string, threads: number, args: string[], pid: number}[];\n    hasRootAccess(ip: string): boolean;\n    getIp(): string;\n    getHostname(): string;\n    getHackingLevel(): number;\n    getHackingMultipliers(): number;\n    getHacknetMultipliers(): number;\n    getBitNodeMultipliers(): number;\n    getServer(ip: string): any;\n    getServerMoneyAvailable(ip: string): number;\n    getServerSecurityLevel(ip: string): number;\n    getServerBaseSecurityLevel(ip: string): number;\n    getServerMinSecurityLevel(ip: string): number;\n    getServerRequiredHackingLevel(ip: string): number;\n    getServerMaxMoney(ip: string): number;\n    getServerGrowth(ip: string): number;\n    getServerNumPortsRequired(ip: string): number;\n    getServerRam(ip: string): number[];\n    getServerMaxRam(ip: string): number;\n    getServerUsedRam(ip: string): number;\n    serverExists(ip: string): boolean;\n    fileExists(filename: string, ip: string): boolean;\n    isRunning(fn: string, ip: string, ...scriptArgs: any[]): boolean;\n    getStockSymbols(): string[];\n    getStockPrice(symbol: string): number;\n    getStockAskPrice(symbol: string): number;\n    getStockBidPrice(symbol: string): number;\n    getStockPosition(symbol: string): number;\n    getStockMaxShares(symbol: string): number;\n    getStockPurchaseCost(symbol: string, shares: number, posType: string): number;\n    getStockSaleGain(symbol: string, shares: number, posType: string): number;\n    buyStock(symbol: string, shares: number): number;\n    sellStock(symbol: string, shares: number): number;\n    shortStock(symbol: string, shares: number): number;\n    sellShort(symbol: string, shares: number): number;\n    placeOrder(symbol: string, shares: number, price: number, type: string, pos: string): boolean;\n    cancelOrder(symbol: string, shares: number, price: number, type: string, pos: string): boolean;\n    getOrders(): any;\n    getStockVolatility(symbol: string): number;\n    getStockForecast(symbol: string): number;\n    getPurchasedServerLimit(): number;\n    getPurchasedServerMaxRam(): number;\n    getPurchasedServerCost(ram: number): number;\n    purchaseServer(hostname: string, ram: number): string;\n    deleteServer(hostname: string): boolean;\n    getPurchasedServers(hostname: string): string[];\n    write(port: number, data: string, mode: string): boolean;\n    tryWrite(port: number, data: string): boolean;\n    read(port: number): any;\n    peek(port: number): any;\n    clear(port: number): number;\n    getPortHandle(port: number): any; // netscript port\n    rm(fn: string, ip: string): boolean;\n    scriptRunning(scriptname: string, ip: string): boolean;\n    scriptKill(scriptname: string, ip: string): boolean;\n    getScriptName(): string;\n    getScriptRam(scriptname: string, ip: string): number;\n    getRunningScript(fn: string, ip: string): any; // running script\n    getHackTime(ip: string): number;\n    getGrowTime(ip: string): number;\n    getWeakenTime(ip: string): number;\n    getScriptIncome(scriptname: string, ip: string): number;\n    getScriptExpGain(scriptname: string, ip: string): number;\n    nFormat(n: number, format: string): string;\n    tFormat(milliseconds: number, milliPrecision: boolean): string;\n    getTimeSinceLastAug(): number;\n    prompt(txt: string): Promise<boolean>;\n    getFavorToDonate(): number;\n    universityCourse(universityName: string, className: string): boolean;\n    gymWorkout(gymName: string, stat: string): boolean;\n    travelToCity(cityname: string): boolean;\n    purchaseTor(): boolean;\n    purchaseProgram(programName: string): boolean;\n    getCurrentServer(): any; // server object\n    connect(hostname: string): boolean;\n    manualHack(): Promise<string>;\n    installBackdoor(): Promise<void>;\n    getStats(): any; // complex type\n    getCharacterInformation(): any; // complex type\n    getPlayer(): any; // complex type\n    hospitalize(): number;\n    isBusy(): boolean;\n    stopAction(): boolean;\n    upgradeHomeRam(): number;\n    getUpgradeHomeRamCost(): number;\n    workForCompany(companyName: string): boolean;\n    applyToCompany(companyName: string, field: string): boolean;\n    getCompanyRep(companyName: string): number;\n    getCompanyFavor(companyName: string): number;\n    getCompanyFavorGain(companyName: string): number;\n    checkFactionInvitations(): string[];\n    joinFaction(name: string): boolean;\n    workForFaction(name: string, type: string): boolean;\n    getFactionRep(name: string): number;\n    getFactionFavor(name: string): number;\n    getFactionFavorGain(name: string): number;\n    donateToFaction(name: string, amt: number): boolean;\n    createProgram(name: string): boolean;\n    commitCrime(crimeRoughName: string): number;\n    getCrimeChance(crimeRoughName: string): boolean;\n    getCrimeStats(crimeRoughName: string): any; // complex type\n    getOwnedAugmentations(purchased: boolean): string[];\n    getOwnedSourceFiles(): any; // complex type\n    getAugmentationsFromFaction(facname: string): string[];\n    getAugmentationCost(name: string): number;\n    getAugmentationPrereq(name: string): string[];\n    getAugmentationPrice(name: string): number;\n    getAugmentationRepReq(name: string): number;\n    getAugmentationStats(name: string): any; // complex type\n    purchaseAugmentation(faction: string, name: string): boolean;\n    softReset(cbScript: string): void;\n    installAugmentations(cbScript: string): void;\n    exploit(): void;\n    bypass(doc: any): void;\n    flags(data: any): any;\n}`;\n","import { Milestone } from \"./Milestone\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { Factions } from \"../Faction/Factions\";\nimport { Faction } from \"../Faction/Faction\";\nimport { GetServerByHostname } from \"../Server/ServerHelpers\";\n\nfunction allFactionAugs(p: IPlayer, f: Faction): boolean {\n  const factionAugs = f.augmentations.slice().filter((aug) => aug !== \"NeuroFlux Governor\");\n  for (const factionAug of factionAugs) {\n    if (\n      !p.augmentations.some((aug) => {\n        return aug.name == factionAug;\n      })\n    )\n      return false;\n  }\n  return true;\n}\n\nexport const Milestones: Milestone[] = [\n  {\n    title: \"Gain root access on CSEC\",\n    fulfilled: (): boolean => {\n      const server = GetServerByHostname(\"CSEC\");\n      if (!server || !server.hasOwnProperty(\"hasAdminRights\")) return false;\n      return (server as any).hasAdminRights;\n    },\n  },\n  {\n    title: \"Install the backdoor on CSEC\",\n    fulfilled: (): boolean => {\n      const server = GetServerByHostname(\"CSEC\");\n      if (!server || !server.hasOwnProperty(\"backdoorInstalled\")) return false;\n      return (server as any).backdoorInstalled;\n    },\n  },\n  {\n    title: \"Join the faction hinted at in csec-test.msg\",\n    fulfilled: (p: IPlayer): boolean => {\n      return p.factions.includes(\"CyberSec\");\n    },\n  },\n  {\n    title: \"Install all the Augmentations from CyberSec\",\n    fulfilled: (p: IPlayer): boolean => {\n      return allFactionAugs(p, Factions[\"CyberSec\"]);\n    },\n  },\n  {\n    title: \"Join the faction hinted at in nitesec-test.msg\",\n    fulfilled: (p: IPlayer): boolean => {\n      return p.factions.includes(\"NiteSec\");\n    },\n  },\n  {\n    title: \"Install all the Augmentations from NiteSec\",\n    fulfilled: (p: IPlayer): boolean => {\n      return allFactionAugs(p, Factions[\"NiteSec\"]);\n    },\n  },\n  {\n    title: \"Join the faction hinted at in j3.msg\",\n    fulfilled: (p: IPlayer): boolean => {\n      return p.factions.includes(\"The Black Hand\");\n    },\n  },\n  {\n    title: \"Install all the Augmentations from The Black Hand\",\n    fulfilled: (p: IPlayer): boolean => {\n      return allFactionAugs(p, Factions[\"The Black Hand\"]);\n    },\n  },\n  {\n    title: \"Join the faction hinted at in 19dfj3l1nd.msg\",\n    fulfilled: (p: IPlayer): boolean => {\n      return p.factions.includes(\"BitRunners\");\n    },\n  },\n  {\n    title: \"Install all the Augmentations from BitRunners\",\n    fulfilled: (p: IPlayer): boolean => {\n      return allFactionAugs(p, Factions[\"BitRunners\"]);\n    },\n  },\n  {\n    title: \"Complete fl1ght.exe\",\n    fulfilled: (p: IPlayer): boolean => {\n      // technically wrong but whatever\n      return p.factions.includes(\"Daedalus\");\n    },\n  },\n  {\n    title: \"Install the special Augmentation from Daedalus\",\n    fulfilled: (p: IPlayer): boolean => {\n      return p.augmentations.some((aug) => aug.name == \"The Red Pill\");\n    },\n  },\n  {\n    title: \"Install the final backdoor and free yourself.\",\n    fulfilled: (): boolean => {\n      return false;\n    },\n  },\n];\n","import { CONSTANTS } from \"../../Constants\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\nexport function repFromDonation(amt: number, player: IPlayer): number {\n  return (amt / CONSTANTS.DonateMoneyToRepDivisor) * player.faction_rep_mult;\n}\n","import { StockSymbols } from \"./StockSymbols\";\n\nexport const TickerHeaderFormatData = {\n  longestName: 0,\n  longestSymbol: 0,\n};\n\nfor (const key in StockSymbols) {\n  TickerHeaderFormatData.longestName = Math.max(key.length, TickerHeaderFormatData.longestName);\n  TickerHeaderFormatData.longestSymbol = Math.max(StockSymbols[key].length, TickerHeaderFormatData.longestSymbol);\n}\n","import { substituteAliases } from \"../Alias\";\n// Helper function that checks if an argument (which is a string) is a valid number\nfunction isNumber(str: string): boolean {\n  if (typeof str != \"string\") {\n    return false;\n  } // Only process strings\n  return !isNaN(str as unknown as number) && !isNaN(parseFloat(str));\n}\nexport function ParseCommands(commands: string): string[] {\n  // Sanitize input\n  commands = commands.trim();\n  // Replace all extra whitespace in command with a single space\n  commands = commands.replace(/\\s\\s+/g, \" \");\n\n  const match = commands.match(/(?:'[^']*'|\"[^\"]*\"|[^;\"])*/g);\n  if (!match) return [];\n  // Split commands and execute sequentially\n  const allCommands = match\n    .map(substituteAliases)\n    .map((c) => c.match(/(?:'[^']*'|\"[^\"]*\"|[^;\"])*/g))\n    .flat();\n\n  const out: string[] = [];\n  for (const c of allCommands) {\n    if (c === null) continue;\n    if (c.match(/^\\s*$/)) {\n      continue;\n    } // Don't run commands that only have whitespace\n    out.push(c.trim());\n  }\n  return out;\n}\n\nexport function ParseCommand(command: string): (string | number)[] {\n  // This will be used to keep track of whether we're in a quote. This is for situations\n  // like the alias command:\n  //      alias run=\"run NUKE.exe\"\n  // We want the run=\"run NUKE.exe\" to be parsed as a single command, so this flag\n  // will keep track of whether we have a quote in\n  let inQuote = ``;\n\n  // Returns an array with the command and its arguments in each index\n  // Properly handles quotation marks (e.g. `run foo.script \"the sun\"` will return [run, foo.script, the sun])\n  const args = [];\n  let start = 0,\n    i = 0;\n  let prevChar = \"\"; // Previous character\n  while (i < command.length) {\n    let escaped = false; // Check for escaped quotation marks\n    if (i >= 1) {\n      prevChar = command.charAt(i - 1);\n      if (prevChar === \"\\\\\") {\n        escaped = true;\n      }\n    }\n\n    const c = command.charAt(i);\n    if (c === '\"') {\n      // Double quotes\n      if (!escaped && prevChar === \" \") {\n        const endQuote = command.indexOf('\"', i + 1);\n        if (endQuote !== -1 && (endQuote === command.length - 1 || command.charAt(endQuote + 1) === \" \")) {\n          args.push(command.substr(i + 1, endQuote - i - 1));\n          if (endQuote === command.length - 1) {\n            start = i = endQuote + 1;\n          } else {\n            start = i = endQuote + 2; // Skip the space\n          }\n          continue;\n        }\n      } else {\n        if (inQuote === ``) {\n          inQuote = `\"`;\n        } else if (inQuote === `\"`) {\n          inQuote = ``;\n        }\n      }\n    } else if (c === \"'\") {\n      // Single quotes, same thing as above\n      if (!escaped && prevChar === \" \") {\n        const endQuote = command.indexOf(\"'\", i + 1);\n        if (endQuote !== -1 && (endQuote === command.length - 1 || command.charAt(endQuote + 1) === \" \")) {\n          args.push(command.substr(i + 1, endQuote - i - 1));\n          if (endQuote === command.length - 1) {\n            start = i = endQuote + 1;\n          } else {\n            start = i = endQuote + 2; // Skip the space\n          }\n          continue;\n        }\n      } else {\n        if (inQuote === ``) {\n          inQuote = `'`;\n        } else if (inQuote === `'`) {\n          inQuote = ``;\n        }\n      }\n    } else if (c === \" \" && inQuote === ``) {\n      const arg = command.substr(start, i - start);\n\n      // If this is a number, convert it from a string to number\n      if (isNumber(arg)) {\n        args.push(parseFloat(arg));\n      } else {\n        args.push(arg);\n      }\n\n      start = i + 1;\n    }\n    ++i;\n  }\n\n  // Add the last argument\n  if (start !== i) {\n    const arg = command.substr(start, i - start);\n\n    // If this is a number, convert it from string to number\n    if (isNumber(arg)) {\n      args.push(parseFloat(arg));\n    } else {\n      args.push(arg);\n    }\n  }\n\n  return args;\n}\n","/* tslint:disable:max-line-length completed-docs variable-name*/\nimport { IMap } from \"../types\";\n\nexport const TerminalHelpText: string[] = [\n  \"Type 'help name' to learn more about the command \",\n  \"\",\n  'alias [-g] [name=\"value\"]            Create or display Terminal aliases',\n  \"analyze                              Get information about the current machine \",\n  \"backdoor                             Install a backdoor on the current machine \",\n  \"buy [-l/program]                     Purchase a program through the Dark Web\",\n  \"cat [file]                           Display a .msg, .lit, or .txt file\",\n  \"cd [dir]                             Change to a new directory\",\n  \"check [script] [args...]             Print a script's logs to Terminal\",\n  \"clear                                Clear all text on the terminal \",\n  \"cls                                  See 'clear' command \",\n  \"connect [ip/hostname]                Connects to a remote server\",\n  \"download [script/text file]          Downloads scripts or text files to your computer\",\n  \"expr [math expression]               Evaluate a mathematical expression\",\n  \"free                                 Check the machine's memory (RAM) usage\",\n  \"hack                                 Hack the current machine\",\n  \"help [command]                       Display this help text, or the help text for a command\",\n  \"home                                 Connect to home computer\",\n  \"hostname                             Displays the hostname of the machine\",\n  \"ifconfig                             Displays the IP address of the machine\",\n  \"kill [script/pid] [args...]          Stops the specified script on the current server \",\n  \"killall                              Stops all running scripts on the current machine\",\n  \"ls [dir] [| grep pattern]            Displays all files on the machine\",\n  \"lscpu                                Displays the number of CPU cores on the machine\",\n  \"mem [script] [-t] [n]                Displays the amount of RAM required to run the script\",\n  \"mv [src] [dest]                      Move/rename a text or script file\",\n  \"nano [file]                          Text editor - Open up and edit a script or text file\",\n  \"ps                                   Display all scripts that are currently running\",\n  \"rm [file]                            Delete a file from the server\",\n  \"run [name] [-t n] [--tail] [args...] Execute a program or script\",\n  \"scan                                 Prints all immediately-available network connections\",\n  \"scan-analyze [d] [-a]                Prints info for all servers up to <i>d</i> nodes away\",\n  \"scp [file] [server]                  Copies a file to a destination server\",\n  \"sudov                                Shows whether you have root access on this computer\",\n  \"tail [script] [args...]              Displays dynamic logs for the specified script\",\n  \"top                                  Displays all running scripts and their RAM usage\",\n  \"unalias [alias name]                 Deletes the specified alias\",\n  \"wget [url] [target file]             Retrieves code/text from a web server\",\n];\n\nexport const HelpTexts: IMap<string[]> = {\n  alias: [\n    'alias [-g] [name=\"value\"] ',\n    \" \",\n    \"Create or display aliases. An alias enables a replacement of a word with another string. \",\n    \"It can be used to abbreviate a commonly used command, or commonly used parts of a command. The NAME \",\n    \"of an alias defines the word that will be replaced, while the VALUE defines what it will be replaced by. For example, \",\n    \"you could create the alias 'nuke' for the Terminal command 'run NUKE.exe' using the following: \",\n    \" \",\n    'alias nuke=\"run NUKE.exe\"',\n    \" \",\n    \"Then, to run the NUKE.exe program you would just have to enter 'nuke' in Terminal rather than the full command. \",\n    \"It is important to note that 'default' aliases will only be substituted for the first word of a Terminal command. For \",\n    \"example, if the following alias was set: \",\n    \" \",\n    'alias worm=\"HTTPWorm.exe\"',\n    \" \",\n    \"and then you tried to run the following terminal command: \",\n    \" \",\n    \"run worm\",\n    \" \",\n    \"This would fail because the worm alias is not the first word of a Terminal command. To allow an alias to be substituted \",\n    \"anywhere in a Terminal command, rather than just the first word, you must set it to be a global alias using the -g flag: \",\n    \" \",\n    'alias -g worm=\"HTTPWorm.exe\"',\n    \" \",\n    \"Now, the 'worm' alias will be substituted anytime it shows up as an individual word in a Terminal command. \",\n    \" \",\n    \"Entering just the command 'alias' without any arguments prints the list of all defined aliases in the reusable form \",\n    \"'alias NAME=VALUE' on the Terminal. \",\n    \" \",\n    \"The 'unalias' command can be used to remove aliases.\",\n    \" \",\n  ],\n  analyze: [\n    \"analze\",\n    \" \",\n    \"Prints details and statistics about the current server. The information that is printed includes basic \",\n    \"server details such as the hostname, whether the player has root access, what ports are opened/closed, and also \",\n    \"hacking-related information such as an estimated chance to successfully hack, an estimate of how much money is \",\n    \"available on the server, etc.\",\n  ],\n  backdoor: [\n    \"backdoor\",\n    \" \",\n    \"Install a backdoor on the current machine, grants a secret bonus depending on the machine.\",\n    \" \",\n    \"Requires root access to run.\",\n    \" \",\n  ],\n  buy: [\n    \"buy [-l / program]\",\n    \" \",\n    \"Purchase a program through the Dark Web. Requires a TOR router to use.\",\n    \" \",\n    \"If this command is ran with the '-l' flag, it will display a list of all programs that can be bought through the \",\n    \"dark web to the Terminal, as well as their costs.\",\n    \" \",\n    \"Otherwise, the name of the program must be passed in as a parameter. This name is NOT case-sensitive.\",\n  ],\n  cat: [\n    \"cat [file]\",\n    \" \",\n    \"Display message (.msg), literature (.lit), or text (.txt) files. Examples:\",\n    \" \",\n    \"cat j1.msg\",\n    \" \",\n    \"cat foo.lit\",\n    \" \",\n    \"cat servers.txt\",\n  ],\n  cd: [\n    \"cd [dir]\",\n    \" \",\n    \"Change to the specified directory. Note that this works even for directories that don't exist. If you \",\n    \"change to a directory that does not exist, it will not be 'created'. Examples:\",\n    \" \",\n    \"cd scripts/hacking\",\n    \" \",\n    \"cd /logs\",\n    \" \",\n    \"cd ../\",\n  ],\n  check: [\n    \"check [script name] [args...]\",\n    \" \",\n    \"Print the logs of the script specified by the script name and arguments to the Terminal. Each argument must be separated by \",\n    \"a space. Remember that a running script is uniquely \",\n    \"identified both by its name and the arguments that are used to start it. So, if a script was ran with the following arguments: \",\n    \" \",\n    \"run foo.script 1 2 foodnstuff\",\n    \" \",\n    \"Then to run the 'check' command on this script you would have to pass the same arguments in: \",\n    \" \",\n    \"check foo.script 1 2 foodnstuff\",\n  ],\n  clear: [\n    \"clear\",\n    \" \",\n    \"Clear the Terminal screen, deleting all of the text. Note that this does not delete the user's command history, so using the up \",\n    \"and down arrow keys is still valid. Also note that this is permanent and there is no way to undo this. Synonymous with 'cls' command\",\n  ],\n  cls: [\n    \"cls\",\n    \" \",\n    \"Clear the Terminal screen, deleting all of the text. Note that this does not delete the user's command history, so using the up \",\n    \"and down arrow keys is still valid. Also note that this is permanent and there is no way to undo this. Synonymous with 'clear' command\",\n  ],\n  connect: [\n    \"connect [hostname/ip]\",\n    \" \",\n    \"Connect to a remote server. The hostname or IP address of the remote server must be given as the argument \",\n    \"to this command. Note that only servers that are immediately adjacent to the current server in the network can be connected to. To \",\n    \"see which servers can be connected to, use the 'scan' command.\",\n  ],\n  download: [\n    \"download [script/text file]\",\n    \" \",\n    \"Downloads a script or text file to your computer (like your real life computer).\",\n    \" \",\n    \"You can also download all of your scripts/text files as a zip file using the following Terminal commands:\",\n    \" \",\n    \"Download all scripts and text files: download *\",\n    \" \",\n    \"Download all scripts: download *.script\",\n    \" \",\n    \"Download all text files: download *.txt\",\n    \" \",\n  ],\n  expr: [\n    \"expr [mathematical expression]\",\n    \" \",\n    \"Evaluate a  simple mathematical expression. Supports native JavaScript operators:\",\n    \" \",\n    \"+, -, /, *, **, %\",\n    \" \",\n    \"Example:\",\n    \" \",\n    \"expr 25 * 2 ** 10\",\n    \" \",\n    \"Note that letters (non-digits) are not allowed and will be removed from the input.\",\n  ],\n  free: [\n    \"free\",\n    \" \",\n    \"Display's the memory usage on the current machine. Print the amount of RAM that is available on the current server as well as \",\n    \"how much of it is being used.\",\n  ],\n  hack: [\n    \"hack\",\n    \" \",\n    \"Attempt to hack the current server. Requires root access in order to be run. See the wiki page for hacking mechanics\",\n    \" \",\n  ],\n  help: [\n    \"help [command]\",\n    \" \",\n    \"Display Terminal help information. Without arguments, 'help' prints a list of all valid Terminal commands and a brief \",\n    \"description of their functionality. You can also pass the name of a Terminal command as an argument to 'help' to print \",\n    \"more detailed information about the Terminal command. Examples: \",\n    \" \",\n    \"help alias\",\n    \" \",\n    \"help scan-analyze\",\n  ],\n  home: [\n    \"home\" + \"Connect to your home computer. This will work no matter what server you are currently connected to.\",\n  ],\n  hostname: [\"hostname\", \" \", \"Prints the hostname of the current server\"],\n  ifconfig: [\"ipconfig\", \" \", \"Prints the IP address of the current server\"],\n  kill: [\n    \"kill [script name] [args...]\",\n    \" \",\n    \"kill [pid]\",\n    \" \",\n    \"Kill the script specified by the script name and arguments OR by its PID.\",\n    \" \",\n    \"If you are killing the script using its filename and arguments, then each \",\n    \"argument must be separated by a space. Remember that a running script is \",\n    \"uniquely identified by both its name and the arguments that are used to start \",\n    \"it. So, if a script was ran with the following arguments:\",\n    \" \",\n    \"run foo.script 1 sigma-cosmetics\",\n    \" \",\n    \"Then to kill this script the same arguments would have to be used:\",\n    \" \",\n    \"kill foo.script 1 sigma-cosmetics\",\n    \" \",\n    \"If you are killing the script using its PID, then the PID argument must be numeric\",\n  ],\n  killall: [\n    \"killall\",\n    \" \",\n    \"Kills all scripts on the current server. \",\n    \"Note that after the 'kill' command is issued for a script, it may take a while for the script to actually stop running. \",\n    \"This will happen if the script is in the middle of a command such as grow() or weaken() that takes time to execute. \",\n    \"The script will not be stopped/killed until after that time has elapsed.\",\n  ],\n  ls: [\n    \"ls [dir] [| grep pattern]\",\n    \" \",\n    \"The ls command, with no arguments, prints all files and directories on the current server's directory to the Terminal screen. \",\n    \"The files will be displayed in alphabetical order. \",\n    \" \",\n    \"The 'dir' optional parameter can be used to display files/directories in another directory.\",\n    \" \",\n    \"The '| grep pattern' optional parameter can be used to only display files whose filenames match the specified pattern.\",\n    \" \",\n    \"Examples:\",\n    \" \",\n    \"List all files with the '.script' extension in the current directory:\",\n    \" \",\n    \"ls | grep .script\",\n    \" \",\n    \"List all files with the '.js' extension in the root directory:\",\n    \" \",\n    \"ls / | grep .js\",\n    \" \",\n    \"List all files with the word 'purchase' in the filename, in the 'scripts' directory:\",\n    \" \",\n    \"ls scripts | grep purchase\",\n  ],\n  lscpu: [\"lscpu\", \" \", \"Prints the number of CPU Cores the current server has\"],\n\n  mem: [\n    \"mem [script name] [-t num_threads]\",\n    \" \",\n    \"Displays the amount of RAM needed to run the specified script with a single thread. The command can also be used to print \",\n    \"the amount of RAM needed to run a script with multiple threads using the '-t' flag. If the '-t' flag is specified, then \",\n    \"an argument for the number of threads must be passed in afterwards. Examples:\",\n    \" \",\n    \"mem foo.script\",\n    \" \",\n    \"mem foo.script -t 50\",\n    \" \",\n    \"The first example above will print the amount of RAM needed to run 'foo.script' with a single thread. The second example \",\n    \"above will print the amount of RAM needed to run 'foo.script' with 50 threads.\",\n  ],\n  mv: [\n    \"mv [src] [dest]\",\n    \" \",\n    \"Move the source file to the specified destination. This can also be used to rename files. \",\n    \"This command only works for scripts and text files (.txt). This command CANNOT be used to \",\n    \"convert to different file types\",\n    \" \",\n    \"Note that, unlike the Linux 'mv' command, the destination argument must be the \",\n    \"full filepath. \",\n    \"Examples: \",\n    \" \",\n    \"mv hacking-controller.script scripts/hacking-controller.script\",\n    \" \",\n    \"mv myScript.js myOldScript.js\",\n  ],\n  nano: [\n    \"nano [file name]\",\n    \" \",\n    \"Opens up the specified file in the Text Editor. Only scripts (.script) or text files (.txt) can be \",\n    \"edited using the Text Editor. If the file does not already exist, then a new, empty one \",\n    \"will be created\",\n  ],\n  ps: [\"ps\", \" \", \"Prints all scripts that are running on the current server\"],\n\n  rm: [\n    \"rm [file]\",\n    \" \",\n    \"Removes the specified file from the current server. A file can be a script, a program, or a message file. \",\n    \" \",\n    \"WARNING: This is permanent and cannot be undone\",\n  ],\n  run: [\n    \"run [file name] [-t] [num threads] [args...]\",\n    \" \",\n    \"Execute a program or a script.\",\n    \" \",\n    \"The '[-t]', '[num threads]', and '[args...]' arguments are only valid when running a script. The '-t' flag is used \",\n    \"to indicate that the script should be run with the specified number of threads. If the flag is omitted, \",\n    \"then the script will be run with a single thread by default. \",\n    \"If the '-t' flag is used, then it MUST come immediately \",\n    \"after the script name, and the [num threads] argument MUST come immediately afterwards. \",\n    \" \",\n    \"[args...] represents a variable number of arguments that will be passed into the script. See the documentation \",\n    \"about script arguments. Each specified argument must be separated by a space. \",\n    \" \",\n  ],\n  scan: [\n    \"scan\",\n    \" \",\n    \"Prints all immediately-available network connection. This will print a list of all servers that you can currently connect \",\n    \"to using the 'connect' Terminal command.\",\n  ],\n  \"scan-analyze\": [\n    \"scan-analyze [depth] [-a]\",\n    \" \",\n    \"Prints detailed information about all servers up to [depth] nodes away on the network. Calling \",\n    \"'scan-analyze 1' will display information for the same servers that are shown by the 'scan' Terminal \",\n    \"command. This command also shows the relative paths to reach each server.\",\n    \" \",\n    \"By default, the maximum depth that can be specified for 'scan-analyze' is 3. However, once you have \",\n    \"the DeepscanV1.exe and DeepscanV2.exe programs, you can execute 'scan-analyze' with a depth up to \",\n    \"5 and 10, respectively.\",\n    \" \",\n    \"The information 'scan-analyze' displays about each server includes whether or not you have root access to it, \",\n    \"its required hacking level, the number of open ports required to run NUKE.exe on it, and how much RAM \",\n    \"it has.\",\n    \" \",\n    \"By default, this command will not display servers that you have purchased. However, you can pass in the \",\n    \"-a flag at the end of the command if you would like to enable that.\",\n  ],\n  scp: [\n    \"scp [filename] [target server]\",\n    \" \",\n    \"Copies the specified file from the current server to the target server. \",\n    \"This command only works for script files (.script extension), literature files (.lit extension), \",\n    \"and text files (.txt extension). \",\n    \"The second argument passed in must be the hostname or IP of the target server.\",\n  ],\n  sudov: [\"sudov\", \" \", \"Prints whether or not you have root access to the current machine\"],\n\n  tail: [\n    \"tail [script name] [args...]\",\n    \" \",\n    \"Displays dynamic logs for the script specified by the script name and arguments. Each argument must be separated \",\n    \"by a space. Remember that a running script is uniquely identified by both its name and the arguments that were used \",\n    \"to run it. So, if a script was ran with the following arguments: \",\n    \" \",\n    \"run foo.script 10 50000\",\n    \" \",\n    \"Then in order to check its logs with 'tail' the same arguments must be used: \",\n    \" \",\n    \"tail foo.script 10 50000\",\n  ],\n  top: [\n    \"top\",\n    \" \",\n    \"Prints a list of all scripts running on the current server as well as their thread count and how much \",\n    \"RAM they are using in total.\",\n  ],\n  unalias: [\n    \"unalias [alias name]\",\n    \" \",\n    \"Deletes the specified alias. Note that the double quotation marks are required. \",\n    \" \",\n    \"As an example, if an alias was declared using:\",\n    \" \",\n    'alias r=\"run\"',\n    \" \",\n    \"Then it could be removed using:\",\n    \" \",\n    \"unalias r\",\n    \" \",\n    \"It is not necessary to differentiate between global and non-global aliases when using 'unalias'\",\n  ],\n  wget: [\n    \"wget [url] [target file]\",\n    \" \",\n    \"Retrieves data from a URL and downloads it to a file on the current server. The data can only \",\n    \"be downloaded to a script (.script, .ns, .js) or a text file (.txt). If the file already exists, \",\n    \"it will be overwritten by this command.\",\n    \" \",\n    \"Note that it will not be possible to download data from many websites because they do not allow \",\n    \"cross-origin resource sharing (CORS). Example:\",\n    \" \",\n    \"wget https://raw.githubusercontent.com/danielyxie/bitburner/master/README.md game_readme.txt\",\n  ],\n};\n","import { ITerminal, Output, Link, TTimer } from \"./ITerminal\";\nimport { IRouter } from \"../ui/Router\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { HacknetServer } from \"../Hacknet/HacknetServer\";\nimport { BaseServer } from \"../Server/BaseServer\";\nimport { Server } from \"../Server/Server\";\nimport { Programs } from \"../Programs/Programs\";\nimport { CodingContractResult } from \"../CodingContracts\";\nimport { TerminalEvents, TerminalClearEvents } from \"./TerminalEvents\";\n\nimport { TextFile } from \"../TextFile\";\nimport { Script } from \"../Script/Script\";\nimport { isScriptFilename } from \"../Script/isScriptFilename\";\nimport { CONSTANTS } from \"../Constants\";\nimport { AllServers } from \"../Server/AllServers\";\n\nimport { removeLeadingSlash, isInRootDirectory, evaluateFilePath } from \"./DirectoryHelpers\";\nimport { checkIfConnectedToDarkweb } from \"../DarkWeb/DarkWeb\";\nimport { iTutorialNextStep, iTutorialSteps, ITutorial } from \"../InteractiveTutorial\";\nimport { GetServerByHostname, getServer, getServerOnNetwork } from \"../Server/ServerHelpers\";\nimport { ParseCommand, ParseCommands } from \"./Parser\";\nimport { SpecialServerIps, SpecialServerNames } from \"../Server/SpecialServerIps\";\nimport { Settings } from \"../Settings/Settings\";\nimport { createProgressBarText } from \"../utils/helpers/createProgressBarText\";\nimport {\n  calculateHackingChance,\n  calculateHackingExpGain,\n  calculatePercentMoneyHacked,\n  calculateHackingTime,\n} from \"../Hacking\";\nimport { numeralWrapper } from \"../ui/numeralFormat\";\nimport { convertTimeMsToTimeElapsedString } from \"../utils/StringHelperFunctions\";\n\nimport { alias } from \"./commands/alias\";\nimport { analyze } from \"./commands/analyze\";\nimport { backdoor } from \"./commands/backdoor\";\nimport { buy } from \"./commands/buy\";\nimport { cat } from \"./commands/cat\";\nimport { cd } from \"./commands/cd\";\nimport { check } from \"./commands/check\";\nimport { connect } from \"./commands/connect\";\nimport { download } from \"./commands/download\";\nimport { expr } from \"./commands/expr\";\nimport { free } from \"./commands/free\";\nimport { hack } from \"./commands/hack\";\nimport { help } from \"./commands/help\";\nimport { home } from \"./commands/home\";\nimport { hostname } from \"./commands/hostname\";\nimport { ifconfig } from \"./commands/ifconfig\";\nimport { kill } from \"./commands/kill\";\nimport { killall } from \"./commands/killall\";\nimport { ls } from \"./commands/ls\";\nimport { lscpu } from \"./commands/lscpu\";\nimport { mem } from \"./commands/mem\";\nimport { mv } from \"./commands/mv\";\nimport { nano } from \"./commands/nano\";\nimport { ps } from \"./commands/ps\";\nimport { rm } from \"./commands/rm\";\nimport { run } from \"./commands/run\";\nimport { scan } from \"./commands/scan\";\nimport { scananalyze } from \"./commands/scananalyze\";\nimport { scp } from \"./commands/scp\";\nimport { sudov } from \"./commands/sudov\";\nimport { tail } from \"./commands/tail\";\nimport { top } from \"./commands/top\";\nimport { unalias } from \"./commands/unalias\";\nimport { wget } from \"./commands/wget\";\n\nexport class Terminal implements ITerminal {\n  // Flags to determine whether the player is currently running a hack or an analyze\n  action: TTimer | null = null;\n\n  commandHistory: string[] = [];\n  commandHistoryIndex = 0;\n\n  outputHistory: (Output | Link)[] = [new Output(`Bitburner v${CONSTANTS.Version}`, \"primary\")];\n\n  // True if a Coding Contract prompt is opened\n  contractOpen = false;\n\n  // Full Path of current directory\n  // Excludes the trailing forward slash\n  currDir = \"/\";\n\n  process(router: IRouter, player: IPlayer, cycles: number): void {\n    if (this.action === null) return;\n    this.action.timeLeft -= (CONSTANTS._idleSpeed * cycles) / 1000;\n    if (this.action.timeLeft < 0.01) this.finishAction(router, player, false);\n    TerminalEvents.emit();\n  }\n\n  append(item: Output | Link): void {\n    this.outputHistory.push(item);\n    if (this.outputHistory.length > Settings.MaxTerminalCapacity) {\n      this.outputHistory.splice(0, this.outputHistory.length - Settings.MaxTerminalCapacity);\n    }\n    TerminalEvents.emit();\n  }\n\n  print(s: string): void {\n    this.append(new Output(s, \"primary\"));\n  }\n\n  error(s: string): void {\n    this.append(new Output(s, \"error\"));\n  }\n\n  startHack(player: IPlayer): void {\n    // Hacking through Terminal should be faster than hacking through a script\n    const server = player.getCurrentServer();\n    if (server instanceof HacknetServer) {\n      this.error(\"Cannot hack this kind of server\");\n      return;\n    }\n    this.startAction(calculateHackingTime(server, player) / 4, \"h\");\n  }\n\n  startBackdoor(player: IPlayer): void {\n    // Backdoor should take the same amount of time as hack\n    const server = player.getCurrentServer();\n    if (server instanceof HacknetServer) {\n      this.error(\"Cannot backdoor this kind of server\");\n      return;\n    }\n    this.startAction(calculateHackingTime(server, player) / 4, \"b\");\n  }\n\n  startAnalyze(): void {\n    this.print(\"Analyzing system...\");\n    this.startAction(1, \"a\");\n  }\n\n  startAction(n: number, action: \"h\" | \"b\" | \"a\"): void {\n    this.action = new TTimer(n, action);\n  }\n\n  // Complete the hack/analyze command\n  finishHack(router: IRouter, player: IPlayer, cancelled = false): void {\n    if (cancelled) return;\n    const server = player.getCurrentServer();\n    if (server instanceof HacknetServer) {\n      this.error(\"Cannot hack this kind of server\");\n      return;\n    }\n\n    // Calculate whether hack was successful\n    const hackChance = calculateHackingChance(server, player);\n    const rand = Math.random();\n    const expGainedOnSuccess = calculateHackingExpGain(server, player);\n    const expGainedOnFailure = expGainedOnSuccess / 4;\n    if (rand < hackChance) {\n      // Success!\n      if (\n        SpecialServerIps[SpecialServerNames.WorldDaemon] &&\n        SpecialServerIps[SpecialServerNames.WorldDaemon] == server.ip\n      ) {\n        if (player.bitNodeN == null) {\n          player.bitNodeN = 1;\n        }\n        router.toBitVerse(false, false);\n        return;\n      }\n      server.backdoorInstalled = true;\n      let moneyGained = calculatePercentMoneyHacked(server, player);\n      moneyGained = Math.floor(server.moneyAvailable * moneyGained);\n\n      if (moneyGained <= 0) {\n        moneyGained = 0;\n      } // Safety check\n\n      server.moneyAvailable -= moneyGained;\n      player.gainMoney(moneyGained);\n      player.recordMoneySource(moneyGained, \"hacking\");\n      player.gainHackingExp(expGainedOnSuccess);\n      player.gainIntelligenceExp(expGainedOnSuccess / CONSTANTS.IntelligenceTerminalHackBaseExpGain);\n\n      server.fortify(CONSTANTS.ServerFortifyAmount);\n\n      this.print(\n        `Hack successful! Gained ${numeralWrapper.formatMoney(moneyGained)} and ${numeralWrapper.formatExp(\n          expGainedOnSuccess,\n        )} hacking exp`,\n      );\n    } else {\n      // Failure\n      // player only gains 25% exp for failure? TODO Can change this later to balance\n      player.gainHackingExp(expGainedOnFailure);\n      this.print(\n        `Failed to hack ${server.hostname}. Gained ${numeralWrapper.formatExp(expGainedOnFailure)} hacking exp`,\n      );\n    }\n  }\n\n  finishBackdoor(router: IRouter, player: IPlayer, cancelled = false): void {\n    if (!cancelled) {\n      const server = player.getCurrentServer();\n      if (server instanceof HacknetServer) {\n        this.error(\"Cannot hack this kind of server\");\n        return;\n      }\n      if (\n        SpecialServerIps[SpecialServerNames.WorldDaemon] &&\n        SpecialServerIps[SpecialServerNames.WorldDaemon] == server.ip\n      ) {\n        if (player.bitNodeN == null) {\n          player.bitNodeN = 1;\n        }\n        router.toBitVerse(false, false);\n        return;\n      }\n      server.backdoorInstalled = true;\n      this.print(\"Backdoor successful!\");\n    }\n  }\n\n  finishAnalyze(player: IPlayer, cancelled = false): void {\n    if (!cancelled) {\n      const currServ = player.getCurrentServer();\n      const isHacknet = currServ instanceof HacknetServer;\n      this.print(currServ.hostname + \": \");\n      const org = currServ.organizationName;\n      this.print(\"Organization name: \" + (!isHacknet ? org : \"player\"));\n      const hasAdminRights = (!isHacknet && currServ.hasAdminRights) || isHacknet;\n      this.print(\"Root Access: \" + (hasAdminRights ? \"YES\" : \"NO\"));\n      if (currServ instanceof Server) {\n        const hackingSkill = currServ.requiredHackingSkill;\n        this.print(\"Required hacking skill: \" + (!isHacknet ? hackingSkill : \"N/A\"));\n        const security = currServ.hackDifficulty;\n        this.print(\"Server security level: \" + (!isHacknet ? numeralWrapper.formatServerSecurity(security) : \"N/A\"));\n        const hackingChance = calculateHackingChance(currServ, player);\n        this.print(\"Chance to hack: \" + (!isHacknet ? numeralWrapper.formatPercentage(hackingChance) : \"N/A\"));\n        const hackingTime = calculateHackingTime(currServ, player) * 1000;\n        this.print(\"Time to hack: \" + (!isHacknet ? convertTimeMsToTimeElapsedString(hackingTime, true) : \"N/A\"));\n      }\n      this.print(\n        `Total money available on server: ${\n          !(currServ instanceof HacknetServer) ? numeralWrapper.formatMoney(currServ.moneyAvailable) : \"N/A\"\n        }`,\n      );\n      if (currServ instanceof Server) {\n        const numPort = currServ.numOpenPortsRequired;\n        this.print(\"Required number of open ports for NUKE: \" + (!isHacknet ? numPort : \"N/A\"));\n        this.print(\"SSH port: \" + (currServ.sshPortOpen ? \"Open\" : \"Closed\"));\n        this.print(\"FTP port: \" + (currServ.ftpPortOpen ? \"Open\" : \"Closed\"));\n        this.print(\"SMTP port: \" + (currServ.smtpPortOpen ? \"Open\" : \"Closed\"));\n        this.print(\"HTTP port: \" + (currServ.httpPortOpen ? \"Open\" : \"Closed\"));\n        this.print(\"SQL port: \" + (currServ.sqlPortOpen ? \"Open\" : \"Closed\"));\n      }\n    }\n  }\n\n  finishAction(router: IRouter, player: IPlayer, cancelled = false): void {\n    if (this.action === null) {\n      if (!cancelled) throw new Error(\"Finish action called when there was no action\");\n      return;\n    }\n    this.print(this.getProgressText());\n    if (this.action.action === \"h\") {\n      this.finishHack(router, player, cancelled);\n    } else if (this.action.action === \"b\") {\n      this.finishBackdoor(router, player, cancelled);\n    } else if (this.action.action === \"a\") {\n      this.finishAnalyze(player, cancelled);\n    }\n    if (cancelled) {\n      this.print(\"Cancelled\");\n    }\n    this.action = null;\n    TerminalEvents.emit();\n  }\n\n  getFile(player: IPlayer, filename: string): Script | TextFile | string | null {\n    if (isScriptFilename(filename)) {\n      return this.getScript(player, filename);\n    }\n\n    if (filename.endsWith(\".lit\")) {\n      return this.getLitFile(player, filename);\n    }\n\n    if (filename.endsWith(\".txt\")) {\n      return this.getTextFile(player, filename);\n    }\n\n    return null;\n  }\n\n  getFilepath(filename: string): string {\n    const path = evaluateFilePath(filename, this.cwd());\n    if (path == null) {\n      throw new Error(`Invalid file path specified: ${filename}`);\n    }\n\n    if (isInRootDirectory(path)) {\n      return removeLeadingSlash(path);\n    }\n\n    return path;\n  }\n\n  getScript(player: IPlayer, filename: string): Script | null {\n    const s = player.getCurrentServer();\n    const filepath = this.getFilepath(filename);\n    for (const script of s.scripts) {\n      if (filepath === script.filename) {\n        return script;\n      }\n    }\n\n    return null;\n  }\n\n  getTextFile(player: IPlayer, filename: string): TextFile | null {\n    const s = player.getCurrentServer();\n    const filepath = this.getFilepath(filename);\n    for (const txt of s.textFiles) {\n      if (filepath === txt.fn) {\n        return txt;\n      }\n    }\n\n    return null;\n  }\n\n  getLitFile(player: IPlayer, filename: string): string | null {\n    const s = player.getCurrentServer();\n    const filepath = this.getFilepath(filename);\n    for (const lit of s.messages) {\n      if (typeof lit === \"string\" && filepath === lit) {\n        return lit;\n      }\n    }\n\n    return null;\n  }\n\n  cwd(): string {\n    return this.currDir;\n  }\n\n  setcwd(dir: string): void {\n    this.currDir = dir;\n    TerminalEvents.emit();\n  }\n\n  async runContract(player: IPlayer, contractName: string): Promise<void> {\n    // There's already an opened contract\n    if (this.contractOpen) {\n      return this.error(\"There's already a Coding Contract in Progress\");\n    }\n\n    const serv = player.getCurrentServer();\n    const contract = serv.getContract(contractName);\n    if (contract == null) {\n      return this.error(\"No such contract\");\n    }\n\n    this.contractOpen = true;\n    const res = await contract.prompt();\n\n    switch (res) {\n      case CodingContractResult.Success:\n        if (contract.reward !== null) {\n          const reward = player.gainCodingContractReward(contract.reward, contract.getDifficulty());\n          this.print(`Contract SUCCESS - ${reward}`);\n        }\n        serv.removeContract(contract);\n        break;\n      case CodingContractResult.Failure:\n        ++contract.tries;\n        if (contract.tries >= contract.getMaxNumTries()) {\n          this.print(\"Contract FAILED - Contract is now self-destructing\");\n          serv.removeContract(contract);\n        } else {\n          this.print(`Contract FAILED - ${contract.getMaxNumTries() - contract.tries} tries remaining`);\n        }\n        break;\n      case CodingContractResult.Cancelled:\n      default:\n        this.print(\"Contract cancelled\");\n        break;\n    }\n    this.contractOpen = false;\n  }\n\n  executeScanAnalyzeCommand(player: IPlayer, depth = 1, all = false): void {\n    // TODO Using array as stack for now, can make more efficient\n    this.print(\"~~~~~~~~~~ Beginning scan-analyze ~~~~~~~~~~\");\n    this.print(\" \");\n\n    // Map of all servers to keep track of which have been visited\n    const visited: {\n      [key: string]: number | undefined;\n    } = {};\n    for (const ip in AllServers) {\n      visited[ip] = 0;\n    }\n\n    const stack: BaseServer[] = [];\n    const depthQueue: number[] = [0];\n    const currServ = player.getCurrentServer();\n    stack.push(currServ);\n    while (stack.length != 0) {\n      const s = stack.pop();\n      if (!s) continue;\n      const d = depthQueue.pop();\n      if (d === undefined) continue;\n      const isHacknet = s instanceof HacknetServer;\n      if (!all && (s as any).purchasedByPlayer && s.hostname != \"home\") {\n        continue; // Purchased server\n      } else if (visited[s.ip] || d > depth) {\n        continue; // Already visited or out-of-depth\n      } else if (!all && isHacknet) {\n        continue; // Hacknet Server\n      } else {\n        visited[s.ip] = 1;\n      }\n      for (let i = s.serversOnNetwork.length - 1; i >= 0; --i) {\n        const newS = getServerOnNetwork(s, i);\n        if (newS === null) continue;\n        stack.push(newS);\n        depthQueue.push(d + 1);\n      }\n      if (d == 0) {\n        continue;\n      } // Don't print current server\n      const titleDashes = Array((d - 1) * 4 + 1).join(\"-\");\n      if (player.hasProgram(Programs.AutoLink.name)) {\n        this.append(new Link(titleDashes, s.hostname));\n      } else {\n        this.print(titleDashes + s.hostname);\n      }\n\n      const dashes = titleDashes + \"--\";\n      let c = \"NO\";\n      if (s.hasAdminRights) {\n        c = \"YES\";\n      }\n      this.print(\n        `${dashes}Root Access: ${c}${!isHacknet ? \", Required hacking skill: \" + (s as any).requiredHackingSkill : \"\"}`,\n      );\n      if (s.hasOwnProperty(\"numOpenPortsRequired\")) {\n        this.print(dashes + \"Number of open ports required to NUKE: \" + (s as any).numOpenPortsRequired);\n      }\n      this.print(dashes + \"RAM: \" + numeralWrapper.formatRAM(s.maxRam));\n      this.print(\" \");\n    }\n  }\n\n  connectToServer(player: IPlayer, server: string): void {\n    const serv = getServer(server);\n    if (serv == null) {\n      this.error(\"Invalid server. Connection failed.\");\n      return;\n    }\n    player.getCurrentServer().isConnectedTo = false;\n    player.currentServer = serv.ip;\n    player.getCurrentServer().isConnectedTo = true;\n    this.print(\"Connected to \" + serv.hostname);\n    this.setcwd(\"/\");\n    if (player.getCurrentServer().hostname == \"darkweb\") {\n      checkIfConnectedToDarkweb(); // Posts a 'help' message if connecting to dark web\n    }\n  }\n\n  executeCommands(router: IRouter, player: IPlayer, commands: string): void {\n    // Sanitize input\n    commands = commands.trim();\n    commands = commands.replace(/\\s\\s+/g, \" \"); // Replace all extra whitespace in command with a single space\n\n    // Handle Terminal History - multiple commands should be saved as one\n    if (this.commandHistory[this.commandHistory.length - 1] != commands) {\n      this.commandHistory.push(commands);\n      if (this.commandHistory.length > 50) {\n        this.commandHistory.splice(0, 1);\n      }\n    }\n    this.commandHistoryIndex = this.commandHistory.length;\n    const allCommands = ParseCommands(commands);\n\n    for (let i = 0; i < allCommands.length; i++) {\n      this.executeCommand(router, player, allCommands[i]);\n    }\n  }\n\n  clear(): void {\n    // TODO: remove this once we figure out the height issue.\n    this.outputHistory = [new Output(`Bitburner v${CONSTANTS.Version}`, \"primary\")];\n    TerminalEvents.emit();\n    TerminalClearEvents.emit();\n  }\n\n  prestige(): void {\n    this.action = null;\n    this.clear();\n  }\n\n  executeCommand(router: IRouter, player: IPlayer, command: string): void {\n    if (this.action !== null) {\n      this.error(`Cannot execute command (${command}) while an action is in progress`);\n      return;\n    }\n    // Allow usage of ./\n    if (command.startsWith(\"./\")) {\n      command = \"run \" + command.slice(2);\n    }\n    // Only split the first space\n    const commandArray = ParseCommand(command);\n    if (commandArray.length == 0) {\n      return;\n    }\n    const s = player.getCurrentServer();\n    /****************** Interactive Tutorial Terminal Commands ******************/\n    if (ITutorial.isRunning) {\n      const n00dlesServ = GetServerByHostname(\"n00dles\");\n      if (n00dlesServ == null) {\n        throw new Error(\"Could not get n00dles server\");\n        return;\n      }\n      switch (ITutorial.currStep) {\n        case iTutorialSteps.TerminalHelp:\n          if (commandArray.length === 1 && commandArray[0] == \"help\") {\n            iTutorialNextStep();\n          } else {\n            this.print(\"Bad command. Please follow the tutorial\");\n            return;\n          }\n          break;\n        case iTutorialSteps.TerminalLs:\n          if (commandArray.length === 1 && commandArray[0] == \"ls\") {\n            iTutorialNextStep();\n          } else {\n            this.print(\"Bad command. Please follow the tutorial\");\n            return;\n          }\n          break;\n        case iTutorialSteps.TerminalScan:\n          if (commandArray.length === 1 && commandArray[0] == \"scan\") {\n            iTutorialNextStep();\n          } else {\n            this.print(\"Bad command. Please follow the tutorial\");\n            return;\n          }\n          break;\n        case iTutorialSteps.TerminalScanAnalyze1:\n          if (commandArray.length == 1 && commandArray[0] == \"scan-analyze\") {\n            iTutorialNextStep();\n          } else {\n            this.print(\"Bad command. Please follow the tutorial\");\n            return;\n          }\n          break;\n        case iTutorialSteps.TerminalScanAnalyze2:\n          if (commandArray.length == 2 && commandArray[0] == \"scan-analyze\" && commandArray[1] === 2) {\n            iTutorialNextStep();\n          } else {\n            this.print(\"Bad command. Please follow the tutorial\");\n            return;\n          }\n          break;\n        case iTutorialSteps.TerminalConnect:\n          if (commandArray.length == 2) {\n            if (commandArray[0] == \"connect\" && (commandArray[1] == \"n00dles\" || commandArray[1] == n00dlesServ.ip)) {\n              iTutorialNextStep();\n            } else {\n              this.print(\"Wrong command! Try again!\");\n              return;\n            }\n          } else {\n            this.print(\"Bad command. Please follow the tutorial\");\n            return;\n          }\n          break;\n        case iTutorialSteps.TerminalAnalyze:\n          if (commandArray.length === 1 && commandArray[0] === \"analyze\") {\n            iTutorialNextStep();\n          } else {\n            this.print(\"Bad command. Please follow the tutorial\");\n            return;\n          }\n          break;\n        case iTutorialSteps.TerminalNuke:\n          if (commandArray.length == 2 && commandArray[0] == \"run\" && commandArray[1] == \"NUKE.exe\") {\n            iTutorialNextStep();\n          } else {\n            this.print(\"Bad command. Please follow the tutorial\");\n            return;\n          }\n          break;\n        case iTutorialSteps.TerminalManualHack:\n          if (commandArray.length == 1 && commandArray[0] == \"hack\") {\n            iTutorialNextStep();\n          } else {\n            this.print(\"Bad command. Please follow the tutorial\");\n            return;\n          }\n          break;\n        case iTutorialSteps.TerminalGoHome:\n          if (commandArray.length == 1 && commandArray[0] == \"home\") {\n            iTutorialNextStep();\n          } else {\n            this.print(\"Bad command. Please follow the tutorial\");\n            return;\n          }\n          break;\n        case iTutorialSteps.TerminalCreateScript:\n          if (commandArray.length == 2 && commandArray[0] == \"nano\" && commandArray[1] == \"n00dles.script\") {\n            iTutorialNextStep();\n          } else {\n            this.print(\"Bad command. Please follow the tutorial\");\n            return;\n          }\n          break;\n        case iTutorialSteps.TerminalFree:\n          if (commandArray.length == 1 && commandArray[0] == \"free\") {\n            iTutorialNextStep();\n          } else {\n            this.print(\"Bad command. Please follow the tutorial\");\n            return;\n          }\n          break;\n        case iTutorialSteps.TerminalRunScript:\n          if (commandArray.length == 2 && commandArray[0] == \"run\" && commandArray[1] == \"n00dles.script\") {\n            iTutorialNextStep();\n          } else {\n            this.print(\"Bad command. Please follow the tutorial\");\n            return;\n          }\n          break;\n        case iTutorialSteps.ActiveScriptsToTerminal:\n          if (commandArray.length == 2 && commandArray[0] == \"tail\" && commandArray[1] == \"n00dles.script\") {\n            iTutorialNextStep();\n          } else {\n            this.print(\"Bad command. Please follow the tutorial\");\n            return;\n          }\n          break;\n        default:\n          this.print(\"Please follow the tutorial, or click 'EXIT' if you'd like to skip it\");\n          return;\n      }\n    }\n    /****************** END INTERACTIVE TUTORIAL ******************/\n    /* Command parser */\n    const commandName = commandArray[0];\n    if (typeof commandName === \"number\") {\n      this.error(`Command ${commandArray[0]} not found`);\n      return;\n    }\n\n    const commands: {\n      [key: string]: (\n        terminal: ITerminal,\n        router: IRouter,\n        player: IPlayer,\n        server: BaseServer,\n        args: (string | number)[],\n      ) => void;\n    } = {\n      alias: alias,\n      analyze: analyze,\n      backdoor: backdoor,\n      buy: buy,\n      cat: cat,\n      cd: cd,\n      check: check,\n      cls: () => this.clear(),\n      clear: () => this.clear(),\n      connect: connect,\n      download: download,\n      expr: expr,\n      free: free,\n      hack: hack,\n      help: help,\n      home: home,\n      hostname: hostname,\n      ifconfig: ifconfig,\n      kill: kill,\n      killall: killall,\n      ls: ls,\n      lscpu: lscpu,\n      mem: mem,\n      mv: mv,\n      nano: nano,\n      ps: ps,\n      rm: rm,\n      run: run,\n      scan: scan,\n      \"scan-analyze\": scananalyze,\n      scp: scp,\n      sudov: sudov,\n      tail: tail,\n      top: top,\n      unalias: unalias,\n      wget: wget,\n    };\n\n    const f = commands[commandName.toLowerCase()];\n    if (!f) {\n      this.error(`Command ${commandArray[0]} not found`);\n      return;\n    }\n\n    f(this, router, player, s, commandArray.slice(1));\n  }\n\n  getProgressText(): string {\n    if (this.action === null) throw new Error(\"trying to get the progress text when there's no action\");\n    return createProgressBarText({\n      progress: (this.action.time - this.action.timeLeft) / this.action.time,\n      totalTicks: 50,\n    });\n  }\n}\n","import { getRandomInt } from \"../utils/helpers/getRandomInt\";\n\n/* tslint:disable:completed-docs no-magic-numbers arrow-return-shorthand */\n\n/* Function that generates a valid 'data' for a contract type */\nexport type GeneratorFunc = () => any;\n\n/* Function that checks if the provided solution is the correct one */\nexport type SolverFunc = (data: any, answer: string) => boolean;\n\n/* Function that returns a string with the problem's description.\n   Requires the 'data' of a Contract as input */\nexport type DescriptionFunc = (data: any) => string;\n\nexport interface ICodingContractTypeMetadata {\n  desc: DescriptionFunc;\n  difficulty: number;\n  gen: GeneratorFunc;\n  name: string;\n  numTries: number;\n  solver: SolverFunc;\n}\n\n/* Helper functions for Coding Contract implementations */\nfunction removeBracketsFromArrayString(str: string): string {\n  let strCpy: string = str;\n  if (strCpy.startsWith(\"[\")) {\n    strCpy = strCpy.slice(1);\n  }\n  if (strCpy.endsWith(\"]\")) {\n    strCpy = strCpy.slice(0, -1);\n  }\n\n  return strCpy;\n}\n\nfunction removeQuotesFromString(str: string): string {\n  let strCpy: string = str;\n  if (strCpy.startsWith('\"') || strCpy.startsWith(\"'\")) {\n    strCpy = strCpy.slice(1);\n  }\n  if (strCpy.endsWith('\"') || strCpy.endsWith(\"'\")) {\n    strCpy = strCpy.slice(0, -1);\n  }\n\n  return strCpy;\n}\n\nfunction convert2DArrayToString(arr: any[][]): string {\n  const components: string[] = [];\n  arr.forEach((e: any) => {\n    let s: string = e.toString();\n    s = [\"[\", s, \"]\"].join(\"\");\n    components.push(s);\n  });\n\n  return components.join(\",\").replace(/\\s/g, \"\");\n}\n\nexport const codingContractTypesMetadata: ICodingContractTypeMetadata[] = [\n  {\n    desc: (n: number): string => {\n      return [\"A prime factor is a factor that is a prime number.\", `What is the largest prime factor of ${n}?`].join(\n        \" \",\n      );\n    },\n    difficulty: 1,\n    gen: (): number => {\n      return getRandomInt(500, 1e9);\n    },\n    name: \"Find Largest Prime Factor\",\n    numTries: 10,\n    solver: (data: number, ans: string): boolean => {\n      let fac = 2;\n      let n: number = data;\n      while (n > (fac - 1) * (fac - 1)) {\n        while (n % fac === 0) {\n          n = Math.round(n / fac);\n        }\n        ++fac;\n      }\n\n      return (n === 1 ? fac - 1 : n) === parseInt(ans, 10);\n    },\n  },\n  {\n    desc: (n: number[]): string => {\n      return [\n        \"Given the following integer array, find the contiguous subarray\",\n        \"(containing at least one number) which has the largest sum and return that sum.\",\n        \"'Sum' refers to the sum of all the numbers in the subarray.\\n\",\n        `${n.toString()}`,\n      ].join(\" \");\n    },\n    difficulty: 1,\n    gen: (): number[] => {\n      const len: number = getRandomInt(5, 40);\n      const arr: number[] = [];\n      arr.length = len;\n      for (let i = 0; i < len; ++i) {\n        arr[i] = getRandomInt(-10, 10);\n      }\n\n      return arr;\n    },\n    name: \"Subarray with Maximum Sum\",\n    numTries: 10,\n    solver: (data: number[], ans: string): boolean => {\n      const nums: number[] = data.slice();\n      for (let i = 1; i < nums.length; i++) {\n        nums[i] = Math.max(nums[i], nums[i] + nums[i - 1]);\n      }\n\n      return parseInt(ans, 10) === Math.max(...nums);\n    },\n  },\n  {\n    desc: (n: number): string => {\n      return [\n        \"It is possible write four as a sum in exactly four different ways:\\n\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;3 + 1\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;2 + 2\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;2 + 1 + 1\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;1 + 1 + 1 + 1\\n\\n\",\n        `How many different ways can the number ${n} be written as a sum of at least`,\n        \"two positive integers?\",\n      ].join(\" \");\n    },\n    difficulty: 1.5,\n    gen: (): number => {\n      return getRandomInt(8, 100);\n    },\n    name: \"Total Ways to Sum\",\n    numTries: 10,\n    solver: (data: number, ans: string): boolean => {\n      const ways: number[] = [1];\n      ways.length = data + 1;\n      ways.fill(0, 1);\n      for (let i = 1; i < data; ++i) {\n        for (let j: number = i; j <= data; ++j) {\n          ways[j] += ways[j - i];\n        }\n      }\n\n      return ways[data] === parseInt(ans, 10);\n    },\n  },\n  {\n    desc: (n: number[][]): string => {\n      let d: string = [\n        \"Given the following array of array of numbers representing a 2D matrix,\",\n        \"return the elements of the matrix as an array in spiral order:\\n\\n\",\n      ].join(\" \");\n      // for (const line of n) {\n      //   d += `${line.toString()},\\n`;\n      // }\n      d += \"&nbsp;&nbsp;&nbsp;&nbsp;[\\n\";\n      d += n\n        .map(\n          (line: number[]) =>\n            \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\" +\n            line.map((x: number) => `${x}`.padStart(2, \" \")).join(\",\") +\n            \"]\",\n        )\n        .join(\"\\n\");\n      d += \"\\n&nbsp;&nbsp;&nbsp;&nbsp;]\\n\";\n      d += [\n        \"\\nHere is an example of what spiral order should be:\\n\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;[\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1, 2, 3]\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[4, 5, 6]\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[7, 8, 9]\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;]\\n\\n\",\n        \"Answer: [1, 2, 3, 6, 9, 8 ,7, 4, 5]\\n\\n\",\n        \"Note that the matrix will not always be square:\\n\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;[\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[1,&nbsp;&nbsp;2,&nbsp;&nbsp;3,&nbsp;&nbsp;4]\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[5,&nbsp;&nbsp;6,&nbsp;&nbsp;7,&nbsp;&nbsp;8]\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[9,&nbsp;10,&nbsp;11,&nbsp;12]\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;]\\n\\n\",\n        \"Answer: [1, 2, 3, 4, 8, 12, 11, 10, 9, 5, 6, 7]\",\n      ].join(\" \");\n\n      return d;\n    },\n    difficulty: 2,\n    gen: (): number[][] => {\n      const m: number = getRandomInt(1, 15);\n      const n: number = getRandomInt(1, 15);\n      const matrix: number[][] = [];\n      matrix.length = m;\n      for (let i = 0; i < m; ++i) {\n        matrix[i] = [];\n        matrix[i].length = n;\n      }\n\n      for (let i = 0; i < m; ++i) {\n        for (let j = 0; j < n; ++j) {\n          matrix[i][j] = getRandomInt(1, 50);\n        }\n      }\n\n      return matrix;\n    },\n    name: \"Spiralize Matrix\",\n    numTries: 10,\n    solver: (data: number[][], ans: string): boolean => {\n      const spiral: number[] = [];\n      const m: number = data.length;\n      const n: number = data[0].length;\n      let u = 0;\n      let d: number = m - 1;\n      let l = 0;\n      let r: number = n - 1;\n      let k = 0;\n      while (true) {\n        // Up\n        for (let col: number = l; col <= r; col++) {\n          spiral[k] = data[u][col];\n          ++k;\n        }\n        if (++u > d) {\n          break;\n        }\n\n        // Right\n        for (let row: number = u; row <= d; row++) {\n          spiral[k] = data[row][r];\n          ++k;\n        }\n        if (--r < l) {\n          break;\n        }\n\n        // Down\n        for (let col: number = r; col >= l; col--) {\n          spiral[k] = data[d][col];\n          ++k;\n        }\n        if (--d < u) {\n          break;\n        }\n\n        // Left\n        for (let row: number = d; row >= u; row--) {\n          spiral[k] = data[row][l];\n          ++k;\n        }\n        if (++l > r) {\n          break;\n        }\n      }\n\n      const sanitizedPlayerAns: string = removeBracketsFromArrayString(ans).replace(/\\s/g, \"\");\n      const playerAns: any[] = sanitizedPlayerAns.split(\",\");\n      for (let i = 0; i < playerAns.length; ++i) {\n        playerAns[i] = parseInt(playerAns[i], 10);\n      }\n      if (spiral.length !== playerAns.length) {\n        return false;\n      }\n      for (let i = 0; i < spiral.length; ++i) {\n        if (spiral[i] !== playerAns[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n  },\n  {\n    desc: (arr: number[]): string => {\n      return [\n        \"You are given the following array of integers:\\n\\n\",\n        `${arr}\\n\\n`,\n        \"Each element in the array represents your MAXIMUM jump length\",\n        \"at that position. This means that if you are at position i and your\",\n        \"maximum jump length is n, you can jump to any position from\",\n        \"i to i+n.\",\n        \"\\n\\nAssuming you are initially positioned\",\n        \"at the start of the array, determine whether you are\",\n        \"able to reach the last index exactly.\\n\\n\",\n        \"Your answer should be submitted as 1 or 0, representing true and false respectively\",\n      ].join(\" \");\n    },\n    difficulty: 2.5,\n    gen: (): number[] => {\n      const len: number = getRandomInt(3, 25);\n      const arr: number[] = [];\n      arr.length = len;\n      for (let i = 0; i < arr.length; ++i) {\n        if (Math.random() < 0.2) {\n          arr[i] = 0; // 20% chance of being 0\n        } else {\n          arr[i] = getRandomInt(0, 10);\n        }\n      }\n\n      return arr;\n    },\n    name: \"Array Jumping Game\",\n    numTries: 1,\n    solver: (data: number[], ans: string): boolean => {\n      const n: number = data.length;\n      let i = 0;\n      for (let reach = 0; i < n && i <= reach; ++i) {\n        reach = Math.max(i + data[i], reach);\n      }\n      const solution: boolean = i === n;\n\n      if (ans === \"1\" && solution) {\n        return true;\n      }\n      if (ans === \"0\" && !solution) {\n        return true;\n      }\n\n      return false;\n    },\n  },\n  {\n    desc: (arr: number[][]): string => {\n      return [\n        \"Given the following array of array of numbers representing a list of\",\n        \"intervals, merge all overlapping intervals.\\n\\n\",\n        `[${convert2DArrayToString(arr)}]\\n\\n`,\n        \"Example:\\n\\n\",\n        \"[[1, 3], [8, 10], [2, 6], [10, 16]]\\n\\n\",\n        \"would merge into [[1, 6], [8, 16]].\\n\\n\",\n        \"The intervals must be returned in ASCENDING order.\",\n        \"You can assume that in an interval, the first number will always be\",\n        \"smaller than the second.\",\n      ].join(\" \");\n    },\n    difficulty: 3,\n    gen: (): number[][] => {\n      const intervals: number[][] = [];\n      const numIntervals: number = getRandomInt(3, 20);\n      for (let i = 0; i < numIntervals; ++i) {\n        const start: number = getRandomInt(1, 25);\n        const end: number = start + getRandomInt(1, 10);\n        intervals.push([start, end]);\n      }\n\n      return intervals;\n    },\n    name: \"Merge Overlapping Intervals\",\n    numTries: 15,\n    solver: (data: number[][], ans: string): boolean => {\n      const intervals: number[][] = data.slice();\n      intervals.sort((a: number[], b: number[]) => {\n        return a[0] - b[0];\n      });\n\n      const result: number[][] = [];\n      let start: number = intervals[0][0];\n      let end: number = intervals[0][1];\n      for (const interval of intervals) {\n        if (interval[0] <= end) {\n          end = Math.max(end, interval[1]);\n        } else {\n          result.push([start, end]);\n          start = interval[0];\n          end = interval[1];\n        }\n      }\n      result.push([start, end]);\n\n      const sanitizedResult: string = convert2DArrayToString(result);\n      const sanitizedAns: string = ans.replace(/\\s/g, \"\");\n\n      return sanitizedResult === sanitizedAns || sanitizedResult === removeBracketsFromArrayString(sanitizedAns);\n    },\n  },\n  {\n    desc: (data: string): string => {\n      return [\n        \"Given the following string containing only digits, return\",\n        \"an array with all possible valid IP address combinations\",\n        \"that can be created from the string:\\n\\n\",\n        `${data}\\n\\n`,\n        \"Note that an octet cannot begin with a '0' unless the number\",\n        \"itself is actually 0. For example, '192.168.010.1' is not a valid IP.\\n\\n\",\n        \"Examples:\\n\\n\",\n        \"25525511135 -> [255.255.11.135, 255.255.111.35]\\n\",\n        \"1938718066 -> [193.87.180.66]\",\n      ].join(\" \");\n    },\n    difficulty: 3,\n    gen: (): string => {\n      let str = \"\";\n      for (let i = 0; i < 4; ++i) {\n        const num: number = getRandomInt(0, 255);\n        const convNum: string = num.toString();\n        str += convNum;\n      }\n\n      return str;\n    },\n    name: \"Generate IP Addresses\",\n    numTries: 10,\n    solver: (data: string, ans: string): boolean => {\n      const ret: string[] = [];\n      for (let a = 1; a <= 3; ++a) {\n        for (let b = 1; b <= 3; ++b) {\n          for (let c = 1; c <= 3; ++c) {\n            for (let d = 1; d <= 3; ++d) {\n              if (a + b + c + d === data.length) {\n                const A: number = parseInt(data.substring(0, a), 10);\n                const B: number = parseInt(data.substring(a, a + b), 10);\n                const C: number = parseInt(data.substring(a + b, a + b + c), 10);\n                const D: number = parseInt(data.substring(a + b + c, a + b + c + d), 10);\n                if (A <= 255 && B <= 255 && C <= 255 && D <= 255) {\n                  const ip: string = [A.toString(), \".\", B.toString(), \".\", C.toString(), \".\", D.toString()].join(\"\");\n                  if (ip.length === data.length + 3) {\n                    ret.push(ip);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      const sanitizedAns: string = removeBracketsFromArrayString(ans).replace(/\\s/g, \"\");\n      const ansArr: string[] = sanitizedAns.split(\",\");\n      if (ansArr.length !== ret.length) {\n        return false;\n      }\n      for (const ipInAns of ansArr) {\n        if (!ret.includes(ipInAns)) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n  },\n  {\n    desc: (data: number[]): string => {\n      return [\n        \"You are given the following array of stock prices (which are numbers)\",\n        \"where the i-th element represents the stock price on day i:\\n\\n\",\n        `${data}\\n\\n`,\n        \"Determine the maximum possible profit you can earn using at most\",\n        \"one transaction (i.e. you can only buy and sell the stock once). If no profit can be made\",\n        \"then the answer should be 0. Note\",\n        \"that you have to buy the stock before you can sell it\",\n      ].join(\" \");\n    },\n    difficulty: 1,\n    gen: (): number[] => {\n      const len: number = getRandomInt(3, 50);\n      const arr: number[] = [];\n      arr.length = len;\n      for (let i = 0; i < len; ++i) {\n        arr[i] = getRandomInt(1, 200);\n      }\n\n      return arr;\n    },\n    name: \"Algorithmic Stock Trader I\",\n    numTries: 5,\n    solver: (data: number[], ans: string): boolean => {\n      let maxCur = 0;\n      let maxSoFar = 0;\n      for (let i = 1; i < data.length; ++i) {\n        maxCur = Math.max(0, (maxCur += data[i] - data[i - 1]));\n        maxSoFar = Math.max(maxCur, maxSoFar);\n      }\n\n      return maxSoFar.toString() === ans;\n    },\n  },\n  {\n    desc: (data: number[]): string => {\n      return [\n        \"You are given the following array of stock prices (which are numbers)\",\n        \"where the i-th element represents the stock price on day i:\\n\\n\",\n        `${data}\\n\\n`,\n        \"Determine the maximum possible profit you can earn using as many\",\n        \"transactions as you'd like. A transaction is defined as buying\",\n        \"and then selling one share of the stock. Note that you cannot\",\n        \"engage in multiple transactions at once. In other words, you\",\n        \"must sell the stock before you buy it again.\\n\\n\",\n        \"If no profit can be made, then the answer should be 0\",\n      ].join(\" \");\n    },\n    difficulty: 2,\n    gen: (): number[] => {\n      const len: number = getRandomInt(3, 50);\n      const arr: number[] = [];\n      arr.length = len;\n      for (let i = 0; i < len; ++i) {\n        arr[i] = getRandomInt(1, 200);\n      }\n\n      return arr;\n    },\n    name: \"Algorithmic Stock Trader II\",\n    numTries: 10,\n    solver: (data: number[], ans: string): boolean => {\n      let profit = 0;\n      for (let p = 1; p < data.length; ++p) {\n        profit += Math.max(data[p] - data[p - 1], 0);\n      }\n\n      return profit.toString() === ans;\n    },\n  },\n  {\n    desc: (data: number[]): string => {\n      return [\n        \"You are given the following array of stock prices (which are numbers)\",\n        \"where the i-th element represents the stock price on day i:\\n\\n\",\n        `${data}\\n\\n`,\n        \"Determine the maximum possible profit you can earn using at most\",\n        \"two transactions. A transaction is defined as buying\",\n        \"and then selling one share of the stock. Note that you cannot\",\n        \"engage in multiple transactions at once. In other words, you\",\n        \"must sell the stock before you buy it again.\\n\\n\",\n        \"If no profit can be made, then the answer should be 0\",\n      ].join(\" \");\n    },\n    difficulty: 5,\n    gen: (): number[] => {\n      const len: number = getRandomInt(3, 50);\n      const arr: number[] = [];\n      arr.length = len;\n      for (let i = 0; i < len; ++i) {\n        arr[i] = getRandomInt(1, 200);\n      }\n\n      return arr;\n    },\n    name: \"Algorithmic Stock Trader III\",\n    numTries: 10,\n    solver: (data: number[], ans: string): boolean => {\n      let hold1: number = Number.MIN_SAFE_INTEGER;\n      let hold2: number = Number.MIN_SAFE_INTEGER;\n      let release1 = 0;\n      let release2 = 0;\n      for (const price of data) {\n        release2 = Math.max(release2, hold2 + price);\n        hold2 = Math.max(hold2, release1 - price);\n        release1 = Math.max(release1, hold1 + price);\n        hold1 = Math.max(hold1, price * -1);\n      }\n\n      return release2.toString() === ans;\n    },\n  },\n  {\n    desc: (data: any[]): string => {\n      const k: number = data[0];\n      const prices: number[] = data[1];\n      return [\n        \"You are given the following array with two elements:\\n\\n\",\n        `[${k}, [${prices}]]\\n\\n`,\n        \"The first element is an integer k. The second element is an\",\n        \"array of stock prices (which are numbers) where the i-th element\",\n        \"represents the stock price on day i.\\n\\n\",\n        \"Determine the maximum possible profit you can earn using at most\",\n        \"k transactions. A transaction is defined as buying and then selling\",\n        \"one share of the stock. Note that you cannot engage in multiple\",\n        \"transactions at once. In other words, you must sell the stock before\",\n        \"you can buy it again.\\n\\n\",\n        \"If no profit can be made, then the answer should be 0.\",\n      ].join(\" \");\n    },\n    difficulty: 8,\n    gen: (): any[] => {\n      const k: number = getRandomInt(2, 10);\n      const len: number = getRandomInt(3, 50);\n      const prices: number[] = [];\n      prices.length = len;\n      for (let i = 0; i < len; ++i) {\n        prices[i] = getRandomInt(1, 200);\n      }\n\n      return [k, prices];\n    },\n    name: \"Algorithmic Stock Trader IV\",\n    numTries: 10,\n    solver: (data: any[], ans: string): boolean => {\n      const k: number = data[0];\n      const prices: number[] = data[1];\n\n      const len = prices.length;\n      if (len < 2) {\n        return parseInt(ans) === 0;\n      }\n      if (k > len / 2) {\n        let res = 0;\n        for (let i = 1; i < len; ++i) {\n          res += Math.max(prices[i] - prices[i - 1], 0);\n        }\n\n        return parseInt(ans) === res;\n      }\n\n      const hold: number[] = [];\n      const rele: number[] = [];\n      hold.length = k + 1;\n      rele.length = k + 1;\n      for (let i = 0; i <= k; ++i) {\n        hold[i] = Number.MIN_SAFE_INTEGER;\n        rele[i] = 0;\n      }\n\n      let cur: number;\n      for (let i = 0; i < len; ++i) {\n        cur = prices[i];\n        for (let j = k; j > 0; --j) {\n          rele[j] = Math.max(rele[j], hold[j] + cur);\n          hold[j] = Math.max(hold[j], rele[j - 1] - cur);\n        }\n      }\n\n      return parseInt(ans) === rele[k];\n    },\n  },\n  {\n    desc: (data: number[][]): string => {\n      function createTriangleRecurse(data: number[][], level = 0): string {\n        const numLevels: number = data.length;\n        if (level >= numLevels) {\n          return \"\";\n        }\n        const numSpaces = numLevels - level + 1;\n\n        let str: string = [\"&nbsp;\".repeat(numSpaces), \"[\", data[level].toString(), \"]\"].join(\"\");\n        if (level < numLevels - 1) {\n          str += \",\";\n        }\n\n        return str + \"\\n\" + createTriangleRecurse(data, level + 1);\n      }\n\n      function createTriangle(data: number[][]): string {\n        return [\"[\\n\", createTriangleRecurse(data), \"]\"].join(\"\");\n      }\n\n      const triangle = createTriangle(data);\n\n      return [\n        \"Given a triangle, find the minimum path sum from top to bottom. In each step\",\n        \"of the path, you may only move to adjacent numbers in the row below.\",\n        \"The triangle is represented as a 2D array of numbers:\\n\\n\",\n        `${triangle}\\n\\n`,\n        \"Example: If you are given the following triangle:\\n\\n\" + \"[\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[2],\\n\",\n        \"&nbsp;&nbsp;&nbsp;&nbsp;[3,4],\\n\",\n        \"&nbsp;&nbsp;&nbsp;[6,5,7],\\n\",\n        \"&nbsp;&nbsp;[4,1,8,3]\\n\",\n        \"]\\n\\n\",\n        \"The minimum path sum is 11 (2 -> 3 -> 5 -> 1).\",\n      ].join(\" \");\n    },\n    difficulty: 5,\n    gen: (): number[][] => {\n      const triangle: number[][] = [];\n      const levels: number = getRandomInt(3, 12);\n      triangle.length = levels;\n\n      for (let row = 0; row < levels; ++row) {\n        triangle[row] = [];\n        triangle[row].length = row + 1;\n        for (let i = 0; i < triangle[row].length; ++i) {\n          triangle[row][i] = getRandomInt(1, 9);\n        }\n      }\n\n      return triangle;\n    },\n    name: \"Minimum Path Sum in a Triangle\",\n    numTries: 10,\n    solver: (data: number[][], ans: string): boolean => {\n      const n: number = data.length;\n      const dp: number[] = data[n - 1].slice();\n      for (let i = n - 2; i > -1; --i) {\n        for (let j = 0; j < data[i].length; ++j) {\n          dp[j] = Math.min(dp[j], dp[j + 1]) + data[i][j];\n        }\n      }\n\n      return dp[0] === parseInt(ans);\n    },\n  },\n  {\n    desc: (data: number[]): string => {\n      const numRows = data[0];\n      const numColumns = data[1];\n      return [\n        \"You are in a grid with\",\n        `${numRows} rows and ${numColumns} columns, and you are`,\n        \"positioned in the top-left corner of that grid. You are trying to\",\n        \"reach the bottom-right corner of the grid, but you can only\",\n        \"move down or right on each step. Determine how many\",\n        \"unique paths there are from start to finish.\\n\\n\",\n        \"NOTE: The data returned for this contract is an array\",\n        \"with the number of rows and columns:\\n\\n\",\n        `[${numRows}, ${numColumns}]`,\n      ].join(\" \");\n    },\n    difficulty: 3,\n    gen: (): number[] => {\n      const numRows: number = getRandomInt(2, 14);\n      const numColumns: number = getRandomInt(2, 14);\n\n      return [numRows, numColumns];\n    },\n    name: \"Unique Paths in a Grid I\",\n    numTries: 10,\n    solver: (data: number[], ans: string): boolean => {\n      const n: number = data[0]; // Number of rows\n      const m: number = data[1]; // Number of columns\n      const currentRow: number[] = [];\n      currentRow.length = n;\n\n      for (let i = 0; i < n; i++) {\n        currentRow[i] = 1;\n      }\n      for (let row = 1; row < m; row++) {\n        for (let i = 1; i < n; i++) {\n          currentRow[i] += currentRow[i - 1];\n        }\n      }\n\n      return parseInt(ans) === currentRow[n - 1];\n    },\n  },\n  {\n    desc: (data: number[][]): string => {\n      let gridString = \"\";\n      for (const line of data) {\n        gridString += `${line.toString()},\\n`;\n      }\n      return [\n        \"You are located in the top-left corner of the following grid:\\n\\n\",\n        `${gridString}\\n`,\n        \"You are trying reach the bottom-right corner of the grid, but you can only\",\n        \"move down or right on each step. Furthermore, there are obstacles on the grid\",\n        \"that you cannot move onto. These obstacles are denoted by '1', while empty\",\n        \"spaces are denoted by 0.\\n\\n\",\n        \"Determine how many unique paths there are from start to finish.\\n\\n\",\n        \"NOTE: The data returned for this contract is an 2D array of numbers representing the grid.\",\n      ].join(\" \");\n    },\n    difficulty: 5,\n    gen: (): number[][] => {\n      const numRows: number = getRandomInt(2, 12);\n      const numColumns: number = getRandomInt(2, 12);\n\n      const grid: number[][] = [];\n      grid.length = numRows;\n      for (let i = 0; i < numRows; ++i) {\n        grid[i] = [];\n        grid[i].length = numColumns;\n        grid[i].fill(0);\n      }\n\n      for (let r = 0; r < numRows; ++r) {\n        for (let c = 0; c < numColumns; ++c) {\n          if (r === 0 && c === 0) {\n            continue;\n          }\n          if (r === numRows - 1 && c === numColumns - 1) {\n            continue;\n          }\n\n          // 15% chance of an element being an obstacle\n          if (Math.random() < 0.15) {\n            grid[r][c] = 1;\n          }\n        }\n      }\n\n      return grid;\n    },\n    name: \"Unique Paths in a Grid II\",\n    numTries: 10,\n    solver: (data: number[][], ans: string): boolean => {\n      const obstacleGrid: number[][] = [];\n      obstacleGrid.length = data.length;\n      for (let i = 0; i < obstacleGrid.length; ++i) {\n        obstacleGrid[i] = data[i].slice();\n      }\n\n      for (let i = 0; i < obstacleGrid.length; i++) {\n        for (let j = 0; j < obstacleGrid[0].length; j++) {\n          if (obstacleGrid[i][j] == 1) {\n            obstacleGrid[i][j] = 0;\n          } else if (i == 0 && j == 0) {\n            obstacleGrid[0][0] = 1;\n          } else {\n            obstacleGrid[i][j] = (i > 0 ? obstacleGrid[i - 1][j] : 0) + (j > 0 ? obstacleGrid[i][j - 1] : 0);\n          }\n        }\n      }\n\n      return obstacleGrid[obstacleGrid.length - 1][obstacleGrid[0].length - 1] === parseInt(ans);\n    },\n  },\n  {\n    desc: (data: string): string => {\n      return [\n        \"Given the following string:\\n\\n\",\n        `${data}\\n\\n`,\n        \"remove the minimum number of invalid parentheses in order to validate\",\n        \"the string. If there are multiple minimal ways to validate the string,\",\n        \"provide all of the possible results. The answer should be provided\",\n        \"as an array of strings. If it is impossible to validate the string\",\n        \"the result should be an array with only an empty string.\\n\\n\",\n        \"IMPORTANT: The string may contain letters, not just parentheses.\",\n        `Examples:\\n`,\n        `\"()())()\" -> [()()(), (())()]\\n`,\n        `\"(a)())()\" -> [(a)()(), (a())()]\\n`,\n        `\")( -> [\"\"]`,\n      ].join(\" \");\n    },\n    difficulty: 10,\n    gen: (): string => {\n      const len: number = getRandomInt(6, 20);\n      const chars: string[] = [];\n      chars.length = len;\n\n      // 80% chance of the first parenthesis being (\n      Math.random() < 0.8 ? (chars[0] = \"(\") : (chars[0] = \")\");\n\n      for (let i = 1; i < len; ++i) {\n        const roll = Math.random();\n        if (roll < 0.4) {\n          chars[i] = \"(\";\n        } else if (roll < 0.8) {\n          chars[i] = \")\";\n        } else {\n          chars[i] = \"a\";\n        }\n      }\n\n      return chars.join(\"\");\n    },\n    name: \"Sanitize Parentheses in Expression\",\n    numTries: 10,\n    solver: (data: string, ans: string): boolean => {\n      let left = 0;\n      let right = 0;\n      const res: string[] = [];\n\n      for (let i = 0; i < data.length; ++i) {\n        if (data[i] === \"(\") {\n          ++left;\n        } else if (data[i] === \")\") {\n          left > 0 ? --left : ++right;\n        }\n      }\n\n      function dfs(\n        pair: number,\n        index: number,\n        left: number,\n        right: number,\n        s: string,\n        solution: string,\n        res: string[],\n      ): void {\n        if (s.length === index) {\n          if (left === 0 && right === 0 && pair === 0) {\n            for (let i = 0; i < res.length; i++) {\n              if (res[i] === solution) {\n                return;\n              }\n            }\n            res.push(solution);\n          }\n          return;\n        }\n\n        if (s[index] === \"(\") {\n          if (left > 0) {\n            dfs(pair, index + 1, left - 1, right, s, solution, res);\n          }\n          dfs(pair + 1, index + 1, left, right, s, solution + s[index], res);\n        } else if (s[index] === \")\") {\n          if (right > 0) dfs(pair, index + 1, left, right - 1, s, solution, res);\n          if (pair > 0) dfs(pair - 1, index + 1, left, right, s, solution + s[index], res);\n        } else {\n          dfs(pair, index + 1, left, right, s, solution + s[index], res);\n        }\n      }\n\n      dfs(0, 0, left, right, data, \"\", res);\n\n      const sanitizedPlayerAns = removeBracketsFromArrayString(ans).replace(/\\s/g, \"\");\n\n      const playerAnsArray: string[] = sanitizedPlayerAns.split(\",\");\n      if (playerAnsArray.length !== res.length) {\n        return false;\n      }\n      for (const resultInAnswer of res) {\n        if (!playerAnsArray.includes(resultInAnswer)) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n  },\n  {\n    desc: (data: any[]): string => {\n      const digits: string = data[0];\n      const target: number = data[1];\n\n      return [\n        \"You are given the following string which contains only digits between 0 and 9:\\n\\n\",\n        `${digits}\\n\\n`,\n        `You are also given a target number of ${target}. Return all possible ways`,\n        \"you can add the +, -, and * operators to the string such that it evaluates\",\n        \"to the target number.\\n\\n\",\n        \"The provided answer should be an array of strings containing the valid expressions.\",\n        \"The data provided by this problem is an array with two elements. The first element\",\n        \"is the string of digits, while the second element is the target number:\\n\\n\",\n        `[\"${digits}\", ${target}]\\n\\n`,\n        \"NOTE: Numbers in the expression cannot have leading 0's. In other words,\",\n        `\"1+01\" is not a valid expression`,\n        \"Examples:\\n\\n\",\n        `Input: digits = \"123\", target = 6\\n`,\n        `Output: [1+2+3, 1*2*3]\\n\\n`,\n        `Input: digits = \"105\", target = 5\\n`,\n        `Output: [1*0+5, 10-5]`,\n      ].join(\" \");\n    },\n    difficulty: 10,\n    gen: (): any[] => {\n      const numDigits = getRandomInt(4, 12);\n      const digitsArray: string[] = [];\n      digitsArray.length = numDigits;\n      for (let i = 0; i < digitsArray.length; ++i) {\n        if (i === 0) {\n          digitsArray[i] = String(getRandomInt(1, 9));\n        } else {\n          digitsArray[i] = String(getRandomInt(0, 9));\n        }\n      }\n\n      const target: number = getRandomInt(-100, 100);\n      const digits: string = digitsArray.join(\"\");\n\n      return [digits, target];\n    },\n    name: \"Find All Valid Math Expressions\",\n    numTries: 10,\n    solver: (data: any[], ans: string): boolean => {\n      const num: string = data[0];\n      const target: number = data[1];\n\n      function helper(\n        res: string[],\n        path: string,\n        num: string,\n        target: number,\n        pos: number,\n        evaluated: number,\n        multed: number,\n      ): void {\n        if (pos === num.length) {\n          if (target === evaluated) {\n            res.push(path);\n          }\n          return;\n        }\n\n        for (let i = pos; i < num.length; ++i) {\n          if (i != pos && num[pos] == \"0\") {\n            break;\n          }\n          const cur = parseInt(num.substring(pos, i + 1));\n\n          if (pos === 0) {\n            helper(res, path + cur, num, target, i + 1, cur, cur);\n          } else {\n            helper(res, path + \"+\" + cur, num, target, i + 1, evaluated + cur, cur);\n            helper(res, path + \"-\" + cur, num, target, i + 1, evaluated - cur, -cur);\n            helper(res, path + \"*\" + cur, num, target, i + 1, evaluated - multed + multed * cur, multed * cur);\n          }\n        }\n      }\n\n      const sanitizedPlayerAns: string = removeBracketsFromArrayString(ans);\n      const sanitizedPlayerAnsArr: string[] = sanitizedPlayerAns.split(\",\");\n      for (let i = 0; i < sanitizedPlayerAnsArr.length; ++i) {\n        sanitizedPlayerAnsArr[i] = removeQuotesFromString(sanitizedPlayerAnsArr[i]).replace(/\\s/g, \"\");\n      }\n\n      if (num == null || num.length === 0) {\n        if (sanitizedPlayerAnsArr.length === 0) {\n          return true;\n        }\n        if (sanitizedPlayerAnsArr.length === 1 && sanitizedPlayerAnsArr[0] === \"\") {\n          return true;\n        }\n        return false;\n      }\n\n      const result: string[] = [];\n      helper(result, \"\", num, target, 0, 0, 0);\n\n      for (const expr of result) {\n        if (!sanitizedPlayerAnsArr.includes(expr)) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n  },\n];\n","// Function that generates a random gibberish string of length n\nconst chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\nexport function createRandomString(n: number): string {\n  let str = \"\";\n\n  for (let i = 0; i < n; ++i) {\n    str += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n\n  return str;\n}\n","import { BaseServer } from \"../Server/BaseServer\";\nimport { ITerminal } from \"../Terminal/ITerminal\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { IRouter } from \"../ui/Router\";\n\nexport interface IProgramCreate {\n  level: number;\n  req(p: IPlayer): boolean; // Function that indicates whether player meets requirements\n  time: number;\n  tooltip: string;\n}\n\nexport class Program {\n  name = \"\";\n  create: IProgramCreate | null;\n  run: (router: IRouter, terminal: ITerminal, player: IPlayer, server: BaseServer, args: string[]) => void;\n\n  constructor(\n    name: string,\n    create: IProgramCreate | null,\n    run: (router: IRouter, terminal: ITerminal, player: IPlayer, server: BaseServer, args: string[]) => void,\n  ) {\n    this.name = name;\n    this.create = create;\n    this.run = run;\n  }\n\n  htmlID(): string {\n    const name = this.name.endsWith(\".exe\") ? this.name.slice(0, -\".exe\".length) : this.name;\n    return \"create-program-\" + name;\n  }\n}\n","import { IProgramCreate } from \"../Program\";\nimport { CONSTANTS } from \"../../Constants\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { Server } from \"../../Server/Server\";\nimport { ITerminal } from \"../../Terminal/ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { HacknetServer } from \"../../Hacknet/HacknetServer\";\nimport { convertTimeMsToTimeElapsedString } from \"../../utils/StringHelperFunctions\";\nimport { getServer } from \"../../Server/ServerHelpers\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { BitNodeMultipliers } from \"../../BitNode/BitNodeMultipliers\";\nimport { BitFlumeEvent } from \"../../BitNode/ui/BitFlumeModal\";\nimport { calculateHackingTime, calculateGrowTime, calculateWeakenTime } from \"../../Hacking\";\n\nfunction requireHackingLevel(lvl: number) {\n  return function (p: IPlayer) {\n    return p.hacking_skill >= lvl;\n  };\n}\n\nfunction bitFlumeRequirements() {\n  return function (p: IPlayer) {\n    return p.sourceFiles.length > 0 && p.hacking_skill >= 1;\n  };\n}\n\nexport interface IProgramCreationParams {\n  key: string;\n  name: string;\n  create: IProgramCreate | null;\n  run: (router: IRouter, terminal: ITerminal, player: IPlayer, server: BaseServer, args: string[]) => void;\n}\n\nexport const programsMetadata: IProgramCreationParams[] = [\n  {\n    key: \"NukeProgram\",\n    name: \"NUKE.exe\",\n    create: {\n      level: 1,\n      tooltip: \"This virus is used to gain root access to a machine if enough ports are opened.\",\n      req: requireHackingLevel(1),\n      time: CONSTANTS.MillisecondsPerFiveMinutes,\n    },\n    run: (router: IRouter, terminal: ITerminal, player: IPlayer, server: BaseServer): void => {\n      if (!(server instanceof Server)) {\n        terminal.error(\"Cannot nuke this kind of server.\");\n        return;\n      }\n      if (server.hasAdminRights) {\n        terminal.print(\"You already have root access to this computer. There is no reason to run NUKE.exe\");\n        return;\n      }\n      if (server.openPortCount >= server.numOpenPortsRequired) {\n        server.hasAdminRights = true;\n        terminal.print(\"NUKE successful! Gained root access to \" + server.hostname);\n        // TODO: Make this take time rather than be instant\n        return;\n      }\n\n      terminal.print(\"NUKE unsuccessful. Not enough ports have been opened\");\n    },\n  },\n  {\n    key: \"BruteSSHProgram\",\n    name: \"BruteSSH.exe\",\n    create: {\n      level: 50,\n      tooltip: \"This program executes a brute force attack that opens SSH ports\",\n      req: requireHackingLevel(50),\n      time: CONSTANTS.MillisecondsPerFiveMinutes * 2,\n    },\n    run: (router: IRouter, terminal: ITerminal, player: IPlayer, server: BaseServer): void => {\n      if (!(server instanceof Server)) {\n        terminal.error(\"Cannot run BruteSSH.exe on this kind of server.\");\n        return;\n      }\n      if (server.sshPortOpen) {\n        terminal.print(\"SSH Port (22) is already open!\");\n        return;\n      }\n\n      server.sshPortOpen = true;\n      terminal.print(\"Opened SSH Port(22)!\");\n      server.openPortCount++;\n    },\n  },\n  {\n    key: \"FTPCrackProgram\",\n    name: \"FTPCrack.exe\",\n    create: {\n      level: 100,\n      tooltip: \"This program cracks open FTP ports\",\n      req: requireHackingLevel(100),\n      time: CONSTANTS.MillisecondsPerHalfHour,\n    },\n    run: (router: IRouter, terminal: ITerminal, player: IPlayer, server: BaseServer): void => {\n      if (!(server instanceof Server)) {\n        terminal.error(\"Cannot run FTPCrack.exe on this kind of server.\");\n        return;\n      }\n      if (server.ftpPortOpen) {\n        terminal.print(\"FTP Port (21) is already open!\");\n        return;\n      }\n\n      server.ftpPortOpen = true;\n      terminal.print(\"Opened FTP Port (21)!\");\n      server.openPortCount++;\n    },\n  },\n  {\n    key: \"RelaySMTPProgram\",\n    name: \"relaySMTP.exe\",\n    create: {\n      level: 250,\n      tooltip: \"This program opens SMTP ports by redirecting data\",\n      req: requireHackingLevel(250),\n      time: CONSTANTS.MillisecondsPer2Hours,\n    },\n    run: (router: IRouter, terminal: ITerminal, player: IPlayer, server: BaseServer): void => {\n      if (!(server instanceof Server)) {\n        terminal.error(\"Cannot run relaySMTP.exe on this kind of server.\");\n        return;\n      }\n      if (server.smtpPortOpen) {\n        terminal.print(\"SMTP Port (25) is already open!\");\n        return;\n      }\n\n      server.smtpPortOpen = true;\n      terminal.print(\"Opened SMTP Port (25)!\");\n      server.openPortCount++;\n    },\n  },\n  {\n    key: \"HTTPWormProgram\",\n    name: \"HTTPWorm.exe\",\n    create: {\n      level: 500,\n      tooltip: \"This virus opens up HTTP ports\",\n      req: requireHackingLevel(500),\n      time: CONSTANTS.MillisecondsPer4Hours,\n    },\n    run: (router: IRouter, terminal: ITerminal, player: IPlayer, server: BaseServer): void => {\n      if (!(server instanceof Server)) {\n        terminal.error(\"Cannot run HTTPWorm.exe on this kind of server.\");\n        return;\n      }\n      if (server.httpPortOpen) {\n        terminal.print(\"HTTP Port (80) is already open!\");\n        return;\n      }\n\n      server.httpPortOpen = true;\n      terminal.print(\"Opened HTTP Port (80)!\");\n      server.openPortCount++;\n    },\n  },\n  {\n    key: \"SQLInjectProgram\",\n    name: \"SQLInject.exe\",\n    create: {\n      level: 750,\n      tooltip: \"This virus opens SQL ports\",\n      req: requireHackingLevel(750),\n      time: CONSTANTS.MillisecondsPer8Hours,\n    },\n    run: (router: IRouter, terminal: ITerminal, player: IPlayer, server: BaseServer): void => {\n      if (!(server instanceof Server)) {\n        terminal.error(\"Cannot run SQLInject.exe on this kind of server.\");\n        return;\n      }\n      if (server.sqlPortOpen) {\n        terminal.print(\"SQL Port (1433) is already open!\");\n        return;\n      }\n\n      server.sqlPortOpen = true;\n      terminal.print(\"Opened SQL Port (1433)!\");\n      server.openPortCount++;\n    },\n  },\n  {\n    key: \"DeepscanV1\",\n    name: \"DeepscanV1.exe\",\n    create: {\n      level: 75,\n      tooltip: \"This program allows you to use the scan-analyze command with a depth up to 5\",\n      req: requireHackingLevel(75),\n      time: CONSTANTS.MillisecondsPerQuarterHour,\n    },\n    run: (router: IRouter, terminal: ITerminal): void => {\n      terminal.print(\"This executable cannot be run.\");\n      terminal.print(\"DeepscanV1.exe lets you run 'scan-analyze' with a depth up to 5.\");\n    },\n  },\n  {\n    key: \"DeepscanV2\",\n    name: \"DeepscanV2.exe\",\n    create: {\n      level: 400,\n      tooltip: \"This program allows you to use the scan-analyze command with a depth up to 10\",\n      req: requireHackingLevel(400),\n      time: CONSTANTS.MillisecondsPer2Hours,\n    },\n    run: (router: IRouter, terminal: ITerminal): void => {\n      terminal.print(\"This executable cannot be run.\");\n      terminal.print(\"DeepscanV2.exe lets you run 'scan-analyze' with a depth up to 10.\");\n    },\n  },\n  {\n    key: \"ServerProfiler\",\n    name: \"ServerProfiler.exe\",\n    create: {\n      level: 75,\n      tooltip: \"This program is used to display hacking and Netscript-related information about servers\",\n      req: requireHackingLevel(75),\n      time: CONSTANTS.MillisecondsPerHalfHour,\n    },\n    run: (router: IRouter, terminal: ITerminal, player: IPlayer, server: BaseServer, args: string[]): void => {\n      if (args.length !== 1) {\n        terminal.print(\"Must pass a server hostname or IP as an argument for ServerProfiler.exe\");\n        return;\n      }\n\n      const targetServer = getServer(args[0]);\n      if (targetServer == null) {\n        terminal.print(\"Invalid server IP/hostname\");\n        return;\n      }\n\n      if (targetServer instanceof HacknetServer) {\n        terminal.print(`ServerProfiler.exe cannot be run on a Hacknet Server.`);\n        return;\n      }\n\n      terminal.print(targetServer.hostname + \":\");\n      terminal.print(\"Server base security level: \" + targetServer.baseDifficulty);\n      terminal.print(\"Server current security level: \" + targetServer.hackDifficulty);\n      terminal.print(\"Server growth rate: \" + targetServer.serverGrowth);\n      terminal.print(\n        `Netscript hack() execution time: ${convertTimeMsToTimeElapsedString(\n          calculateHackingTime(targetServer, player) * 1000,\n          true,\n        )}`,\n      );\n      terminal.print(\n        `Netscript grow() execution time: ${convertTimeMsToTimeElapsedString(\n          calculateGrowTime(targetServer, player) * 1000,\n          true,\n        )}`,\n      );\n      terminal.print(\n        `Netscript weaken() execution time: ${convertTimeMsToTimeElapsedString(\n          calculateWeakenTime(targetServer, player) * 1000,\n          true,\n        )}`,\n      );\n    },\n  },\n  {\n    key: \"AutoLink\",\n    name: \"AutoLink.exe\",\n    create: {\n      level: 25,\n      tooltip: \"This program allows you to directly connect to other servers through the 'scan-analyze' command\",\n      req: requireHackingLevel(25),\n      time: CONSTANTS.MillisecondsPerQuarterHour,\n    },\n    run: (router: IRouter, terminal: ITerminal): void => {\n      terminal.print(\"This executable cannot be run.\");\n      terminal.print(\"AutoLink.exe lets you automatically connect to other servers when using 'scan-analyze'.\");\n      terminal.print(\"When using scan-analyze, click on a server's hostname to connect to it.\");\n    },\n  },\n  {\n    key: \"BitFlume\",\n    name: \"b1t_flum3.exe\",\n    create: {\n      level: 1,\n      tooltip: \"This program creates a portal to the BitNode Nexus (allows you to restart and switch BitNodes)\",\n      req: bitFlumeRequirements(),\n      time: CONSTANTS.MillisecondsPerFiveMinutes / 20,\n    },\n    run: (router: IRouter, terminal: ITerminal, player: IPlayer): void => {\n      BitFlumeEvent.emit();\n    },\n  },\n  {\n    key: \"Flight\",\n    name: \"fl1ght.exe\",\n    create: null,\n    run: (router: IRouter, terminal: ITerminal, player: IPlayer): void => {\n      const numAugReq = Math.round(BitNodeMultipliers.DaedalusAugsRequirement * 30);\n      const fulfilled =\n        player.augmentations.length >= numAugReq && player.money.gt(1e11) && player.hacking_skill >= 2500;\n      if (!fulfilled) {\n        terminal.print(`Augmentations: ${player.augmentations.length} / ${numAugReq}`);\n        terminal.print(`Money: ${numeralWrapper.formatMoney(player.money.toNumber())} / $100b`);\n        terminal.print(`Hacking skill: ${player.hacking_skill} / 2500`);\n        return;\n      }\n\n      terminal.print(\"We will contact you.\");\n      terminal.print(\"-- Daedalus --\");\n    },\n  },\n];\n","// tslint:disable:max-file-line-count\n\n// This could actually be a JSON file as it should be constant metadata to be imported...\nimport { IMinMaxRange } from \"../../types\";\nimport { LocationName } from \"../../Locations/data/LocationNames\";\nimport { LiteratureNames } from \"../../Literature/data/LiteratureNames\";\n\n/**\n * The metadata describing the base state of servers on the network.\n * These values will be adjusted based on Bitnode multipliers when the Server objects are built out.\n */\ninterface IServerMetadata {\n  /**\n   * When populated, the base security level of the server.\n   */\n  hackDifficulty?: number | IMinMaxRange;\n\n  /**\n   * The DNS name of the server.\n   */\n  hostname: string;\n\n  /**\n   * When populated, the files will be added to the server when created.\n   */\n  literature?: string[];\n\n  /**\n   * When populated, the exponent of 2^x amount of RAM the server has.\n   * This should be in the range of 1-20, to match the Player's max RAM.\n   */\n  maxRamExponent?: number | IMinMaxRange;\n\n  /**\n   * How much money the server starts out with.\n   */\n  moneyAvailable: number | IMinMaxRange;\n\n  /**\n   * The number of network layers away from the `home` server.\n   * This value is between 1 and 15.\n   * If this is not populated, @specialName should be.\n   */\n  networkLayer?: number | IMinMaxRange;\n\n  /**\n   * The number of ports that must be opened before the player can execute NUKE.\n   */\n  numOpenPortsRequired: number;\n\n  /**\n   * The organization that the server belongs to.\n   */\n  organizationName: string;\n\n  /**\n   * The minimum hacking level before the player can run NUKE.\n   */\n  requiredHackingSkill: number | IMinMaxRange;\n\n  /**\n   * The growth factor for the server.\n   */\n  serverGrowth?: number | IMinMaxRange;\n\n  /**\n   * A \"unique\" server that has special implications when the player manually hacks it.\n   */\n  specialName?: string;\n\n  [key: string]: any;\n}\n\n/**\n * The metadata for building up the servers on the network.\n */\nexport const serverMetadata: IServerMetadata[] = [\n  {\n    hackDifficulty: 99,\n    hostname: \"ecorp\",\n    moneyAvailable: {\n      max: 70e9,\n      min: 30e9,\n    },\n    networkLayer: 15,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.AevumECorp,\n    requiredHackingSkill: {\n      max: 1400,\n      min: 1050,\n    },\n    serverGrowth: 99,\n    specialName: LocationName.AevumECorp,\n  },\n  {\n    hackDifficulty: 99,\n    hostname: \"megacorp\",\n    moneyAvailable: {\n      max: 60e9,\n      min: 40e9,\n    },\n    networkLayer: 15,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.Sector12MegaCorp,\n    requiredHackingSkill: {\n      max: 1350,\n      min: 1100,\n    },\n    serverGrowth: 99,\n    specialName: LocationName.Sector12MegaCorp,\n  },\n  {\n    hackDifficulty: {\n      max: 88,\n      min: 72,\n    },\n    hostname: \"b-and-a\",\n    moneyAvailable: {\n      max: 30e9,\n      min: 15e9,\n    },\n    networkLayer: 14,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.AevumBachmanAndAssociates,\n    requiredHackingSkill: {\n      max: 1150,\n      min: 900,\n    },\n    serverGrowth: {\n      max: 80,\n      min: 60,\n    },\n    specialName: LocationName.AevumBachmanAndAssociates,\n  },\n  {\n    hackDifficulty: {\n      max: 97,\n      min: 88,\n    },\n    hostname: \"blade\",\n    literature: [LiteratureNames.BeyondMan],\n    maxRamExponent: {\n      max: 9,\n      min: 5,\n    },\n    moneyAvailable: {\n      max: 40e9,\n      min: 10e9,\n    },\n    networkLayer: 14,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.Sector12BladeIndustries,\n    requiredHackingSkill: {\n      max: 1200,\n      min: 900,\n    },\n    serverGrowth: {\n      max: 85,\n      min: 55,\n    },\n    specialName: LocationName.Sector12BladeIndustries,\n  },\n  {\n    hackDifficulty: 99,\n    hostname: \"nwo\",\n    literature: [LiteratureNames.TheHiddenWorld],\n    moneyAvailable: {\n      max: 40e9,\n      min: 20e9,\n    },\n    networkLayer: 14,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.VolhavenNWO,\n    requiredHackingSkill: {\n      max: 1300,\n      min: 950,\n    },\n    serverGrowth: {\n      max: 95,\n      min: 65,\n    },\n    specialName: LocationName.VolhavenNWO,\n  },\n  {\n    hackDifficulty: {\n      max: 65,\n      min: 45,\n    },\n    hostname: \"clarkinc\",\n    literature: [LiteratureNames.BeyondMan, LiteratureNames.CostOfImmortality],\n    moneyAvailable: {\n      max: 25e9,\n      min: 15e9,\n    },\n    networkLayer: 14,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.AevumClarkeIncorporated,\n    requiredHackingSkill: {\n      max: 1250,\n      min: 950,\n    },\n    serverGrowth: {\n      max: 75,\n      min: 45,\n    },\n    specialName: LocationName.AevumClarkeIncorporated,\n  },\n  {\n    hackDifficulty: {\n      max: 99,\n      min: 90,\n    },\n    hostname: \"omnitek\",\n    literature: [LiteratureNames.CodedIntelligence, LiteratureNames.HistoryOfSynthoids],\n    maxRamExponent: {\n      max: 9,\n      min: 7,\n    },\n    moneyAvailable: {\n      max: 22e9,\n      min: 13e9,\n    },\n    networkLayer: 13,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.VolhavenOmniTekIncorporated,\n    requiredHackingSkill: {\n      max: 1100,\n      min: 900,\n    },\n    serverGrowth: {\n      max: 99,\n      min: 95,\n    },\n    specialName: LocationName.VolhavenOmniTekIncorporated,\n  },\n  {\n    hackDifficulty: {\n      max: 75,\n      min: 55,\n    },\n    hostname: \"4sigma\",\n    moneyAvailable: {\n      max: 25e9,\n      min: 15e9,\n    },\n    networkLayer: 13,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.Sector12FourSigma,\n    requiredHackingSkill: {\n      max: 1250,\n      min: 900,\n    },\n    serverGrowth: {\n      max: 99,\n      min: 75,\n    },\n    specialName: LocationName.Sector12FourSigma,\n  },\n  {\n    hackDifficulty: {\n      max: 99,\n      min: 95,\n    },\n    hostname: \"kuai-gong\",\n    moneyAvailable: {\n      max: 30e9,\n      min: 20e9,\n    },\n    networkLayer: 13,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.ChongqingKuaiGongInternational,\n    requiredHackingSkill: {\n      max: 1300,\n      min: 950,\n    },\n    serverGrowth: {\n      max: 99,\n      min: 90,\n    },\n    specialName: LocationName.ChongqingKuaiGongInternational,\n  },\n  {\n    hackDifficulty: {\n      max: 97,\n      min: 83,\n    },\n    hostname: \"fulcrumtech\",\n    literature: [LiteratureNames.SimulatedReality],\n    maxRamExponent: {\n      max: 11,\n      min: 7,\n    },\n    moneyAvailable: {\n      max: 1800e6,\n      min: 1400e6,\n    },\n    networkLayer: 12,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.AevumFulcrumTechnologies,\n    requiredHackingSkill: {\n      max: 1250,\n      min: 950,\n    },\n    serverGrowth: {\n      max: 99,\n      min: 80,\n    },\n    specialName: LocationName.AevumFulcrumTechnologies,\n  },\n  {\n    hackDifficulty: 99,\n    hostname: \"fulcrumassets\",\n    moneyAvailable: 1e6,\n    networkLayer: 15,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.AevumFulcrumTechnologies,\n    requiredHackingSkill: {\n      max: 1600,\n      min: 1100,\n    },\n    serverGrowth: 1,\n    specialName: \"Fulcrum Secret Technologies Server\",\n  },\n  {\n    hackDifficulty: {\n      max: 92,\n      min: 78,\n    },\n    hostname: \"stormtech\",\n    moneyAvailable: {\n      max: 1200e6,\n      min: 1000e6,\n    },\n    networkLayer: 12,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.IshimaStormTechnologies,\n    requiredHackingSkill: {\n      max: 1075,\n      min: 875,\n    },\n    serverGrowth: {\n      max: 92,\n      min: 68,\n    },\n    specialName: LocationName.IshimaStormTechnologies,\n  },\n  {\n    hackDifficulty: {\n      max: 96,\n      min: 84,\n    },\n    hostname: \"defcomm\",\n    moneyAvailable: {\n      max: 950e6,\n      min: 800e6,\n    },\n    networkLayer: 9,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.NewTokyoDefComm,\n    requiredHackingSkill: {\n      max: 1050,\n      min: 850,\n    },\n    serverGrowth: {\n      max: 73,\n      min: 47,\n    },\n    specialName: LocationName.NewTokyoDefComm,\n  },\n  {\n    hackDifficulty: {\n      max: 90,\n      min: 70,\n    },\n    hostname: \"infocomm\",\n    moneyAvailable: {\n      max: 900e6,\n      min: 600e6,\n    },\n    networkLayer: 10,\n    numOpenPortsRequired: 5,\n    organizationName: \"InfoComm\",\n    requiredHackingSkill: {\n      max: 950,\n      min: 875,\n    },\n    serverGrowth: {\n      max: 75,\n      min: 35,\n    },\n  },\n  {\n    hackDifficulty: {\n      max: 95,\n      min: 85,\n    },\n    hostname: \"helios\",\n    literature: [LiteratureNames.BeyondMan],\n    maxRamExponent: {\n      max: 8,\n      min: 5,\n    },\n    moneyAvailable: {\n      max: 750e6,\n      min: 550e6,\n    },\n    networkLayer: 12,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.VolhavenHeliosLabs,\n    requiredHackingSkill: {\n      max: 900,\n      min: 800,\n    },\n    serverGrowth: {\n      max: 80,\n      min: 70,\n    },\n    specialName: LocationName.VolhavenHeliosLabs,\n  },\n  {\n    hackDifficulty: {\n      max: 90,\n      min: 80,\n    },\n    hostname: \"vitalife\",\n    literature: [LiteratureNames.AGreenTomorrow],\n    maxRamExponent: {\n      max: 7,\n      min: 4,\n    },\n    moneyAvailable: {\n      max: 800e6,\n      min: 700e6,\n    },\n    networkLayer: 12,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.NewTokyoVitaLife,\n    requiredHackingSkill: {\n      max: 900,\n      min: 775,\n    },\n    serverGrowth: {\n      max: 80,\n      min: 60,\n    },\n    specialName: LocationName.NewTokyoVitaLife,\n  },\n  {\n    hackDifficulty: {\n      max: 95,\n      min: 85,\n    },\n    hostname: \"icarus\",\n    moneyAvailable: {\n      max: 1000e6,\n      min: 900e6,\n    },\n    networkLayer: 9,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.Sector12IcarusMicrosystems,\n    requiredHackingSkill: {\n      max: 925,\n      min: 850,\n    },\n    serverGrowth: {\n      max: 95,\n      min: 85,\n    },\n    specialName: LocationName.Sector12IcarusMicrosystems,\n  },\n  {\n    hackDifficulty: {\n      max: 90,\n      min: 80,\n    },\n    hostname: \"univ-energy\",\n    maxRamExponent: {\n      max: 7,\n      min: 4,\n    },\n    moneyAvailable: {\n      max: 1200e6,\n      min: 1100e6,\n    },\n    networkLayer: 9,\n    numOpenPortsRequired: 4,\n    organizationName: LocationName.Sector12UniversalEnergy,\n    requiredHackingSkill: {\n      max: 900,\n      min: 800,\n    },\n    serverGrowth: {\n      max: 90,\n      min: 80,\n    },\n    specialName: LocationName.Sector12UniversalEnergy,\n  },\n  {\n    hackDifficulty: {\n      max: 80,\n      min: 70,\n    },\n    hostname: \"titan-labs\",\n    literature: [LiteratureNames.CodedIntelligence],\n    maxRamExponent: {\n      max: 7,\n      min: 4,\n    },\n    moneyAvailable: {\n      max: 900000000,\n      min: 750000000,\n    },\n    networkLayer: 11,\n    numOpenPortsRequired: 5,\n    organizationName: \"Titan Laboratories\",\n    requiredHackingSkill: {\n      max: 875,\n      min: 800,\n    },\n    serverGrowth: {\n      max: 80,\n      min: 60,\n    },\n  },\n  {\n    hackDifficulty: {\n      max: 75,\n      min: 65,\n    },\n    hostname: \"microdyne\",\n    literature: [LiteratureNames.SyntheticMuscles],\n    maxRamExponent: {\n      max: 6,\n      min: 4,\n    },\n    moneyAvailable: {\n      max: 700000000,\n      min: 500000000,\n    },\n    networkLayer: 11,\n    numOpenPortsRequired: 5,\n    organizationName: \"Microdyne Technologies\",\n    requiredHackingSkill: {\n      max: 875,\n      min: 800,\n    },\n    serverGrowth: {\n      max: 90,\n      min: 70,\n    },\n  },\n  {\n    hackDifficulty: {\n      max: 80,\n      min: 70,\n    },\n    hostname: \"taiyang-digital\",\n    literature: [LiteratureNames.AGreenTomorrow, LiteratureNames.BrighterThanTheSun],\n    moneyAvailable: {\n      max: 900000000,\n      min: 800000000,\n    },\n    networkLayer: 10,\n    numOpenPortsRequired: 5,\n    organizationName: \"Taiyang Digital\",\n    requiredHackingSkill: {\n      max: 950,\n      min: 850,\n    },\n    serverGrowth: {\n      max: 80,\n      min: 70,\n    },\n  },\n  {\n    hackDifficulty: {\n      max: 65,\n      min: 55,\n    },\n    hostname: \"galactic-cyber\",\n    moneyAvailable: {\n      max: 850000000,\n      min: 750000000,\n    },\n    networkLayer: 7,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.AevumGalacticCybersystems,\n    requiredHackingSkill: {\n      max: 875,\n      min: 825,\n    },\n    serverGrowth: {\n      max: 90,\n      min: 70,\n    },\n    specialName: LocationName.AevumGalacticCybersystems,\n  },\n  {\n    hackDifficulty: {\n      max: 90,\n      min: 80,\n    },\n    hostname: \"aerocorp\",\n    literature: [LiteratureNames.ManAndMachine],\n    moneyAvailable: {\n      max: 1200000000,\n      min: 1000000000,\n    },\n    networkLayer: 7,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.AevumAeroCorp,\n    requiredHackingSkill: {\n      max: 925,\n      min: 850,\n    },\n    serverGrowth: {\n      max: 65,\n      min: 55,\n    },\n    specialName: LocationName.AevumAeroCorp,\n  },\n  {\n    hackDifficulty: {\n      max: 95,\n      min: 85,\n    },\n    hostname: \"omnia\",\n    literature: [LiteratureNames.HistoryOfSynthoids],\n    maxRamExponent: {\n      max: 6,\n      min: 4,\n    },\n    moneyAvailable: {\n      max: 1000000000,\n      min: 900000000,\n    },\n    networkLayer: 8,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.VolhavenOmniaCybersystems,\n    requiredHackingSkill: {\n      max: 950,\n      min: 850,\n    },\n    serverGrowth: {\n      max: 70,\n      min: 60,\n    },\n    specialName: LocationName.VolhavenOmniaCybersystems,\n  },\n  {\n    hackDifficulty: {\n      max: 65,\n      min: 55,\n    },\n    hostname: \"zb-def\",\n    literature: [LiteratureNames.SyntheticMuscles],\n    moneyAvailable: {\n      max: 1100000000,\n      min: 900000000,\n    },\n    networkLayer: 10,\n    numOpenPortsRequired: 4,\n    organizationName: \"ZB Defense Industries\",\n    requiredHackingSkill: {\n      max: 825,\n      min: 775,\n    },\n    serverGrowth: {\n      max: 75,\n      min: 65,\n    },\n  },\n  {\n    hackDifficulty: {\n      max: 80,\n      min: 60,\n    },\n    hostname: \"applied-energetics\",\n    moneyAvailable: {\n      max: 1000000000,\n      min: 700000000,\n    },\n    networkLayer: 11,\n    numOpenPortsRequired: 4,\n    organizationName: \"Applied Energetics\",\n    requiredHackingSkill: {\n      max: 850,\n      min: 775,\n    },\n    serverGrowth: {\n      max: 75,\n      min: 70,\n    },\n  },\n  {\n    hackDifficulty: {\n      max: 80,\n      min: 70,\n    },\n    hostname: \"solaris\",\n    literature: [LiteratureNames.AGreenTomorrow, LiteratureNames.TheFailedFrontier],\n    maxRamExponent: {\n      max: 7,\n      min: 4,\n    },\n    moneyAvailable: {\n      max: 900000000,\n      min: 700000000,\n    },\n    networkLayer: 9,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.ChongqingSolarisSpaceSystems,\n    requiredHackingSkill: {\n      max: 850,\n      min: 750,\n    },\n    serverGrowth: {\n      max: 80,\n      min: 70,\n    },\n    specialName: LocationName.ChongqingSolarisSpaceSystems,\n  },\n  {\n    hackDifficulty: {\n      max: 85,\n      min: 75,\n    },\n    hostname: \"deltaone\",\n    moneyAvailable: {\n      max: 1700000000,\n      min: 1300000000,\n    },\n    networkLayer: 8,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.Sector12DeltaOne,\n    requiredHackingSkill: {\n      max: 900,\n      min: 800,\n    },\n    serverGrowth: {\n      max: 70,\n      min: 50,\n    },\n    specialName: LocationName.Sector12DeltaOne,\n  },\n  {\n    hackDifficulty: {\n      max: 85,\n      min: 75,\n    },\n    hostname: \"global-pharm\",\n    literature: [LiteratureNames.AGreenTomorrow],\n    maxRamExponent: {\n      max: 6,\n      min: 3,\n    },\n    moneyAvailable: {\n      max: 1750000000,\n      min: 1500000000,\n    },\n    networkLayer: 7,\n    numOpenPortsRequired: 4,\n    organizationName: LocationName.NewTokyoGlobalPharmaceuticals,\n    requiredHackingSkill: {\n      max: 850,\n      min: 750,\n    },\n    serverGrowth: {\n      max: 90,\n      min: 80,\n    },\n    specialName: LocationName.NewTokyoGlobalPharmaceuticals,\n  },\n  {\n    hackDifficulty: {\n      max: 80,\n      min: 60,\n    },\n    hostname: \"nova-med\",\n    moneyAvailable: {\n      max: 1250000000,\n      min: 1100000000,\n    },\n    networkLayer: 10,\n    numOpenPortsRequired: 4,\n    organizationName: LocationName.IshimaNovaMedical,\n    requiredHackingSkill: {\n      max: 850,\n      min: 775,\n    },\n    serverGrowth: {\n      max: 85,\n      min: 65,\n    },\n    specialName: LocationName.IshimaNovaMedical,\n  },\n  {\n    hackDifficulty: {\n      max: 90,\n      min: 70,\n    },\n    hostname: \"zeus-med\",\n    moneyAvailable: {\n      max: 1500000000,\n      min: 1300000000,\n    },\n    networkLayer: 9,\n    numOpenPortsRequired: 5,\n    organizationName: \"Zeus Medical\",\n    requiredHackingSkill: {\n      max: 850,\n      min: 800,\n    },\n    serverGrowth: {\n      max: 80,\n      min: 70,\n    },\n  },\n  {\n    hackDifficulty: {\n      max: 80,\n      min: 70,\n    },\n    hostname: \"unitalife\",\n    maxRamExponent: {\n      max: 6,\n      min: 4,\n    },\n    moneyAvailable: {\n      max: 1100000000,\n      min: 1000000000,\n    },\n    networkLayer: 8,\n    numOpenPortsRequired: 4,\n    organizationName: \"UnitaLife Group\",\n    requiredHackingSkill: {\n      max: 825,\n      min: 775,\n    },\n    serverGrowth: {\n      max: 80,\n      min: 70,\n    },\n  },\n  {\n    hackDifficulty: {\n      max: 80,\n      min: 60,\n    },\n    hostname: \"lexo-corp\",\n    maxRamExponent: {\n      max: 7,\n      min: 4,\n    },\n    moneyAvailable: {\n      max: 800000000,\n      min: 700000000,\n    },\n    networkLayer: 6,\n    numOpenPortsRequired: 4,\n    organizationName: LocationName.VolhavenLexoCorp,\n    requiredHackingSkill: {\n      max: 750,\n      min: 650,\n    },\n    serverGrowth: {\n      max: 65,\n      min: 55,\n    },\n    specialName: LocationName.VolhavenLexoCorp,\n  },\n  {\n    hackDifficulty: {\n      max: 60,\n      min: 40,\n    },\n    hostname: \"rho-construction\",\n    maxRamExponent: {\n      max: 6,\n      min: 4,\n    },\n    moneyAvailable: {\n      max: 700000000,\n      min: 500000000,\n    },\n    networkLayer: 6,\n    numOpenPortsRequired: 3,\n    organizationName: LocationName.AevumRhoConstruction,\n    requiredHackingSkill: {\n      max: 525,\n      min: 475,\n    },\n    serverGrowth: {\n      max: 60,\n      min: 40,\n    },\n    specialName: LocationName.AevumRhoConstruction,\n  },\n  {\n    hackDifficulty: {\n      max: 70,\n      min: 50,\n    },\n    hostname: \"alpha-ent\",\n    literature: [LiteratureNames.Sector12Crime],\n    maxRamExponent: {\n      max: 7,\n      min: 4,\n    },\n    moneyAvailable: {\n      max: 750000000,\n      min: 600000000,\n    },\n    networkLayer: 6,\n    numOpenPortsRequired: 4,\n    organizationName: LocationName.Sector12AlphaEnterprises,\n    requiredHackingSkill: {\n      max: 600,\n      min: 500,\n    },\n    serverGrowth: {\n      max: 60,\n      min: 50,\n    },\n    specialName: LocationName.Sector12AlphaEnterprises,\n  },\n  {\n    hackDifficulty: {\n      max: 80,\n      min: 70,\n    },\n    hostname: \"aevum-police\",\n    maxRamExponent: {\n      max: 6,\n      min: 4,\n    },\n    moneyAvailable: {\n      max: 400000000,\n      min: 200000000,\n    },\n    networkLayer: 6,\n    numOpenPortsRequired: 4,\n    organizationName: LocationName.AevumPolice,\n    requiredHackingSkill: {\n      max: 450,\n      min: 400,\n    },\n    serverGrowth: {\n      max: 50,\n      min: 30,\n    },\n    specialName: LocationName.AevumPolice,\n  },\n  {\n    hackDifficulty: {\n      max: 55,\n      min: 45,\n    },\n    hostname: \"rothman-uni\",\n    literature: [\n      LiteratureNames.SecretSocieties,\n      LiteratureNames.TheFailedFrontier,\n      LiteratureNames.TensionsInTechRace,\n    ],\n    maxRamExponent: {\n      max: 7,\n      min: 4,\n    },\n    moneyAvailable: {\n      max: 250000000,\n      min: 175000000,\n    },\n    networkLayer: 5,\n    numOpenPortsRequired: 3,\n    organizationName: LocationName.Sector12RothmanUniversity,\n    requiredHackingSkill: {\n      max: 430,\n      min: 370,\n    },\n    serverGrowth: {\n      max: 45,\n      min: 35,\n    },\n    specialName: LocationName.Sector12RothmanUniversity,\n  },\n  {\n    hackDifficulty: {\n      max: 85,\n      min: 65,\n    },\n    hostname: \"zb-institute\",\n    maxRamExponent: {\n      max: 7,\n      min: 4,\n    },\n    moneyAvailable: {\n      max: 1100000000,\n      min: 800000000,\n    },\n    networkLayer: 5,\n    numOpenPortsRequired: 5,\n    organizationName: LocationName.VolhavenZBInstituteOfTechnology,\n    requiredHackingSkill: {\n      max: 775,\n      min: 725,\n    },\n    serverGrowth: {\n      max: 85,\n      min: 75,\n    },\n    specialName: LocationName.VolhavenZBInstituteOfTechnology,\n  },\n  {\n    hackDifficulty: {\n      max: 65,\n      min: 45,\n    },\n    hostname: \"summit-uni\",\n    literature: [LiteratureNames.SecretSocieties, LiteratureNames.TheFailedFrontier, LiteratureNames.SyntheticMuscles],\n    maxRamExponent: {\n      max: 6,\n      min: 4,\n    },\n    moneyAvailable: {\n      max: 350000000,\n      min: 200000000,\n    },\n    networkLayer: 5,\n    numOpenPortsRequired: 3,\n    organizationName: LocationName.AevumSummitUniversity,\n    requiredHackingSkill: {\n      max: 475,\n      min: 425,\n    },\n    serverGrowth: {\n      max: 60,\n      min: 40,\n    },\n    specialName: LocationName.AevumSummitUniversity,\n  },\n  {\n    hackDifficulty: {\n      max: 80,\n      min: 60,\n    },\n    hostname: \"syscore\",\n    moneyAvailable: {\n      max: 600000000,\n      min: 400000000,\n    },\n    networkLayer: 5,\n    numOpenPortsRequired: 4,\n    organizationName: LocationName.VolhavenSysCoreSecurities,\n    requiredHackingSkill: {\n      max: 650,\n      min: 550,\n    },\n    serverGrowth: {\n      max: 70,\n      min: 60,\n    },\n    specialName: LocationName.VolhavenSysCoreSecurities,\n  },\n  {\n    hackDifficulty: {\n      max: 70,\n      min: 60,\n    },\n    hostname: \"catalyst\",\n    literature: [LiteratureNames.TensionsInTechRace],\n    maxRamExponent: {\n      max: 7,\n      min: 4,\n    },\n    moneyAvailable: {\n      max: 550000000,\n      min: 300000000,\n    },\n    networkLayer: 5,\n    numOpenPortsRequired: 3,\n    organizationName: \"Catalyst Ventures\",\n    requiredHackingSkill: {\n      max: 450,\n      min: 400,\n    },\n    serverGrowth: {\n      max: 55,\n      min: 25,\n    },\n  },\n  {\n    hackDifficulty: {\n      max: 45,\n      min: 35,\n    },\n    hostname: \"the-hub\",\n    maxRamExponent: {\n      max: 6,\n      min: 3,\n    },\n    moneyAvailable: {\n      max: 200000000,\n      min: 150000000,\n    },\n    networkLayer: 4,\n    numOpenPortsRequired: 2,\n    organizationName: \"The Hub\",\n    requiredHackingSkill: {\n      max: 325,\n      min: 275,\n    },\n    serverGrowth: {\n      max: 55,\n      min: 45,\n    },\n  },\n  {\n    hackDifficulty: {\n      max: 65,\n      min: 55,\n    },\n    hostname: \"comptek\",\n    literature: [LiteratureNames.ManAndMachine],\n    moneyAvailable: {\n      max: 250000000,\n      min: 220000000,\n    },\n    networkLayer: 4,\n    numOpenPortsRequired: 3,\n    organizationName: LocationName.VolhavenCompuTek,\n    requiredHackingSkill: {\n      max: 400,\n      min: 300,\n    },\n    serverGrowth: {\n      max: 65,\n      min: 45,\n    },\n    specialName: LocationName.VolhavenCompuTek,\n  },\n  {\n    hackDifficulty: {\n      max: 80,\n      min: 60,\n    },\n    hostname: \"netlink\",\n    literature: [LiteratureNames.SimulatedReality],\n    maxRamExponent: {\n      max: 7,\n      min: 4,\n    },\n    moneyAvailable: 275000000,\n    networkLayer: 4,\n    numOpenPortsRequired: 3,\n    organizationName: LocationName.AevumNetLinkTechnologies,\n    requiredHackingSkill: {\n      max: 425,\n      min: 375,\n    },\n    serverGrowth: {\n      max: 75,\n      min: 45,\n    },\n    specialName: LocationName.AevumNetLinkTechnologies,\n  },\n  {\n    hackDifficulty: {\n      max: 65,\n      min: 35,\n    },\n    hostname: \"johnson-ortho\",\n    moneyAvailable: {\n      max: 85000000,\n      min: 70000000,\n    },\n    networkLayer: 4,\n    numOpenPortsRequired: 2,\n    organizationName: \"Johnson Orthopedics\",\n    requiredHackingSkill: {\n      max: 300,\n      min: 250,\n    },\n    serverGrowth: {\n      max: 65,\n      min: 35,\n    },\n  },\n  {\n    hackDifficulty: 1,\n    hostname: \"n00dles\",\n    literature: [],\n    maxRamExponent: 2,\n    moneyAvailable: 70000,\n    networkLayer: 1,\n    numOpenPortsRequired: 0,\n    organizationName: LocationName.NewTokyoNoodleBar,\n    requiredHackingSkill: 1,\n    serverGrowth: 3000,\n    specialName: LocationName.NewTokyoNoodleBar,\n  },\n  {\n    hackDifficulty: 10,\n    hostname: \"foodnstuff\",\n    literature: [LiteratureNames.Sector12Crime],\n    maxRamExponent: 4,\n    moneyAvailable: 2000000,\n    networkLayer: 1,\n    numOpenPortsRequired: 0,\n    organizationName: LocationName.Sector12FoodNStuff,\n    requiredHackingSkill: 1,\n    serverGrowth: 5,\n    specialName: LocationName.Sector12FoodNStuff,\n  },\n  {\n    hackDifficulty: 10,\n    hostname: \"sigma-cosmetics\",\n    maxRamExponent: 4,\n    moneyAvailable: 2300000,\n    networkLayer: 1,\n    numOpenPortsRequired: 0,\n    organizationName: \"Sigma Cosmetics\",\n    requiredHackingSkill: 5,\n    serverGrowth: 10,\n  },\n  {\n    hackDifficulty: 15,\n    hostname: \"joesguns\",\n    maxRamExponent: 4,\n    moneyAvailable: 2500000,\n    networkLayer: 1,\n    numOpenPortsRequired: 0,\n    organizationName: LocationName.Sector12JoesGuns,\n    requiredHackingSkill: 10,\n    serverGrowth: 20,\n    specialName: LocationName.Sector12JoesGuns,\n  },\n  {\n    hackDifficulty: 25,\n    hostname: \"zer0\",\n    maxRamExponent: 5,\n    moneyAvailable: 7500000,\n    networkLayer: 2,\n    numOpenPortsRequired: 1,\n    organizationName: \"ZER0 Nightclub\",\n    requiredHackingSkill: 75,\n    serverGrowth: 40,\n  },\n  {\n    hackDifficulty: 20,\n    hostname: \"nectar-net\",\n    maxRamExponent: 4,\n    moneyAvailable: 2750000,\n    networkLayer: 2,\n    numOpenPortsRequired: 0,\n    organizationName: \"Nectar Nightclub Network\",\n    requiredHackingSkill: 20,\n    serverGrowth: 25,\n  },\n  {\n    hackDifficulty: 25,\n    hostname: \"neo-net\",\n    literature: [LiteratureNames.TheHiddenWorld],\n    maxRamExponent: 5,\n    moneyAvailable: 5000000,\n    networkLayer: 3,\n    numOpenPortsRequired: 1,\n    organizationName: \"Neo Nightclub Network\",\n    requiredHackingSkill: 50,\n    serverGrowth: 25,\n  },\n  {\n    hackDifficulty: 30,\n    hostname: \"silver-helix\",\n    literature: [LiteratureNames.NewTriads],\n    maxRamExponent: 6,\n    moneyAvailable: 45000000,\n    networkLayer: 3,\n    numOpenPortsRequired: 2,\n    organizationName: \"Silver Helix\",\n    requiredHackingSkill: 150,\n    serverGrowth: 30,\n  },\n  {\n    hackDifficulty: 15,\n    hostname: \"hong-fang-tea\",\n    literature: [LiteratureNames.BrighterThanTheSun],\n    maxRamExponent: 4,\n    moneyAvailable: 3000000,\n    networkLayer: 1,\n    numOpenPortsRequired: 0,\n    organizationName: \"HongFang Teahouse\",\n    requiredHackingSkill: 30,\n    serverGrowth: 20,\n  },\n  {\n    hackDifficulty: 15,\n    hostname: \"harakiri-sushi\",\n    maxRamExponent: 4,\n    moneyAvailable: 4000000,\n    networkLayer: 1,\n    numOpenPortsRequired: 0,\n    organizationName: \"HaraKiri Sushi Bar Network\",\n    requiredHackingSkill: 40,\n    serverGrowth: 40,\n  },\n  {\n    hackDifficulty: 20,\n    hostname: \"phantasy\",\n    maxRamExponent: 5,\n    moneyAvailable: 24000000,\n    networkLayer: 3,\n    numOpenPortsRequired: 2,\n    organizationName: \"Phantasy Club\",\n    requiredHackingSkill: 100,\n    serverGrowth: 35,\n  },\n  {\n    hackDifficulty: 15,\n    hostname: \"max-hardware\",\n    maxRamExponent: 5,\n    moneyAvailable: 10000000,\n    networkLayer: 2,\n    numOpenPortsRequired: 1,\n    organizationName: \"Max Hardware Store\",\n    requiredHackingSkill: 80,\n    serverGrowth: 30,\n  },\n  {\n    hackDifficulty: {\n      max: 35,\n      min: 25,\n    },\n    hostname: \"omega-net\",\n    literature: [LiteratureNames.TheNewGod],\n    maxRamExponent: 5,\n    moneyAvailable: {\n      max: 70000000,\n      min: 60000000,\n    },\n    networkLayer: 3,\n    numOpenPortsRequired: 2,\n    organizationName: LocationName.IshimaOmegaSoftware,\n    requiredHackingSkill: {\n      max: 220,\n      min: 180,\n    },\n    serverGrowth: {\n      max: 40,\n      min: 30,\n    },\n    specialName: LocationName.IshimaOmegaSoftware,\n  },\n  {\n    hackDifficulty: {\n      max: 45,\n      min: 35,\n    },\n    hostname: \"crush-fitness\",\n    moneyAvailable: {\n      max: 60000000,\n      min: 40000000,\n    },\n    networkLayer: 4,\n    numOpenPortsRequired: 2,\n    organizationName: \"Crush Fitness\",\n    requiredHackingSkill: {\n      max: 275,\n      min: 225,\n    },\n    serverGrowth: {\n      max: 33,\n      min: 27,\n    },\n    specialName: LocationName.AevumCrushFitnessGym,\n  },\n  {\n    hackDifficulty: 30,\n    hostname: \"iron-gym\",\n    maxRamExponent: 5,\n    moneyAvailable: 20000000,\n    networkLayer: 1,\n    numOpenPortsRequired: 1,\n    organizationName: \"Iron Gym Network\",\n    requiredHackingSkill: 100,\n    serverGrowth: 20,\n    specialName: LocationName.Sector12IronGym,\n  },\n  {\n    hackDifficulty: {\n      max: 55,\n      min: 45,\n    },\n    hostname: \"millenium-fitness\",\n    maxRamExponent: {\n      max: 8,\n      min: 4,\n    },\n    moneyAvailable: 250000000,\n    networkLayer: 6,\n    numOpenPortsRequired: 3,\n    organizationName: \"Millenium Fitness Network\",\n    requiredHackingSkill: {\n      max: 525,\n      min: 475,\n    },\n    serverGrowth: {\n      max: 45,\n      min: 25,\n    },\n    specialName: LocationName.VolhavenMilleniumFitnessGym,\n  },\n  {\n    hackDifficulty: {\n      max: 65,\n      min: 55,\n    },\n    hostname: \"powerhouse-fitness\",\n    maxRamExponent: {\n      max: 6,\n      min: 4,\n    },\n    moneyAvailable: 900000000,\n    networkLayer: 14,\n    numOpenPortsRequired: 5,\n    organizationName: \"Powerhouse Fitness\",\n    requiredHackingSkill: {\n      max: 1100,\n      min: 950,\n    },\n    serverGrowth: {\n      max: 60,\n      min: 50,\n    },\n    specialName: LocationName.Sector12PowerhouseGym,\n  },\n  {\n    hackDifficulty: {\n      max: 60,\n      min: 40,\n    },\n    hostname: \"snap-fitness\",\n    moneyAvailable: 450000000,\n    networkLayer: 7,\n    numOpenPortsRequired: 4,\n    organizationName: \"Snap Fitness\",\n    requiredHackingSkill: {\n      max: 800,\n      min: 675,\n    },\n    serverGrowth: {\n      max: 60,\n      min: 40,\n    },\n    specialName: LocationName.AevumSnapFitnessGym,\n  },\n  {\n    hackDifficulty: 0,\n    hostname: \"run4theh111z\",\n    literature: [LiteratureNames.SimulatedReality, LiteratureNames.TheNewGod],\n    maxRamExponent: {\n      max: 9,\n      min: 5,\n    },\n    moneyAvailable: 0,\n    networkLayer: 11,\n    numOpenPortsRequired: 4,\n    organizationName: \"The Runners\",\n    requiredHackingSkill: {\n      max: 550,\n      min: 505,\n    },\n    serverGrowth: 0,\n    specialName: \"BitRunners Server\",\n  },\n  {\n    hackDifficulty: 0,\n    hostname: \"I.I.I.I\",\n    literature: [LiteratureNames.DemocracyIsDead],\n    maxRamExponent: {\n      max: 8,\n      min: 4,\n    },\n    moneyAvailable: 0,\n    networkLayer: 5,\n    numOpenPortsRequired: 3,\n    organizationName: \"I.I.I.I\",\n    requiredHackingSkill: {\n      max: 365,\n      min: 340,\n    },\n    serverGrowth: 0,\n    specialName: \"The Black Hand Server\",\n  },\n  {\n    hackDifficulty: 0,\n    hostname: \"avmnite-02h\",\n    literature: [LiteratureNames.DemocracyIsDead],\n    maxRamExponent: {\n      max: 7,\n      min: 4,\n    },\n    moneyAvailable: 0,\n    networkLayer: 4,\n    numOpenPortsRequired: 2,\n    organizationName: \"NiteSec\",\n    requiredHackingSkill: {\n      max: 220,\n      min: 202,\n    },\n    serverGrowth: 0,\n    specialName: \"NiteSec Server\",\n  },\n  {\n    hackDifficulty: 0,\n    hostname: \".\",\n    maxRamExponent: 4,\n    moneyAvailable: 0,\n    networkLayer: 13,\n    numOpenPortsRequired: 4,\n    organizationName: \".\",\n    requiredHackingSkill: {\n      max: 550,\n      min: 505,\n    },\n    serverGrowth: 0,\n    specialName: \"The Dark Army Server\",\n  },\n  {\n    hackDifficulty: 0,\n    hostname: \"CSEC\",\n    literature: [LiteratureNames.DemocracyIsDead],\n    maxRamExponent: 3,\n    moneyAvailable: 0,\n    networkLayer: 2,\n    numOpenPortsRequired: 1,\n    organizationName: \"CyberSec\",\n    requiredHackingSkill: {\n      max: 60,\n      min: 51,\n    },\n    serverGrowth: 0,\n    specialName: \"CyberSec Server\",\n  },\n  {\n    hackDifficulty: 0,\n    hostname: \"The-Cave\",\n    literature: [LiteratureNames.AlphaOmega],\n    moneyAvailable: 0,\n    networkLayer: 15,\n    numOpenPortsRequired: 5,\n    organizationName: \"Helios\",\n    requiredHackingSkill: 925,\n    serverGrowth: 0,\n    specialName: \"Daedalus Server\",\n  },\n  {\n    hackDifficulty: 0,\n    hostname: \"w0r1d_d43m0n\",\n    moneyAvailable: 0,\n    numOpenPortsRequired: 5,\n    organizationName: \"w0r1d_d43m0n\",\n    requiredHackingSkill: 3000,\n    serverGrowth: 0,\n    specialName: \"w0r1d_d43m0n\",\n  },\n];\n","import { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\n\n// Array of all valid states\nconst AllCorporationStates: string[] = [\"START\", \"PURCHASE\", \"PRODUCTION\", \"SALE\", \"EXPORT\"];\n\nexport class CorporationState {\n  // Number representing what state the Corporation is in. The number\n  // is an index for the array that holds all Corporation States\n  state = 0;\n\n  // Get the name of the current state\n  // NOTE: This does NOT return the number stored in the 'state' property,\n  // which is just an index for the array of all possible Corporation States.\n  getState(): string {\n    return AllCorporationStates[this.state];\n  }\n\n  // Transition to the next state\n  nextState(): void {\n    if (this.state < 0 || this.state >= AllCorporationStates.length) {\n      this.state = 0;\n    }\n\n    ++this.state;\n    if (this.state >= AllCorporationStates.length) {\n      this.state = 0;\n    }\n  }\n\n  // Serialize the current object to a JSON save state.\n  toJSON(): any {\n    return Generic_toJSON(\"CorporationState\", this);\n  }\n\n  // Initiatizes a CorporationState object from a JSON save state.\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): CorporationState {\n    return Generic_fromJSON(CorporationState, value.data);\n  }\n}\n\nReviver.constructors.CorporationState = CorporationState;\n","import { Literature } from \"./Literature\";\nimport { LiteratureNames } from \"./data/LiteratureNames\";\nimport { IMap } from \"../types\";\n\nexport const Literatures: IMap<Literature> = {};\n\n(function () {\n  let title, fn, txt;\n  title = \"The Beginner's Guide to Hacking\";\n  fn = LiteratureNames.HackersStartingHandbook;\n  txt =\n    \"Some resources:<br><br>\" +\n    \"<a class='a-link-button' href='https://bitburner.readthedocs.io/en/latest/netscript/netscriptlearntoprogram.html' target='_blank' style='margin:4px'>Learn to Program</a><br><br>\" +\n    \"<a class='a-link-button' href='https://bitburner.readthedocs.io/en/latest/netscript/netscriptjs.html' target='_blank' style='margin:4px'>For Experienced JavaScript Developers: NetscriptJS</a><br><br>\" +\n    \"<a class='a-link-button' href='https://bitburner.readthedocs.io/en/latest/netscript.html' target='_blank' style='margin:4px'>Netscript Documentation</a><br><br>\" +\n    \"When starting out, hacking is the most profitable way to earn money and progress. This \" +\n    \"is a brief collection of tips/pointers on how to make the most out of your hacking scripts.<br><br>\" +\n    \"-hack() and grow() both work by percentages. hack() steals a certain percentage of the \" +\n    \"money on a server, and grow() increases the amount of money on a server by some percentage (multiplicatively)<br><br>\" +\n    \"-Because hack() and grow() work by percentages, they are more effective if the target server has a high amount of money. \" +\n    \"Therefore, you should try to increase the amount of money on a server (using grow()) to a certain amount before hacking it. Two \" +\n    \"import Netscript functions for this are getServerMoneyAvailable() and getServerMaxMoney()<br><br>\" +\n    \"-Keep security level low. Security level affects everything when hacking. Two important Netscript functions \" +\n    \"for this are getServerSecurityLevel() and getServerMinSecurityLevel()<br><br>\" +\n    \"-Purchase additional servers by visiting 'Alpha Enterprises' in the city. They are relatively cheap \" +\n    \"and give you valuable RAM to run more scripts early in the game<br><br>\" +\n    \"-Prioritize upgrading the RAM on your home computer. This can also be done at 'Alpha Enterprises'<br><br>\" +\n    \"-Many low level servers have free RAM. You can use this RAM to run your scripts. Use the scp Terminal or \" +\n    \"Netscript command to copy your scripts onto these servers and then run them.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"The Complete Handbook for Creating a Successful Corporation\";\n  fn = LiteratureNames.CorporationManagementHandbook;\n  txt =\n    \"<u>Getting Started with Corporations</u><br>\" +\n    \"To get started, visit the City Hall in Sector-12 in order to create a Corporation. This requires \" +\n    \"$150b of your own money, but this $150b will get put into your Corporation's funds. \" +\n    \"After creating your Corporation, you will see it listed as one of the locations in the city. Click on \" +\n    \"your Corporation in order to manage it.<br><br>\" +\n    \"Your Corporation can have many different divisions, each in a different Industry. There are many different \" +\n    \"types of Industries, each with different properties. To create your first division, click the \" +\n    \"'Expand into new Industry' button at the top of the management UI. The Agriculture \" +\n    \"and Software industries are recommended for your first division.<br><br>\" +\n    \"The first thing you'll need to do is hire some employees. Employees can be assigned to five different positions. \" +\n    \"Each position has a different effect on various aspects of your Corporation. It is recommended to have at least \" +\n    \"one employee at each position.<br><br>\" +\n    \"Each industry uses some combination of Materials in order to produce other Materials and/or create Products. \" +\n    \"Specific information about this is displayed in each of your divisions' UI.<br><br>\" +\n    \"Products are special, industry-specific objects. They are different than Materials because you \" +\n    \"must manually choose to develop them, and you can choose to develop any number of Products. Developing \" +\n    \"a Product takes time, but a Product typically generates significantly more revenue than any Material. \" +\n    \"Not all industries allow you to create Products. To create a Product, look for a button \" +\n    \"in the top-left panel of the division UI (e.g. For the Software Industry, the button says 'Develop Software').<br><br>\" +\n    \"To get your supply chain system started, \" +\n    \"purchase the Materials that your industry needs to produce other Materials/Products. This can be done \" +\n    \"by clicking the 'Buy' button next to the corresponding Material(s). After you have the required Materials, \" +\n    \"you will immediately start production. The amount of Materials/Products you produce is based on a variety of factors, \" +\n    \"one of which is your employees and their productivity.<br><br>\" +\n    \"Once you start producing Materials/Products, you can sell them in order to start earning revenue. This can be done \" +\n    \"by clicking the 'Sell' button next to the corresponding Material or Product. The amount of Material/Product you sell is dependent \" +\n    \"on a wide variety of different factors.<br><br>\" +\n    \"These are the basics of getting your Corporation up and running! Now, you can start purchasing upgrades to improve \" +\n    \"your bottom line. If you need money, consider looking for seed investors, who will give you money in exchange for stock shares. \" +\n    \"Otherwise, once you feel you are ready, take your Corporation public! Once your Corporation goes public, you can no longer \" +\n    \"find investors. Instead, your Corporation will be publicly traded and its stock price will change based on how well \" +\n    \"it's performing financially. You can then sell your stock shares in order to make money.<br><br>\" +\n    \"<u>Tips/Pointers</u><br>\" +\n    \"-The 'Smart Supply' upgrade is extremely useful. Consider purchasing it as soon as possible.<br><br>\" +\n    \"-Purchasing Hardware, Robots, AI Cores, and Real Estate can potentially increase your production. \" +\n    \"The effects of these depend on what industry you are in.<br><br>\" +\n    \"-In order to optimize your production, you will need a good balance of Operators, Managers, and Engineers<br><br>\" +\n    \"-Different employees excel in different jobs. For example, the highly intelligent employees will probably do best \" +\n    \"if they are assigned to do Engineering work or Research & Development.<br><br>\" +\n    \"-If your employees have low morale, energy, or happiness, their production will greatly suffer.<br><br>\" +\n    \"-Tech is important, but don't neglect sales! Having several Businessmen can boost your sales and your bottom line.<br><br>\" +\n    \"-Don't forget to advertise your company. You won't have any business if nobody knows you.<br><br>\" +\n    \"-Having company awareness is great, but what's really important is your company's popularity. Try to keep \" +\n    \"your popularity as high as possible to see the biggest benefit for your sales<br><br>\" +\n    \"-Remember, you need to spend money to make money!<br><br>\" +\n    \"-Corporations do not reset when installing Augmentations, but they do reset when destroying a BitNode\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"A Brief History of Synthoids\";\n  fn = LiteratureNames.HistoryOfSynthoids;\n  txt =\n    \"Synthetic androids, or Synthoids for short, are genetically engineered robots and, short of Augmentations, \" +\n    \"are composed entirely of organic substances. For this reason, Synthoids are virtually identical to \" +\n    \"humans in form, composition, and appearance.<br><br>\" +\n    \"Synthoids were first designed and manufactured by OmniTek Incorporated sometime around the middle of the century. \" +\n    \"Their original purpose was to be used for manual labor and as emergency responders for disasters. As such, they \" +\n    \"were initially programmed only for their specific tasks. Each iteration that followed improved upon the \" +\n    \"intelligence and capabilities of the Synthoids. By the 6th iteration, called MK-VI, the Synthoids were \" +\n    \"so smart and capable enough of making their own decisions that many argued OmniTek had created the first \" +\n    \"sentient AI. These MK-VI Synthoids were produced in mass quantities (estimates up to 50 billion) with the hopes of increasing society's \" +\n    \"productivity and bolstering the global economy. Stemming from humanity's desire for technological advancement, optimism \" +\n    \"and excitement about the future had never been higher.<br><br>\" +\n    \"All of that excitement and optimism quickly turned to fear, panic, and dread in 2070, when a terrorist group \" +\n    \"called Ascendis Totalis hacked into OmniTek and uploaded a rogue AI into severeal of their Synthoid manufacturing facilities. \" +\n    \"This hack went undetected and for months OmniTek unknowingly churned out legions of Synthoids embedded with this \" +\n    \"rogue AI. Then, on December 24th, 2070, Omnica activated dormant protocols in the rogue AI, causing all of the \" +\n    \"infected Synthoids to immediately launch a military campaign to seek and destroy all of humanity.<br><br>\" +\n    \"What ensued was the deadlist conflict in human history. This crisis, now commonly known as the Synthoid Uprising, \" +\n    \"resulted in almost ten billion deaths over the course of a year. Despite the nations of the world banding together \" +\n    \"to combat the threat, the MK-VI Synthoids were simply stronger, faster, more intelligent, and more adaptable than humans, \" +\n    \"outsmarting them at every turn.<br><br>\" +\n    \"It wasn't until the sacrifice of an elite international military taskforce, called the Bladeburners, that humanity \" +\n    \"was finally able to defeat the Synthoids. The Bladeburners' final act was a suicide bombing mission that \" +\n    \"destroyed a large portion of the MK-VI Synthoids, including many of its leaders. In the following \" +\n    \"weeks militaries from around the world were able to round up and shut down the remaining rogue MK-VI Synthoids, ending \" +\n    \"the Synthoid Uprising.<br><br>\" +\n    \"In the aftermath of the bloodshed, the Synthoid Accords were drawn up. These Accords banned OmniTek Incorporated \" +\n    \"from manufacturing any Synthoids beyond the MK-III series. They also banned any other corporation \" +\n    \"from constructing androids with advanced, near-sentient AI. MK-VI Synthoids that did not have the rogue Ascendis Totalis \" +\n    \"AI were allowed to continue their existence, but they were stripped of all rights and protections as they \" +\n    \"were not considered humans. They were also banned from doing anything that may pose a global security threat, such \" +\n    \"as working for any military/defense organization or conducting any bioengineering, computing, or robotics related research.<br><br>\" +\n    \"Unfortunately, many believe that not all of the rogue MK-VI Synthoids from the Uprising were found and destroyed, \" +\n    \"and that many of them are blending in as normal humans in society today. In response, many nations have created \" +\n    \"Bladeburner divisions, special military branches that are tasked with investigating and dealing with any Synthoid threads.<br><br>\" +\n    \"To this day, tensions still exist between the remaining Synthoids and humans as a result of the Uprising.<br><br>\" +\n    \"Nobody knows what happened to the terrorist group Ascendis Totalis.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"A Green Tomorrow\";\n  fn = LiteratureNames.AGreenTomorrow;\n  txt =\n    \"Starting a few decades ago, there was a massive global movement towards the generation of renewable energy in an effort to \" +\n    \"combat global warming and climate change. The shift towards renewable energy was a big success, or so it seemed. In 2045 \" +\n    \"a staggering 80% of the world's energy came from non-renewable fossil fuels. Now, about three decades later, that \" +\n    \"number is down to only 15%. Most of the world's energy now comes from nuclear power and renewable sources such as \" +\n    \"solar and geothermal energy. Unfortunately, these efforts were not the huge success that they seem to be.<br><br>\" +\n    \"Since 2045 primary energy use has soared almost tenfold. This was mainly due to growing urban populations and \" +\n    \"the rise of increasingly advanced (and power-hungry) technology that has become ubiquitous in our lives. So, \" +\n    \"despite the fact that the percentage of our energy that comes from fossil fuels has drastically decreased, \" +\n    \"the total amount of energy we are producing from fossil fuels has actually increased.<br><br>\" +\n    \"The grim effects of our species' irresponsible use of energy and neglect of our mother world have become increasingly apparent. \" +\n    \"Last year a temperature of 190F was recorded in the Death Valley desert, which is over 50% higher than the highest \" +\n    \"recorded temperature at the beginning of the century. In the last two decades numerous major cities such as Manhattan, Boston, and \" +\n    \"Los Angeles have been partially or fully submerged by rising sea levels. In the present day, over 75% of the world's agriculture is \" +\n    \"done in climate-controlled vertical farms, as most traditional farmland has become unusable due to severe climate conditions.<br><br>\" +\n    \"Despite all of this, the greedy and corrupt corporations that rule the world have done nothing to address these problems that \" +\n    \"threaten our species. And so it's up to us, the common people. Each and every one of us can make a difference by doing what \" +\n    \"these corporations won't: taking responsibility. If we don't, pretty soon there won't be an Earth left to save. We are \" +\n    \"the last hope for a green tomorrow.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"Alpha and Omega\";\n  fn = LiteratureNames.AlphaOmega;\n  txt =\n    \"Then we saw a new Heaven and a new Earth, for our first Heaven and Earth had gone away, and our sea was no more. \" +\n    \"And we saw a new holy city, new Aeria, coming down out of this new Heaven, prepared as a bride adorned for her husband. \" +\n    \"And we heard a loud voice saying, 'Behold, the new dwelling place of the Gods. We will dwell with them, and they \" +\n    \"will be our people, and we will be with them as their Gods. We will wipe away every tear from their eyes, and death \" +\n    \"shall be no more, neither shall there be mourning, nor crying, nor pain anymore, for the former things \" +\n    \"have passed away.'<br><br>\" +\n    \"And once we were seated on the throne we said 'Behold, I am making all things new.' \" +\n    \"Also we said, 'Write this down, for these words are trustworthy and true.' And we said to you, \" +\n    \"'It is done! I am the Alpha and the Omega, the beginning and the end. To the thirsty I will give from the spring \" +\n    \"of the water of life without payment. The one who conquers will have this heritage, and we will be his God and \" +\n    \"he will be our son. But as for the cowardly, the faithless, the detestable, as for murderers, \" +\n    \"the sexually immoral, sorcerers, idolaters, and all liars, their portion will be in the lake that \" +\n    \"burns with fire and sulfur, for it is the second true death.'\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"Are We Living in a Computer Simulation?\";\n  fn = LiteratureNames.SimulatedReality;\n  txt =\n    \"The idea that we are living in a virtual world is not new. It's a trope that has \" +\n    \"been explored constantly in literature and pop culture. However, it is also a legitimate \" +\n    \"scientific hypothesis that many notable physicists and philosophers have debated for years.<br><br>\" +\n    \"Proponents for this simulated reality theory often point to how advanced our technology has become, \" +\n    \"as well as the incredibly fast pace at which it has advanced over the past decades. The amount of computing \" +\n    \"power available to us has increased over 100-fold since 2060 due to the development of nanoprocessors and \" +\n    \"quantum computers. Artifical Intelligence has advanced to the point where our entire lives are controlled \" +\n    \"by robots and machines that handle our day-to-day activities such as autonomous transportation and scheduling. \" +\n    \"If we consider the pace at which this technology has advanced and assume that these developments continue, it's \" +\n    \"reasonable to assume that at some point in the future our technology would be advanced enough that \" +\n    \"we could create simulations that are indistinguishable from reality. However, if continued technological advancement \" +\n    \"is a reasonable outcome, then it is very likely that such a scenario has already happened. <br><br>\" +\n    \"Statistically speaking, somewhere out there in the infinite universe there is an advanced, intelligent species \" +\n    \"that already has such technology. Who's to say that they haven't already created such a virtual reality: our own?\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"Beyond Man\";\n  fn = LiteratureNames.BeyondMan;\n  txt =\n    \"Humanity entered a 'transhuman' era a long time ago. And despite the protests and criticisms of many who cried out against \" +\n    \"human augmentation at the time, the transhuman movement continued and prospered. Proponents of the movement ignored the critics, \" +\n    \"arguing that it was in our inherent nature to better ourselves. To improve. To be more than we were. They claimed that \" +\n    \"not doing so would be to go against every living organism's biological purpose: evolution and survival of the fittest.<br><br>\" +\n    \"And here we are today, with technology that is advanced enough to augment humans to a state that \" +\n    \"can only be described as posthuman. But what do we have to show for it when this augmentation \" +\n    \"technology is only available to the so-called 'elite'? Are we really better off than before when only 5% of the \" +\n    \"world's population has access to this technology? When the powerful corporations and organizations of the world \" +\n    \"keep it all to themselves, have we really evolved?<br><br>\" +\n    \"Augmentation technology has only further increased the divide between the rich and the poor, between the powerful and \" +\n    \"the oppressed. We have not become 'more than human'. We have not evolved from nature's original design. We are still the greedy, \" +\n    \"corrupted, and evil men that we always were.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"Brighter than the Sun\";\n  fn = LiteratureNames.BrighterThanTheSun;\n  txt =\n    \"When people think about the corporations that dominate the East, they typically think of KuaiGong International, which \" +\n    \"holds a complete monopoly for manufacturing and commerce in Asia, or Global Pharmaceuticals, the world's largest \" +\n    \"drug company, or OmniTek Incorporated, the global leader in intelligent and autonomous robots. But there's one company \" +\n    \"that has seen a rapid rise in the last year and is poised to dominate not only the East, but the entire world: TaiYang Digital.<br><br>\" +\n    \"TaiYang Digital is a Chinese internet-technology corporation that provides services such as \" +\n    \"online advertising, search engines, gaming, media, entertainment, and cloud computing/storage. Its name TaiYang comes from the Chinese word \" +\n    \"for 'sun'. In Chinese culture, the sun is a 'yang' symbol \" +\n    \"associated with life, heat, masculinity, and heaven.<br><br>\" +\n    \"The company was founded \" +\n    \"less than 5 years ago and is already the third highest valued company in all of Asia. In 2076 it generated a total revenue of \" +\n    \"over 10 trillion yuan. It's services are used daily by over a billion people worldwide.<br><br>\" +\n    \"TaiYang Digital's meteoric rise is extremely surprising in modern society. This sort of growth is \" +\n    \"something you'd commonly see in the first half of the century, especially for tech companies. However in \" +\n    \"the last two decades the number of corporations has significantly declined as the largest entities \" +\n    \"quickly took over the economy. Corporations such as ECorp, MegaCorp, and KuaiGong have established \" +\n    \"such strong monopolies in their market sectors that they have effectively killed off all \" +\n    \"of the smaller and new corporations that have tried to start up over the years. This is what makes \" +\n    \"the rise of TaiYang Digital so impressive. And if TaiYang continues down this path, then they have \" +\n    \"a bright future ahead of them.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"Democracy is Dead: The Fall of an Empire\";\n  fn = LiteratureNames.DemocracyIsDead;\n  txt =\n    \"They rose from the shadows in the street.<br>From the places where the oppressed meet.<br>\" +\n    \"Their cries echoed loudly through the air.<br>As they once did in Tiananmen Square.<br>\" +\n    \"Loudness in the silence, Darkness in the light.<br>They came forth with power and might.<br>\" +\n    \"Once the beacon of democracy, America was first.<br>Its pillars of society destroyed and dispersed.<br>\" +\n    \"Soon the cries rose everywhere, with revolt and riot.<br>Until one day, finally, all was quiet.<br>\" +\n    \"From the ashes rose a new order, corporatocracy was its name.<br>\" +\n    \"Rome, Mongol, Byzantine, all of history is just the same.<br>\" +\n    \"For man will never change in a fundamental way.<br>\" +\n    \"And now democracy is dead, in the USA.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"Figures Show Rising Crime Rates in Sector-12\";\n  fn = LiteratureNames.Sector12Crime;\n  txt =\n    \"A recent study by analytics company Wilson Inc. shows a significant rise \" +\n    \"in criminal activity in Sector-12. Perhaps the most alarming part of the statistic \" +\n    \"is that most of the rise is in violent crime such as homicide and assault. According \" +\n    \"to the study, the city saw a total of 21,406 reported homicides in 2076, which is over \" +\n    \"a 20% increase compared to 2075.<br><br>\" +\n    \"CIA director David Glarow says its too early to know \" +\n    \"whether these figures indicate the beginning of a sustained increase in crime rates, or whether \" +\n    \"the year was just an unfortunate outlier. He states that many intelligence and law enforcement \" +\n    \"agents have noticed an increase in organized crime activites, and believes that these figures may \" +\n    \"be the result of an uprising from criminal organizations such as The Syndicate or the Slum Snakes.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"Man and the Machine\";\n  fn = LiteratureNames.ManAndMachine;\n  txt =\n    \"In 2005 Ray Kurzweil popularized his theory of the Singularity. He predicted that the rate \" +\n    \"of technological advancement would continue to accelerate faster and faster until one day \" +\n    \"machines would be become infinitely more intelligent than humans. This point, called the \" +\n    \"Singularity, would result in a drastic transformation of the world as we know it. He predicted \" +\n    \"that the Singularity would arrive by 2045. \" +\n    \"And yet here we are, more than three decades later, where most would agree that we have not \" +\n    \"yet reached a point where computers and machines are vastly more intelligent than we are. So what gives?<br><br>\" +\n    \"The answer is that we have reached the Singularity, just not in the way we expected. The artifical superintelligence \" +\n    \"that was predicted by Kurzweil and others exists in the world today - in the form of Augmentations. \" +\n    \"Yes, those Augmentations that the rich and powerful keep to themselves enable humans \" +\n    \"to become superintelligent beings. The Singularity did not lead to a world where \" +\n    \"our machines are infinitely more intelligent than us, it led to a world \" +\n    \"where man and machine can merge to become something greater. Most of the world just doesn't \" +\n    \"know it yet.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"Secret Societies\";\n  fn = LiteratureNames.SecretSocieties;\n  txt =\n    \"The idea of secret societies has long intrigued the general public by inspiring curiosity, fascination, and \" +\n    \"distrust. People have long wondered about who these secret society members are and what they do, with the \" +\n    \"most radical of conspiracy theorists claiming that they control everything in the entire world. And while the world \" +\n    \"may never know for sure, it is likely that many secret societies do actually exist, even today.<br><br>\" +\n    \"However, the secret societies of the modern world are nothing like those that (supposedly) existed  \" +\n    \"decades and centuries ago. The Freemasons, Knights Templar, and Illuminati, while they may have been around \" +\n    \"at the turn of the 21st century, almost assuredly do not exist today. The dominance of the Web in \" +\n    \"our everyday lives and the fact that so much of the world is now digital has given rise to a new breed \" +\n    \"of secret societies: Internet-based ones.<br><br>\" +\n    \"Commonly called 'hacker groups', Internet-based secret societies have become well-known in today's \" +\n    \"world. Some of these, such as The Black Hand, are black hat groups that claim they are trying to \" +\n    \"help the oppressed by attacking the elite and powerful. Others, such as NiteSec, are hacktivist groups \" +\n    \"that try to push political and social agendas. Perhaps the most intriguing hacker group \" +\n    \"is the mysterious Bitrunners, whose purpose still remains unknown.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"Space: The Failed Frontier\";\n  fn = LiteratureNames.TheFailedFrontier;\n  txt =\n    \"Humans have long dreamed about spaceflight. With enduring interest, we were driven to explore \" +\n    \"the unknown and discover new worlds. We dreamed about conquering the stars. And in our quest, \" +\n    \"we pushed the boundaries of our scientific limits, and then pushed further. Space exploration \" +\n    \"lead to the development of many important technologies and new industries.<br><br>\" +\n    \"But sometime in the middle of the 21st century, all of that changed. Humanity lost its ambitions and \" +\n    \"aspirations of exploring the cosmos. The once-large funding for agencies like NASA and the European \" +\n    \"Space Agency gradually whittled away until their eventual disbanding in the 2060's. Not even \" +\n    \"militaries are fielding flights into space nowadays. The only remnants of the once great mission for cosmic \" +\n    \"conquest are the countless satellites in near-earth orbit, used for communications, espionage, \" +\n    \"and other corporate interests.<br><br>\" +\n    \"And as we continue to look at the state of space technology, it becomes more and \" +\n    \"more apparent that we will never return to that golden age of space exploration, that \" +\n    \"age where everyone dreamed of going beyond earth for the sake of discovery.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"Coded Intelligence: Myth or Reality?\";\n  fn = LiteratureNames.CodedIntelligence;\n  txt =\n    \"Tremendous progress has been made in the field of Artificial Intelligence over the past few decades. \" +\n    \"Our autonomous vehicles and transporation systems. The electronic personal assistants that control our everyday lives. \" +\n    \"Medical, service, and manufacturing robots. All of these are examples of how far AI has come and how much it has \" +\n    \"improved our daily lives. However, the question still remains of whether AI will ever be advanced enough to re-create \" +\n    \"human intelligence.<br><br>\" +\n    \"We've certainly come close to artificial intelligence that is similar to humans. For example OmniTek Incorporated's \" +\n    \"CompanionBot, a robot meant to act as a comforting friend for lonely and grieving people, is eerily human-like \" +\n    \"in its appearance, speech, mannerisms, and even movement. However its artificial intelligence isn't the same as \" +\n    \"that of humans. Not yet. It doesn't have sentience or self-awareness or consciousness.<br><br>\" +\n    \"Many neuroscientists believe that we won't ever reach the point of creating artificial human intelligence. 'At the end of the \" +\n    \"the day, AI comes down to 1's and 0's, while the human brain does not. We'll never see AI that is identical to that of \" +\n    \"humans.'\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"Synthetic Muscles\";\n  fn = LiteratureNames.SyntheticMuscles;\n  txt =\n    \"Initial versions of synthetic muscles weren't made of anything organic but were actually \" +\n    \"crude devices made to mimic human muscle function. Some of the early iterations were actually made of \" +\n    \"common materials such as fishing lines and sewing threads due to their high strength for \" +\n    \"a cheap cost.<br><br>\" +\n    \"As technology progressed, however, advances in biomedical engineering paved the way for a new method of \" +\n    \"creating synthetic muscles. Instead of creating something  that closely imitated the functionality \" +\n    \"of human muscle, scientists discovered a way of forcing the human body itself to augment its own \" +\n    \"muscle tissue using both synthetic and organic materials. This is typically done using gene therapy \" +\n    \"or chemical injections.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"Tensions rise in global tech race\";\n  fn = LiteratureNames.TensionsInTechRace;\n  txt =\n    \"Have we entered a new Cold War? Is WWIII just beyond the horizon?<br><br>\" +\n    \"After rumors came out that OmniTek Incorporated had begun developing advanced robotic supersoldiers, \" +\n    \"geopolitical tensions quickly flared between the USA, Russia, and several Asian superpowers. \" +\n    \"In a rare show of cooperation between corporations, MegaCorp and ECorp have \" +\n    \"reportedly launched hundreds of new surveillance and espionage satellites. \" +\n    \"Defense contractors such as \" +\n    \"DeltaOne and AeroCorp have been working with the CIA and NSA to prepare \" +\n    \"for conflict. Meanwhile, the rest of the world sits in earnest \" +\n    \"hoping that it never reaches full-scale war. With today's technology \" +\n    \"and firepower, a World War would assuredly mean the end of human civilization.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"The Cost of Immortality\";\n  fn = LiteratureNames.CostOfImmortality;\n  txt =\n    \"Evolution and advances in medical and augmentation technology has lead to drastic improvements \" +\n    \"in human mortality rates. Recent figures show that the life expectancy for humans \" +\n    \"that live in a first-world country is about 130 years of age, almost double of what it was \" +\n    \"at the turn of the century. However, this increase in average lifespan has had some \" +\n    \"significant effects on society and culture.<br><br>\" +\n    \"Due to longer lifespans and a better quality of life, many adults are holding \" +\n    \"off on having kids until much later. As a result, the percentage of youth in \" +\n    \"first-world countries has been decreasing, while the number \" +\n    \"of senior citizens is significantly increasing.<br><br>\" +\n    \"Perhaps the most alarming result of all of this is the rapidly shrinking workforce. \" +\n    \"Despite the increase in life expectancy, the typical retirement age for \" +\n    \"workers in America has remained about the same, meaning a larger and larger \" +\n    \"percentage of people in America are retirees. Furthermore, many \" +\n    \"young adults are holding off on joining the workforce because they feel that \" +\n    \"they have plenty of time left in their lives for employment, and want to \" +\n    \"'enjoy life while they're young.' For most industries, this shrinking workforce \" +\n    \"is not a major issue as most things are handled by robots anyways. However, \" +\n    \"there are still several key industries such as engineering and education \" +\n    \"that have not been automated, and these remain in danger to this cultural \" +\n    \"phenomenon.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"The Hidden World\";\n  fn = LiteratureNames.TheHiddenWorld;\n  txt =\n    \"WAKE UP SHEEPLE<br><br>\" +\n    \"THE GOVERNMENT DOES NOT EXIST. CORPORATIONS DO NOT RUN SOCIETY<br><br>\" +\n    \"THE ILLUMINATI ARE THE SECRET RULERS OF THE WORLD!<br><br>\" +\n    \"Yes, the Illuminati of legends. The ancient secret society that controls the entire \" +\n    \"world from the shadows with their invisible hand. The group of the rich and wealthy \" +\n    \"that have penetrated every major government, financial agency, and corporation in the last \" +\n    \"three hundred years.<br><br>\" +\n    \"OPEN YOUR EYES<br><br>\" +\n    \"It was the Illuminati that brought an end to democracy in the world. They are the driving force \" +\n    \"behind everything that happens.<br><br>\" +\n    \"THEY ARE ALL AROUND YOU<br><br>\" +\n    \"After destabilizing the world's governments, they are now entering the final stage of their master plan. \" +\n    \"They will secretly initiate global crises. Terrorism. Pandemics. World War. And out of the chaos \" +\n    \"that ensues they will build their New World Order.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"The New God\";\n  fn = LiteratureNames.TheNewGod;\n  txt =\n    \"Everyone has a moment in their life when they wonder about the bigger questions.<br><br>\" +\n    \"What's the point of all this? What is my purpose?<br><br>\" +\n    \"Some people dare to think even bigger.<br><br>\" +\n    \"What will the fate of the human race be?<br><br>\" +\n    \"We live in an era vastly different from that of 15 or even 20 years ago. We have gone \" +\n    \"beyond the limits of humanity. We have stripped ourselves of the tyranny of flesh.<br><br>\" +\n    \"The Singularity is here. The merging of man and machine. This is where humanity evolves into \";\n  \"something greater. This is our future.<br><br>\" + \"Embrace it, and you will obey a new god. The God in the Machine.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"The New Triads\";\n  fn = LiteratureNames.NewTriads;\n  txt =\n    \"The Triads were an ancient transnational crime syndicate based in China, Hong Kong, and other Asian \" +\n    \"territories. They were often considered one of the first and biggest criminal secret societies. \" +\n    \"While most of the branches of the Triads have been destroyed over the past few decades, the \" +\n    \"crime faction has spawned and inspired a number of other Asian crime organizations over the past few years. \" +\n    \"The most notable of these is the Tetrads.<br><br>\" +\n    \"It is widely believed that the Tetrads are a rogue group that splintered off from the Triads sometime in the \" +\n    \"mid 21st century. The founders of the Tetrads, all of whom were ex-Triad members, believed that the \" +\n    \"Triads were losing their purpose and direction. The Tetrads started off as a small group that mainly engaged \" +\n    \"in fraud and extortion. They were largely unknown until just a few years ago when they took over the illegal \" +\n    \"drug trade in all of the major Asian cities. They quickly became the most powerful crime syndicate in the \" +\n    \"continent.<br><br>\" +\n    \"Not much else is known about the Tetrads, or about the efforts the Asian governments and corporations are making \" +\n    \"to take down this large new crime organization. Many believe that the Tetrads have infiltrated the governments \" +\n    \"and powerful corporations in Asia, which has helped faciliate their recent rapid rise.\";\n  Literatures[fn] = new Literature(title, fn, txt);\n\n  title = \"The Secret War\";\n  fn = LiteratureNames.TheSecretWar;\n  txt = \"\";\n  Literatures[fn] = new Literature(title, fn, txt);\n})();\n","import * as augmentationMethods from \"./PlayerObjectAugmentationMethods\";\nimport * as bladeburnerMethods from \"./PlayerObjectBladeburnerMethods\";\nimport * as corporationMethods from \"./PlayerObjectCorporationMethods\";\nimport * as gangMethods from \"./PlayerObjectGangMethods\";\nimport * as generalMethods from \"./PlayerObjectGeneralMethods\";\nimport * as serverMethods from \"./PlayerObjectServerMethods\";\n\nimport { IMap } from \"../../types\";\nimport { Resleeve } from \"../Resleeving/Resleeve\";\nimport { Sleeve } from \"../Sleeve/Sleeve\";\nimport { IPlayerOwnedSourceFile } from \"../../SourceFile/PlayerOwnedSourceFile\";\nimport { Exploit } from \"../../Exploits/Exploit\";\nimport { WorkerScript } from \"../../Netscript/WorkerScript\";\nimport { CompanyPosition } from \"../../Company/CompanyPosition\";\nimport { Server } from \"../../Server/Server\";\nimport { HacknetServer } from \"../../Hacknet/HacknetServer\";\nimport { Faction } from \"../../Faction/Faction\";\nimport { Company } from \"../../Company/Company\";\nimport { Augmentation } from \"../../Augmentation/Augmentation\";\nimport { IRouter } from \"../../ui/Router\";\nimport { ICodingContractReward } from \"../../CodingContracts\";\n\nimport { IPlayer } from \"../IPlayer\";\nimport { LocationName } from \"../../Locations/data/LocationNames\";\nimport { IPlayerOwnedAugmentation } from \"../../Augmentation/PlayerOwnedAugmentation\";\nimport { ICorporation } from \"../../Corporation/ICorporation\";\nimport { IGang } from \"../../Gang/IGang\";\nimport { IBladeburner } from \"../../Bladeburner/IBladeburner\";\nimport { HacknetNode } from \"../../Hacknet/HacknetNode\";\n\nimport { HashManager } from \"../../Hacknet/HashManager\";\nimport { CityName } from \"../../Locations/data/CityNames\";\n\nimport { MoneySourceTracker } from \"../../utils/MoneySourceTracker\";\nimport { Reviver, Generic_toJSON, Generic_fromJSON } from \"../../utils/JSONReviver\";\n\nimport Decimal from \"decimal.js\";\n\nexport class PlayerObject implements IPlayer {\n  // Class members\n  augmentations: IPlayerOwnedAugmentation[];\n  bitNodeN: number;\n  city: CityName;\n  companyName: string;\n  corporation: ICorporation | null;\n  gang: IGang | null;\n  bladeburner: IBladeburner | null;\n  currentServer: string;\n  factions: string[];\n  factionInvitations: string[];\n  hacknetNodes: (HacknetNode | string)[]; // HacknetNode object or IP of Hacknet Server\n  has4SData: boolean;\n  has4SDataTixApi: boolean;\n  hashManager: HashManager;\n  hasTixApiAccess: boolean;\n  hasWseAccount: boolean;\n  homeComputer: string;\n  hp: number;\n  jobs: IMap<string>;\n  init: () => void;\n  isWorking: boolean;\n  karma: number;\n  numPeopleKilled: number;\n  location: LocationName;\n  max_hp: number;\n  money: any;\n  moneySourceA: MoneySourceTracker;\n  moneySourceB: MoneySourceTracker;\n  playtimeSinceLastAug: number;\n  playtimeSinceLastBitnode: number;\n  purchasedServers: any[];\n  queuedAugmentations: IPlayerOwnedAugmentation[];\n  resleeves: Resleeve[];\n  scriptProdSinceLastAug: number;\n  sleeves: Sleeve[];\n  sleevesFromCovenant: number;\n  sourceFiles: IPlayerOwnedSourceFile[];\n  exploits: Exploit[];\n  lastUpdate: number;\n  totalPlaytime: number;\n\n  // Stats\n  hacking_skill: number;\n  strength: number;\n  defense: number;\n  dexterity: number;\n  agility: number;\n  charisma: number;\n  intelligence: number;\n\n  // Experience\n  hacking_exp: number;\n  strength_exp: number;\n  defense_exp: number;\n  dexterity_exp: number;\n  agility_exp: number;\n  charisma_exp: number;\n  intelligence_exp: number;\n\n  // Multipliers\n  hacking_chance_mult: number;\n  hacking_speed_mult: number;\n  hacking_money_mult: number;\n  hacking_grow_mult: number;\n  hacking_mult: number;\n  hacking_exp_mult: number;\n  strength_mult: number;\n  strength_exp_mult: number;\n  defense_mult: number;\n  defense_exp_mult: number;\n  dexterity_mult: number;\n  dexterity_exp_mult: number;\n  agility_mult: number;\n  agility_exp_mult: number;\n  charisma_mult: number;\n  charisma_exp_mult: number;\n  hacknet_node_money_mult: number;\n  hacknet_node_purchase_cost_mult: number;\n  hacknet_node_ram_cost_mult: number;\n  hacknet_node_core_cost_mult: number;\n  hacknet_node_level_cost_mult: number;\n  company_rep_mult: number;\n  faction_rep_mult: number;\n  work_money_mult: number;\n  crime_success_mult: number;\n  crime_money_mult: number;\n  bladeburner_max_stamina_mult: number;\n  bladeburner_stamina_gain_mult: number;\n  bladeburner_analysis_mult: number;\n  bladeburner_success_chance_mult: number;\n\n  createProgramReqLvl: number;\n  factionWorkType: string;\n  createProgramName: string;\n  timeWorkedCreateProgram: number;\n  crimeType: string;\n  committingCrimeThruSingFn: boolean;\n  singFnCrimeWorkerScript: WorkerScript | null;\n  timeNeededToCompleteWork: number;\n  focus: boolean;\n  className: string;\n  currentWorkFactionName: string;\n  workType: string;\n  currentWorkFactionDescription: string;\n  timeWorked: number;\n  workMoneyGained: number;\n  workMoneyGainRate: number;\n  workRepGained: number;\n  workRepGainRate: number;\n  workHackExpGained: number;\n  workHackExpGainRate: number;\n  workStrExpGained: number;\n  workStrExpGainRate: number;\n  workDefExpGained: number;\n  workDefExpGainRate: number;\n  workDexExpGained: number;\n  workDexExpGainRate: number;\n  workAgiExpGained: number;\n  workAgiExpGainRate: number;\n  workChaExpGained: number;\n  workChaExpGainRate: number;\n  workMoneyLossRate: number;\n\n  // Methods\n  work: (numCycles: number) => boolean;\n  workPartTime: (numCycles: number) => boolean;\n  workForFaction: (numCycles: number) => boolean;\n  applyForAgentJob: (sing?: boolean) => boolean;\n  applyForBusinessConsultantJob: (sing?: boolean) => boolean;\n  applyForBusinessJob: (sing?: boolean) => boolean;\n  applyForEmployeeJob: (sing?: boolean) => boolean;\n  applyForItJob: (sing?: boolean) => boolean;\n  applyForJob: (entryPosType: CompanyPosition, sing?: boolean) => boolean;\n  applyForNetworkEngineerJob: (sing?: boolean) => boolean;\n  applyForPartTimeEmployeeJob: (sing?: boolean) => boolean;\n  applyForPartTimeWaiterJob: (sing?: boolean) => boolean;\n  applyForSecurityEngineerJob: (sing?: boolean) => boolean;\n  applyForSecurityJob: (sing?: boolean) => boolean;\n  applyForSoftwareConsultantJob: (sing?: boolean) => boolean;\n  applyForSoftwareJob: (sing?: boolean) => boolean;\n  applyForWaiterJob: (sing?: boolean) => boolean;\n  canAccessBladeburner: () => boolean;\n  canAccessCorporation: () => boolean;\n  canAccessGang: () => boolean;\n  canAccessResleeving: () => boolean;\n  canAfford: (cost: number) => boolean;\n  gainHackingExp: (exp: number) => void;\n  gainStrengthExp: (exp: number) => void;\n  gainDefenseExp: (exp: number) => void;\n  gainDexterityExp: (exp: number) => void;\n  gainAgilityExp: (exp: number) => void;\n  gainCharismaExp: (exp: number) => void;\n  gainIntelligenceExp: (exp: number) => void;\n  gainMoney: (money: number) => void;\n  getCurrentServer: () => Server | HacknetServer;\n  getGangFaction: () => Faction;\n  getGangName: () => string;\n  getHomeComputer: () => Server;\n  getNextCompanyPosition: (company: Company, entryPosType: CompanyPosition) => CompanyPosition | null;\n  getUpgradeHomeRamCost: () => number;\n  gotoLocation: (to: LocationName) => boolean;\n  hasAugmentation: (aug: string | Augmentation) => boolean;\n  hasCorporation: () => boolean;\n  hasGangWith: (facName: string) => boolean;\n  hasTorRouter: () => boolean;\n  hasProgram: (program: string) => boolean;\n  inBladeburner: () => boolean;\n  inGang: () => boolean;\n  isQualified: (company: Company, position: CompanyPosition) => boolean;\n  loseMoney: (money: number) => void;\n  reapplyAllAugmentations: (resetMultipliers?: boolean) => void;\n  reapplyAllSourceFiles: () => void;\n  regenerateHp: (amt: number) => void;\n  recordMoneySource: (amt: number, source: string) => void;\n  setMoney: (amt: number) => void;\n  singularityStopWork: () => string;\n  startBladeburner: (p: any) => void;\n  startFactionWork: (router: IRouter, faction: Faction) => void;\n  startClass: (router: IRouter, costMult: number, expMult: number, className: string) => void;\n  startCorporation: (corpName: string, additionalShares?: number) => void;\n  startCrime: (\n    router: IRouter,\n    crimeType: string,\n    hackExp: number,\n    strExp: number,\n    defExp: number,\n    dexExp: number,\n    agiExp: number,\n    chaExp: number,\n    money: number,\n    time: number,\n    singParams: any,\n  ) => void;\n  startFactionFieldWork: (router: IRouter, faction: Faction) => void;\n  startFactionHackWork: (router: IRouter, faction: Faction) => void;\n  startFactionSecurityWork: (router: IRouter, faction: Faction) => void;\n  startFocusing: () => void;\n  startGang: (facName: string, isHacking: boolean) => void;\n  startWork: (router: IRouter, companyName: string) => void;\n  startWorkPartTime: (router: IRouter, companyName: string) => void;\n  takeDamage: (amt: number) => boolean;\n  travel: (to: CityName) => boolean;\n  giveExploit: (exploit: Exploit) => void;\n  queryStatFromString: (str: string) => number;\n  getIntelligenceBonus: (weight: number) => number;\n  getCasinoWinnings: () => number;\n  quitJob: (company: string) => void;\n  createHacknetServer: () => HacknetServer;\n  startCreateProgramWork: (router: IRouter, programName: string, time: number, reqLevel: number) => void;\n  queueAugmentation: (augmentationName: string) => void;\n  receiveInvite: (factionName: string) => void;\n  updateSkillLevels: () => void;\n  gainCodingContractReward: (reward: ICodingContractReward, difficulty?: number) => string;\n  stopFocusing: () => void;\n  finishFactionWork: (cancelled: boolean, sing?: boolean) => string;\n  finishClass: (sing?: boolean) => string;\n  finishWork: (cancelled: boolean, sing?: boolean) => string;\n  cancelationPenalty: () => number;\n  finishWorkPartTime: (sing?: boolean) => string;\n  finishCrime: (cancelled: boolean) => string;\n  finishCreateProgramWork: (cancelled: boolean) => string;\n  resetMultipliers: () => void;\n  prestigeAugmentation: () => void;\n  prestigeSourceFile: () => void;\n  calculateSkill: (exp: number, mult?: number) => number;\n  resetWorkStatus: (generalType?: string, group?: string, workType?: string) => void;\n  getWorkHackExpGain: () => number;\n  getWorkStrExpGain: () => number;\n  getWorkDefExpGain: () => number;\n  getWorkDexExpGain: () => number;\n  getWorkAgiExpGain: () => number;\n  getWorkChaExpGain: () => number;\n  getWorkRepGain: () => number;\n  getWorkMoneyGain: () => number;\n  processWorkEarnings: (cycles: number) => void;\n  hospitalize: () => void;\n  createProgramWork: (numCycles: number) => boolean;\n  takeClass: (numCycles: number) => boolean;\n  commitCrime: (numCycles: number) => boolean;\n  checkForFactionInvitations: () => Faction[];\n  setBitNodeNumber: (n: number) => void;\n  getMult: (name: string) => number;\n  setMult: (name: string, mult: number) => void;\n\n  constructor() {\n    //Skills and stats\n    this.hacking_skill = 1;\n\n    //Combat stats\n    this.hp = 10;\n    this.max_hp = 10;\n    this.strength = 1;\n    this.defense = 1;\n    this.dexterity = 1;\n    this.agility = 1;\n\n    //Labor stats\n    this.charisma = 1;\n\n    //Special stats\n    this.intelligence = 0;\n\n    //Hacking multipliers\n    this.hacking_chance_mult = 1;\n    this.hacking_speed_mult = 1;\n    this.hacking_money_mult = 1;\n    this.hacking_grow_mult = 1;\n\n    //Experience and multipliers\n    this.hacking_exp = 0;\n    this.strength_exp = 0;\n    this.defense_exp = 0;\n    this.dexterity_exp = 0;\n    this.agility_exp = 0;\n    this.charisma_exp = 0;\n    this.intelligence_exp = 0;\n\n    this.hacking_mult = 1;\n    this.strength_mult = 1;\n    this.defense_mult = 1;\n    this.dexterity_mult = 1;\n    this.agility_mult = 1;\n    this.charisma_mult = 1;\n\n    this.hacking_exp_mult = 1;\n    this.strength_exp_mult = 1;\n    this.defense_exp_mult = 1;\n    this.dexterity_exp_mult = 1;\n    this.agility_exp_mult = 1;\n    this.charisma_exp_mult = 1;\n\n    this.company_rep_mult = 1;\n    this.faction_rep_mult = 1;\n\n    //Money\n    this.money = new Decimal(1000);\n\n    //IP Address of Starting (home) computer\n    this.homeComputer = \"\";\n\n    //Location information\n    this.city = CityName.Sector12;\n    this.location = LocationName.TravelAgency;\n\n    // Jobs that the player holds\n    // Map of company name (key) -> name of company position (value. Just the name, not the CompanyPosition object)\n    // The CompanyPosition name must match a key value in CompanyPositions\n    this.jobs = {};\n\n    // Company at which player is CURRENTLY working (only valid when the player is actively working)\n    this.companyName = \"\"; // Name of Company. Must match a key value in Companies ma;\n\n    // Servers\n    this.currentServer = \"\"; //IP address of Server currently being accessed through termina;\n    this.purchasedServers = []; //IP Addresses of purchased server;\n\n    // Hacknet Nodes/Servers\n    this.hacknetNodes = []; // Note= For Hacknet Servers, this array holds the IP addresses of the server;\n    this.hashManager = new HashManager();\n\n    //Factions\n    this.factions = []; //Names of all factions player has joine;\n    this.factionInvitations = []; //Outstanding faction invitation;\n\n    //Augmentations\n    this.queuedAugmentations = [];\n    this.augmentations = [];\n\n    this.sourceFiles = [];\n\n    //Crime statistics\n    this.numPeopleKilled = 0;\n    this.karma = 0;\n\n    this.crime_money_mult = 1;\n    this.crime_success_mult = 1;\n\n    //Flags/variables for working (Company, Faction, Creating Program, Taking Class)\n    this.isWorking = false;\n    this.focus = false;\n    this.workType = \"\";\n\n    this.currentWorkFactionName = \"\";\n    this.currentWorkFactionDescription = \"\";\n\n    this.workHackExpGainRate = 0;\n    this.workStrExpGainRate = 0;\n    this.workDefExpGainRate = 0;\n    this.workDexExpGainRate = 0;\n    this.workAgiExpGainRate = 0;\n    this.workChaExpGainRate = 0;\n    this.workRepGainRate = 0;\n    this.workMoneyGainRate = 0;\n    this.workMoneyLossRate = 0;\n\n    this.workHackExpGained = 0;\n    this.workStrExpGained = 0;\n    this.workDefExpGained = 0;\n    this.workDexExpGained = 0;\n    this.workAgiExpGained = 0;\n    this.workChaExpGained = 0;\n    this.workRepGained = 0;\n    this.workMoneyGained = 0;\n\n    this.createProgramName = \"\";\n    this.createProgramReqLvl = 0;\n\n    this.className = \"\";\n\n    this.crimeType = \"\";\n\n    this.timeWorked = 0; //in m;\n    this.timeWorkedCreateProgram = 0;\n    this.timeNeededToCompleteWork = 0;\n\n    this.work_money_mult = 1;\n\n    //Hacknet Node multipliers\n    this.hacknet_node_money_mult = 1;\n    this.hacknet_node_purchase_cost_mult = 1;\n    this.hacknet_node_ram_cost_mult = 1;\n    this.hacknet_node_core_cost_mult = 1;\n    this.hacknet_node_level_cost_mult = 1;\n\n    //Stock Market\n    this.hasWseAccount = false;\n    this.hasTixApiAccess = false;\n    this.has4SData = false;\n    this.has4SDataTixApi = false;\n\n    //Gang\n    this.gang = null;\n\n    //Corporation\n    this.corporation = null;\n\n    //Bladeburner\n    this.bladeburner = null;\n    this.bladeburner_max_stamina_mult = 1;\n    this.bladeburner_stamina_gain_mult = 1;\n    this.bladeburner_analysis_mult = 1; //Field Analysis Onl;\n    this.bladeburner_success_chance_mult = 1;\n\n    // Sleeves & Re-sleeving\n    this.sleeves = [];\n    this.resleeves = [];\n    this.sleevesFromCovenant = 0; // # of Duplicate sleeves purchased from the covenan;\n    //bitnode\n    this.bitNodeN = 1;\n\n    //Used to store the last update time.\n    this.lastUpdate = 0;\n    this.totalPlaytime = 0;\n    this.playtimeSinceLastAug = 0;\n    this.playtimeSinceLastBitnode = 0;\n\n    // Keep track of where money comes from\n    this.moneySourceA = new MoneySourceTracker(); // Where money comes from since last-installed Augmentatio;\n    this.moneySourceB = new MoneySourceTracker(); // Where money comes from for this entire BitNode ru;\n    // Production since last Augmentation installation\n    this.scriptProdSinceLastAug = 0;\n\n    this.exploits = [];\n\n    this.init = generalMethods.init;\n    this.prestigeAugmentation = generalMethods.prestigeAugmentation;\n    this.prestigeSourceFile = generalMethods.prestigeSourceFile;\n    this.receiveInvite = generalMethods.receiveInvite;\n    this.calculateSkill = generalMethods.calculateSkill;\n    this.updateSkillLevels = generalMethods.updateSkillLevels;\n    this.resetMultipliers = generalMethods.resetMultipliers;\n    this.hasProgram = generalMethods.hasProgram;\n    this.setMoney = generalMethods.setMoney;\n    this.gainMoney = generalMethods.gainMoney;\n    this.loseMoney = generalMethods.loseMoney;\n    this.canAfford = generalMethods.canAfford;\n    this.recordMoneySource = generalMethods.recordMoneySource;\n    this.gainHackingExp = generalMethods.gainHackingExp;\n    this.gainStrengthExp = generalMethods.gainStrengthExp;\n    this.gainDefenseExp = generalMethods.gainDefenseExp;\n    this.gainDexterityExp = generalMethods.gainDexterityExp;\n    this.gainAgilityExp = generalMethods.gainAgilityExp;\n    this.gainCharismaExp = generalMethods.gainCharismaExp;\n    this.gainIntelligenceExp = generalMethods.gainIntelligenceExp;\n    this.queryStatFromString = generalMethods.queryStatFromString;\n    this.resetWorkStatus = generalMethods.resetWorkStatus;\n    this.processWorkEarnings = generalMethods.processWorkEarnings;\n    this.startWork = generalMethods.startWork;\n    this.cancelationPenalty = generalMethods.cancelationPenalty;\n    this.work = generalMethods.work;\n    this.finishWork = generalMethods.finishWork;\n    this.startWorkPartTime = generalMethods.startWorkPartTime;\n    this.workPartTime = generalMethods.workPartTime;\n    this.finishWorkPartTime = generalMethods.finishWorkPartTime;\n    this.startFocusing = generalMethods.startFocusing;\n    this.stopFocusing = generalMethods.stopFocusing;\n    this.startFactionWork = generalMethods.startFactionWork;\n    this.startFactionHackWork = generalMethods.startFactionHackWork;\n    this.startFactionFieldWork = generalMethods.startFactionFieldWork;\n    this.startFactionSecurityWork = generalMethods.startFactionSecurityWork;\n    this.workForFaction = generalMethods.workForFaction;\n    this.finishFactionWork = generalMethods.finishFactionWork;\n    this.getWorkMoneyGain = generalMethods.getWorkMoneyGain;\n    this.getWorkHackExpGain = generalMethods.getWorkHackExpGain;\n    this.getWorkStrExpGain = generalMethods.getWorkStrExpGain;\n    this.getWorkDefExpGain = generalMethods.getWorkDefExpGain;\n    this.getWorkDexExpGain = generalMethods.getWorkDexExpGain;\n    this.getWorkAgiExpGain = generalMethods.getWorkAgiExpGain;\n    this.getWorkChaExpGain = generalMethods.getWorkChaExpGain;\n    this.getWorkRepGain = generalMethods.getWorkRepGain;\n    this.startCreateProgramWork = generalMethods.startCreateProgramWork;\n    this.createProgramWork = generalMethods.createProgramWork;\n    this.finishCreateProgramWork = generalMethods.finishCreateProgramWork;\n    this.startClass = generalMethods.startClass;\n    this.takeClass = generalMethods.takeClass;\n    this.finishClass = generalMethods.finishClass;\n    this.startCrime = generalMethods.startCrime;\n    this.commitCrime = generalMethods.commitCrime;\n    this.finishCrime = generalMethods.finishCrime;\n    this.singularityStopWork = generalMethods.singularityStopWork;\n    this.takeDamage = generalMethods.takeDamage;\n    this.regenerateHp = generalMethods.regenerateHp;\n    this.hospitalize = generalMethods.hospitalize;\n    this.applyForJob = generalMethods.applyForJob;\n    this.getNextCompanyPosition = generalMethods.getNextCompanyPosition;\n    this.quitJob = generalMethods.quitJob;\n    this.applyForSoftwareJob = generalMethods.applyForSoftwareJob;\n    this.applyForSoftwareConsultantJob = generalMethods.applyForSoftwareConsultantJob;\n    this.applyForItJob = generalMethods.applyForItJob;\n    this.applyForSecurityEngineerJob = generalMethods.applyForSecurityEngineerJob;\n    this.applyForNetworkEngineerJob = generalMethods.applyForNetworkEngineerJob;\n    this.applyForBusinessJob = generalMethods.applyForBusinessJob;\n    this.applyForBusinessConsultantJob = generalMethods.applyForBusinessConsultantJob;\n    this.applyForSecurityJob = generalMethods.applyForSecurityJob;\n    this.applyForAgentJob = generalMethods.applyForAgentJob;\n    this.applyForEmployeeJob = generalMethods.applyForEmployeeJob;\n    this.applyForPartTimeEmployeeJob = generalMethods.applyForPartTimeEmployeeJob;\n    this.applyForWaiterJob = generalMethods.applyForWaiterJob;\n    this.applyForPartTimeWaiterJob = generalMethods.applyForPartTimeWaiterJob;\n    this.isQualified = generalMethods.isQualified;\n    this.reapplyAllAugmentations = generalMethods.reapplyAllAugmentations;\n    this.reapplyAllSourceFiles = generalMethods.reapplyAllSourceFiles;\n    this.checkForFactionInvitations = generalMethods.checkForFactionInvitations;\n    this.setBitNodeNumber = generalMethods.setBitNodeNumber;\n    this.queueAugmentation = generalMethods.queueAugmentation;\n    this.gainCodingContractReward = generalMethods.gainCodingContractReward;\n    this.travel = generalMethods.travel;\n    this.gotoLocation = generalMethods.gotoLocation;\n    this.canAccessResleeving = generalMethods.canAccessResleeving;\n    this.giveExploit = generalMethods.giveExploit;\n    this.getIntelligenceBonus = generalMethods.getIntelligenceBonus;\n    this.getCasinoWinnings = generalMethods.getCasinoWinnings;\n    this.hasAugmentation = augmentationMethods.hasAugmentation;\n    this.canAccessBladeburner = bladeburnerMethods.canAccessBladeburner;\n    this.inBladeburner = bladeburnerMethods.inBladeburner;\n    this.startBladeburner = bladeburnerMethods.startBladeburner;\n    this.canAccessCorporation = corporationMethods.canAccessCorporation;\n    this.hasCorporation = corporationMethods.hasCorporation;\n    this.startCorporation = corporationMethods.startCorporation;\n    this.canAccessGang = gangMethods.canAccessGang;\n    this.getGangFaction = gangMethods.getGangFaction;\n    this.getGangName = gangMethods.getGangName;\n    this.hasGangWith = gangMethods.hasGangWith;\n    this.inGang = gangMethods.inGang;\n    this.startGang = gangMethods.startGang;\n\n    this.hasTorRouter = serverMethods.hasTorRouter;\n    this.getCurrentServer = serverMethods.getCurrentServer;\n    this.getHomeComputer = serverMethods.getHomeComputer;\n    this.getUpgradeHomeRamCost = serverMethods.getUpgradeHomeRamCost;\n    this.createHacknetServer = serverMethods.createHacknetServer;\n    this.factionWorkType = \"\";\n    this.committingCrimeThruSingFn = false;\n    this.singFnCrimeWorkerScript = null;\n\n    this.getMult = generalMethods.getMult;\n    this.setMult = generalMethods.setMult;\n  }\n\n  /**\n   * Serialize the current object to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"PlayerObject\", this);\n  }\n\n  /**\n   * Initiatizes a PlayerObject object from a JSON save state.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): PlayerObject {\n    return Generic_fromJSON(PlayerObject, value.data);\n  }\n}\n\nReviver.constructors.PlayerObject = PlayerObject;\n","/**\n * Augmentation-related methods for the Player class (PlayerObject)\n */\nimport { IPlayer } from \"../IPlayer\";\n\nimport { Augmentation } from \"../../Augmentation/Augmentation\";\n\nexport function hasAugmentation(this: IPlayer, aug: string | Augmentation): boolean {\n  const augName: string = aug instanceof Augmentation ? aug.name : aug;\n\n  for (const owned of this.augmentations) {\n    if (owned.name === augName) {\n      return true;\n    }\n  }\n\n  for (const owned of this.queuedAugmentations) {\n    if (owned.name === augName) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * Clears defined properties from an object.\n * Does not delete up the prototype chain.\n * @deprecated Look into using `Map` or `Set` rather than manipulating properties on an Object.\n * @param obj the object to clear all properties\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function clearObject(obj: any): void {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      // tslint:disable-next-line:no-dynamic-delete\n      delete obj[key];\n    }\n  }\n}\n","import * as posNames from \"./companypositionnames\";\nimport { IConstructorParams } from \"../Company\";\n\nimport { IMap } from \"../../types\";\nimport { LocationName } from \"../../Locations/data/LocationNames\";\n\n// Create Objects containing Company Positions by category\n// Will help in metadata construction later\nconst AllSoftwarePositions: IMap<boolean> = {};\nconst AllITPositions: IMap<boolean> = {};\nconst AllNetworkEngineerPositions: IMap<boolean> = {};\nconst SecurityEngineerPositions: IMap<boolean> = {};\nconst AllTechnologyPositions: IMap<boolean> = {};\nconst AllBusinessPositions: IMap<boolean> = {};\nconst AllAgentPositions: IMap<boolean> = {};\nconst AllSecurityPositions: IMap<boolean> = {};\nconst AllSoftwareConsultantPositions: IMap<boolean> = {};\nconst AllBusinessConsultantPositions: IMap<boolean> = {};\nconst SoftwarePositionsUpToHeadOfEngineering: IMap<boolean> = {};\nconst SoftwarePositionsUpToLeadDeveloper: IMap<boolean> = {};\nconst BusinessPositionsUpToOperationsManager: IMap<boolean> = {};\nconst WaiterOnly: IMap<boolean> = {};\nconst EmployeeOnly: IMap<boolean> = {};\nconst PartTimeWaiterOnly: IMap<boolean> = {};\nconst PartTimeEmployeeOnly: IMap<boolean> = {};\nconst OperationsManagerOnly: IMap<boolean> = {};\nconst CEOOnly: IMap<boolean> = {};\n\nposNames.SoftwareCompanyPositions.forEach((e) => {\n  AllSoftwarePositions[e] = true;\n  AllTechnologyPositions[e] = true;\n});\n\nposNames.ITCompanyPositions.forEach((e) => {\n  AllITPositions[e] = true;\n  AllTechnologyPositions[e] = true;\n});\n\nposNames.NetworkEngineerCompanyPositions.forEach((e) => {\n  AllNetworkEngineerPositions[e] = true;\n  AllTechnologyPositions[e] = true;\n});\n\nAllTechnologyPositions[posNames.SecurityEngineerCompanyPositions[0]] = true;\nSecurityEngineerPositions[posNames.SecurityEngineerCompanyPositions[0]] = true;\n\nposNames.BusinessCompanyPositions.forEach((e) => {\n  AllBusinessPositions[e] = true;\n});\n\nposNames.SecurityCompanyPositions.forEach((e) => {\n  AllSecurityPositions[e] = true;\n});\n\nposNames.AgentCompanyPositions.forEach((e) => {\n  AllAgentPositions[e] = true;\n});\n\nposNames.SoftwareConsultantCompanyPositions.forEach((e) => {\n  AllSoftwareConsultantPositions[e] = true;\n});\n\nposNames.BusinessConsultantCompanyPositions.forEach((e) => {\n  AllBusinessConsultantPositions[e] = true;\n});\n\nfor (let i = 0; i < posNames.SoftwareCompanyPositions.length; ++i) {\n  const e = posNames.SoftwareCompanyPositions[i];\n  if (i <= 5) {\n    SoftwarePositionsUpToHeadOfEngineering[e] = true;\n  }\n  if (i <= 3) {\n    SoftwarePositionsUpToLeadDeveloper[e] = true;\n  }\n}\nfor (let i = 0; i < posNames.BusinessCompanyPositions.length; ++i) {\n  const e = posNames.BusinessCompanyPositions[i];\n  if (i <= 3) {\n    BusinessPositionsUpToOperationsManager[e] = true;\n  }\n}\n\nWaiterOnly[posNames.MiscCompanyPositions[0]] = true;\nEmployeeOnly[posNames.MiscCompanyPositions[1]] = true;\nPartTimeWaiterOnly[posNames.PartTimeCompanyPositions[0]] = true;\nPartTimeEmployeeOnly[posNames.PartTimeCompanyPositions[1]] = true;\nOperationsManagerOnly[posNames.BusinessCompanyPositions[3]] = true;\nCEOOnly[posNames.BusinessCompanyPositions[5]] = true;\n\n// Metadata\nexport const companiesMetadata: IConstructorParams[] = [\n  {\n    name: LocationName.AevumECorp,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions, AllBusinessPositions, AllSecurityPositions),\n    expMultiplier: 3,\n    salaryMultiplier: 3,\n    jobStatReqOffset: 249,\n  },\n  {\n    name: LocationName.Sector12MegaCorp,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions, AllBusinessPositions, AllSecurityPositions),\n    expMultiplier: 3,\n    salaryMultiplier: 3,\n    jobStatReqOffset: 249,\n  },\n  {\n    name: LocationName.AevumBachmanAndAssociates,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions, AllBusinessPositions, AllSecurityPositions),\n    expMultiplier: 2.6,\n    salaryMultiplier: 2.6,\n    jobStatReqOffset: 224,\n  },\n  {\n    name: LocationName.Sector12BladeIndustries,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions, AllBusinessPositions, AllSecurityPositions),\n    expMultiplier: 2.75,\n    salaryMultiplier: 2.75,\n    jobStatReqOffset: 224,\n  },\n  {\n    name: LocationName.VolhavenNWO,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions, AllBusinessPositions, AllSecurityPositions),\n    expMultiplier: 2.75,\n    salaryMultiplier: 2.75,\n    jobStatReqOffset: 249,\n  },\n  {\n    name: LocationName.AevumClarkeIncorporated,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions, AllBusinessPositions, AllSecurityPositions),\n    expMultiplier: 2.25,\n    salaryMultiplier: 2.25,\n    jobStatReqOffset: 224,\n  },\n  {\n    name: LocationName.VolhavenOmniTekIncorporated,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions, AllBusinessPositions, AllSecurityPositions),\n    expMultiplier: 2.25,\n    salaryMultiplier: 2.25,\n    jobStatReqOffset: 224,\n  },\n  {\n    name: LocationName.Sector12FourSigma,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions, AllBusinessPositions, AllSecurityPositions),\n    expMultiplier: 2.5,\n    salaryMultiplier: 2.5,\n    jobStatReqOffset: 224,\n  },\n  {\n    name: LocationName.ChongqingKuaiGongInternational,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions, AllBusinessPositions, AllSecurityPositions),\n    expMultiplier: 2.2,\n    salaryMultiplier: 2.2,\n    jobStatReqOffset: 224,\n  },\n  {\n    name: LocationName.AevumFulcrumTechnologies,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions, AllBusinessPositions),\n    expMultiplier: 2,\n    salaryMultiplier: 2,\n    jobStatReqOffset: 224,\n  },\n  {\n    name: LocationName.IshimaStormTechnologies,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions, AllSoftwareConsultantPositions, AllBusinessPositions),\n    expMultiplier: 1.8,\n    salaryMultiplier: 1.8,\n    jobStatReqOffset: 199,\n  },\n  {\n    name: LocationName.NewTokyoDefComm,\n    info: \"\",\n    companyPositions: Object.assign({}, CEOOnly, AllTechnologyPositions, AllSoftwareConsultantPositions),\n    expMultiplier: 1.75,\n    salaryMultiplier: 1.75,\n    jobStatReqOffset: 199,\n  },\n  {\n    name: LocationName.VolhavenHeliosLabs,\n    info: \"\",\n    companyPositions: Object.assign({}, CEOOnly, AllTechnologyPositions, AllSoftwareConsultantPositions),\n    expMultiplier: 1.8,\n    salaryMultiplier: 1.8,\n    jobStatReqOffset: 199,\n  },\n  {\n    name: LocationName.NewTokyoVitaLife,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions, AllBusinessPositions, AllSoftwareConsultantPositions),\n    expMultiplier: 1.8,\n    salaryMultiplier: 1.8,\n    jobStatReqOffset: 199,\n  },\n  {\n    name: LocationName.Sector12IcarusMicrosystems,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions, AllBusinessPositions, AllSoftwareConsultantPositions),\n    expMultiplier: 1.9,\n    salaryMultiplier: 1.9,\n    jobStatReqOffset: 199,\n  },\n  {\n    name: LocationName.Sector12UniversalEnergy,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions, AllBusinessPositions, AllSoftwareConsultantPositions),\n    expMultiplier: 2,\n    salaryMultiplier: 2,\n    jobStatReqOffset: 199,\n  },\n  {\n    name: LocationName.AevumGalacticCybersystems,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions, AllBusinessPositions, AllSoftwareConsultantPositions),\n    expMultiplier: 1.9,\n    salaryMultiplier: 1.9,\n    jobStatReqOffset: 199,\n  },\n  {\n    name: LocationName.AevumAeroCorp,\n    info: \"\",\n    companyPositions: Object.assign({}, CEOOnly, OperationsManagerOnly, AllTechnologyPositions, AllSecurityPositions),\n    expMultiplier: 1.7,\n    salaryMultiplier: 1.7,\n    jobStatReqOffset: 199,\n  },\n  {\n    name: LocationName.VolhavenOmniaCybersystems,\n    info: \"\",\n    companyPositions: Object.assign({}, CEOOnly, OperationsManagerOnly, AllTechnologyPositions, AllSecurityPositions),\n    expMultiplier: 1.7,\n    salaryMultiplier: 1.7,\n    jobStatReqOffset: 199,\n  },\n  {\n    name: LocationName.ChongqingSolarisSpaceSystems,\n    info: \"\",\n    companyPositions: Object.assign({}, CEOOnly, OperationsManagerOnly, AllTechnologyPositions, AllSecurityPositions),\n    expMultiplier: 1.7,\n    salaryMultiplier: 1.7,\n    jobStatReqOffset: 199,\n  },\n  {\n    name: LocationName.Sector12DeltaOne,\n    info: \"\",\n    companyPositions: Object.assign({}, CEOOnly, OperationsManagerOnly, AllTechnologyPositions, AllSecurityPositions),\n    expMultiplier: 1.6,\n    salaryMultiplier: 1.6,\n    jobStatReqOffset: 199,\n  },\n  {\n    name: LocationName.NewTokyoGlobalPharmaceuticals,\n    info: \"\",\n    companyPositions: Object.assign(\n      {},\n      AllTechnologyPositions,\n      AllBusinessPositions,\n      AllSoftwareConsultantPositions,\n      AllSecurityPositions,\n    ),\n    expMultiplier: 1.8,\n    salaryMultiplier: 1.8,\n    jobStatReqOffset: 224,\n  },\n  {\n    name: LocationName.IshimaNovaMedical,\n    info: \"\",\n    companyPositions: Object.assign(\n      {},\n      AllTechnologyPositions,\n      AllBusinessPositions,\n      AllSoftwareConsultantPositions,\n      AllSecurityPositions,\n    ),\n    expMultiplier: 1.75,\n    salaryMultiplier: 1.75,\n    jobStatReqOffset: 199,\n  },\n  {\n    name: LocationName.Sector12CIA,\n    info: \"\",\n    companyPositions: Object.assign(\n      {},\n      SoftwarePositionsUpToHeadOfEngineering,\n      AllNetworkEngineerPositions,\n      SecurityEngineerPositions,\n      AllITPositions,\n      AllSecurityPositions,\n      AllAgentPositions,\n    ),\n    expMultiplier: 2,\n    salaryMultiplier: 2,\n    jobStatReqOffset: 149,\n  },\n  {\n    name: LocationName.Sector12NSA,\n    info: \"\",\n    companyPositions: Object.assign(\n      {},\n      SoftwarePositionsUpToHeadOfEngineering,\n      AllNetworkEngineerPositions,\n      SecurityEngineerPositions,\n      AllITPositions,\n      AllSecurityPositions,\n      AllAgentPositions,\n    ),\n    expMultiplier: 2,\n    salaryMultiplier: 2,\n    jobStatReqOffset: 149,\n  },\n  {\n    name: LocationName.AevumWatchdogSecurity,\n    info: \"\",\n    companyPositions: Object.assign(\n      {},\n      SoftwarePositionsUpToHeadOfEngineering,\n      AllNetworkEngineerPositions,\n      AllITPositions,\n      AllSecurityPositions,\n      AllAgentPositions,\n      AllSoftwareConsultantPositions,\n    ),\n    expMultiplier: 1.5,\n    salaryMultiplier: 1.5,\n    jobStatReqOffset: 124,\n  },\n  {\n    name: LocationName.VolhavenLexoCorp,\n    info: \"\",\n    companyPositions: Object.assign(\n      {},\n      AllTechnologyPositions,\n      AllSoftwareConsultantPositions,\n      AllBusinessPositions,\n      AllSecurityPositions,\n    ),\n    expMultiplier: 1.4,\n    salaryMultiplier: 1.4,\n    jobStatReqOffset: 99,\n  },\n  {\n    name: LocationName.AevumRhoConstruction,\n    info: \"\",\n    companyPositions: Object.assign({}, SoftwarePositionsUpToLeadDeveloper, BusinessPositionsUpToOperationsManager),\n    expMultiplier: 1.3,\n    salaryMultiplier: 1.3,\n    jobStatReqOffset: 49,\n  },\n  {\n    name: LocationName.Sector12AlphaEnterprises,\n    info: \"\",\n    companyPositions: Object.assign(\n      {},\n      SoftwarePositionsUpToLeadDeveloper,\n      BusinessPositionsUpToOperationsManager,\n      AllSoftwareConsultantPositions,\n    ),\n    expMultiplier: 1.5,\n    salaryMultiplier: 1.5,\n    jobStatReqOffset: 99,\n  },\n  {\n    name: LocationName.AevumPolice,\n    info: \"\",\n    companyPositions: Object.assign({}, AllSecurityPositions, SoftwarePositionsUpToLeadDeveloper),\n    expMultiplier: 1.3,\n    salaryMultiplier: 1.3,\n    jobStatReqOffset: 99,\n  },\n  {\n    name: LocationName.VolhavenSysCoreSecurities,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions),\n    expMultiplier: 1.3,\n    salaryMultiplier: 1.3,\n    jobStatReqOffset: 124,\n  },\n  {\n    name: LocationName.VolhavenCompuTek,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions),\n    expMultiplier: 1.2,\n    salaryMultiplier: 1.2,\n    jobStatReqOffset: 74,\n  },\n  {\n    name: LocationName.AevumNetLinkTechnologies,\n    info: \"\",\n    companyPositions: Object.assign({}, AllTechnologyPositions),\n    expMultiplier: 1.2,\n    salaryMultiplier: 1.2,\n    jobStatReqOffset: 99,\n  },\n  {\n    name: LocationName.Sector12CarmichaelSecurity,\n    info: \"\",\n    companyPositions: Object.assign(\n      {},\n      AllTechnologyPositions,\n      AllSoftwareConsultantPositions,\n      AllAgentPositions,\n      AllSecurityPositions,\n    ),\n    expMultiplier: 1.2,\n    salaryMultiplier: 1.2,\n    jobStatReqOffset: 74,\n  },\n  {\n    name: LocationName.Sector12FoodNStuff,\n    info: \"\",\n    companyPositions: Object.assign({}, EmployeeOnly, PartTimeEmployeeOnly),\n    expMultiplier: 1,\n    salaryMultiplier: 1,\n    jobStatReqOffset: 0,\n  },\n  {\n    name: LocationName.Sector12JoesGuns,\n    info: \"\",\n    companyPositions: Object.assign({}, EmployeeOnly, PartTimeEmployeeOnly),\n    expMultiplier: 1,\n    salaryMultiplier: 1,\n    jobStatReqOffset: 0,\n  },\n  {\n    name: LocationName.IshimaOmegaSoftware,\n    info: \"\",\n    companyPositions: Object.assign({}, AllSoftwarePositions, AllSoftwareConsultantPositions, AllITPositions),\n    expMultiplier: 1.1,\n    salaryMultiplier: 1.1,\n    jobStatReqOffset: 49,\n  },\n  {\n    name: LocationName.NewTokyoNoodleBar,\n    info: \"\",\n    companyPositions: Object.assign({}, WaiterOnly, PartTimeWaiterOnly),\n    expMultiplier: 1,\n    salaryMultiplier: 1,\n    jobStatReqOffset: 0,\n  },\n];\n","export interface IConstructorParams {\n  name: string;\n  cost: number;\n  desc: string;\n  advertisingMult?: number;\n  employeeChaMult?: number;\n  employeeCreMult?: number;\n  employeeEffMult?: number;\n  employeeIntMult?: number;\n  productionMult?: number;\n  productProductionMult?: number;\n  salesMult?: number;\n  sciResearchMult?: number;\n  storageMult?: number;\n}\n\nexport class Research {\n  // Name of research. This will be used to identify researches in the Research Tree\n  name = \"\";\n\n  // How much scientific research it costs to unlock this\n  cost = 0;\n\n  // Description of what the Research does\n  desc = \"\";\n\n  // All possible generic upgrades for the company, in the form of multipliers\n  advertisingMult = 1;\n  employeeChaMult = 1;\n  employeeCreMult = 1;\n  employeeEffMult = 1;\n  employeeIntMult = 1;\n  productionMult = 1;\n  productProductionMult = 1;\n  salesMult = 1;\n  sciResearchMult = 1;\n  storageMult = 1;\n\n  constructor(p: IConstructorParams = { name: \"\", cost: 0, desc: \"\" }) {\n    this.name = p.name;\n    this.cost = p.cost;\n    this.desc = p.desc;\n    if (p.advertisingMult) {\n      this.advertisingMult = p.advertisingMult;\n    }\n    if (p.employeeChaMult) {\n      this.employeeChaMult = p.employeeChaMult;\n    }\n    if (p.employeeCreMult) {\n      this.employeeCreMult = p.employeeCreMult;\n    }\n    if (p.employeeEffMult) {\n      this.employeeEffMult = p.employeeEffMult;\n    }\n    if (p.employeeIntMult) {\n      this.employeeIntMult = p.employeeIntMult;\n    }\n    if (p.productionMult) {\n      this.productionMult = p.productionMult;\n    }\n    if (p.productProductionMult) {\n      this.productProductionMult = p.productProductionMult;\n    }\n    if (p.salesMult) {\n      this.salesMult = p.salesMult;\n    }\n    if (p.sciResearchMult) {\n      this.sciResearchMult = p.sciResearchMult;\n    }\n    if (p.storageMult) {\n      this.storageMult = p.storageMult;\n    }\n  }\n}\n","import { IConstructorParams } from \"../Research\";\n\nexport const researchMetadata: IConstructorParams[] = [\n  {\n    name: \"AutoBrew\",\n    cost: 12e3,\n    desc:\n      \"Automatically keep your employees fully caffeinated with \" +\n      \"coffee injections. This research will keep the energy of all \" +\n      \"employees at its maximum possible value, for no cost. \" +\n      \"This will also disable the Coffee upgrade.\",\n  },\n  {\n    name: \"AutoPartyManager\",\n    cost: 15e3,\n    desc:\n      \"Automatically analyzes your employees' happiness and morale \" +\n      \"and boosts them whenever it detects a decrease. This research will \" +\n      \"keep the morale and happiness of all employees at their maximum possible \" +\n      \"values, for no cost. \" +\n      \"This will also disable the 'Throw Party' feature.\",\n  },\n  {\n    name: \"Automatic Drug Administration\",\n    cost: 10e3,\n    desc:\n      \"Research how to automatically administer performance-enhacing drugs to all of \" +\n      \"your employees. This unlocks Drug-related Research.\",\n  },\n  {\n    name: \"Bulk Purchasing\",\n    cost: 5e3,\n    desc:\n      \"Research the art of buying materials in bulk. This allows you to purchase \" +\n      \"any amount of a material instantly.\",\n  },\n  {\n    name: \"CPH4 Injections\",\n    cost: 25e3,\n    desc:\n      \"Develop an advanced and harmless synthetic drug that is administered to \" +\n      \"employees to increase all of their stats, except experience, by 10%.\",\n    employeeCreMult: 1.1,\n    employeeChaMult: 1.1,\n    employeeEffMult: 1.1,\n    employeeIntMult: 1.1,\n  },\n  {\n    name: \"Drones\",\n    cost: 5e3,\n    desc:\n      \"Acquire the knowledge needed to create advanced drones. This research does nothing \" +\n      \"by itself, but unlocks other Drone-related research.\",\n  },\n  {\n    name: \"Drones - Assembly\",\n    cost: 25e3,\n    desc:\n      \"Manufacture and use Assembly Drones to improve the efficiency of \" +\n      \"your production lines. This increases all production by 20%.\",\n    productionMult: 1.2,\n  },\n  {\n    name: \"Drones - Transport\",\n    cost: 30e3,\n    desc:\n      \"Manufacture and use intelligent Transport Drones to optimize \" +\n      \"your warehouses. This increases the storage space of all warehouses \" +\n      \"by 50%.\",\n    storageMult: 1.5,\n  },\n  {\n    name: \"Go-Juice\",\n    cost: 25e3,\n    desc:\n      \"Provide employees with Go-Juice, a coffee-derivative that further enhances \" +\n      \"the brain's dopamine production. This increases the maximum energy of all \" +\n      \"employees by 10.\",\n  },\n  {\n    name: \"Hi-Tech R&D Laboratory\",\n    cost: 5e3,\n    desc:\n      \"Construct a cutting edge facility dedicated to advanced research and \" +\n      \"and development. This allows you to spend Scientific Research \" +\n      \"on powerful upgrades. It also globally increases Scientific Research \" +\n      \"production by 10%.\",\n    sciResearchMult: 1.1,\n  },\n  {\n    name: \"HRBuddy-Recruitment\",\n    cost: 15e3,\n    desc:\n      \"Use automated software to handle the hiring of employees. With this \" +\n      \"research, each office will automatically hire one employee per \" +\n      \"market cycle if there is available space.\",\n  },\n  {\n    name: \"HRBuddy-Training\",\n    cost: 20e3,\n    desc:\n      \"Use automated software to handle the training of employees. With this \" +\n      \"research, each employee hired with HRBuddy-Recruitment will automatically \" +\n      \"be assigned to 'Training', rather than being unassigned.\",\n  },\n  {\n    name: \"JoyWire\",\n    cost: 20e3,\n    desc: \"A brain implant which is installed in employees, increasing their \" + \"maximum happiness by 10.\",\n  },\n  {\n    name: \"Market-TA.I\",\n    cost: 20e3,\n    desc:\n      \"Develop advanced AI software that uses technical analysis to \" +\n      \"help you understand and exploit the market. This research \" +\n      \"allows you to know what price to sell your Materials/Products \" +\n      \"at in order to avoid losing sales due to having too high of a mark-up. \" +\n      \"It also lets you automatically use that sale price.\",\n  },\n  {\n    name: \"Market-TA.II\",\n    cost: 50e3,\n    desc:\n      \"Develop double-advanced AI software that uses technical analysis to \" +\n      \"help you understand and exploit the market. This research \" +\n      \"allows you to know how many sales of a Material/Product you lose or gain \" +\n      \"from having too high or too low or a sale price. It also lets you automatically \" +\n      \"set the sale price of your Materials/Products at the optimal price such that \" +\n      \"the amount sold matches the amount produced.\",\n  },\n  {\n    name: \"Overclock\",\n    cost: 15e3,\n    desc:\n      \"Equip employees with a headset that uses transcranial direct current \" +\n      \"stimulation (tDCS) to increase the speed of their neurotransmitters. \" +\n      \"This research increases the intelligence and efficiency of all \" +\n      \"employees by 25%.\",\n    employeeEffMult: 1.25,\n    employeeIntMult: 1.25,\n  },\n  {\n    name: \"Self-Correcting Assemblers\",\n    cost: 25e3,\n    desc:\n      \"Create assemblers that can be used for universal production. \" +\n      \"These assemblers use deep learning to improve their efficiency \" +\n      \"at their tasks. This research increases all production by 10%\",\n    productionMult: 1.1,\n  },\n  {\n    name: \"Sti.mu\",\n    cost: 30e3,\n    desc:\n      \"Upgrade the tDCS headset to stimulate regions of the brain that \" +\n      \"control confidence and enthusiasm. This research increases the max \" +\n      \"morale of all employees by 10.\",\n  },\n  {\n    name: \"sudo.Assist\",\n    cost: 15e3,\n    desc: \"Develop a virtual assistant AI to handle and manage administrative \" + \"issues for your corporation.\",\n  },\n  {\n    name: \"uPgrade: Capacity.I\",\n    cost: 20e3,\n    desc:\n      \"Expand the industry's capacity for designing and manufacturing its \" +\n      \"various products. This increases the industry's maximum number of products \" +\n      \"by 1 (from 3 to 4).\",\n  },\n  {\n    name: \"uPgrade: Capacity.II\",\n    cost: 30e3,\n    desc:\n      \"Expand the industry's capacity for designing and manufacturing its \" +\n      \"various products. This increases the industry's maximum number of products \" +\n      \"by 1 (from 4 to 5).\",\n  },\n  {\n    name: \"uPgrade: Dashboard\",\n    cost: 5e3,\n    desc:\n      \"Improve the software used to manage the industry's production line \" +\n      \"for its various products. This allows you to manage the production and \" +\n      \"sale of a product before it's finished being designed.\",\n  },\n  {\n    name: \"uPgrade: Fulcrum\",\n    cost: 10e3,\n    desc:\n      \"Streamline the manufacturing of this industry's various products. \" +\n      \"This research increases the production of your products by 5%\",\n    productProductionMult: 1.05,\n  },\n];\n","import { getElementById } from \"./getElementById\";\n\n/**\n * Given an element by its ID, removes all event listeners from that element by cloning and\n * replacing. Then returns the new cloned element.\n * @param elemId The HTML ID to retrieve the element by.\n */\nexport function clearEventListeners(elemId: string | HTMLElement): HTMLElement | null {\n  try {\n    let elem: HTMLElement;\n    if (typeof elemId === \"string\") {\n      elem = getElementById(elemId);\n    } else {\n      elem = elemId;\n    }\n\n    const newElem: HTMLElement = elem.cloneNode(true) as HTMLElement;\n    if (elem.parentNode !== null) {\n      elem.parentNode.replaceChild(newElem, elem);\n    }\n\n    return newElem;\n  } catch (e) {\n    // tslint:disable-next-line:no-console\n    console.error(e);\n\n    return null;\n  }\n}\n","/**\n * Initialization metadata for all Stocks. This is used to generate the\n * stock parameter values upon a reset\n *\n * Some notes:\n *  - Megacorporations have better otlkMags\n *  - Higher volatility -> Bigger spread\n *  - Lower price -> Bigger spread\n *  - Share tx required for movement used for balancing\n */\nimport { StockSymbols } from \"./StockSymbols\";\nimport { IConstructorParams } from \"../Stock\";\nimport { LocationName } from \"../../Locations/data/LocationNames\";\n\nexport const InitStockMetadata: IConstructorParams[] = [\n  {\n    b: true,\n    initPrice: {\n      max: 28e3,\n      min: 17e3,\n    },\n    marketCap: 2.4e12,\n    mv: {\n      divisor: 100,\n      max: 50,\n      min: 40,\n    },\n    name: LocationName.AevumECorp,\n    otlkMag: 19,\n    spreadPerc: {\n      divisor: 10,\n      max: 5,\n      min: 1,\n    },\n    shareTxForMovement: {\n      max: 90e3,\n      min: 30e3,\n    },\n    symbol: StockSymbols[LocationName.AevumECorp],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 34e3,\n      min: 24e3,\n    },\n    marketCap: 2.4e12,\n    mv: {\n      divisor: 100,\n      max: 50,\n      min: 40,\n    },\n    name: LocationName.Sector12MegaCorp,\n    otlkMag: 19,\n    spreadPerc: {\n      divisor: 10,\n      max: 5,\n      min: 1,\n    },\n    shareTxForMovement: {\n      max: 90e3,\n      min: 30e3,\n    },\n    symbol: StockSymbols[LocationName.Sector12MegaCorp],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 25e3,\n      min: 12e3,\n    },\n    marketCap: 1.6e12,\n    mv: {\n      divisor: 100,\n      max: 80,\n      min: 70,\n    },\n    name: LocationName.Sector12BladeIndustries,\n    otlkMag: 13,\n    spreadPerc: {\n      divisor: 10,\n      max: 6,\n      min: 1,\n    },\n    shareTxForMovement: {\n      max: 90e3,\n      min: 30e3,\n    },\n    symbol: StockSymbols[LocationName.Sector12BladeIndustries],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 25e3,\n      min: 10e3,\n    },\n    marketCap: 1.5e12,\n    mv: {\n      divisor: 100,\n      max: 75,\n      min: 65,\n    },\n    name: LocationName.AevumClarkeIncorporated,\n    otlkMag: 12,\n    spreadPerc: {\n      divisor: 10,\n      max: 5,\n      min: 1,\n    },\n    shareTxForMovement: {\n      max: 90e3,\n      min: 30e3,\n    },\n    symbol: StockSymbols[LocationName.AevumClarkeIncorporated],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 43e3,\n      min: 32e3,\n    },\n    marketCap: 1.8e12,\n    mv: {\n      divisor: 100,\n      max: 70,\n      min: 60,\n    },\n    name: LocationName.VolhavenOmniTekIncorporated,\n    otlkMag: 12,\n    spreadPerc: {\n      divisor: 10,\n      max: 6,\n      min: 1,\n    },\n    shareTxForMovement: {\n      max: 90e3,\n      min: 30e3,\n    },\n    symbol: StockSymbols[LocationName.VolhavenOmniTekIncorporated],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 80e3,\n      min: 50e3,\n    },\n    marketCap: 2e12,\n    mv: {\n      divisor: 100,\n      max: 110,\n      min: 100,\n    },\n    name: LocationName.Sector12FourSigma,\n    otlkMag: 17,\n    spreadPerc: {\n      divisor: 10,\n      max: 10,\n      min: 1,\n    },\n    shareTxForMovement: {\n      max: 90e3,\n      min: 30e3,\n    },\n    symbol: StockSymbols[LocationName.Sector12FourSigma],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 28e3,\n      min: 16e3,\n    },\n    marketCap: 1.9e12,\n    mv: {\n      divisor: 100,\n      max: 85,\n      min: 75,\n    },\n    name: LocationName.ChongqingKuaiGongInternational,\n    otlkMag: 10,\n    spreadPerc: {\n      divisor: 10,\n      max: 7,\n      min: 1,\n    },\n    shareTxForMovement: {\n      max: 90e3,\n      min: 30e3,\n    },\n    symbol: StockSymbols[LocationName.ChongqingKuaiGongInternational],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 36e3,\n      min: 29e3,\n    },\n    marketCap: 2e12,\n    mv: {\n      divisor: 100,\n      max: 130,\n      min: 120,\n    },\n    name: LocationName.AevumFulcrumTechnologies,\n    otlkMag: 16,\n    spreadPerc: {\n      divisor: 10,\n      max: 10,\n      min: 1,\n    },\n    shareTxForMovement: {\n      max: 90e3,\n      min: 30e3,\n    },\n    symbol: StockSymbols[LocationName.AevumFulcrumTechnologies],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 25e3,\n      min: 20e3,\n    },\n    marketCap: 1.2e12,\n    mv: {\n      divisor: 100,\n      max: 90,\n      min: 80,\n    },\n    name: LocationName.IshimaStormTechnologies,\n    otlkMag: 7,\n    spreadPerc: {\n      divisor: 10,\n      max: 10,\n      min: 2,\n    },\n    shareTxForMovement: {\n      max: 108e3,\n      min: 36e3,\n    },\n    symbol: StockSymbols[LocationName.IshimaStormTechnologies],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 19e3,\n      min: 6e3,\n    },\n    marketCap: 900e9,\n    mv: {\n      divisor: 100,\n      max: 70,\n      min: 60,\n    },\n    name: LocationName.NewTokyoDefComm,\n    otlkMag: 10,\n    spreadPerc: {\n      divisor: 10,\n      max: 10,\n      min: 2,\n    },\n    shareTxForMovement: {\n      max: 108e3,\n      min: 36e3,\n    },\n    symbol: StockSymbols[LocationName.NewTokyoDefComm],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 18e3,\n      min: 10e3,\n    },\n    marketCap: 825e9,\n    mv: {\n      divisor: 100,\n      max: 65,\n      min: 55,\n    },\n    name: LocationName.VolhavenHeliosLabs,\n    otlkMag: 9,\n    spreadPerc: {\n      divisor: 10,\n      max: 10,\n      min: 2,\n    },\n    shareTxForMovement: {\n      max: 108e3,\n      min: 36e3,\n    },\n    symbol: StockSymbols[LocationName.VolhavenHeliosLabs],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 14e3,\n      min: 8e3,\n    },\n    marketCap: 1e12,\n    mv: {\n      divisor: 100,\n      max: 80,\n      min: 70,\n    },\n    name: LocationName.NewTokyoVitaLife,\n    otlkMag: 7,\n    spreadPerc: {\n      divisor: 10,\n      max: 10,\n      min: 2,\n    },\n    shareTxForMovement: {\n      max: 108e3,\n      min: 36e3,\n    },\n    symbol: StockSymbols[LocationName.NewTokyoVitaLife],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 24e3,\n      min: 12e3,\n    },\n    marketCap: 800e9,\n    mv: {\n      divisor: 100,\n      max: 70,\n      min: 60,\n    },\n    name: LocationName.Sector12IcarusMicrosystems,\n    otlkMag: 7.5,\n    spreadPerc: {\n      divisor: 10,\n      max: 10,\n      min: 3,\n    },\n    shareTxForMovement: {\n      max: 108e3,\n      min: 36e3,\n    },\n    symbol: StockSymbols[LocationName.Sector12IcarusMicrosystems],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 29e3,\n      min: 16e3,\n    },\n    marketCap: 900e9,\n    mv: {\n      divisor: 100,\n      max: 60,\n      min: 50,\n    },\n    name: LocationName.Sector12UniversalEnergy,\n    otlkMag: 10,\n    spreadPerc: {\n      divisor: 10,\n      max: 10,\n      min: 2,\n    },\n    shareTxForMovement: {\n      max: 108e3,\n      min: 36e3,\n    },\n    symbol: StockSymbols[LocationName.Sector12UniversalEnergy],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 17e3,\n      min: 8e3,\n    },\n    marketCap: 640e9,\n    mv: {\n      divisor: 100,\n      max: 65,\n      min: 55,\n    },\n    name: LocationName.AevumAeroCorp,\n    otlkMag: 6,\n    spreadPerc: {\n      divisor: 10,\n      max: 10,\n      min: 3,\n    },\n    shareTxForMovement: {\n      max: 126e3,\n      min: 42e3,\n    },\n    symbol: StockSymbols[LocationName.AevumAeroCorp],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 15e3,\n      min: 6e3,\n    },\n    marketCap: 600e9,\n    mv: {\n      divisor: 100,\n      max: 75,\n      min: 65,\n    },\n    name: LocationName.VolhavenOmniaCybersystems,\n    otlkMag: 4.5,\n    spreadPerc: {\n      divisor: 10,\n      max: 11,\n      min: 4,\n    },\n    shareTxForMovement: {\n      max: 126e3,\n      min: 42e3,\n    },\n    symbol: StockSymbols[LocationName.VolhavenOmniaCybersystems],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 28e3,\n      min: 14e3,\n    },\n    marketCap: 705e9,\n    mv: {\n      divisor: 100,\n      max: 80,\n      min: 70,\n    },\n    name: LocationName.ChongqingSolarisSpaceSystems,\n    otlkMag: 8.5,\n    spreadPerc: {\n      divisor: 10,\n      max: 12,\n      min: 4,\n    },\n    shareTxForMovement: {\n      max: 126e3,\n      min: 42e3,\n    },\n    symbol: StockSymbols[LocationName.ChongqingSolarisSpaceSystems],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 30e3,\n      min: 12e3,\n    },\n    marketCap: 695e9,\n    mv: {\n      divisor: 100,\n      max: 65,\n      min: 55,\n    },\n    name: LocationName.NewTokyoGlobalPharmaceuticals,\n    otlkMag: 10.5,\n    spreadPerc: {\n      divisor: 10,\n      max: 10,\n      min: 4,\n    },\n    shareTxForMovement: {\n      max: 126e3,\n      min: 42e3,\n    },\n    symbol: StockSymbols[LocationName.NewTokyoGlobalPharmaceuticals],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 27e3,\n      min: 15e3,\n    },\n    marketCap: 600e9,\n    mv: {\n      divisor: 100,\n      max: 80,\n      min: 70,\n    },\n    name: LocationName.IshimaNovaMedical,\n    otlkMag: 5,\n    spreadPerc: {\n      divisor: 10,\n      max: 11,\n      min: 4,\n    },\n    shareTxForMovement: {\n      max: 126e3,\n      min: 42e3,\n    },\n    symbol: StockSymbols[LocationName.IshimaNovaMedical],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 8.5e3,\n      min: 4e3,\n    },\n    marketCap: 450e9,\n    mv: {\n      divisor: 100,\n      max: 260,\n      min: 240,\n    },\n    name: LocationName.AevumWatchdogSecurity,\n    otlkMag: 1.5,\n    spreadPerc: {\n      divisor: 10,\n      max: 12,\n      min: 5,\n    },\n    shareTxForMovement: {\n      max: 54e3,\n      min: 12e3,\n    },\n    symbol: StockSymbols[LocationName.AevumWatchdogSecurity],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 8e3,\n      min: 4.5e3,\n    },\n    marketCap: 300e9,\n    mv: {\n      divisor: 100,\n      max: 135,\n      min: 115,\n    },\n    name: LocationName.VolhavenLexoCorp,\n    otlkMag: 6,\n    spreadPerc: {\n      divisor: 10,\n      max: 12,\n      min: 5,\n    },\n    shareTxForMovement: {\n      max: 108e3,\n      min: 36e3,\n    },\n    symbol: StockSymbols[LocationName.VolhavenLexoCorp],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 7e3,\n      min: 2e3,\n    },\n    marketCap: 180e9,\n    mv: {\n      divisor: 100,\n      max: 70,\n      min: 50,\n    },\n    name: LocationName.AevumRhoConstruction,\n    otlkMag: 1,\n    spreadPerc: {\n      divisor: 10,\n      max: 10,\n      min: 3,\n    },\n    shareTxForMovement: {\n      max: 126e3,\n      min: 60e3,\n    },\n    symbol: StockSymbols[LocationName.AevumRhoConstruction],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 8.5e3,\n      min: 4e3,\n    },\n    marketCap: 240e9,\n    mv: {\n      divisor: 100,\n      max: 205,\n      min: 175,\n    },\n    name: LocationName.Sector12AlphaEnterprises,\n    otlkMag: 10,\n    spreadPerc: {\n      divisor: 10,\n      max: 16,\n      min: 5,\n    },\n    shareTxForMovement: {\n      max: 90e3,\n      min: 30e3,\n    },\n    symbol: StockSymbols[LocationName.Sector12AlphaEnterprises],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 8e3,\n      min: 3e3,\n    },\n    marketCap: 200e9,\n    mv: {\n      divisor: 100,\n      max: 170,\n      min: 150,\n    },\n    name: LocationName.VolhavenSysCoreSecurities,\n    otlkMag: 3,\n    spreadPerc: {\n      divisor: 10,\n      max: 12,\n      min: 5,\n    },\n    shareTxForMovement: {\n      max: 90e3,\n      min: 15e3,\n    },\n    symbol: StockSymbols[LocationName.VolhavenSysCoreSecurities],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 6e3,\n      min: 1e3,\n    },\n    marketCap: 185e9,\n    mv: {\n      divisor: 100,\n      max: 100,\n      min: 80,\n    },\n    name: LocationName.VolhavenCompuTek,\n    otlkMag: 4,\n    spreadPerc: {\n      divisor: 10,\n      max: 12,\n      min: 4,\n    },\n    shareTxForMovement: {\n      max: 126e3,\n      min: 60e3,\n    },\n    symbol: StockSymbols[LocationName.VolhavenCompuTek],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 5e3,\n      min: 1e3,\n    },\n    marketCap: 58e9,\n    mv: {\n      divisor: 100,\n      max: 400,\n      min: 200,\n    },\n    name: LocationName.AevumNetLinkTechnologies,\n    otlkMag: 1,\n    spreadPerc: {\n      divisor: 10,\n      max: 20,\n      min: 5,\n    },\n    shareTxForMovement: {\n      max: 54e3,\n      min: 18e3,\n    },\n    symbol: StockSymbols[LocationName.AevumNetLinkTechnologies],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 8e3,\n      min: 1e3,\n    },\n    marketCap: 60e9,\n    mv: {\n      divisor: 100,\n      max: 110,\n      min: 90,\n    },\n    name: LocationName.IshimaOmegaSoftware,\n    otlkMag: 0.5,\n    spreadPerc: {\n      divisor: 10,\n      max: 13,\n      min: 4,\n    },\n    shareTxForMovement: {\n      max: 90e3,\n      min: 30e3,\n    },\n    symbol: StockSymbols[LocationName.IshimaOmegaSoftware],\n  },\n\n  {\n    b: false,\n    initPrice: {\n      max: 4.5e3,\n      min: 500,\n    },\n    marketCap: 45e9,\n    mv: {\n      divisor: 100,\n      max: 80,\n      min: 70,\n    },\n    name: LocationName.Sector12FoodNStuff,\n    otlkMag: 1,\n    spreadPerc: {\n      divisor: 10,\n      max: 10,\n      min: 6,\n    },\n    shareTxForMovement: {\n      max: 180e3,\n      min: 60e3,\n    },\n    symbol: StockSymbols[LocationName.Sector12FoodNStuff],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 3.5e3,\n      min: 1.5e3,\n    },\n    marketCap: 30e9,\n    mv: {\n      divisor: 100,\n      max: 275,\n      min: 100,\n    },\n    name: \"Sigma Cosmetics\",\n    otlkMag: 0,\n    spreadPerc: {\n      divisor: 10,\n      max: 14,\n      min: 6,\n    },\n    shareTxForMovement: {\n      max: 70e3,\n      min: 20e3,\n    },\n    symbol: StockSymbols[\"Sigma Cosmetics\"],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 1.5e3,\n      min: 250,\n    },\n    marketCap: 42e9,\n    mv: {\n      divisor: 100,\n      max: 350,\n      min: 200,\n    },\n    name: \"Joes Guns\",\n    otlkMag: 1,\n    spreadPerc: {\n      divisor: 10,\n      max: 14,\n      min: 6,\n    },\n    shareTxForMovement: {\n      max: 52e3,\n      min: 15e3,\n    },\n    symbol: StockSymbols[\"Joes Guns\"],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 1.5e3,\n      min: 250,\n    },\n    marketCap: 100e9,\n    mv: {\n      divisor: 100,\n      max: 175,\n      min: 120,\n    },\n    name: \"Catalyst Ventures\",\n    otlkMag: 13.5,\n    spreadPerc: {\n      divisor: 10,\n      max: 14,\n      min: 5,\n    },\n    shareTxForMovement: {\n      max: 72e3,\n      min: 24e3,\n    },\n    symbol: StockSymbols[\"Catalyst Ventures\"],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 30e3,\n      min: 15e3,\n    },\n    marketCap: 360e9,\n    mv: {\n      divisor: 100,\n      max: 80,\n      min: 70,\n    },\n    name: \"Microdyne Technologies\",\n    otlkMag: 8,\n    spreadPerc: {\n      divisor: 10,\n      max: 10,\n      min: 3,\n    },\n    shareTxForMovement: {\n      max: 216e3,\n      min: 90e3,\n    },\n    symbol: StockSymbols[\"Microdyne Technologies\"],\n  },\n\n  {\n    b: true,\n    initPrice: {\n      max: 24e3,\n      min: 12e3,\n    },\n    marketCap: 420e9,\n    mv: {\n      divisor: 100,\n      max: 70,\n      min: 50,\n    },\n    name: \"Titan Laboratories\",\n    otlkMag: 11,\n    spreadPerc: {\n      divisor: 10,\n      max: 10,\n      min: 2,\n    },\n    shareTxForMovement: {\n      max: 216e3,\n      min: 90e3,\n    },\n    symbol: StockSymbols[\"Titan Laboratories\"],\n  },\n];\n","/**\n * Metadata for constructing Location objects for all Locations\n * in the game\n */\nimport { CityName } from \"./CityNames\";\nimport { LocationName } from \"./LocationNames\";\nimport { IConstructorParams } from \"../Location\";\nimport { LocationType } from \"../LocationTypeEnum\";\n\nexport const LocationsMetadata: IConstructorParams[] = [\n  {\n    city: CityName.Aevum,\n    infiltrationData: {\n      maxClearanceLevel: 12,\n      startingSecurityLevel: 8.18,\n    },\n    name: LocationName.AevumAeroCorp,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Aevum,\n    infiltrationData: {\n      maxClearanceLevel: 15,\n      startingSecurityLevel: 8.19,\n    },\n    name: LocationName.AevumBachmanAndAssociates,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Aevum,\n    infiltrationData: {\n      maxClearanceLevel: 18,\n      startingSecurityLevel: 9.55,\n    },\n    name: LocationName.AevumClarkeIncorporated,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Aevum,\n    costMult: 3,\n    expMult: 2,\n    name: LocationName.AevumCrushFitnessGym,\n    types: [LocationType.Gym],\n  },\n  {\n    city: CityName.Aevum,\n    infiltrationData: {\n      maxClearanceLevel: 37,\n      startingSecurityLevel: 17.02,\n    },\n    name: LocationName.AevumECorp,\n    types: [LocationType.Company, LocationType.TechVendor],\n    techVendorMaxRam: 512,\n    techVendorMinRam: 128,\n  },\n  {\n    city: CityName.Aevum,\n    infiltrationData: {\n      maxClearanceLevel: 25,\n      startingSecurityLevel: 15.54,\n    },\n    name: LocationName.AevumFulcrumTechnologies,\n    types: [LocationType.Company, LocationType.TechVendor],\n    techVendorMaxRam: 1024,\n    techVendorMinRam: 256,\n  },\n  {\n    city: CityName.Aevum,\n    infiltrationData: {\n      maxClearanceLevel: 12,\n      startingSecurityLevel: 7.89,\n    },\n    name: LocationName.AevumGalacticCybersystems,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Aevum,\n    infiltrationData: {\n      maxClearanceLevel: 6,\n      startingSecurityLevel: 3.29,\n    },\n    name: LocationName.AevumNetLinkTechnologies,\n    types: [LocationType.Company, LocationType.TechVendor],\n    techVendorMaxRam: 64,\n    techVendorMinRam: 8,\n  },\n  {\n    city: CityName.Aevum,\n    infiltrationData: {\n      maxClearanceLevel: 6,\n      startingSecurityLevel: 5.35,\n    },\n    name: LocationName.AevumPolice,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Aevum,\n    infiltrationData: {\n      maxClearanceLevel: 5,\n      startingSecurityLevel: 5.02,\n    },\n    name: LocationName.AevumRhoConstruction,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Aevum,\n    costMult: 10,\n    expMult: 5,\n    name: LocationName.AevumSnapFitnessGym,\n    types: [LocationType.Gym],\n  },\n  {\n    city: CityName.Aevum,\n    costMult: 4,\n    expMult: 3,\n    name: LocationName.AevumSummitUniversity,\n    types: [LocationType.University],\n  },\n  {\n    city: CityName.Aevum,\n    infiltrationData: {\n      maxClearanceLevel: 7,\n      startingSecurityLevel: 5.85,\n    },\n    name: LocationName.AevumWatchdogSecurity,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Aevum,\n    name: LocationName.AevumCasino,\n    types: [LocationType.Casino],\n  },\n  {\n    city: CityName.Chongqing,\n    infiltrationData: {\n      maxClearanceLevel: 25,\n      startingSecurityLevel: 16.25,\n    },\n    name: LocationName.ChongqingKuaiGongInternational,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Chongqing,\n    infiltrationData: {\n      maxClearanceLevel: 18,\n      startingSecurityLevel: 12.59,\n    },\n    name: LocationName.ChongqingSolarisSpaceSystems,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Ishima,\n    infiltrationData: {\n      maxClearanceLevel: 12,\n      startingSecurityLevel: 5.02,\n    },\n    name: LocationName.IshimaNovaMedical,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Ishima,\n    infiltrationData: {\n      maxClearanceLevel: 10,\n      startingSecurityLevel: 3.2,\n    },\n    name: LocationName.IshimaOmegaSoftware,\n    types: [LocationType.Company, LocationType.TechVendor],\n    techVendorMaxRam: 128,\n    techVendorMinRam: 4,\n  },\n  {\n    city: CityName.Ishima,\n    infiltrationData: {\n      maxClearanceLevel: 25,\n      startingSecurityLevel: 5.38,\n    },\n    name: LocationName.IshimaStormTechnologies,\n    types: [LocationType.Company, LocationType.TechVendor],\n    techVendorMaxRam: 512,\n    techVendorMinRam: 32,\n  },\n  {\n    city: CityName.NewTokyo,\n    infiltrationData: {\n      maxClearanceLevel: 17,\n      startingSecurityLevel: 7.18,\n    },\n    name: LocationName.NewTokyoDefComm,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.NewTokyo,\n    infiltrationData: {\n      maxClearanceLevel: 20,\n      startingSecurityLevel: 5.9,\n    },\n    name: LocationName.NewTokyoGlobalPharmaceuticals,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.NewTokyo,\n    infiltrationData: {\n      maxClearanceLevel: 5,\n      startingSecurityLevel: 2.5,\n    },\n    name: LocationName.NewTokyoNoodleBar,\n    types: [LocationType.Company, LocationType.Special],\n  },\n  {\n    city: CityName.NewTokyo,\n    infiltrationData: {\n      maxClearanceLevel: 25,\n      startingSecurityLevel: 5.52,\n    },\n    name: LocationName.NewTokyoVitaLife,\n    types: [LocationType.Company, LocationType.Special],\n  },\n  {\n    city: CityName.Sector12,\n    infiltrationData: {\n      maxClearanceLevel: 10,\n      startingSecurityLevel: 3.62,\n    },\n    name: LocationName.Sector12AlphaEnterprises,\n    types: [LocationType.Company, LocationType.TechVendor],\n    techVendorMaxRam: 8,\n    techVendorMinRam: 2,\n  },\n  {\n    city: CityName.Sector12,\n    infiltrationData: {\n      maxClearanceLevel: 25,\n      startingSecurityLevel: 10.59,\n    },\n    name: LocationName.Sector12BladeIndustries,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Sector12,\n    name: LocationName.Sector12CIA,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Sector12,\n    infiltrationData: {\n      maxClearanceLevel: 15,\n      startingSecurityLevel: 4.66,\n    },\n    name: LocationName.Sector12CarmichaelSecurity,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Sector12,\n    name: LocationName.Sector12CityHall,\n    types: [LocationType.Special],\n  },\n  {\n    city: CityName.Sector12,\n    infiltrationData: {\n      maxClearanceLevel: 12,\n      startingSecurityLevel: 5.9,\n    },\n    name: LocationName.Sector12DeltaOne,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Sector12,\n    name: LocationName.Sector12FoodNStuff,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Sector12,\n    infiltrationData: {\n      maxClearanceLevel: 25,\n      startingSecurityLevel: 8.18,\n    },\n    name: LocationName.Sector12FourSigma,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Sector12,\n    infiltrationData: {\n      maxClearanceLevel: 17,\n      startingSecurityLevel: 6.02,\n    },\n    name: LocationName.Sector12IcarusMicrosystems,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Sector12,\n    expMult: 1,\n    costMult: 1,\n    name: LocationName.Sector12IronGym,\n    types: [LocationType.Gym],\n  },\n  {\n    city: CityName.Sector12,\n    infiltrationData: {\n      maxClearanceLevel: 5,\n      startingSecurityLevel: 3.13,\n    },\n    name: LocationName.Sector12JoesGuns,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Sector12,\n    infiltrationData: {\n      maxClearanceLevel: 31,\n      startingSecurityLevel: 16.36,\n    },\n    name: LocationName.Sector12MegaCorp,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Sector12,\n    name: LocationName.Sector12NSA,\n    types: [LocationType.Company, LocationType.Special],\n  },\n  {\n    city: CityName.Sector12,\n    costMult: 20,\n    expMult: 10,\n    name: LocationName.Sector12PowerhouseGym,\n    types: [LocationType.Gym],\n  },\n  {\n    city: CityName.Sector12,\n    costMult: 3,\n    expMult: 2,\n    name: LocationName.Sector12RothmanUniversity,\n    types: [LocationType.University],\n  },\n  {\n    city: CityName.Sector12,\n    infiltrationData: {\n      maxClearanceLevel: 12,\n      startingSecurityLevel: 5.9,\n    },\n    name: LocationName.Sector12UniversalEnergy,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Volhaven,\n    infiltrationData: {\n      maxClearanceLevel: 15,\n      startingSecurityLevel: 3.59,\n    },\n    name: LocationName.VolhavenCompuTek,\n    types: [LocationType.Company, LocationType.TechVendor],\n    techVendorMaxRam: 256,\n    techVendorMinRam: 8,\n  },\n  {\n    city: CityName.Volhaven,\n    infiltrationData: {\n      maxClearanceLevel: 18,\n      startingSecurityLevel: 7.28,\n    },\n    name: LocationName.VolhavenHeliosLabs,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Volhaven,\n    infiltrationData: {\n      maxClearanceLevel: 15,\n      startingSecurityLevel: 4.35,\n    },\n    name: LocationName.VolhavenLexoCorp,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Volhaven,\n    costMult: 7,\n    expMult: 4,\n    name: LocationName.VolhavenMilleniumFitnessGym,\n    types: [LocationType.Gym],\n  },\n  {\n    city: CityName.Volhaven,\n    infiltrationData: {\n      maxClearanceLevel: 50,\n      startingSecurityLevel: 8.53,\n    },\n    name: LocationName.VolhavenNWO,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Volhaven,\n    infiltrationData: {\n      maxClearanceLevel: 25,\n      startingSecurityLevel: 7.74,\n    },\n    name: LocationName.VolhavenOmniTekIncorporated,\n    types: [LocationType.Company, LocationType.TechVendor],\n    techVendorMaxRam: 1024,\n    techVendorMinRam: 128,\n  },\n  {\n    city: CityName.Volhaven,\n    infiltrationData: {\n      maxClearanceLevel: 22,\n      startingSecurityLevel: 6,\n    },\n    name: LocationName.VolhavenOmniaCybersystems,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Volhaven,\n    infiltrationData: {\n      maxClearanceLevel: 18,\n      startingSecurityLevel: 4.77,\n    },\n    name: LocationName.VolhavenSysCoreSecurities,\n    types: [LocationType.Company],\n  },\n  {\n    city: CityName.Volhaven,\n    costMult: 5,\n    expMult: 4,\n    name: LocationName.VolhavenZBInstituteOfTechnology,\n    types: [LocationType.University],\n  },\n  {\n    city: null,\n    name: LocationName.Hospital,\n    types: [LocationType.Hospital],\n  },\n  {\n    city: null,\n    name: LocationName.Slums,\n    types: [LocationType.Slums],\n  },\n  {\n    city: null,\n    name: LocationName.TravelAgency,\n    types: [LocationType.TravelAgency],\n  },\n  {\n    city: null,\n    name: LocationName.WorldStockExchange,\n    types: [LocationType.StockMarket],\n  },\n];\n","import React, { useState, useEffect } from \"react\";\n\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport ArrowForwardIos from \"@mui/icons-material/ArrowForwardIos\";\nimport ArrowBackIos from \"@mui/icons-material/ArrowBackIos\";\nimport { ITutorialEvents } from \"./ITutorialEvents\";\nimport { CopyableText } from \"../React/CopyableText\";\n\nimport ListItem from \"@mui/material/ListItem\";\nimport EqualizerIcon from \"@mui/icons-material/Equalizer\";\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport AccountTreeIcon from \"@mui/icons-material/AccountTree\";\nimport StorageIcon from \"@mui/icons-material/Storage\";\nimport LocationCityIcon from \"@mui/icons-material/LocationCity\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\n\nimport {\n  iTutorialPrevStep,\n  iTutorialNextStep,\n  ITutorial,\n  iTutorialSteps,\n  iTutorialEnd,\n} from \"../../InteractiveTutorial\";\n\ninterface IContent {\n  content: React.ReactElement;\n  canNext: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    textfield: {\n      borderBottom: \"1px solid \" + theme.palette.primary.main,\n    },\n    code: {\n      whiteSpace: \"pre\",\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n);\n\nexport function InteractiveTutorialRoot(): React.ReactElement {\n  const classes = useStyles();\n\n  const contents: { [number: string]: IContent | undefined } = {\n    [iTutorialSteps.Start as number]: {\n      content: (\n        <>\n          <Typography>\n            Welcome to Bitburner, a cyberpunk-themed incremental RPG! The game takes place in a dark, dystopian\n            future... The year is 2077...\n            <br />\n            <br />\n            This tutorial will show you the basics of the game. You may skip the tutorial at any time.\n          </Typography>\n        </>\n      ),\n      canNext: true,\n    },\n    [iTutorialSteps.GoToCharacterPage as number]: {\n      content: (\n        <>\n          <Typography>Let's start by heading to the Stats page. Click</Typography>\n          <ListItem>\n            <EqualizerIcon color={\"error\"} />\n            <Typography color={\"error\"}>Stats</Typography>\n          </ListItem>\n\n          <Typography>on the main navigation menu (left-hand side of the screen)</Typography>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.CharacterPage as number]: {\n      content: (\n        <>\n          <ListItem>\n            <EqualizerIcon color={\"primary\"} />\n            <Typography color={\"primary\"}>Stats</Typography>\n          </ListItem>\n          <Typography>\n            shows a lot of important information about your progress, such as your skills, money, and bonuses.\n          </Typography>\n        </>\n      ),\n      canNext: true,\n    },\n    [iTutorialSteps.CharacterGoToTerminalPage as number]: {\n      content: (\n        <>\n          <Typography>Let's head to your computer's terminal by clicking</Typography>\n          <ListItem>\n            <LastPageIcon color={\"error\"} />\n            <Typography color={\"error\"}>Terminal</Typography>\n          </ListItem>\n          <Typography>on the main navigation menu.</Typography>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.TerminalIntro as number]: {\n      content: (\n        <>\n          <ListItem>\n            <LastPageIcon color={\"primary\"} />\n            <Typography color={\"primary\"}>Terminal</Typography>\n          </ListItem>\n          <Typography>\n            is used to interface with your home computer as well as all of the other machines around the world.\n          </Typography>\n        </>\n      ),\n      canNext: true,\n    },\n    [iTutorialSteps.TerminalHelp as number]: {\n      content: (\n        <>\n          <Typography>Let's try it out. Start by entering</Typography>\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> help\"}</Typography>\n          <Typography>(Don't forget to press Enter after typing the command)</Typography>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.TerminalLs as number]: {\n      content: (\n        <>\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> help\"}</Typography>\n          <Typography>\n            displays a list of all available Terminal commands, how to use them, and a description of what they do.{\" \"}\n            <br />\n            <br />\n            Let's try another command. Enter\n          </Typography>\n\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> ls\"}</Typography>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.TerminalScan as number]: {\n      content: (\n        <>\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> ls\"}</Typography>\n          <Typography>\n            {\" \"}\n            is a basic command that shows files on the computer. Right now, it shows that you have a program called{\" \"}\n            NUKE.exe on your computer. We'll get to what this does later. <br />\n            <br />\n            Using your home computer's terminal, you can connect to other machines throughout the world. Let's do that\n            now by first entering\n          </Typography>\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> scan\"}</Typography>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.TerminalScanAnalyze1 as number]: {\n      content: (\n        <>\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> scan\"}</Typography>\n          <Typography>\n            shows all available network connections. In other words, it displays a list of all servers that can be\n            connected to from your current machine. A server is identified by its hostname. <br />\n            <br />\n            That's great and all, but there's so many servers. Which one should you go to?{\" \"}\n          </Typography>\n\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> scan-analyze\"}</Typography>\n          <Typography>gives some more detailed information about servers on the network. Try it now!</Typography>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.TerminalScanAnalyze2 as number]: {\n      content: (\n        <>\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> scan-analyze\"}</Typography>\n          <Typography>\n            shows more detailed information about each server that you can connect to (servers that are a distance of\n            one node away). <br />\n            <br /> It is also possible to run scan-analyze with a higher depth. Let's try a depth of two with the\n            following command:{\" \"}\n          </Typography>\n\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> scan-analyze 2\"}</Typography>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.TerminalConnect as number]: {\n      content: (\n        <>\n          <Typography>\n            Now you can see information about all servers that are up to two nodes away, as well as figure out how to\n            navigate to those servers through the network. You can only connect to a server that is one node away. To\n            connect to a machine, use\n          </Typography>\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> connect hostname\"}</Typography>\n\n          <Typography>From the results of </Typography>\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> scan-analyze 2\"}</Typography>\n\n          <Typography>\n            {\" \"}\n            we can see that the n00dles server is only one node away. Let's connect so it now using:\n          </Typography>\n\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> connect n00dles\"}</Typography>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.TerminalAnalyze as number]: {\n      content: (\n        <>\n          <Typography>\n            You are now connected to another machine! What can you do now? You can hack it!\n            <br />\n            <br /> In the year 2077, currency has become digital and decentralized. People and corporations store their\n            money on servers and computers. Using your hacking abilities, you can hack servers to steal money and gain\n            experience. <br />\n            <br />\n            Before you try to hack a server, you should run diagnostics using{\" \"}\n          </Typography>\n          <Typography classes={{ root: classes.textfield }}>{\"[n00dles ~/]> analyze\"}</Typography>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.TerminalNuke as number]: {\n      content: (\n        <>\n          <Typography>When </Typography>\n          <Typography classes={{ root: classes.textfield }}>{\"[n00dles ~/]> analyze\"}</Typography>\n\n          <Typography>\n            finishes running it will show useful information about hacking the server. <br />\n            <br /> For this server, the required hacking skill is only 1, which means you can hack it right now.\n            However, in order to hack a server you must first gain root access. The NUKE.exe program that we saw earlier\n            on your home computer is a virus that will grant you root access to a machine if there are enough open\n            ports.\n          </Typography>\n          <Typography classes={{ root: classes.textfield }}>{\"[n00dles ~/]> analyze\"}</Typography>\n\n          <Typography>\n            {\" \"}\n            shows that there do not need to be any open ports on this machine for the NUKE virus to work, so go ahead\n            and run the virus using{\" \"}\n          </Typography>\n          <Typography classes={{ root: classes.textfield }}>{\"[n00dles ~/]> run NUKE.exe\"}</Typography>\n\n          <Typography></Typography>\n        </>\n      ),\n      canNext: true,\n    },\n    [iTutorialSteps.TerminalManualHack as number]: {\n      content: (\n        <>\n          <Typography>You now have root access! You can hack the server using </Typography>\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> hack\"}</Typography>\n\n          <Typography> Try doing that now.</Typography>\n        </>\n      ),\n      canNext: true,\n    },\n    [iTutorialSteps.TerminalHackingMechanics as number]: {\n      content: (\n        <Typography>\n          You are now attempting to hack the server. Performing a hack takes time and only has a certain percentage\n          chance of success. This time and success chance is determined by a variety of factors, including your hacking\n          skill and the server's security level.\n          <br />\n          <br />\n          If your attempt to hack the server is successful, you will steal a certain percentage of the server's total\n          money. This percentage is affected by your hacking skill and the server's security level.\n          <br />\n          <br />\n          The amount of money on a server is not limitless. So, if you constantly hack a server and deplete its money,\n          then you will encounter diminishing returns in your hacking.\n        </Typography>\n      ),\n      canNext: true,\n    },\n    [iTutorialSteps.TerminalGoHome as number]: {\n      content: (\n        <>\n          <Typography>From any server you can get back home using</Typography>\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> home\"}</Typography>\n\n          <Typography>Let's head home before creating our first script!</Typography>\n        </>\n      ),\n      canNext: true,\n    },\n    [iTutorialSteps.TerminalCreateScript as number]: {\n      content: (\n        <>\n          <Typography>\n            Hacking is the core mechanic of the game and is necessary for progressing. However, you don't want to be\n            hacking manually the entire time. You can automate your hacking by writing scripts!\n            <br />\n            <br />\n            To create a new script or edit an existing one, you can use{\" \"}\n          </Typography>\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> nano\"}</Typography>\n\n          <Typography>Scripts must end with the .script extension. Let's make a script now by entering </Typography>\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> nano n00dles.script\"}</Typography>\n\n          <Typography>\n            after the hack command finishes running (Sidenote: Pressing ctrl + c will end a command like hack early)\n          </Typography>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.TerminalTypeScript as number]: {\n      content: (\n        <>\n          <Typography>\n            This is the script editor. You can use it to program your scripts. Scripts are written in a simplified\n            version of javascript. Copy and paste the following code into the script editor: <br />\n          </Typography>\n\n          <Typography classes={{ root: classes.code }}>\n            <CopyableText\n              value={`while(true) {\n  hack('n00dles');\n}`}\n            />\n          </Typography>\n          <Typography>\n            For anyone with basic programming experience, this code should be straightforward. This script will\n            continuously hack the n00dles server.\n            <br />\n            <br />\n            To save and close the script editor, press the button in the bottom left, or press ctrl + b.\n          </Typography>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.TerminalFree as number]: {\n      content: (\n        <>\n          <Typography>\n            Now we'll run the script. Scripts require a certain amount of RAM to run, and can be run on any machine\n            which you have root access to. Different servers have different amounts of RAM. You can also purchase more\n            RAM for your home server.\n            <br />\n            <br />\n            To check how much RAM is available on this machine, enter\n          </Typography>\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> free\"}</Typography>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.TerminalRunScript as number]: {\n      content: (\n        <>\n          <Typography>\n            We have 8GB of free RAM on this machine, which is enough to run our script. Let's run our script using\n          </Typography>\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> run n00dles.script\"}</Typography>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.TerminalGoToActiveScriptsPage as number]: {\n      content: (\n        <>\n          <Typography>\n            Your script is now running! It will continuously run in the background and will automatically stop if the\n            code ever completes (the n00dles.script will never complete because it runs an infinite loop). <br />\n            <br />\n            These scripts can passively earn you income and hacking experience. Your scripts will also earn money and\n            experience while you are offline, although at a slightly slower rate. <br />\n            <br />\n            Let's check out some statistics for our running scripts by clicking{\" \"}\n          </Typography>\n          <ListItem>\n            <StorageIcon color={\"error\"} />\n            <Typography color={\"error\"}>Active Scripts</Typography>\n          </ListItem>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.ActiveScriptsPage as number]: {\n      content: (\n        <>\n          <Typography>\n            This page displays information about all of your scripts that are running across every server. You can use\n            this to gauge how well your scripts are doing. Let's go back to\n          </Typography>\n          <ListItem>\n            <LastPageIcon color={\"error\"} />\n            <Typography color={\"error\"}>Terminal</Typography>\n          </ListItem>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.ActiveScriptsToTerminal as number]: {\n      content: (\n        <>\n          <Typography>\n            One last thing about scripts, each active script contains logs that detail what it's doing. We can check\n            these logs using the tail command. Do that now for the script we just ran by typing{\" \"}\n          </Typography>\n          <Typography classes={{ root: classes.textfield }}>{\"[home ~/]> tail n00dles.script\"}</Typography>\n        </>\n      ),\n      canNext: false,\n    },\n    [iTutorialSteps.TerminalTailScript as number]: {\n      content: (\n        <>\n          <Typography>\n            The log for this script won't show much right now (it might show nothing at all) because it just started\n            running...but check back again in a few minutes! <br />\n            <br />\n            This covers the basics of hacking. To learn more about writing scripts, select\n          </Typography>\n          <ListItem>\n            <HelpIcon color={\"primary\"} />\n            <Typography color={\"primary\"}>Tutorial</Typography>\n          </ListItem>\n          <Typography>\n            in the main navigation menu to look at the documentation. If you are an experienced JavaScript developer, I\n            would highly suggest you check out the section on NetscriptJS/Netscript 2.0, it's faster and more powerful.\n            <br />\n            <br />\n            For now, let's move on to something else!\n          </Typography>\n        </>\n      ),\n      canNext: true,\n    },\n    [iTutorialSteps.GoToHacknetNodesPage as number]: {\n      content: (\n        <>\n          <Typography>\n            Hacking is not the only way to earn money. One other way to passively earn money is by purchasing and\n            upgrading Hacknet Nodes. Let's go to\n          </Typography>\n          <ListItem>\n            <AccountTreeIcon color={\"error\"} />\n            <Typography color={\"error\"}>Hacknet</Typography>\n          </ListItem>\n          <Typography>through the main navigation menu now.</Typography>\n        </>\n      ),\n      canNext: true,\n    },\n    [iTutorialSteps.HacknetNodesIntroduction as number]: {\n      content: (\n        <Typography>\n          here you can purchase new Hacknet Nodes and upgrade your existing ones. Let's purchase a new one now.\n        </Typography>\n      ),\n      canNext: true,\n    },\n    [iTutorialSteps.HacknetNodesGoToWorldPage as number]: {\n      content: (\n        <>\n          <Typography>\n            You just purchased a Hacknet Node! This Hacknet Node will passively earn you money over time, both online\n            and offline. When you get enough money, you can upgrade your newly-purchased Hacknet Node below.\n            <br />\n            <br />\n            Let's go to\n          </Typography>\n          <ListItem>\n            <LocationCityIcon color={\"error\"} />\n            <Typography color={\"error\"}>City</Typography>\n          </ListItem>\n        </>\n      ),\n      canNext: true,\n    },\n    [iTutorialSteps.WorldDescription as number]: {\n      content: (\n        <>\n          <Typography>\n            This page lists all of the different locations you can currently travel to. Each location has something that\n            you can do. There's a lot of content out in the world, make sure you explore and discover!\n            <br />\n            <br />\n            Lastly, click on\n          </Typography>\n          <ListItem>\n            <HelpIcon color={\"error\"} />\n            <Typography color={\"error\"}>Tutorial</Typography>\n          </ListItem>\n        </>\n      ),\n      canNext: true,\n    },\n    [iTutorialSteps.TutorialPageInfo as number]: {\n      content: (\n        <Typography>\n          This page contains a lot of different documentation about the game's content and mechanics. I know it's a lot,\n          but I highly suggest you read (or at least skim) through this before you start playing . That's the end of the\n          tutorial. Hope you enjoy the game!\n        </Typography>\n      ),\n      canNext: true,\n    },\n    [iTutorialSteps.End as number]: {\n      content: <Typography></Typography>,\n      canNext: true,\n    },\n  };\n\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    return ITutorialEvents.subscribe(rerender);\n  }, []);\n  const step = ITutorial.currStep;\n  const content = contents[step];\n  if (content === undefined) throw new Error(\"error in the tutorial\");\n  return (\n    <Paper square sx={{ maxWidth: \"70vw\", p: 2 }}>\n      {content.content}\n      {step !== iTutorialSteps.TutorialPageInfo && (\n        <>\n          <IconButton onClick={iTutorialPrevStep} aria-label=\"previous\">\n            <ArrowBackIos />\n          </IconButton>\n          {content.canNext && (\n            <IconButton onClick={iTutorialNextStep} aria-label=\"next\">\n              <ArrowForwardIos />\n            </IconButton>\n          )}\n        </>\n      )}\n      <br />\n      <br />\n      <Button onClick={iTutorialEnd}>\n        {step !== iTutorialSteps.TutorialPageInfo ? \"SKIP TUTORIAL\" : \"FINISH TUTORIAL\"}\n      </Button>\n    </Paper>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Fab from \"@mui/material/Fab\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport { use } from \"../Context\";\nimport { Page } from \"../Router\";\n\nconst useStyles = makeStyles({\n  nobackground: {\n    backgroundColor: \"#0000\",\n  },\n});\n\ninterface IProps {\n  children: JSX.Element[] | JSX.Element | React.ReactElement[] | React.ReactElement;\n}\n\nexport function Overview({ children }: IProps): React.ReactElement {\n  const [open, setOpen] = useState(true);\n  const classes = useStyles();\n  const router = use.Router();\n  if (router.page() === Page.BitVerse || router.page() === Page.HackingMission || router.page() === Page.Loading)\n    return <></>;\n  let icon;\n  if (open) {\n    icon = <VisibilityOffIcon color=\"primary\" />;\n  } else {\n    icon = <VisibilityIcon color=\"primary\" />;\n  }\n  return (\n    <div style={{ position: \"fixed\", top: 0, right: 0, zIndex: 1500 }}>\n      <Box display=\"flex\" justifyContent=\"flex-end\" flexDirection={\"column\"}>\n        <Collapse in={open}>{children}</Collapse>\n        <Box display=\"flex\" justifyContent=\"flex-end\">\n          <Fab classes={{ root: classes.nobackground }} onClick={() => setOpen((old) => !old)}>\n            {icon}\n          </Fab>\n        </Box>\n      </Box>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { styled, Theme, CSSObject } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Typography from \"@mui/material/Typography\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Badge from \"@mui/material/Badge\";\n\nimport ComputerIcon from \"@mui/icons-material/Computer\";\nimport LastPageIcon from \"@mui/icons-material/LastPage\"; // Terminal\nimport CreateIcon from \"@mui/icons-material/Create\"; // Create Script\nimport StorageIcon from \"@mui/icons-material/Storage\"; // Active Scripts\nimport BugReportIcon from \"@mui/icons-material/BugReport\"; // Create Program\nimport EqualizerIcon from \"@mui/icons-material/Equalizer\"; // Stats\nimport ContactsIcon from \"@mui/icons-material/Contacts\"; // Factions\nimport DoubleArrowIcon from \"@mui/icons-material/DoubleArrow\"; // Augmentations\nimport AccountTreeIcon from \"@mui/icons-material/AccountTree\"; // Hacknet\nimport PeopleAltIcon from \"@mui/icons-material/PeopleAlt\"; // Sleeves\nimport LocationCityIcon from \"@mui/icons-material/LocationCity\"; // City\nimport AirplanemodeActiveIcon from \"@mui/icons-material/AirplanemodeActive\"; // Travel\nimport WorkIcon from \"@mui/icons-material/Work\"; // Job\nimport TrendingUpIcon from \"@mui/icons-material/TrendingUp\"; // Stock Market\nimport FormatBoldIcon from \"@mui/icons-material/FormatBold\"; // Bladeburner\nimport BusinessIcon from \"@mui/icons-material/Business\"; // Corp\nimport SportsMmaIcon from \"@mui/icons-material/SportsMma\"; // Gang\nimport CheckIcon from \"@mui/icons-material/Check\"; // Milestones\nimport HelpIcon from \"@mui/icons-material/Help\"; // Tutorial\nimport SettingsIcon from \"@mui/icons-material/Settings\"; // options\nimport DeveloperBoardIcon from \"@mui/icons-material/DeveloperBoard\"; // Dev\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\nimport PublicIcon from \"@mui/icons-material/Public\";\nimport LiveHelpIcon from \"@mui/icons-material/LiveHelp\";\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport { IRouter, Page } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { CONSTANTS } from \"../../Constants\";\nimport { iTutorialSteps, iTutorialNextStep, ITutorial } from \"../../InteractiveTutorial\";\nimport { getAvailableCreatePrograms } from \"../../Programs/ProgramHelpers\";\nimport { Settings } from \"../../Settings/Settings\";\nimport { redPillFlag } from \"../../RedPill\";\n\nimport { inMission } from \"../../Missions\";\nimport { KEY } from \"../../utils/helpers/keyCodes\";\n\nconst openedMixin = (theme: Theme): CSSObject => ({\n  width: theme.spacing(31),\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme: Theme): CSSObject => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(2)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(7)} + 1px)`,\n  },\n});\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== \"open\" })(({ theme, open }) => ({\n  width: theme.spacing(31),\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && {\n    ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme),\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme),\n  }),\n}));\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    active: {\n      borderLeft: \"3px solid \" + theme.palette.primary.main,\n    },\n    listitem: {},\n  }),\n);\n\ninterface IProps {\n  player: IPlayer;\n  router: IRouter;\n  page: Page;\n}\n\nexport function SidebarRoot(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    const id = setInterval(rerender, 200);\n    return () => clearInterval(id);\n  }, []);\n\n  const [hackingOpen, setHackingOpen] = useState(true);\n  const [characterOpen, setCharacterOpen] = useState(true);\n  const [worldOpen, setWorldOpen] = useState(true);\n  const [helpOpen, setHelpOpen] = useState(true);\n\n  const flashTerminal =\n    ITutorial.currStep === iTutorialSteps.CharacterGoToTerminalPage ||\n    ITutorial.currStep === iTutorialSteps.ActiveScriptsPage;\n\n  const flashStats = ITutorial.currStep === iTutorialSteps.GoToCharacterPage;\n\n  const flashActiveScripts = ITutorial.currStep === iTutorialSteps.TerminalGoToActiveScriptsPage;\n\n  const flashHacknet = ITutorial.currStep === iTutorialSteps.GoToHacknetNodesPage;\n\n  const flashCity = ITutorial.currStep === iTutorialSteps.HacknetNodesGoToWorldPage;\n\n  const flashTutorial = ITutorial.currStep === iTutorialSteps.WorldDescription;\n\n  const augmentationCount = props.player.queuedAugmentations.length;\n  const invitationsCount = props.player.factionInvitations.length;\n  const programCount = getAvailableCreatePrograms(props.player).length;\n  const canCreateProgram =\n    programCount > 0 ||\n    props.player.augmentations.length > 0 ||\n    props.player.queuedAugmentations.length > 0 ||\n    props.player.sourceFiles.length > 0;\n\n  const canOpenFactions =\n    props.player.factionInvitations.length > 0 ||\n    props.player.factions.length > 0 ||\n    props.player.augmentations.length > 0 ||\n    props.player.queuedAugmentations.length > 0 ||\n    props.player.sourceFiles.length > 0;\n\n  const canOpenAugmentations =\n    props.player.augmentations.length > 0 ||\n    props.player.queuedAugmentations.length > 0 ||\n    props.player.sourceFiles.length > 0;\n\n  const canOpenSleeves = props.player.sleeves.length > 0;\n\n  // TODO(hydroflame): these should not as any but right now the def is that it\n  // can only be defined;\n  const canCorporation = !!(props.player.corporation as any);\n  const canGang = !!(props.player.gang as any);\n  const canJob = props.player.companyName !== \"\";\n  const canStockMarket = props.player.hasWseAccount;\n  const canBladeburner = !!(props.player.bladeburner as any);\n\n  function clickTerminal(): void {\n    props.router.toTerminal();\n    if (flashTerminal) iTutorialNextStep();\n  }\n\n  function clickCreateScripts(): void {\n    props.router.toScriptEditor();\n  }\n\n  function clickStats(): void {\n    props.router.toStats();\n    if (flashStats) iTutorialNextStep();\n  }\n\n  function clickActiveScripts(): void {\n    props.router.toActiveScripts();\n    if (flashActiveScripts) iTutorialNextStep();\n  }\n\n  function clickCreateProgram(): void {\n    props.router.toCreateProgram();\n  }\n\n  function clickFactions(): void {\n    props.router.toFactions();\n  }\n\n  function clickAugmentations(): void {\n    props.router.toAugmentations();\n  }\n\n  function clickSleeves(): void {\n    props.router.toSleeves();\n  }\n\n  function clickHacknet(): void {\n    props.router.toHacknetNodes();\n    if (flashHacknet) iTutorialNextStep();\n  }\n\n  function clickCity(): void {\n    props.router.toCity();\n    if (flashCity) iTutorialNextStep();\n  }\n\n  function clickTravel(): void {\n    props.router.toTravel();\n  }\n\n  function clickJob(): void {\n    props.router.toJob();\n  }\n\n  function clickStockMarket(): void {\n    props.router.toStockMarket();\n  }\n\n  function clickBladeburner(): void {\n    props.router.toBladeburner();\n  }\n\n  function clickCorp(): void {\n    props.router.toCorporation();\n  }\n\n  function clickGang(): void {\n    props.router.toGang();\n  }\n\n  function clickTutorial(): void {\n    props.router.toTutorial();\n    if (flashTutorial) iTutorialNextStep();\n  }\n\n  function clickMilestones(): void {\n    props.router.toMilestones();\n  }\n  function clickOptions(): void {\n    props.router.toGameOptions();\n  }\n\n  function clickDev(): void {\n    props.router.toDevMenu();\n  }\n\n  useEffect(() => {\n    // Shortcuts to navigate through the game\n    //  Alt-t - Terminal\n    //  Alt-c - Character\n    //  Alt-e - Script editor\n    //  Alt-s - Active scripts\n    //  Alt-h - Hacknet Nodes\n    //  Alt-w - City\n    //  Alt-j - Job\n    //  Alt-r - Travel Agency of current city\n    //  Alt-p - Create program\n    //  Alt-f - Factions\n    //  Alt-a - Augmentations\n    //  Alt-u - Tutorial\n    //  Alt-o - Options\n    function handleShortcuts(this: Document, event: KeyboardEvent): any {\n      if (Settings.DisableHotkeys) return;\n      if (props.player.isWorking || redPillFlag || inMission) return;\n      if (event.keyCode == KEY.T && event.altKey) {\n        event.preventDefault();\n        clickTerminal();\n      } else if (event.keyCode === KEY.C && event.altKey) {\n        event.preventDefault();\n        clickStats();\n      } else if (event.keyCode === KEY.E && event.altKey) {\n        event.preventDefault();\n        clickCreateScripts();\n      } else if (event.keyCode === KEY.S && event.altKey) {\n        event.preventDefault();\n        clickActiveScripts();\n      } else if (event.keyCode === KEY.H && event.altKey) {\n        event.preventDefault();\n        clickHacknet();\n      } else if (event.keyCode === KEY.W && event.altKey) {\n        event.preventDefault();\n        clickCity();\n      } else if (event.keyCode === KEY.J && event.altKey) {\n        event.preventDefault();\n        clickJob();\n      } else if (event.keyCode === KEY.R && event.altKey) {\n        event.preventDefault();\n        clickTravel();\n      } else if (event.keyCode === KEY.P && event.altKey) {\n        event.preventDefault();\n        clickCreateProgram();\n      } else if (event.keyCode === KEY.F && event.altKey) {\n        if (props.page == Page.Terminal && Settings.EnableBashHotkeys) {\n          return;\n        }\n        event.preventDefault();\n        clickFactions();\n      } else if (event.keyCode === KEY.A && event.altKey) {\n        event.preventDefault();\n        clickAugmentations();\n      } else if (event.keyCode === KEY.U && event.altKey) {\n        event.preventDefault();\n        clickTutorial();\n      } else if (event.keyCode === KEY.B && event.altKey) {\n        event.preventDefault();\n        clickBladeburner();\n      } else if (event.keyCode === KEY.G && event.altKey) {\n        event.preventDefault();\n        clickGang();\n      }\n      // if (event.keyCode === KEY.O && event.altKey) {\n      //   event.preventDefault();\n      //   gameOptionsBoxOpen();\n      // }\n    }\n\n    document.addEventListener(\"keypress\", handleShortcuts);\n    return () => document.removeEventListener(\"keypress\", handleShortcuts);\n  }, []);\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n  const toggleDrawer = (): void => setOpen((old) => !old);\n  return (\n    <Drawer open={open} anchor=\"left\" variant=\"permanent\">\n      <ListItem classes={{ root: classes.listitem }} button onClick={toggleDrawer}>\n        <ListItemIcon>\n          {!open ? <ChevronRightIcon color=\"primary\" /> : <ChevronLeftIcon color=\"primary\" />}\n        </ListItemIcon>\n        <ListItemText primary={<Typography>Bitburner v{CONSTANTS.Version}</Typography>} />\n      </ListItem>\n      <Divider />\n      <List>\n        <ListItem classes={{ root: classes.listitem }} button onClick={() => setHackingOpen((old) => !old)}>\n          <ListItemIcon>\n            <ComputerIcon color=\"primary\" />\n          </ListItemIcon>\n          <ListItemText primary={<Typography>Hacking</Typography>} />\n          {hackingOpen ? <ExpandLessIcon color=\"primary\" /> : <ExpandMoreIcon color=\"primary\" />}\n        </ListItem>\n        <Collapse in={hackingOpen} timeout=\"auto\" unmountOnExit>\n          <List>\n            <ListItem\n              classes={{ root: classes.listitem }}\n              button\n              key={\"Terminal\"}\n              className={clsx({\n                [classes.active]: props.page === Page.Terminal,\n              })}\n              onClick={clickTerminal}\n            >\n              <ListItemIcon>\n                <LastPageIcon\n                  color={flashTerminal ? \"error\" : props.page !== Page.Terminal ? \"secondary\" : \"primary\"}\n                />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography color={flashTerminal ? \"error\" : props.page !== Page.Terminal ? \"secondary\" : \"primary\"}>\n                  Terminal\n                </Typography>\n              </ListItemText>\n            </ListItem>\n            <ListItem\n              classes={{ root: classes.listitem }}\n              button\n              key={\"Create Scripts\"}\n              className={clsx({\n                [classes.active]: props.page === Page.CreateScript,\n              })}\n              onClick={clickCreateScripts}\n            >\n              <ListItemIcon>\n                <CreateIcon color={props.page !== Page.CreateScript ? \"secondary\" : \"primary\"} />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography color={props.page !== Page.CreateScript ? \"secondary\" : \"primary\"}>\n                  Create Script\n                </Typography>\n              </ListItemText>\n            </ListItem>\n            <ListItem\n              classes={{ root: classes.listitem }}\n              button\n              key={\"Active Scripts\"}\n              className={clsx({\n                [classes.active]: props.page === Page.ActiveScripts,\n              })}\n              onClick={clickActiveScripts}\n            >\n              <ListItemIcon>\n                <StorageIcon\n                  color={flashActiveScripts ? \"error\" : props.page !== Page.ActiveScripts ? \"secondary\" : \"primary\"}\n                />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography\n                  color={flashActiveScripts ? \"error\" : props.page !== Page.ActiveScripts ? \"secondary\" : \"primary\"}\n                >\n                  Active Scripts\n                </Typography>\n              </ListItemText>\n            </ListItem>\n            {canCreateProgram && (\n              <ListItem\n                button\n                key={\"Create Program\"}\n                className={clsx({\n                  [classes.active]: props.page === Page.CreateProgram,\n                })}\n                onClick={clickCreateProgram}\n              >\n                <ListItemIcon>\n                  <Badge badgeContent={programCount > 0 ? programCount : undefined} color=\"error\">\n                    <BugReportIcon color={props.page !== Page.CreateProgram ? \"secondary\" : \"primary\"} />\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText>\n                  <Typography color={props.page !== Page.CreateProgram ? \"secondary\" : \"primary\"}>\n                    Create Program\n                  </Typography>\n                </ListItemText>\n              </ListItem>\n            )}\n          </List>\n        </Collapse>\n\n        <Divider />\n        <ListItem classes={{ root: classes.listitem }} button onClick={() => setCharacterOpen((old) => !old)}>\n          <ListItemIcon>\n            <AccountBoxIcon color=\"primary\" />\n          </ListItemIcon>\n          <ListItemText primary={<Typography>Character</Typography>} />\n          {characterOpen ? <ExpandLessIcon color=\"primary\" /> : <ExpandMoreIcon color=\"primary\" />}\n        </ListItem>\n        <Collapse in={characterOpen} timeout=\"auto\" unmountOnExit>\n          <ListItem\n            button\n            key={\"Stats\"}\n            className={clsx({\n              [classes.active]: props.page === Page.Stats,\n            })}\n            onClick={clickStats}\n          >\n            <ListItemIcon>\n              <EqualizerIcon color={flashStats ? \"error\" : props.page !== Page.Stats ? \"secondary\" : \"primary\"} />\n            </ListItemIcon>\n            <ListItemText>\n              <Typography color={flashStats ? \"error\" : props.page !== Page.Stats ? \"secondary\" : \"primary\"}>\n                Stats\n              </Typography>\n            </ListItemText>\n          </ListItem>\n          {canOpenFactions && (\n            <ListItem\n              classes={{ root: classes.listitem }}\n              button\n              key={\"Factions\"}\n              className={clsx({\n                [classes.active]: [Page.Factions, Page.Faction].includes(props.page),\n              })}\n              onClick={clickFactions}\n            >\n              <ListItemIcon>\n                <Badge badgeContent={invitationsCount !== 0 ? invitationsCount : undefined} color=\"error\">\n                  <ContactsIcon color={![Page.Factions, Page.Faction].includes(props.page) ? \"secondary\" : \"primary\"} />\n                </Badge>\n              </ListItemIcon>\n              <ListItemText>\n                <Typography color={![Page.Factions, Page.Faction].includes(props.page) ? \"secondary\" : \"primary\"}>\n                  Factions\n                </Typography>\n              </ListItemText>\n            </ListItem>\n          )}\n          {canOpenAugmentations && (\n            <ListItem\n              classes={{ root: classes.listitem }}\n              button\n              key={\"Augmentations\"}\n              className={clsx({\n                [classes.active]: props.page === Page.Augmentations,\n              })}\n              onClick={clickAugmentations}\n            >\n              <ListItemIcon>\n                <Badge badgeContent={augmentationCount !== 0 ? augmentationCount : undefined} color=\"error\">\n                  <DoubleArrowIcon\n                    style={{ transform: \"rotate(-90deg)\" }}\n                    color={props.page !== Page.Augmentations ? \"secondary\" : \"primary\"}\n                  />\n                </Badge>\n              </ListItemIcon>\n              <ListItemText>\n                <Typography color={props.page !== Page.Augmentations ? \"secondary\" : \"primary\"}>\n                  Augmentations\n                </Typography>\n              </ListItemText>\n            </ListItem>\n          )}\n          <ListItem\n            button\n            key={\"Hacknet\"}\n            className={clsx({\n              [classes.active]: props.page === Page.Hacknet,\n            })}\n            onClick={clickHacknet}\n          >\n            <ListItemIcon>\n              <AccountTreeIcon color={flashHacknet ? \"error\" : props.page !== Page.Hacknet ? \"secondary\" : \"primary\"} />\n            </ListItemIcon>\n            <ListItemText>\n              <Typography color={flashHacknet ? \"error\" : props.page !== Page.Hacknet ? \"secondary\" : \"primary\"}>\n                Hacknet\n              </Typography>\n            </ListItemText>\n          </ListItem>\n          {canOpenSleeves && (\n            <ListItem\n              classes={{ root: classes.listitem }}\n              button\n              key={\"Sleeves\"}\n              className={clsx({\n                [classes.active]: props.page === Page.Sleeves,\n              })}\n              onClick={clickSleeves}\n            >\n              <ListItemIcon>\n                <PeopleAltIcon color={props.page !== Page.Sleeves ? \"secondary\" : \"primary\"} />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography color={props.page !== Page.Sleeves ? \"secondary\" : \"primary\"}>Sleeves</Typography>\n              </ListItemText>\n            </ListItem>\n          )}\n        </Collapse>\n\n        <Divider />\n        <ListItem classes={{ root: classes.listitem }} button onClick={() => setWorldOpen((old) => !old)}>\n          <ListItemIcon>\n            <PublicIcon color=\"primary\" />\n          </ListItemIcon>\n          <ListItemText primary={<Typography>World</Typography>} />\n          {worldOpen ? <ExpandLessIcon color=\"primary\" /> : <ExpandMoreIcon color=\"primary\" />}\n        </ListItem>\n        <Collapse in={worldOpen} timeout=\"auto\" unmountOnExit>\n          <ListItem\n            button\n            key={\"City\"}\n            className={clsx({\n              [classes.active]:\n                props.page === Page.City || props.page === Page.Resleeves || props.page === Page.Location,\n            })}\n            onClick={clickCity}\n          >\n            <ListItemIcon>\n              <LocationCityIcon color={flashCity ? \"error\" : props.page !== Page.City ? \"secondary\" : \"primary\"} />\n            </ListItemIcon>\n            <ListItemText>\n              <Typography color={flashCity ? \"error\" : props.page !== Page.City ? \"secondary\" : \"primary\"}>\n                City\n              </Typography>\n            </ListItemText>\n          </ListItem>\n          <ListItem\n            button\n            key={\"Travel\"}\n            className={clsx({\n              [classes.active]: props.page === Page.Travel,\n            })}\n            onClick={clickTravel}\n          >\n            <ListItemIcon>\n              <AirplanemodeActiveIcon color={props.page !== Page.Travel ? \"secondary\" : \"primary\"} />\n            </ListItemIcon>\n            <ListItemText>\n              <Typography color={props.page !== Page.Travel ? \"secondary\" : \"primary\"}>Travel</Typography>\n            </ListItemText>\n          </ListItem>\n          {canJob && (\n            <ListItem\n              classes={{ root: classes.listitem }}\n              button\n              key={\"Job\"}\n              className={clsx({\n                [classes.active]: props.page === Page.Job,\n              })}\n              onClick={clickJob}\n            >\n              <ListItemIcon>\n                <WorkIcon color={props.page !== Page.Job ? \"secondary\" : \"primary\"} />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography color={props.page !== Page.Job ? \"secondary\" : \"primary\"}>Job</Typography>\n              </ListItemText>\n            </ListItem>\n          )}\n          {canStockMarket && (\n            <ListItem\n              classes={{ root: classes.listitem }}\n              button\n              key={\"Stock Market\"}\n              className={clsx({\n                [classes.active]: props.page === Page.StockMarket,\n              })}\n              onClick={clickStockMarket}\n            >\n              <ListItemIcon>\n                <TrendingUpIcon color={props.page !== Page.StockMarket ? \"secondary\" : \"primary\"} />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography color={props.page !== Page.StockMarket ? \"secondary\" : \"primary\"}>Stock Market</Typography>\n              </ListItemText>\n            </ListItem>\n          )}\n          {canBladeburner && (\n            <ListItem\n              classes={{ root: classes.listitem }}\n              button\n              key={\"Bladeburner\"}\n              className={clsx({\n                [classes.active]: props.page === Page.Bladeburner,\n              })}\n              onClick={clickBladeburner}\n            >\n              <ListItemIcon>\n                <FormatBoldIcon color={props.page !== Page.Bladeburner ? \"secondary\" : \"primary\"} />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography color={props.page !== Page.Bladeburner ? \"secondary\" : \"primary\"}>Bladeburner</Typography>\n              </ListItemText>\n            </ListItem>\n          )}\n          {canCorporation && (\n            <ListItem\n              classes={{ root: classes.listitem }}\n              button\n              key={\"Corp\"}\n              className={clsx({\n                [classes.active]: props.page === Page.Corporation,\n              })}\n              onClick={clickCorp}\n            >\n              <ListItemIcon>\n                <BusinessIcon color={props.page !== Page.Corporation ? \"secondary\" : \"primary\"} />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography color={props.page !== Page.Corporation ? \"secondary\" : \"primary\"}>Corp</Typography>\n              </ListItemText>\n            </ListItem>\n          )}\n          {canGang && (\n            <ListItem\n              classes={{ root: classes.listitem }}\n              button\n              key={\"Gang\"}\n              className={clsx({\n                [classes.active]: props.page === Page.Gang,\n              })}\n              onClick={clickGang}\n            >\n              <ListItemIcon>\n                <SportsMmaIcon color={props.page !== Page.Gang ? \"secondary\" : \"primary\"} />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography color={props.page !== Page.Gang ? \"secondary\" : \"primary\"}>Gang</Typography>\n              </ListItemText>\n            </ListItem>\n          )}\n        </Collapse>\n\n        <Divider />\n        <ListItem classes={{ root: classes.listitem }} button onClick={() => setHelpOpen((old) => !old)}>\n          <ListItemIcon>\n            <LiveHelpIcon color=\"primary\" />\n          </ListItemIcon>\n          <ListItemText primary={<Typography>Help</Typography>} />\n          {helpOpen ? <ExpandLessIcon color=\"primary\" /> : <ExpandMoreIcon color=\"primary\" />}\n        </ListItem>\n        <Collapse in={helpOpen} timeout=\"auto\" unmountOnExit>\n          <ListItem\n            button\n            key={\"Milestones\"}\n            className={clsx({\n              [classes.active]: props.page === Page.Milestones,\n            })}\n            onClick={clickMilestones}\n          >\n            <ListItemIcon>\n              <CheckIcon color={props.page !== Page.Milestones ? \"secondary\" : \"primary\"} />\n            </ListItemIcon>\n            <ListItemText>\n              <Typography color={props.page !== Page.Milestones ? \"secondary\" : \"primary\"}>Milestones</Typography>\n            </ListItemText>\n          </ListItem>\n          <ListItem\n            button\n            key={\"Tutorial\"}\n            className={clsx({\n              [classes.active]: props.page === Page.Tutorial,\n            })}\n            onClick={clickTutorial}\n          >\n            <ListItemIcon>\n              <HelpIcon color={flashTutorial ? \"error\" : props.page !== Page.Tutorial ? \"secondary\" : \"primary\"} />\n            </ListItemIcon>\n            <ListItemText>\n              <Typography color={flashTutorial ? \"error\" : props.page !== Page.Tutorial ? \"secondary\" : \"primary\"}>\n                Tutorial\n              </Typography>\n            </ListItemText>\n          </ListItem>\n          <ListItem\n            button\n            key={\"Options\"}\n            className={clsx({\n              [classes.active]: props.page === Page.Options,\n            })}\n            onClick={clickOptions}\n          >\n            <ListItemIcon>\n              <SettingsIcon color={props.page !== Page.Options ? \"secondary\" : \"primary\"} />\n            </ListItemIcon>\n            <ListItemText>\n              <Typography color={props.page !== Page.Options ? \"secondary\" : \"primary\"}>Options</Typography>\n            </ListItemText>\n          </ListItem>\n          {process.env.NODE_ENV === \"development\" && (\n            <ListItem\n              classes={{ root: classes.listitem }}\n              button\n              key={\"Dev\"}\n              className={clsx({\n                [classes.active]: props.page === Page.DevMenu,\n              })}\n              onClick={clickDev}\n            >\n              <ListItemIcon>\n                <DeveloperBoardIcon color={props.page !== Page.DevMenu ? \"secondary\" : \"primary\"} />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography color={props.page !== Page.DevMenu ? \"secondary\" : \"primary\"}>Dev</Typography>\n              </ListItemText>\n            </ListItem>\n          )}\n        </Collapse>\n      </List>\n    </Drawer>\n  );\n}\n","/**\n * Root React component for the Augmentations UI page that display all of your\n * owned and purchased Augmentations and Source-Files.\n */\nimport React, { useState, useEffect } from \"react\";\n\nimport { InstalledAugmentations } from \"./InstalledAugmentations\";\nimport { PlayerMultipliers } from \"./PlayerMultipliers\";\nimport { PurchasedAugmentations } from \"./PurchasedAugmentations\";\nimport { SourceFiles } from \"./SourceFiles\";\n\nimport { canGetBonus } from \"../../ExportBonus\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Box from \"@mui/material/Box\";\n\ninterface IProps {\n  exportGameFn: () => void;\n  installAugmentationsFn: () => void;\n}\n\nexport function AugmentationsRoot(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((o) => !o);\n  }\n  useEffect(() => {\n    const id = setInterval(rerender, 200);\n    return () => clearInterval(id);\n  }, []);\n\n  function doExport(): void {\n    props.exportGameFn();\n    rerender();\n  }\n\n  function exportBonusStr(): string {\n    if (canGetBonus()) return \"(+1 favor to all factions)\";\n    return \"\";\n  }\n\n  return (\n    <>\n      <Typography variant=\"h4\">Augmentations</Typography>\n      <Box mx={2}>\n        <Typography>\n          Below is a list of all Augmentations you have purchased but not yet installed. Click the button below to\n          install them.\n        </Typography>\n        <Typography>WARNING: Installing your Augmentations resets most of your progress, including:</Typography>\n        <br />\n        <Typography>- Stats/Skill levels and Experience</Typography>\n        <Typography>- Money</Typography>\n        <Typography>- Scripts on every computer but your home computer</Typography>\n        <Typography>- Purchased servers</Typography>\n        <Typography>- Hacknet Nodes</Typography>\n        <Typography>- Faction/Company reputation</Typography>\n        <Typography>- Stocks</Typography>\n        <br />\n        <Typography>\n          Installing Augmentations lets you start over with the perks and benefits granted by all of the Augmentations\n          you have ever installed. Also, you will keep any scripts and RAM/Core upgrades on your home computer (but you\n          will lose all programs besides NUKE.exe)\n        </Typography>\n      </Box>\n      <Typography variant=\"h4\" color=\"primary\">\n        Purchased Augmentations\n      </Typography>\n      <Box mx={2}>\n        <Tooltip title={\"'I never asked for this'\"}>\n          <Button onClick={props.installAugmentationsFn}>Install Augmentations</Button>\n        </Tooltip>\n        <Tooltip title={\"It's always a good idea to backup/export your save!\"}>\n          <Button sx={{ mx: 2 }} onClick={doExport} color=\"error\">\n            Backup Save {exportBonusStr()}\n          </Button>\n        </Tooltip>\n        <PurchasedAugmentations />\n      </Box>\n      <Typography variant=\"h4\">Installed Augmentations</Typography>\n      <Box mx={2}>\n        <Typography>\n          List of all Augmentations that have been installed. You have gained the effects of these.\n        </Typography>\n        <InstalledAugmentations />\n      </Box>\n      <PlayerMultipliers />\n      <SourceFiles />\n    </>\n  );\n}\n","/**\n * React Component for displaying all of the player's installed Augmentations and\n * Source-Files.\n *\n * It also contains 'configuration' buttons that allow you to change how the\n * Augs/SF's are displayed\n */\nimport React, { useState } from \"react\";\n\nimport { AugmentationAccordion } from \"../../ui/React/AugmentationAccordion\";\nimport { Augmentations } from \"../../Augmentation/Augmentations\";\nimport { AugmentationNames } from \"../../Augmentation/data/AugmentationNames\";\n\nimport { Settings } from \"../../Settings/Settings\";\nimport { use } from \"../../ui/Context\";\nimport { OwnedAugmentationsOrderSetting } from \"../../Settings/SettingEnums\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport List from \"@mui/material/List\";\n\nexport function InstalledAugmentations(): React.ReactElement {\n  const setRerender = useState(true)[1];\n  const player = use.Player();\n\n  const sourceAugs = player.augmentations.slice();\n\n  if (Settings.OwnedAugmentationsOrder === OwnedAugmentationsOrderSetting.Alphabetically) {\n    sourceAugs.sort((aug1, aug2) => {\n      return aug1.name <= aug2.name ? -1 : 1;\n    });\n  }\n\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  function sortByAcquirementTime(): void {\n    Settings.OwnedAugmentationsOrder = OwnedAugmentationsOrderSetting.AcquirementTime;\n    rerender();\n  }\n\n  function sortInOrder(): void {\n    Settings.OwnedAugmentationsOrder = OwnedAugmentationsOrderSetting.Alphabetically;\n    rerender();\n  }\n\n  return (\n    <>\n      <Tooltip title={\"Sorts the Augmentations alphabetically in numeral order\"}>\n        <Button onClick={sortInOrder}>Sort in Order</Button>\n      </Tooltip>\n      <Tooltip title={\"Sorts the Augmentations based on when you acquired them (same as default)\"}>\n        <Button sx={{ mx: 2 }} onClick={sortByAcquirementTime}>\n          Sort by Acquirement Time\n        </Button>\n      </Tooltip>\n      <List dense>\n        {sourceAugs.map((e) => {\n          const aug = Augmentations[e.name];\n\n          let level = null;\n          if (e.name === AugmentationNames.NeuroFluxGovernor) {\n            level = e.level;\n          }\n\n          return <AugmentationAccordion key={aug.name} aug={aug} level={level} />;\n        })}\n      </List>\n    </>\n  );\n}\n","/**\n * React component for displaying the player's multipliers on the Augmentation UI page\n */\nimport * as React from \"react\";\n\nimport { Player } from \"../../Player\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Augmentations } from \"../Augmentations\";\nimport { Table, TableCell } from \"../../ui/React/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nfunction calculateAugmentedStats(): any {\n  const augP: any = {};\n  for (const aug of Player.queuedAugmentations) {\n    const augObj = Augmentations[aug.name];\n    for (const mult in augObj.mults) {\n      const v = augP[mult] ? augP[mult] : 1;\n      augP[mult] = v * augObj.mults[mult];\n    }\n  }\n  return augP;\n}\n\nfunction Improvements({ r }: { r: number }): React.ReactElement {\n  if (r) {\n    return (\n      <>\n        <TableCell key=\"2\">\n          <Typography>&nbsp;{\"=>\"}&nbsp;</Typography>\n        </TableCell>\n        <TableCell key=\"3\">\n          <Typography>{numeralWrapper.formatPercentage(r)}</Typography>\n        </TableCell>\n      </>\n    );\n  }\n  return <></>;\n}\n\nfunction MultiplierTable({ rows }: { rows: [string, number, number][] }): React.ReactElement {\n  return (\n    <Table size=\"small\" padding=\"none\">\n      <TableBody>\n        {rows.map((r: any) => (\n          <TableRow key={r[0]}>\n            <TableCell key=\"0\">\n              <Typography noWrap>{r[0]} multiplier:&nbsp;</Typography>\n            </TableCell>\n            <TableCell key=\"1\" style={{ textAlign: \"right\" }}>\n              <Typography noWrap>{numeralWrapper.formatPercentage(r[1])}</Typography>\n            </TableCell>\n            <Improvements r={r[2]} />\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n\nexport function PlayerMultipliers(): React.ReactElement {\n  const mults = calculateAugmentedStats();\n\n  function BladeburnerMults(): React.ReactElement {\n    if (!Player.canAccessBladeburner()) return <></>;\n    return (\n      <>\n        <MultiplierTable\n          rows={[\n            [\n              \"Bladeburner Success Chance\",\n              Player.bladeburner_success_chance_mult,\n              Player.bladeburner_success_chance_mult * mults.bladeburner_success_chance_mult,\n            ],\n            [\n              \"Bladeburner Max Stamina\",\n              Player.bladeburner_max_stamina_mult,\n              Player.bladeburner_max_stamina_mult * mults.bladeburner_max_stamina_mult,\n            ],\n            [\n              \"Bladeburner Stamina Gain\",\n              Player.bladeburner_stamina_gain_mult,\n              Player.bladeburner_stamina_gain_mult * mults.bladeburner_stamina_gain_mult,\n            ],\n            [\n              \"Bladeburner Field Analysis\",\n              Player.bladeburner_analysis_mult,\n              Player.bladeburner_analysis_mult * mults.bladeburner_analysis_mult,\n            ],\n          ]}\n        />\n        <br />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Typography variant=\"h4\">Multipliers</Typography>\n      <Box mx={2}>\n        <MultiplierTable\n          rows={[\n            [\"Hacking Chance \", Player.hacking_chance_mult, Player.hacking_chance_mult * mults.hacking_chance_mult],\n            [\"Hacking Speed \", Player.hacking_speed_mult, Player.hacking_speed_mult * mults.hacking_speed_mult],\n            [\"Hacking Money \", Player.hacking_money_mult, Player.hacking_money_mult * mults.hacking_money_mult],\n            [\"Hacking Growth \", Player.hacking_grow_mult, Player.hacking_grow_mult * mults.hacking_grow_mult],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\"Hacking Level \", Player.hacking_mult, Player.hacking_mult * mults.hacking_mult],\n            [\"Hacking Experience \", Player.hacking_exp_mult, Player.hacking_exp_mult * mults.hacking_exp_mult],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\"Strength Level \", Player.strength_mult, Player.strength_mult * mults.strength_mult],\n            [\"Strength Experience \", Player.strength_exp_mult, Player.strength_exp_mult * mults.strength_exp_mult],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\"Defense Level \", Player.defense_mult, Player.defense_mult * mults.defense_mult],\n            [\"Defense Experience \", Player.defense_exp_mult, Player.defense_exp_mult * mults.defense_exp_mult],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\"Dexterity Level \", Player.dexterity_mult, Player.dexterity_mult * mults.dexterity_mult],\n            [\"Dexterity Experience \", Player.dexterity_exp_mult, Player.dexterity_exp_mult * mults.dexterity_exp_mult],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\"Agility Level \", Player.agility_mult, Player.agility_mult * mults.agility_mult],\n            [\"Agility Experience \", Player.agility_exp_mult, Player.agility_exp_mult * mults.agility_exp_mult],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\"Charisma Level \", Player.charisma_mult, Player.charisma_mult * mults.charisma_mult],\n            [\"Charisma Experience \", Player.charisma_exp_mult, Player.charisma_exp_mult * mults.charisma_exp_mult],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\n              \"Hacknet Node production \",\n              Player.hacknet_node_money_mult,\n              Player.hacknet_node_money_mult * mults.hacknet_node_money_mult,\n            ],\n            [\n              \"Hacknet Node purchase cost \",\n              Player.hacknet_node_purchase_cost_mult,\n              Player.hacknet_node_purchase_cost_mult * mults.hacknet_node_purchase_cost_mult,\n            ],\n            [\n              \"Hacknet Node RAM upgrade cost \",\n              Player.hacknet_node_ram_cost_mult,\n              Player.hacknet_node_ram_cost_mult * mults.hacknet_node_ram_cost_mult,\n            ],\n            [\n              \"Hacknet Node Core purchase cost \",\n              Player.hacknet_node_core_cost_mult,\n              Player.hacknet_node_core_cost_mult * mults.hacknet_node_core_cost_mult,\n            ],\n            [\n              \"Hacknet Node level upgrade cost \",\n              Player.hacknet_node_level_cost_mult,\n              Player.hacknet_node_level_cost_mult * mults.hacknet_node_level_cost_mult,\n            ],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\"Company reputation gain \", Player.company_rep_mult, Player.company_rep_mult * mults.company_rep_mult],\n            [\"Faction reputation gain \", Player.faction_rep_mult, Player.faction_rep_mult * mults.faction_rep_mult],\n            [\"Salary \", Player.work_money_mult, Player.work_money_mult * mults.work_money_mult],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\"Crime success \", Player.crime_success_mult, Player.crime_success_mult * mults.crime_success_mult],\n            [\"Crime money \", Player.crime_money_mult, Player.crime_money_mult * mults.crime_money_mult],\n          ]}\n        />\n        <br />\n\n        <BladeburnerMults />\n      </Box>\n    </>\n  );\n}\n","/**\n * React component for displaying all of the player's purchased (but not installed)\n * Augmentations on the Augmentations UI.\n */\nimport * as React from \"react\";\n\nimport { Augmentations } from \"../../Augmentation/Augmentations\";\nimport { AugmentationNames } from \"../../Augmentation/data/AugmentationNames\";\nimport { Player } from \"../../Player\";\n\nimport { AugmentationAccordion } from \"../../ui/React/AugmentationAccordion\";\nimport List from \"@mui/material/List\";\n\nexport function PurchasedAugmentations(): React.ReactElement {\n  const augs: React.ReactElement[] = [];\n  // Only render the last NeuroFlux (there are no findLastIndex btw)\n  let nfgIndex = -1;\n  for (let i = Player.queuedAugmentations.length - 1; i >= 0; i--) {\n    if (Player.queuedAugmentations[i].name === AugmentationNames.NeuroFluxGovernor) {\n      nfgIndex = i;\n      break;\n    }\n  }\n  for (let i = 0; i < Player.queuedAugmentations.length; i++) {\n    const ownedAug = Player.queuedAugmentations[i];\n    if (ownedAug.name === AugmentationNames.NeuroFluxGovernor && i !== nfgIndex) continue;\n    const aug = Augmentations[ownedAug.name];\n    let level = null;\n    if (ownedAug.name === AugmentationNames.NeuroFluxGovernor) {\n      level = ownedAug.level;\n    }\n\n    augs.push(<AugmentationAccordion key={aug.name} aug={aug} level={level} />);\n  }\n\n  return <List dense>{augs}</List>;\n}\n","import React from \"react\";\nimport { SourceFileMinus1 } from \"./SourceFileMinus1\";\nimport { OwnedSourceFiles } from \"./OwnedSourceFiles\";\nimport List from \"@mui/material/List\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nexport function SourceFiles(): React.ReactElement {\n  return (\n    <>\n      <Typography variant=\"h4\">Source Files</Typography>\n      <Box mx={2}>\n        <List dense>\n          <SourceFileMinus1 />\n          <OwnedSourceFiles />\n        </List>\n      </Box>\n    </>\n  );\n}\n","/**\n * React Component for displaying a list of the player's Source-Files\n * on the Augmentations UI\n */\nimport React, { useState } from \"react\";\n\nimport { Player } from \"../../Player\";\nimport { Exploit, ExploitName } from \"../../Exploits/Exploit\";\n\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Collapse from \"@mui/material/Collapse\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\n\nexport function SourceFileMinus1(): React.ReactElement {\n  const [open, setOpen] = useState(false);\n  const exploits = Player.exploits;\n\n  if (exploits.length === 0) {\n    return <></>;\n  }\n\n  return (\n    <Box component={Paper}>\n      <ListItemButton onClick={() => setOpen((old) => !old)}>\n        <ListItemText\n          primary={\n            <Typography style={{ whiteSpace: \"pre-wrap\" }}>\n              Source-File -1: Exploits in the BitNodes\n              <br />\n              Level {exploits.length} / ?\n            </Typography>\n          }\n        />\n        {open ? <ExpandLess color=\"primary\" /> : <ExpandMore color=\"primary\" />}\n      </ListItemButton>\n      <Collapse in={open} unmountOnExit>\n        <Box m={4}>\n          <Typography>\n            This Source-File can only be acquired with obscure knowledge of the game, javascript, and the web ecosystem.\n          </Typography>\n          <Typography>It increases all of the player's multipliers by 0.1%</Typography>\n          <br />\n\n          <Typography>You have found the following exploits:</Typography>\n          <Box mx={2}>\n            {exploits.map((c: Exploit) => (\n              <Typography key={c}>* {ExploitName(c)}</Typography>\n            ))}\n          </Box>\n        </Box>\n      </Collapse>\n    </Box>\n  );\n}\n","/**\n * React Component for displaying a list of the player's Source-Files\n * on the Augmentations UI\n */\nimport * as React from \"react\";\n\nimport { Player } from \"../../Player\";\nimport { Settings } from \"../../Settings/Settings\";\nimport { OwnedAugmentationsOrderSetting } from \"../../Settings/SettingEnums\";\nimport { SourceFiles } from \"../../SourceFile/SourceFiles\";\n\nimport { SourceFileAccordion } from \"../../ui/React/SourceFileAccordion\";\n\nexport function OwnedSourceFiles(): React.ReactElement {\n  const sourceSfs = Player.sourceFiles.slice();\n\n  if (Settings.OwnedAugmentationsOrder === OwnedAugmentationsOrderSetting.Alphabetically) {\n    sourceSfs.sort((sf1, sf2) => {\n      return sf1.n - sf2.n;\n    });\n  }\n\n  return (\n    <>\n      {sourceSfs.map((e) => {\n        const srcFileKey = \"SourceFile\" + e.n;\n        const sfObj = SourceFiles[srcFileKey];\n        if (sfObj == null) {\n          console.error(`Invalid source file number: ${e.n}`);\n          return null;\n        }\n\n        return <SourceFileAccordion key={e.n} level={e.lvl} sf={sfObj} />;\n      })}\n    </>\n  );\n}\n","/**\n * React Component for displaying a single Source-File as an accordion.\n *\n * The header of the accordion contains the Source-Files's name and level,\n * and the accordion's panel contains the Source-File's description.\n */\nimport React, { useState } from \"react\";\n\nimport { SourceFile } from \"../../SourceFile/SourceFile\";\n\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Collapse from \"@mui/material/Collapse\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\n\ntype IProps = {\n  level: number;\n  sf: SourceFile;\n};\n\nexport function SourceFileAccordion(props: IProps): React.ReactElement {\n  const [open, setOpen] = useState(false);\n  const maxLevel = props.sf.n === 12 ? \"∞\" : \"3\";\n\n  return (\n    <Box component={Paper}>\n      <ListItemButton onClick={() => setOpen((old) => !old)}>\n        <ListItemText\n          primary={\n            <Typography style={{ whiteSpace: \"pre-wrap\" }}>\n              {props.sf.name}\n              <br />\n              {`Level ${props.level} / ${maxLevel}`}\n            </Typography>\n          }\n        />\n        {open ? <ExpandLess color=\"primary\" /> : <ExpandMore color=\"primary\" />}\n      </ListItemButton>\n      <Collapse in={open} unmountOnExit>\n        <Box m={4}>\n          <Typography>{props.sf.info}</Typography>\n        </Box>\n      </Collapse>\n    </Box>\n  );\n}\n","import { IPlayer } from \"./PersonObjects/IPlayer\";\nimport { Bladeburner } from \"./Bladeburner/Bladeburner\";\nimport { IEngine } from \"./IEngine\";\nimport { IRouter } from \"./ui/Router\";\n\nimport React from \"react\";\n\nimport { General } from \"./DevMenu/ui/General\";\nimport { Stats } from \"./DevMenu/ui/Stats\";\nimport { Factions } from \"./DevMenu/ui/Factions\";\nimport { Augmentations } from \"./DevMenu/ui/Augmentations\";\nimport { SourceFiles } from \"./DevMenu/ui/SourceFiles\";\nimport { Programs } from \"./DevMenu/ui/Programs\";\nimport { Servers } from \"./DevMenu/ui/Servers\";\nimport { Companies } from \"./DevMenu/ui/Companies\";\nimport { Bladeburner as BladeburnerElem } from \"./DevMenu/ui/Bladeburner\";\nimport { Gang } from \"./DevMenu/ui/Gang\";\nimport { Corporation } from \"./DevMenu/ui/Corporation\";\nimport { CodingContracts } from \"./DevMenu/ui/CodingContracts\";\nimport { StockMarket } from \"./DevMenu/ui/StockMarket\";\nimport { Sleeves } from \"./DevMenu/ui/Sleeves\";\nimport { TimeSkip } from \"./DevMenu/ui/TimeSkip\";\n\ninterface IProps {\n  player: IPlayer;\n  engine: IEngine;\n  router: IRouter;\n}\n\nexport function DevMenuRoot(props: IProps): React.ReactElement {\n  return (\n    <>\n      <h1>Development Menu - Only meant to be used for testing/debugging</h1>\n      <General player={props.player} router={props.router} />\n      <Stats player={props.player} />\n      <Factions player={props.player} />\n      <Augmentations player={props.player} />\n      <SourceFiles player={props.player} />\n      <Programs player={props.player} />\n      <Servers />\n      <Companies />\n\n      {props.player.bladeburner instanceof Bladeburner && <BladeburnerElem player={props.player} />}\n\n      {props.player.inGang() && <Gang player={props.player} />}\n\n      {props.player.hasCorporation() && <Corporation player={props.player} />}\n\n      <CodingContracts />\n\n      {props.player.hasWseAccount && <StockMarket />}\n\n      {props.player.sleeves.length > 0 && <Sleeves player={props.player} />}\n\n      <TimeSkip player={props.player} engine={props.engine} />\n    </>\n  );\n}\n","import React from \"react\";\n\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport Button from \"@mui/material/Button\";\nimport { Money } from \"../../ui/React/Money\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { IRouter } from \"../../ui/Router\";\n\ninterface IProps {\n  player: IPlayer;\n  router: IRouter;\n}\n\nexport function General(props: IProps): React.ReactElement {\n  function addMoney(n: number) {\n    return function () {\n      props.player.gainMoney(n);\n    };\n  }\n\n  function upgradeRam(): void {\n    props.player.getHomeComputer().maxRam *= 2;\n  }\n\n  function quickB1tFlum3(): void {\n    props.router.toBitVerse(true, true);\n  }\n\n  function b1tflum3(): void {\n    props.router.toBitVerse(true, false);\n  }\n\n  function quickHackW0r1dD43m0n(): void {\n    props.router.toBitVerse(false, true);\n  }\n\n  function hackW0r1dD43m0n(): void {\n    props.router.toBitVerse(false, false);\n  }\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <h2>General</h2>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Button onClick={addMoney(1e6)}>\n          <pre>\n            + <Money money={1e6} />\n          </pre>\n        </Button>\n        <Button onClick={addMoney(1e9)}>\n          <pre>\n            + <Money money={1e9} />\n          </pre>\n        </Button>\n        <Button onClick={addMoney(1e12)}>\n          <pre>\n            + <Money money={1e12} />\n          </pre>\n        </Button>\n        <Button onClick={addMoney(1e15)}>\n          <pre>\n            + <Money money={1000e12} />\n          </pre>\n        </Button>\n        <Button onClick={addMoney(Infinity)}>\n          <pre>\n            + <Money money={Infinity} />\n          </pre>\n        </Button>\n        <Button onClick={upgradeRam}>+ RAM</Button>\n        <br />\n\n        <Button onClick={quickB1tFlum3}>Quick b1t_flum3.exe</Button>\n        <Button onClick={b1tflum3}>Run b1t_flum3.exe</Button>\n        <Button onClick={quickHackW0r1dD43m0n}>Quick w0rld_d34m0n</Button>\n        <Button onClick={hackW0r1dD43m0n}>Hack w0rld_d34m0n</Button>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React from \"react\";\n\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { Adjuster } from \"./Adjuster\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\nconst bigNumber = 1e27;\n\ninterface IProps {\n  player: IPlayer;\n}\n\nexport function Stats(props: IProps): React.ReactElement {\n  function modifyExp(stat: string, modifier: number) {\n    return function (exp: number) {\n      switch (stat) {\n        case \"hacking\":\n          if (exp) {\n            props.player.gainHackingExp(exp * modifier);\n          }\n          break;\n        case \"strength\":\n          if (exp) {\n            props.player.gainStrengthExp(exp * modifier);\n          }\n          break;\n        case \"defense\":\n          if (exp) {\n            props.player.gainDefenseExp(exp * modifier);\n          }\n          break;\n        case \"dexterity\":\n          if (exp) {\n            props.player.gainDexterityExp(exp * modifier);\n          }\n          break;\n        case \"agility\":\n          if (exp) {\n            props.player.gainAgilityExp(exp * modifier);\n          }\n          break;\n        case \"charisma\":\n          if (exp) {\n            props.player.gainCharismaExp(exp * modifier);\n          }\n          break;\n        case \"intelligence\":\n          if (exp) {\n            props.player.gainIntelligenceExp(exp * modifier);\n          }\n          break;\n      }\n      props.player.updateSkillLevels();\n    };\n  }\n\n  function modifyKarma(modifier: number) {\n    return function (amt: number) {\n      props.player.karma += amt * modifier;\n    };\n  }\n\n  function tonsOfExp(): void {\n    props.player.gainHackingExp(bigNumber);\n    props.player.gainStrengthExp(bigNumber);\n    props.player.gainDefenseExp(bigNumber);\n    props.player.gainDexterityExp(bigNumber);\n    props.player.gainAgilityExp(bigNumber);\n    props.player.gainCharismaExp(bigNumber);\n    props.player.gainIntelligenceExp(bigNumber);\n    props.player.updateSkillLevels();\n  }\n\n  function resetAllExp(): void {\n    props.player.hacking_exp = 0;\n    props.player.strength_exp = 0;\n    props.player.defense_exp = 0;\n    props.player.dexterity_exp = 0;\n    props.player.agility_exp = 0;\n    props.player.charisma_exp = 0;\n    props.player.intelligence_exp = 0;\n    props.player.updateSkillLevels();\n  }\n\n  function resetExperience(stat: string): () => void {\n    return function () {\n      switch (stat) {\n        case \"hacking\":\n          props.player.hacking_exp = 0;\n          break;\n        case \"strength\":\n          props.player.strength_exp = 0;\n          break;\n        case \"defense\":\n          props.player.defense_exp = 0;\n          break;\n        case \"dexterity\":\n          props.player.dexterity_exp = 0;\n          break;\n        case \"agility\":\n          props.player.agility_exp = 0;\n          break;\n        case \"charisma\":\n          props.player.charisma_exp = 0;\n          break;\n        case \"intelligence\":\n          props.player.intelligence_exp = 0;\n          break;\n      }\n      props.player.updateSkillLevels();\n    };\n  }\n\n  function resetKarma(): () => void {\n    return function () {\n      props.player.karma = 0;\n    };\n  }\n\n  function enableIntelligence(): void {\n    if (props.player.intelligence === 0) {\n      props.player.intelligence = 1;\n      props.player.updateSkillLevels();\n    }\n  }\n\n  function disableIntelligence(): void {\n    props.player.intelligence_exp = 0;\n    props.player.intelligence = 0;\n    props.player.updateSkillLevels();\n  }\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <h2>Experience / Stats</h2>\n      </AccordionSummary>\n      <AccordionDetails>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <Typography>All:</Typography>\n              </td>\n              <td>\n                <Button onClick={tonsOfExp}>Tons of exp</Button>\n                <Button onClick={resetAllExp}>Reset</Button>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Hacking:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"hacking\"\n                  placeholder=\"exp\"\n                  tons={() => modifyExp(\"hacking\", 1)(bigNumber)}\n                  add={modifyExp(\"hacking\", 1)}\n                  subtract={modifyExp(\"hacking\", -1)}\n                  reset={resetExperience(\"hacking\")}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Strength:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"strength\"\n                  placeholder=\"exp\"\n                  tons={() => modifyExp(\"strength\", 1)(bigNumber)}\n                  add={modifyExp(\"strength\", 1)}\n                  subtract={modifyExp(\"strength\", -1)}\n                  reset={resetExperience(\"strength\")}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Defense:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"defense\"\n                  placeholder=\"exp\"\n                  tons={() => modifyExp(\"defense\", 1)(bigNumber)}\n                  add={modifyExp(\"defense\", 1)}\n                  subtract={modifyExp(\"defense\", -1)}\n                  reset={resetExperience(\"defense\")}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Dexterity:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"dexterity\"\n                  placeholder=\"exp\"\n                  tons={() => modifyExp(\"dexterity\", 1)(bigNumber)}\n                  add={modifyExp(\"dexterity\", 1)}\n                  subtract={modifyExp(\"dexterity\", -1)}\n                  reset={resetExperience(\"dexterity\")}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Agility:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"agility\"\n                  placeholder=\"exp\"\n                  tons={() => modifyExp(\"agility\", 1)(bigNumber)}\n                  add={modifyExp(\"agility\", 1)}\n                  subtract={modifyExp(\"agility\", -1)}\n                  reset={resetExperience(\"agility\")}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Charisma:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"charisma\"\n                  placeholder=\"exp\"\n                  tons={() => modifyExp(\"charisma\", 1)(bigNumber)}\n                  add={modifyExp(\"charisma\", 1)}\n                  subtract={modifyExp(\"charisma\", -1)}\n                  reset={resetExperience(\"charisma\")}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Intelligence:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"intelligence\"\n                  placeholder=\"exp\"\n                  tons={() => modifyExp(\"intelligence\", 1)(bigNumber)}\n                  add={modifyExp(\"intelligence\", 1)}\n                  subtract={modifyExp(\"intelligence\", -1)}\n                  reset={resetExperience(\"intelligence\")}\n                />\n              </td>\n              <td>\n                <Button onClick={enableIntelligence}>Enable</Button>\n              </td>\n              <td>\n                <Button onClick={disableIntelligence}>Disable</Button>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Karma:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"karma\"\n                  placeholder=\"amt\"\n                  tons={() => modifyExp(\"intelligence\", 1)(100000)}\n                  add={modifyKarma(1)}\n                  subtract={modifyKarma(-1)}\n                  reset={resetKarma()}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport { Adjuster } from \"./Adjuster\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { Factions as AllFaction } from \"../../Faction/Factions\";\nimport FormControl from \"@mui/material/FormControl\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ReplyAllIcon from \"@mui/icons-material/ReplyAll\";\nimport ReplyIcon from \"@mui/icons-material/Reply\";\nimport InputLabel from \"@mui/material/InputLabel\";\n\nconst bigNumber = 1e12;\n\ninterface IProps {\n  player: IPlayer;\n}\n\nexport function Factions(props: IProps): React.ReactElement {\n  const [faction, setFaction] = useState(\"Illuminati\");\n\n  function setFactionDropdown(event: SelectChangeEvent<string>): void {\n    setFaction(event.target.value as string);\n  }\n\n  function receiveInvite(): void {\n    props.player.receiveInvite(faction);\n  }\n\n  function receiveAllInvites(): void {\n    for (const i in AllFaction) {\n      props.player.receiveInvite(AllFaction[i].name);\n    }\n  }\n\n  function modifyFactionRep(modifier: number): (x: number) => void {\n    return function (reputation: number): void {\n      const fac = AllFaction[faction];\n      if (fac != null && !isNaN(reputation)) {\n        fac.playerReputation += reputation * modifier;\n      }\n    };\n  }\n\n  function resetFactionRep(): void {\n    const fac = AllFaction[faction];\n    if (fac != null) {\n      fac.playerReputation = 0;\n    }\n  }\n\n  function modifyFactionFavor(modifier: number): (x: number) => void {\n    return function (favor: number): void {\n      const fac = AllFaction[faction];\n      if (fac != null && !isNaN(favor)) {\n        fac.favor += favor * modifier;\n      }\n    };\n  }\n\n  function resetFactionFavor(): void {\n    const fac = AllFaction[faction];\n    if (fac != null) {\n      fac.favor = 0;\n    }\n  }\n\n  function tonsOfRep(): void {\n    for (const i in AllFaction) {\n      AllFaction[i].playerReputation = bigNumber;\n    }\n  }\n\n  function resetAllRep(): void {\n    for (const i in AllFaction) {\n      AllFaction[i].playerReputation = 0;\n    }\n  }\n\n  function tonsOfFactionFavor(): void {\n    for (const i in AllFaction) {\n      AllFaction[i].favor = bigNumber;\n    }\n  }\n\n  function resetAllFactionFavor(): void {\n    for (const i in AllFaction) {\n      AllFaction[i].favor = 0;\n    }\n  }\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <h2>Factions</h2>\n      </AccordionSummary>\n      <AccordionDetails>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <Typography>Faction:</Typography>\n              </td>\n              <td>\n                <FormControl>\n                  <InputLabel id=\"factions-select\">Faction</InputLabel>\n                  <Select\n                    labelId=\"factions-select\"\n                    id=\"factions-dropdown\"\n                    onChange={setFactionDropdown}\n                    value={faction}\n                    startAdornment={\n                      <>\n                        <IconButton onClick={receiveAllInvites} size=\"large\" arial-label=\"receive-all-invitation\">\n                          <ReplyAllIcon />\n                        </IconButton>\n                        <IconButton onClick={receiveInvite} size=\"large\" arial-label=\"receive-one-invitation\">\n                          <ReplyIcon />\n                        </IconButton>\n                      </>\n                    }\n                  >\n                    {Object.values(AllFaction).map((faction) => (\n                      <MenuItem key={faction.name} value={faction.name}>\n                        {faction.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Reputation:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"reputation\"\n                  placeholder=\"amt\"\n                  tons={() => modifyFactionRep(1)(bigNumber)}\n                  add={modifyFactionRep(1)}\n                  subtract={modifyFactionRep(-1)}\n                  reset={resetFactionRep}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Favor:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"favor\"\n                  placeholder=\"amt\"\n                  tons={() => modifyFactionFavor(1)(2000)}\n                  add={modifyFactionFavor(1)}\n                  subtract={modifyFactionFavor(-1)}\n                  reset={resetFactionFavor}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>All Reputation:</Typography>\n              </td>\n              <td>\n                <Button onClick={tonsOfRep}>Tons</Button>\n                <Button onClick={resetAllRep}>Reset</Button>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>All Favor:</Typography>\n              </td>\n              <td>\n                <Button onClick={tonsOfFactionFavor}>Tons</Button>\n                <Button onClick={resetAllFactionFavor}>Reset</Button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { AugmentationNames } from \"../../Augmentation/data/AugmentationNames\";\nimport Typography from \"@mui/material/Typography\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ReplyAllIcon from \"@mui/icons-material/ReplyAll\";\nimport ReplyIcon from \"@mui/icons-material/Reply\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\n\ninterface IProps {\n  player: IPlayer;\n}\n\nexport function Augmentations(props: IProps): React.ReactElement {\n  const [augmentation, setAugmentation] = useState(\"Augmented Targeting I\");\n\n  function setAugmentationDropdown(event: SelectChangeEvent<string>): void {\n    setAugmentation(event.target.value as string);\n  }\n  function queueAug(): void {\n    props.player.queueAugmentation(augmentation);\n  }\n\n  function queueAllAugs(): void {\n    for (const i in AugmentationNames) {\n      const augName = AugmentationNames[i];\n      props.player.queueAugmentation(augName);\n    }\n  }\n\n  function clearAugs(): void {\n    props.player.augmentations = [];\n  }\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <h2>Augmentations</h2>\n      </AccordionSummary>\n      <AccordionDetails>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <Typography>Aug:</Typography>\n              </td>\n              <td>\n                <Select\n                  onChange={setAugmentationDropdown}\n                  value={augmentation}\n                  startAdornment={\n                    <>\n                      <IconButton onClick={queueAllAugs} size=\"large\">\n                        <ReplyAllIcon />\n                      </IconButton>\n                      <IconButton onClick={queueAug} size=\"large\">\n                        <ReplyIcon />\n                      </IconButton>\n                    </>\n                  }\n                  endAdornment={\n                    <>\n                      <IconButton onClick={clearAugs} size=\"large\">\n                        <ClearIcon />\n                      </IconButton>\n                    </>\n                  }\n                >\n                  {Object.values(AugmentationNames).map((aug) => (\n                    <MenuItem key={aug} value={aug}>\n                      {aug}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React from \"react\";\n\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { PlayerOwnedSourceFile } from \"../../SourceFile/PlayerOwnedSourceFile\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\n\n// Update as additional BitNodes get implemented\nconst validSFN = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\ninterface IProps {\n  player: IPlayer;\n}\n\nexport function SourceFiles(props: IProps): React.ReactElement {\n  function setSF(sfN: number, sfLvl: number) {\n    return function () {\n      if (sfLvl === 0) {\n        props.player.sourceFiles = props.player.sourceFiles.filter((sf) => sf.n !== sfN);\n        return;\n      }\n\n      if (!props.player.sourceFiles.some((sf) => sf.n === sfN)) {\n        props.player.sourceFiles.push(new PlayerOwnedSourceFile(sfN, sfLvl));\n        return;\n      }\n\n      for (let i = 0; i < props.player.sourceFiles.length; i++) {\n        if (props.player.sourceFiles[i].n === sfN) {\n          props.player.sourceFiles[i].lvl = sfLvl;\n        }\n      }\n    };\n  }\n\n  function setAllSF(sfLvl: number) {\n    return () => {\n      for (let i = 0; i < validSFN.length; i++) {\n        setSF(validSFN[i], sfLvl)();\n      }\n    };\n  }\n\n  function clearExploits(): void {\n    props.player.exploits = [];\n  }\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <h2>Source-Files</h2>\n      </AccordionSummary>\n      <AccordionDetails>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <Typography>Exploits:</Typography>\n              </td>\n              <td>\n                <Button onClick={clearExploits}>Clear</Button>\n              </td>\n            </tr>\n            <tr key={\"sf-all\"}>\n              <td>\n                <Typography>All:</Typography>\n              </td>\n              <td>\n                <ButtonGroup>\n                  <Button aria-label=\"all-sf-0\" onClick={setAllSF(0)}>\n                    0\n                  </Button>\n                  <Button aria-label=\"all-sf-1\" onClick={setAllSF(1)}>\n                    1\n                  </Button>\n                  <Button aria-label=\"all-sf-2\" onClick={setAllSF(2)}>\n                    2\n                  </Button>\n                  <Button aria-label=\"all-sf-3\" onClick={setAllSF(3)}>\n                    3\n                  </Button>\n                </ButtonGroup>\n              </td>\n            </tr>\n            {validSFN.map((i) => (\n              <tr key={\"sf-\" + i}>\n                <td>\n                  <Typography>SF-{i}:</Typography>\n                </td>\n                <td>\n                  <ButtonGroup>\n                    <Button onClick={setSF(i, 0)}>0</Button>\n                    <Button onClick={setSF(i, 1)}>1</Button>\n                    <Button onClick={setSF(i, 2)}>2</Button>\n                    <Button onClick={setSF(i, 3)}>3</Button>\n                  </ButtonGroup>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { Programs as AllPrograms } from \"../../Programs/Programs\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\ninterface IProps {\n  player: IPlayer;\n}\n\nexport function Programs(props: IProps): React.ReactElement {\n  const [program, setProgram] = useState(\"NUKE.exe\");\n  function setProgramDropdown(event: SelectChangeEvent<string>): void {\n    setProgram(event.target.value as string);\n  }\n  function addProgram(): void {\n    if (!props.player.hasProgram(program)) {\n      props.player.getHomeComputer().programs.push(program);\n    }\n  }\n\n  function addAllPrograms(): void {\n    for (const i in AllPrograms) {\n      if (!props.player.hasProgram(AllPrograms[i].name)) {\n        props.player.getHomeComputer().programs.push(AllPrograms[i].name);\n      }\n    }\n  }\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <h2>Programs</h2>\n      </AccordionSummary>\n      <AccordionDetails>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <Typography>Program:</Typography>\n              </td>\n              <td>\n                <Select onChange={setProgramDropdown} value={program}>\n                  {Object.values(AllPrograms).map((program) => (\n                    <MenuItem key={program.name} value={program.name}>\n                      {program.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Add:</Typography>\n              </td>\n              <td>\n                <Button onClick={addProgram}>One</Button>\n                <Button onClick={addAllPrograms}>All</Button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport { AllServers } from \"../../Server/AllServers\";\nimport { HacknetServer } from \"../../Hacknet/HacknetServer\";\nimport { GetServerByHostname } from \"../../Server/ServerHelpers\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nexport function Servers(): React.ReactElement {\n  const [server, setServer] = useState(\"home\");\n  function setServerDropdown(event: SelectChangeEvent<string>): void {\n    setServer(event.target.value as string);\n  }\n  function rootServer(): void {\n    const s = GetServerByHostname(server);\n    if (s === null) return;\n    if (s instanceof HacknetServer) return;\n    s.hasAdminRights = true;\n    s.sshPortOpen = true;\n    s.ftpPortOpen = true;\n    s.smtpPortOpen = true;\n    s.httpPortOpen = true;\n    s.sqlPortOpen = true;\n    s.openPortCount = 5;\n  }\n\n  function rootAllServers(): void {\n    for (const i in AllServers) {\n      const s = AllServers[i];\n      if (s instanceof HacknetServer) return;\n      s.hasAdminRights = true;\n      s.sshPortOpen = true;\n      s.ftpPortOpen = true;\n      s.smtpPortOpen = true;\n      s.httpPortOpen = true;\n      s.sqlPortOpen = true;\n      s.openPortCount = 5;\n    }\n  }\n\n  function minSecurity(): void {\n    const s = GetServerByHostname(server);\n    if (s === null) return;\n    if (s instanceof HacknetServer) return;\n    s.hackDifficulty = s.minDifficulty;\n  }\n\n  function minAllSecurity(): void {\n    for (const i in AllServers) {\n      const server = AllServers[i];\n      if (server instanceof HacknetServer) continue;\n      server.hackDifficulty = server.minDifficulty;\n    }\n  }\n\n  function maxMoney(): void {\n    const s = GetServerByHostname(server);\n    if (s === null) return;\n    if (s instanceof HacknetServer) return;\n    s.moneyAvailable = s.moneyMax;\n  }\n\n  function maxAllMoney(): void {\n    for (const i in AllServers) {\n      const server = AllServers[i];\n      if (server instanceof HacknetServer) continue;\n      server.moneyAvailable = server.moneyMax;\n    }\n  }\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <h2>Servers</h2>\n      </AccordionSummary>\n      <AccordionDetails>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <Typography>Server:</Typography>\n              </td>\n              <td colSpan={2}>\n                <Select id=\"dev-servers-dropdown\" onChange={setServerDropdown} value={server}>\n                  {Object.values(AllServers).map((server) => (\n                    <MenuItem key={server.hostname} value={server.hostname}>\n                      {server.hostname}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Root:</Typography>\n              </td>\n              <td>\n                <Button onClick={rootServer}>Root one</Button>\n              </td>\n              <td>\n                <Button onClick={rootAllServers}>Root all</Button>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Security:</Typography>\n              </td>\n              <td>\n                <Button onClick={minSecurity}>Min one</Button>\n              </td>\n              <td>\n                <Button onClick={minAllSecurity}>Min all</Button>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Money:</Typography>\n              </td>\n              <td>\n                <Button onClick={maxMoney}>Max one</Button>\n              </td>\n              <td>\n                <Button onClick={maxAllMoney}>Max all</Button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport { Companies as AllCompanies } from \"../../Company/Companies\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { Adjuster } from \"./Adjuster\";\n\nconst bigNumber = 1e12;\n\nexport function Companies(): React.ReactElement {\n  const [company, setCompany] = useState(\"ECorp\");\n  function setCompanyDropdown(event: SelectChangeEvent<string>): void {\n    setCompany(event.target.value as string);\n  }\n  function resetCompanyRep(): void {\n    AllCompanies[company].playerReputation = 0;\n  }\n\n  function modifyCompanyRep(modifier: number): (x: number) => void {\n    return function (reputation: number): void {\n      const c = AllCompanies[company];\n      if (c != null && !isNaN(reputation)) {\n        c.playerReputation += reputation * modifier;\n      }\n    };\n  }\n\n  function modifyCompanyFavor(modifier: number): (x: number) => void {\n    return function (favor: number): void {\n      const c = AllCompanies[company];\n      if (c != null && !isNaN(favor)) {\n        c.favor += favor * modifier;\n      }\n    };\n  }\n\n  function resetCompanyFavor(): void {\n    AllCompanies[company].favor = 0;\n  }\n\n  function tonsOfRepCompanies(): void {\n    for (const c in AllCompanies) {\n      AllCompanies[c].playerReputation = bigNumber;\n    }\n  }\n\n  function resetAllRepCompanies(): void {\n    for (const c in AllCompanies) {\n      AllCompanies[c].playerReputation = 0;\n    }\n  }\n\n  function tonsOfFavorCompanies(): void {\n    for (const c in AllCompanies) {\n      AllCompanies[c].favor = bigNumber;\n    }\n  }\n\n  function resetAllFavorCompanies(): void {\n    for (const c in AllCompanies) {\n      AllCompanies[c].favor = 0;\n    }\n  }\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <h2>Companies</h2>\n      </AccordionSummary>\n      <AccordionDetails>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <Typography>Company:</Typography>\n              </td>\n              <td colSpan={3}>\n                <Select id=\"dev-companies-dropdown\" onChange={setCompanyDropdown} value={company}>\n                  {Object.values(AllCompanies).map((company) => (\n                    <MenuItem key={company.name} value={company.name}>\n                      {company.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Reputation:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"reputation\"\n                  placeholder=\"amt\"\n                  tons={() => modifyCompanyRep(1)(bigNumber)}\n                  add={modifyCompanyRep(1)}\n                  subtract={modifyCompanyRep(-1)}\n                  reset={resetCompanyRep}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Favor:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"favor\"\n                  placeholder=\"amt\"\n                  tons={() => modifyCompanyFavor(1)(2000)}\n                  add={modifyCompanyFavor(1)}\n                  subtract={modifyCompanyFavor(-1)}\n                  reset={resetCompanyFavor}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>All Reputation:</Typography>\n              </td>\n              <td>\n                <Button onClick={tonsOfRepCompanies}>Tons</Button>\n                <Button onClick={resetAllRepCompanies}>Reset</Button>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>All Favor:</Typography>\n              </td>\n              <td>\n                <Button onClick={tonsOfFavorCompanies}>Tons</Button>\n                <Button onClick={resetAllFavorCompanies}>Reset</Button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React from \"react\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport { Adjuster } from \"./Adjuster\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\nconst bigNumber = 1e27;\n\ninterface IProps {\n  player: IPlayer;\n}\n\nexport function Bladeburner(props: IProps): React.ReactElement {\n  const bladeburner = props.player.bladeburner;\n  if (bladeburner === null) return <></>;\n  function modifyBladeburnerRank(modify: number): (x: number) => void {\n    return function (rank: number): void {\n      if (!bladeburner) return;\n      bladeburner.changeRank(props.player, rank * modify);\n    };\n  }\n\n  function resetBladeburnerRank(): void {\n    if (!bladeburner) return;\n    bladeburner.rank = 0;\n    bladeburner.maxRank = 0;\n  }\n\n  function addTonsBladeburnerRank(): void {\n    if (!bladeburner) return;\n\n    bladeburner.changeRank(props.player, bigNumber);\n  }\n\n  function modifyBladeburnerCycles(modify: number): (x: number) => void {\n    return function (cycles: number): void {\n      if (!bladeburner) return;\n      bladeburner.storedCycles += cycles * modify;\n    };\n  }\n\n  function resetBladeburnerCycles(): void {\n    if (!bladeburner) return;\n    bladeburner.storedCycles = 0;\n  }\n\n  function addTonsBladeburnerCycles(): void {\n    if (!bladeburner) return;\n    bladeburner.storedCycles += bigNumber;\n  }\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <h2>Bladeburner</h2>\n      </AccordionSummary>\n      <AccordionDetails>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <Typography>Rank:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"rank\"\n                  placeholder=\"amt\"\n                  tons={addTonsBladeburnerRank}\n                  add={modifyBladeburnerRank(1)}\n                  subtract={modifyBladeburnerRank(-1)}\n                  reset={resetBladeburnerRank}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Cycles:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"cycles\"\n                  placeholder=\"amt\"\n                  tons={addTonsBladeburnerCycles}\n                  add={modifyBladeburnerCycles(1)}\n                  subtract={modifyBladeburnerCycles(-1)}\n                  reset={resetBladeburnerCycles}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React from \"react\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport { Adjuster } from \"./Adjuster\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\nconst bigNumber = 1e27;\n\ninterface IProps {\n  player: IPlayer;\n}\n\nexport function Gang(props: IProps): React.ReactElement {\n  function addTonsGangCycles(): void {\n    if (props.player.gang) {\n      props.player.gang.storedCycles = bigNumber;\n    }\n  }\n\n  function modifyGangCycles(modify: number): (x: number) => void {\n    return function (cycles: number): void {\n      if (props.player.gang) {\n        props.player.gang.storedCycles += cycles * modify;\n      }\n    };\n  }\n\n  function resetGangCycles(): void {\n    if (props.player.gang) {\n      props.player.gang.storedCycles = 0;\n    }\n  }\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <h2>Gang</h2>\n      </AccordionSummary>\n      <AccordionDetails>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <Typography>Cycles:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"cycles\"\n                  placeholder=\"amt\"\n                  tons={addTonsGangCycles}\n                  add={modifyGangCycles(1)}\n                  subtract={modifyGangCycles(-1)}\n                  reset={resetGangCycles}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React from \"react\";\n\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { Adjuster } from \"./Adjuster\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\nconst bigNumber = 1e27;\n\ninterface IProps {\n  player: IPlayer;\n}\n\nexport function Corporation(props: IProps): React.ReactElement {\n  function addTonsCorporationFunds(): void {\n    if (props.player.corporation) {\n      props.player.corporation.funds = props.player.corporation.funds.plus(1e99);\n    }\n  }\n\n  function resetCorporationFunds(): void {\n    if (props.player.corporation) {\n      props.player.corporation.funds = props.player.corporation.funds.minus(props.player.corporation.funds);\n    }\n  }\n\n  function addTonsCorporationCycles(): void {\n    if (props.player.corporation) {\n      props.player.corporation.storedCycles = bigNumber;\n    }\n  }\n\n  function modifyCorporationCycles(modify: number): (x: number) => void {\n    return function (cycles: number): void {\n      if (props.player.corporation) {\n        props.player.corporation.storedCycles += cycles * modify;\n      }\n    };\n  }\n\n  function resetCorporationCycles(): void {\n    if (props.player.corporation) {\n      props.player.corporation.storedCycles = 0;\n    }\n  }\n\n  function finishCorporationProducts(): void {\n    if (!props.player.corporation) return;\n    props.player.corporation.divisions.forEach((div) => {\n      Object.keys(div.products).forEach((prod) => {\n        const product = div.products[prod];\n        if (product === undefined) throw new Error(\"Impossible product undefined\");\n        product.prog = 99.9;\n      });\n    });\n  }\n\n  function addCorporationResearch(): void {\n    if (!props.player.corporation) return;\n    props.player.corporation.divisions.forEach((div) => {\n      div.sciResearch.qty += 1e10;\n    });\n  }\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <h2>Corporation</h2>\n      </AccordionSummary>\n      <AccordionDetails>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <Button onClick={addTonsCorporationFunds}>Tons of funds</Button>\n                <Button onClick={resetCorporationFunds}>Reset funds</Button>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Cycles:</Typography>\n              </td>\n              <td>\n                <Adjuster\n                  label=\"cycles\"\n                  placeholder=\"amt\"\n                  tons={addTonsCorporationCycles}\n                  add={modifyCorporationCycles(1)}\n                  subtract={modifyCorporationCycles(-1)}\n                  reset={resetCorporationCycles}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Button onClick={finishCorporationProducts}>Finish products</Button>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Button onClick={addCorporationResearch}>Tons of research</Button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport Button from \"@mui/material/Button\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { generateContract, generateRandomContract, generateRandomContractOnHome } from \"../../CodingContractGenerator\";\nimport { CodingContractTypes } from \"../../CodingContracts\";\n\nexport function CodingContracts(): React.ReactElement {\n  const [codingcontract, setCodingcontract] = useState(\"Find Largest Prime Factor\");\n  function setCodingcontractDropdown(event: SelectChangeEvent<string>): void {\n    setCodingcontract(event.target.value as string);\n  }\n\n  function specificContract(): void {\n    generateContract({\n      problemType: codingcontract,\n      server: \"home\",\n    });\n  }\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <h2>Coding Contracts</h2>\n      </AccordionSummary>\n      <AccordionDetails>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <Button onClick={generateRandomContract}>Generate Random Contract</Button>\n                <Button onClick={generateRandomContractOnHome}>Generate Random Contract on Home Comp</Button>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Select onChange={setCodingcontractDropdown} value={codingcontract}>\n                  {Object.values(CodingContractTypes).map((cc) => (\n                    <MenuItem key={cc.name} value={cc.name}>\n                      {cc.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <Button onClick={specificContract}>Generate Specified Contract Type on Home Comp</Button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport { Money } from \"../../ui/React/Money\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { StockMarket as SM } from \"../../StockMarket/StockMarket\";\nimport { Stock } from \"../../StockMarket/Stock\";\n\nexport function StockMarket(): React.ReactElement {\n  const [stockPrice, setStockPrice] = useState(0);\n  const [stockSymbol, setStockSymbol] = useState(\"\");\n\n  function setStockPriceField(event: React.ChangeEvent<HTMLInputElement>): void {\n    setStockPrice(parseFloat(event.target.value));\n  }\n\n  function setStockSymbolField(event: React.ChangeEvent<HTMLInputElement>): void {\n    setStockSymbol(event.target.value);\n  }\n\n  function processStocks(sub: (arg0: Stock) => void): void {\n    const inputSymbols = stockSymbol.replace(/\\s/g, \"\");\n\n    let match: (symbol: string) => boolean = (): boolean => {\n      return true;\n    };\n\n    if (inputSymbols !== \"\" && inputSymbols !== \"all\") {\n      match = function (symbol: string): boolean {\n        return inputSymbols.split(\",\").includes(symbol);\n      };\n    }\n\n    for (const name in SM) {\n      if (SM.hasOwnProperty(name)) {\n        const stock = SM[name];\n        if (stock instanceof Stock && match(stock.symbol)) {\n          sub(stock);\n        }\n      }\n    }\n  }\n\n  function doSetStockPrice(): void {\n    if (!isNaN(stockPrice)) {\n      processStocks((stock: Stock) => {\n        stock.price = stockPrice;\n      });\n    }\n  }\n\n  function viewStockCaps(): void {\n    const stocks: JSX.Element[] = [];\n    processStocks((stock: Stock) => {\n      stocks.push(\n        <tr key={stock.symbol}>\n          <td>{stock.symbol}</td>\n          <td style={{ textAlign: \"right\" }}>\n            <Money money={stock.cap} />\n          </td>\n        </tr>,\n      );\n    });\n    dialogBoxCreate(\n      <table>\n        <tbody>\n          <tr>\n            <th>Stock</th>\n            <th>Price cap</th>\n          </tr>\n          {stocks}\n        </tbody>\n      </table>,\n    );\n  }\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <h2>Stock Market</h2>\n      </AccordionSummary>\n      <AccordionDetails>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <Typography>Symbol:</Typography>\n              </td>\n              <td>\n                <TextField placeholder=\"symbol/'all'\" onChange={setStockSymbolField} />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Price:</Typography>\n              </td>\n              <td>\n                <TextField placeholder=\"$$$\" onChange={setStockPriceField} />\n                <Button onClick={doSetStockPrice}>Set</Button>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Caps:</Typography>\n              </td>\n              <td>\n                <Button onClick={viewStockCaps}>View stock caps</Button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React from \"react\";\n\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\ninterface IProps {\n  player: IPlayer;\n}\n\nexport function Sleeves(props: IProps): React.ReactElement {\n  function sleeveMaxAllShock(): void {\n    for (let i = 0; i < props.player.sleeves.length; ++i) {\n      props.player.sleeves[i].shock = 0;\n    }\n  }\n\n  function sleeveClearAllShock(): void {\n    for (let i = 0; i < props.player.sleeves.length; ++i) {\n      props.player.sleeves[i].shock = 100;\n    }\n  }\n\n  function sleeveSyncMaxAll(): void {\n    for (let i = 0; i < props.player.sleeves.length; ++i) {\n      props.player.sleeves[i].sync = 100;\n    }\n  }\n\n  function sleeveSyncClearAll(): void {\n    for (let i = 0; i < props.player.sleeves.length; ++i) {\n      props.player.sleeves[i].sync = 0;\n    }\n  }\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <h2>Sleeves</h2>\n      </AccordionSummary>\n      <AccordionDetails>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <Typography>Shock:</Typography>\n              </td>\n              <td>\n                <Button onClick={sleeveMaxAllShock}>Max all</Button>\n              </td>\n              <td>\n                <Button onClick={sleeveClearAllShock}>Clear all</Button>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <Typography>Sync:</Typography>\n              </td>\n              <td>\n                <Button onClick={sleeveSyncMaxAll}>Max all</Button>\n              </td>\n              <td>\n                <Button onClick={sleeveSyncClearAll}>Clear all</Button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React from \"react\";\n\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\nimport Button from \"@mui/material/Button\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { saveObject } from \"../../SaveObject\";\nimport { IEngine } from \"../../IEngine\";\n\n// Update as additional BitNodes get implemented\n\ninterface IProps {\n  player: IPlayer;\n  engine: IEngine;\n}\n\nexport function TimeSkip(props: IProps): React.ReactElement {\n  function timeskip(time: number) {\n    return () => {\n      props.player.lastUpdate -= time;\n      props.engine._lastUpdate -= time;\n      saveObject.saveGame();\n      setTimeout(() => location.reload(), 1000);\n    };\n  }\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <h2>Time skip</h2>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Button onClick={timeskip(60 * 1000)}>1 minute</Button>\n        <Button onClick={timeskip(60 * 60 * 1000)}>1 hour</Button>\n        <Button onClick={timeskip(24 * 60 * 60 * 1000)}>1 day</Button>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Stats } from \"./Stats\";\nimport { Console } from \"./Console\";\nimport { AllPages } from \"./AllPages\";\n\nimport { use } from \"../../ui/Context\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\n\nexport function BladeburnerRoot(): React.ReactElement {\n  const player = use.Player();\n  const router = use.Router();\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    const id = setInterval(rerender, 200);\n    return () => clearInterval(id);\n  }, []);\n\n  const bladeburner = player.bladeburner;\n  if (bladeburner === null) return <></>;\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Grid container>\n        <Grid item xs={6}>\n          <Stats bladeburner={bladeburner} player={player} router={router} />\n        </Grid>\n        <Grid item xs={6}>\n          <Console bladeburner={bladeburner} player={player} />\n        </Grid>\n      </Grid>\n\n      <AllPages bladeburner={bladeburner} player={player} />\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { formatNumber, convertTimeMsToTimeElapsedString } from \"../../utils/StringHelperFunctions\";\nimport { BladeburnerConstants } from \"../data/Constants\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { Money } from \"../../ui/React/Money\";\nimport { StatsTable } from \"../../ui/React/StatsTable\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Factions } from \"../../Faction/Factions\";\nimport { IRouter } from \"../../ui/Router\";\nimport { joinFaction } from \"../../Faction/FactionHelpers\";\nimport { IBladeburner } from \"../IBladeburner\";\n\nimport { TravelModal } from \"./TravelModal\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Paper from \"@mui/material/Paper\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  router: IRouter;\n  player: IPlayer;\n}\n\nexport function Stats(props: IProps): React.ReactElement {\n  const [travelOpen, setTravelOpen] = useState(false);\n  const setRerender = useState(false)[1];\n\n  const inFaction = props.bladeburner.rank >= BladeburnerConstants.RankNeededForFaction;\n  useEffect(() => {\n    const id = setInterval(() => setRerender((old) => !old), 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  function openFaction(): void {\n    if (!inFaction) return;\n    const faction = Factions[\"Bladeburners\"];\n    if (!faction.isMember) {\n      joinFaction(faction);\n    }\n\n    props.router.toFaction(faction);\n  }\n\n  return (\n    <Paper sx={{ p: 1 }}>\n      <Box display=\"flex\">\n        <Tooltip title={<Typography>Your rank within the Bladeburner division.</Typography>}>\n          <Typography>Rank: {formatNumber(props.bladeburner.rank, 2)}</Typography>\n        </Tooltip>\n      </Box>\n      <br />\n      <Box display=\"flex\">\n        <Tooltip\n          title={\n            <Typography>\n              Performing actions will use up your stamina.\n              <br />\n              <br />\n              Your max stamina is determined primarily by your agility stat.\n              <br />\n              <br />\n              Your stamina gain rate is determined by both your agility and your max stamina. Higher max stamina leads\n              to a higher gain rate.\n              <br />\n              <br />\n              Once your stamina falls below 50% of its max value, it begins to negatively affect the success rate of\n              your contracts/operations. This penalty is shown in the overview panel. If the penalty is 15%, then this\n              means your success rate would be multipled by 85% (100 - 15).\n              <br />\n              <br />\n              Your max stamina and stamina gain rate can also be increased by training, or through skills and\n              Augmentation upgrades.\n            </Typography>\n          }\n        >\n          <Typography>\n            Stamina: {formatNumber(props.bladeburner.stamina, 3)} / {formatNumber(props.bladeburner.maxStamina, 3)}\n          </Typography>\n        </Tooltip>\n      </Box>\n      <br />\n      <Typography>\n        Stamina Penalty: {formatNumber((1 - props.bladeburner.calculateStaminaPenalty()) * 100, 1)}%\n      </Typography>\n      <br />\n      <Typography>Team Size: {formatNumber(props.bladeburner.teamSize, 0)}</Typography>\n      <Typography>Team Members Lost: {formatNumber(props.bladeburner.teamLost, 0)}</Typography>\n      <br />\n      <Typography>Num Times Hospitalized: {props.bladeburner.numHosp}</Typography>\n      <Typography>\n        Money Lost From Hospitalizations: <Money money={props.bladeburner.moneyLost} />\n      </Typography>\n      <br />\n      <Typography>Current City: {props.bladeburner.city}</Typography>\n      <Box display=\"flex\">\n        <Tooltip\n          title={\n            <Typography>\n              This is your Bladeburner division's estimate of how many Synthoids exist in your current city. An accurate\n              population count increases success rate estimates.\n            </Typography>\n          }\n        >\n          <Typography>\n            Est. Synthoid Population: {numeralWrapper.formatPopulation(props.bladeburner.getCurrentCity().popEst)}\n          </Typography>\n        </Tooltip>\n      </Box>\n      <br />\n      <Box display=\"flex\">\n        <Tooltip\n          title={\n            <Typography>\n              This is your Bladeburner divison's estimate of how many Synthoid communities exist in your current city.\n            </Typography>\n          }\n        >\n          <Typography>\n            Est. Synthoid Communities: {formatNumber(props.bladeburner.getCurrentCity().comms, 0)}\n          </Typography>\n        </Tooltip>\n      </Box>\n      <br />\n      <Box display=\"flex\">\n        <Tooltip\n          title={\n            <Typography>\n              The city's chaos level due to tensions and conflicts between humans and Synthoids. Having too high of a\n              chaos level can make contracts and operations harder.\n            </Typography>\n          }\n        >\n          <Typography>City Chaos: {formatNumber(props.bladeburner.getCurrentCity().chaos)}</Typography>\n        </Tooltip>\n      </Box>\n      <br />\n      {(props.bladeburner.storedCycles / BladeburnerConstants.CyclesPerSecond) * 1000 > 15000 && (\n        <>\n          <Box display=\"flex\">\n            <Tooltip\n              title={\n                <Typography>\n                  You gain bonus time while offline or when the game is inactive (e.g. when the tab is throttled by\n                  browser). Bonus time makes the Bladeburner mechanic progress faster, up to 5x the normal speed.\n                </Typography>\n              }\n            >\n              <Typography>\n                Bonus time:{\" \"}\n                {convertTimeMsToTimeElapsedString(\n                  (props.bladeburner.storedCycles / BladeburnerConstants.CyclesPerSecond) * 1000,\n                )}\n              </Typography>\n            </Tooltip>\n          </Box>\n          <br />\n        </>\n      )}\n      <Typography>Skill Points: {formatNumber(props.bladeburner.skillPoints, 0)}</Typography>\n      <br />\n      <StatsTable\n        rows={[\n          [\"Aug. Success Chance mult: \", formatNumber(props.player.bladeburner_success_chance_mult * 100, 1) + \"%\"],\n          [\"Aug. Max Stamina mult: \", formatNumber(props.player.bladeburner_max_stamina_mult * 100, 1) + \"%\"],\n          [\"Aug. Stamina Gain mult: \", formatNumber(props.player.bladeburner_stamina_gain_mult * 100, 1) + \"%\"],\n          [\"Aug. Field Analysis mult: \", formatNumber(props.player.bladeburner_analysis_mult * 100, 1) + \"%\"],\n        ]}\n      />\n      <br />\n      <Button onClick={() => setTravelOpen(true)}>Travel</Button>\n      <Tooltip title={!inFaction ? <Typography>Rank 25 required.</Typography> : \"\"}>\n        <span>\n          <Button disabled={!inFaction} onClick={openFaction}>\n            Faction\n          </Button>\n        </span>\n      </Tooltip>\n      <TravelModal open={travelOpen} onClose={() => setTravelOpen(false)} bladeburner={props.bladeburner} />\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { WorldMap } from \"../../ui/React/WorldMap\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { CityName } from \"../../Locations/data/CityNames\";\nimport { Settings } from \"../../Settings/Settings\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  open: boolean;\n  onClose: () => void;\n}\n\nexport function TravelModal(props: IProps): React.ReactElement {\n  function travel(city: string): void {\n    props.bladeburner.city = city;\n    props.onClose();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <>\n        <Typography>\n          Travel to a different city for your Bladeburner activities. This does not cost any money. The city you are in\n          for your Bladeburner duties does not affect your location in the game otherwise.\n        </Typography>\n        {Settings.DisableASCIIArt ? (\n          Object.values(CityName).map((city: CityName) => (\n            <Button key={city} onClick={() => travel(city)}>\n              {city}\n            </Button>\n          ))\n        ) : (\n          <WorldMap currentCity={props.bladeburner.city as CityName} onTravel={(city: CityName) => travel(city)} />\n        )}\n      </>\n    </Modal>\n  );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { IBladeburner } from \"../IBladeburner\";\n\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport Paper from \"@mui/material/Paper\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\n\ninterface ILineProps {\n  content: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    textfield: {\n      margin: theme.spacing(0),\n      width: \"100%\",\n    },\n    input: {\n      backgroundColor: \"#000\",\n    },\n    nopadding: {\n      padding: theme.spacing(0),\n    },\n    preformatted: {\n      whiteSpace: \"pre-wrap\",\n      margin: theme.spacing(0),\n    },\n    list: {\n      padding: theme.spacing(0),\n      height: \"100%\",\n    },\n  }),\n);\n\nfunction Line(props: ILineProps): React.ReactElement {\n  return (\n    <ListItem sx={{ p: 0 }}>\n      <Typography>{props.content}</Typography>\n    </ListItem>\n  );\n}\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  player: IPlayer;\n}\n\nexport function Console(props: IProps): React.ReactElement {\n  const classes = useStyles();\n  const scrollHook = useRef<HTMLDivElement>(null);\n  const [command, setCommand] = useState(\"\");\n  const setRerender = useState(false)[1];\n\n  function handleCommandChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setCommand(event.target.value);\n  }\n\n  const [consoleHistoryIndex, setConsoleHistoryIndex] = useState(props.bladeburner.consoleHistory.length);\n\n  // TODO: Figure out how to actually make the scrolling work correctly.\n  function scrollToBottom(): void {\n    if (!scrollHook.current) return;\n    scrollHook.current.scrollTop = scrollHook.current.scrollHeight;\n  }\n\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    const id = setInterval(rerender, 1000);\n    const id2 = setInterval(scrollToBottom, 100);\n    return () => {\n      clearInterval(id);\n      clearInterval(id2);\n    };\n  }, []);\n\n  function handleKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      if (command.length > 0) {\n        props.bladeburner.postToConsole(\"> \" + command);\n        props.bladeburner.executeConsoleCommands(props.player, command);\n        setConsoleHistoryIndex(props.bladeburner.consoleHistory.length);\n        setCommand(\"\");\n      }\n    }\n\n    const consoleHistory = props.bladeburner.consoleHistory;\n\n    if (event.keyCode === 38) {\n      // up\n      let i = consoleHistoryIndex;\n      const len = consoleHistory.length;\n      if (len === 0) {\n        return;\n      }\n      if (i < 0 || i > len) {\n        setConsoleHistoryIndex(len);\n      }\n\n      if (i !== 0) {\n        i = i - 1;\n      }\n      setConsoleHistoryIndex(i);\n      const prevCommand = consoleHistory[i];\n      event.currentTarget.value = prevCommand;\n    }\n\n    if (event.keyCode === 40) {\n      const i = consoleHistoryIndex;\n      const len = consoleHistory.length;\n\n      if (len == 0) {\n        return;\n      }\n      if (i < 0 || i > len) {\n        setConsoleHistoryIndex(len);\n      }\n\n      // Latest command, put nothing\n      if (i == len || i == len - 1) {\n        setConsoleHistoryIndex(len);\n        event.currentTarget.value = \"\";\n      } else {\n        setConsoleHistoryIndex(consoleHistoryIndex + 1);\n        const prevCommand = consoleHistory[consoleHistoryIndex + 1];\n        event.currentTarget.value = prevCommand;\n      }\n    }\n  }\n\n  return (\n    <Box height={\"60vh\"} display={\"flex\"} alignItems={\"stretch\"} component={Paper}>\n      <Box>\n        <List sx={{ height: \"100%\", overflow: \"auto\" }}>\n          {props.bladeburner.consoleLogs.map((log: any, i: number) => (\n            <Line key={i} content={log} />\n          ))}\n          <TextField\n            classes={{ root: classes.textfield }}\n            autoFocus\n            tabIndex={1}\n            type=\"text\"\n            value={command}\n            onChange={handleCommandChange}\n            onKeyDown={handleKeyDown}\n            InputProps={{\n              // for players to hook in\n              className: classes.input,\n              startAdornment: (\n                <>\n                  <Typography>&gt;&nbsp;</Typography>\n                </>\n              ),\n              spellCheck: false,\n            }}\n          />\n        </List>\n        <div ref={scrollHook}></div>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { GeneralActionPage } from \"./GeneralActionPage\";\nimport { ContractPage } from \"./ContractPage\";\nimport { OperationPage } from \"./OperationPage\";\nimport { BlackOpPage } from \"./BlackOpPage\";\nimport { SkillPage } from \"./SkillPage\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  player: IPlayer;\n}\n\nexport function AllPages(props: IProps): React.ReactElement {\n  const [value, setValue] = React.useState(0);\n\n  function handleChange(event: React.SyntheticEvent, tab: number): void {\n    setValue(tab);\n  }\n\n  return (\n    <>\n      <Tabs variant=\"fullWidth\" value={value} onChange={handleChange}>\n        <Tab label=\"General\" />\n        <Tab label=\"Contracts\" />\n        <Tab label=\"Operations\" />\n        <Tab label=\"BlackOps\" />\n        <Tab label=\"Skills\" />\n      </Tabs>\n      <Box sx={{ p: 1 }}>\n        {value === 0 && <GeneralActionPage bladeburner={props.bladeburner} player={props.player} />}\n        {value === 1 && <ContractPage bladeburner={props.bladeburner} player={props.player} />}\n        {value === 2 && <OperationPage bladeburner={props.bladeburner} player={props.player} />}\n        {value === 3 && <BlackOpPage bladeburner={props.bladeburner} player={props.player} />}\n        {value === 4 && <SkillPage bladeburner={props.bladeburner} />}\n      </Box>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { GeneralActionList } from \"./GeneralActionList\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  player: IPlayer;\n}\n\nexport function GeneralActionPage(props: IProps): React.ReactElement {\n  return (\n    <>\n      <Typography>These are generic actions that will assist you in your Bladeburner duties.</Typography>\n      <GeneralActionList bladeburner={props.bladeburner} player={props.player} />\n    </>\n  );\n}\n","import React from \"react\";\nimport { GeneralActionElem } from \"./GeneralActionElem\";\nimport { Action } from \"../Action\";\nimport { GeneralActions } from \"../GeneralActions\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  player: IPlayer;\n}\n\nexport function GeneralActionList(props: IProps): React.ReactElement {\n  const actions: Action[] = [];\n  for (const name in GeneralActions) {\n    if (GeneralActions.hasOwnProperty(name)) {\n      actions.push(GeneralActions[name]);\n    }\n  }\n  return (\n    <>\n      {actions.map((action: Action) => (\n        <GeneralActionElem key={action.name} bladeburner={props.bladeburner} action={action} player={props.player} />\n      ))}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { ActionTypes } from \"../data/ActionTypes\";\nimport { createProgressBarText } from \"../../utils/helpers/createProgressBarText\";\nimport { formatNumber, convertTimeMsToTimeElapsedString } from \"../../utils/StringHelperFunctions\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { IAction } from \"../IAction\";\nimport { GeneralActions } from \"../data/GeneralActions\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { CopyableText } from \"../../ui/React/CopyableText\";\n\nimport { StartButton } from \"./StartButton\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  player: IPlayer;\n  action: IAction;\n}\n\nexport function GeneralActionElem(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n  const isActive = props.action.name === props.bladeburner.action.name;\n  const computedActionTimeCurrent = Math.min(\n    props.bladeburner.actionTimeCurrent + props.bladeburner.actionTimeOverflow,\n    props.bladeburner.actionTimeToComplete,\n  );\n  const actionTime = (function (): number {\n    switch (props.action.name) {\n      case \"Training\":\n      case \"Field Analysis\":\n        return 30;\n      case \"Diplomacy\":\n      case \"Hyperbolic Regeneration Chamber\":\n        return 60;\n      case \"Recruitment\":\n        return props.bladeburner.getRecruitmentTime(props.player);\n    }\n    return -1; // dead code\n  })();\n  const successChance =\n    props.action.name === \"Recruitment\"\n      ? Math.max(0, Math.min(props.bladeburner.getRecruitmentSuccessChance(props.player), 1))\n      : -1;\n\n  const actionData = GeneralActions[props.action.name];\n  if (actionData === undefined) {\n    throw new Error(`Cannot find data for ${props.action.name}`);\n  }\n\n  return (\n    <Paper sx={{ my: 1, p: 1 }}>\n      {isActive ? (\n        <>\n          <Typography>\n            <CopyableText value={props.action.name} /> (IN PROGRESS - {formatNumber(computedActionTimeCurrent, 0)} /{\" \"}\n            {formatNumber(props.bladeburner.actionTimeToComplete, 0)})\n          </Typography>\n          <Typography>\n            {createProgressBarText({\n              progress: computedActionTimeCurrent / props.bladeburner.actionTimeToComplete,\n            })}\n          </Typography>\n        </>\n      ) : (\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n          <Typography>\n            <CopyableText value={props.action.name} />\n          </Typography>\n          <StartButton\n            bladeburner={props.bladeburner}\n            type={ActionTypes[props.action.name as string]}\n            name={props.action.name}\n            rerender={rerender}\n          />\n        </Box>\n      )}\n      <br />\n      <br />\n      <Typography>{actionData.desc}</Typography>\n      <br />\n      <br />\n      <Typography>\n        Time Required: {convertTimeMsToTimeElapsedString(actionTime * 1000)}\n        {successChance !== -1 && (\n          <>\n            <br />\n            Estimated success chance: {formatNumber(successChance * 100, 1)}%\n          </>\n        )}\n      </Typography>\n    </Paper>\n  );\n}\n","import React from \"react\";\n\ninterface IContract {\n  desc: JSX.Element;\n}\n\nexport const GeneralActions: {\n  [key: string]: IContract | undefined;\n} = {\n  Training: {\n    desc: (\n      <>\n        Improve your abilities at the Bladeburner unit's specialized training center. Doing this gives experience for\n        all combat stats and also increases your max stamina.\n      </>\n    ),\n  },\n\n  \"Field Analysis\": {\n    desc: (\n      <>\n        Mine and analyze Synthoid-related data. This improves the Bladeburner's unit intelligence on Synthoid locations\n        and activities. Completing this action will improve the accuracy of your Synthoid population estimated in the\n        current city.\n        <br />\n        <br />\n        Does NOT require stamina.\n      </>\n    ),\n  },\n\n  Recruitment: {\n    desc: (\n      <>\n        Attempt to recruit members for your Bladeburner team. These members can help you conduct operations.\n        <br />\n        <br />\n        Does NOT require stamina.\n      </>\n    ),\n  },\n\n  Diplomacy: {\n    desc: (\n      <>\n        Improve diplomatic relations with the Synthoid population. Completing this action will reduce the Chaos level in\n        your current city.\n        <br />\n        <br />\n        Does NOT require stamina.\n      </>\n    ),\n  },\n\n  \"Hyperbolic Regeneration Chamber\": {\n    desc: (\n      <>\n        Enter cryogenic stasis using the Bladeburner division's hi-tech Regeneration Chamber. This will slowly heal your\n        wounds and slightly increase your stamina.\n        <br />\n        <br />\n      </>\n    ),\n  },\n};\n","import * as React from \"react\";\nimport { ContractList } from \"./ContractList\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  player: IPlayer;\n}\n\nexport function ContractPage(props: IProps): React.ReactElement {\n  return (\n    <>\n      <Typography>\n        Complete contracts in order to increase your Bladeburner rank and earn money. Failing a contract will cause you\n        to lose HP, which can lead to hospitalization.\n        <br />\n        <br />\n        You can unlock higher-level contracts by successfully completing them. Higher-level contracts are more\n        difficult, but grant more rank, experience, and money.\n      </Typography>\n      <ContractList bladeburner={props.bladeburner} player={props.player} />\n    </>\n  );\n}\n","import React from \"react\";\nimport { ContractElem } from \"./ContractElem\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  player: IPlayer;\n}\n\nexport function ContractList(props: IProps): React.ReactElement {\n  const names = Object.keys(props.bladeburner.contracts);\n  const contracts = props.bladeburner.contracts;\n  return (\n    <>\n      {names.map((name: string) => (\n        <ContractElem key={name} bladeburner={props.bladeburner} action={contracts[name]} player={props.player} />\n      ))}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { ActionTypes } from \"../data/ActionTypes\";\nimport { createProgressBarText } from \"../../utils/helpers/createProgressBarText\";\nimport { formatNumber, convertTimeMsToTimeElapsedString } from \"../../utils/StringHelperFunctions\";\nimport { Contracts } from \"../data/Contracts\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { IAction } from \"../IAction\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { SuccessChance } from \"./SuccessChance\";\nimport { CopyableText } from \"../../ui/React/CopyableText\";\nimport { ActionLevel } from \"./ActionLevel\";\nimport { Autolevel } from \"./Autolevel\";\nimport { StartButton } from \"./StartButton\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  player: IPlayer;\n  action: IAction;\n}\n\nexport function ContractElem(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n  const isActive =\n    props.bladeburner.action.type === ActionTypes[\"Contract\"] && props.action.name === props.bladeburner.action.name;\n  const computedActionTimeCurrent = Math.min(\n    props.bladeburner.actionTimeCurrent + props.bladeburner.actionTimeOverflow,\n    props.bladeburner.actionTimeToComplete,\n  );\n  const actionTime = props.action.getActionTime(props.bladeburner);\n\n  const actionData = Contracts[props.action.name];\n  if (actionData === undefined) {\n    throw new Error(`Cannot find data for ${props.action.name}`);\n  }\n\n  return (\n    <Paper sx={{ my: 1, p: 1 }}>\n      {isActive ? (\n        <>\n          <Typography>\n            <CopyableText value={props.action.name} /> (IN PROGRESS - {formatNumber(computedActionTimeCurrent, 0)} /{\" \"}\n            {formatNumber(props.bladeburner.actionTimeToComplete, 0)})\n          </Typography>\n          <Typography>\n            {createProgressBarText({\n              progress: computedActionTimeCurrent / props.bladeburner.actionTimeToComplete,\n            })}\n          </Typography>\n        </>\n      ) : (\n        <>\n          <CopyableText value={props.action.name} />\n          <StartButton\n            bladeburner={props.bladeburner}\n            type={ActionTypes.Contract}\n            name={props.action.name}\n            rerender={rerender}\n          />\n        </>\n      )}\n      <br />\n      <br />\n      <ActionLevel action={props.action} bladeburner={props.bladeburner} isActive={isActive} rerender={rerender} />\n      <br />\n      <br />\n      <Typography>\n        {actionData.desc}\n        <br />\n        <br />\n        <SuccessChance action={props.action} bladeburner={props.bladeburner} />\n        <br />\n        Time Required: {convertTimeMsToTimeElapsedString(actionTime * 1000)}\n        <br />\n        Contracts remaining: {Math.floor(props.action.count)}\n        <br />\n        Successes: {props.action.successes}\n        <br />\n        Failures: {props.action.failures}\n      </Typography>\n      <br />\n      <Autolevel rerender={rerender} action={props.action} />\n    </Paper>\n  );\n}\n","import React from \"react\";\n\ninterface IContract {\n  desc: JSX.Element;\n}\n\nexport const Contracts: {\n  [key: string]: IContract | undefined;\n} = {\n  Tracking: {\n    desc: (\n      <>\n        Identify and locate Synthoids. This contract involves reconnaissance and information-gathering ONLY. Do NOT\n        engage. Stealth is of the utmost importance.\n        <br />\n        <br />\n        Successfully completing Tracking contracts will slightly improve your Synthoid population estimate for whatever\n        city you are currently in.\n      </>\n    ),\n  },\n  \"Bounty Hunter\": {\n    desc: (\n      <>\n        Hunt down and capture fugitive Synthoids. These Synthoids are wanted alive.\n        <br />\n        <br />\n        Successfully completing a Bounty Hunter contract will lower the population in your current city, and will also\n        increase its chaos level.\n      </>\n    ),\n  },\n  Retirement: {\n    desc: (\n      <>\n        Hunt down and retire (kill) rogue Synthoids.\n        <br />\n        <br />\n        Successfully completing a Retirement contract will lower the population in your current city, and will also\n        increase its chaos level.\n      </>\n    ),\n  },\n};\n","import React from \"react\";\nimport { stealthIcon } from \"../data/Icons\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nexport function StealthIcon(): React.ReactElement {\n  return <Tooltip title={<Typography>This action involves stealth</Typography>}>{stealthIcon}</Tooltip>;\n}\n","import React from \"react\";\nimport { killIcon } from \"../data/Icons\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nexport function KillIcon(): React.ReactElement {\n  return <Tooltip title={<Typography>This action involves retirement</Typography>}>{killIcon}</Tooltip>;\n}\n","import * as React from \"react\";\nimport { OperationList } from \"./OperationList\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  player: IPlayer;\n}\n\nexport function OperationPage(props: IProps): React.ReactElement {\n  return (\n    <>\n      <Typography>\n        Carry out operations for the Bladeburner division. Failing an operation will reduce your Bladeburner rank. It\n        will also cause you to lose HP, which can lead to hospitalization. In general, operations are harder and more\n        punishing than contracts, but are also more rewarding.\n        <br />\n        <br />\n        Operations can affect the chaos level and Synthoid population of your current city. The exact effects vary\n        between different Operations.\n        <br />\n        <br />\n        For operations, you can use a team. You must first recruit team members. Having a larger team will improves your\n        chances of success.\n        <br />\n        <br />\n        You can unlock higher-level operations by successfully completing them. Higher-level operations are more\n        difficult, but grant more rank and experience.\n      </Typography>\n      <OperationList bladeburner={props.bladeburner} player={props.player} />\n    </>\n  );\n}\n","import React from \"react\";\nimport { OperationElem } from \"./OperationElem\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  player: IPlayer;\n}\n\nexport function OperationList(props: IProps): React.ReactElement {\n  const names = Object.keys(props.bladeburner.operations);\n  const operations = props.bladeburner.operations;\n  return (\n    <>\n      {names.map((name: string) => (\n        <OperationElem key={name} bladeburner={props.bladeburner} action={operations[name]} player={props.player} />\n      ))}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { ActionTypes } from \"../data/ActionTypes\";\nimport { createProgressBarText } from \"../../utils/helpers/createProgressBarText\";\nimport { formatNumber, convertTimeMsToTimeElapsedString } from \"../../utils/StringHelperFunctions\";\nimport { SuccessChance } from \"./SuccessChance\";\nimport { ActionLevel } from \"./ActionLevel\";\nimport { Autolevel } from \"./Autolevel\";\nimport { StartButton } from \"./StartButton\";\nimport { TeamSizeButton } from \"./TeamSizeButton\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { Operation } from \"../Operation\";\nimport { Operations } from \"../data/Operations\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { CopyableText } from \"../../ui/React/CopyableText\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  player: IPlayer;\n  action: Operation;\n}\n\nexport function OperationElem(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n  const isActive =\n    props.bladeburner.action.type === ActionTypes[\"Operation\"] && props.action.name === props.bladeburner.action.name;\n  const computedActionTimeCurrent = Math.min(\n    props.bladeburner.actionTimeCurrent + props.bladeburner.actionTimeOverflow,\n    props.bladeburner.actionTimeToComplete,\n  );\n  const actionTime = props.action.getActionTime(props.bladeburner);\n\n  const actionData = Operations[props.action.name];\n  if (actionData === undefined) {\n    throw new Error(`Cannot find data for ${props.action.name}`);\n  }\n\n  return (\n    <Paper sx={{ my: 1, p: 1 }}>\n      {isActive ? (\n        <>\n          <Typography>\n            <CopyableText value={props.action.name} /> (IN PROGRESS - {formatNumber(computedActionTimeCurrent, 0)} /{\" \"}\n            {formatNumber(props.bladeburner.actionTimeToComplete, 0)})\n          </Typography>\n          <Typography>\n            {createProgressBarText({\n              progress: computedActionTimeCurrent / props.bladeburner.actionTimeToComplete,\n            })}\n          </Typography>\n        </>\n      ) : (\n        <>\n          <CopyableText value={props.action.name} />\n          <StartButton\n            bladeburner={props.bladeburner}\n            type={ActionTypes.Operation}\n            name={props.action.name}\n            rerender={rerender}\n          />\n          <TeamSizeButton action={props.action} bladeburner={props.bladeburner} />\n        </>\n      )}\n      <br />\n      <br />\n\n      <ActionLevel action={props.action} bladeburner={props.bladeburner} isActive={isActive} rerender={rerender} />\n      <br />\n      <br />\n      <Typography>\n        {actionData.desc}\n        <br />\n        <br />\n        <SuccessChance action={props.action} bladeburner={props.bladeburner} />\n        <br />\n        Time Required: {convertTimeMsToTimeElapsedString(actionTime * 1000)}\n        <br />\n        Operations remaining: {Math.floor(props.action.count)}\n        <br />\n        Successes: {props.action.successes}\n        <br />\n        Failures: {props.action.failures}\n      </Typography>\n      <br />\n      <Autolevel rerender={rerender} action={props.action} />\n    </Paper>\n  );\n}\n","import React, { useState } from \"react\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { Action } from \"../Action\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  action: Action;\n  open: boolean;\n  onClose: () => void;\n}\n\nexport function TeamSizeModal(props: IProps): React.ReactElement {\n  const [teamSize, setTeamSize] = useState<number | undefined>();\n\n  function confirmTeamSize(): void {\n    if (teamSize === undefined) return;\n    const num = Math.round(teamSize);\n    if (isNaN(num) || num < 0) {\n      dialogBoxCreate(\"Invalid value entered for number of Team Members (must be numeric, positive)\");\n    } else {\n      props.action.teamCount = num;\n    }\n    props.onClose();\n  }\n\n  function onTeamSize(event: React.ChangeEvent<HTMLInputElement>): void {\n    const x = parseFloat(event.target.value);\n    if (x > props.bladeburner.teamSize) setTeamSize(props.bladeburner.teamSize);\n    else setTeamSize(x);\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        Enter the amount of team members you would like to take on this Op. If you do not have the specified number of\n        team members, then as many as possible will be used. Note that team members may be lost during operations.\n      </Typography>\n      <TextField autoFocus type=\"number\" placeholder=\"Team size\" value={teamSize} onChange={onTeamSize} />\n      <Button sx={{ mx: 2 }} onClick={confirmTeamSize}>\n        Confirm\n      </Button>\n    </Modal>\n  );\n}\n","import React from \"react\";\n\ninterface IOperation {\n  desc: JSX.Element;\n}\n\nexport const Operations: {\n  [key: string]: IOperation | undefined;\n} = {\n  Investigation: {\n    desc: (\n      <>\n        As a field agent, investigate and identify Synthoid populations, movements, and operations.\n        <br />\n        <br />\n        Successful Investigation ops will increase the accuracy of your synthoid data.\n        <br />\n        <br />\n        You will NOT lose HP from failed Investigation ops.\n      </>\n    ),\n  },\n  \"Undercover Operation\": {\n    desc: (\n      <>\n        Conduct undercover operations to identify hidden and underground Synthoid communities and organizations.\n        <br />\n        <br />\n        Successful Undercover ops will increase the accuracy of your synthoid data.\n      </>\n    ),\n  },\n  \"Sting Operation\": {\n    desc: <>Conduct a sting operation to bait and capture particularly notorious Synthoid criminals.</>,\n  },\n  Raid: {\n    desc: (\n      <>\n        Lead an assault on a known Synthoid community. Note that there must be an existing Synthoid community in your\n        current city in order for this Operation to be successful.\n      </>\n    ),\n  },\n  \"Stealth Retirement Operation\": {\n    desc: (\n      <>\n        Lead a covert operation to retire Synthoids. The objective is to complete the task without drawing any\n        attention. Stealth and discretion are key.\n      </>\n    ),\n  },\n  Assassination: {\n    desc: (\n      <>\n        Assassinate Synthoids that have been identified as important, high-profile social and political leaders in the\n        Synthoid communities.\n      </>\n    ),\n  },\n};\n","import * as React from \"react\";\nimport { BlackOpList } from \"./BlackOpList\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  player: IPlayer;\n}\n\nexport function BlackOpPage(props: IProps): React.ReactElement {\n  return (\n    <>\n      <Typography>\n        Black Operations (Black Ops) are special, one-time covert operations. Each Black Op must be unlocked\n        successively by completing the one before it.\n        <br />\n        <br />\n        <b>Your ultimate goal to climb through the ranks of Bladeburners is to complete all of the Black Ops.</b>\n        <br />\n        <br />\n        Like normal operations, you may use a team for Black Ops. Failing a black op will incur heavy HP and rank\n        losses.\n      </Typography>\n      <BlackOpList bladeburner={props.bladeburner} player={props.player} />\n    </>\n  );\n}\n","import React from \"react\";\nimport { BlackOperations } from \"../BlackOperations\";\nimport { BlackOperation } from \"../BlackOperation\";\nimport { BlackOpElem } from \"./BlackOpElem\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  player: IPlayer;\n}\n\nexport function BlackOpList(props: IProps): React.ReactElement {\n  let blackops: BlackOperation[] = [];\n  for (const blackopName in BlackOperations) {\n    if (BlackOperations.hasOwnProperty(blackopName)) {\n      blackops.push(BlackOperations[blackopName]);\n    }\n  }\n  blackops.sort(function (a, b) {\n    return a.reqdRank - b.reqdRank;\n  });\n\n  blackops = blackops.filter(\n    (blackop: BlackOperation, i: number) =>\n      !(\n        props.bladeburner.blackops[blackops[i].name] == null &&\n        i !== 0 &&\n        props.bladeburner.blackops[blackops[i - 1].name] == null\n      ),\n  );\n\n  blackops = blackops.reverse();\n\n  return (\n    <>\n      {blackops.map((blackop: BlackOperation) => (\n        <BlackOpElem key={blackop.name} bladeburner={props.bladeburner} action={blackop} player={props.player} />\n      ))}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { formatNumber, convertTimeMsToTimeElapsedString } from \"../../utils/StringHelperFunctions\";\nimport { ActionTypes } from \"../data/ActionTypes\";\nimport { createProgressBarText } from \"../../utils/helpers/createProgressBarText\";\nimport { TeamSizeButton } from \"./TeamSizeButton\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport { BlackOperation } from \"../BlackOperation\";\nimport { BlackOperations } from \"../data/BlackOperations\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { CopyableText } from \"../../ui/React/CopyableText\";\nimport { SuccessChance } from \"./SuccessChance\";\nimport { StartButton } from \"./StartButton\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  player: IPlayer;\n  action: BlackOperation;\n}\n\nexport function BlackOpElem(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n  const isCompleted = props.bladeburner.blackops[props.action.name] != null;\n  if (isCompleted) {\n    return <h2 style={{ display: \"block\" }}>{props.action.name} (COMPLETED)</h2>;\n  }\n\n  const isActive =\n    props.bladeburner.action.type === ActionTypes[\"BlackOperation\"] &&\n    props.action.name === props.bladeburner.action.name;\n  const actionTime = props.action.getActionTime(props.bladeburner);\n  const hasReqdRank = props.bladeburner.rank >= props.action.reqdRank;\n  const computedActionTimeCurrent = Math.min(\n    props.bladeburner.actionTimeCurrent + props.bladeburner.actionTimeOverflow,\n    props.bladeburner.actionTimeToComplete,\n  );\n\n  const actionData = BlackOperations[props.action.name];\n  if (actionData === undefined) {\n    throw new Error(`Cannot find data for ${props.action.name}`);\n  }\n\n  return (\n    <Paper sx={{ my: 1, p: 1 }}>\n      <Typography>\n        {isActive ? (\n          <>\n            <>\n              <CopyableText value={props.action.name} /> (IN PROGRESS - {formatNumber(computedActionTimeCurrent, 0)} /{\" \"}\n              {formatNumber(props.bladeburner.actionTimeToComplete, 0)})\n              <p style={{ display: \"block\" }}>\n                {createProgressBarText({\n                  progress: computedActionTimeCurrent / props.bladeburner.actionTimeToComplete,\n                })}\n              </p>\n            </>\n          </>\n        ) : (\n          <>\n            <CopyableText value={props.action.name} />\n\n            <StartButton\n              bladeburner={props.bladeburner}\n              type={ActionTypes.BlackOperation}\n              name={props.action.name}\n              rerender={rerender}\n            />\n            <TeamSizeButton action={props.action} bladeburner={props.bladeburner} />\n          </>\n        )}\n      </Typography>\n      <br />\n      <br />\n      <Typography>{actionData.desc}</Typography>\n      <br />\n      <br />\n      <Typography color={hasReqdRank ? \"primary\" : \"error\"}>\n        Required Rank: {formatNumber(props.action.reqdRank, 0)}\n      </Typography>\n      <br />\n      <Typography>\n        <SuccessChance action={props.action} bladeburner={props.bladeburner} />\n        <br />\n        Time Required: {convertTimeMsToTimeElapsedString(actionTime * 1000)}\n      </Typography>\n    </Paper>\n  );\n}\n","import React from \"react\";\n\ninterface IBlackOp {\n  desc: JSX.Element;\n}\n\nexport const BlackOperations: {\n  [key: string]: IBlackOp | undefined;\n} = {\n  \"Operation Typhoon\": {\n    desc: (\n      <>\n        Obadiah Zenyatta is the leader of a RedWater PMC. It has long been known among the intelligence community that\n        Zenyatta, along with the rest of the PMC, is a Synthoid.\n        <br />\n        <br />\n        The goal of Operation Typhoon is to find and eliminate Zenyatta and RedWater by any means necessary. After the\n        task is completed, the actions must be covered up from the general public.\n      </>\n    ),\n  },\n\n  \"Operation Zero\": {\n    desc: (\n      <>\n        AeroCorp is one of the world's largest defense contractors. Its leader, Steve Watataki, is thought to be a\n        supporter of Synthoid rights. He must be removed.\n        <br />\n        <br />\n        The goal of Operation Zero is to covertly infiltrate AeroCorp and uncover any incriminating evidence or\n        information against Watataki that will cause him to be removed from his position at AeroCorp. Incriminating\n        evidence can be fabricated as a last resort. Be warned that AeroCorp has some of the most advanced security\n        measures in the world.\n      </>\n    ),\n  },\n  \"Operation X\": {\n    desc: (\n      <>\n        We have recently discovered an underground publication group called Samizdat. Even though most of their\n        publications are nonsensical conspiracy theories, the average human is gullible enough to believe them. Many of\n        their works discuss Synthoids and pose a threat to society. The publications are spreading rapidly in China and\n        other Eastern countries.\n        <br />\n        <br />\n        Samizdat has done a good job of keeping hidden and anonymous. However, we've just received intelligence that\n        their base of operations is in Ishima's underground sewer systems. Your task is to investigate the sewer\n        systems, and eliminate Samizdat. They must never publish anything again.\n      </>\n    ),\n  },\n  \"Operation Titan\": {\n    desc: (\n      <>\n        Several months ago Titan Laboratories' Bioengineering department was infiltrated by Synthoids. As far as we\n        know, Titan Laboratories' management has no knowledge about this. We don't know what the Synthoids are up to,\n        but the research that they could be conducting using Titan Laboraties' vast resources is potentially very\n        dangerous.\n        <br />\n        <br />\n        Your goal is to enter and destroy the Bioengineering department's facility in Aevum. The task is not just to\n        retire the Synthoids there, but also to destroy any information or research at the facility that is relevant to\n        the Synthoids and their goals.\n      </>\n    ),\n  },\n  \"Operation Ares\": {\n    desc: (\n      <>\n        One of our undercover agents, Agent Carter, has informed us of a massive weapons deal going down in Dubai\n        between rogue Russian militants and a radical Synthoid community. These weapons are next-gen plasma and energy\n        weapons. It is critical for the safety of humanity that this deal does not happen.\n        <br />\n        <br />\n        Your task is to intercept the deal. Leave no survivors.\n      </>\n    ),\n  },\n  \"Operation Archangel\": {\n    desc: (\n      <>\n        Our analysts have discovered that the popular Red Rabbit brothel in Amsterdam is run and 'staffed' by MK-VI\n        Synthoids. Intelligence suggests that the profit from this brothel is used to fund a large black market arms\n        trafficking operation.\n        <br />\n        <br />\n        The goal of this operation is to take out the leaders that are running the Red Rabbit brothel. Try to limit the\n        number of other casualties, but do what you must to complete the mission.\n      </>\n    ),\n  },\n  \"Operation Juggernaut\": {\n    desc: (\n      <>\n        The CIA has just encountered a new security threat. A new criminal group, lead by a shadowy operative who calls\n        himself Juggernaut, has been smuggling drugs and weapons (including suspected bioweapons) into Sector-12. We\n        also have reason to believe the tried to break into one of Universal Energy's facilities in order to cause a\n        city-wide blackout. The CIA suspects that Juggernaut is a heavily-augmented Synthoid, and have thus enlisted our\n        help.\n        <br />\n        <br />\n        Your mission is to eradicate Juggernaut and his followers.\n      </>\n    ),\n  },\n  \"Operation Red Dragon\": {\n    desc: (\n      <>\n        The Tetrads criminal organization is suspected of reverse-engineering the MK-VI Synthoid design. We believe they\n        altered and possibly improved the design and began manufacturing their own Synthoid models in order to bolster\n        their criminal activities.\n        <br />\n        <br />\n        Your task is to infiltrate and destroy the Tetrads' base of operations in Los Angeles. Intelligence tells us\n        that their base houses one of their Synthoid manufacturing units.\n      </>\n    ),\n  },\n  \"Operation K\": {\n    desc: (\n      <>\n        CODE RED SITUATION. Our intelligence tells us that VitaLife has discovered a new android cloning technology.\n        This technology is supposedly capable of cloning Synthoid, not only physically but also their advanced AI\n        modules. We do not believe that VitaLife is trying to use this technology illegally or maliciously, but if any\n        Synthoids were able to infiltrate the corporation and take advantage of this technology then the results would\n        be catastrophic.\n        <br />\n        <br />\n        We do not have the power or jurisdiction to shutdown this down through legal or political means, so we must\n        resort to a covert operation. Your goal is to destroy this technology and eliminate anyone who was involved in\n        its creation.\n      </>\n    ),\n  },\n  \"Operation Deckard\": {\n    desc: (\n      <>\n        Despite your success in eliminating VitaLife's new android-replicating technology in Operation K, we've\n        discovered that a small group of MK-VI Synthoids were able to make off with the schematics and design of the\n        technology before the Operation. It is almost a certainty that these Synthoids are some of the rogue MK-VI ones\n        from the Synthoid Uprising.\n        <br />\n        <br />\n        The goal of Operation Deckard is to hunt down these Synthoids and retire them. I don't need to tell you how\n        critical this mission is.\n      </>\n    ),\n  },\n  \"Operation Tyrell\": {\n    desc: (\n      <>\n        A week ago Blade Industries reported a small break-in at one of their Aevum Augmentation storage facitilities.\n        We figured out that The Dark Army was behind the heist, and didn't think any more of it. However, we've just\n        discovered that several known MK-VI Synthoids were part of that break-in group.\n        <br />\n        <br />\n        We cannot have Synthoids upgrading their already-enhanced abilities with Augmentations. Your task is to hunt\n        down the associated Dark Army members and eliminate them.\n      </>\n    ),\n  },\n  \"Operation Wallace\": {\n    desc: (\n      <>\n        Based on information gathered from Operation Tyrell, we've discovered that The Dark Army was well aware that\n        there were Synthoids amongst their ranks. Even worse, we believe that The Dark Army is working together with\n        other criminal organizations such as The Syndicate and that they are planning some sort of large-scale takeover\n        of multiple major cities, most notably Aevum. We suspect that Synthoids have infiltrated the ranks of these\n        criminal factions and are trying to stage another Synthoid uprising.\n        <br />\n        <br />\n        The best way to deal with this is to prevent it before it even happens. The goal of Operation Wallace is to\n        destroy the Dark Army and Syndicate factions in Aevum immediately. Leave no survivors.\n      </>\n    ),\n  },\n  \"Operation Shoulder of Orion\": {\n    desc: (\n      <>\n        China's Solaris Space Systems is secretly launching the first manned spacecraft in over a decade using\n        Synthoids. We believe China is trying to establish the first off-world colonies.\n        <br />\n        <br />\n        The mission is to prevent this launch without instigating an international conflict. When you accept this\n        mission you will be officially disavowed by the NSA and the national government until after you successfully\n        return. In the event of failure, all of the operation's team members must not let themselves be captured alive.\n      </>\n    ),\n  },\n  \"Operation Hyron\": {\n    desc: (\n      <>\n        Our intelligence tells us that Fulcrum Technologies is developing a quantum supercomputer using human brains as\n        core processors. This supercomputer is rumored to be able to store vast amounts of data and perform computations\n        unmatched by any other supercomputer on the planet. But more importantly, the use of organic human brains means\n        that the supercomputer may be able to reason abstractly and become self-aware.\n        <br />\n        <br />\n        I do not need to remind you why sentient-level AIs pose a serious threat to all of mankind.\n        <br />\n        <br />\n        The research for this project is being conducted at one of Fulcrum Technologies secret facilities in Aevum,\n        codenamed 'Alpha Ranch'. Infiltrate the compound, delete and destroy the work, and then find and kill the\n        project lead.\n      </>\n    ),\n  },\n  \"Operation Morpheus\": {\n    desc: (\n      <>\n        DreamSense Technologies is an advertising company that uses special technology to transmit their ads into the\n        peoples dreams and subconcious. They do this using broadcast transmitter towers. Based on information from our\n        agents and informants in Chonqging, we have reason to believe that one of the broadcast towers there has been\n        compromised by Synthoids and is being used to spread pro-Synthoid propaganda.\n        <br />\n        <br />\n        The mission is to destroy this broadcast tower. Speed and stealth are of the upmost important for this.\n      </>\n    ),\n  },\n  \"Operation Ion Storm\": {\n    desc: (\n      <>\n        Our analysts have uncovered a gathering of MK-VI Synthoids that have taken up residence in the Sector-12 Slums.\n        We don't know if they are rogue Synthoids from the Uprising, but we do know that they have been stockpiling\n        weapons, money, and other resources. This makes them dangerous.\n        <br />\n        <br />\n        This is a full-scale assault operation to find and retire all of these Synthoids in the Sector-12 Slums.\n      </>\n    ),\n  },\n  \"Operation Annihilus\": {\n    desc: (\n      <>\n        Our superiors have ordered us to eradicate everything and everyone in an underground facility located in Aevum.\n        They tell us that the facility houses many dangerous Synthoids and belongs to a terrorist organization called\n        'The Covenant'. We have no prior intelligence about this organization, so you are going in blind.\n      </>\n    ),\n  },\n  \"Operation Ultron\": {\n    desc: (\n      <>\n        OmniTek Incorporated, the original designer and manufacturer of Synthoids, has notified us of a malfunction in\n        their AI design. This malfunction, when triggered, causes MK-VI Synthoids to become radicalized and seek out the\n        destruction of humanity. They say that this bug affects all MK-VI Synthoids, not just the rogue ones from the\n        Uprising.\n        <br />\n        <br />\n        OmniTek has also told us they they believe someone has triggered this malfunction in a large group of MK-VI\n        Synthoids, and that these newly-radicalized Synthoids are now amassing in Volhaven to form a terrorist group\n        called Ultron.\n        <br />\n        <br />\n        Intelligence suggests Ultron is heavily armed and that their members are augmented. We believe Ultron is making\n        moves to take control of and weaponize DeltaOne's Tactical High-Energy Satellite Laser Array (THESLA).\n        <br />\n        <br />\n        Your task is to find and destroy Ultron.\n      </>\n    ),\n  },\n  \"Operation Centurion\": {\n    desc: (\n      <>\n        {\"D)@#)($M)C0293c40($*)@#D0JUMP3Rm0C<*@#)*$)#02c94830c(#$*D)\"}\n        <br />\n        <br />\n        Throughout all of humanity's history, we have relied on technology to survive, conquer, and progress. Its\n        advancement became our primary goal. And at the peak of human civilization technology turned into power. Global,\n        absolute power.\n        <br />\n        <br />\n        It seems that the universe is not without a sense of irony.\n        <br />\n        <br />\n        {\"D)@#)($M)C0293c40($*)@#D0JUMP3Rm0C<*@#)*$)#02c94830c(#$*D)\"}\n      </>\n    ),\n  },\n  \"Operation Vindictus\": {\n    desc: (\n      <>\n        {\"D)@#)($M)C0293c40($*)@#D0JUMP3Rm0C<*@#)*$)#02c94830c(#$*D)\"}\n        <br />\n        <br />\n        The bits are all around us. The daemons that hold the Node together can manifest themselves in many different\n        ways.\n        <br />\n        <br />\n        {\"D)@#)($M)C0293c40($*)@#D0JUMP3Rm0C<*@#)*$)#02c94830c(#$*D)\"}\n      </>\n    ),\n  },\n  \"Operation Daedalus\": {\n    desc: <> Yesterday we obeyed kings and bent our neck to emperors. Today we kneel only to truth.</>,\n  },\n};\n","import React, { useState } from \"react\";\nimport { SkillList } from \"./SkillList\";\nimport { BladeburnerConstants } from \"../data/Constants\";\nimport { formatNumber } from \"../../utils/StringHelperFunctions\";\nimport { IBladeburner } from \"../IBladeburner\";\nimport Typography from \"@mui/material/Typography\";\nimport { BitNodeMultipliers } from \"../../BitNode/BitNodeMultipliers\";\ninterface IProps {\n  bladeburner: IBladeburner;\n}\n\nexport function SkillPage(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  const mults = props.bladeburner.skillMultipliers;\n\n  function valid(mult: any): boolean {\n    return mult && mult !== 1;\n  }\n\n  return (\n    <>\n      <Typography>\n        <strong>Skill Points: {formatNumber(props.bladeburner.skillPoints, 0)}</strong>\n      </Typography>\n      <Typography>\n        You will gain one skill point every{\" \"}\n        {BladeburnerConstants.RanksPerSkillPoint * BitNodeMultipliers.BladeburnerSkillCost} ranks.\n        <br />\n        <br />\n        Note that when upgrading a skill, the benefit for that skill is additive. However, the effects of different\n        skills with each other is multiplicative.\n        <br />\n      </Typography>\n      <br />\n      {valid(mults[\"successChanceAll\"]) && (\n        <Typography>Total Success Chance: x{formatNumber(mults[\"successChanceAll\"], 3)}</Typography>\n      )}\n      {valid(mults[\"successChanceStealth\"]) && (\n        <Typography>Stealth Success Chance: x{formatNumber(mults[\"successChanceStealth\"], 3)}</Typography>\n      )}\n      {valid(mults[\"successChanceKill\"]) && (\n        <Typography>Retirement Success Chance: x{formatNumber(mults[\"successChanceKill\"], 3)}</Typography>\n      )}\n      {valid(mults[\"successChanceContract\"]) && (\n        <Typography>Contract Success Chance: x{formatNumber(mults[\"successChanceContract\"], 3)}</Typography>\n      )}\n      {valid(mults[\"successChanceOperation\"]) && (\n        <Typography>Operation Success Chance: x{formatNumber(mults[\"successChanceOperation\"], 3)}</Typography>\n      )}\n      {valid(mults[\"successChanceEstimate\"]) && (\n        <Typography>Synthoid Data Estimate: x{formatNumber(mults[\"successChanceEstimate\"], 3)}</Typography>\n      )}\n      {valid(mults[\"actionTime\"]) && <Typography>Action Time: x{formatNumber(mults[\"actionTime\"], 3)}</Typography>}\n      {valid(mults[\"effHack\"]) && <Typography>Hacking Skill: x{formatNumber(mults[\"effHack\"], 3)}</Typography>}\n      {valid(mults[\"effStr\"]) && <Typography>Strength: x{formatNumber(mults[\"effStr\"], 3)}</Typography>}\n      {valid(mults[\"effDef\"]) && <Typography>Defense: x{formatNumber(mults[\"effDef\"], 3)}</Typography>}\n      {valid(mults[\"effDex\"]) && <Typography>Dexterity: x{formatNumber(mults[\"effDex\"], 3)}</Typography>}\n      {valid(mults[\"effAgi\"]) && <Typography>Agility: x{formatNumber(mults[\"effAgi\"], 3)}</Typography>}\n      {valid(mults[\"effCha\"]) && <Typography>Charisma: x{formatNumber(mults[\"effCha\"], 3)}</Typography>}\n      {valid(mults[\"effInt\"]) && <Typography>Intelligence: x{formatNumber(mults[\"effInt\"], 3)}</Typography>}\n      {valid(mults[\"stamina\"]) && <Typography>Stamina: x{formatNumber(mults[\"stamina\"], 3)}</Typography>}\n      {valid(mults[\"money\"]) && <Typography>Contract Money: x{formatNumber(mults[\"money\"], 3)}</Typography>}\n      {valid(mults[\"expGain\"]) && <Typography>Exp Gain: x{formatNumber(mults[\"expGain\"], 3)}</Typography>}\n      <br />\n      <SkillList bladeburner={props.bladeburner} onUpgrade={() => setRerender((old) => !old)} />\n    </>\n  );\n}\n\n/*\n\n\n\n\nvar multKeys = Object.keys(this.skillMultipliers);\nfor (var i = 0; i < multKeys.length; ++i) {\n    var mult = this.skillMultipliers[multKeys[i]];\n    if (mult && mult !== 1) {\n        mult = formatNumber(mult, 3);\n        switch(multKeys[i]) {\n            \n        }\n    }\n}\n*/\n","import * as React from \"react\";\nimport { SkillElem } from \"./SkillElem\";\nimport { Skills } from \"../Skills\";\nimport { IBladeburner } from \"../IBladeburner\";\n\ninterface IProps {\n  bladeburner: IBladeburner;\n  onUpgrade: () => void;\n}\n\nexport function SkillList(props: IProps): React.ReactElement {\n  return (\n    <>\n      {Object.keys(Skills).map((skill: string) => (\n        <SkillElem key={skill} bladeburner={props.bladeburner} skill={Skills[skill]} onUpgrade={props.onUpgrade} />\n      ))}\n    </>\n  );\n}\n","import React from \"react\";\nimport { CopyableText } from \"../../ui/React/CopyableText\";\nimport { formatNumber } from \"../../utils/StringHelperFunctions\";\nimport { IBladeburner } from \"../IBladeburner\";\n\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\ninterface IProps {\n  skill: any;\n  bladeburner: IBladeburner;\n  onUpgrade: () => void;\n}\n\nexport function SkillElem(props: IProps): React.ReactElement {\n  const skillName = props.skill.name;\n  let currentLevel = 0;\n  if (props.bladeburner.skills[skillName] && !isNaN(props.bladeburner.skills[skillName])) {\n    currentLevel = props.bladeburner.skills[skillName];\n  }\n  const pointCost = props.skill.calculateCost(currentLevel);\n\n  const canLevel = props.bladeburner.skillPoints >= pointCost;\n  const maxLvl = props.skill.maxLvl ? currentLevel >= props.skill.maxLvl : false;\n\n  function onClick(): void {\n    if (props.bladeburner.skillPoints < pointCost) return;\n    props.bladeburner.skillPoints -= pointCost;\n    props.bladeburner.upgradeSkill(props.skill);\n    props.onUpgrade();\n  }\n\n  return (\n    <Paper sx={{ my: 1, p: 1 }}>\n      <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n        <Typography>\n          <CopyableText value={props.skill.name} />\n        </Typography>\n        {!canLevel || maxLvl ? (\n          <IconButton disabled>\n            <CloseIcon />\n          </IconButton>\n        ) : (\n          <IconButton onClick={onClick}>\n            <AddIcon />\n          </IconButton>\n        )}\n      </Box>\n      <br />\n      <br />\n      <Typography>Level: {currentLevel}</Typography>\n      {maxLvl ? (\n        <Typography>MAX LEVEL</Typography>\n      ) : (\n        <Typography>Skill Points required: {formatNumber(pointCost, 0)}</Typography>\n      )}\n      <Typography>{props.skill.desc}</Typography>\n    </Paper>\n  );\n}\n","/**\n * React Component for all the gang stuff.\n */\nimport React, { useState, useEffect } from \"react\";\nimport { ManagementSubpage } from \"./ManagementSubpage\";\nimport { TerritorySubpage } from \"./TerritorySubpage\";\nimport { use } from \"../../ui/Context\";\nimport { Factions } from \"../../Faction/Factions\";\n\nexport function GangRoot(): React.ReactElement {\n  const player = use.Player();\n  const router = use.Router();\n  const gang = (function () {\n    if (player.gang === null) throw new Error(\"Gang should not be null\");\n    return player.gang;\n  })();\n  const [management, setManagement] = useState(true);\n  const setRerender = useState(false)[1];\n\n  useEffect(() => {\n    const id = setInterval(() => setRerender((old) => !old), 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  function back(): void {\n    router.toFaction(Factions[gang.facName]);\n  }\n\n  return (\n    <div className=\"gang-container\">\n      <a className=\"a-link-button\" style={{ display: \"inline-block\" }} onClick={back}>\n        Back\n      </a>\n      <a\n        className={management ? \"a-link-button-inactive\" : \"a-link-button\"}\n        style={{ display: \"inline-block\" }}\n        onClick={() => setManagement(true)}\n      >\n        Gang Management\n      </a>\n      <a\n        className={!management ? \"a-link-button-inactive\" : \"a-link-button\"}\n        style={{ display: \"inline-block\" }}\n        onClick={() => setManagement(false)}\n      >\n        Gang Territory\n      </a>\n      {management ? <ManagementSubpage gang={gang} player={player} /> : <TerritorySubpage gang={gang} />}\n    </div>\n  );\n}\n","/**\n * React Component for the subpage that manages gang members, the main page.\n */\nimport React from \"react\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { GangStats } from \"./GangStats\";\nimport { Gang } from \"../Gang\";\nimport { GangMemberList } from \"./GangMemberList\";\n\ninterface IProps {\n  gang: Gang;\n  player: IPlayer;\n}\n\nexport function ManagementSubpage(props: IProps): React.ReactElement {\n  return (\n    <div style={{ display: \"block\" }}>\n      <p className=\"noselect\" style={{ width: \"70%\" }}>\n        This page is used to manage your gang members and get an overview of your gang's stats.\n        <br />\n        <br />\n        If a gang member is not earning much money or respect, the task that you have assigned to that member might be\n        too difficult. Consider training that member's stats or choosing an easier task. The tasks closer to the top of\n        the dropdown list are generally easier. Alternatively, the gang member's low production might be due to the fact\n        that your wanted level is too high. Consider assigning a few members to the '\n        {props.gang.isHackingGang ? \"Ethical Hacking\" : \"Vigilante Justice\"}' task to lower your wanted level.\n        <br />\n        <br />\n        Installing Augmentations does NOT reset your progress with your Gang. Furthermore, after installing\n        Augmentations, you will automatically be a member of whatever Faction you created your gang with.\n        <br />\n        <br />\n        You can also manage your gang programmatically through Netscript using the Gang API\n      </p>\n      <br />\n      <GangStats gang={props.gang} />\n      <br />\n      <GangMemberList gang={props.gang} player={props.player} />\n    </div>\n  );\n}\n","/**\n * React Component for the stats related to the gang, like total respect and\n * money per second.\n */\nimport React from \"react\";\nimport { Factions } from \"../../Faction/Factions\";\nimport { Gang } from \"../Gang\";\n\nimport { formatNumber } from \"../../utils/StringHelperFunctions\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { MoneyRate } from \"../../ui/React/MoneyRate\";\nimport { Reputation } from \"../../ui/React/Reputation\";\nimport { AllGangs } from \"../AllGangs\";\nimport { BonusTime } from \"./BonusTime\";\n\ninterface IProps {\n  gang: Gang;\n}\n\nexport function GangStats(props: IProps): React.ReactElement {\n  const territoryMult = AllGangs[props.gang.facName].territory * 100;\n  let territoryStr;\n  if (territoryMult <= 0) {\n    territoryStr = formatNumber(0, 2);\n  } else if (territoryMult >= 100) {\n    territoryStr = formatNumber(100, 2);\n  } else {\n    territoryStr = formatNumber(territoryMult, 2);\n  }\n\n  return (\n    <>\n      <p className=\"tooltip\" style={{ display: \"inline-block\" }}>\n        Respect: {numeralWrapper.formatRespect(props.gang.respect)} (\n        {numeralWrapper.formatRespect(5 * props.gang.respectGainRate)} / sec)\n        <span className=\"tooltiptext\">\n          Represents the amount of respect your gang has from other gangs and criminal organizations. Your respect\n          affects the amount of money your gang members will earn, and also determines how much reputation you are\n          earning with your gang's corresponding Faction.\n        </span>\n      </p>\n      <br />\n      <p className=\"tooltip\" style={{ display: \"inline-block\" }}>\n        Wanted Level: {numeralWrapper.formatWanted(props.gang.wanted)} (\n        {numeralWrapper.formatWanted(5 * props.gang.wantedGainRate)} / sec)\n        <span className=\"tooltiptext\">\n          Represents how much the gang is wanted by law enforcement. The higher your gang's wanted level, the harder it\n          will be for your gang members to make money and earn respect. Note that the minimum wanted level is 1.\n        </span>\n      </p>\n      <br />\n      <p className=\"tooltip\" style={{ display: \"inline-block\" }}>\n        Wanted Level Penalty: -{formatNumber((1 - props.gang.getWantedPenalty()) * 100, 2)}%\n        <span className=\"tooltiptext\">Penalty for respect and money gain rates due to Wanted Level</span>\n      </p>\n      <br />\n      <div>\n        <p style={{ display: \"inline-block\" }}>\n          Money gain rate: <MoneyRate money={5 * props.gang.moneyGainRate} />\n        </p>\n      </div>\n      <br />\n      <p className=\"tooltip\" style={{ display: \"inline-block\" }}>\n        Territory: {territoryStr}%\n        <span className=\"tooltiptext\">The percentage of total territory your Gang controls</span>\n      </p>\n      <br />\n      <p style={{ display: \"inline-block\" }}>\n        Faction reputation: <Reputation reputation={Factions[props.gang.facName].playerReputation} />\n      </p>\n      <br />\n      <BonusTime gang={props.gang} />\n    </>\n  );\n}\n","/**\n * React Component for displaying the bonus time remaining.\n */\nimport * as React from \"react\";\nimport { Gang } from \"../Gang\";\nimport { CONSTANTS } from \"../../Constants\";\nimport { convertTimeMsToTimeElapsedString } from \"../../utils/StringHelperFunctions\";\n\ninterface IProps {\n  gang: Gang;\n}\n\nexport function BonusTime(props: IProps): React.ReactElement {\n  const CyclerPerSecond = 1000 / CONSTANTS._idleSpeed;\n  if ((props.gang.storedCycles / CyclerPerSecond) * 1000 <= 5000) return <></>;\n  const bonusMillis = (props.gang.storedCycles / CyclerPerSecond) * 1000;\n  return (\n    <>\n      <p className=\"tooltip\" style={{ display: \"inline-block\" }}>\n        Bonus time: {convertTimeMsToTimeElapsedString(bonusMillis)}\n        <span className=\"tooltiptext noselect\">\n          You gain bonus time while offline or when the game is inactive (e.g. when the tab is throttled by the\n          browser). Bonus time makes the Gang mechanic progress faster, up to 5x the normal speed.\n        </span>\n      </p>\n      <br />\n    </>\n  );\n}\n","/**\n * React Component for the list of gang members on the management subpage.\n */\nimport React, { useState } from \"react\";\nimport { GangMemberUpgradePopup } from \"./GangMemberUpgradePopup\";\nimport { GangMemberAccordion } from \"./GangMemberAccordion\";\nimport { createPopup } from \"../../ui/React/createPopup\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { Gang } from \"../Gang\";\nimport { GangMember } from \"../GangMember\";\nimport { RecruitButton } from \"./RecruitButton\";\n\ninterface IProps {\n  gang: Gang;\n  player: IPlayer;\n}\n\nexport function GangMemberList(props: IProps): React.ReactElement {\n  const [filter, setFilter] = useState(\"\");\n  const setRerender = useState(false)[1];\n\n  function openUpgradePopup(): void {\n    const popupId = `gang-upgrade-popup`;\n    createPopup(popupId, GangMemberUpgradePopup, {\n      gang: props.gang,\n      player: props.player,\n      popupId: popupId,\n    });\n  }\n\n  function onFilterChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setFilter(event.target.value);\n  }\n\n  const members = props.gang.members.filter(\n    (member: GangMember) => member.name.indexOf(filter) > -1 || member.task.indexOf(filter) > -1,\n  );\n\n  return (\n    <>\n      <RecruitButton onRecruit={() => setRerender((old) => !old)} gang={props.gang} />\n      <br />\n      <input\n        className=\"text-input noselect\"\n        placeholder=\"Filter gang member\"\n        style={{ margin: \"5px\", padding: \"5px\" }}\n        value={filter}\n        onChange={onFilterChange}\n      />\n      <a className=\"a-link-button\" style={{ display: \"inline-block\" }} onClick={openUpgradePopup}>\n        Manage Equipment\n      </a>\n      <ul>\n        {members.map((member: GangMember) => (\n          <li key={member.name}>\n            <GangMemberAccordion gang={props.gang} member={member} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","/**\n * React Component for the popup that manages gang members upgrades\n */\nimport React, { useState, useEffect } from \"react\";\nimport { formatNumber } from \"../../utils/StringHelperFunctions\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { GangMemberUpgrades } from \"../GangMemberUpgrades\";\nimport { GangMemberUpgrade } from \"../GangMemberUpgrade\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { Money } from \"../../ui/React/Money\";\nimport { removePopup } from \"../../ui/React/createPopup\";\nimport { GangMember } from \"../GangMember\";\nimport { Gang } from \"../Gang\";\nimport { UpgradeType } from \"../data/upgrades\";\n\ninterface INextRevealProps {\n  gang: Gang;\n  upgrades: string[];\n  type: UpgradeType;\n  player: IPlayer;\n}\n\nfunction NextReveal(props: INextRevealProps): React.ReactElement {\n  const upgrades = Object.keys(GangMemberUpgrades)\n    .filter((upgName: string) => {\n      const upg = GangMemberUpgrades[upgName];\n      if (props.player.money.gt(props.gang.getUpgradeCost(upg))) return false;\n      if (upg.type !== props.type) return false;\n      if (props.upgrades.includes(upgName)) return false;\n      return true;\n    })\n    .map((upgName: string) => GangMemberUpgrades[upgName]);\n\n  if (upgrades.length === 0) return <></>;\n  return (\n    <p>\n      Next at <Money money={upgrades[0].cost} />\n    </p>\n  );\n}\n\ninterface IPanelProps {\n  member: GangMember;\n  gang: Gang;\n  player: IPlayer;\n}\n\nfunction GangMemberUpgradePanel(props: IPanelProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  function filterUpgrades(list: string[], type: UpgradeType): GangMemberUpgrade[] {\n    return Object.keys(GangMemberUpgrades)\n      .filter((upgName: string) => {\n        const upg = GangMemberUpgrades[upgName];\n        if (props.player.money.lt(props.gang.getUpgradeCost(upg))) return false;\n        if (upg.type !== type) return false;\n        if (list.includes(upgName)) return false;\n        return true;\n      })\n      .map((upgName: string) => GangMemberUpgrades[upgName]);\n  }\n  const weaponUpgrades = filterUpgrades(props.member.upgrades, UpgradeType.Weapon);\n  const armorUpgrades = filterUpgrades(props.member.upgrades, UpgradeType.Armor);\n  const vehicleUpgrades = filterUpgrades(props.member.upgrades, UpgradeType.Vehicle);\n  const rootkitUpgrades = filterUpgrades(props.member.upgrades, UpgradeType.Rootkit);\n  const augUpgrades = filterUpgrades(props.member.augmentations, UpgradeType.Augmentation);\n\n  function purchasedUpgrade(upgName: string): React.ReactElement {\n    const upg = GangMemberUpgrades[upgName];\n    return (\n      <div key={upgName} className=\"gang-owned-upgrade tooltip\">\n        {upg.name}\n        <span className=\"tooltiptext\" dangerouslySetInnerHTML={{ __html: upg.desc }} />\n      </div>\n    );\n  }\n\n  function upgradeButton(upg: GangMemberUpgrade, left = false): React.ReactElement {\n    function onClick(): void {\n      props.member.buyUpgrade(upg, props.player, props.gang);\n      setRerender((old) => !old);\n    }\n    return (\n      <a\n        key={upg.name}\n        className=\"a-link-button tooltip\"\n        style={{\n          margin: \"2px\",\n          padding: \"2px\",\n          display: \"block\",\n          fontSize: \"11px\",\n        }}\n        onClick={onClick}\n      >\n        {upg.name} - <Money money={props.gang.getUpgradeCost(upg)} player={props.player} />\n        <span className={left ? \"tooltiptextleft\" : \"tooltiptext\"} dangerouslySetInnerHTML={{ __html: upg.desc }} />\n      </a>\n    );\n  }\n\n  const asc = {\n    hack: props.member.calculateAscensionMult(props.member.hack_asc_points),\n    str: props.member.calculateAscensionMult(props.member.str_asc_points),\n    def: props.member.calculateAscensionMult(props.member.def_asc_points),\n    dex: props.member.calculateAscensionMult(props.member.dex_asc_points),\n    agi: props.member.calculateAscensionMult(props.member.agi_asc_points),\n    cha: props.member.calculateAscensionMult(props.member.cha_asc_points),\n  };\n  return (\n    <div style={{ border: \"1px solid white\" }}>\n      <h1>\n        {props.member.name}({props.member.task})\n      </h1>\n      <pre style={{ fontSize: \"14px\", display: \"inline-block\", width: \"20%\" }}>\n        Hack: {props.member.hack} (x\n        {formatNumber(props.member.hack_mult * asc.hack, 2)})<br />\n        Str: {props.member.str} (x\n        {formatNumber(props.member.str_mult * asc.str, 2)})<br />\n        Def: {props.member.def} (x\n        {formatNumber(props.member.def_mult * asc.def, 2)})<br />\n        Dex: {props.member.dex} (x\n        {formatNumber(props.member.dex_mult * asc.dex, 2)})<br />\n        Agi: {props.member.agi} (x\n        {formatNumber(props.member.agi_mult * asc.agi, 2)})<br />\n        Cha: {props.member.cha} (x\n        {formatNumber(props.member.cha_mult * asc.cha, 2)})\n      </pre>\n      <div className=\"gang-owned-upgrades-div noselect\">\n        Purchased Upgrades: {props.member.upgrades.map((upg: string) => purchasedUpgrade(upg))}\n        {props.member.augmentations.map((upg: string) => purchasedUpgrade(upg))}\n      </div>\n      <div className=\"noselect\" style={{ width: \"20%\", display: \"inline-block\" }}>\n        <h2>Weapons</h2>\n        {weaponUpgrades.map((upg) => upgradeButton(upg))}\n        <NextReveal\n          gang={props.gang}\n          type={UpgradeType.Weapon}\n          player={props.player}\n          upgrades={props.member.upgrades}\n        />\n      </div>\n      <div className=\"noselect\" style={{ width: \"20%\", display: \"inline-block\" }}>\n        <h2>Armor</h2>\n        {armorUpgrades.map((upg) => upgradeButton(upg))}\n        <NextReveal gang={props.gang} type={UpgradeType.Armor} player={props.player} upgrades={props.member.upgrades} />\n      </div>\n      <div className=\"noselect\" style={{ width: \"20%\", display: \"inline-block\" }}>\n        <h2>Vehicles</h2>\n        {vehicleUpgrades.map((upg) => upgradeButton(upg))}\n        <NextReveal\n          gang={props.gang}\n          type={UpgradeType.Vehicle}\n          player={props.player}\n          upgrades={props.member.upgrades}\n        />\n      </div>\n      <div className=\"noselect\" style={{ width: \"20%\", display: \"inline-block\" }}>\n        <h2>Rootkits</h2>\n        {rootkitUpgrades.map((upg) => upgradeButton(upg, true))}\n        <NextReveal\n          gang={props.gang}\n          type={UpgradeType.Rootkit}\n          player={props.player}\n          upgrades={props.member.upgrades}\n        />\n      </div>\n      <div className=\"noselect\" style={{ width: \"20%\", display: \"inline-block\" }}>\n        <h2>Augmentations</h2>\n        {augUpgrades.map((upg) => upgradeButton(upg, true))}\n        <NextReveal\n          gang={props.gang}\n          type={UpgradeType.Augmentation}\n          player={props.player}\n          upgrades={props.member.upgrades}\n        />\n      </div>\n    </div>\n  );\n}\n\ninterface IProps {\n  gang: Gang;\n  player: IPlayer;\n  popupId: string;\n}\n\nexport function GangMemberUpgradePopup(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  const [filter, setFilter] = useState(\"\");\n\n  function closePopup(this: Window, ev: KeyboardEvent): void {\n    if (ev.keyCode !== 27) return;\n    removePopup(props.popupId);\n  }\n\n  useEffect(() => {\n    window.addEventListener<\"keydown\">(\"keydown\", closePopup);\n    const id = setInterval(() => setRerender((old) => !old), 1000);\n    return () => {\n      clearInterval(id);\n      window.removeEventListener<\"keydown\">(\"keydown\", closePopup);\n    };\n  }, []);\n\n  return (\n    <>\n      <input\n        className=\"text-input noselect\"\n        value={filter}\n        placeholder=\"Filter gang member\"\n        onChange={(event) => setFilter(event.target.value)}\n      />\n      <p className=\"tooltip\" style={{ marginLeft: \"6px\", display: \"inline-block\" }}>\n        Discount: -{numeralWrapper.formatPercentage(1 - 1 / props.gang.getDiscount())}\n        <span className=\"tooltiptext noselect\">\n          You get a discount on equipment and upgrades based on your gang's respect and power. More respect and power\n          leads to more discounts.\n        </span>\n      </p>\n      {props.gang.members.map((member: GangMember) => (\n        <GangMemberUpgradePanel key={member.name} player={props.player} gang={props.gang} member={member} />\n      ))}\n    </>\n  );\n}\n","import { IMults, UpgradeType } from \"./data/upgrades\";\nimport { numeralWrapper } from \"../ui/numeralFormat\";\n\nexport class GangMemberUpgrade {\n  name: string;\n  cost: number;\n  type: UpgradeType;\n  desc: string;\n  mults: IMults;\n\n  constructor(name = \"\", cost = 0, type: UpgradeType = UpgradeType.Weapon, mults: IMults = {}) {\n    this.name = name;\n    this.cost = cost;\n    this.type = type;\n    this.mults = mults;\n\n    this.desc = this.createDescription();\n  }\n\n  createDescription(): string {\n    const lines = [\"Effects:\"];\n    if (this.mults.str != null) {\n      lines.push(`+${numeralWrapper.formatPercentage(this.mults.str - 1, 0)} strength skill`);\n      lines.push(`+${numeralWrapper.formatPercentage((this.mults.str - 1) / 4, 2)} strength exp`);\n    }\n    if (this.mults.def != null) {\n      lines.push(`+${numeralWrapper.formatPercentage(this.mults.def - 1, 0)} defense skill`);\n      lines.push(`+${numeralWrapper.formatPercentage((this.mults.def - 1) / 4, 2)} defense exp`);\n    }\n    if (this.mults.dex != null) {\n      lines.push(`+${numeralWrapper.formatPercentage(this.mults.dex - 1, 0)} dexterity skill`);\n      lines.push(`+${numeralWrapper.formatPercentage((this.mults.dex - 1) / 4, 2)} dexterity exp`);\n    }\n    if (this.mults.agi != null) {\n      lines.push(`+${numeralWrapper.formatPercentage(this.mults.agi - 1, 0)} agility skill`);\n      lines.push(`+${numeralWrapper.formatPercentage((this.mults.agi - 1) / 4, 2)} agility exp`);\n    }\n    if (this.mults.cha != null) {\n      lines.push(`+${numeralWrapper.formatPercentage(this.mults.cha - 1, 0)} charisma skill`);\n      lines.push(`+${numeralWrapper.formatPercentage((this.mults.cha - 1) / 4, 2)} charisma exp`);\n    }\n    if (this.mults.hack != null) {\n      lines.push(`+${numeralWrapper.formatPercentage(this.mults.hack - 1, 0)} hacking skill`);\n      lines.push(`+${numeralWrapper.formatPercentage((this.mults.hack - 1) / 4, 2)} hacking exp`);\n    }\n    return lines.join(\"<br>\");\n  }\n\n  // User friendly version of type.\n  getType(): string {\n    switch (this.type) {\n      case UpgradeType.Weapon:\n        return \"Weapon\";\n      case UpgradeType.Armor:\n        return \"Armor\";\n      case UpgradeType.Vehicle:\n        return \"Vehicle\";\n      case UpgradeType.Rootkit:\n        return \"Rootkit\";\n      case UpgradeType.Augmentation:\n        return \"Augmentation\";\n      default:\n        return \"\";\n    }\n  }\n}\n","/**\n * React component for a popup content container\n *\n * Takes in a prop for rendering the content inside the popup\n */\nimport React, { useEffect } from \"react\";\n\ninterface IProps<T> {\n  content: (props: T) => React.ReactElement;\n  id: string;\n  props: T;\n  removePopup: () => void;\n}\n\nexport function Popup<T>(props: IProps<T>): React.ReactElement {\n  function keyDown(event: KeyboardEvent): void {\n    if (event.key === \"Escape\") props.removePopup();\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", keyDown);\n    };\n  });\n\n  return (\n    <div className={\"popup-box-content\"} id={`${props.id}-content`}>\n      {React.createElement(props.content, props.props)}\n    </div>\n  );\n}\n","/**\n * For a given element, this function removes it AND its children\n * @param elem The element to remove.\n */\nexport function removeElement(elem: Element | null): void {\n  if (elem === null) {\n    // tslint:disable-next-line:no-console\n    console.debug(\"The element passed into 'removeElement' was null.\");\n\n    return;\n  }\n  if (!(elem instanceof Element)) {\n    // tslint:disable-next-line:no-console\n    console.debug(\"The element passed into 'removeElement' was not an instance of an Element.\");\n\n    return;\n  }\n\n  while (elem.firstChild !== null) {\n    elem.removeChild(elem.firstChild);\n  }\n\n  if (elem.parentNode !== null) {\n    elem.parentNode.removeChild(elem);\n  }\n}\n","/**\n * React Component for a gang member on the management subpage.\n */\nimport React from \"react\";\nimport { Gang } from \"../Gang\";\nimport { GangMember } from \"../GangMember\";\nimport { BBAccordion } from \"../../ui/React/BBAccordion\";\nimport { GangMemberAccordionContent } from \"./GangMemberAccordionContent\";\n\ninterface IProps {\n  gang: Gang;\n  member: GangMember;\n}\n\nexport function GangMemberAccordion(props: IProps): React.ReactElement {\n  return (\n    <BBAccordion\n      panelInitiallyOpened={true}\n      headerContent={<>{props.member.name}</>}\n      panelContent={<GangMemberAccordionContent gang={props.gang} member={props.member} />}\n    />\n  );\n}\n","/**\n * React component to create an accordion element\n */\nimport * as React from \"react\";\n\ntype IProps = {\n  headerClass?: string; // Override default class\n  headerContent: React.ReactElement;\n  panelClass?: string; // Override default class\n  panelContent: React.ReactElement;\n  panelInitiallyOpened?: boolean;\n  style?: string;\n};\n\ntype IState = {\n  panelOpened: boolean;\n};\n\nexport class BBAccordion extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.handleHeaderClick = this.handleHeaderClick.bind(this);\n\n    this.state = {\n      panelOpened: props.panelInitiallyOpened ? props.panelInitiallyOpened : false,\n    };\n  }\n\n  handleHeaderClick(): void {\n    this.setState({\n      panelOpened: !this.state.panelOpened,\n    });\n  }\n\n  render(): React.ReactNode {\n    let className = \"accordion-header\";\n    if (typeof this.props.headerClass === \"string\") {\n      className = this.props.headerClass;\n    }\n\n    if (this.state.panelOpened) className += \" active\";\n\n    return (\n      <>\n        <button className={className} onClick={this.handleHeaderClick}>\n          {this.props.headerContent}\n        </button>\n        <AccordionPanel\n          opened={this.state.panelOpened}\n          panelClass={this.props.panelClass}\n          panelContent={this.props.panelContent}\n        />\n      </>\n    );\n  }\n}\n\ntype IPanelProps = {\n  opened: boolean;\n  panelClass?: string; // Override default class\n  panelContent: React.ReactElement;\n};\n\nclass AccordionPanel extends React.Component<IPanelProps, any> {\n  shouldComponentUpdate(nextProps: IPanelProps): boolean {\n    return this.props.opened || nextProps.opened;\n  }\n\n  render(): React.ReactNode {\n    let className = \"accordion-panel\";\n    if (typeof this.props.panelClass === \"string\") {\n      className = this.props.panelClass;\n    }\n\n    if (!this.props.opened) return <></>;\n\n    return (\n      <div className={className} style={{ display: \"block\" }}>\n        {this.props.panelContent}\n      </div>\n    );\n  }\n}\n","/**\n * React Component for the content of the accordion of gang members on the\n * management subpage.\n */\nimport React, { useState } from \"react\";\nimport { GangMemberStats } from \"./GangMemberStats\";\nimport { TaskSelector } from \"./TaskSelector\";\nimport { TaskDescription } from \"./TaskDescription\";\nimport { Gang } from \"../Gang\";\nimport { GangMember } from \"../GangMember\";\n\ninterface IProps {\n  gang: Gang;\n  member: GangMember;\n}\n\nexport function GangMemberAccordionContent(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  return (\n    <>\n      <div className={\"gang-member-info-div tooltip\"}>\n        <GangMemberStats onAscend={() => setRerender((old) => !old)} gang={props.gang} member={props.member} />\n      </div>\n      <div className={\"gang-member-info-div\"}>\n        <TaskSelector onTaskChange={() => setRerender((old) => !old)} gang={props.gang} member={props.member} />\n      </div>\n      <div className={\"gang-member-info-div\"}>\n        <TaskDescription member={props.member} />\n      </div>\n    </>\n  );\n}\n","/**\n * React Component for the first part of a gang member details.\n * Contains skills and exp.\n */\nimport React from \"react\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { formatNumber } from \"../../utils/StringHelperFunctions\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { createPopup } from \"../../ui/React/createPopup\";\nimport { Gang } from \"../Gang\";\nimport { GangMember } from \"../GangMember\";\nimport { AscensionPopup } from \"./AscensionPopup\";\n\ninterface IProps {\n  member: GangMember;\n  gang: Gang;\n  onAscend: () => void;\n}\n\nexport function GangMemberStats(props: IProps): React.ReactElement {\n  function ascend(): void {\n    const popupId = `gang-management-ascend-member ${props.member.name}`;\n    createPopup(popupId, AscensionPopup, {\n      member: props.member,\n      gang: props.gang,\n      popupId: popupId,\n      onAscend: props.onAscend,\n    });\n  }\n\n  function openAscensionHelp(): void {\n    dialogBoxCreate(\n      <>\n        Ascending a Gang Member resets the member's progress and stats in exchange for a permanent boost to their stat\n        multipliers.\n        <br />\n        <br />\n        The additional stat multiplier that the Gang Member gains upon ascension is based on the amount of exp they\n        have.\n        <br />\n        <br />\n        Upon ascension, the member will lose all of its non-Augmentation Equipment and your gang will lose respect equal\n        to the total respect earned by the member.\n      </>,\n    );\n  }\n\n  const asc = {\n    hack: props.member.calculateAscensionMult(props.member.hack_asc_points),\n    str: props.member.calculateAscensionMult(props.member.str_asc_points),\n    def: props.member.calculateAscensionMult(props.member.def_asc_points),\n    dex: props.member.calculateAscensionMult(props.member.dex_asc_points),\n    agi: props.member.calculateAscensionMult(props.member.agi_asc_points),\n    cha: props.member.calculateAscensionMult(props.member.cha_asc_points),\n  };\n\n  return (\n    <>\n      <span className=\"tooltiptext smallfont\">\n        Hk: x{numeralWrapper.formatMultiplier(props.member.hack_mult * asc.hack)}(x\n        {numeralWrapper.formatMultiplier(props.member.hack_mult)} Eq, x{numeralWrapper.formatMultiplier(asc.hack)} Asc)\n        <br />\n        St: x{numeralWrapper.formatMultiplier(props.member.str_mult * asc.str)}\n        (x{numeralWrapper.formatMultiplier(props.member.str_mult)} Eq, x{numeralWrapper.formatMultiplier(asc.str)} Asc)\n        <br />\n        Df: x{numeralWrapper.formatMultiplier(props.member.def_mult * asc.def)}\n        (x{numeralWrapper.formatMultiplier(props.member.def_mult)} Eq, x{numeralWrapper.formatMultiplier(asc.def)} Asc)\n        <br />\n        Dx: x{numeralWrapper.formatMultiplier(props.member.dex_mult * asc.dex)}\n        (x{numeralWrapper.formatMultiplier(props.member.dex_mult)} Eq, x{numeralWrapper.formatMultiplier(asc.dex)} Asc)\n        <br />\n        Ag: x{numeralWrapper.formatMultiplier(props.member.agi_mult * asc.agi)}\n        (x{numeralWrapper.formatMultiplier(props.member.agi_mult)} Eq, x{numeralWrapper.formatMultiplier(asc.agi)} Asc)\n        <br />\n        Ch: x{numeralWrapper.formatMultiplier(props.member.cha_mult * asc.cha)}\n        (x{numeralWrapper.formatMultiplier(props.member.cha_mult)} Eq, x{numeralWrapper.formatMultiplier(asc.cha)} Asc)\n      </span>\n      <pre>\n        Hacking: {formatNumber(props.member.hack, 0)} ({numeralWrapper.formatExp(props.member.hack_exp)} exp)\n        <br />\n        Strength: {formatNumber(props.member.str, 0)} ({numeralWrapper.formatExp(props.member.str_exp)} exp)\n        <br />\n        Defense: {formatNumber(props.member.def, 0)} ({numeralWrapper.formatExp(props.member.def_exp)} exp)\n        <br />\n        Dexterity: {formatNumber(props.member.dex, 0)} ({numeralWrapper.formatExp(props.member.dex_exp)} exp)\n        <br />\n        Agility: {formatNumber(props.member.agi, 0)} ({numeralWrapper.formatExp(props.member.agi_exp)} exp)\n        <br />\n        Charisma: {formatNumber(props.member.cha, 0)} ({numeralWrapper.formatExp(props.member.cha_exp)} exp)\n        <br />\n      </pre>\n      <br />\n      {props.member.canAscend() && (\n        <>\n          <button className=\"accordion-button noselect\" onClick={ascend}>\n            Ascend\n          </button>\n          <div className=\"help-tip noselect\" style={{ marginTop: \"5px\" }} onClick={openAscensionHelp}>\n            ?\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","/**\n * React Component for the content of the popup before the player confirms the\n * ascension of a gang member.\n */\nimport React, { useState, useEffect } from \"react\";\nimport { Gang } from \"../Gang\";\nimport { GangMember } from \"../GangMember\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { removePopup } from \"../../ui/React/createPopup\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\n\ninterface IProps {\n  member: GangMember;\n  gang: Gang;\n  popupId: string;\n  onAscend: () => void;\n}\n\nexport function AscensionPopup(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n\n  useEffect(() => {\n    const id = setInterval(() => setRerender((old) => !old), 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  function confirm(): void {\n    props.onAscend();\n    const res = props.gang.ascendMember(props.member);\n    dialogBoxCreate(\n      <p>\n        You ascended {props.member.name}!<br />\n        <br />\n        Your gang lost {numeralWrapper.formatRespect(res.respect)} respect.\n        <br />\n        <br />\n        {props.member.name} gained the following stat multipliers for ascending:\n        <br />\n        Hacking: x{numeralWrapper.format(res.hack, \"0.000\")}\n        <br />\n        Strength: x{numeralWrapper.format(res.str, \"0.000\")}\n        <br />\n        Defense: x{numeralWrapper.format(res.def, \"0.000\")}\n        <br />\n        Dexterity: x{numeralWrapper.format(res.dex, \"0.000\")}\n        <br />\n        Agility: x{numeralWrapper.format(res.agi, \"0.000\")}\n        <br />\n        Charisma: x{numeralWrapper.format(res.cha, \"0.000\")}\n        <br />\n      </p>,\n    );\n    removePopup(props.popupId);\n  }\n\n  function cancel(): void {\n    removePopup(props.popupId);\n  }\n\n  // const ascendBenefits = props.member.getAscensionResults();\n  const preAscend = props.member.getCurrentAscensionMults();\n  const postAscend = props.member.getAscensionMultsAfterAscend();\n\n  return (\n    <>\n      <pre>\n        Are you sure you want to ascend this member? They will lose all of\n        <br />\n        their non-Augmentation upgrades and their stats will reset back to 1.\n        <br />\n        <br />\n        Furthermore, your gang will lose {numeralWrapper.formatRespect(props.member.earnedRespect)} respect\n        <br />\n        <br />\n        In return, they will gain the following permanent boost to stat multipliers:\n        <br />\n        Hacking: x{numeralWrapper.format(preAscend.hack, \"0.000\")} =&gt; x\n        {numeralWrapper.format(postAscend.hack, \"0.000\")}\n        <br />\n        Strength: x{numeralWrapper.format(preAscend.str, \"0.000\")} =&gt; x\n        {numeralWrapper.format(postAscend.str, \"0.000\")}\n        <br />\n        Defense: x{numeralWrapper.format(preAscend.def, \"0.000\")} =&gt; x\n        {numeralWrapper.format(postAscend.def, \"0.000\")}\n        <br />\n        Dexterity: x{numeralWrapper.format(preAscend.dex, \"0.000\")} =&gt; x\n        {numeralWrapper.format(postAscend.dex, \"0.000\")}\n        <br />\n        Agility: x{numeralWrapper.format(preAscend.agi, \"0.000\")} =&gt; x\n        {numeralWrapper.format(postAscend.agi, \"0.000\")}\n        <br />\n        Charisma: x{numeralWrapper.format(preAscend.cha, \"0.000\")} =&gt; x\n        {numeralWrapper.format(postAscend.cha, \"0.000\")}\n        <br />\n      </pre>\n      <button className=\"std-button\" onClick={confirm}>\n        Ascend\n      </button>\n      <button className=\"std-button\" onClick={cancel}>\n        Cancel\n      </button>\n    </>\n  );\n}\n","/**\n * React Component for the middle part of the gang member accordion. Contains\n * the task selector as well as some stats.\n */\nimport React, { useState } from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { StatsTable } from \"../../ui/React/StatsTable\";\nimport { MoneyRate } from \"../../ui/React/MoneyRate\";\nimport { Gang } from \"../Gang\";\nimport { GangMember } from \"../GangMember\";\n\ninterface IProps {\n  member: GangMember;\n  gang: Gang;\n  onTaskChange: () => void;\n}\n\nexport function TaskSelector(props: IProps): React.ReactElement {\n  const [currentTask, setCurrentTask] = useState(props.member.task);\n\n  function onChange(event: React.ChangeEvent<HTMLSelectElement>): void {\n    const task = event.target.value;\n    props.member.assignToTask(task);\n    setCurrentTask(task);\n    props.onTaskChange();\n  }\n\n  const tasks = props.gang.getAllTaskNames();\n\n  const data = [\n    [`Money:`, <MoneyRate money={5 * props.member.calculateMoneyGain(props.gang)} />],\n    [`Respect:`, `${numeralWrapper.formatRespect(5 * props.member.calculateRespectGain(props.gang))} / sec`],\n    [`Wanted Level:`, `${numeralWrapper.formatWanted(5 * props.member.calculateWantedLevelGain(props.gang))} / sec`],\n    [`Total Respect:`, `${numeralWrapper.formatRespect(props.member.earnedRespect)}`],\n  ];\n\n  return (\n    <>\n      <select onChange={onChange} className=\"dropdown noselect\" value={currentTask}>\n        <option key={0} value={\"---\"}>\n          ---\n        </option>\n        {tasks.map((task: string, i: number) => (\n          <option key={i + 1} value={task}>\n            {task}\n          </option>\n        ))}\n      </select>\n      <div>\n        <StatsTable rows={data} />\n      </div>\n    </>\n  );\n}\n","/**\n * React Component for left side of the gang member accordion, contains the\n * description of the task that member is currently doing.\n */\nimport React from \"react\";\nimport { GangMemberTasks } from \"../GangMemberTasks\";\nimport { GangMember } from \"../GangMember\";\n\ninterface IProps {\n  member: GangMember;\n}\n\nexport function TaskDescription(props: IProps): React.ReactElement {\n  const task = GangMemberTasks[props.member.task];\n  const desc = task ? task.desc : GangMemberTasks[\"Unassigned\"].desc;\n\n  return <p className=\"inline noselect\" dangerouslySetInnerHTML={{ __html: desc }} />;\n}\n","import { ITaskParams } from \"../ITaskParams\";\n/* tslint:disable:max-line-length */\n\n/**\n * Defines the parameters that can be used to initialize and describe a GangMemberTask\n * (defined in Gang.js)\n */\nexport interface IGangMemberTaskMetadata {\n  /**\n   * Description of the task\n   */\n  desc: string;\n\n  /**\n   * Whether or not this task is meant for Combat-type gangs\n   */\n  isCombat: boolean;\n\n  /**\n   * Whether or not this task is for Hacking-type gangs\n   */\n  isHacking: boolean;\n\n  /**\n   * Name of the task\n   */\n  name: string;\n\n  /**\n   * An object containing weighting parameters for the task. These parameters are used for\n   * various calculations (respect gain, wanted gain, etc.)\n   */\n  params: ITaskParams;\n}\n\n/**\n * Array of metadata for all Gang Member tasks. Used to construct the global GangMemberTask\n * objects in Gang.js\n */\nexport const gangMemberTasksMetadata: IGangMemberTaskMetadata[] = [\n  {\n    desc: \"This gang member is currently idle\",\n    isCombat: true,\n    isHacking: true,\n    name: \"Unassigned\",\n    params: { hackWeight: 100 }, // This is just to get by the weight check in the GangMemberTask constructor\n  },\n  {\n    desc: \"Assign this gang member to create and distribute ransomware<br><br>Earns money - Slightly increases respect - Slightly increases wanted level\",\n    isCombat: false,\n    isHacking: true,\n    name: \"Ransomware\",\n    params: {\n      baseRespect: 0.00005,\n      baseWanted: 0.0001,\n      baseMoney: 1,\n      hackWeight: 100,\n      difficulty: 1,\n    },\n  },\n  {\n    desc: \"Assign this gang member to attempt phishing scams and attacks<br><br>Earns money - Slightly increases respect - Slightly increases wanted level\",\n    isCombat: false,\n    isHacking: true,\n    name: \"Phishing\",\n    params: {\n      baseRespect: 0.00008,\n      baseWanted: 0.003,\n      baseMoney: 2.5,\n      hackWeight: 85,\n      chaWeight: 15,\n      difficulty: 3.5,\n    },\n  },\n  {\n    desc: \"Assign this gang member to attempt identity theft<br><br>Earns money - Increases respect - Increases wanted level\",\n    isCombat: false,\n    isHacking: true,\n    name: \"Identity Theft\",\n    params: {\n      baseRespect: 0.0001,\n      baseWanted: 0.075,\n      baseMoney: 6,\n      hackWeight: 80,\n      chaWeight: 20,\n      difficulty: 5,\n    },\n  },\n  {\n    desc: \"Assign this gang member to carry out DDoS attacks<br><br>Increases respect - Increases wanted level\",\n    isCombat: false,\n    isHacking: true,\n    name: \"DDoS Attacks\",\n    params: {\n      baseRespect: 0.0004,\n      baseWanted: 0.2,\n      hackWeight: 100,\n      difficulty: 8,\n    },\n  },\n  {\n    desc: \"Assign this gang member to create and distribute malicious viruses<br><br>Increases respect - Increases wanted level\",\n    isCombat: false,\n    isHacking: true,\n    name: \"Plant Virus\",\n    params: {\n      baseRespect: 0.0006,\n      baseWanted: 0.4,\n      hackWeight: 100,\n      difficulty: 12,\n    },\n  },\n  {\n    desc: \"Assign this gang member to commit financial fraud and digital counterfeiting<br><br>Earns money - Slightly increases respect - Slightly increases wanted level\",\n    isCombat: false,\n    isHacking: true,\n    name: \"Fraud & Counterfeiting\",\n    params: {\n      baseRespect: 0.0004,\n      baseWanted: 0.3,\n      baseMoney: 15,\n      hackWeight: 80,\n      chaWeight: 20,\n      difficulty: 20,\n    },\n  },\n  {\n    desc: \"Assign this gang member to launder money<br><br>Earns money - Increases respect - Increases wanted level\",\n    isCombat: false,\n    isHacking: true,\n    name: \"Money Laundering\",\n    params: {\n      baseRespect: 0.001,\n      baseWanted: 1.25,\n      baseMoney: 120,\n      hackWeight: 75,\n      chaWeight: 25,\n      difficulty: 25,\n    },\n  },\n  {\n    desc: \"Assign this gang member to commit acts of cyberterrorism<br><br>Greatly increases respect - Greatly increases wanted level\",\n    isCombat: false,\n    isHacking: true,\n    name: \"Cyberterrorism\",\n    params: {\n      baseRespect: 0.01,\n      baseWanted: 6,\n      hackWeight: 80,\n      chaWeight: 20,\n      difficulty: 36,\n    },\n  },\n  {\n    desc: \"Assign this gang member to be an ethical hacker for corporations<br><br>Earns money - Lowers wanted level\",\n    isCombat: false,\n    isHacking: true,\n    name: \"Ethical Hacking\",\n    params: {\n      baseWanted: -0.001,\n      baseMoney: 1,\n      hackWeight: 90,\n      chaWeight: 10,\n      difficulty: 1,\n    },\n  },\n  {\n    desc: \"Assign this gang member to mug random people on the streets<br><br>Earns money - Slightly increases respect - Very slightly increases wanted level\",\n    isCombat: true,\n    isHacking: false,\n    name: \"Mug People\",\n    params: {\n      baseRespect: 0.00005,\n      baseWanted: 0.00005,\n      baseMoney: 1.2,\n      strWeight: 25,\n      defWeight: 25,\n      dexWeight: 25,\n      agiWeight: 10,\n      chaWeight: 15,\n      difficulty: 1,\n    },\n  },\n  {\n    desc: \"Assign this gang member to sell drugs<br><br>Earns money - Slightly increases respect - Slightly increases wanted level - Scales slightly with territory\",\n    isCombat: true,\n    isHacking: false,\n    name: \"Deal Drugs\",\n    params: {\n      baseRespect: 0.00006,\n      baseWanted: 0.002,\n      baseMoney: 5,\n      agiWeight: 20,\n      dexWeight: 20,\n      chaWeight: 60,\n      difficulty: 3.5,\n      territory: {\n        money: 1.2,\n        respect: 1,\n        wanted: 1.15,\n      },\n    },\n  },\n  {\n    desc: \"Assign this gang member to extort civilians in your territory<br><br>Earns money - Slightly increases respect - Increases wanted - Scales heavily with territory\",\n    isCombat: true,\n    isHacking: false,\n    name: \"Strongarm Civilians\",\n    params: {\n      baseRespect: 0.00004,\n      baseWanted: 0.02,\n      baseMoney: 2.5,\n      hackWeight: 10,\n      strWeight: 25,\n      defWeight: 25,\n      dexWeight: 20,\n      agiWeight: 10,\n      chaWeight: 10,\n      difficulty: 5,\n      territory: {\n        money: 1.6,\n        respect: 1.1,\n        wanted: 1.5,\n      },\n    },\n  },\n  {\n    desc: \"Assign this gang member to run cons<br><br>Earns money - Increases respect - Increases wanted level\",\n    isCombat: true,\n    isHacking: false,\n    name: \"Run a Con\",\n    params: {\n      baseRespect: 0.00012,\n      baseWanted: 0.05,\n      baseMoney: 15,\n      strWeight: 5,\n      defWeight: 5,\n      agiWeight: 25,\n      dexWeight: 25,\n      chaWeight: 40,\n      difficulty: 14,\n    },\n  },\n  {\n    desc: \"Assign this gang member to commit armed robbery on stores, banks and armored cars<br><br>Earns money - Increases respect - Increases wanted level\",\n    isCombat: true,\n    isHacking: false,\n    name: \"Armed Robbery\",\n    params: {\n      baseRespect: 0.00014,\n      baseWanted: 0.1,\n      baseMoney: 38,\n      hackWeight: 20,\n      strWeight: 15,\n      defWeight: 15,\n      agiWeight: 10,\n      dexWeight: 20,\n      chaWeight: 20,\n      difficulty: 20,\n    },\n  },\n  {\n    desc: \"Assign this gang member to traffick illegal arms<br><br>Earns money - Increases respect - Increases wanted level - Scales heavily with territory\",\n    isCombat: true,\n    isHacking: false,\n    name: \"Traffick Illegal Arms\",\n    params: {\n      baseRespect: 0.0002,\n      baseWanted: 0.24,\n      baseMoney: 58,\n      hackWeight: 15,\n      strWeight: 20,\n      defWeight: 20,\n      dexWeight: 20,\n      chaWeight: 25,\n      difficulty: 32,\n      territory: {\n        money: 1.4,\n        respect: 1.3,\n        wanted: 1.25,\n      },\n    },\n  },\n  {\n    desc: \"Assign this gang member to threaten and black mail high-profile targets<br><br>Earns money - Slightly increases respect - Slightly increases wanted level\",\n    isCombat: true,\n    isHacking: false,\n    name: \"Threaten & Blackmail\",\n    params: {\n      baseRespect: 0.0002,\n      baseWanted: 0.125,\n      baseMoney: 24,\n      hackWeight: 25,\n      strWeight: 25,\n      dexWeight: 25,\n      chaWeight: 25,\n      difficulty: 28,\n    },\n  },\n  {\n    desc: \"Assign this gang member to engage in human trafficking operations<br><br>Earns money - Increases respect - Increases wanted level - Scales heavily with territory\",\n    isCombat: true,\n    isHacking: false,\n    name: \"Human Trafficking\",\n    params: {\n      baseRespect: 0.004,\n      baseWanted: 1.25,\n      baseMoney: 120,\n      hackWeight: 30,\n      strWeight: 5,\n      defWeight: 5,\n      dexWeight: 30,\n      chaWeight: 30,\n      difficulty: 36,\n      territory: {\n        money: 1.5,\n        respect: 1.5,\n        wanted: 1.6,\n      },\n    },\n  },\n  {\n    desc: \"Assign this gang member to commit acts of terrorism<br><br>Greatly increases respect - Greatly increases wanted level - Scales heavily with territory\",\n    isCombat: true,\n    isHacking: false,\n    name: \"Terrorism\",\n    params: {\n      baseRespect: 0.01,\n      baseWanted: 6,\n      hackWeight: 20,\n      strWeight: 20,\n      defWeight: 20,\n      dexWeight: 20,\n      chaWeight: 20,\n      difficulty: 36,\n      territory: {\n        money: 1,\n        respect: 2,\n        wanted: 2,\n      },\n    },\n  },\n  {\n    desc: \"Assign this gang member to be a vigilante and protect the city from criminals<br><br>Decreases wanted level\",\n    isCombat: true,\n    isHacking: true,\n    name: \"Vigilante Justice\",\n    params: {\n      baseWanted: -0.001,\n      hackWeight: 20,\n      strWeight: 20,\n      defWeight: 20,\n      dexWeight: 20,\n      agiWeight: 20,\n      difficulty: 1,\n      territory: {\n        money: 1,\n        respect: 1,\n        wanted: 0.9, // Gets harder with more territory\n      },\n    },\n  },\n  {\n    desc: \"Assign this gang member to increase their combat stats (str, def, dex, agi)\",\n    isCombat: true,\n    isHacking: true,\n    name: \"Train Combat\",\n    params: {\n      strWeight: 25,\n      defWeight: 25,\n      dexWeight: 25,\n      agiWeight: 25,\n      difficulty: 100,\n    },\n  },\n  {\n    desc: \"Assign this gang member to train their hacking skills\",\n    isCombat: true,\n    isHacking: true,\n    name: \"Train Hacking\",\n    params: { hackWeight: 100, difficulty: 45 },\n  },\n  {\n    desc: \"Assign this gang member to train their charisma\",\n    isCombat: true,\n    isHacking: true,\n    name: \"Train Charisma\",\n    params: { chaWeight: 100, difficulty: 8 },\n  },\n  {\n    desc: \"Assign this gang member to engage in territorial warfare with other gangs. Members assigned to this task will help increase your gang's territory and will defend your territory from being taken.\",\n    isCombat: true,\n    isHacking: true,\n    name: \"Territory Warfare\",\n    params: {\n      hackWeight: 15,\n      strWeight: 20,\n      defWeight: 20,\n      dexWeight: 20,\n      agiWeight: 20,\n      chaWeight: 5,\n      difficulty: 5,\n    },\n  },\n];\n","/**\n * React Component for the recruitment button and text on the gang main page.\n */\nimport React from \"react\";\nimport { Gang } from \"../Gang\";\nimport { RecruitPopup } from \"./RecruitPopup\";\nimport { GangConstants } from \"../data/Constants\";\nimport { formatNumber } from \"../../utils/StringHelperFunctions\";\nimport { createPopup } from \"../../ui/React/createPopup\";\n\ninterface IProps {\n  gang: Gang;\n  onRecruit: () => void;\n}\n\nexport function RecruitButton(props: IProps): React.ReactElement {\n  if (props.gang.members.length >= GangConstants.MaximumGangMembers) {\n    return <></>;\n  }\n\n  if (!props.gang.canRecruitMember()) {\n    const respect = props.gang.getRespectNeededToRecruitMember();\n    return (\n      <>\n        <a className=\"a-link-button-inactive\" style={{ display: \"inline-block\", margin: \"10px\" }}>\n          Recruit Gang Member\n        </a>\n        <p style={{ margin: \"10px\", color: \"red\", display: \"inline-block\" }}>\n          {formatNumber(respect, 2)} respect needed to recruit next member\n        </p>\n      </>\n    );\n  }\n\n  function onClick(): void {\n    const popupId = \"recruit-gang-member-popup\";\n    createPopup(popupId, RecruitPopup, {\n      gang: props.gang,\n      popupId: popupId,\n      onRecruit: props.onRecruit,\n    });\n  }\n\n  return (\n    <>\n      <a className=\"a-link-button\" onClick={onClick} style={{ display: \"inline-block\", margin: \"10px\" }}>\n        Recruit Gang Member\n      </a>\n    </>\n  );\n}\n","/**\n * React Component for the popup used to recruit new gang members.\n */\nimport React, { useState } from \"react\";\nimport { Gang } from \"../Gang\";\nimport { removePopup } from \"../../ui/React/createPopup\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\n\ninterface IRecruitPopupProps {\n  gang: Gang;\n  popupId: string;\n  onRecruit: () => void;\n}\n\nexport function RecruitPopup(props: IRecruitPopupProps): React.ReactElement {\n  const [name, setName] = useState(\"\");\n\n  function recruit(): void {\n    if (name === \"\") {\n      dialogBoxCreate(\"You must enter a name for your Gang member!\");\n      return;\n    }\n    if (!props.gang.canRecruitMember()) {\n      dialogBoxCreate(\"You cannot recruit another Gang member!\");\n      return;\n    }\n\n    // At this point, the only way this can fail is if you already\n    // have a gang member with the same name\n    if (!props.gang.recruitMember(name)) {\n      dialogBoxCreate(\"You already have a gang member with this name!\");\n      return;\n    }\n\n    props.onRecruit();\n    removePopup(props.popupId);\n  }\n\n  function onKeyUp(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) recruit();\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setName(event.target.value);\n  }\n\n  return (\n    <>\n      <p className=\"noselect\">Enter a name for your new Gang member:</p>\n      <br />\n      <input\n        autoFocus\n        onKeyUp={onKeyUp}\n        onChange={onChange}\n        className=\"text-input noselect\"\n        type=\"text\"\n        placeholder=\"unique name\"\n      />\n      <a className=\"std-button\" onClick={recruit}>\n        Recruit Gang Member\n      </a>\n    </>\n  );\n}\n","/**\n * React Component for the territory subpage.\n */\nimport React from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { formatNumber } from \"../../utils/StringHelperFunctions\";\nimport { AllGangs } from \"../AllGangs\";\nimport { Gang } from \"../Gang\";\n\ninterface IProps {\n  gang: Gang;\n}\n\nexport function TerritorySubpage(props: IProps): React.ReactElement {\n  function openWarfareHelp(): void {\n    dialogBoxCreate(\n      \"This percentage represents the chance you have of \" +\n        \"'clashing' with with another gang. If you do not \" +\n        \"wish to gain/lose territory, then keep this \" +\n        \"percentage at 0% by not engaging in territory warfare.\",\n    );\n  }\n\n  function formatTerritory(n: number): string {\n    const v = n * 100;\n    if (v <= 0) {\n      return formatNumber(0, 2);\n    } else if (v >= 100) {\n      return formatNumber(100, 2);\n    } else {\n      return formatNumber(v, 2);\n    }\n  }\n\n  const playerPower = AllGangs[props.gang.facName].power;\n  function otherGangTerritory(name: string): React.ReactElement {\n    const power = AllGangs[name].power;\n    const clashVictoryChance = playerPower / (power + playerPower);\n    return (\n      <span key={name}>\n        <u>{name}</u>\n        <br />\n        Power: {formatNumber(power, 6)}\n        <br />\n        Territory: {formatTerritory(AllGangs[name].territory)}%<br />\n        Chance to win clash with this gang: {numeralWrapper.formatPercentage(clashVictoryChance, 3)}\n        <br />\n        <br />\n      </span>\n    );\n  }\n\n  const gangNames = Object.keys(AllGangs).filter((g) => g != props.gang.facName);\n\n  return (\n    <div style={{ width: \"70%\" }}>\n      <p className=\"noselect\">\n        This page shows how much territory your Gang controls. This statistic is listed as a percentage, which\n        represents how much of the total territory you control.\n        <br />\n        <br />\n        Every ~20 seconds, your gang has a chance to 'clash' with other gangs. Your chance to win a clash depends on\n        your gang's power, which is listed in the display below. Your gang's power slowly accumulates over time. The\n        accumulation rate is determined by the stats of all Gang members you have assigned to the 'Territory Warfare'\n        task. Gang members that are not assigned to this task do not contribute to your gang's power. Your gang also\n        loses a small amount of power whenever you lose a clash.\n        <br />\n        <br />\n        NOTE: Gang members assigned to 'Territory Warfare' can be killed during clashes. This can happen regardless of\n        whether you win or lose the clash. A gang member being killed results in both respect and power loss for your\n        gang.\n        <br />\n        <br />\n        The amount of territory you have affects all aspects of your Gang members' production, including money, respect,\n        and wanted level. It is very beneficial to have high territory control.\n        <br />\n        <br />\n      </p>\n      <input\n        checked={props.gang.territoryWarfareEngaged}\n        id=\"warfare\"\n        type=\"checkbox\"\n        style={{ display: \"inline-block\", margin: \"2px\" }}\n        onChange={(event) => (props.gang.territoryWarfareEngaged = event.target.checked)}\n      />\n      <label htmlFor=\"warfare\" className=\"tooltip noselect\" style={{ color: \"white\", display: \"inline-block\" }}>\n        Engage in Territory Warfare\n        <span className=\"tooltiptext\" style={{ display: \"inline-block\" }}>\n          Engaging in Territory Warfare sets your clash chance to 100%. Disengaging will cause your clash chance to\n          gradually decrease until it reaches 0%.\n        </span>\n      </label>\n      <br />\n      <p style={{ display: \"inline-block\" }}>\n        Territory Clash Chance: {numeralWrapper.formatPercentage(props.gang.territoryClashChance, 3)}\n      </p>\n      <div className=\"help-tip noselect\" style={{ display: \"inline-block\" }} onClick={openWarfareHelp}>\n        ?\n      </div>\n      <br />\n\n      <input\n        checked={props.gang.notifyMemberDeath}\n        id=\"notify\"\n        type=\"checkbox\"\n        style={{ display: \"inline-block\", margin: \"2px\" }}\n        onChange={(event) => (props.gang.notifyMemberDeath = event.target.checked)}\n      />\n      <label htmlFor=\"warfare\" className=\"tooltip noselect\" style={{ color: \"white\", display: \"inline-block\" }}>\n        Notify about Gang Member Deaths\n        <span className=\"tooltiptext\" style={{ display: \"inline-block\" }}>\n          If this is enabled, then you will receive a pop-up notifying you whenever one of your Gang Members dies in a\n          territory clash.\n        </span>\n      </label>\n      <br />\n      <fieldset style={{ display: \"block\", margin: \"6px\" }}>\n        <p>\n          <b>\n            <u>{props.gang.facName}</u>\n          </b>\n          <br />\n          Power: {formatNumber(AllGangs[props.gang.facName].power, 6)}\n          <br />\n          Territory: {formatTerritory(AllGangs[props.gang.facName].territory)}%\n          <br />\n          <br />\n          {gangNames.map((name) => otherGangTerritory(name))}\n        </p>\n      </fieldset>\n    </div>\n  );\n}\n","// React Components for the Corporation UI's navigation tabs\n// These are the tabs at the top of the UI that let you switch to different\n// divisions, see an overview of your corporation, or create a new industry\nimport React, { useState, useEffect } from \"react\";\nimport { IIndustry } from \"../IIndustry\";\nimport { MainPanel } from \"./MainPanel\";\nimport { Industries } from \"../IndustryData\";\nimport { ExpandIndustryTab } from \"./ExpandIndustryTab\";\nimport { use } from \"../../ui/Context\";\nimport { Context } from \"./Context\";\nimport { Overview } from \"./Overview\";\n\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\n\nexport function CorporationRoot(): React.ReactElement {\n  const player = use.Player();\n  const corporation = player.corporation;\n  if (corporation === null) return <></>;\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n  const [divisionName, setDivisionName] = useState<string | number>(\"Overview\");\n  function handleChange(event: React.SyntheticEvent, tab: string | number): void {\n    setDivisionName(tab);\n  }\n  useEffect(() => {\n    const id = setInterval(rerender, 200);\n    return () => clearInterval(id);\n  }, []);\n\n  const canExpand =\n    Object.keys(Industries).filter(\n      (industryType: string) =>\n        corporation.divisions.find((division: IIndustry) => division.type === industryType) === undefined,\n    ).length > 0;\n\n  return (\n    <Context.Corporation.Provider value={corporation}>\n      <Tabs variant=\"fullWidth\" value={divisionName} onChange={handleChange}>\n        <Tab label={corporation.name} value={\"Overview\"} />\n        {corporation.divisions.map((div) => (\n          <Tab key={div.name} label={div.name} value={div.name} />\n        ))}\n        {canExpand && <Tab label={\"Expand\"} value={-1} />}\n      </Tabs>\n      {divisionName === \"Overview\" && <Overview rerender={rerender} />}\n      {divisionName === -1 && <ExpandIndustryTab setDivisionName={setDivisionName} />}\n      {typeof divisionName === \"string\" && divisionName !== \"Overview\" && (\n        <MainPanel rerender={rerender} divisionName={divisionName + \"\"} />\n      )}\n    </Context.Corporation.Provider>\n  );\n}\n","// React Component for the element that contains the actual info/data\n// for the Corporation UI. This panel lies below the header tabs and will\n// be filled with whatever is needed based on the routing/navigation\nimport React from \"react\";\n\nimport { CityTabs } from \"./CityTabs\";\nimport { IIndustry } from \"../IIndustry\";\nimport { useCorporation } from \"./Context\";\nimport { Context } from \"./Context\";\n\nimport { CityName } from \"../../Locations/data/CityNames\";\n\ninterface IProps {\n  divisionName: string;\n  rerender: () => void;\n}\n\nexport function MainPanel(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const division =\n    props.divisionName !== \"Overview\"\n      ? corp.divisions.find((division: IIndustry) => division.name === props.divisionName)\n      : undefined; // use undefined because find returns undefined\n\n  if (division === undefined) throw new Error(\"Cannot find division\");\n  return (\n    <Context.Division.Provider value={division}>\n      <CityTabs rerender={props.rerender} city={CityName.Sector12} />\n    </Context.Division.Provider>\n  );\n}\n","// React Components for the Corporation UI's City navigation tabs\n// These allow player to navigate between different cities for each industry\nimport React, { useState } from \"react\";\nimport { OfficeSpace } from \"../OfficeSpace\";\nimport { Industry } from \"./Industry\";\nimport { ExpandNewCity } from \"./ExpandNewCity\";\nimport { useDivision } from \"./Context\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\n\ninterface IProps {\n  city: string;\n  rerender: () => void;\n}\n\nexport function CityTabs(props: IProps): React.ReactElement {\n  const division = useDivision();\n  const [city, setCity] = useState(props.city);\n\n  const office = division.offices[city];\n  if (office === 0) {\n    setCity(\"Sector-12\");\n    return <></>;\n  }\n\n  const canExpand =\n    Object.keys(division.offices).filter((cityName: string) => division.offices[cityName] === 0).length > 0;\n  function handleChange(event: React.SyntheticEvent, tab: string): void {\n    setCity(tab);\n  }\n  return (\n    <>\n      <Tabs variant=\"fullWidth\" value={city} onChange={handleChange}>\n        {Object.values(division.offices).map(\n          (office: OfficeSpace | 0) => office !== 0 && <Tab key={office.loc} label={office.loc} value={office.loc} />,\n        )}\n        {canExpand && <Tab label={\"Expand\"} value={\"Expand\"} />}\n      </Tabs>\n\n      {city !== \"Expand\" ? (\n        <Industry rerender={props.rerender} city={city} warehouse={division.warehouses[city]} office={office} />\n      ) : (\n        <ExpandNewCity cityStateSetter={setCity} />\n      )}\n    </>\n  );\n}\n","// React Component for managing the Corporation's Industry UI\n// This Industry component does NOT include the city tabs at the top\nimport React from \"react\";\n\nimport { IndustryOffice } from \"./IndustryOffice\";\nimport { IndustryOverview } from \"./IndustryOverview\";\nimport { IndustryWarehouse } from \"./IndustryWarehouse\";\nimport { Warehouse } from \"../Warehouse\";\nimport { OfficeSpace } from \"../OfficeSpace\";\nimport { use } from \"../../ui/Context\";\nimport { useCorporation, useDivision } from \"./Context\";\nimport Box from \"@mui/material/Box\";\n\ninterface IProps {\n  city: string;\n  warehouse: Warehouse | 0;\n  office: OfficeSpace;\n  rerender: () => void;\n}\n\nexport function Industry(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const corp = useCorporation();\n  const division = useDivision();\n  return (\n    <Box display=\"flex\">\n      <Box sx={{ width: \"50%\" }}>\n        <IndustryOverview rerender={props.rerender} currentCity={props.city} office={props.office} />\n        <IndustryOffice rerender={props.rerender} office={props.office} />\n      </Box>\n      <Box sx={{ width: \"50%\" }}>\n        <IndustryWarehouse\n          rerender={props.rerender}\n          player={player}\n          corp={corp}\n          currentCity={props.city}\n          division={division}\n          warehouse={props.warehouse}\n        />\n      </Box>\n    </Box>\n  );\n}\n","// React Component for displaying an Industry's OfficeSpace information\n// (bottom-left panel in the Industry UI)\nimport React, { useState } from \"react\";\n\nimport { OfficeSpace } from \"../OfficeSpace\";\nimport { Employee } from \"../Employee\";\nimport { EmployeePositions } from \"../EmployeePositions\";\n\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\n\nimport { UpgradeOfficeSizeModal } from \"./UpgradeOfficeSizeModal\";\nimport { ThrowPartyModal } from \"./ThrowPartyModal\";\nimport { Money } from \"../../ui/React/Money\";\nimport { useCorporation, useDivision } from \"./Context\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Paper from \"@mui/material/Paper\";\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { TableCell } from \"../../ui/React/Table\";\n\ninterface IProps {\n  office: OfficeSpace;\n  rerender: () => void;\n}\n\nfunction countEmployee(employees: Employee[], job: string): number {\n  let n = 0;\n  for (let i = 0; i < employees.length; ++i) {\n    if (employees[i].pos === job) n++;\n  }\n  return n;\n}\n\ninterface ISwitchProps {\n  manualMode: boolean;\n  switchMode: (f: (b: boolean) => boolean) => void;\n}\n\nfunction SwitchButton(props: ISwitchProps): React.ReactElement {\n  if (props.manualMode) {\n    return (\n      <Tooltip\n        title={\n          <Typography>\n            Switch to Automatic Assignment Mode, which will automatically assign employees to your selected jobs. You\n            simply have to select the number of assignments for each job\n          </Typography>\n        }\n      >\n        <Button onClick={() => props.switchMode((old) => !old)}>Switch to Auto Mode</Button>\n      </Tooltip>\n    );\n  } else {\n    return (\n      <Tooltip\n        title={\n          <Typography>\n            Switch to Manual Assignment Mode, which allows you to specify which employees should get which jobs\n          </Typography>\n        }\n      >\n        <Button onClick={() => props.switchMode((old) => !old)}>Switch to Manual Mode</Button>\n      </Tooltip>\n    );\n  }\n}\n\nfunction ManualManagement(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const division = useDivision();\n  const [employee, setEmployee] = useState<Employee | null>(\n    props.office.employees.length > 0 ? props.office.employees[0] : null,\n  );\n\n  // Employee Selector\n  const employees = [];\n  for (let i = 0; i < props.office.employees.length; ++i) {\n    employees.push(\n      <MenuItem key={props.office.employees[i].name} value={props.office.employees[i].name}>\n        {props.office.employees[i].name}\n      </MenuItem>,\n    );\n  }\n\n  function employeeSelectorOnChange(e: SelectChangeEvent<string>): void {\n    const name = e.target.value;\n    for (let i = 0; i < props.office.employees.length; ++i) {\n      if (name === props.office.employees[i].name) {\n        setEmployee(props.office.employees[i]);\n        break;\n      }\n    }\n\n    props.rerender();\n  }\n\n  // Employee Positions Selector\n  const emp = employee;\n  let employeePositionSelectorInitialValue = \"\";\n  const employeePositions = [];\n  const positionNames = Object.values(EmployeePositions);\n  for (let i = 0; i < positionNames.length; ++i) {\n    employeePositions.push(\n      <MenuItem key={positionNames[i]} value={positionNames[i]}>\n        {positionNames[i]}\n      </MenuItem>,\n    );\n    if (emp != null && emp.pos === positionNames[i]) {\n      employeePositionSelectorInitialValue = positionNames[i];\n    }\n  }\n\n  function employeePositionSelectorOnChange(e: SelectChangeEvent<string>): void {\n    if (employee === null) return;\n    employee.pos = e.target.value;\n    props.rerender();\n  }\n\n  // Numeraljs formatter\n  const nf = \"0.000\";\n\n  // Employee stats (after applying multipliers)\n  const effCre = emp ? emp.cre * corp.getEmployeeCreMultiplier() * division.getEmployeeCreMultiplier() : 0;\n  const effCha = emp ? emp.cha * corp.getEmployeeChaMultiplier() * division.getEmployeeChaMultiplier() : 0;\n  const effInt = emp ? emp.int * corp.getEmployeeIntMultiplier() * division.getEmployeeIntMultiplier() : 0;\n  const effEff = emp ? emp.eff * corp.getEmployeeEffMultiplier() * division.getEmployeeEffMultiplier() : 0;\n\n  return (\n    <>\n      <br />\n      <Select value={employee !== null ? employee.name : \"\"} onChange={employeeSelectorOnChange}>\n        {employees}\n      </Select>\n      {employee != null && (\n        <Typography>\n          Morale: {numeralWrapper.format(employee.mor, nf)}\n          <br />\n          Happiness: {numeralWrapper.format(employee.hap, nf)}\n          <br />\n          Energy: {numeralWrapper.format(employee.ene, nf)}\n          <br />\n          Intelligence: {numeralWrapper.format(effInt, nf)}\n          <br />\n          Charisma: {numeralWrapper.format(effCha, nf)}\n          <br />\n          Experience: {numeralWrapper.format(employee.exp, nf)}\n          <br />\n          Creativity: {numeralWrapper.format(effCre, nf)}\n          <br />\n          Efficiency: {numeralWrapper.format(effEff, nf)}\n          <br />\n          Salary: <Money money={employee.sal} />\n        </Typography>\n      )}\n      {employee != null && (\n        <Select onChange={employeePositionSelectorOnChange} value={employeePositionSelectorInitialValue}>\n          {employeePositions}\n        </Select>\n      )}\n    </>\n  );\n}\n\ninterface IAutoAssignProps {\n  office: OfficeSpace;\n  job: string;\n  desc: string;\n  rerender: () => void;\n}\n\nfunction AutoAssignJob(props: IAutoAssignProps): React.ReactElement {\n  const corp = useCorporation();\n  const division = useDivision();\n  const numJob = countEmployee(props.office.employees, props.job);\n  const numUnassigned = countEmployee(props.office.employees, EmployeePositions.Unassigned);\n  function assignEmployee(): void {\n    if (numUnassigned <= 0) {\n      console.warn(\"Cannot assign employee. No unassigned employees available\");\n      return;\n    }\n\n    props.office.assignEmployeeToJob(props.job);\n    props.office.calculateEmployeeProductivity(corp, division);\n    props.rerender();\n  }\n\n  function unassignEmployee(): void {\n    props.office.unassignEmployeeFromJob(props.job);\n    props.office.calculateEmployeeProductivity(corp, division);\n    props.rerender();\n  }\n  return (\n    <TableRow>\n      <TableCell>\n        <Tooltip title={props.desc}>\n          <Typography>\n            {props.job} ({numJob})\n          </Typography>\n        </Tooltip>\n      </TableCell>\n      <TableCell>\n        <IconButton disabled={numUnassigned === 0} onClick={assignEmployee}>\n          <ArrowDropUpIcon />\n        </IconButton>\n        <IconButton disabled={numJob === 0} onClick={unassignEmployee}>\n          <ArrowDropDownIcon />\n        </IconButton>\n      </TableCell>\n    </TableRow>\n  );\n}\n\nfunction AutoManagement(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const division = useDivision();\n  const numUnassigned = countEmployee(props.office.employees, EmployeePositions.Unassigned);\n  const vechain = corp.unlockUpgrades[4] === 1; // Has Vechain upgrade\n\n  // Calculate average morale, happiness,  energy, and salary.\n  let totalMorale = 0,\n    totalHappiness = 0,\n    totalEnergy = 0,\n    totalSalary = 0;\n  for (let i = 0; i < props.office.employees.length; ++i) {\n    totalMorale += props.office.employees[i].mor;\n    totalHappiness += props.office.employees[i].hap;\n    totalEnergy += props.office.employees[i].ene;\n    totalSalary += props.office.employees[i].sal;\n  }\n\n  let avgMorale = 0,\n    avgHappiness = 0,\n    avgEnergy = 0;\n  if (props.office.employees.length > 0) {\n    avgMorale = totalMorale / props.office.employees.length;\n    avgHappiness = totalHappiness / props.office.employees.length;\n    avgEnergy = totalEnergy / props.office.employees.length;\n  }\n\n  return (\n    <>\n      <Table padding=\"none\">\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <Typography>Unassigned Employees:</Typography>\n            </TableCell>\n            <TableCell>\n              <Typography>{numUnassigned}</Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography>Avg Employee Morale:</Typography>\n            </TableCell>\n            <TableCell>\n              <Typography>{numeralWrapper.format(avgMorale, \"0.000\")}</Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography>Avg Employee Happiness:</Typography>\n            </TableCell>\n            <TableCell>\n              <Typography>{numeralWrapper.format(avgHappiness, \"0.000\")}</Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography>Avg Employee Energy:</Typography>\n            </TableCell>\n            <TableCell>\n              <Typography>{numeralWrapper.format(avgEnergy, \"0.000\")}</Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography>Total Employee Salary:</Typography>\n            </TableCell>\n            <TableCell>\n              <Typography>\n                <Money money={totalSalary} />\n              </Typography>\n            </TableCell>\n          </TableRow>\n          {vechain && (\n            <>\n              <TableRow>\n                <TableCell>\n                  <Tooltip\n                    title={\n                      <Typography>\n                        The base amount of material this office can produce. Does not include production multipliers\n                        from upgrades and materials. This value is based off the productivity of your Operations,\n                        Engineering, and Management employees\n                      </Typography>\n                    }\n                  >\n                    <Typography>Material Production:</Typography>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {numeralWrapper.format(division.getOfficeProductivity(props.office), \"0.000\")}\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Tooltip\n                    title={\n                      <Typography>\n                        The base amount of any given Product this office can produce. Does not include production\n                        multipliers from upgrades and materials. This value is based off the productivity of your\n                        Operations, Engineering, and Management employees\n                      </Typography>\n                    }\n                  >\n                    <Typography>Product Production:</Typography>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  <Typography>\n                    {numeralWrapper.format(\n                      division.getOfficeProductivity(props.office, {\n                        forProduct: true,\n                      }),\n                      \"0.000\",\n                    )}\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>\n                  <Tooltip\n                    title={<Typography>The effect this office's 'Business' employees has on boosting sales</Typography>}\n                  >\n                    <Typography> Business Multiplier:</Typography>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  <Typography>x{numeralWrapper.format(division.getBusinessFactor(props.office), \"0.000\")}</Typography>\n                </TableCell>\n              </TableRow>\n            </>\n          )}\n        </TableBody>\n      </Table>\n\n      <Table padding=\"none\">\n        <TableBody>\n          <AutoAssignJob\n            rerender={props.rerender}\n            office={props.office}\n            job={EmployeePositions.Operations}\n            desc={\"Manages supply chain operations. Improves the amount of Materials and Products you produce.\"}\n          />\n\n          <AutoAssignJob\n            rerender={props.rerender}\n            office={props.office}\n            job={EmployeePositions.Engineer}\n            desc={\n              \"Develops and maintains products and production systems. Increases the quality of everything you produce. Also increases the amount you produce (not as much as Operations, however)\"\n            }\n          />\n\n          <AutoAssignJob\n            rerender={props.rerender}\n            office={props.office}\n            job={EmployeePositions.Business}\n            desc={\"Handles sales and finances. Improves the amount of Materials and Products you can sell.\"}\n          />\n\n          <AutoAssignJob\n            rerender={props.rerender}\n            office={props.office}\n            job={EmployeePositions.Management}\n            desc={\n              \"Leads and oversees employees and office operations. Improves the effectiveness of Engineer and Operations employees.\"\n            }\n          />\n\n          <AutoAssignJob\n            rerender={props.rerender}\n            office={props.office}\n            job={EmployeePositions.RandD}\n            desc={\"Research new innovative ways to improve the company. Generates Scientific Research.\"}\n          />\n\n          <AutoAssignJob\n            rerender={props.rerender}\n            office={props.office}\n            job={EmployeePositions.Training}\n            desc={\n              \"Set employee to training, which will increase some of their stats. Employees in training do not affect any company operations.\"\n            }\n          />\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n\nexport function IndustryOffice(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const division = useDivision();\n  const [upgradeOfficeSizeOpen, setUpgradeOfficeSizeOpen] = useState(false);\n  const [throwPartyOpen, setThrowPartyOpen] = useState(false);\n  const [employeeManualAssignMode, setEmployeeManualAssignMode] = useState(false);\n\n  function autohireEmployeeButtonOnClick(): void {\n    if (props.office.atCapacity()) return;\n    props.office.hireRandomEmployee();\n    props.rerender();\n  }\n\n  return (\n    <Paper>\n      <Typography>Office Space</Typography>\n      <Typography>\n        Size: {props.office.employees.length} / {props.office.size} employees\n      </Typography>\n      <Tooltip title={<Typography>Automatically hires an employee and gives him/her a random name</Typography>}>\n        <span>\n          <Button disabled={props.office.atCapacity()} onClick={autohireEmployeeButtonOnClick}>\n            Hire Employee\n          </Button>\n        </span>\n      </Tooltip>\n      <br />\n      <Tooltip title={<Typography>Upgrade the office's size so that it can hold more employees!</Typography>}>\n        <span>\n          <Button disabled={corp.funds.lt(0)} onClick={() => setUpgradeOfficeSizeOpen(true)}>\n            Upgrade size\n          </Button>\n        </span>\n      </Tooltip>\n      <UpgradeOfficeSizeModal\n        rerender={props.rerender}\n        office={props.office}\n        open={upgradeOfficeSizeOpen}\n        onClose={() => setUpgradeOfficeSizeOpen(false)}\n      />\n\n      {!division.hasResearch(\"AutoPartyManager\") && (\n        <>\n          <Tooltip\n            title={<Typography>Throw an office party to increase your employee's morale and happiness</Typography>}\n          >\n            <span>\n              <Button disabled={corp.funds.lt(0)} onClick={() => setThrowPartyOpen(true)}>\n                Throw Party\n              </Button>\n            </span>\n          </Tooltip>\n          <ThrowPartyModal\n            rerender={props.rerender}\n            office={props.office}\n            open={throwPartyOpen}\n            onClose={() => setThrowPartyOpen(false)}\n          />\n        </>\n      )}\n\n      <br />\n\n      <SwitchButton manualMode={employeeManualAssignMode} switchMode={setEmployeeManualAssignMode} />\n      {employeeManualAssignMode ? (\n        <ManualManagement rerender={props.rerender} office={props.office} />\n      ) : (\n        <AutoManagement rerender={props.rerender} office={props.office} />\n      )}\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { CorporationConstants } from \"../data/Constants\";\nimport { OfficeSpace } from \"../OfficeSpace\";\nimport { ICorporation } from \"../ICorporation\";\nimport { UpgradeOfficeSize } from \"../Actions\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { useCorporation } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Box from \"@mui/material/Box\";\n\ninterface IUpgradeButton {\n  cost: number;\n  size: number;\n  corp: ICorporation;\n  office: OfficeSpace;\n  onClose: () => void;\n  rerender: () => void;\n}\n\nfunction UpgradeSizeButton(props: IUpgradeButton): React.ReactElement {\n  const corp = useCorporation();\n  function upgradeSize(cost: number, size: number): void {\n    if (corp.funds.lt(cost)) {\n      return;\n    }\n\n    UpgradeOfficeSize(corp, props.office, size);\n    props.rerender();\n    props.onClose();\n  }\n  return (\n    <Tooltip title={numeralWrapper.formatMoney(props.cost)}>\n      <span>\n        <Button disabled={corp.funds.lt(props.cost)} onClick={() => upgradeSize(props.cost, props.size)}>\n          +{props.size}\n        </Button>\n      </span>\n    </Tooltip>\n  );\n}\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  office: OfficeSpace;\n  rerender: () => void;\n}\n\nexport function UpgradeOfficeSizeModal(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const initialPriceMult = Math.round(props.office.size / CorporationConstants.OfficeInitialSize);\n  const costMultiplier = 1.09;\n  const upgradeCost = CorporationConstants.OfficeInitialCost * Math.pow(costMultiplier, initialPriceMult);\n\n  // Calculate cost to upgrade size by 15 employees\n  let mult = 0;\n  for (let i = 0; i < 5; ++i) {\n    mult += Math.pow(costMultiplier, initialPriceMult + i);\n  }\n  const upgradeCost15 = CorporationConstants.OfficeInitialCost * mult;\n\n  //Calculate max upgrade size and cost\n  const maxMult = corp.funds.dividedBy(CorporationConstants.OfficeInitialCost).toNumber();\n  let maxNum = 1;\n  mult = Math.pow(costMultiplier, initialPriceMult);\n  while (maxNum < 50) {\n    //Hard cap of 50x (extra 150 employees)\n    if (mult >= maxMult) break;\n    const multIncrease = Math.pow(costMultiplier, initialPriceMult + maxNum);\n    if (mult + multIncrease > maxMult) {\n      break;\n    } else {\n      mult += multIncrease;\n    }\n    ++maxNum;\n  }\n  const upgradeCostMax = CorporationConstants.OfficeInitialCost * mult;\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>Increase the size of your office space to fit additional employees!</Typography>\n      <Box display=\"flex\" alignItems=\"center\">\n        <Typography>Upgrade size: </Typography>\n        <UpgradeSizeButton\n          onClose={props.onClose}\n          rerender={props.rerender}\n          office={props.office}\n          corp={corp}\n          cost={upgradeCost}\n          size={CorporationConstants.OfficeInitialSize}\n        />\n        <UpgradeSizeButton\n          onClose={props.onClose}\n          rerender={props.rerender}\n          office={props.office}\n          corp={corp}\n          cost={upgradeCost15}\n          size={CorporationConstants.OfficeInitialSize * 5}\n        />\n        <UpgradeSizeButton\n          onClose={props.onClose}\n          rerender={props.rerender}\n          office={props.office}\n          corp={corp}\n          cost={upgradeCostMax}\n          size={maxNum * CorporationConstants.OfficeInitialSize}\n        />\n      </Box>\n    </Modal>\n  );\n}\n","import { Reviver, Generic_toJSON, Generic_fromJSON } from \"../utils/JSONReviver\";\nimport { CityName } from \"../Locations/data/CityNames\";\nimport Decimal from \"decimal.js\";\nimport { Industries, IndustryStartingCosts, IndustryResearchTrees } from \"./IndustryData\";\nimport { CorporationConstants } from \"./data/Constants\";\nimport { EmployeePositions } from \"./EmployeePositions\";\nimport { Material } from \"./Material\";\nimport { getRandomInt } from \"../utils/helpers/getRandomInt\";\nimport { calculateEffectWithFactors } from \"../utils/calculateEffectWithFactors\";\nimport { OfficeSpace } from \"./OfficeSpace\";\nimport { Product } from \"./Product\";\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\nimport { isString } from \"../utils/helpers/isString\";\nimport { MaterialSizes } from \"./MaterialSizes\";\nimport { Warehouse } from \"./Warehouse\";\nimport { ICorporation } from \"./ICorporation\";\nimport { IIndustry } from \"./IIndustry\";\nimport { IndustryUpgrade, IndustryUpgrades } from \"./IndustryUpgrades\";\nimport { formatNumber } from \"../utils/StringHelperFunctions\";\n\ninterface IParams {\n  name?: string;\n  corp?: ICorporation;\n  type?: string;\n}\n\nexport class Industry implements IIndustry {\n  name = \"\";\n  type = Industries.Agriculture;\n  sciResearch = new Material({ name: \"Scientific Research\" });\n  researched: { [key: string]: boolean | undefined } = {};\n  reqMats: { [key: string]: number | undefined } = {};\n\n  //An array of the name of materials being produced\n  prodMats: string[] = [];\n\n  products: { [key: string]: Product | undefined } = {};\n  makesProducts = false;\n\n  awareness = 0;\n  popularity = 0; //Should always be less than awareness\n  startingCost = 0;\n\n  /* The following are factors for how much production/other things are increased by\n       different factors. The production increase always has diminishing returns,\n       and they are all reprsented by exponentials of < 1 (e.g x ^ 0.5, x ^ 0.8)\n       The number for these represent the exponential. A lower number means more\n       diminishing returns */\n  reFac = 0; //Real estate Factor\n  sciFac = 0; //Scientific Research Factor, affects quality\n  hwFac = 0; //Hardware factor\n  robFac = 0; //Robotics Factor\n  aiFac = 0; //AI Cores factor;\n  advFac = 0; //Advertising factor, affects sales\n\n  prodMult = 0; //Production multiplier\n\n  //Financials\n  lastCycleRevenue: any;\n  lastCycleExpenses: any;\n  thisCycleRevenue: any;\n  thisCycleExpenses: any;\n\n  //Upgrades\n  upgrades: number[] = Array(Object.keys(IndustryUpgrades).length).fill(0);\n\n  state = \"START\";\n  newInd = true;\n\n  //Maps locations to warehouses. 0 if no warehouse at that location\n  warehouses: { [key: string]: Warehouse | 0 };\n\n  //Maps locations to offices. 0 if no office at that location\n  offices: { [key: string]: OfficeSpace | 0 } = {\n    [CityName.Aevum]: 0,\n    [CityName.Chongqing]: 0,\n    [CityName.Sector12]: new OfficeSpace({\n      loc: CityName.Sector12,\n      size: CorporationConstants.OfficeInitialSize,\n    }),\n    [CityName.NewTokyo]: 0,\n    [CityName.Ishima]: 0,\n    [CityName.Volhaven]: 0,\n  };\n\n  constructor(params: IParams = {}) {\n    this.name = params.name ? params.name : \"\";\n    this.type = params.type ? params.type : Industries.Agriculture;\n\n    //Financials\n    this.lastCycleRevenue = new Decimal(0);\n    this.lastCycleExpenses = new Decimal(0);\n    this.thisCycleRevenue = new Decimal(0);\n    this.thisCycleExpenses = new Decimal(0);\n\n    this.warehouses = {\n      [CityName.Aevum]: 0,\n      [CityName.Chongqing]: 0,\n      [CityName.Sector12]: new Warehouse({\n        corp: params.corp,\n        industry: this,\n        loc: CityName.Sector12,\n        size: CorporationConstants.WarehouseInitialSize,\n      }),\n      [CityName.NewTokyo]: 0,\n      [CityName.Ishima]: 0,\n      [CityName.Volhaven]: 0,\n    };\n\n    this.init();\n  }\n\n  init(): void {\n    //Set the unique properties of an industry (how much its affected by real estate/scientific research, etc.)\n    const startingCost = IndustryStartingCosts[this.type];\n    if (startingCost === undefined) throw new Error(`Invalid industry: \"${this.type}\"`);\n    this.startingCost = startingCost;\n    switch (this.type) {\n      case Industries.Energy:\n        this.reFac = 0.65;\n        this.sciFac = 0.7;\n        this.robFac = 0.05;\n        this.aiFac = 0.3;\n        this.advFac = 0.08;\n        this.reqMats = {\n          Hardware: 0.1,\n          Metal: 0.2,\n        };\n        this.prodMats = [\"Energy\"];\n        break;\n      case Industries.Utilities:\n      case \"Utilities\":\n        this.reFac = 0.5;\n        this.sciFac = 0.6;\n        this.robFac = 0.4;\n        this.aiFac = 0.4;\n        this.advFac = 0.08;\n        this.reqMats = {\n          Hardware: 0.1,\n          Metal: 0.1,\n        };\n        this.prodMats = [\"Water\"];\n        break;\n      case Industries.Agriculture:\n        this.reFac = 0.72;\n        this.sciFac = 0.5;\n        this.hwFac = 0.2;\n        this.robFac = 0.3;\n        this.aiFac = 0.3;\n        this.advFac = 0.04;\n        this.reqMats = {\n          Water: 0.5,\n          Energy: 0.5,\n        };\n        this.prodMats = [\"Plants\", \"Food\"];\n        break;\n      case Industries.Fishing:\n        this.reFac = 0.15;\n        this.sciFac = 0.35;\n        this.hwFac = 0.35;\n        this.robFac = 0.5;\n        this.aiFac = 0.2;\n        this.advFac = 0.08;\n        this.reqMats = {\n          Energy: 0.5,\n        };\n        this.prodMats = [\"Food\"];\n        break;\n      case Industries.Mining:\n        this.reFac = 0.3;\n        this.sciFac = 0.26;\n        this.hwFac = 0.4;\n        this.robFac = 0.45;\n        this.aiFac = 0.45;\n        this.advFac = 0.06;\n        this.reqMats = {\n          Energy: 0.8,\n        };\n        this.prodMats = [\"Metal\"];\n        break;\n      case Industries.Food:\n        //reFac is unique for this bc it diminishes greatly per city. Handle this separately in code?\n        this.sciFac = 0.12;\n        this.hwFac = 0.15;\n        this.robFac = 0.3;\n        this.aiFac = 0.25;\n        this.advFac = 0.25;\n        this.reFac = 0.05;\n        this.reqMats = {\n          Food: 0.5,\n          Water: 0.5,\n          Energy: 0.2,\n        };\n        this.makesProducts = true;\n        break;\n      case Industries.Tobacco:\n        this.reFac = 0.15;\n        this.sciFac = 0.75;\n        this.hwFac = 0.15;\n        this.robFac = 0.2;\n        this.aiFac = 0.15;\n        this.advFac = 0.2;\n        this.reqMats = {\n          Plants: 1,\n          Water: 0.2,\n        };\n        this.makesProducts = true;\n        break;\n      case Industries.Chemical:\n        this.reFac = 0.25;\n        this.sciFac = 0.75;\n        this.hwFac = 0.2;\n        this.robFac = 0.25;\n        this.aiFac = 0.2;\n        this.advFac = 0.07;\n        this.reqMats = {\n          Plants: 1,\n          Energy: 0.5,\n          Water: 0.5,\n        };\n        this.prodMats = [\"Chemicals\"];\n        break;\n      case Industries.Pharmaceutical:\n        this.reFac = 0.05;\n        this.sciFac = 0.8;\n        this.hwFac = 0.15;\n        this.robFac = 0.25;\n        this.aiFac = 0.2;\n        this.advFac = 0.16;\n        this.reqMats = {\n          Chemicals: 2,\n          Energy: 1,\n          Water: 0.5,\n        };\n        this.prodMats = [\"Drugs\"];\n        this.makesProducts = true;\n        break;\n      case Industries.Computer:\n      case \"Computer\":\n        this.reFac = 0.2;\n        this.sciFac = 0.62;\n        this.robFac = 0.36;\n        this.aiFac = 0.19;\n        this.advFac = 0.17;\n        this.reqMats = {\n          Metal: 2,\n          Energy: 1,\n        };\n        this.prodMats = [\"Hardware\"];\n        this.makesProducts = true;\n        break;\n      case Industries.Robotics:\n        this.reFac = 0.32;\n        this.sciFac = 0.65;\n        this.aiFac = 0.36;\n        this.advFac = 0.18;\n        this.hwFac = 0.19;\n        this.reqMats = {\n          Hardware: 5,\n          Energy: 3,\n        };\n        this.prodMats = [\"Robots\"];\n        this.makesProducts = true;\n        break;\n      case Industries.Software:\n        this.sciFac = 0.62;\n        this.advFac = 0.16;\n        this.hwFac = 0.25;\n        this.reFac = 0.15;\n        this.aiFac = 0.18;\n        this.robFac = 0.05;\n        this.reqMats = {\n          Hardware: 0.5,\n          Energy: 0.5,\n        };\n        this.prodMats = [\"AICores\"];\n        this.makesProducts = true;\n        break;\n      case Industries.Healthcare:\n        this.reFac = 0.1;\n        this.sciFac = 0.75;\n        this.advFac = 0.11;\n        this.hwFac = 0.1;\n        this.robFac = 0.1;\n        this.aiFac = 0.1;\n        this.reqMats = {\n          Robots: 10,\n          AICores: 5,\n          Energy: 5,\n          Water: 5,\n        };\n        this.makesProducts = true;\n        break;\n      case Industries.RealEstate:\n        this.robFac = 0.6;\n        this.aiFac = 0.6;\n        this.advFac = 0.25;\n        this.sciFac = 0.05;\n        this.hwFac = 0.05;\n        this.reqMats = {\n          Metal: 5,\n          Energy: 5,\n          Water: 2,\n          Hardware: 4,\n        };\n        this.prodMats = [\"RealEstate\"];\n        this.makesProducts = true;\n        break;\n      default:\n        console.error(`Invalid Industry Type passed into Industry.init(): ${this.type}`);\n        return;\n    }\n  }\n\n  getProductDescriptionText(): string {\n    if (!this.makesProducts) return \"\";\n    switch (this.type) {\n      case Industries.Food:\n        return \"create and manage restaurants\";\n      case Industries.Tobacco:\n        return \"create tobacco and tobacco-related products\";\n      case Industries.Pharmaceutical:\n        return \"develop new pharmaceutical drugs\";\n      case Industries.Computer:\n      case \"Computer\":\n        return \"create new computer hardware and networking infrastructures\";\n      case Industries.Robotics:\n        return \"build specialized robots and robot-related products\";\n      case Industries.Software:\n        return \"develop computer software\";\n      case Industries.Healthcare:\n        return \"build and manage hospitals\";\n      case Industries.RealEstate:\n        return \"develop and manage real estate properties\";\n      default:\n        console.error(\"Invalid industry type in Industry.getProductDescriptionText\");\n        return \"\";\n    }\n  }\n\n  getMaximumNumberProducts(): number {\n    if (!this.makesProducts) return 0;\n\n    // Calculate additional number of allowed Products from Research/Upgrades\n    let additional = 0;\n    if (this.hasResearch(\"uPgrade: Capacity.I\")) ++additional;\n    if (this.hasResearch(\"uPgrade: Capacity.II\")) ++additional;\n\n    return CorporationConstants.BaseMaxProducts + additional;\n  }\n\n  hasMaximumNumberProducts(): boolean {\n    return Object.keys(this.products).length >= this.getMaximumNumberProducts();\n  }\n\n  //Calculates the values that factor into the production and properties of\n  //materials/products (such as quality, etc.)\n  calculateProductionFactors(): void {\n    let multSum = 0;\n    for (let i = 0; i < CorporationConstants.Cities.length; ++i) {\n      const city = CorporationConstants.Cities[i];\n      const warehouse = this.warehouses[city];\n      if (!(warehouse instanceof Warehouse)) {\n        continue;\n      }\n\n      const materials = warehouse.materials;\n\n      const cityMult =\n        Math.pow(0.002 * materials.RealEstate.qty + 1, this.reFac) *\n        Math.pow(0.002 * materials.Hardware.qty + 1, this.hwFac) *\n        Math.pow(0.002 * materials.Robots.qty + 1, this.robFac) *\n        Math.pow(0.002 * materials.AICores.qty + 1, this.aiFac);\n      multSum += Math.pow(cityMult, 0.73);\n    }\n\n    multSum < 1 ? (this.prodMult = 1) : (this.prodMult = multSum);\n  }\n\n  updateWarehouseSizeUsed(warehouse: Warehouse): void {\n    warehouse.updateMaterialSizeUsed();\n\n    for (const prodName in this.products) {\n      if (this.products.hasOwnProperty(prodName)) {\n        const prod = this.products[prodName];\n        if (prod === undefined) continue;\n        warehouse.sizeUsed += prod.data[warehouse.loc][0] * prod.siz;\n      }\n    }\n  }\n\n  process(marketCycles = 1, state: string, corporation: ICorporation): void {\n    this.state = state;\n\n    //At the start of a cycle, store and reset revenue/expenses\n    //Then calculate salaries and processs the markets\n    if (state === \"START\") {\n      if (isNaN(this.thisCycleRevenue) || isNaN(this.thisCycleExpenses)) {\n        console.error(\"NaN in Corporation's computed revenue/expenses\");\n        dialogBoxCreate(\n          \"Something went wrong when compting Corporation's revenue/expenses. This is a bug. Please report to game developer\",\n        );\n        this.thisCycleRevenue = new Decimal(0);\n        this.thisCycleExpenses = new Decimal(0);\n      }\n      this.lastCycleRevenue = this.thisCycleRevenue.dividedBy(marketCycles * CorporationConstants.SecsPerMarketCycle);\n      this.lastCycleExpenses = this.thisCycleExpenses.dividedBy(marketCycles * CorporationConstants.SecsPerMarketCycle);\n      this.thisCycleRevenue = new Decimal(0);\n      this.thisCycleExpenses = new Decimal(0);\n\n      // Once you start making revenue, the player should no longer be\n      // considered new, and therefore no longer needs the 'tutorial' UI elements\n      if (this.lastCycleRevenue.gt(0)) {\n        this.newInd = false;\n      }\n\n      // Process offices (and the employees in them)\n      let employeeSalary = 0;\n      for (const officeLoc in this.offices) {\n        const office = this.offices[officeLoc];\n        if (office === 0) continue;\n        if (office instanceof OfficeSpace) {\n          employeeSalary += office.process(marketCycles, corporation, this);\n        }\n      }\n      this.thisCycleExpenses = this.thisCycleExpenses.plus(employeeSalary);\n\n      // Process change in demand/competition of materials/products\n      this.processMaterialMarket();\n      this.processProductMarket(marketCycles);\n\n      // Process loss of popularity\n      this.popularity -= marketCycles * 0.0001;\n      this.popularity = Math.max(0, this.popularity);\n\n      // Process Dreamsense gains\n      const popularityGain = corporation.getDreamSenseGain(),\n        awarenessGain = popularityGain * 4;\n      if (popularityGain > 0) {\n        this.popularity += popularityGain * marketCycles;\n        this.awareness += awarenessGain * marketCycles;\n      }\n\n      return;\n    }\n\n    // Process production, purchase, and import/export of materials\n    let res = this.processMaterials(marketCycles, corporation);\n    if (Array.isArray(res)) {\n      this.thisCycleRevenue = this.thisCycleRevenue.plus(res[0]);\n      this.thisCycleExpenses = this.thisCycleExpenses.plus(res[1]);\n    }\n\n    // Process creation, production & sale of products\n    res = this.processProducts(marketCycles, corporation);\n    if (Array.isArray(res)) {\n      this.thisCycleRevenue = this.thisCycleRevenue.plus(res[0]);\n      this.thisCycleExpenses = this.thisCycleExpenses.plus(res[1]);\n    }\n  }\n\n  // Process change in demand and competition for this industry's materials\n  processMaterialMarket(): void {\n    //References to prodMats and reqMats\n    const reqMats = this.reqMats,\n      prodMats = this.prodMats;\n\n    //Only 'process the market' for materials that this industry deals with\n    for (let i = 0; i < CorporationConstants.Cities.length; ++i) {\n      //If this industry has a warehouse in this city, process the market\n      //for every material this industry requires or produces\n      if (this.warehouses[CorporationConstants.Cities[i]] instanceof Warehouse) {\n        const wh = this.warehouses[CorporationConstants.Cities[i]];\n        if (wh === 0) continue;\n        for (const name in reqMats) {\n          if (reqMats.hasOwnProperty(name)) {\n            wh.materials[name].processMarket();\n          }\n        }\n\n        //Produced materials are stored in an array\n        for (let foo = 0; foo < prodMats.length; ++foo) {\n          wh.materials[prodMats[foo]].processMarket();\n        }\n\n        //Process these twice because these boost production\n        wh.materials[\"Hardware\"].processMarket();\n        wh.materials[\"Robots\"].processMarket();\n        wh.materials[\"AICores\"].processMarket();\n        wh.materials[\"RealEstate\"].processMarket();\n      }\n    }\n  }\n\n  // Process change in demand and competition for this industry's products\n  processProductMarket(marketCycles = 1): void {\n    // Demand gradually decreases, and competition gradually increases\n    for (const name in this.products) {\n      if (this.products.hasOwnProperty(name)) {\n        const product = this.products[name];\n        if (product === undefined) continue;\n        let change = getRandomInt(0, 3) * 0.0004;\n        if (change === 0) continue;\n\n        if (\n          this.type === Industries.Pharmaceutical ||\n          this.type === Industries.Software ||\n          this.type === Industries.Robotics\n        ) {\n          change *= 3;\n        }\n        change *= marketCycles;\n        product.dmd -= change;\n        product.cmp += change;\n        product.cmp = Math.min(product.cmp, 99.99);\n        product.dmd = Math.max(product.dmd, 0.001);\n      }\n    }\n  }\n\n  //Process production, purchase, and import/export of materials\n  processMaterials(marketCycles = 1, corporation: ICorporation): [number, number] {\n    let revenue = 0,\n      expenses = 0;\n    this.calculateProductionFactors();\n\n    //At the start of the export state, set the imports of everything to 0\n    if (this.state === \"EXPORT\") {\n      for (let i = 0; i < CorporationConstants.Cities.length; ++i) {\n        const city = CorporationConstants.Cities[i];\n        if (!(this.warehouses[city] instanceof Warehouse)) {\n          continue;\n        }\n        const warehouse = this.warehouses[city];\n        if (warehouse === 0) continue;\n        for (const matName in warehouse.materials) {\n          if (warehouse.materials.hasOwnProperty(matName)) {\n            const mat = warehouse.materials[matName];\n            mat.imp = 0;\n          }\n        }\n      }\n    }\n\n    for (let i = 0; i < CorporationConstants.Cities.length; ++i) {\n      const city = CorporationConstants.Cities[i];\n      const office = this.offices[city];\n      if (office === 0) continue;\n\n      if (this.warehouses[city] instanceof Warehouse) {\n        const warehouse = this.warehouses[city];\n        if (warehouse === 0) continue;\n\n        switch (this.state) {\n          case \"PURCHASE\": {\n            /* Process purchase of materials */\n            for (const matName in warehouse.materials) {\n              if (!warehouse.materials.hasOwnProperty(matName)) continue;\n              const mat = warehouse.materials[matName];\n              let buyAmt = 0;\n              let maxAmt = 0;\n              if (warehouse.smartSupplyEnabled && Object.keys(this.reqMats).includes(matName)) {\n                continue;\n              }\n              buyAmt = mat.buy * CorporationConstants.SecsPerMarketCycle * marketCycles;\n\n              if (matName == \"RealEstate\") {\n                maxAmt = buyAmt;\n              } else {\n                maxAmt = Math.floor((warehouse.size - warehouse.sizeUsed) / MaterialSizes[matName]);\n              }\n              buyAmt = Math.min(buyAmt, maxAmt);\n              if (buyAmt > 0) {\n                mat.qty += buyAmt;\n                expenses += buyAmt * mat.bCost;\n              }\n              this.updateWarehouseSizeUsed(warehouse);\n            } //End process purchase of materials\n\n            // smart supply\n            const smartBuy: { [key: string]: number | undefined } = {};\n            for (const matName in warehouse.materials) {\n              if (!warehouse.materials.hasOwnProperty(matName)) continue;\n              if (!warehouse.smartSupplyEnabled || !Object.keys(this.reqMats).includes(matName)) continue;\n              const mat = warehouse.materials[matName];\n\n              //Smart supply tracker is stored as per second rate\n              const reqMat = this.reqMats[matName];\n              if (reqMat === undefined) throw new Error(`reqMat \"${matName}\" is undefined`);\n              mat.buy = reqMat * warehouse.smartSupplyStore;\n              let buyAmt = mat.buy * CorporationConstants.SecsPerMarketCycle * marketCycles;\n              const maxAmt = Math.floor((warehouse.size - warehouse.sizeUsed) / MaterialSizes[matName]);\n              buyAmt = Math.min(buyAmt, maxAmt);\n              if (buyAmt > 0) smartBuy[matName] = buyAmt;\n            }\n\n            // Find which material were trying to create the least amount of product with.\n            let worseAmt = 1e99;\n            for (const matName in smartBuy) {\n              const buyAmt = smartBuy[matName];\n              if (buyAmt === undefined) throw new Error(`Somehow smartbuy matname is undefined`);\n              const reqMat = this.reqMats[matName];\n              if (reqMat === undefined) throw new Error(`reqMat \"${matName}\" is undefined`);\n              const amt = buyAmt / reqMat;\n              if (amt < worseAmt) worseAmt = amt;\n            }\n\n            // Align all the materials to the smallest amount.\n            for (const matName in smartBuy) {\n              const reqMat = this.reqMats[matName];\n              if (reqMat === undefined) throw new Error(`reqMat \"${matName}\" is undefined`);\n              smartBuy[matName] = worseAmt * reqMat;\n            }\n\n            // Calculate the total size of all things were trying to buy\n            let totalSize = 0;\n            for (const matName in smartBuy) {\n              const buyAmt = smartBuy[matName];\n              if (buyAmt === undefined) throw new Error(`Somehow smartbuy matname is undefined`);\n              totalSize += buyAmt * MaterialSizes[matName];\n            }\n\n            // Shrink to the size of available space.\n            const freeSpace = warehouse.size - warehouse.sizeUsed;\n            if (totalSize > freeSpace) {\n              for (const matName in smartBuy) {\n                const buyAmt = smartBuy[matName];\n                if (buyAmt === undefined) throw new Error(`Somehow smartbuy matname is undefined`);\n                smartBuy[matName] = Math.floor((buyAmt * freeSpace) / totalSize);\n              }\n            }\n\n            // Use the materials already in the warehouse if the option is on.\n            for (const matName in smartBuy) {\n              if (!warehouse.smartSupplyUseLeftovers[matName]) continue;\n              const mat = warehouse.materials[matName];\n              const buyAmt = smartBuy[matName];\n              if (buyAmt === undefined) throw new Error(`Somehow smartbuy matname is undefined`);\n              smartBuy[matName] = Math.max(0, buyAmt - mat.qty);\n            }\n\n            // buy them\n            for (const matName in smartBuy) {\n              const mat = warehouse.materials[matName];\n              const buyAmt = smartBuy[matName];\n              if (buyAmt === undefined) throw new Error(`Somehow smartbuy matname is undefined`);\n              mat.qty += buyAmt;\n              expenses += buyAmt * mat.bCost;\n            }\n            break;\n          }\n          case \"PRODUCTION\":\n            warehouse.smartSupplyStore = 0; //Reset smart supply amount\n\n            /* Process production of materials */\n            if (this.prodMats.length > 0) {\n              const mat = warehouse.materials[this.prodMats[0]];\n              //Calculate the maximum production of this material based\n              //on the office's productivity\n              const maxProd =\n                this.getOfficeProductivity(office) *\n                this.prodMult * // Multiplier from materials\n                corporation.getProductionMultiplier() *\n                this.getProductionMultiplier(); // Multiplier from Research\n              let prod;\n\n              if (mat.prdman[0]) {\n                //Production is manually limited\n                prod = Math.min(maxProd, mat.prdman[1]);\n              } else {\n                prod = maxProd;\n              }\n              prod *= CorporationConstants.SecsPerMarketCycle * marketCycles; //Convert production from per second to per market cycle\n\n              // Calculate net change in warehouse storage making the produced materials will cost\n              let totalMatSize = 0;\n              for (let tmp = 0; tmp < this.prodMats.length; ++tmp) {\n                totalMatSize += MaterialSizes[this.prodMats[tmp]];\n              }\n              for (const reqMatName in this.reqMats) {\n                const normQty = this.reqMats[reqMatName];\n                if (normQty === undefined) continue;\n                totalMatSize -= MaterialSizes[reqMatName] * normQty;\n              }\n              // If not enough space in warehouse, limit the amount of produced materials\n              if (totalMatSize > 0) {\n                const maxAmt = Math.floor((warehouse.size - warehouse.sizeUsed) / totalMatSize);\n                prod = Math.min(maxAmt, prod);\n              }\n\n              if (prod < 0) {\n                prod = 0;\n              }\n\n              // Keep track of production for smart supply (/s)\n              warehouse.smartSupplyStore += prod / (CorporationConstants.SecsPerMarketCycle * marketCycles);\n\n              // Make sure we have enough resource to make our materials\n              let producableFrac = 1;\n              for (const reqMatName in this.reqMats) {\n                if (this.reqMats.hasOwnProperty(reqMatName)) {\n                  const reqMat = this.reqMats[reqMatName];\n                  if (reqMat === undefined) continue;\n                  const req = reqMat * prod;\n                  if (warehouse.materials[reqMatName].qty < req) {\n                    producableFrac = Math.min(producableFrac, warehouse.materials[reqMatName].qty / req);\n                  }\n                }\n              }\n              if (producableFrac <= 0) {\n                producableFrac = 0;\n                prod = 0;\n              }\n\n              // Make our materials if they are producable\n              if (producableFrac > 0 && prod > 0) {\n                for (const reqMatName in this.reqMats) {\n                  const reqMat = this.reqMats[reqMatName];\n                  if (reqMat === undefined) continue;\n                  const reqMatQtyNeeded = reqMat * prod * producableFrac;\n                  warehouse.materials[reqMatName].qty -= reqMatQtyNeeded;\n                  warehouse.materials[reqMatName].prd = 0;\n                  warehouse.materials[reqMatName].prd -=\n                    reqMatQtyNeeded / (CorporationConstants.SecsPerMarketCycle * marketCycles);\n                }\n                for (let j = 0; j < this.prodMats.length; ++j) {\n                  warehouse.materials[this.prodMats[j]].qty += prod * producableFrac;\n                  warehouse.materials[this.prodMats[j]].qlt =\n                    office.employeeProd[EmployeePositions.Engineer] / 90 +\n                    Math.pow(this.sciResearch.qty, this.sciFac) +\n                    Math.pow(warehouse.materials[\"AICores\"].qty, this.aiFac) / 10e3;\n                }\n              } else {\n                for (const reqMatName in this.reqMats) {\n                  if (this.reqMats.hasOwnProperty(reqMatName)) {\n                    warehouse.materials[reqMatName].prd = 0;\n                  }\n                }\n              }\n\n              //Per second\n              const fooProd = (prod * producableFrac) / (CorporationConstants.SecsPerMarketCycle * marketCycles);\n              for (let fooI = 0; fooI < this.prodMats.length; ++fooI) {\n                warehouse.materials[this.prodMats[fooI]].prd = fooProd;\n              }\n            } else {\n              //If this doesn't produce any materials, then it only creates\n              //Products. Creating products will consume materials. The\n              //Production of all consumed materials must be set to 0\n              for (const reqMatName in this.reqMats) {\n                warehouse.materials[reqMatName].prd = 0;\n              }\n            }\n            break;\n\n          case \"SALE\":\n            /* Process sale of materials */\n            for (const matName in warehouse.materials) {\n              if (warehouse.materials.hasOwnProperty(matName)) {\n                const mat = warehouse.materials[matName];\n                if (mat.sCost < 0 || mat.sllman[0] === false) {\n                  mat.sll = 0;\n                  continue;\n                }\n\n                // Sale multipliers\n                const businessFactor = this.getBusinessFactor(office); //Business employee productivity\n                const advertisingFactor = this.getAdvertisingFactors()[0]; //Awareness + popularity\n                const marketFactor = this.getMarketFactor(mat); //Competition + demand\n\n                // Determine the cost that the material will be sold at\n                const markupLimit = mat.getMarkupLimit();\n                let sCost;\n                if (mat.marketTa2) {\n                  const prod = mat.prd;\n\n                  // Reverse engineer the 'maxSell' formula\n                  // 1. Set 'maxSell' = prod\n                  // 2. Substitute formula for 'markup'\n                  // 3. Solve for 'sCost'\n                  const numerator = markupLimit;\n                  const sqrtNumerator = prod;\n                  const sqrtDenominator =\n                    (mat.qlt + 0.001) *\n                    marketFactor *\n                    businessFactor *\n                    corporation.getSalesMultiplier() *\n                    advertisingFactor *\n                    this.getSalesMultiplier();\n                  const denominator = Math.sqrt(sqrtNumerator / sqrtDenominator);\n                  let optimalPrice;\n                  if (sqrtDenominator === 0 || denominator === 0) {\n                    if (sqrtNumerator === 0) {\n                      optimalPrice = 0; // No production\n                    } else {\n                      optimalPrice = mat.bCost + markupLimit;\n                      console.warn(`In Corporation, found illegal 0s when trying to calculate MarketTA2 sale cost`);\n                    }\n                  } else {\n                    optimalPrice = numerator / denominator + mat.bCost;\n                  }\n\n                  // We'll store this \"Optimal Price\" in a property so that we don't have\n                  // to re-calculate it for the UI\n                  mat.marketTa2Price = optimalPrice;\n\n                  sCost = optimalPrice;\n                } else if (mat.marketTa1) {\n                  sCost = mat.bCost + markupLimit;\n                } else if (isString(mat.sCost)) {\n                  sCost = (mat.sCost as string).replace(/MP/g, mat.bCost + \"\");\n                  sCost = eval(sCost);\n                } else {\n                  sCost = mat.sCost;\n                }\n\n                // Calculate how much of the material sells (per second)\n                let markup = 1;\n                if (sCost > mat.bCost) {\n                  //Penalty if difference between sCost and bCost is greater than markup limit\n                  if (sCost - mat.bCost > markupLimit) {\n                    markup = Math.pow(markupLimit / (sCost - mat.bCost), 2);\n                  }\n                } else if (sCost < mat.bCost) {\n                  if (sCost <= 0) {\n                    markup = 1e12; //Sell everything, essentially discard\n                  } else {\n                    //Lower prices than market increases sales\n                    markup = mat.bCost / sCost;\n                  }\n                }\n\n                const maxSell =\n                  (mat.qlt + 0.001) *\n                  marketFactor *\n                  markup *\n                  businessFactor *\n                  corporation.getSalesMultiplier() *\n                  advertisingFactor *\n                  this.getSalesMultiplier();\n                let sellAmt;\n                if (isString(mat.sllman[1])) {\n                  //Dynamically evaluated\n                  let tmp = (mat.sllman[1] as string).replace(/MAX/g, maxSell + \"\");\n                  tmp = tmp.replace(/PROD/g, mat.prd + \"\");\n                  try {\n                    sellAmt = eval(tmp);\n                  } catch (e) {\n                    dialogBoxCreate(\n                      \"Error evaluating your sell amount for material \" +\n                        mat.name +\n                        \" in \" +\n                        this.name +\n                        \"'s \" +\n                        city +\n                        \" office. The sell amount \" +\n                        \"is being set to zero\",\n                    );\n                    sellAmt = 0;\n                  }\n                  sellAmt = Math.min(maxSell, sellAmt);\n                } else if (mat.sllman[1] === -1) {\n                  //Backwards compatibility, -1 = MAX\n                  sellAmt = maxSell;\n                } else {\n                  //Player's input value is just a number\n                  sellAmt = Math.min(maxSell, mat.sllman[1] as number);\n                }\n\n                sellAmt = sellAmt * CorporationConstants.SecsPerMarketCycle * marketCycles;\n                sellAmt = Math.min(mat.qty, sellAmt);\n                if (sellAmt < 0) {\n                  console.warn(`sellAmt calculated to be negative for ${matName} in ${city}`);\n                  mat.sll = 0;\n                  continue;\n                }\n                if (sellAmt && sCost >= 0) {\n                  mat.qty -= sellAmt;\n                  revenue += sellAmt * sCost;\n                  mat.sll = sellAmt / (CorporationConstants.SecsPerMarketCycle * marketCycles);\n                } else {\n                  mat.sll = 0;\n                }\n              }\n            } //End processing of sale of materials\n            break;\n\n          case \"EXPORT\":\n            for (const matName in warehouse.materials) {\n              if (warehouse.materials.hasOwnProperty(matName)) {\n                const mat = warehouse.materials[matName];\n                mat.totalExp = 0; //Reset export\n                for (let expI = 0; expI < mat.exp.length; ++expI) {\n                  const exp = mat.exp[expI];\n                  const amtStr = exp.amt.replace(\n                    /MAX/g,\n                    mat.qty / (CorporationConstants.SecsPerMarketCycle * marketCycles) + \"\",\n                  );\n                  let amt = 0;\n                  try {\n                    amt = eval(amtStr);\n                  } catch (e) {\n                    dialogBoxCreate(\n                      \"Calculating export for \" +\n                        mat.name +\n                        \" in \" +\n                        this.name +\n                        \"'s \" +\n                        city +\n                        \" division failed with \" +\n                        \"error: \" +\n                        e,\n                    );\n                    continue;\n                  }\n                  if (isNaN(amt)) {\n                    dialogBoxCreate(\n                      \"Error calculating export amount for \" +\n                        mat.name +\n                        \" in \" +\n                        this.name +\n                        \"'s \" +\n                        city +\n                        \" division.\",\n                    );\n                    continue;\n                  }\n                  amt = amt * CorporationConstants.SecsPerMarketCycle * marketCycles;\n\n                  if (mat.qty < amt) {\n                    amt = mat.qty;\n                  }\n                  if (amt === 0) {\n                    break; //None left\n                  }\n                  for (let foo = 0; foo < corporation.divisions.length; ++foo) {\n                    if (corporation.divisions[foo].name === exp.ind) {\n                      const expIndustry = corporation.divisions[foo];\n                      const expWarehouse = expIndustry.warehouses[exp.city];\n                      if (!(expWarehouse instanceof Warehouse)) {\n                        console.error(`Invalid export! ${expIndustry.name} ${exp.city}`);\n                        break;\n                      }\n\n                      // Make sure theres enough space in warehouse\n                      if (expWarehouse.sizeUsed >= expWarehouse.size) {\n                        // Warehouse at capacity. Exporting doesnt\n                        // affect revenue so just return 0's\n                        return [0, 0];\n                      } else {\n                        const maxAmt = Math.floor((expWarehouse.size - expWarehouse.sizeUsed) / MaterialSizes[matName]);\n                        amt = Math.min(maxAmt, amt);\n                      }\n                      expWarehouse.materials[matName].imp +=\n                        amt / (CorporationConstants.SecsPerMarketCycle * marketCycles);\n                      expWarehouse.materials[matName].qty += amt;\n                      expWarehouse.materials[matName].qlt = mat.qlt;\n                      mat.qty -= amt;\n                      mat.totalExp += amt;\n                      expIndustry.updateWarehouseSizeUsed(expWarehouse);\n                      break;\n                    }\n                  }\n                }\n                //totalExp should be per second\n                mat.totalExp /= CorporationConstants.SecsPerMarketCycle * marketCycles;\n              }\n            }\n\n            break;\n\n          case \"START\":\n            break;\n          default:\n            console.error(`Invalid state: ${this.state}`);\n            break;\n        } //End switch(this.state)\n        this.updateWarehouseSizeUsed(warehouse);\n      } // End warehouse\n\n      //Produce Scientific Research based on R&D employees\n      //Scientific Research can be produced without a warehouse\n      if (office instanceof OfficeSpace) {\n        this.sciResearch.qty +=\n          0.004 *\n          Math.pow(office.employeeProd[EmployeePositions.RandD], 0.5) *\n          corporation.getScientificResearchMultiplier() *\n          this.getScientificResearchMultiplier();\n      }\n    }\n    return [revenue, expenses];\n  }\n\n  //Process production & sale of this industry's FINISHED products (including all of their stats)\n  processProducts(marketCycles = 1, corporation: ICorporation): [number, number] {\n    let revenue = 0;\n    const expenses = 0;\n\n    //Create products\n    if (this.state === \"PRODUCTION\") {\n      for (const prodName in this.products) {\n        const prod = this.products[prodName];\n        if (prod === undefined) continue;\n        if (!prod.fin) {\n          const city = prod.createCity;\n          const office = this.offices[city];\n          if (office === 0) continue;\n\n          // Designing/Creating a Product is based mostly off Engineers\n          const engrProd = office.employeeProd[EmployeePositions.Engineer];\n          const mgmtProd = office.employeeProd[EmployeePositions.Management];\n          const opProd = office.employeeProd[EmployeePositions.Operations];\n          const total = engrProd + mgmtProd + opProd;\n          if (total <= 0) {\n            break;\n          }\n\n          // Management is a multiplier for the production from Engineers\n          const mgmtFactor = 1 + mgmtProd / (1.2 * total);\n\n          const progress = (Math.pow(engrProd, 0.34) + Math.pow(opProd, 0.2)) * mgmtFactor;\n\n          prod.createProduct(marketCycles, progress);\n          if (prod.prog >= 100) {\n            prod.finishProduct(office.employeeProd, this);\n          }\n          break;\n        }\n      }\n    }\n\n    //Produce Products\n    for (const prodName in this.products) {\n      if (this.products.hasOwnProperty(prodName)) {\n        const prod = this.products[prodName];\n        if (prod instanceof Product && prod.fin) {\n          revenue += this.processProduct(marketCycles, prod, corporation);\n        }\n      }\n    }\n    return [revenue, expenses];\n  }\n\n  //Processes FINISHED products\n  processProduct(marketCycles = 1, product: Product, corporation: ICorporation): number {\n    let totalProfit = 0;\n    for (let i = 0; i < CorporationConstants.Cities.length; ++i) {\n      const city = CorporationConstants.Cities[i];\n      const office = this.offices[city];\n      if (office === 0) continue;\n      const warehouse = this.warehouses[city];\n      if (warehouse instanceof Warehouse) {\n        switch (this.state) {\n          case \"PRODUCTION\": {\n            //Calculate the maximum production of this material based\n            //on the office's productivity\n            const maxProd =\n              this.getOfficeProductivity(office, { forProduct: true }) *\n              corporation.getProductionMultiplier() *\n              this.prodMult * // Multiplier from materials\n              this.getProductionMultiplier() * // Multiplier from research\n              this.getProductProductionMultiplier(); // Multiplier from research\n            let prod;\n\n            //Account for whether production is manually limited\n            if (product.prdman[city][0]) {\n              prod = Math.min(maxProd, product.prdman[city][1]);\n            } else {\n              prod = maxProd;\n            }\n            prod *= CorporationConstants.SecsPerMarketCycle * marketCycles;\n\n            //Calculate net change in warehouse storage making the Products will cost\n            let netStorageSize = product.siz;\n            for (const reqMatName in product.reqMats) {\n              if (product.reqMats.hasOwnProperty(reqMatName)) {\n                const normQty = product.reqMats[reqMatName];\n                netStorageSize -= MaterialSizes[reqMatName] * normQty;\n              }\n            }\n\n            //If there's not enough space in warehouse, limit the amount of Product\n            if (netStorageSize > 0) {\n              const maxAmt = Math.floor((warehouse.size - warehouse.sizeUsed) / netStorageSize);\n              prod = Math.min(maxAmt, prod);\n            }\n\n            warehouse.smartSupplyStore += prod / (CorporationConstants.SecsPerMarketCycle * marketCycles);\n\n            //Make sure we have enough resources to make our Products\n            let producableFrac = 1;\n            for (const reqMatName in product.reqMats) {\n              if (product.reqMats.hasOwnProperty(reqMatName)) {\n                const req = product.reqMats[reqMatName] * prod;\n                if (warehouse.materials[reqMatName].qty < req) {\n                  producableFrac = Math.min(producableFrac, warehouse.materials[reqMatName].qty / req);\n                }\n              }\n            }\n\n            //Make our Products if they are producable\n            if (producableFrac > 0 && prod > 0) {\n              for (const reqMatName in product.reqMats) {\n                if (product.reqMats.hasOwnProperty(reqMatName)) {\n                  const reqMatQtyNeeded = product.reqMats[reqMatName] * prod * producableFrac;\n                  warehouse.materials[reqMatName].qty -= reqMatQtyNeeded;\n                  warehouse.materials[reqMatName].prd -=\n                    reqMatQtyNeeded / (CorporationConstants.SecsPerMarketCycle * marketCycles);\n                }\n              }\n              //Quantity\n              product.data[city][0] += prod * producableFrac;\n            }\n\n            //Keep track of production Per second\n            product.data[city][1] = (prod * producableFrac) / (CorporationConstants.SecsPerMarketCycle * marketCycles);\n            break;\n          }\n          case \"SALE\": {\n            //Process sale of Products\n            product.pCost = 0; //Estimated production cost\n            for (const reqMatName in product.reqMats) {\n              if (product.reqMats.hasOwnProperty(reqMatName)) {\n                product.pCost += product.reqMats[reqMatName] * warehouse.materials[reqMatName].bCost;\n              }\n            }\n\n            // Since its a product, its production cost is increased for labor\n            product.pCost *= CorporationConstants.ProductProductionCostRatio;\n\n            // Sale multipliers\n            const businessFactor = this.getBusinessFactor(office); //Business employee productivity\n            const advertisingFactor = this.getAdvertisingFactors()[0]; //Awareness + popularity\n            const marketFactor = this.getMarketFactor(product); //Competition + demand\n\n            // Calculate Sale Cost (sCost), which could be dynamically evaluated\n            const markupLimit = product.rat / product.mku;\n            let sCost;\n            if (product.marketTa2) {\n              const prod = product.data[city][1];\n\n              // Reverse engineer the 'maxSell' formula\n              // 1. Set 'maxSell' = prod\n              // 2. Substitute formula for 'markup'\n              // 3. Solve for 'sCost'roduct.pCost = sCost\n              const numerator = markupLimit;\n              const sqrtNumerator = prod;\n              const sqrtDenominator =\n                0.5 *\n                Math.pow(product.rat, 0.65) *\n                marketFactor *\n                corporation.getSalesMultiplier() *\n                businessFactor *\n                advertisingFactor *\n                this.getSalesMultiplier();\n              const denominator = Math.sqrt(sqrtNumerator / sqrtDenominator);\n              let optimalPrice;\n              if (sqrtDenominator === 0 || denominator === 0) {\n                if (sqrtNumerator === 0) {\n                  optimalPrice = 0; // No production\n                } else {\n                  optimalPrice = product.pCost + markupLimit;\n                  console.warn(`In Corporation, found illegal 0s when trying to calculate MarketTA2 sale cost`);\n                }\n              } else {\n                optimalPrice = numerator / denominator + product.pCost;\n              }\n\n              // Store this \"optimal Price\" in a property so we don't have to re-calculate for UI\n              product.marketTa2Price[city] = optimalPrice;\n              sCost = optimalPrice;\n            } else if (product.marketTa1) {\n              sCost = product.pCost + markupLimit;\n            } else if (isString(product.sCost)) {\n              const sCostString = product.sCost as string;\n              if (product.mku === 0) {\n                console.error(`mku is zero, reverting to 1 to avoid Infinity`);\n                product.mku = 1;\n              }\n              sCost = sCostString.replace(/MP/g, product.pCost + product.rat / product.mku + \"\");\n              sCost = eval(sCost);\n            } else {\n              sCost = product.sCost;\n            }\n\n            let markup = 1;\n            if (sCost > product.pCost) {\n              if (sCost - product.pCost > markupLimit) {\n                markup = markupLimit / (sCost - product.pCost);\n              }\n            }\n\n            const maxSell =\n              0.5 *\n              Math.pow(product.rat, 0.65) *\n              marketFactor *\n              corporation.getSalesMultiplier() *\n              Math.pow(markup, 2) *\n              businessFactor *\n              advertisingFactor *\n              this.getSalesMultiplier();\n            let sellAmt;\n            if (product.sllman[city][0] && isString(product.sllman[city][1])) {\n              //Sell amount is dynamically evaluated\n              let tmp = product.sllman[city][1].replace(/MAX/g, maxSell);\n              tmp = tmp.replace(/PROD/g, product.data[city][1]);\n              try {\n                tmp = eval(tmp);\n              } catch (e) {\n                dialogBoxCreate(\n                  \"Error evaluating your sell price expression for \" +\n                    product.name +\n                    \" in \" +\n                    this.name +\n                    \"'s \" +\n                    city +\n                    \" office. Sell price is being set to MAX\",\n                );\n                tmp = maxSell;\n              }\n              sellAmt = Math.min(maxSell, tmp);\n            } else if (product.sllman[city][0] && product.sllman[city][1] > 0) {\n              //Sell amount is manually limited\n              sellAmt = Math.min(maxSell, product.sllman[city][1]);\n            } else if (product.sllman[city][0] === false) {\n              sellAmt = 0;\n            } else {\n              sellAmt = maxSell;\n            }\n            if (sellAmt < 0) {\n              sellAmt = 0;\n            }\n            sellAmt = sellAmt * CorporationConstants.SecsPerMarketCycle * marketCycles;\n            sellAmt = Math.min(product.data[city][0], sellAmt); //data[0] is qty\n            if (sellAmt && sCost) {\n              product.data[city][0] -= sellAmt; //data[0] is qty\n              totalProfit += sellAmt * sCost;\n              product.data[city][2] = sellAmt / (CorporationConstants.SecsPerMarketCycle * marketCycles); //data[2] is sell property\n            } else {\n              product.data[city][2] = 0; //data[2] is sell property\n            }\n            break;\n          }\n          case \"START\":\n          case \"PURCHASE\":\n          case \"EXPORT\":\n            break;\n          default:\n            console.error(`Invalid State: ${this.state}`);\n            break;\n        } //End switch(this.state)\n      }\n    }\n    return totalProfit;\n  }\n\n  discontinueProduct(product: Product): void {\n    for (const productName in this.products) {\n      if (this.products.hasOwnProperty(productName)) {\n        if (product === this.products[productName]) {\n          delete this.products[productName];\n        }\n      }\n    }\n  }\n\n  upgrade(upgrade: IndustryUpgrade, refs: { corporation: ICorporation; office: OfficeSpace }): void {\n    const corporation = refs.corporation;\n    const office = refs.office;\n    const upgN = upgrade[0];\n    while (this.upgrades.length <= upgN) {\n      this.upgrades.push(0);\n    }\n    ++this.upgrades[upgN];\n\n    switch (upgN) {\n      case 0: {\n        //Coffee, 5% energy per employee\n        for (let i = 0; i < office.employees.length; ++i) {\n          office.employees[i].ene = Math.min(office.employees[i].ene * 1.05, office.maxEne);\n        }\n        break;\n      }\n      case 1: {\n        //AdVert.Inc,\n        const advMult = corporation.getAdvertisingMultiplier() * this.getAdvertisingMultiplier();\n        this.awareness += 3 * advMult;\n        this.popularity += 1 * advMult;\n        this.awareness *= 1.01 * advMult;\n        this.popularity *= (1 + getRandomInt(1, 3) / 100) * advMult;\n        break;\n      }\n      default: {\n        console.error(`Un-implemented function index: ${upgN}`);\n        break;\n      }\n    }\n  }\n\n  // Returns how much of a material can be produced based of office productivity (employee stats)\n  getOfficeProductivity(office: OfficeSpace, params: { forProduct?: boolean } = {}): number {\n    const opProd = office.employeeProd[EmployeePositions.Operations];\n    const engrProd = office.employeeProd[EmployeePositions.Engineer];\n    const mgmtProd = office.employeeProd[EmployeePositions.Management];\n    const total = opProd + engrProd + mgmtProd;\n\n    if (total <= 0) return 0;\n\n    // Management is a multiplier for the production from Operations and Engineers\n    const mgmtFactor = 1 + mgmtProd / (1.2 * total);\n\n    // For production, Operations is slightly more important than engineering\n    // Both Engineering and Operations have diminishing returns\n    const prod = (Math.pow(opProd, 0.4) + Math.pow(engrProd, 0.3)) * mgmtFactor;\n\n    // Generic multiplier for the production. Used for game-balancing purposes\n    const balancingMult = 0.05;\n\n    if (params && params.forProduct) {\n      // Products are harder to create and therefore have less production\n      return 0.5 * balancingMult * prod;\n    } else {\n      return balancingMult * prod;\n    }\n  }\n\n  // Returns a multiplier based on the office' 'Business' employees that affects sales\n  getBusinessFactor(office: OfficeSpace): number {\n    const businessProd = 1 + office.employeeProd[EmployeePositions.Business];\n\n    return calculateEffectWithFactors(businessProd, 0.26, 10e3);\n  }\n\n  //Returns a set of multipliers based on the Industry's awareness, popularity, and advFac. This\n  //multiplier affects sales. The result is:\n  //  [Total sales mult, total awareness mult, total pop mult, awareness/pop ratio mult]\n  getAdvertisingFactors(): [number, number, number, number] {\n    const awarenessFac = Math.pow(this.awareness + 1, this.advFac);\n    const popularityFac = Math.pow(this.popularity + 1, this.advFac);\n    const ratioFac = this.awareness === 0 ? 0.01 : Math.max((this.popularity + 0.001) / this.awareness, 0.01);\n    const totalFac = Math.pow(awarenessFac * popularityFac * ratioFac, 0.85);\n    return [totalFac, awarenessFac, popularityFac, ratioFac];\n  }\n\n  //Returns a multiplier based on a materials demand and competition that affects sales\n  getMarketFactor(mat: { dmd: number; cmp: number }): number {\n    return Math.max(0.1, (mat.dmd * (100 - mat.cmp)) / 100);\n  }\n\n  // Returns a boolean indicating whether this Industry has the specified Research\n  hasResearch(name: string): boolean {\n    return this.researched[name] === true;\n  }\n\n  updateResearchTree(): void {\n    const researchTree = IndustryResearchTrees[this.type];\n    if (researchTree === undefined) throw new Error(`Invalid industry \"${this.type}\"`);\n\n    // Since ResearchTree data isnt saved, we'll update the Research Tree data\n    // based on the stored 'researched' property in the Industry object\n    if (Object.keys(researchTree.researched).length !== Object.keys(this.researched).length) {\n      for (const research in this.researched) {\n        researchTree.research(research);\n      }\n    }\n  }\n\n  // Get multipliers from Research\n  getAdvertisingMultiplier(): number {\n    const researchTree = IndustryResearchTrees[this.type];\n    if (researchTree === undefined) throw new Error(`Invalid industry: \"${this.type}\"`);\n    this.updateResearchTree();\n    return researchTree.getAdvertisingMultiplier();\n  }\n\n  getEmployeeChaMultiplier(): number {\n    const researchTree = IndustryResearchTrees[this.type];\n    if (researchTree === undefined) throw new Error(`Invalid industry: \"${this.type}\"`);\n    this.updateResearchTree();\n    return researchTree.getEmployeeChaMultiplier();\n  }\n\n  getEmployeeCreMultiplier(): number {\n    const researchTree = IndustryResearchTrees[this.type];\n    if (researchTree === undefined) throw new Error(`Invalid industry: \"${this.type}\"`);\n    this.updateResearchTree();\n    return researchTree.getEmployeeCreMultiplier();\n  }\n\n  getEmployeeEffMultiplier(): number {\n    const researchTree = IndustryResearchTrees[this.type];\n    if (researchTree === undefined) throw new Error(`Invalid industry: \"${this.type}\"`);\n    this.updateResearchTree();\n    return researchTree.getEmployeeEffMultiplier();\n  }\n\n  getEmployeeIntMultiplier(): number {\n    const researchTree = IndustryResearchTrees[this.type];\n    if (researchTree === undefined) throw new Error(`Invalid industry: \"${this.type}\"`);\n    this.updateResearchTree();\n    return researchTree.getEmployeeIntMultiplier();\n  }\n\n  getProductionMultiplier(): number {\n    const researchTree = IndustryResearchTrees[this.type];\n    if (researchTree === undefined) throw new Error(`Invalid industry: \"${this.type}\"`);\n    this.updateResearchTree();\n    return researchTree.getProductionMultiplier();\n  }\n\n  getProductProductionMultiplier(): number {\n    const researchTree = IndustryResearchTrees[this.type];\n    if (researchTree === undefined) throw new Error(`Invalid industry: \"${this.type}\"`);\n    this.updateResearchTree();\n    return researchTree.getProductProductionMultiplier();\n  }\n\n  getSalesMultiplier(): number {\n    const researchTree = IndustryResearchTrees[this.type];\n    if (researchTree === undefined) throw new Error(`Invalid industry: \"${this.type}\"`);\n    this.updateResearchTree();\n    return researchTree.getSalesMultiplier();\n  }\n\n  getScientificResearchMultiplier(): number {\n    const researchTree = IndustryResearchTrees[this.type];\n    if (researchTree === undefined) throw new Error(`Invalid industry: \"${this.type}\"`);\n    this.updateResearchTree();\n    return researchTree.getScientificResearchMultiplier();\n  }\n\n  getStorageMultiplier(): number {\n    const researchTree = IndustryResearchTrees[this.type];\n    if (researchTree === undefined) throw new Error(`Invalid industry: \"${this.type}\"`);\n    this.updateResearchTree();\n    return researchTree.getStorageMultiplier();\n  }\n\n  copy(): Industry {\n    // products: { [key: string]: Product | undefined } = {};\n\n    // //Maps locations to warehouses. 0 if no warehouse at that location\n    // warehouses: { [key: string]: Warehouse | 0 };\n\n    // //Maps locations to offices. 0 if no office at that location\n    // offices: { [key: string]: OfficeSpace | 0 } = {\n    //   [CityName.Aevum]: 0,\n    //   [CityName.Chongqing]: 0,\n    //   [CityName.Sector12]: new OfficeSpace({\n    //     loc: CityName.Sector12,\n    //     size: CorporationConstants.OfficeInitialSize,\n    //   }),\n    //   [CityName.NewTokyo]: 0,\n    //   [CityName.Ishima]: 0,\n    //   [CityName.Volhaven]: 0,\n    // };\n\n    const division = new Industry();\n    division.sciResearch = this.sciResearch.copy();\n    division.researched = {};\n    for (const x of Object.keys(this.researched)) {\n      division.researched[x] = this.researched[x];\n    }\n    division.reqMats = {};\n    for (const x of Object.keys(this.reqMats)) {\n      division.reqMats[x] = this.reqMats[x];\n    }\n    division.name = this.name;\n    division.type = this.type;\n    division.makesProducts = this.makesProducts;\n    division.awareness = this.awareness;\n    division.popularity = this.popularity;\n    division.startingCost = this.startingCost;\n    division.reFac = this.reFac;\n    division.sciFac = this.sciFac;\n    division.hwFac = this.hwFac;\n    division.robFac = this.robFac;\n    division.aiFac = this.aiFac;\n    division.advFac = this.advFac;\n    division.prodMult = this.prodMult;\n    division.state = this.state;\n    division.newInd = this.newInd;\n    division.lastCycleRevenue = this.lastCycleRevenue.plus(0);\n    division.lastCycleExpenses = this.lastCycleExpenses.plus(0);\n    division.thisCycleRevenue = this.thisCycleRevenue.plus(0);\n    division.thisCycleExpenses = this.thisCycleExpenses.plus(0);\n    division.upgrades = this.upgrades.slice();\n    division.prodMats = this.prodMats.slice();\n    return division;\n  }\n\n  /**\n   * Serialize the current object to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"Industry\", this);\n  }\n\n  /**\n   * Initiatizes a Industry object from a JSON save state.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Industry {\n    return Generic_fromJSON(Industry, value.data);\n  }\n}\n\nReviver.constructors.Industry = Industry;\n","/**\n * This is a component that implements a mathematical formula used commonly throughout the\n * game. This formula is (typically) used to calculate the effect that various statistics\n * have on a game mechanic. It looks something like:\n *\n *  (stat ^ exponential factor) + (stat / linear factor)\n *\n * where the exponential factor is a number between 0 and 1 and the linear factor\n * is typically a relatively larger number.\n *\n * This formula ensures that the effects of the statistic that is being processed\n * has diminishing returns, but never loses its effectiveness as you continue\n * to raise it.\n */\nexport function calculateEffectWithFactors(n: number, expFac: number, linearFac: number): number {\n  if (expFac <= 0 || expFac >= 1) {\n    console.warn(`Exponential factor is ${expFac}. This is not an intended value for it`);\n  }\n  if (linearFac < 1) {\n    console.warn(`Linear factor is ${linearFac}. This is not an intended value for it`);\n  }\n\n  return Math.pow(n, expFac) + n / linearFac;\n}\n","import { CorporationConstants } from \"./data/Constants\";\nimport { getRandomInt } from \"../utils/helpers/getRandomInt\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\nimport { createElement } from \"../ui/uiHelpers/createElement\";\nimport { EmployeePositions } from \"./EmployeePositions\";\nimport { ICorporation } from \"./ICorporation\";\nimport { numeralWrapper } from \"../ui/numeralFormat\";\nimport { formatNumber } from \"../utils/StringHelperFunctions\";\nimport { OfficeSpace } from \"./OfficeSpace\";\nimport { IIndustry } from \"./IIndustry\";\n\ninterface IParams {\n  name?: string;\n  morale?: number;\n  happiness?: number;\n  energy?: number;\n  intelligence?: number;\n  charisma?: number;\n  experience?: number;\n  creativity?: number;\n  efficiency?: number;\n  salary?: number;\n  loc?: string;\n}\n\nexport class Employee {\n  name: string;\n  mor: number;\n  hap: number;\n  ene: number;\n  int: number;\n  cha: number;\n  exp: number;\n  cre: number;\n  eff: number;\n  sal: number;\n  pro = 0;\n  cyclesUntilRaise = CorporationConstants.CyclesPerEmployeeRaise;\n  loc: string;\n  pos: string;\n\n  constructor(params: IParams = {}) {\n    this.name = params.name ? params.name : \"Bobby\";\n\n    //Morale, happiness, and energy are 0-100\n    this.mor = params.morale ? params.morale : getRandomInt(50, 100);\n    this.hap = params.happiness ? params.happiness : getRandomInt(50, 100);\n    this.ene = params.energy ? params.energy : getRandomInt(50, 100);\n\n    this.int = params.intelligence ? params.intelligence : getRandomInt(10, 50);\n    this.cha = params.charisma ? params.charisma : getRandomInt(10, 50);\n    this.exp = params.experience ? params.experience : getRandomInt(10, 50);\n    this.cre = params.creativity ? params.creativity : getRandomInt(10, 50);\n    this.eff = params.efficiency ? params.efficiency : getRandomInt(10, 50);\n    this.sal = params.salary ? params.salary : getRandomInt(0.1, 5);\n\n    this.loc = params.loc ? params.loc : \"\";\n    this.pos = EmployeePositions.Unassigned;\n  }\n\n  //Returns the amount the employee needs to be paid\n  process(marketCycles = 1, office: OfficeSpace): number {\n    const gain = 0.003 * marketCycles,\n      det = gain * Math.random();\n    this.exp += gain;\n\n    // Employee salaries slowly go up over time\n    this.cyclesUntilRaise -= marketCycles;\n    if (this.cyclesUntilRaise <= 0) {\n      this.sal += CorporationConstants.EmployeeRaiseAmount;\n      this.cyclesUntilRaise += CorporationConstants.CyclesPerEmployeeRaise;\n    }\n\n    //Training\n    const trainingEff = gain * Math.random();\n    if (this.pos === EmployeePositions.Training) {\n      //To increase creativity and intelligence special upgrades are needed\n      this.cha += trainingEff;\n      this.exp += trainingEff;\n      this.eff += trainingEff;\n    }\n\n    this.ene -= det;\n    this.hap -= det;\n\n    if (this.ene < office.minEne) {\n      this.ene = office.minEne;\n    }\n    if (this.hap < office.minHap) {\n      this.hap = office.minHap;\n    }\n    const salary = this.sal * marketCycles * CorporationConstants.SecsPerMarketCycle;\n    return salary;\n  }\n\n  calculateProductivity(corporation: ICorporation, industry: IIndustry): number {\n    const effCre = this.cre * corporation.getEmployeeCreMultiplier() * industry.getEmployeeCreMultiplier(),\n      effCha = this.cha * corporation.getEmployeeChaMultiplier() * industry.getEmployeeChaMultiplier(),\n      effInt = this.int * corporation.getEmployeeIntMultiplier() * industry.getEmployeeIntMultiplier(),\n      effEff = this.eff * corporation.getEmployeeEffMultiplier() * industry.getEmployeeEffMultiplier();\n    const prodBase = this.mor * this.hap * this.ene * 1e-6;\n    let prodMult = 0;\n    switch (this.pos) {\n      //Calculate productivity based on position. This is multipled by prodBase\n      //to get final value\n      case EmployeePositions.Operations:\n        prodMult = 0.6 * effInt + 0.1 * effCha + this.exp + 0.5 * effCre + effEff;\n        break;\n      case EmployeePositions.Engineer:\n        prodMult = effInt + 0.1 * effCha + 1.5 * this.exp + effEff;\n        break;\n      case EmployeePositions.Business:\n        prodMult = 0.4 * effInt + effCha + 0.5 * this.exp;\n        break;\n      case EmployeePositions.Management:\n        prodMult = 2 * effCha + this.exp + 0.2 * effCre + 0.7 * effEff;\n        break;\n      case EmployeePositions.RandD:\n        prodMult = 1.5 * effInt + 0.8 * this.exp + effCre + 0.5 * effEff;\n        break;\n      case EmployeePositions.Unassigned:\n      case EmployeePositions.Training:\n        prodMult = 0;\n        break;\n      default:\n        console.error(`Invalid employee position: ${this.pos}`);\n        break;\n    }\n    return prodBase * prodMult;\n  }\n\n  //Process benefits from having an office party thrown\n  throwParty(money: number): number {\n    const mult = 1 + money / 10e6;\n    this.mor *= mult;\n    this.mor = Math.min(100, this.mor);\n    this.hap *= mult;\n    this.hap = Math.min(100, this.hap);\n    return mult;\n  }\n\n  copy(): Employee {\n    const employee = new Employee();\n    employee.name = this.name;\n    employee.mor = this.mor;\n    employee.hap = this.hap;\n    employee.ene = this.ene;\n    employee.int = this.int;\n    employee.cha = this.cha;\n    employee.exp = this.exp;\n    employee.cre = this.cre;\n    employee.eff = this.eff;\n    employee.sal = this.sal;\n    employee.pro = this.pro;\n    employee.cyclesUntilRaise = this.cyclesUntilRaise;\n    employee.loc = this.loc;\n    employee.pos = this.pos;\n    return employee;\n  }\n\n  toJSON(): any {\n    return Generic_toJSON(\"Employee\", this);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Employee {\n    return Generic_fromJSON(Employee, value.data);\n  }\n}\n\nReviver.constructors.Employee = Employee;\n","import { Industries } from \"./IndustryData\";\nimport { IMap } from \"../types\";\n\nexport interface IProductRatingWeight {\n  Aesthetics?: number;\n  Durability?: number;\n  Features?: number;\n  Quality?: number;\n  Performance?: number;\n  Reliability?: number;\n}\n\nexport const ProductRatingWeights: IMap<any> = {\n  [Industries.Food]: {\n    Quality: 0.7,\n    Durability: 0.1,\n    Aesthetics: 0.2,\n  },\n  [Industries.Tobacco]: {\n    Quality: 0.4,\n    Durability: 0.2,\n    Reliability: 0.2,\n    Aesthetics: 0.2,\n  },\n  [Industries.Pharmaceutical]: {\n    Quality: 0.2,\n    Performance: 0.2,\n    Durability: 0.1,\n    Reliability: 0.3,\n    Features: 0.2,\n  },\n  [Industries.Computer]: {\n    Quality: 0.15,\n    Performance: 0.25,\n    Durability: 0.25,\n    Reliability: 0.2,\n    Aesthetics: 0.05,\n    Features: 0.1,\n  },\n  Computer: {\n    //Repeat\n    Quality: 0.15,\n    Performance: 0.25,\n    Durability: 0.25,\n    Reliability: 0.2,\n    Aesthetics: 0.05,\n    Features: 0.1,\n  },\n  [Industries.Robotics]: {\n    Quality: 0.1,\n    Performance: 0.2,\n    Durability: 0.2,\n    Reliability: 0.2,\n    Aesthetics: 0.1,\n    Features: 0.2,\n  },\n  [Industries.Software]: {\n    Quality: 0.2,\n    Performance: 0.2,\n    Reliability: 0.2,\n    Durability: 0.2,\n    Features: 0.2,\n  },\n  [Industries.Healthcare]: {\n    Quality: 0.4,\n    Performance: 0.1,\n    Durability: 0.1,\n    Reliability: 0.3,\n    Features: 0.1,\n  },\n  [Industries.RealEstate]: {\n    Quality: 0.2,\n    Durability: 0.25,\n    Reliability: 0.1,\n    Aesthetics: 0.35,\n    Features: 0.1,\n  },\n};\n","import React, { useState } from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { OfficeSpace } from \"../OfficeSpace\";\nimport { ThrowParty } from \"../Actions\";\nimport { Money } from \"../../ui/React/Money\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { useCorporation } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  office: OfficeSpace;\n  rerender: () => void;\n}\n\nexport function ThrowPartyModal(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const [cost, setCost] = useState(0);\n\n  const totalCost = cost * props.office.employees.length;\n  const canParty = corp.funds.gte(totalCost);\n  function changeCost(event: React.ChangeEvent<HTMLInputElement>): void {\n    let x = parseFloat(event.target.value);\n    if (isNaN(x)) x = 0;\n    setCost(x);\n  }\n\n  function throwParty(): void {\n    if (cost === null || isNaN(cost) || cost < 0) {\n      dialogBoxCreate(\"Invalid value entered\");\n    } else {\n      if (!canParty) {\n        dialogBoxCreate(\"You don't have enough company funds to throw a party!\");\n      } else {\n        const mult = ThrowParty(corp, props.office, cost);\n        dialogBoxCreate(\n          \"You threw a party for the office! The morale and happiness \" +\n            \"of each employee increased by \" +\n            numeralWrapper.formatPercentage(mult - 1),\n        );\n        props.rerender();\n        props.onClose();\n      }\n    }\n  }\n\n  function EffectText(): React.ReactElement {\n    if (isNaN(cost) || cost < 0) return <Typography>Invalid value entered!</Typography>;\n    return (\n      <Typography>\n        Throwing this party will cost a total of <Money money={totalCost} />\n      </Typography>\n    );\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) throwParty();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>Enter the amount of money you would like to spend PER EMPLOYEE on this office party</Typography>\n      <EffectText />\n      <Box display=\"flex\" alignItems=\"center\">\n        <TextField\n          autoFocus={true}\n          type=\"number\"\n          placeholder=\"$ / employee\"\n          value={cost}\n          onChange={changeCost}\n          onKeyDown={onKeyDown}\n        />\n        <Button disabled={!canParty} onClick={throwParty}>\n          Throw Party\n        </Button>\n      </Box>\n    </Modal>\n  );\n}\n","// React Component for displaying an Industry's overview information\n// (top-left panel in the Industry UI)\nimport React, { useState } from \"react\";\n\nimport { OfficeSpace } from \"../OfficeSpace\";\nimport { Industries } from \"../IndustryData\";\nimport { IndustryUpgrades } from \"../IndustryUpgrades\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { createProgressBarText } from \"../../utils/helpers/createProgressBarText\";\nimport { MakeProductModal } from \"./MakeProductModal\";\nimport { ResearchPopup } from \"./ResearchPopup\";\nimport { createPopup } from \"../../ui/React/createPopup\";\nimport { Money } from \"../../ui/React/Money\";\nimport { MoneyRate } from \"../../ui/React/MoneyRate\";\nimport { StatsTable } from \"../../ui/React/StatsTable\";\nimport { StaticModal } from \"../../ui/React/StaticModal\";\nimport { MoneyCost } from \"./MoneyCost\";\nimport { useCorporation, useDivision } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport Box from \"@mui/material/Box\";\n\nfunction MakeProductButton(): React.ReactElement {\n  const corp = useCorporation();\n  const division = useDivision();\n  const [makeOpen, setMakeOpen] = useState(false);\n\n  const hasMaxProducts = division.hasMaximumNumberProducts();\n\n  function shouldFlash(): boolean {\n    return Object.keys(division.products).length === 0;\n  }\n\n  let createProductButtonText = \"\";\n  switch (division.type) {\n    case Industries.Food:\n      createProductButtonText = \"Build Restaurant\";\n      break;\n    case Industries.Tobacco:\n      createProductButtonText = \"Create Product\";\n      break;\n    case Industries.Pharmaceutical:\n      createProductButtonText = \"Create Drug\";\n      break;\n    case Industries.Computer:\n    case \"Computer\":\n      createProductButtonText = \"Create Product\";\n      break;\n    case Industries.Robotics:\n      createProductButtonText = \"Design Robot\";\n      break;\n    case Industries.Software:\n      createProductButtonText = \"Develop Software\";\n      break;\n    case Industries.Healthcare:\n      createProductButtonText = \"Build Hospital\";\n      break;\n    case Industries.RealEstate:\n      createProductButtonText = \"Develop Property\";\n      break;\n    default:\n      createProductButtonText = \"Create Product\";\n      return <></>;\n  }\n\n  return (\n    <>\n      <Tooltip\n        title={\n          hasMaxProducts ? (\n            <Typography>\n              You have reached the maximum number of products: {division.getMaximumNumberProducts()}\n            </Typography>\n          ) : (\n            \"\"\n          )\n        }\n      >\n        <Button\n          color={shouldFlash() ? \"error\" : \"primary\"}\n          onClick={() => setMakeOpen(true)}\n          disabled={corp.funds.lt(0)}\n        >\n          {createProductButtonText}\n        </Button>\n      </Tooltip>\n      <MakeProductModal open={makeOpen} onClose={() => setMakeOpen(false)} />\n    </>\n  );\n}\nfunction Text(): React.ReactElement {\n  const corp = useCorporation();\n  const division = useDivision();\n  const [helpOpen, setHelpOpen] = useState(false);\n  const vechain = corp.unlockUpgrades[4] === 1;\n  const profit = division.lastCycleRevenue.minus(division.lastCycleExpenses).toNumber();\n\n  let advertisingInfo = false;\n  const advertisingFactors = division.getAdvertisingFactors();\n  const awarenessFac = advertisingFactors[1];\n  const popularityFac = advertisingFactors[2];\n  const ratioFac = advertisingFactors[3];\n  const totalAdvertisingFac = advertisingFactors[0];\n  if (vechain) {\n    advertisingInfo = true;\n  }\n\n  function convertEffectFacToGraphic(fac: number): string {\n    return createProgressBarText({\n      progress: fac,\n      totalTicks: 20,\n    });\n  }\n\n  function openResearchPopup(): void {\n    const popupId = \"corporation-research-popup-box\";\n    createPopup(popupId, ResearchPopup, {\n      industry: division,\n      popupId: popupId,\n    });\n  }\n\n  return (\n    <>\n      <Typography>\n        Industry: {division.type} (Corp Funds: <Money money={corp.funds.toNumber()} />)\n      </Typography>\n      <br />\n      <StatsTable\n        rows={[\n          [\"Awareness:\", numeralWrapper.format(division.awareness, \"0.000\")],\n          [\"Popularity:\", numeralWrapper.format(division.popularity, \"0.000\")],\n        ]}\n      />\n      {advertisingInfo !== false && (\n        <Tooltip\n          title={\n            <>\n              <Typography>Total multiplier for this industrys sales due to its awareness and popularity</Typography>\n              <StatsTable\n                rows={[\n                  [\"Awareness Bonus:\", \"x\" + numeralWrapper.format(Math.pow(awarenessFac, 0.85), \"0.000\")],\n                  [\"Popularity Bonus:\", \"x\" + numeralWrapper.format(Math.pow(popularityFac, 0.85), \"0.000\")],\n                  [\"Ratio Multiplier:\", \"x\" + numeralWrapper.format(Math.pow(ratioFac, 0.85), \"0.000\")],\n                ]}\n              />\n            </>\n          }\n        >\n          <Typography>Advertising Multiplier: x{numeralWrapper.format(totalAdvertisingFac, \"0.000\")}</Typography>\n        </Tooltip>\n      )}\n      <br />\n      <StatsTable\n        rows={[\n          [\"Revenue:\", <MoneyRate money={division.lastCycleRevenue.toNumber()} />],\n          [\"Expenses:\", <MoneyRate money={division.lastCycleExpenses.toNumber()} />],\n          [\"Profit:\", <MoneyRate money={profit} />],\n        ]}\n      />\n      <br />\n      <Box display=\"flex\" alignItems=\"center\">\n        <Tooltip\n          title={\n            <Typography>\n              Production gain from owning production-boosting materials such as hardware, Robots, AI Cores, and Real\n              Estate.\n            </Typography>\n          }\n        >\n          <Typography>Production Multiplier: {numeralWrapper.format(division.prodMult, \"0.00\")}</Typography>\n        </Tooltip>\n        <IconButton onClick={() => setHelpOpen(true)}>\n          <HelpIcon />\n        </IconButton>\n        <StaticModal open={helpOpen} onClose={() => setHelpOpen(false)}>\n          <Typography>\n            Owning Hardware, Robots, AI Cores, and Real Estate can boost your Industry's production. The effect these\n            materials have on your production varies between Industries. For example, Real Estate may be very effective\n            for some Industries, but ineffective for others.\n            <br />\n            <br />\n            This division's production multiplier is calculated by summing the individual production multiplier of each\n            of its office locations. This production multiplier is applied to each office. Therefore, it is beneficial\n            to expand into new cities as this can greatly increase the production multiplier of your entire Division.\n            <br />\n            <br />\n            Below are approximations for how effective each material is at boosting this industry's production\n            multiplier (Bigger bars = more effective):\n            <br />\n            <br />\n            Hardware:&nbsp;&nbsp;&nbsp; {convertEffectFacToGraphic(division.hwFac)}\n            <br />\n            Robots:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {convertEffectFacToGraphic(division.robFac)}\n            <br />\n            AI Cores:&nbsp;&nbsp;&nbsp; {convertEffectFacToGraphic(division.aiFac)}\n            <br />\n            Real Estate: {convertEffectFacToGraphic(division.reFac)}\n          </Typography>\n        </StaticModal>\n      </Box>\n\n      <Box display=\"flex\" alignItems=\"center\">\n        <Tooltip\n          title={\n            <Typography>\n              Scientific Research increases the quality of the materials and products that you produce.\n            </Typography>\n          }\n        >\n          <Typography>Scientific Research: {numeralWrapper.format(division.sciResearch.qty, \"0.000a\")}</Typography>\n        </Tooltip>\n        <Button sx={{ mx: 1 }} onClick={openResearchPopup}>\n          Research\n        </Button>\n      </Box>\n    </>\n  );\n}\n\nfunction Upgrades(props: { office: OfficeSpace; rerender: () => void }): React.ReactElement {\n  const corp = useCorporation();\n  const division = useDivision();\n  const upgrades = [];\n  for (const index in IndustryUpgrades) {\n    const upgrade = IndustryUpgrades[index];\n\n    // AutoBrew research disables the Coffee upgrade\n    if (division.hasResearch(\"AutoBrew\") && upgrade[4] === \"Coffee\") {\n      continue;\n    }\n\n    const i = upgrade[0];\n    const baseCost = upgrade[1];\n    const priceMult = upgrade[2];\n    let cost = 0;\n    switch (i) {\n      case 0: //Coffee, cost is static per employee\n        cost = props.office.employees.length * baseCost;\n        break;\n      default:\n        cost = baseCost * Math.pow(priceMult, division.upgrades[i]);\n        break;\n    }\n\n    function onClick(): void {\n      if (corp.funds.lt(cost)) return;\n      corp.funds = corp.funds.minus(cost);\n      division.upgrade(upgrade, {\n        corporation: corp,\n        office: props.office,\n      });\n      props.rerender();\n    }\n\n    upgrades.push(\n      <Tooltip key={index} title={upgrade[5]}>\n        <span>\n          <Button disabled={corp.funds.lt(cost)} onClick={onClick}>\n            {upgrade[4]} -&nbsp;\n            <MoneyCost money={cost} corp={corp} />\n          </Button>\n        </span>\n      </Tooltip>,\n    );\n  }\n\n  return <>{upgrades}</>;\n}\n\ninterface IProps {\n  currentCity: string;\n  office: OfficeSpace;\n  rerender: () => void;\n}\n\nexport function IndustryOverview(props: IProps): React.ReactElement {\n  const division = useDivision();\n\n  return (\n    <Paper>\n      <Text />\n      <br />\n      <Typography>Purchases & Upgrades</Typography>\n      <Upgrades office={props.office} rerender={props.rerender} /> <br />\n      {division.makesProducts && <MakeProductButton />}\n    </Paper>\n  );\n}\n","import React, { useState } from \"react\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { Industries } from \"../IndustryData\";\nimport { MakeProduct } from \"../Actions\";\nimport { useCorporation, useDivision } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nfunction productPlaceholder(tpe: string): string {\n  if (tpe === Industries.Food) {\n    return \"Restaurant Name\";\n  } else if (tpe === Industries.Healthcare) {\n    return \"Hospital Name\";\n  } else if (tpe === Industries.RealEstate) {\n    return \"Property Name\";\n  }\n  return \"Product Name\";\n}\n\n// Create a popup that lets the player create a product for their current industry\nexport function MakeProductModal(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const division = useDivision();\n  const allCities = Object.keys(division.offices).filter((cityName: string) => division.offices[cityName] !== 0);\n  const [city, setCity] = useState(allCities.length > 0 ? allCities[0] : \"\");\n  const [name, setName] = useState(\"\");\n  const [design, setDesign] = useState<number | null>(null);\n  const [marketing, setMarketing] = useState<number | null>(null);\n  if (division.hasMaximumNumberProducts()) return <></>;\n\n  let createProductPopupText = <></>;\n  switch (division.type) {\n    case Industries.Food:\n      createProductPopupText = (\n        <>\n          {createProductPopupText}\n          <br />\n          Build and manage a new restaurant!\n        </>\n      );\n      break;\n    case Industries.Tobacco:\n      createProductPopupText = (\n        <>\n          {createProductPopupText}\n          <br />\n          Create a new tobacco product!\n        </>\n      );\n      break;\n    case Industries.Pharmaceutical:\n      createProductPopupText = (\n        <>\n          {createProductPopupText}\n          <br />\n          Design and develop a new pharmaceutical drug!\n        </>\n      );\n      break;\n    case Industries.Computer:\n    case \"Computer\":\n      createProductPopupText = (\n        <>\n          {createProductPopupText}\n          <br />\n          Design and manufacture a new computer hardware product!\n        </>\n      );\n      break;\n    case Industries.Robotics:\n      createProductPopupText = (\n        <>\n          {createProductPopupText}\n          <br />\n          Design and create a new robot or robotic system!\n        </>\n      );\n      break;\n    case Industries.Software:\n      createProductPopupText = (\n        <>\n          {createProductPopupText}\n          <br />\n          Develop a new piece of software!\n        </>\n      );\n      break;\n    case Industries.Healthcare:\n      createProductPopupText = (\n        <>\n          {createProductPopupText}\n          <br />\n          Build and manage a new hospital!\n        </>\n      );\n      break;\n    case Industries.RealEstate:\n      createProductPopupText = (\n        <>\n          {createProductPopupText}\n          <br />\n          Develop a new piece of real estate property!\n        </>\n      );\n      break;\n    default:\n      createProductPopupText = (\n        <>\n          {createProductPopupText}\n          <br />\n          Create a new product!\n        </>\n      );\n      return <></>;\n  }\n  createProductPopupText = (\n    <>\n      {createProductPopupText}\n      <br />\n      <br />\n      To begin developing a product, first choose the city in which it will be designed. The stats of your employees in\n      the selected city affect the properties of the finished product, such as its quality, performance, and durability.\n      <br />\n      <br />\n      You can also choose to invest money in the design and marketing of the product. Investing money in its design will\n      result in a superior product. Investing money in marketing the product will help the product's sales.\n    </>\n  );\n\n  function makeProduct(): void {\n    if (design === null || marketing === null) return;\n    try {\n      MakeProduct(corp, division, city, name, design, marketing);\n    } catch (err) {\n      dialogBoxCreate(err + \"\");\n    }\n    props.onClose();\n  }\n\n  function onCityChange(event: SelectChangeEvent<string>): void {\n    setCity(event.target.value);\n  }\n\n  function onProductNameChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setName(event.target.value);\n  }\n\n  function onDesignChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    if (event.target.value === \"\") setDesign(null);\n    else setDesign(parseFloat(event.target.value));\n  }\n\n  function onMarketingChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    if (event.target.value === \"\") setMarketing(null);\n    else setMarketing(parseFloat(event.target.value));\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) makeProduct();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>{createProductPopupText}</Typography>\n      <Select style={{ margin: \"5px\" }} onChange={onCityChange} defaultValue={city}>\n        {allCities.map((cityName: string) => (\n          <MenuItem key={cityName} value={cityName}>\n            {cityName}\n          </MenuItem>\n        ))}\n      </Select>\n      <TextField onChange={onProductNameChange} placeholder={productPlaceholder(division.type)} />\n      <br />\n      <TextField onChange={onDesignChange} autoFocus={true} type=\"number\" placeholder={\"Design investment\"} />\n      <TextField\n        onChange={onMarketingChange}\n        onKeyDown={onKeyDown}\n        type=\"number\"\n        placeholder={\"Marketing investment\"}\n      />\n      <Button onClick={makeProduct}>Develop Product</Button>\n    </Modal>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { removePopup } from \"../../ui/React/createPopup\";\nimport { IndustryResearchTrees } from \"../IndustryData\";\nimport { CorporationConstants } from \"../data/Constants\";\nimport { Treant } from \"treant-js\";\nimport { IIndustry } from \"../IIndustry\";\nimport { Research } from \"../Actions\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface IProps {\n  industry: IIndustry;\n  popupId: string;\n}\n\n// Create the Research Tree UI for this Industry\nexport function ResearchPopup(props: IProps): React.ReactElement {\n  const researchTree = IndustryResearchTrees[props.industry.type];\n  if (researchTree === undefined) return <></>;\n  useEffect(() => {\n    {\n      const boxContent = document.getElementById(`${props.popupId}-content`);\n      if (boxContent != null) {\n        boxContent.style.minHeight = \"80vh\";\n      }\n    }\n\n    // Get the tree's markup (i.e. config) for Treant\n    const markup = researchTree.createTreantMarkup();\n    markup.chart.container = \"#\" + props.popupId + \"-content\";\n    markup.chart.nodeAlign = \"BOTTOM\";\n    markup.chart.rootOrientation = \"WEST\";\n    markup.chart.siblingSeparation = 40;\n    markup.chart.connectors = {\n      type: \"step\",\n      style: {\n        \"arrow-end\": \"block-wide-long\",\n        stroke: \"white\",\n        \"stroke-width\": 2,\n      },\n    };\n\n    Treant(markup);\n\n    // Add Event Listeners for all Nodes\n    const allResearch = researchTree.getAllNodes();\n    for (let i = 0; i < allResearch.length; ++i) {\n      // If this is already Researched, skip it\n      if (props.industry.researched[allResearch[i]] === true) {\n        continue;\n      }\n\n      // Get the DOM Element to add a click listener to it\n      const sanitizedName = allResearch[i].replace(/\\s/g, \"\");\n      const div = document.getElementById(sanitizedName + \"-corp-research-click-listener\");\n      if (div == null) {\n        console.warn(`Could not find Research Tree div for ${sanitizedName}`);\n        continue;\n      }\n\n      div.addEventListener(\"click\", () => {\n        try {\n          Research(props.industry, allResearch[i]);\n        } catch (err) {\n          dialogBoxCreate(err + \"\");\n          return;\n        }\n\n        dialogBoxCreate(\n          `Researched ${allResearch[i]}. It may take a market cycle ` +\n            `(~${CorporationConstants.SecsPerMarketCycle} seconds) before the effects of ` +\n            `the Research apply.`,\n        );\n        removePopup(props.popupId);\n      });\n    }\n  });\n\n  return (\n    <div id={props.popupId}>\n      <div>\n        Research points: {props.industry.sciResearch.qty}\n        <br />\n        Multipliers from research:\n        <br />* Advertising Multiplier: x{researchTree.getAdvertisingMultiplier()}\n        <br />* Employee Charisma Multiplier: x{researchTree.getEmployeeChaMultiplier()}\n        <br />* Employee Creativity Multiplier: x{researchTree.getEmployeeCreMultiplier()}\n        <br />* Employee Efficiency Multiplier: x{researchTree.getEmployeeEffMultiplier()}\n        <br />* Employee Intelligence Multiplier: x{researchTree.getEmployeeIntMultiplier()}\n        <br />* Production Multiplier: x{researchTree.getProductionMultiplier()}\n        <br />* Sales Multiplier: x{researchTree.getSalesMultiplier()}\n        <br />* Scientific Research Multiplier: x{researchTree.getScientificResearchMultiplier()}\n        <br />* Storage Multiplier: x{researchTree.getStorageMultiplier()}\n      </div>\n    </div>\n  );\n}\n","// React Component for displaying an Industry's warehouse information\n// (right-side panel in the Industry UI)\nimport React, { useState } from \"react\";\n\nimport { CorporationConstants } from \"../data/Constants\";\nimport { Material } from \"../Material\";\nimport { Product } from \"../Product\";\nimport { Warehouse } from \"../Warehouse\";\nimport { SmartSupplyModal } from \"./SmartSupplyModal\";\nimport { ProductElem } from \"./ProductElem\";\nimport { MaterialElem } from \"./MaterialElem\";\nimport { MaterialSizes } from \"../MaterialSizes\";\n\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\n\nimport { ICorporation } from \"../ICorporation\";\nimport { IIndustry } from \"../IIndustry\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { MoneyCost } from \"./MoneyCost\";\nimport { isRelevantMaterial } from \"./Helpers\";\nimport { IndustryProductEquation } from \"./IndustryProductEquation\";\nimport { PurchaseWarehouse } from \"../Actions\";\nimport { useCorporation, useDivision } from \"./Context\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Paper from \"@mui/material/Paper\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\n\ninterface IProps {\n  corp: ICorporation;\n  division: IIndustry;\n  warehouse: Warehouse | 0;\n  currentCity: string;\n  player: IPlayer;\n  rerender: () => void;\n}\n\nfunction WarehouseRoot(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const division = useDivision();\n  const [smartSupplyOpen, setSmartSupplyOpen] = useState(false);\n  if (props.warehouse === 0) return <></>;\n\n  // Upgrade Warehouse size button\n  const sizeUpgradeCost = CorporationConstants.WarehouseUpgradeBaseCost * Math.pow(1.07, props.warehouse.level + 1);\n  const canAffordUpgrade = corp.funds.gt(sizeUpgradeCost);\n  function upgradeWarehouseOnClick(): void {\n    if (division === null) return;\n    if (props.warehouse === 0) return;\n    if (!canAffordUpgrade) return;\n    ++props.warehouse.level;\n    props.warehouse.updateSize(corp, division);\n    corp.funds = corp.funds.minus(sizeUpgradeCost);\n    props.rerender();\n  }\n\n  // Current State:\n  let stateText;\n  switch (division.state) {\n    case \"START\":\n      stateText = \"Current state: Preparing...\";\n      break;\n    case \"PURCHASE\":\n      stateText = \"Current state: Purchasing materials...\";\n      break;\n    case \"PRODUCTION\":\n      stateText = \"Current state: Producing materials and/or products...\";\n      break;\n    case \"SALE\":\n      stateText = \"Current state: Selling materials and/or products...\";\n      break;\n    case \"EXPORT\":\n      stateText = \"Current state: Exporting materials and/or products...\";\n      break;\n    default:\n      console.error(`Invalid state: ${division.state}`);\n      break;\n  }\n\n  // Create React components for materials\n  const mats = [];\n  for (const matName in props.warehouse.materials) {\n    if (!(props.warehouse.materials[matName] instanceof Material)) continue;\n    // Only create UI for materials that are relevant for the industry\n    if (!isRelevantMaterial(matName, division)) continue;\n    mats.push(\n      <MaterialElem\n        rerender={props.rerender}\n        city={props.currentCity}\n        key={matName}\n        mat={props.warehouse.materials[matName]}\n        warehouse={props.warehouse}\n      />,\n    );\n  }\n\n  // Create React components for products\n  const products = [];\n  if (division.makesProducts && Object.keys(division.products).length > 0) {\n    for (const productName in division.products) {\n      const product = division.products[productName];\n      if (!(product instanceof Product)) continue;\n      products.push(\n        <ProductElem rerender={props.rerender} city={props.currentCity} key={productName} product={product} />,\n      );\n    }\n  }\n\n  let breakdown = <></>;\n  for (const matName in props.warehouse.materials) {\n    if (matName === \"RealEstate\") continue;\n    const mat = props.warehouse.materials[matName];\n    if (!MaterialSizes.hasOwnProperty(matName)) continue;\n    if (mat.qty === 0) continue;\n    breakdown = (\n      <>\n        {breakdown}\n        {matName}: {numeralWrapper.format(mat.qty * MaterialSizes[matName], \"0,0.0\")}\n        <br />\n      </>\n    );\n  }\n\n  return (\n    <Paper>\n      <Box display=\"flex\" alignItems=\"center\">\n        <Tooltip title={props.warehouse.sizeUsed !== 0 ? breakdown : \"\"}>\n          <Typography color={props.warehouse.sizeUsed >= props.warehouse.size ? \"error\" : \"primary\"}>\n            Storage: {numeralWrapper.formatBigNumber(props.warehouse.sizeUsed)} /{\" \"}\n            {numeralWrapper.formatBigNumber(props.warehouse.size)}\n          </Typography>\n        </Tooltip>\n\n        <Button disabled={!canAffordUpgrade} onClick={upgradeWarehouseOnClick}>\n          Upgrade Warehouse Size -&nbsp;\n          <MoneyCost money={sizeUpgradeCost} corp={corp} />\n        </Button>\n      </Box>\n\n      <Typography>This industry uses the following equation for it's production: </Typography>\n      <br />\n      <Typography>\n        <IndustryProductEquation division={division} />\n      </Typography>\n      <br />\n      <Typography>\n        To get started with production, purchase your required materials or import them from another of your company's\n        divisions.\n      </Typography>\n      <br />\n\n      <Typography>{stateText}</Typography>\n\n      {corp.unlockUpgrades[1] && (\n        <>\n          <Button onClick={() => setSmartSupplyOpen(true)}>Configure Smart Supply</Button>\n          <SmartSupplyModal\n            open={smartSupplyOpen}\n            onClose={() => setSmartSupplyOpen(false)}\n            warehouse={props.warehouse}\n          />\n        </>\n      )}\n\n      {mats}\n\n      {products}\n    </Paper>\n  );\n}\n\nexport function IndustryWarehouse(props: IProps): React.ReactElement {\n  if (props.warehouse instanceof Warehouse) {\n    return <WarehouseRoot {...props} />;\n  } else {\n    return <EmptyWarehouse rerender={props.rerender} city={props.currentCity} />;\n  }\n}\n\ninterface IEmptyProps {\n  city: string;\n  rerender: () => void;\n}\n\nfunction EmptyWarehouse(props: IEmptyProps): React.ReactElement {\n  const corp = useCorporation();\n  const division = useDivision();\n  const disabled = corp.funds.lt(CorporationConstants.WarehouseInitialCost);\n  function purchaseWarehouse(): void {\n    if (disabled) return;\n    PurchaseWarehouse(corp, division, props.city);\n    props.rerender();\n  }\n  return (\n    <Paper>\n      <Button onClick={purchaseWarehouse} disabled={disabled}>\n        Purchase Warehouse (\n        <MoneyCost money={CorporationConstants.WarehouseInitialCost} corp={corp} />)\n      </Button>\n    </Paper>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { Warehouse } from \"../Warehouse\";\nimport { SetSmartSupply, SetSmartSupplyUseLeftovers } from \"../Actions\";\nimport { Material } from \"../Material\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { useDivision } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\n\ninterface ILeftoverProps {\n  matName: string;\n  warehouse: Warehouse;\n}\n\nfunction Leftover(props: ILeftoverProps): React.ReactElement {\n  const [checked, setChecked] = useState(!!props.warehouse.smartSupplyUseLeftovers[props.matName]);\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    try {\n      const material = props.warehouse.materials[props.matName];\n      SetSmartSupplyUseLeftovers(props.warehouse, material, event.target.checked);\n    } catch (err) {\n      dialogBoxCreate(err + \"\");\n    }\n    setChecked(event.target.checked);\n  }\n\n  return (\n    <>\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={onChange} />}\n        label={<Typography>{props.warehouse.materials[props.matName].name}</Typography>}\n      />\n      <br />\n    </>\n  );\n}\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  warehouse: Warehouse;\n}\n\nexport function SmartSupplyModal(props: IProps): React.ReactElement {\n  const division = useDivision();\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  // Smart Supply Checkbox\n  function smartSupplyOnChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    SetSmartSupply(props.warehouse, e.target.checked);\n    rerender();\n  }\n\n  // Create React components for materials\n  const mats = [];\n  for (const matName in props.warehouse.materials) {\n    if (!(props.warehouse.materials[matName] instanceof Material)) continue;\n    if (!Object.keys(division.reqMats).includes(matName)) continue;\n    mats.push(<Leftover key={matName} warehouse={props.warehouse} matName={matName} />);\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <>\n        <FormControlLabel\n          control={<Switch checked={props.warehouse.smartSupplyEnabled} onChange={smartSupplyOnChange} />}\n          label={<Typography>Enable Smart Supply</Typography>}\n        />\n        <br />\n        <Typography>Use materials already in the warehouse instead of buying new ones, if available:</Typography>\n        {mats}\n      </>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { CorporationConstants } from \"../data/Constants\";\nimport { Product } from \"../Product\";\nimport { DiscontinueProductModal } from \"./DiscontinueProductModal\";\nimport { LimitProductProductionModal } from \"./LimitProductProductionModal\";\nimport { SellProductModal } from \"./SellProductModal\";\nimport { ProductMarketTaModal } from \"./ProductMarketTaModal\";\n\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\n\nimport { isString } from \"../../utils/helpers/isString\";\nimport { Money } from \"../../ui/React/Money\";\nimport { useCorporation, useDivision } from \"./Context\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Paper from \"@mui/material/Paper\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\n\ninterface IProductProps {\n  city: string;\n  product: Product;\n  rerender: () => void;\n}\n\n// Creates the UI for a single Product type\nexport function ProductElem(props: IProductProps): React.ReactElement {\n  const corp = useCorporation();\n  const division = useDivision();\n  const [sellOpen, setSellOpen] = useState(false);\n  const [limitOpen, setLimitOpen] = useState(false);\n  const [discontinueOpen, setDiscontinueOpen] = useState(false);\n  const [marketTaOpen, setMarketTaOpen] = useState(false);\n  const city = props.city;\n  const product = props.product;\n\n  // Numeraljs formatters\n  const nf = \"0.000\";\n  const nfB = \"0.000a\"; // For numbers that might be big\n\n  const hasUpgradeDashboard = division.hasResearch(\"uPgrade: Dashboard\");\n\n  // Total product gain = production - sale\n  const totalGain = product.data[city][1] - product.data[city][2];\n\n  // Sell button\n  let sellButtonText: JSX.Element;\n  if (product.sllman[city][0]) {\n    if (isString(product.sllman[city][1])) {\n      sellButtonText = (\n        <>\n          Sell ({numeralWrapper.format(product.data[city][2], nfB)}/{product.sllman[city][1]})\n        </>\n      );\n    } else {\n      sellButtonText = (\n        <>\n          Sell ({numeralWrapper.format(product.data[city][2], nfB)}/\n          {numeralWrapper.format(product.sllman[city][1], nfB)})\n        </>\n      );\n    }\n  } else {\n    sellButtonText = <>Sell (0.000/0.000)</>;\n  }\n\n  if (product.marketTa2) {\n    sellButtonText = (\n      <>\n        {sellButtonText} @ <Money money={product.marketTa2Price[city]} />\n      </>\n    );\n  } else if (product.marketTa1) {\n    const markupLimit = product.rat / product.mku;\n    sellButtonText = (\n      <>\n        {sellButtonText} @ <Money money={product.pCost + markupLimit} />\n      </>\n    );\n  } else if (product.sCost) {\n    if (isString(product.sCost)) {\n      const sCost = (product.sCost as string).replace(/MP/g, product.pCost + \"\");\n      sellButtonText = (\n        <>\n          {sellButtonText} @ <Money money={eval(sCost)} />\n        </>\n      );\n    } else {\n      sellButtonText = (\n        <>\n          {sellButtonText} @ <Money money={product.sCost} />\n        </>\n      );\n    }\n  }\n\n  // Limit Production button\n  let limitProductionButtonText = \"Limit Production\";\n  if (product.prdman[city][0]) {\n    limitProductionButtonText += \" (\" + numeralWrapper.format(product.prdman[city][1], nf) + \")\";\n  }\n\n  return (\n    <Paper>\n      {!product.fin ? (\n        <>\n          <Typography>\n            Designing {product.name} (req. Operations/Engineers in {product.createCity})...\n          </Typography>\n          <br />\n          <Typography>{numeralWrapper.format(product.prog, \"0.00\")}% complete</Typography>\n        </>\n      ) : (\n        <>\n          <Box display=\"flex\">\n            <Tooltip\n              title={\n                <Typography>\n                  Prod: {numeralWrapper.format(product.data[city][1], nfB)}/s\n                  <br />\n                  Sell: {numeralWrapper.format(product.data[city][2], nfB)} /s\n                </Typography>\n              }\n            >\n              <Typography>\n                {product.name}: {numeralWrapper.format(product.data[city][0], nfB)} (\n                {numeralWrapper.format(totalGain, nfB)}\n                /s)\n              </Typography>\n            </Tooltip>\n          </Box>\n          <Box display=\"flex\">\n            <Tooltip\n              title={\n                <Typography>\n                  Quality: {numeralWrapper.format(product.qlt, nf)} <br />\n                  Performance: {numeralWrapper.format(product.per, nf)} <br />\n                  Durability: {numeralWrapper.format(product.dur, nf)} <br />\n                  Reliability: {numeralWrapper.format(product.rel, nf)} <br />\n                  Aesthetics: {numeralWrapper.format(product.aes, nf)} <br />\n                  Features: {numeralWrapper.format(product.fea, nf)}\n                  {corp.unlockUpgrades[2] === 1 && <br />}\n                  {corp.unlockUpgrades[2] === 1 && \"Demand: \" + numeralWrapper.format(product.dmd, nf)}\n                  {corp.unlockUpgrades[3] === 1 && <br />}\n                  {corp.unlockUpgrades[3] === 1 && \"Competition: \" + numeralWrapper.format(product.cmp, nf)}\n                </Typography>\n              }\n            >\n              <Typography>Rating: {numeralWrapper.format(product.rat, nf)}</Typography>\n            </Tooltip>\n          </Box>\n          <Box display=\"flex\">\n            <Tooltip title={<Typography>An estimate of the material cost it takes to create this Product.</Typography>}>\n              <Typography>\n                Est. Production Cost:{\" \"}\n                {numeralWrapper.formatMoney(product.pCost / CorporationConstants.ProductProductionCostRatio)}\n              </Typography>\n            </Tooltip>\n          </Box>\n          <Box display=\"flex\">\n            <Tooltip\n              title={\n                <Typography>\n                  An estimate of how much consumers are willing to pay for this product. Setting the sale price above\n                  this may result in less sales. Setting the sale price below this may result in more sales.\n                </Typography>\n              }\n            >\n              <Typography>Est. Market Price: {numeralWrapper.formatMoney(product.pCost)}</Typography>\n            </Tooltip>\n          </Box>\n        </>\n      )}\n\n      {(hasUpgradeDashboard || product.fin) && (\n        <>\n          <Button onClick={() => setSellOpen(true)}>{sellButtonText}</Button>\n          <SellProductModal product={product} city={city} open={sellOpen} onClose={() => setSellOpen(false)} />\n          <br />\n          <Button onClick={() => setLimitOpen(true)}>{limitProductionButtonText}</Button>\n          <LimitProductProductionModal\n            product={product}\n            city={city}\n            open={limitOpen}\n            onClose={() => setLimitOpen(false)}\n          />\n          <Button onClick={() => setDiscontinueOpen(true)}>Discontinue</Button>\n\n          <DiscontinueProductModal\n            product={product}\n            rerender={props.rerender}\n            open={discontinueOpen}\n            onClose={() => setDiscontinueOpen(false)}\n          />\n          {division.hasResearch(\"Market-TA.I\") && (\n            <>\n              <Button onClick={() => setMarketTaOpen(true)}>Market-TA</Button>\n              <ProductMarketTaModal product={product} open={marketTaOpen} onClose={() => setMarketTaOpen(false)} />\n            </>\n          )}\n        </>\n      )}\n    </Paper>\n  );\n}\n","import React from \"react\";\n\nimport { Product } from \"../Product\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { useDivision } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  product: Product;\n  rerender: () => void;\n}\n\n// Create a popup that lets the player discontinue a product\nexport function DiscontinueProductModal(props: IProps): React.ReactElement {\n  const division = useDivision();\n  function discontinue(): void {\n    division.discontinueProduct(props.product);\n    props.onClose();\n    props.rerender();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        Are you sure you want to do this? Discontinuing a product removes it completely and permanently. You will no\n        longer produce this product and all of its existing stock will be removed and left unsold\n      </Typography>\n      <Button onClick={discontinue}>Discontinue</Button>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Product } from \"../Product\";\nimport { LimitProductProduction } from \"../Actions\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  product: Product;\n  city: string;\n}\n\n// Create a popup that lets the player limit the production of a product\nexport function LimitProductProductionModal(props: IProps): React.ReactElement {\n  const [limit, setLimit] = useState<number | null>(null);\n\n  function limitProductProduction(): void {\n    let qty = limit;\n    if (qty === null) qty = -1;\n    LimitProductProduction(props.product, props.city, qty);\n    props.onClose();\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) limitProductProduction();\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    if (event.target.value === \"\") setLimit(null);\n    else setLimit(parseFloat(event.target.value));\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        Enter a limit to the amount of this product you would like to product per second. Leave the box empty to set no\n        limit.\n      </Typography>\n      <TextField autoFocus={true} placeholder=\"Limit\" type=\"number\" onChange={onChange} onKeyDown={onKeyDown} />\n      <Button onClick={limitProductProduction}>Limit production</Button>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { Product } from \"../Product\";\nimport { SellProduct } from \"../Actions\";\nimport { Modal } from \"../../ui/React/Modal\";\n\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\n\nfunction initialPrice(product: Product): string {\n  let val = product.sCost ? product.sCost + \"\" : \"\";\n  if (product.marketTa2) {\n    val += \" (Market-TA.II)\";\n  } else if (product.marketTa1) {\n    val += \" (Market-TA.I)\";\n  }\n  return val;\n}\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  product: Product;\n  city: string;\n}\n\n// Create a popup that let the player manage sales of a material\nexport function SellProductModal(props: IProps): React.ReactElement {\n  const [checked, setChecked] = useState(true);\n  const [iQty, setQty] = useState<string>(\n    props.product.sllman[props.city][1] ? props.product.sllman[props.city][1] : \"\",\n  );\n  const [px, setPx] = useState<string>(initialPrice(props.product));\n\n  function onCheckedChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setChecked(event.target.checked);\n  }\n\n  function sellProduct(): void {\n    try {\n      SellProduct(props.product, props.city, iQty, px, checked);\n    } catch (err) {\n      dialogBoxCreate(err + \"\");\n    }\n\n    props.onClose();\n  }\n\n  function onAmtChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setQty(event.target.value);\n  }\n\n  function onPriceChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setPx(event.target.value);\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) sellProduct();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        Enter the maximum amount of {props.product.name} you would like to sell per second, as well as the price at\n        which you would like to sell it at.\n        <br />\n        <br />\n        If the sell amount is set to 0, then the product will not be sold. If the sell price is set to 0, then the\n        product will be discarded.\n        <br />\n        <br />\n        Setting the sell amount to 'MAX' will result in you always selling the maximum possible amount of the material.\n        <br />\n        <br />\n        When setting the sell amount, you can use the 'PROD' variable to designate a dynamically changing amount that\n        depends on your production. For example, if you set the sell amount to 'PROD-1' then you will always sell 1 less\n        of the material than you produce.\n        <br />\n        <br />\n        When setting the sell price, you can use the 'MP' variable to set a dynamically changing price that depends on\n        the Product's estimated market price. For example, if you set it to 'MP*5' then it will always be sold at five\n        times the estimated market price.\n      </Typography>\n      <br />\n      <TextField\n        value={iQty}\n        autoFocus={true}\n        type=\"text\"\n        placeholder=\"Sell amount\"\n        onChange={onAmtChange}\n        onKeyDown={onKeyDown}\n      />\n      <TextField value={px} type=\"text\" placeholder=\"Sell price\" onChange={onPriceChange} onKeyDown={onKeyDown} />\n      <Button onClick={sellProduct}>Confirm</Button>\n      <FormControlLabel\n        control={<Switch checked={checked} onChange={onCheckedChange} />}\n        label={<Typography>Use same 'Sell Amount' for all cities</Typography>}\n      />\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Product } from \"../Product\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { useDivision } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\ninterface ITa2Props {\n  product: Product;\n}\n\nfunction MarketTA2(props: ITa2Props): React.ReactElement {\n  const division = useDivision();\n  if (!division.hasResearch(\"Market-TA.II\")) return <></>;\n  const markupLimit = props.product.rat / props.product.mku;\n  const [value, setValue] = useState(props.product.pCost);\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setValue(parseFloat(event.target.value));\n  }\n\n  function onCheckedChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    props.product.marketTa2 = event.target.checked;\n    rerender();\n  }\n\n  const sCost = value;\n  let markup = 1;\n  if (sCost > props.product.pCost) {\n    if (sCost - props.product.pCost > markupLimit) {\n      markup = markupLimit / (sCost - props.product.pCost);\n    }\n  }\n\n  return (\n    <>\n      <Typography variant=\"h4\">Market-TA.II</Typography>\n      <br />\n      <Typography>\n        If you sell at {numeralWrapper.formatMoney(sCost)}, then you will sell{\" \"}\n        {numeralWrapper.format(markup, \"0.00000\")}x as much compared to if you sold at market price.\n      </Typography>\n      <TextField type=\"number\" onChange={onChange} value={value} />\n      <br />\n      <FormControlLabel\n        control={<Switch checked={props.product.marketTa2} onChange={onCheckedChange} />}\n        label={\n          <Tooltip\n            title={\n              <Typography>\n                If this is enabled, then this Material will automatically be sold at the optimal price such that the\n                amount sold matches the amount produced. (i.e. the highest possible price, while still ensuring that all\n                produced materials will be sold)\n              </Typography>\n            }\n          >\n            <Typography>Use Market-TA.II for Auto-Sale Price</Typography>\n          </Tooltip>\n        }\n      />\n\n      <Typography>\n        Note that Market-TA.II overrides Market-TA.I. This means that if both are enabled, then Market-TA.II will take\n        effect, not Market-TA.I\n      </Typography>\n    </>\n  );\n}\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  product: Product;\n}\n\n// Create a popup that lets the player use the Market TA research for Products\nexport function ProductMarketTaModal(props: IProps): React.ReactElement {\n  const division = useDivision();\n  const markupLimit = props.product.rat / props.product.mku;\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    props.product.marketTa1 = event.target.checked;\n    rerender();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography variant=\"h4\">Market-TA.I</Typography>\n      <Typography>\n        The maximum sale price you can mark this up to is{\" \"}\n        {numeralWrapper.formatMoney(props.product.pCost + markupLimit)}. This means that if you set the sale price\n        higher than this, you will begin to experience a loss in number of sales\n      </Typography>\n\n      <FormControlLabel\n        control={<Switch checked={props.product.marketTa1} onChange={onChange} />}\n        label={\n          <Tooltip\n            title={\n              <Typography>\n                If this is enabled, then this Material will automatically be sold at the price identified by Market-TA.I\n                (i.e. the price shown above)\n              </Typography>\n            }\n          >\n            <Typography>Use Market-TA.I for Auto-Sale Price</Typography>\n          </Tooltip>\n        }\n      />\n\n      <MarketTA2 product={props.product} />\n    </Modal>\n  );\n}\n","// React Component for displaying an Industry's warehouse information\n// (right-side panel in the Industry UI)\nimport React, { useState } from \"react\";\n\nimport { OfficeSpace } from \"../OfficeSpace\";\nimport { Material } from \"../Material\";\nimport { Warehouse } from \"../Warehouse\";\nimport { ExportModal } from \"./ExportModal\";\nimport { MaterialMarketTaModal } from \"./MaterialMarketTaModal\";\nimport { SellMaterialModal } from \"./SellMaterialModal\";\nimport { PurchaseMaterialModal } from \"./PurchaseMaterialModal\";\n\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\n\nimport { isString } from \"../../utils/helpers/isString\";\nimport { Money } from \"../../ui/React/Money\";\nimport { useCorporation, useDivision } from \"./Context\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Paper from \"@mui/material/Paper\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\n\ninterface IMaterialProps {\n  warehouse: Warehouse;\n  city: string;\n  mat: Material;\n  rerender: () => void;\n}\n\n// Creates the UI for a single Material type\nexport function MaterialElem(props: IMaterialProps): React.ReactElement {\n  const corp = useCorporation();\n  const division = useDivision();\n  const [purchaseMaterialOpen, setPurchaseMaterialOpen] = useState(false);\n  const [exportOpen, setExportOpen] = useState(false);\n  const [sellMaterialOpen, setSellMaterialOpen] = useState(false);\n  const [materialMarketTaOpen, setMaterialMarketTaOpen] = useState(false);\n  const warehouse = props.warehouse;\n  const city = props.city;\n  const mat = props.mat;\n  const markupLimit = mat.getMarkupLimit();\n  const office = division.offices[city];\n  if (!(office instanceof OfficeSpace)) {\n    throw new Error(`Could not get OfficeSpace object for this city (${city})`);\n  }\n\n  // Numeraljs formatter\n  const nf = \"0.000\";\n  const nfB = \"0.000a\"; // For numbers that might be biger\n\n  // Total gain or loss of this material (per second)\n  const totalGain = mat.buy + mat.prd + mat.imp - mat.sll - mat.totalExp;\n\n  // Flag that determines whether this industry is \"new\" and the current material should be\n  // marked with flashing-red lights\n  const tutorial =\n    division.newInd && Object.keys(division.reqMats).includes(mat.name) && mat.buy === 0 && mat.imp === 0;\n\n  // Purchase material button\n  const purchaseButtonText = `Buy (${numeralWrapper.format(mat.buy, nfB)})`;\n\n  // Sell material button\n  let sellButtonText: JSX.Element;\n  if (mat.sllman[0]) {\n    if (isString(mat.sllman[1])) {\n      sellButtonText = (\n        <>\n          Sell ({numeralWrapper.format(mat.sll, nfB)}/{mat.sllman[1]})\n        </>\n      );\n    } else {\n      sellButtonText = (\n        <>\n          Sell ({numeralWrapper.format(mat.sll, nfB)}/{numeralWrapper.format(mat.sllman[1] as number, nfB)})\n        </>\n      );\n    }\n\n    if (mat.marketTa2) {\n      sellButtonText = (\n        <>\n          {sellButtonText} @ <Money money={mat.marketTa2Price} />\n        </>\n      );\n    } else if (mat.marketTa1) {\n      sellButtonText = (\n        <>\n          {sellButtonText} @ <Money money={mat.bCost + markupLimit} />\n        </>\n      );\n    } else if (mat.sCost) {\n      if (isString(mat.sCost)) {\n        const sCost = (mat.sCost as string).replace(/MP/g, mat.bCost + \"\");\n        sellButtonText = (\n          <>\n            {sellButtonText} @ <Money money={eval(sCost)} />\n          </>\n        );\n      } else {\n        sellButtonText = (\n          <>\n            {sellButtonText} @ <Money money={mat.sCost} />\n          </>\n        );\n      }\n    }\n  } else {\n    sellButtonText = <>Sell (0.000/0.000)</>;\n  }\n\n  return (\n    <Paper>\n      <Box display=\"flex\">\n        <Box>\n          <Tooltip\n            title={\n              <Typography>\n                Buy: {numeralWrapper.format(mat.buy, nfB)} <br />\n                Prod: {numeralWrapper.format(mat.prd, nfB)} <br />\n                Sell: {numeralWrapper.format(mat.sll, nfB)} <br />\n                Export: {numeralWrapper.format(mat.totalExp, nfB)} <br />\n                Import: {numeralWrapper.format(mat.imp, nfB)}\n                {corp.unlockUpgrades[2] === 1 && <br />}\n                {corp.unlockUpgrades[2] === 1 && \"Demand: \" + numeralWrapper.format(mat.dmd, nf)}\n                {corp.unlockUpgrades[3] === 1 && <br />}\n                {corp.unlockUpgrades[3] === 1 && \"Competition: \" + numeralWrapper.format(mat.cmp, nf)}\n              </Typography>\n            }\n          >\n            <Typography>\n              {mat.name}: {numeralWrapper.format(mat.qty, nfB)} ({numeralWrapper.format(totalGain, nfB)}/s)\n            </Typography>\n          </Tooltip>\n          <Tooltip\n            title={\n              <Typography>\n                Market Price: The price you would pay if you were to buy this material on the market\n              </Typography>\n            }\n          >\n            <Typography>MP: {numeralWrapper.formatMoney(mat.bCost)}</Typography>\n          </Tooltip>\n          <Tooltip\n            title={<Typography>The quality of your material. Higher quality will lead to more sales</Typography>}\n          >\n            <Typography>Quality: {numeralWrapper.format(mat.qlt, \"0.00a\")}</Typography>\n          </Tooltip>\n        </Box>\n\n        <Box>\n          <Tooltip\n            title={tutorial ? <Typography>Purchase your required materials to get production started!</Typography> : \"\"}\n          >\n            <span>\n              <Button\n                color={tutorial ? \"error\" : \"primary\"}\n                onClick={() => setPurchaseMaterialOpen(true)}\n                disabled={props.warehouse.smartSupplyEnabled && Object.keys(division.reqMats).includes(props.mat.name)}\n              >\n                {purchaseButtonText}\n              </Button>\n            </span>\n          </Tooltip>\n          <PurchaseMaterialModal\n            mat={mat}\n            warehouse={warehouse}\n            open={purchaseMaterialOpen}\n            onClose={() => setPurchaseMaterialOpen(false)}\n          />\n\n          {corp.unlockUpgrades[0] === 1 && (\n            <>\n              <Button onClick={() => setExportOpen(true)}>Export</Button>\n\n              <ExportModal mat={mat} open={exportOpen} onClose={() => setExportOpen(false)} />\n            </>\n          )}\n          <br />\n\n          <Button\n            color={division.prodMats.includes(props.mat.name) && !mat.sllman[0] ? \"error\" : \"primary\"}\n            onClick={() => setSellMaterialOpen(true)}\n          >\n            {sellButtonText}\n          </Button>\n          <SellMaterialModal mat={mat} open={sellMaterialOpen} onClose={() => setSellMaterialOpen(false)} />\n          {division.hasResearch(\"Market-TA.I\") && (\n            <>\n              <Button onClick={() => setMaterialMarketTaOpen(true)}>Market-TA</Button>\n\n              <MaterialMarketTaModal\n                mat={mat}\n                open={materialMarketTaOpen}\n                onClose={() => setMaterialMarketTaOpen(false)}\n              />\n            </>\n          )}\n        </Box>\n      </Box>\n    </Paper>\n  );\n}\n","import React, { useState } from \"react\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { Material } from \"../Material\";\nimport { Export } from \"../Export\";\nimport { IIndustry } from \"../IIndustry\";\nimport { ExportMaterial } from \"../Actions\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { useCorporation } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  mat: Material;\n}\n\n// Create a popup that lets the player manage exports\nexport function ExportModal(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  if (corp.divisions.length === 0) throw new Error(\"Export popup created with no divisions.\");\n  if (Object.keys(corp.divisions[0].warehouses).length === 0)\n    throw new Error(\"Export popup created in a division with no warehouses.\");\n  const [industry, setIndustry] = useState<string>(corp.divisions[0].name);\n  const [city, setCity] = useState<string>(Object.keys(corp.divisions[0].warehouses)[0]);\n  const [amt, setAmt] = useState(\"\");\n  const setRerender = useState(false)[1];\n\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  function onCityChange(event: SelectChangeEvent<string>): void {\n    setCity(event.target.value);\n  }\n\n  function onIndustryChange(event: SelectChangeEvent<string>): void {\n    setIndustry(event.target.value);\n  }\n\n  function onAmtChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setAmt(event.target.value);\n  }\n\n  function exportMaterial(): void {\n    try {\n      ExportMaterial(industry, city, props.mat, amt);\n    } catch (err) {\n      dialogBoxCreate(err + \"\");\n    }\n    props.onClose();\n  }\n\n  function removeExport(exp: Export): void {\n    for (let i = 0; i < props.mat.exp.length; ++i) {\n      if (props.mat.exp[i].ind !== exp.ind || props.mat.exp[i].city !== exp.city || props.mat.exp[i].amt !== exp.amt)\n        continue;\n      props.mat.exp.splice(i, 1);\n      break;\n    }\n    rerender();\n  }\n\n  const currentDivision = corp.divisions.find((division: IIndustry) => division.name === industry);\n  if (currentDivision === undefined)\n    throw new Error(`Export popup somehow ended up with undefined division '${currentDivision}'`);\n  const possibleCities = Object.keys(currentDivision.warehouses).filter(\n    (city) => currentDivision.warehouses[city] !== 0,\n  );\n  if (possibleCities.length > 0 && !possibleCities.includes(city)) {\n    setCity(possibleCities[0]);\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        Select the industry and city to export this material to, as well as how much of this material to export per\n        second. You can set the export amount to 'MAX' to export all of the materials in this warehouse.\n      </Typography>\n      <Select onChange={onIndustryChange} value={industry}>\n        {corp.divisions.map((division: IIndustry) => (\n          <MenuItem key={division.name} value={division.name}>\n            {division.name}\n          </MenuItem>\n        ))}\n      </Select>\n      <Select onChange={onCityChange} value={city}>\n        {possibleCities.map((cityName: string) => {\n          if (currentDivision.warehouses[cityName] === 0) return;\n          return (\n            <MenuItem key={cityName} value={cityName}>\n              {cityName}\n            </MenuItem>\n          );\n        })}\n      </Select>\n      <TextField placeholder=\"Export amount / s\" onChange={onAmtChange} value={amt} />\n      <Button onClick={exportMaterial}>Export</Button>\n      <Typography>\n        Below is a list of all current exports of this material from this warehouse. Clicking on one of the exports\n        below will REMOVE that export.\n      </Typography>\n      {props.mat.exp.map((exp: Export, index: number) => (\n        <Box display=\"flex\" alignItems=\"center\" key={index}>\n          <Button sx={{ mx: 2 }} onClick={() => removeExport(exp)}>\n            delete\n          </Button>\n          <Typography>\n            Industry: {exp.ind}\n            <br />\n            City: {exp.city}\n            <br />\n            Amount/s: {exp.amt}\n          </Typography>\n        </Box>\n      ))}\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Material } from \"../Material\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { useDivision } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\ninterface IMarketTA2Props {\n  mat: Material;\n}\n\nfunction MarketTA2(props: IMarketTA2Props): React.ReactElement {\n  const division = useDivision();\n  if (!division.hasResearch(\"Market-TA.II\")) return <></>;\n\n  const [newCost, setNewCost] = useState<number>(props.mat.bCost);\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n  const markupLimit = props.mat.getMarkupLimit();\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    if (event.target.value === \"\") setNewCost(0);\n    else setNewCost(parseFloat(event.target.value));\n  }\n\n  const sCost = newCost;\n  let markup = 1;\n  if (sCost > props.mat.bCost) {\n    //Penalty if difference between sCost and bCost is greater than markup limit\n    if (sCost - props.mat.bCost > markupLimit) {\n      markup = Math.pow(markupLimit / (sCost - props.mat.bCost), 2);\n    }\n  } else if (sCost < props.mat.bCost) {\n    if (sCost <= 0) {\n      markup = 1e12; //Sell everything, essentially discard\n    } else {\n      //Lower prices than market increases sales\n      markup = props.mat.bCost / sCost;\n    }\n  }\n\n  function onMarketTA2(event: React.ChangeEvent<HTMLInputElement>): void {\n    props.mat.marketTa2 = event.target.checked;\n    rerender();\n  }\n\n  return (\n    <>\n      <Typography variant=\"h4\">Market-TA.II</Typography>\n      <br />\n      <Typography>\n        If you sell at {numeralWrapper.formatMoney(sCost)}, then you will sell{\" \"}\n        {numeralWrapper.format(markup, \"0.00000\")}x as much compared to if you sold at market price.\n      </Typography>\n      <TextField type=\"number\" onChange={onChange} value={newCost} />\n      <br />\n      <FormControlLabel\n        control={<Switch checked={props.mat.marketTa2} onChange={onMarketTA2} />}\n        label={\n          <Tooltip\n            title={\n              <Typography>\n                If this is enabled, then this Material will automatically be sold at the optimal price such that the\n                amount sold matches the amount produced. (i.e. the highest possible price, while still ensuring that all\n                produced materials will be sold)\n              </Typography>\n            }\n          >\n            <Typography>Use Market-TA.II for Auto-Sale Price</Typography>\n          </Tooltip>\n        }\n      />\n\n      <Typography>\n        Note that Market-TA.II overrides Market-TA.I. This means that if both are enabled, then Market-TA.II will take\n        effect, not Market-TA.I\n      </Typography>\n    </>\n  );\n}\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  mat: Material;\n}\n\n// Create a popup that lets the player use the Market TA research for Materials\nexport function MaterialMarketTaModal(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n  const markupLimit = props.mat.getMarkupLimit();\n\n  function onMarketTA1(event: React.ChangeEvent<HTMLInputElement>): void {\n    props.mat.marketTa1 = event.target.checked;\n    rerender();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography variant=\"h4\">Market-TA.I</Typography>\n      <Typography>\n        The maximum sale price you can mark this up to is {numeralWrapper.formatMoney(props.mat.bCost + markupLimit)}.\n        This means that if you set the sale price higher than this, you will begin to experience a loss in number of\n        sales\n      </Typography>\n\n      <FormControlLabel\n        control={<Switch checked={props.mat.marketTa1} onChange={onMarketTA1} />}\n        label={\n          <Tooltip\n            title={\n              <Typography>\n                If this is enabled, then this Material will automatically be sold at the price identified by Market-TA.I\n                (i.e. the price shown above)\n              </Typography>\n            }\n          >\n            <Typography>Use Market-TA.I for Auto-Sale Price</Typography>\n          </Tooltip>\n        }\n      />\n      <MarketTA2 mat={props.mat} />\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { Material } from \"../Material\";\nimport { SellMaterial } from \"../Actions\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\n\nfunction initialPrice(mat: Material): string {\n  let val = mat.sCost ? mat.sCost + \"\" : \"\";\n  if (mat.marketTa2) {\n    val += \" (Market-TA.II)\";\n  } else if (mat.marketTa1) {\n    val += \" (Market-TA.I)\";\n  }\n  return val;\n}\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  mat: Material;\n}\n\n// Create a popup that let the player manage sales of a material\nexport function SellMaterialModal(props: IProps): React.ReactElement {\n  const [amt, setAmt] = useState<string>(props.mat.sllman[1] ? props.mat.sllman[1] + \"\" : \"\");\n  const [price, setPrice] = useState<string>(initialPrice(props.mat));\n\n  function sellMaterial(): void {\n    try {\n      SellMaterial(props.mat, amt, price);\n    } catch (err) {\n      dialogBoxCreate(err + \"\");\n    }\n    props.onClose();\n  }\n\n  function onAmtChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setAmt(event.target.value);\n  }\n\n  function onPriceChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setPrice(event.target.value);\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) sellMaterial();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        Enter the maximum amount of {props.mat.name} you would like to sell per second, as well as the price at which\n        you would like to sell at.\n        <br />\n        <br />\n        If the sell amount is set to 0, then the material will not be sold. If the sell price if set to 0, then the\n        material will be discarded\n        <br />\n        <br />\n        Setting the sell amount to 'MAX' will result in you always selling the maximum possible amount of the material.\n        <br />\n        <br />\n        When setting the sell amount, you can use the 'PROD' variable to designate a dynamically changing amount that\n        depends on your production. For example, if you set the sell amount to 'PROD-5' then you will always sell 5 less\n        of the material than you produce.\n        <br />\n        <br />\n        When setting the sell price, you can use the 'MP' variable to designate a dynamically changing price that\n        depends on the market price. For example, if you set the sell price to 'MP+10' then it will always be sold at\n        $10 above the market price.\n      </Typography>\n      <br />\n      <TextField\n        value={amt}\n        autoFocus={true}\n        type=\"text\"\n        placeholder=\"Sell amount\"\n        onChange={onAmtChange}\n        onKeyDown={onKeyDown}\n      />\n      <TextField value={price} type=\"text\" placeholder=\"Sell price\" onChange={onPriceChange} onKeyDown={onKeyDown} />\n      <Button onClick={sellMaterial}>Confirm</Button>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { MaterialSizes } from \"../MaterialSizes\";\nimport { Warehouse } from \"../Warehouse\";\nimport { Material } from \"../Material\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { BuyMaterial } from \"../Actions\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { useCorporation, useDivision } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\n\ninterface IBulkPurchaseTextProps {\n  warehouse: Warehouse;\n  mat: Material;\n  amount: string;\n}\n\nfunction BulkPurchaseText(props: IBulkPurchaseTextProps): React.ReactElement {\n  const parsedAmt = parseFloat(props.amount);\n  const cost = parsedAmt * props.mat.bCost;\n\n  const matSize = MaterialSizes[props.mat.name];\n  const maxAmount = (props.warehouse.size - props.warehouse.sizeUsed) / matSize;\n\n  if (parsedAmt * matSize > maxAmount) {\n    return <>Not enough warehouse space to purchase this amount</>;\n  } else if (isNaN(cost)) {\n    return <>Invalid put for Bulk Purchase amount</>;\n  } else {\n    return (\n      <>\n        Purchasing {numeralWrapper.format(parsedAmt, \"0,0.00\")} of {props.mat.name} will cost{\" \"}\n        {numeralWrapper.formatMoney(cost)}\n      </>\n    );\n  }\n}\n\ninterface IBPProps {\n  onClose: () => void;\n  mat: Material;\n  warehouse: Warehouse;\n}\n\nfunction BulkPurchase(props: IBPProps): React.ReactElement {\n  const corp = useCorporation();\n  const [buyAmt, setBuyAmt] = useState(\"\");\n\n  function bulkPurchase(): void {\n    const amount = parseFloat(buyAmt);\n\n    const matSize = MaterialSizes[props.mat.name];\n    const maxAmount = (props.warehouse.size - props.warehouse.sizeUsed) / matSize;\n    if (amount * matSize > maxAmount) {\n      dialogBoxCreate(`You do not have enough warehouse size to fit this purchase`);\n      return;\n    }\n\n    if (isNaN(amount)) {\n      dialogBoxCreate(\"Invalid input amount\");\n    } else {\n      const cost = amount * props.mat.bCost;\n      if (corp.funds.gt(cost)) {\n        corp.funds = corp.funds.minus(cost);\n        props.mat.qty += amount;\n      } else {\n        dialogBoxCreate(`You cannot afford this purchase.`);\n        return;\n      }\n      props.onClose();\n    }\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) bulkPurchase();\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setBuyAmt(event.target.value);\n  }\n\n  return (\n    <>\n      <Typography>\n        Enter the amount of {props.mat.name} you would like to bulk purchase. This purchases the specified amount\n        instantly (all at once).\n      </Typography>\n      <BulkPurchaseText warehouse={props.warehouse} mat={props.mat} amount={buyAmt} />\n      <TextField\n        value={buyAmt}\n        onChange={onChange}\n        type=\"number\"\n        placeholder=\"Bulk Purchase amount\"\n        onKeyDown={onKeyDown}\n      />\n      <Button onClick={bulkPurchase}>Confirm Bulk Purchase</Button>\n    </>\n  );\n}\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  mat: Material;\n  warehouse: Warehouse;\n}\n\n// Create a popup that lets the player purchase a Material\nexport function PurchaseMaterialModal(props: IProps): React.ReactElement {\n  const division = useDivision();\n  const [buyAmt, setBuyAmt] = useState(props.mat.buy ? props.mat.buy : 0);\n\n  function purchaseMaterial(): void {\n    if (buyAmt === null) return;\n    try {\n      BuyMaterial(props.mat, buyAmt);\n    } catch (err) {\n      dialogBoxCreate(err + \"\");\n    }\n\n    props.onClose();\n  }\n\n  function clearPurchase(): void {\n    props.mat.buy = 0;\n    props.onClose();\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) purchaseMaterial();\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setBuyAmt(parseFloat(event.target.value));\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <>\n        <Typography>\n          Enter the amount of {props.mat.name} you would like to purchase per second. This material's cost changes\n          constantly.\n        </Typography>\n        <TextField\n          value={buyAmt}\n          onChange={onChange}\n          autoFocus={true}\n          placeholder=\"Purchase amount\"\n          type=\"number\"\n          onKeyDown={onKeyDown}\n        />\n        <Button onClick={purchaseMaterial}>Confirm</Button>\n        <Button onClick={clearPurchase}>Clear Purchase</Button>\n        {division.hasResearch(\"Bulk Purchasing\") && (\n          <BulkPurchase onClose={props.onClose} mat={props.mat} warehouse={props.warehouse} />\n        )}\n      </>\n    </Modal>\n  );\n}\n","import { IIndustry } from \"../IIndustry\";\n\n// Returns a boolean indicating whether the given material is relevant for the\n// current industry.\nexport function isRelevantMaterial(matName: string, division: IIndustry): boolean {\n  // Materials that affect Production multiplier\n  const prodMultiplierMats = [\"Hardware\", \"Robots\", \"AICores\", \"RealEstate\"];\n\n  if (Object.keys(division.reqMats).includes(matName)) {\n    return true;\n  }\n  if (division.prodMats.includes(matName)) {\n    return true;\n  }\n  if (prodMultiplierMats.includes(matName)) {\n    return true;\n  }\n\n  return false;\n}\n","import React from \"react\";\nimport { IIndustry } from \"../IIndustry\";\nimport { MathComponent } from \"mathjax-react\";\n\ninterface IProps {\n  division: IIndustry;\n}\n\nexport function IndustryProductEquation(props: IProps): React.ReactElement {\n  const reqs = [];\n  for (const reqMat of Object.keys(props.division.reqMats)) {\n    const reqAmt = props.division.reqMats[reqMat];\n    if (reqAmt === undefined) continue;\n    reqs.push(String.raw`${reqAmt}\\text{ }${reqMat}`);\n  }\n  const prod = props.division.prodMats.slice();\n  if (props.division.makesProducts) {\n    prod.push(props.division.type);\n  }\n\n  return (\n    <MathComponent\n      display={false}\n      tex={reqs.join(\"+\") + String.raw`\\Rightarrow` + prod.map((p) => String.raw`1\\text{ }${p}`).join(\"+\")}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport { CorporationConstants } from \"../data/Constants\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { NewCity } from \"../Actions\";\nimport { MoneyCost } from \"./MoneyCost\";\nimport { useCorporation, useDivision } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  cityStateSetter: (city: string) => void;\n}\n\nexport function ExpandNewCity(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const division = useDivision();\n  const possibleCities = Object.keys(division.offices).filter((cityName: string) => division.offices[cityName] === 0);\n  const [city, setCity] = useState(possibleCities[0]);\n\n  const disabled = corp.funds.lt(CorporationConstants.OfficeInitialCost);\n\n  function onCityChange(event: SelectChangeEvent<string>): void {\n    setCity(event.target.value);\n  }\n\n  function expand(): void {\n    try {\n      NewCity(corp, division, city);\n    } catch (err) {\n      dialogBoxCreate(err + \"\");\n      return;\n    }\n\n    dialogBoxCreate(`Opened a new office in ${city}!`);\n\n    props.cityStateSetter(city);\n  }\n  return (\n    <>\n      <Typography>\n        Would you like to expand into a new city by opening an office? This would cost{\" \"}\n        <MoneyCost money={CorporationConstants.OfficeInitialCost} corp={corp} />\n      </Typography>\n      <Select value={city} onChange={onCityChange}>\n        {possibleCities.map((cityName: string) => (\n          <MenuItem key={cityName} value={cityName}>\n            {cityName}\n          </MenuItem>\n        ))}\n      </Select>\n      <Button onClick={expand} disabled={disabled}>\n        Confirm\n      </Button>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { IndustryStartingCosts, Industries, IndustryDescriptions } from \"../IndustryData\";\nimport { useCorporation } from \"./Context\";\nimport { IIndustry } from \"../IIndustry\";\nimport { NewIndustry } from \"../Actions\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Box from \"@mui/material/Box\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\n\ninterface IProps {\n  setDivisionName: (name: string) => void;\n}\n\nexport function ExpandIndustryTab(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const allIndustries = Object.keys(Industries).sort();\n  const possibleIndustries = allIndustries\n    .filter(\n      (industryType: string) =>\n        corp.divisions.find((division: IIndustry) => division.type === industryType) === undefined,\n    )\n    .sort();\n  const [industry, setIndustry] = useState(possibleIndustries.length > 0 ? possibleIndustries[0] : \"\");\n  const [name, setName] = useState(\"\");\n\n  const cost = IndustryStartingCosts[industry];\n  if (cost === undefined) {\n    throw new Error(`Invalid industry: '${industry}'`);\n  }\n  const disabled = corp.funds.lt(cost) || name === \"\";\n\n  function newIndustry(): void {\n    if (disabled) return;\n    try {\n      NewIndustry(corp, industry, name);\n    } catch (err) {\n      dialogBoxCreate(err + \"\");\n      return;\n    }\n\n    // Set routing to the new division so that the UI automatically switches to it\n    props.setDivisionName(name);\n  }\n\n  function onNameChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    // [a-zA-Z0-9-_]\n    setName(event.target.value);\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) newIndustry();\n  }\n\n  function onIndustryChange(event: SelectChangeEvent<string>): void {\n    setIndustry(event.target.value);\n  }\n\n  const desc = IndustryDescriptions[industry];\n  if (desc === undefined) throw new Error(`Trying to create an industry that doesn't exists: '${industry}'`);\n\n  return (\n    <>\n      <Typography>Create a new division to expand into a new industry:</Typography>\n      <Select value={industry} onChange={onIndustryChange}>\n        {possibleIndustries.map((industry: string) => (\n          <MenuItem key={industry} value={industry}>\n            {industry}\n          </MenuItem>\n        ))}\n      </Select>\n      <Typography>{desc(corp)}</Typography>\n      <br />\n      <br />\n\n      <Typography>Division name:</Typography>\n\n      <Box display=\"flex\" alignItems=\"center\">\n        <TextField autoFocus={true} value={name} onChange={onNameChange} onKeyDown={onKeyDown} type=\"text\" />\n        <Button disabled={disabled} sx={{ mx: 1 }} onClick={newIndustry}>\n          Create Division\n        </Button>\n      </Box>\n    </>\n  );\n}\n","// React Component for displaying Corporation Overview info\nimport React, { useState } from \"react\";\nimport { LevelableUpgrade } from \"./LevelableUpgrade\";\nimport { UnlockUpgrade } from \"./UnlockUpgrade\";\nimport { BribeFactionModal } from \"./BribeFactionModal\";\nimport { SellSharesModal } from \"./SellSharesModal\";\nimport { BuybackSharesModal } from \"./BuybackSharesModal\";\nimport { IssueDividendsModal } from \"./IssueDividendsModal\";\nimport { IssueNewSharesModal } from \"./IssueNewSharesModal\";\nimport { FindInvestorsModal } from \"./FindInvestorsModal\";\nimport { GoPublicModal } from \"./GoPublicModal\";\nimport { Factions } from \"../../Faction/Factions\";\n\nimport { CorporationConstants } from \"../data/Constants\";\nimport { CorporationUnlockUpgrade, CorporationUnlockUpgrades } from \"../data/CorporationUnlockUpgrades\";\nimport { CorporationUpgrade, CorporationUpgrades } from \"../data/CorporationUpgrades\";\n\nimport { CONSTANTS } from \"../../Constants\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { convertTimeMsToTimeElapsedString } from \"../../utils/StringHelperFunctions\";\nimport { Money } from \"../../ui/React/Money\";\nimport { MoneyRate } from \"../../ui/React/MoneyRate\";\nimport { StatsTable } from \"../../ui/React/StatsTable\";\nimport { use } from \"../../ui/Context\";\nimport { useCorporation } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\n\ninterface IProps {\n  rerender: () => void;\n}\nexport function Overview({ rerender }: IProps): React.ReactElement {\n  const player = use.Player();\n  const corp = useCorporation();\n  const profit: number = corp.revenue.minus(corp.expenses).toNumber();\n\n  const multRows: any[][] = [];\n  function appendMult(name: string, value: number): void {\n    if (value === 1) return;\n    multRows.push([name, numeralWrapper.format(value, \"0.000\")]);\n  }\n  appendMult(\"Production Multiplier: \", corp.getProductionMultiplier());\n  appendMult(\"Storage Multiplier: \", corp.getStorageMultiplier());\n  appendMult(\"Advertising Multiplier: \", corp.getAdvertisingMultiplier());\n  appendMult(\"Empl. Creativity Multiplier: \", corp.getEmployeeCreMultiplier());\n  appendMult(\"Empl. Charisma Multiplier: \", corp.getEmployeeChaMultiplier());\n  appendMult(\"Empl. Intelligence Multiplier: \", corp.getEmployeeIntMultiplier());\n  appendMult(\"Empl. Efficiency Multiplier: \", corp.getEmployeeEffMultiplier());\n  appendMult(\"Sales Multiplier: \", corp.getSalesMultiplier());\n  appendMult(\"Scientific Research Multiplier: \", corp.getScientificResearchMultiplier());\n\n  return (\n    <>\n      <StatsTable\n        rows={[\n          [\"Total Funds:\", <Money money={corp.funds.toNumber()} />],\n          [\"Total Revenue:\", <MoneyRate money={corp.revenue.toNumber()} />],\n          [\"Total Expenses:\", <MoneyRate money={corp.expenses.toNumber()} />],\n          [\"Publicly Traded:\", corp.public ? \"Yes\" : \"No\"],\n          [\"Owned Stock Shares:\", numeralWrapper.format(corp.numShares, \"0.000a\")],\n          [\"Stock Price:\", corp.public ? <Money money={corp.sharePrice} /> : \"N/A\"],\n        ]}\n      />\n      <br />\n      <Box display=\"flex\">\n        <Tooltip\n          title={\n            <StatsTable\n              rows={[\n                [\"Outstanding Shares:\", numeralWrapper.format(corp.issuedShares, \"0.000a\")],\n                [\n                  \"Private Shares:\",\n                  numeralWrapper.format(corp.totalShares - corp.issuedShares - corp.numShares, \"0.000a\"),\n                ],\n              ]}\n            />\n          }\n        >\n          <Typography>Total Stock Shares: {numeralWrapper.format(corp.totalShares, \"0.000a\")}</Typography>\n        </Tooltip>\n      </Box>\n      <br />\n      <DividendsStats profit={profit} />\n      <br />\n      <StatsTable rows={multRows} />\n      <br />\n      <BonusTime />\n      <Tooltip\n        title={\n          <Typography>\n            Get a copy of and read 'The Complete Handbook for Creating a Successful Corporation.' This is a .lit file\n            that guides you through the beginning of setting up a Corporation and provides some tips/pointers for\n            helping you get started with managing it.\n          </Typography>\n        }\n      >\n        <Button onClick={() => corp.getStarterGuide(player)}>Getting Started Guide</Button>\n      </Tooltip>\n      {corp.public ? <PublicButtons rerender={rerender} /> : <PrivateButtons rerender={rerender} />}\n      <BribeButton />\n      <br />\n      <Upgrades rerender={rerender} />\n    </>\n  );\n}\n\ninterface IPrivateButtonsProps {\n  rerender: () => void;\n}\n// Render the buttons for when your Corporation is still private\nfunction PrivateButtons({ rerender }: IPrivateButtonsProps): React.ReactElement {\n  const corp = useCorporation();\n  const [findInvestorsopen, setFindInvestorsopen] = useState(false);\n  const [goPublicopen, setGoPublicopen] = useState(false);\n\n  const fundingAvailable = corp.fundingRound < 4;\n  const findInvestorsTooltip = fundingAvailable\n    ? \"Search for private investors who will give you startup funding in exchange for equity (stock shares) in your company\"\n    : \"\";\n\n  return (\n    <>\n      <Tooltip title={<Typography>{findInvestorsTooltip}</Typography>}>\n        <span>\n          <Button disabled={!fundingAvailable} onClick={() => setFindInvestorsopen(true)}>\n            Find Investors\n          </Button>\n        </span>\n      </Tooltip>\n      <Tooltip\n        title={\n          <Typography>\n            Become a publicly traded and owned entity. Going public involves issuing shares for an IPO. Once you are a\n            public company, your shares will be traded on the stock market.\n          </Typography>\n        }\n      >\n        <Button onClick={() => setGoPublicopen(true)}>Go Public</Button>\n      </Tooltip>\n      <FindInvestorsModal open={findInvestorsopen} onClose={() => setFindInvestorsopen(false)} rerender={rerender} />\n      <GoPublicModal open={goPublicopen} onClose={() => setGoPublicopen(false)} rerender={rerender} />\n      <br />\n    </>\n  );\n}\n\ninterface IUpgradeProps {\n  rerender: () => void;\n}\n// Render the UI for Corporation upgrades\nfunction Upgrades({ rerender }: IUpgradeProps): React.ReactElement {\n  const corp = useCorporation();\n  // Don't show upgrades\n  if (corp.divisions.length <= 0) {\n    return <Typography variant=\"h4\">Upgrades are unlocked once you create an industry.</Typography>;\n  }\n\n  return (\n    <>\n      <Paper sx={{ p: 1, my: 1 }}>\n        <Typography variant=\"h4\">Unlocks</Typography>\n        <Grid container>\n          {Object.values(CorporationUnlockUpgrades)\n            .filter((upgrade: CorporationUnlockUpgrade) => corp.unlockUpgrades[upgrade[0]] === 0)\n            .map((upgrade: CorporationUnlockUpgrade) => (\n              <UnlockUpgrade rerender={rerender} upgradeData={upgrade} key={upgrade[0]} />\n            ))}\n        </Grid>\n      </Paper>\n      <Paper sx={{ p: 1, my: 1 }}>\n        <Typography variant=\"h4\">Upgrades</Typography>\n        <Grid container>\n          {corp.upgrades\n            .map((level: number, i: number) => CorporationUpgrades[i])\n            .map((upgrade: CorporationUpgrade) => (\n              <LevelableUpgrade rerender={rerender} upgrade={upgrade} key={upgrade[0]} />\n            ))}\n        </Grid>\n      </Paper>\n    </>\n  );\n}\n\ninterface IPublicButtonsProps {\n  rerender: () => void;\n}\n\n// Render the buttons for when your Corporation has gone public\nfunction PublicButtons({ rerender }: IPublicButtonsProps): React.ReactElement {\n  const corp = useCorporation();\n  const [sellSharesOpen, setSellSharesOpen] = useState(false);\n  const [buybackSharesOpen, setBuybackSharesOpen] = useState(false);\n  const [issueNewSharesOpen, setIssueNewSharesOpen] = useState(false);\n  const [issueDividendsOpen, setIssueDividendsOpen] = useState(false);\n\n  const sellSharesOnCd = corp.shareSaleCooldown > 0;\n  const sellSharesTooltip = sellSharesOnCd\n    ? \"Cannot sell shares for \" + corp.convertCooldownToString(corp.shareSaleCooldown)\n    : \"Sell your shares in the company. The money earned from selling your \" +\n      \"shares goes into your personal account, not the Corporation's. \" +\n      \"This is one of the only ways to profit from your business venture.\";\n\n  const issueNewSharesOnCd = corp.issueNewSharesCooldown > 0;\n  const issueNewSharesTooltip = issueNewSharesOnCd\n    ? \"Cannot issue new shares for \" + corp.convertCooldownToString(corp.issueNewSharesCooldown)\n    : \"Issue new equity shares to raise capital.\";\n\n  return (\n    <>\n      <Tooltip title={<Typography>{sellSharesTooltip}</Typography>}>\n        <span>\n          <Button disabled={sellSharesOnCd} onClick={() => setSellSharesOpen(true)}>\n            Sell Shares\n          </Button>\n        </span>\n      </Tooltip>\n      <SellSharesModal open={sellSharesOpen} onClose={() => setSellSharesOpen(false)} rerender={rerender} />\n      <Tooltip title={<Typography>Buy back shares you that previously issued or sold at market price.</Typography>}>\n        <span>\n          <Button disabled={corp.issuedShares > 0.5} onClick={() => setBuybackSharesOpen(true)}>\n            Buyback shares\n          </Button>\n        </span>\n      </Tooltip>\n      <BuybackSharesModal open={buybackSharesOpen} onClose={() => setBuybackSharesOpen(false)} rerender={rerender} />\n      <br />\n      <Tooltip title={<Typography>{issueNewSharesTooltip}</Typography>}>\n        <span>\n          <Button disabled={issueNewSharesOnCd} onClick={() => setIssueNewSharesOpen(true)}>\n            Issue New Shares\n          </Button>\n        </span>\n      </Tooltip>\n      <IssueNewSharesModal open={issueNewSharesOpen} onClose={() => setIssueNewSharesOpen(false)} />\n      <Tooltip\n        title={<Typography>Manage the dividends that are paid out to shareholders (including yourself)</Typography>}\n      >\n        <Button onClick={() => setIssueDividendsOpen(true)}>Issue Dividends</Button>\n      </Tooltip>\n      <IssueDividendsModal open={issueDividendsOpen} onClose={() => setIssueDividendsOpen(false)} />\n      <br />\n    </>\n  );\n}\n\nfunction BribeButton(): React.ReactElement {\n  const player = use.Player();\n  const corp = useCorporation();\n  const [open, setOpen] = useState(false);\n  const canBribe =\n    corp.determineValuation() >= CorporationConstants.BribeThreshold &&\n    player.factions.filter((f) => Factions[f].getInfo().offersWork()).length > 0;\n\n  function openBribe(): void {\n    if (!canBribe) return;\n    setOpen(true);\n  }\n\n  return (\n    <>\n      <Tooltip\n        title={\n          canBribe\n            ? \"Use your Corporations power and influence to bribe Faction leaders in exchange for reputation\"\n            : \"Your Corporation is not powerful enough to bribe Faction leaders\"\n        }\n      >\n        <span>\n          <Button disabled={!canBribe} onClick={openBribe}>\n            Bribe Factions\n          </Button>\n        </span>\n      </Tooltip>\n      <BribeFactionModal open={open} onClose={() => setOpen(false)} />\n    </>\n  );\n}\n\ninterface IDividendsStatsProps {\n  profit: number;\n}\nfunction DividendsStats({ profit }: IDividendsStatsProps): React.ReactElement {\n  const corp = useCorporation();\n  if (corp.dividendPercentage <= 0 || profit <= 0) return <></>;\n  const totalDividends = (corp.dividendPercentage / 100) * profit;\n  const retainedEarnings = profit - totalDividends;\n  const dividendsPerShare = totalDividends / corp.totalShares;\n  const playerEarnings = corp.numShares * dividendsPerShare;\n  return (\n    <StatsTable\n      rows={[\n        [\"Retained Profits (after dividends):\", <MoneyRate money={retainedEarnings} />],\n        [\"Dividend Percentage:\", numeralWrapper.format(corp.dividendPercentage / 100, \"0%\")],\n        [\"Dividends per share:\", <MoneyRate money={dividendsPerShare} />],\n        [\"Your earnings as a shareholder (Pre-Tax):\", <MoneyRate money={playerEarnings} />],\n        [\"Dividend Tax Rate:\", <>{corp.dividendTaxPercentage}%</>],\n        [\n          \"Your earnings as a shareholder (Post-Tax):\",\n          <MoneyRate money={playerEarnings * (1 - corp.dividendTaxPercentage / 100)} />,\n        ],\n      ]}\n    />\n  );\n}\n\n// Returns a string with general information about Corporation\nfunction BonusTime(): React.ReactElement {\n  const corp = useCorporation();\n  const storedTime = corp.storedCycles * CONSTANTS.MilliPerCycle;\n  if (storedTime <= 15000) return <></>;\n  return (\n    <Typography>\n      Bonus time: {convertTimeMsToTimeElapsedString(storedTime)}\n      <br />\n      <br />\n    </Typography>\n  );\n}\n","// React components for the levelable upgrade buttons on the overview panel\nimport React from \"react\";\n\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { CorporationUpgrade } from \"../data/CorporationUpgrades\";\nimport { LevelUpgrade } from \"../Actions\";\nimport { MoneyCost } from \"./MoneyCost\";\nimport { useCorporation } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\n\ninterface IProps {\n  upgrade: CorporationUpgrade;\n  rerender: () => void;\n}\n\nexport function LevelableUpgrade(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const data = props.upgrade;\n  const level = corp.upgrades[data[0]];\n\n  const baseCost = data[1];\n  const priceMult = data[2];\n  const cost = baseCost * Math.pow(priceMult, level);\n\n  const tooltip = data[5];\n  function onClick(): void {\n    if (corp.funds.lt(cost)) return;\n    try {\n      LevelUpgrade(corp, props.upgrade);\n    } catch (err) {\n      dialogBoxCreate(err + \"\");\n    }\n    props.rerender();\n  }\n\n  return (\n    <Grid item xs={4}>\n      <Box display=\"flex\" alignItems=\"center\" flexDirection=\"row-reverse\">\n        <Button disabled={corp.funds.lt(cost)} sx={{ mx: 1 }} onClick={onClick}>\n          <MoneyCost money={cost} corp={corp} />\n        </Button>\n        <Tooltip title={tooltip}>\n          <Typography>{data[4]} </Typography>\n        </Tooltip>\n      </Box>\n    </Grid>\n  );\n}\n","// React Components for the Unlock upgrade buttons on the overview page\nimport React from \"react\";\n\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { CorporationUnlockUpgrade } from \"../data/CorporationUnlockUpgrades\";\nimport { useCorporation } from \"./Context\";\nimport { UnlockUpgrade as UU } from \"../Actions\";\nimport { MoneyCost } from \"./MoneyCost\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\n\ninterface IProps {\n  upgradeData: CorporationUnlockUpgrade;\n  rerender: () => void;\n}\n\nexport function UnlockUpgrade(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const data = props.upgradeData;\n  const tooltip = data[3];\n  function onClick(): void {\n    if (corp.funds.lt(data[1])) return;\n    try {\n      UU(corp, props.upgradeData);\n    } catch (err) {\n      dialogBoxCreate(err + \"\");\n    }\n    props.rerender();\n  }\n\n  return (\n    <Grid item xs={4}>\n      <Box display=\"flex\" alignItems=\"center\" flexDirection=\"row-reverse\">\n        <Button disabled={corp.funds.lt(data[1])} sx={{ mx: 1 }} onClick={onClick}>\n          <MoneyCost money={data[1]} corp={corp} />\n        </Button>\n        <Tooltip title={tooltip}>\n          <Typography>{data[2]}</Typography>\n        </Tooltip>\n      </Box>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Factions } from \"../../Faction/Factions\";\nimport { CorporationConstants } from \"../data/Constants\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { use } from \"../../ui/Context\";\nimport { useCorporation } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport function BribeFactionModal(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const factions = player.factions.filter((name: string) => {\n    const info = Factions[name].getInfo();\n    if (!info.offersWork()) return false;\n    if (player.hasGangWith(name)) return false;\n    return true;\n  });\n  const corp = useCorporation();\n  const [money, setMoney] = useState<number | null>(0);\n  const [stock, setStock] = useState<number | null>(0);\n  const [selectedFaction, setSelectedFaction] = useState(factions.length > 0 ? factions[0] : \"\");\n  const disabled =\n    money === null ||\n    stock === null ||\n    (money === 0 && stock === 0) ||\n    isNaN(money) ||\n    isNaN(stock) ||\n    money < 0 ||\n    stock < 0 ||\n    corp.funds.lt(money) ||\n    stock > corp.numShares;\n\n  function onMoneyChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setMoney(parseFloat(event.target.value));\n  }\n\n  function onStockChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setStock(parseFloat(event.target.value));\n  }\n\n  function changeFaction(event: SelectChangeEvent<string>): void {\n    setSelectedFaction(event.target.value);\n  }\n\n  function repGain(money: number, stock: number): number {\n    return (money + stock * corp.sharePrice) / CorporationConstants.BribeToRepRatio;\n  }\n\n  function getRepText(money: number, stock: number): string {\n    if (money === 0 && stock === 0) return \"\";\n    if (isNaN(money) || isNaN(stock) || money < 0 || stock < 0) {\n      return \"ERROR: Invalid value(s) entered\";\n    } else if (corp.funds.lt(money)) {\n      return \"ERROR: You do not have this much money to bribe with\";\n    } else if (stock > corp.numShares) {\n      return \"ERROR: You do not have this many shares to bribe with\";\n    } else {\n      return (\n        \"You will gain \" +\n        numeralWrapper.formatReputation(repGain(money, stock)) +\n        \" reputation with \" +\n        selectedFaction +\n        \" with this bribe\"\n      );\n    }\n  }\n\n  function bribe(money: number, stock: number): void {\n    const fac = Factions[selectedFaction];\n    if (disabled) return;\n    const rep = repGain(money, stock);\n    dialogBoxCreate(\n      \"You gained \" + numeralWrapper.formatReputation(rep) + \" reputation with \" + fac.name + \" by bribing them.\",\n    );\n    fac.playerReputation += rep;\n    corp.funds = corp.funds.minus(money);\n    corp.numShares -= stock;\n    props.onClose();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        You can use Corporation funds or stock shares to bribe Faction Leaders in exchange for faction reputation.\n      </Typography>\n      <Box display=\"flex\" alignItems=\"center\">\n        <Typography>Faction:</Typography>\n        <Select value={selectedFaction} onChange={changeFaction}>\n          {factions.map((name: string) => {\n            const info = Factions[name].getInfo();\n            if (!info.offersWork()) return;\n            if (player.hasGangWith(name)) return;\n            return (\n              <MenuItem key={name} value={name}>\n                {name}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </Box>\n      <Typography>{getRepText(money ? money : 0, stock ? stock : 0)}</Typography>\n      <TextField onChange={onMoneyChange} placeholder=\"Corporation funds\" />\n      <TextField sx={{ mx: 1 }} onChange={onStockChange} placeholder=\"Stock Shares\" />\n      <Button disabled={disabled} sx={{ mx: 1 }} onClick={() => bribe(money ? money : 0, stock ? stock : 0)}>\n        Bribe\n      </Button>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { use } from \"../../ui/Context\";\nimport { useCorporation } from \"./Context\";\nimport { CorporationConstants } from \"../data/Constants\";\nimport { ICorporation } from \"../ICorporation\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  rerender: () => void;\n}\n\n// Create a popup that lets the player sell Corporation shares\n// This is created when the player clicks the \"Sell Shares\" button in the overview panel\nexport function SellSharesModal(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const corp = useCorporation();\n  const [shares, setShares] = useState<number | null>(null);\n\n  const disabled = shares === null || isNaN(shares) || shares <= 0 || shares > corp.numShares;\n\n  function changeShares(event: React.ChangeEvent<HTMLInputElement>): void {\n    if (event.target.value === \"\") setShares(null);\n    else setShares(Math.round(parseFloat(event.target.value)));\n  }\n\n  function ProfitIndicator(props: { shares: number | null; corp: ICorporation }): React.ReactElement {\n    if (props.shares === null) return <></>;\n    if (isNaN(props.shares) || props.shares <= 0) {\n      return <>ERROR: Invalid value entered for number of shares to sell</>;\n    } else if (props.shares > corp.numShares) {\n      return <>You don't have this many shares to sell!</>;\n    } else {\n      const stockSaleResults = corp.calculateShareSale(props.shares);\n      const profit = stockSaleResults[0];\n      return (\n        <>\n          Sell {props.shares} shares for a total of {numeralWrapper.formatMoney(profit)}\n        </>\n      );\n    }\n  }\n\n  function sell(): void {\n    if (shares === null) return;\n    if (disabled) return;\n    const stockSaleResults = corp.calculateShareSale(shares);\n    const profit = stockSaleResults[0];\n    const newSharePrice = stockSaleResults[1];\n    const newSharesUntilUpdate = stockSaleResults[2];\n\n    corp.numShares -= shares;\n    if (isNaN(corp.issuedShares)) {\n      console.error(`Corporation issuedShares is NaN: ${corp.issuedShares}`);\n      const res = corp.issuedShares;\n      if (isNaN(res)) {\n        corp.issuedShares = 0;\n      } else {\n        corp.issuedShares = res;\n      }\n    }\n    corp.issuedShares += shares;\n    corp.sharePrice = newSharePrice;\n    corp.shareSalesUntilPriceUpdate = newSharesUntilUpdate;\n    corp.shareSaleCooldown = CorporationConstants.SellSharesCooldown;\n    player.gainMoney(profit);\n    player.recordMoneySource(profit, \"corporation\");\n    props.onClose();\n    dialogBoxCreate(\n      `Sold {numeralWrapper.formatMoney(shares)} shares for ` +\n        `${numeralWrapper.formatMoney(profit)}. ` +\n        `The corporation's stock price fell to ${numeralWrapper.formatMoney(corp.sharePrice)} ` +\n        `as a result of dilution.`,\n    );\n\n    props.rerender();\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) sell();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        Enter the number of shares you would like to sell. The money from selling your shares will go directly to you\n        (NOT your Corporation).\n        <br />\n        <br />\n        Selling your shares will cause your corporation's stock price to fall due to dilution. Furthermore, selling a\n        large number of shares all at once will have an immediate effect in reducing your stock price.\n        <br />\n        <br />\n        The current price of your company's stock is {numeralWrapper.formatMoney(corp.sharePrice)}\n      </Typography>\n      <ProfitIndicator shares={shares} corp={corp} />\n      <br />\n      <TextField\n        variant=\"standard\"\n        autoFocus\n        type=\"number\"\n        placeholder=\"Shares to sell\"\n        onChange={changeShares}\n        onKeyDown={onKeyDown}\n      />\n      <Button disabled={disabled} onClick={sell} sx={{ mx: 1 }}>\n        Sell shares\n      </Button>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { use } from \"../../ui/Context\";\nimport { useCorporation } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  rerender: () => void;\n}\n\n// Create a popup that lets the player buyback shares\n// This is created when the player clicks the \"Buyback Shares\" button in the overview panel\nexport function BuybackSharesModal(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const corp = useCorporation();\n  const [shares, setShares] = useState<number | null>(null);\n\n  function changeShares(event: React.ChangeEvent<HTMLInputElement>): void {\n    if (event.target.value === \"\") setShares(null);\n    else setShares(Math.round(parseFloat(event.target.value)));\n  }\n\n  const currentStockPrice = corp.sharePrice;\n  const buybackPrice = currentStockPrice * 1.1;\n  const disabled =\n    shares === null ||\n    isNaN(shares) ||\n    shares <= 0 ||\n    shares > corp.issuedShares ||\n    shares * buybackPrice > player.money;\n\n  function buy(): void {\n    if (shares === null) return;\n    corp.numShares += shares;\n    if (isNaN(corp.issuedShares)) {\n      console.warn(\"Corporation issuedShares is NaN: \" + corp.issuedShares);\n      console.warn(\"Converting to number now\");\n      const res = corp.issuedShares;\n      if (isNaN(res)) {\n        corp.issuedShares = 0;\n      } else {\n        corp.issuedShares = res;\n      }\n    }\n    corp.issuedShares -= shares;\n    player.loseMoney(shares * buybackPrice);\n    props.onClose();\n    props.rerender();\n  }\n\n  function CostIndicator(): React.ReactElement {\n    if (shares === null) return <></>;\n    if (isNaN(shares) || shares <= 0) {\n      return <>ERROR: Invalid value entered for number of shares to buyback</>;\n    } else if (shares > corp.issuedShares) {\n      return (\n        <>\n          There are not this many shares available to buy back. There are only{\" \"}\n          {numeralWrapper.formatBigNumber(corp.issuedShares)} outstanding shares.\n        </>\n      );\n    } else {\n      return (\n        <>\n          Purchase {shares} shares for a total of {numeralWrapper.formatMoney(shares * buybackPrice)}\n        </>\n      );\n    }\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) buy();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        Enter the number of outstanding shares you would like to buy back. These shares must be bought at a 10% premium.\n        However, repurchasing shares from the market tends to lead to an increase in stock price.\n        <br />\n        <br />\n        To purchase these shares, you must use your own money (NOT your Corporation's funds).\n        <br />\n        <br />\n        The current buyback price of your company's stock is {numeralWrapper.formatMoney(buybackPrice)}. Your company\n        currently has {numeralWrapper.formatBigNumber(corp.issuedShares)} outstanding stock shares.\n      </Typography>\n      <CostIndicator />\n      <br />\n      <TextField\n        autoFocus={true}\n        type=\"number\"\n        placeholder=\"Shares to buyback\"\n        onChange={changeShares}\n        onKeyDown={onKeyDown}\n      />\n      <Button disabled={disabled} onClick={buy}>\n        Buy shares\n      </Button>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { CorporationConstants } from \"../data/Constants\";\nimport { IssueDividends } from \"../Actions\";\nimport { useCorporation } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n}\n\n// Create a popup that lets the player issue & manage dividends\n// This is created when the player clicks the \"Issue Dividends\" button in the overview panel\nexport function IssueDividendsModal(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const [percent, setPercent] = useState(0);\n\n  const canIssue = !isNaN(percent) && percent >= 0 && percent <= CorporationConstants.DividendMaxPercentage * 100;\n  function issueDividends(): void {\n    if (!canIssue) return;\n    if (percent === null) return;\n    try {\n      IssueDividends(corp, percent / 100);\n    } catch (err) {\n      dialogBoxCreate(err + \"\");\n    }\n\n    props.onClose();\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) issueDividends();\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    if (event.target.value === \"\") setPercent(0);\n    else {\n      let p = parseFloat(event.target.value);\n      if (p > 50) p = 50;\n      if (p < 0) p = 0;\n      setPercent(p);\n    }\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        Dividends are a distribution of a portion of the corporation's profits to the shareholders. This includes\n        yourself, as well.\n        <br />\n        <br />\n        In order to issue dividends, simply allocate some percentage of your corporation's profits to dividends. This\n        percentage must be an integer between 0 and {CorporationConstants.DividendMaxPercentage}. (A percentage of 0\n        means no dividends will be issued\n        <br />\n        <br />\n        Two important things to note:\n        <br />\n        * Issuing dividends will negatively affect your corporation's stock price\n        <br />\n        * Dividends are taxed. Taxes start at 50%, but can be decreased\n        <br />\n        <br />\n        Example: Assume your corporation makes $100m / sec in profit and you allocate 40% of that towards dividends.\n        That means your corporation will gain $60m / sec in funds and the remaining $40m / sec will be paid as\n        dividends. Since your corporation starts with 1 billion shares, every shareholder will be paid $0.04 per share\n        per second before taxes.\n      </Typography>\n      <TextField\n        autoFocus\n        value={percent}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        placeholder=\"Dividend %\"\n        type=\"number\"\n      />\n      <Button disabled={!canIssue} sx={{ mx: 1 }} onClick={issueDividends}>\n        Allocate Dividend Percentage\n      </Button>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { getRandomInt } from \"../../utils/helpers/getRandomInt\";\nimport { CorporationConstants } from \"../data/Constants\";\nimport { useCorporation } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\n\ninterface IEffectTextProps {\n  shares: number | null;\n}\n\nfunction EffectText(props: IEffectTextProps): React.ReactElement {\n  const corp = useCorporation();\n  if (props.shares === null) return <></>;\n  const newSharePrice = Math.round(corp.sharePrice * 0.9);\n  const maxNewSharesUnrounded = Math.round(corp.totalShares * 0.2);\n  const maxNewShares = maxNewSharesUnrounded - (maxNewSharesUnrounded % 1e6);\n  let newShares = props.shares;\n  if (isNaN(newShares)) {\n    return <Typography>Invalid input</Typography>;\n  }\n\n  // Round to nearest ten-millionth\n  newShares /= 10e6;\n  newShares = Math.round(newShares) * 10e6;\n\n  if (newShares < 10e6) {\n    return <Typography>Must issue at least 10 million new shares</Typography>;\n  }\n\n  if (newShares > maxNewShares) {\n    return <Typography>You cannot issue that many shares</Typography>;\n  }\n\n  return (\n    <Typography>\n      Issue ${numeralWrapper.format(newShares, \"0.000a\")} new shares for{\" \"}\n      {numeralWrapper.formatMoney(newShares * newSharePrice)}?\n    </Typography>\n  );\n}\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n}\n\n// Create a popup that lets the player issue new shares\n// This is created when the player clicks the \"Issue New Shares\" buttons in the overview panel\nexport function IssueNewSharesModal(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const [shares, setShares] = useState<number | null>(null);\n  const maxNewSharesUnrounded = Math.round(corp.totalShares * 0.2);\n  const maxNewShares = maxNewSharesUnrounded - (maxNewSharesUnrounded % 1e6);\n\n  const newShares = Math.round((shares || 0) / 10e6) * 10e6;\n  const disabled = shares === null || isNaN(newShares) || newShares < 10e6 || newShares > maxNewShares;\n\n  function issueNewShares(): void {\n    if (shares === null) return;\n    if (disabled) return;\n\n    const newSharePrice = Math.round(corp.sharePrice * 0.9);\n    let newShares = shares;\n\n    // Round to nearest ten-millionth\n    newShares = Math.round(newShares / 10e6) * 10e6;\n\n    const profit = newShares * newSharePrice;\n    corp.issueNewSharesCooldown = CorporationConstants.IssueNewSharesCooldown;\n    corp.totalShares += newShares;\n\n    // Determine how many are bought by private investors\n    // Private investors get up to 50% at most\n    // Round # of private shares to the nearest millionth\n    let privateShares = getRandomInt(0, Math.round(newShares / 2));\n    privateShares = Math.round(privateShares / 1e6) * 1e6;\n\n    corp.issuedShares += newShares - privateShares;\n    corp.funds = corp.funds.plus(profit);\n    corp.immediatelyUpdateSharePrice();\n    props.onClose();\n    dialogBoxCreate(\n      `Issued ${numeralWrapper.format(newShares, \"0.000a\")} and raised ` +\n        `${numeralWrapper.formatMoney(profit)}. ${numeralWrapper.format(privateShares, \"0.000a\")} ` +\n        `of these shares were bought by private investors.<br><br>` +\n        `Stock price decreased to ${numeralWrapper.formatMoney(corp.sharePrice)}`,\n    );\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) issueNewShares();\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    if (event.target.value === \"\") setShares(null);\n    else setShares(parseFloat(event.target.value));\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        You can issue new equity shares (i.e. stocks) in order to raise capital for your corporation.\n        <br />\n        <br />\n        &nbsp;* You can issue at most {numeralWrapper.formatMoney(maxNewShares)} new shares\n        <br />\n        &nbsp;* New shares are sold at a 10% discount\n        <br />\n        &nbsp;* You can only issue new shares once every 12 hours\n        <br />\n        &nbsp;* Issuing new shares causes dilution, resulting in a decrease in stock price and lower dividends per share\n        <br />\n        &nbsp;* Number of new shares issued must be a multiple of 10 million\n        <br />\n        <br />\n        When you choose to issue new equity, private shareholders have first priority for up to 50% of the new shares.\n        If they choose to exercise this option, these newly issued shares become private, restricted shares, which means\n        you cannot buy them back.\n      </Typography>\n      <EffectText shares={shares} />\n      <TextField autoFocus placeholder=\"# New Shares\" onChange={onChange} onKeyDown={onKeyDown} />\n      <Button disabled={disabled} onClick={issueNewShares} sx={{ mx: 1 }}>\n        Issue New Shares\n      </Button>\n    </Modal>\n  );\n}\n","import React from \"react\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { CorporationConstants } from \"../data/Constants\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { useCorporation } from \"./Context\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  rerender: () => void;\n}\n\n// Create a popup that lets the player manage exports\nexport function FindInvestorsModal(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const val = corp.determineValuation();\n  let percShares = 0;\n  let roundMultiplier = 4;\n  switch (corp.fundingRound) {\n    case 0: //Seed\n      percShares = 0.1;\n      roundMultiplier = 4;\n      break;\n    case 1: //Series A\n      percShares = 0.35;\n      roundMultiplier = 3;\n      break;\n    case 2: //Series B\n      percShares = 0.25;\n      roundMultiplier = 3;\n      break;\n    case 3: //Series C\n      percShares = 0.2;\n      roundMultiplier = 2.5;\n      break;\n    default:\n      return <></>;\n  }\n  const funding = val * percShares * roundMultiplier;\n  const investShares = Math.floor(CorporationConstants.INITIALSHARES * percShares);\n\n  function findInvestors(): void {\n    corp.fundingRound++;\n    corp.addFunds(funding);\n    corp.numShares -= investShares;\n    props.rerender();\n    props.onClose();\n  }\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        An investment firm has offered you {numeralWrapper.formatMoney(funding)} in funding in exchange for a{\" \"}\n        {numeralWrapper.format(percShares * 100, \"0.000a\")}% stake in the company (\n        {numeralWrapper.format(investShares, \"0.000a\")} shares).\n        <br />\n        <br />\n        Do you accept or reject this offer?\n        <br />\n        <br />\n        Hint: Investment firms will offer more money if your corporation is turning a profit\n      </Typography>\n      <Button onClick={findInvestors}>Accept</Button>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { useCorporation } from \"./Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  rerender: () => void;\n}\n\n// Create a popup that lets the player manage exports\nexport function GoPublicModal(props: IProps): React.ReactElement {\n  const corp = useCorporation();\n  const [shares, setShares] = useState(\"\");\n  const initialSharePrice = corp.determineValuation() / corp.totalShares;\n\n  function goPublic(): void {\n    const numShares = parseFloat(shares);\n    const initialSharePrice = corp.determineValuation() / corp.totalShares;\n    if (isNaN(numShares)) {\n      dialogBoxCreate(\"Invalid value for number of issued shares\");\n      return;\n    }\n    if (numShares > corp.numShares) {\n      dialogBoxCreate(\"Error: You don't have that many shares to issue!\");\n      return;\n    }\n    corp.public = true;\n    corp.sharePrice = initialSharePrice;\n    corp.issuedShares = numShares;\n    corp.numShares -= numShares;\n    corp.addFunds(numShares * initialSharePrice);\n    props.rerender();\n    dialogBoxCreate(\n      `You took your ${corp.name} public and earned ` +\n        `${numeralWrapper.formatMoney(numShares * initialSharePrice)} in your IPO`,\n    );\n    props.onClose();\n  }\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) goPublic();\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setShares(event.target.value);\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        Enter the number of shares you would like to issue for your IPO. These shares will be publicly sold and you will\n        no longer own them. Your Corporation will receive {numeralWrapper.formatMoney(initialSharePrice)} per share (the\n        IPO money will be deposited directly into your Corporation's funds).\n        <br />\n        <br />\n        You have a total of {numeralWrapper.format(corp.numShares, \"0.000a\")} of shares that you can issue.\n      </Typography>\n      <Box display=\"flex\" alignItems=\"center\">\n        <TextField\n          value={shares}\n          onChange={onChange}\n          autoFocus\n          type=\"number\"\n          placeholder=\"Shares to issue\"\n          onKeyDown={onKeyDown}\n        />\n        <Button sx={{ mx: 1 }} onClick={goPublic}>\n          Go Public\n        </Button>\n      </Box>\n    </Modal>\n  );\n}\n","import { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport React, { useState } from \"react\";\nimport { Intro } from \"./Intro\";\nimport { Game } from \"./Game\";\nimport { Location } from \"../../Locations/Location\";\nimport { use } from \"../../ui/Context\";\n\ninterface IProps {\n  location: Location;\n}\nfunction calcDifficulty(player: IPlayer, startingDifficulty: number): number {\n  const totalStats = player.strength + player.defense + player.dexterity + player.agility + player.charisma;\n  const difficulty = startingDifficulty - Math.pow(totalStats, 0.9) / 250 - player.intelligence / 1600;\n  if (difficulty < 0) return 0;\n  if (difficulty > 3) return 3;\n  return difficulty;\n}\n\nexport function InfiltrationRoot(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const router = use.Router();\n  const [start, setStart] = useState(false);\n\n  if (props.location.infiltrationData === undefined) throw new Error(\"Trying to do infiltration on invalid location.\");\n  const startingDifficulty = props.location.infiltrationData.startingSecurityLevel;\n  const difficulty = calcDifficulty(player, startingDifficulty);\n\n  function cancel(): void {\n    router.toCity();\n  }\n\n  if (!start) {\n    return (\n      <Intro\n        Location={props.location}\n        Difficulty={difficulty}\n        MaxLevel={props.location.infiltrationData.maxClearanceLevel}\n        start={() => setStart(true)}\n        cancel={cancel}\n      />\n    );\n  }\n\n  return (\n    <Game\n      StartingDifficulty={startingDifficulty}\n      Difficulty={difficulty}\n      MaxLevel={props.location.infiltrationData.maxClearanceLevel}\n    />\n  );\n}\n","import React from \"react\";\nimport { Location } from \"../../Locations/Location\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  Location: Location;\n  Difficulty: number;\n  MaxLevel: number;\n  start: () => void;\n  cancel: () => void;\n}\n\nfunction arrowPart(color: string, length: number): JSX.Element {\n  let arrow = \"\";\n  if (length <= 0) length = 0;\n  else if (length > 13) length = 13;\n  else {\n    length--;\n    arrow = \">\";\n  }\n  return (\n    <span style={{ color: color }}>\n      {\"=\".repeat(length)}\n      {arrow}\n      {\" \".repeat(13 - arrow.length - length)}\n    </span>\n  );\n}\n\nfunction coloredArrow(difficulty: number): JSX.Element {\n  if (difficulty === 0) {\n    return (\n      <span style={{ color: \"white\" }}>\n        {\">\"}\n        {\" \".repeat(38)}\n      </span>\n    );\n  } else {\n    return (\n      <>\n        {arrowPart(\"white\", difficulty * 13)}\n        {arrowPart(\"orange\", (difficulty - 1) * 13)}\n        {arrowPart(\"red\", (difficulty - 2) * 13)}\n      </>\n    );\n  }\n}\n\nexport function Intro(props: IProps): React.ReactElement {\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={10}>\n          <Typography variant=\"h4\">Infiltrating {props.Location.name}</Typography>\n        </Grid>\n        <Grid item xs={10}>\n          <Typography variant=\"h5\" color=\"primary\">\n            Maximum level: {props.MaxLevel}\n          </Typography>\n        </Grid>\n        <Grid item xs={10}>\n          <Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>[{coloredArrow(props.Difficulty)}]</Typography>\n          <Typography\n            sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}\n          >{` ^            ^            ^           ^`}</Typography>\n          <Typography\n            sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}\n          >{` Trivial    Normal        Hard    Impossible`}</Typography>\n        </Grid>\n        <Grid item xs={10}>\n          <Typography>\n            Infiltration is a series of short minigames that get progressively harder. You take damage for failing them.\n            Reaching the maximum level rewards you with intel you can trade for money or reputation.\n          </Typography>\n          <br />\n          <Typography>\n            The minigames you play are randomly selected. It might take you few tries to get used to them.\n          </Typography>\n          <br />\n          <Typography>No game require use of the mouse.</Typography>\n          <br />\n          <Typography>Spacebar is the default action/confirm button.</Typography>\n          <br />\n          <Typography>Everything that uses arrow can also use WASD</Typography>\n          <br />\n          <Typography>Sometimes the rest of the keyboard is used.</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Button onClick={props.start}>Start</Button>\n        </Grid>\n        <Grid item xs={3}>\n          <Button onClick={props.cancel}>Cancel</Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import { use } from \"../../ui/Context\";\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Countdown } from \"./Countdown\";\nimport { BracketGame } from \"./BracketGame\";\nimport { SlashGame } from \"./SlashGame\";\nimport { BackwardGame } from \"./BackwardGame\";\nimport { BribeGame } from \"./BribeGame\";\nimport { CheatCodeGame } from \"./CheatCodeGame\";\nimport { Cyberpunk2077Game } from \"./Cyberpunk2077Game\";\nimport { MinesweeperGame } from \"./MinesweeperGame\";\nimport { WireCuttingGame } from \"./WireCuttingGame\";\nimport { Victory } from \"./Victory\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface IProps {\n  StartingDifficulty: number;\n  Difficulty: number;\n  MaxLevel: number;\n}\n\nenum Stage {\n  Countdown = 0,\n  Minigame,\n  Result,\n  Sell,\n}\n\nconst minigames = [\n  SlashGame,\n  BracketGame,\n  BackwardGame,\n  BribeGame,\n  CheatCodeGame,\n  Cyberpunk2077Game,\n  MinesweeperGame,\n  WireCuttingGame,\n];\n\nexport function Game(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const router = use.Router();\n  const [level, setLevel] = useState(1);\n  const [stage, setStage] = useState(Stage.Countdown);\n  const [results, setResults] = useState(\"\");\n  const [gameIds, setGameIds] = useState({\n    lastGames: [-1, -1],\n    id: Math.floor(Math.random() * minigames.length),\n  });\n\n  function nextGameId(): number {\n    let id = gameIds.lastGames[0];\n    const ids = [gameIds.lastGames[0], gameIds.lastGames[1], gameIds.id];\n    while (ids.includes(id)) {\n      id = Math.floor(Math.random() * minigames.length);\n    }\n    return id;\n  }\n\n  function setupNextGame(): void {\n    setGameIds({\n      lastGames: [gameIds.lastGames[1], gameIds.id],\n      id: nextGameId(),\n    });\n  }\n\n  function success(): void {\n    pushResult(true);\n    if (level === props.MaxLevel) {\n      setStage(Stage.Sell);\n    } else {\n      setStage(Stage.Countdown);\n      setLevel(level + 1);\n    }\n    setupNextGame();\n  }\n\n  function pushResult(win: boolean): void {\n    setResults((old) => {\n      let next = old;\n      next += win ? \"✓\" : \"✗\";\n      if (next.length > 15) next = next.slice(1);\n      return next;\n    });\n  }\n\n  function failure(options?: { automated: boolean }): void {\n    setStage(Stage.Countdown);\n    pushResult(false);\n    // Kill the player immediately if they use automation, so\n    // it's clear they're not meant to\n    const damage = options?.automated ? player.hp : props.StartingDifficulty * 3;\n    if (player.takeDamage(damage)) {\n      router.toCity();\n      return;\n    }\n    setupNextGame();\n  }\n\n  let stageComponent: React.ReactNode;\n  switch (stage) {\n    case Stage.Countdown:\n      stageComponent = <Countdown onFinish={() => setStage(Stage.Minigame)} />;\n      break;\n    case Stage.Minigame: {\n      const MiniGame = minigames[gameIds.id];\n      stageComponent = <MiniGame onSuccess={success} onFailure={failure} difficulty={props.Difficulty + level / 50} />;\n      break;\n    }\n    case Stage.Sell:\n      stageComponent = (\n        <Victory\n          StartingDifficulty={props.StartingDifficulty}\n          Difficulty={props.Difficulty}\n          MaxLevel={props.MaxLevel}\n        />\n      );\n      break;\n  }\n\n  function Progress(): React.ReactElement {\n    return (\n      <h4>\n        <span style={{ color: \"gray\" }}>{results.slice(0, results.length - 1)}</span>\n        {results[results.length - 1]}\n      </h4>\n    );\n  }\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={3}>\n          <Typography>\n            Level: {level}&nbsp;/&nbsp;{props.MaxLevel}\n          </Typography>\n          <Progress />\n        </Grid>\n\n        <Grid item xs={12}>\n          {stageComponent}\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@mui/material/Grid\";\n\nimport Typography from \"@mui/material/Typography\";\ninterface IProps {\n  onFinish: () => void;\n}\n\nexport function Countdown(props: IProps): React.ReactElement {\n  const [x, setX] = useState(3);\n  useEffect(() => {\n    if (x === 0) {\n      props.onFinish();\n      return;\n    }\n    setTimeout(() => setX(x - 1), 200);\n  });\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h4\">Get Ready!</Typography>\n          <Typography variant=\"h4\">{x}</Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { IMinigameProps } from \"./IMinigameProps\";\nimport { KeyHandler } from \"./KeyHandler\";\nimport { GameTimer } from \"./GameTimer\";\nimport { random } from \"../utils\";\nimport { interpolate } from \"./Difficulty\";\nimport { BlinkingCursor } from \"./BlinkingCursor\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface Difficulty {\n  [key: string]: number;\n  timer: number;\n  min: number;\n  max: number;\n}\n\nconst difficulties: {\n  Trivial: Difficulty;\n  Normal: Difficulty;\n  Hard: Difficulty;\n  Impossible: Difficulty;\n} = {\n  Trivial: { timer: 8000, min: 2, max: 3 },\n  Normal: { timer: 6000, min: 4, max: 5 },\n  Hard: { timer: 4000, min: 4, max: 6 },\n  Impossible: { timer: 2500, min: 7, max: 7 },\n};\n\nfunction generateLeftSide(difficulty: Difficulty): string {\n  let str = \"\";\n  const length = random(difficulty.min, difficulty.max);\n  for (let i = 0; i < length; i++) {\n    str += [\"[\", \"<\", \"(\", \"{\"][Math.floor(Math.random() * 4)];\n  }\n\n  return str;\n}\n\nfunction getChar(event: KeyboardEvent): string {\n  if (event.keyCode == 48 && event.shiftKey) return \")\";\n  if (event.keyCode == 221 && !event.shiftKey) return \"]\";\n  if (event.keyCode == 221 && event.shiftKey) return \"}\";\n  if (event.keyCode == 190 && event.shiftKey) return \">\";\n  return \"\";\n}\n\nfunction match(left: string, right: string): boolean {\n  return (\n    (left === \"[\" && right === \"]\") ||\n    (left === \"<\" && right === \">\") ||\n    (left === \"(\" && right === \")\") ||\n    (left === \"{\" && right === \"}\")\n  );\n}\n\nexport function BracketGame(props: IMinigameProps): React.ReactElement {\n  const difficulty: Difficulty = { timer: 0, min: 0, max: 0 };\n  interpolate(difficulties, props.difficulty, difficulty);\n  const timer = difficulty.timer;\n  const [right, setRight] = useState(\"\");\n  const [left] = useState(generateLeftSide(difficulty));\n\n  function press(this: Document, event: KeyboardEvent): void {\n    event.preventDefault();\n    const char = getChar(event);\n    if (!char) return;\n    if (!match(left[left.length - right.length - 1], char)) {\n      props.onFailure();\n      return;\n    }\n    if (left.length === right.length + 1) {\n      props.onSuccess();\n      return;\n    }\n    setRight(right + char);\n  }\n\n  return (\n    <Grid container spacing={3}>\n      <GameTimer millis={timer} onExpire={props.onFailure} />\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">Close the brackets</Typography>\n        <Typography style={{ fontSize: \"5em\" }}>\n          {`${left}${right}`}\n          <BlinkingCursor />\n        </Typography>\n        <KeyHandler onKeyDown={press} onFailure={props.onFailure} />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { IMinigameProps } from \"./IMinigameProps\";\nimport { KeyHandler } from \"./KeyHandler\";\nimport { GameTimer } from \"./GameTimer\";\nimport { interpolate } from \"./Difficulty\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface Difficulty {\n  [key: string]: number;\n  window: number;\n}\n\nconst difficulties: {\n  Trivial: Difficulty;\n  Normal: Difficulty;\n  Hard: Difficulty;\n  Impossible: Difficulty;\n} = {\n  Trivial: { window: 600 },\n  Normal: { window: 325 },\n  Hard: { window: 250 },\n  Impossible: { window: 150 },\n};\n\nexport function SlashGame(props: IMinigameProps): React.ReactElement {\n  const difficulty: Difficulty = { window: 0 };\n  interpolate(difficulties, props.difficulty, difficulty);\n  const [guarding, setGuarding] = useState(true);\n\n  function press(this: Document, event: KeyboardEvent): void {\n    event.preventDefault();\n    if (event.keyCode !== 32) return;\n    if (guarding) {\n      props.onFailure();\n    } else {\n      props.onSuccess();\n    }\n  }\n\n  useEffect(() => {\n    let id2 = -1;\n    const id = window.setTimeout(() => {\n      setGuarding(false);\n      id2 = window.setTimeout(() => setGuarding(true), difficulty.window);\n    }, Math.random() * 3250 + 1500);\n    return () => {\n      clearInterval(id);\n      if (id2 !== -1) clearInterval(id2);\n    };\n  }, []);\n\n  return (\n    <Grid container spacing={3}>\n      <GameTimer millis={5000} onExpire={props.onFailure} />\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">Slash when his guard is down!</Typography>\n        <Typography variant=\"h4\">{guarding ? \"!Guarding!\" : \"!ATTACKING!\"}</Typography>\n        <KeyHandler onKeyDown={press} onFailure={props.onFailure} />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { IMinigameProps } from \"./IMinigameProps\";\nimport { KeyHandler } from \"./KeyHandler\";\nimport { GameTimer } from \"./GameTimer\";\nimport { random } from \"../utils\";\nimport { interpolate } from \"./Difficulty\";\nimport { BlinkingCursor } from \"./BlinkingCursor\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface Difficulty {\n  [key: string]: number;\n  timer: number;\n  min: number;\n  max: number;\n}\n\nconst difficulties: {\n  Trivial: Difficulty;\n  Normal: Difficulty;\n  Hard: Difficulty;\n  Impossible: Difficulty;\n} = {\n  Trivial: { timer: 16000, min: 3, max: 4 },\n  Normal: { timer: 12500, min: 2, max: 3 },\n  Hard: { timer: 15000, min: 3, max: 4 },\n  Impossible: { timer: 8000, min: 4, max: 4 },\n};\n\nexport function BackwardGame(props: IMinigameProps): React.ReactElement {\n  const difficulty: Difficulty = { timer: 0, min: 0, max: 0 };\n  interpolate(difficulties, props.difficulty, difficulty);\n  const timer = difficulty.timer;\n  const [answer] = useState(makeAnswer(difficulty));\n  const [guess, setGuess] = useState(\"\");\n\n  function press(this: Document, event: KeyboardEvent): void {\n    event.preventDefault();\n    if (event.keyCode === 16) return;\n    const nextGuess = guess + event.key.toUpperCase();\n    if (!answer.startsWith(nextGuess)) props.onFailure();\n    else if (answer === nextGuess) props.onSuccess();\n    else setGuess(nextGuess);\n  }\n\n  return (\n    <Grid container spacing={3}>\n      <GameTimer millis={timer} onExpire={props.onFailure} />\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">Type it backward</Typography>\n        <KeyHandler onKeyDown={press} onFailure={props.onFailure} />\n      </Grid>\n      <Grid item xs={6}>\n        <Typography style={{ transform: \"scaleX(-1)\" }}>{answer}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Typography>\n          {guess}\n          <BlinkingCursor />\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction makeAnswer(difficulty: Difficulty): string {\n  const length = random(difficulty.min, difficulty.max);\n  let answer = \"\";\n  for (let i = 0; i < length; i++) {\n    if (i > 0) answer += \" \";\n    answer += words[Math.floor(Math.random() * words.length)];\n  }\n\n  return answer;\n}\n\nconst words = [\n  \"ALGORITHM\",\n  \"ANALOG\",\n  \"APP\",\n  \"APPLICATION\",\n  \"ARRAY\",\n  \"BACKUP\",\n  \"BANDWIDTH\",\n  \"BINARY\",\n  \"BIT\",\n  \"BITE\",\n  \"BITMAP\",\n  \"BLOG\",\n  \"BLOGGER\",\n  \"BOOKMARK\",\n  \"BOOT\",\n  \"BROADBAND\",\n  \"BROWSER\",\n  \"BUFFER\",\n  \"BUG\",\n  \"BUS\",\n  \"BYTE\",\n  \"CACHE\",\n  \"CAPS LOCK\",\n  \"CAPTCHA\",\n  \"CD\",\n  \"CD-ROM\",\n  \"CLIENT\",\n  \"CLIPBOARD\",\n  \"CLOUD\",\n  \"COMPUTING\",\n  \"COMMAND\",\n  \"COMPILE\",\n  \"COMPRESS\",\n  \"COMPUTER\",\n  \"CONFIGURE\",\n  \"COOKIE\",\n  \"COPY\",\n  \"CPU\",\n  \"CYBERCRIME\",\n  \"CYBERSPACE\",\n  \"DASHBOARD\",\n  \"DATA\",\n  \"MINING\",\n  \"DATABASE\",\n  \"DEBUG\",\n  \"DECOMPRESS\",\n  \"DELETE\",\n  \"DESKTOP\",\n  \"DEVELOPMENT\",\n  \"DIGITAL\",\n  \"DISK\",\n  \"DNS\",\n  \"DOCUMENT\",\n  \"DOMAIN\",\n  \"DOMAIN NAME\",\n  \"DOT\",\n  \"DOT MATRIX\",\n  \"DOWNLOAD\",\n  \"DRAG\",\n  \"DVD\",\n  \"DYNAMIC\",\n  \"EMAIL\",\n  \"EMOTICON\",\n  \"ENCRYPT\",\n  \"ENCRYPTION\",\n  \"ENTER\",\n  \"EXABYTE\",\n  \"FAQ\",\n  \"FILE\",\n  \"FINDER\",\n  \"FIREWALL\",\n  \"FIRMWARE\",\n  \"FLAMING\",\n  \"FLASH\",\n  \"FLASH DRIVE\",\n  \"FLOPPY DISK\",\n  \"FLOWCHART\",\n  \"FOLDER\",\n  \"FONT\",\n  \"FORMAT\",\n  \"FRAME\",\n  \"FREEWARE\",\n  \"GIGABYTE\",\n  \"GRAPHICS\",\n  \"HACK\",\n  \"HACKER\",\n  \"HARDWARE\",\n  \"HOME PAGE\",\n  \"HOST\",\n  \"HTML\",\n  \"HYPERLINK\",\n  \"HYPERTEXT\",\n  \"ICON\",\n  \"INBOX\",\n  \"INTEGER\",\n  \"INTERFACE\",\n  \"INTERNET\",\n  \"IP ADDRESS\",\n  \"ITERATION\",\n  \"JAVA\",\n  \"JOYSTICK\",\n  \"JUNKMAIL\",\n  \"KERNEL\",\n  \"KEY\",\n  \"KEYBOARD\",\n  \"KEYWORD\",\n  \"LAPTOP\",\n  \"LASER PRINTER\",\n  \"LINK\",\n  \"LINUX\",\n  \"LOG OUT\",\n  \"LOGIC\",\n  \"LOGIN\",\n  \"LURKING\",\n  \"MACINTOSH\",\n  \"MACRO\",\n  \"MAINFRAME\",\n  \"MALWARE\",\n  \"MEDIA\",\n  \"MEMORY\",\n  \"MIRROR\",\n  \"MODEM\",\n  \"MONITOR\",\n  \"MOTHERBOARD\",\n  \"MOUSE\",\n  \"MULTIMEDIA\",\n  \"NET\",\n  \"NETWORK\",\n  \"NODE\",\n  \"NOTEBOOK\",\n  \"COMPUTER\",\n  \"OFFLINE\",\n  \"ONLINE\",\n  \"OPENSOURCE\",\n  \"OPERATING\",\n  \"SYSTEM\",\n  \"OPTION\",\n  \"OUTPUT\",\n  \"PAGE\",\n  \"PASSWORD\",\n  \"PASTE\",\n  \"PATH\",\n  \"PHISHING\",\n  \"PIRACY\",\n  \"PIRATE\",\n  \"PLATFORM\",\n  \"PLUGIN\",\n  \"PODCAST\",\n  \"POPUP\",\n  \"PORTAL\",\n  \"PRINT\",\n  \"PRINTER\",\n  \"PRIVACY\",\n  \"PROCESS\",\n  \"PROGRAM\",\n  \"PROGRAMMER\",\n  \"PROTOCOL\",\n  \"QUEUE\",\n  \"QWERTY\",\n  \"RAM\",\n  \"REALTIME\",\n  \"REBOOT\",\n  \"RESOLUTION\",\n  \"RESTORE\",\n  \"ROM\",\n  \"ROOT\",\n  \"ROUTER\",\n  \"RUNTIME\",\n  \"SAVE\",\n  \"SCAN\",\n  \"SCANNER\",\n  \"SCREEN\",\n  \"SCREENSHOT\",\n  \"SCRIPT\",\n  \"SCROLL\",\n  \"SCROLL\",\n  \"SEARCH\",\n  \"ENGINE\",\n  \"SECURITY\",\n  \"SERVER\",\n  \"SHAREWARE\",\n  \"SHELL\",\n  \"SHIFT\",\n  \"SHIFT KEY\",\n  \"SNAPSHOT\",\n  \"SOCIAL NETWORKING\",\n  \"SOFTWARE\",\n  \"SPAM\",\n  \"SPAMMER\",\n  \"SPREADSHEET\",\n  \"SPYWARE\",\n  \"STATUS\",\n  \"STORAGE\",\n  \"SUPERCOMPUTER\",\n  \"SURF\",\n  \"SYNTAX\",\n  \"TABLE\",\n  \"TAG\",\n  \"TERMINAL\",\n  \"TEMPLATE\",\n  \"TERABYTE\",\n  \"TEXT EDITOR\",\n  \"THREAD\",\n  \"TOOLBAR\",\n  \"TRASH\",\n  \"TROJAN HORSE\",\n  \"TYPEFACE\",\n  \"UNDO\",\n  \"UNIX\",\n  \"UPLOAD\",\n  \"URL\",\n  \"USER\",\n  \"USER INTERFACE\",\n  \"USERNAME\",\n  \"UTILITY\",\n  \"VERSION\",\n  \"VIRTUAL\",\n  \"VIRTUAL MEMORY\",\n  \"VIRUS\",\n  \"WEB\",\n  \"WEBMASTER\",\n  \"WEBSITE\",\n  \"WIDGET\",\n  \"WIKI\",\n  \"WINDOW\",\n  \"WINDOWS\",\n  \"WIRELESS\",\n  \"PROCESSOR\",\n  \"WORKSTATION\",\n  \"WEB\",\n  \"WORM\",\n  \"WWW\",\n  \"XML\",\n  \"ZIP\",\n];\n","import React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { IMinigameProps } from \"./IMinigameProps\";\nimport { KeyHandler } from \"./KeyHandler\";\nimport { GameTimer } from \"./GameTimer\";\nimport { interpolate } from \"./Difficulty\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface Difficulty {\n  [key: string]: number;\n  timer: number;\n  size: number;\n}\n\nconst difficulties: {\n  Trivial: Difficulty;\n  Normal: Difficulty;\n  Hard: Difficulty;\n  Impossible: Difficulty;\n} = {\n  Trivial: { timer: 12000, size: 6 },\n  Normal: { timer: 9000, size: 8 },\n  Hard: { timer: 5000, size: 9 },\n  Impossible: { timer: 2500, size: 12 },\n};\n\nexport function BribeGame(props: IMinigameProps): React.ReactElement {\n  const difficulty: Difficulty = { timer: 0, size: 0 };\n  interpolate(difficulties, props.difficulty, difficulty);\n  const timer = difficulty.timer;\n  const [choices] = useState(makeChoices(difficulty));\n  const [index, setIndex] = useState(0);\n\n  function press(this: Document, event: KeyboardEvent): void {\n    event.preventDefault();\n    const k = event.keyCode;\n    if (k === 32) {\n      if (positive.includes(choices[index])) props.onSuccess();\n      else props.onFailure();\n      return;\n    }\n\n    let newIndex = index;\n    if ([38, 87, 68, 39].includes(k)) newIndex++;\n    if ([65, 37, 83, 40].includes(k)) newIndex--;\n    while (newIndex < 0) newIndex += choices.length;\n    while (newIndex > choices.length - 1) newIndex -= choices.length;\n    setIndex(newIndex);\n  }\n\n  return (\n    <Grid container spacing={3}>\n      <GameTimer millis={timer} onExpire={props.onFailure} />\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">Say something nice about the guard.</Typography>\n        <KeyHandler onKeyDown={press} onFailure={props.onFailure} />\n      </Grid>\n      <Grid item xs={6}>\n        <Typography variant=\"h5\" color=\"primary\">\n          ↑\n        </Typography>\n        <Typography variant=\"h5\" color=\"primary\">\n          {choices[index]}\n        </Typography>\n        <Typography variant=\"h5\" color=\"primary\">\n          ↓\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction shuffleArray(array: string[]): void {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}\n\nfunction makeChoices(difficulty: Difficulty): string[] {\n  const choices = [];\n  choices.push(positive[Math.floor(Math.random() * positive.length)]);\n  for (let i = 0; i < difficulty.size; i++) {\n    const option = negative[Math.floor(Math.random() * negative.length)];\n    if (choices.includes(option)) {\n      i--;\n      continue;\n    }\n    choices.push(option);\n  }\n  shuffleArray(choices);\n  return choices;\n}\n\nconst positive = [\n  \"affectionate\",\n  \"agreeable\",\n  \"bright\",\n  \"charming\",\n  \"creative\",\n  \"determined\",\n  \"energetic\",\n  \"friendly\",\n  \"funny\",\n  \"generous\",\n  \"polite\",\n  \"likable\",\n  \"diplomatic\",\n  \"helpful\",\n  \"giving\",\n  \"kind\",\n  \"hardworking\",\n  \"patient\",\n  \"dynamic\",\n  \"loyal\",\n];\n\nconst negative = [\n  \"aggressive\",\n  \"aloof\",\n  \"arrogant\",\n  \"big-headed\",\n  \"boastful\",\n  \"boring\",\n  \"bossy\",\n  \"careless\",\n  \"clingy\",\n  \"couch potato\",\n  \"cruel\",\n  \"cynical\",\n  \"grumpy\",\n  \"hot air\",\n  \"know it all\",\n  \"obnoxious\",\n  \"pain in the neck\",\n  \"picky\",\n  \"tactless\",\n  \"thoughtless\",\n];\n","import React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { IMinigameProps } from \"./IMinigameProps\";\nimport { KeyHandler } from \"./KeyHandler\";\nimport { GameTimer } from \"./GameTimer\";\nimport { random, getArrow } from \"../utils\";\nimport { interpolate } from \"./Difficulty\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface Difficulty {\n  [key: string]: number;\n  timer: number;\n  min: number;\n  max: number;\n}\n\nconst difficulties: {\n  Trivial: Difficulty;\n  Normal: Difficulty;\n  Hard: Difficulty;\n  Impossible: Difficulty;\n} = {\n  Trivial: { timer: 13000, min: 6, max: 8 },\n  Normal: { timer: 7000, min: 7, max: 8 },\n  Hard: { timer: 5000, min: 8, max: 9 },\n  Impossible: { timer: 3000, min: 9, max: 10 },\n};\n\nexport function CheatCodeGame(props: IMinigameProps): React.ReactElement {\n  const difficulty: Difficulty = { timer: 0, min: 0, max: 0 };\n  interpolate(difficulties, props.difficulty, difficulty);\n  const timer = difficulty.timer;\n  const [code] = useState(generateCode(difficulty));\n  const [index, setIndex] = useState(0);\n\n  function press(this: Document, event: KeyboardEvent): void {\n    event.preventDefault();\n    if (code[index] !== getArrow(event)) {\n      props.onFailure();\n      return;\n    }\n    setIndex(index + 1);\n    if (index + 1 >= code.length) props.onSuccess();\n  }\n\n  return (\n    <Grid container spacing={3}>\n      <GameTimer millis={timer} onExpire={props.onFailure} />\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">Enter the Code!</Typography>\n        <Typography variant=\"h4\">{code[index]}</Typography>\n        <KeyHandler onKeyDown={press} onFailure={props.onFailure} />\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction generateCode(difficulty: Difficulty): string {\n  const arrows = [\"←\", \"→\", \"↑\", \"↓\"];\n  let code = \"\";\n  for (let i = 0; i < random(difficulty.min, difficulty.max); i++) {\n    let arrow = arrows[Math.floor(4 * Math.random())];\n    while (arrow === code[code.length - 1]) arrow = arrows[Math.floor(4 * Math.random())];\n    code += arrow;\n  }\n\n  return code;\n}\n","import React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { IMinigameProps } from \"./IMinigameProps\";\nimport { KeyHandler } from \"./KeyHandler\";\nimport { GameTimer } from \"./GameTimer\";\nimport { interpolate } from \"./Difficulty\";\nimport { getArrow } from \"../utils\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface Difficulty {\n  [key: string]: number;\n  timer: number;\n  width: number;\n  height: number;\n  symbols: number;\n}\n\nconst difficulties: {\n  Trivial: Difficulty;\n  Normal: Difficulty;\n  Hard: Difficulty;\n  Impossible: Difficulty;\n} = {\n  Trivial: { timer: 12500, width: 3, height: 3, symbols: 6 },\n  Normal: { timer: 15000, width: 4, height: 4, symbols: 7 },\n  Hard: { timer: 12500, width: 5, height: 5, symbols: 8 },\n  Impossible: { timer: 10000, width: 6, height: 6, symbols: 9 },\n};\n\nexport function Cyberpunk2077Game(props: IMinigameProps): React.ReactElement {\n  const difficulty: Difficulty = { timer: 0, width: 0, height: 0, symbols: 0 };\n  interpolate(difficulties, props.difficulty, difficulty);\n  const timer = difficulty.timer;\n  const [grid] = useState(generatePuzzle(difficulty));\n  const [answer] = useState(generateAnswer(grid, difficulty));\n  const [index, setIndex] = useState(0);\n  const [pos, setPos] = useState([0, 0]);\n\n  function press(this: Document, event: KeyboardEvent): void {\n    event.preventDefault();\n    const move = [0, 0];\n    const arrow = getArrow(event);\n    switch (arrow) {\n      case \"↑\":\n        move[1]--;\n        break;\n      case \"←\":\n        move[0]--;\n        break;\n      case \"↓\":\n        move[1]++;\n        break;\n      case \"→\":\n        move[0]++;\n        break;\n    }\n    const next = [pos[0] + move[0], pos[1] + move[1]];\n    next[0] = (next[0] + grid[0].length) % grid[0].length;\n    next[1] = (next[1] + grid.length) % grid.length;\n    setPos(next);\n\n    if (event.keyCode == 32) {\n      const selected = grid[pos[1]][pos[0]];\n      const expected = answer[index];\n      if (selected !== expected) {\n        props.onFailure();\n        return;\n      }\n      setIndex(index + 1);\n      if (answer.length === index + 1) props.onSuccess();\n    }\n  }\n\n  const fontSize = \"2em\";\n  return (\n    <Grid container spacing={3}>\n      <GameTimer millis={timer} onExpire={props.onFailure} />\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">Match the symbols!</Typography>\n        <Typography variant=\"h5\" color=\"primary\">\n          Targets:{\" \"}\n          {answer.map((a, i) => {\n            if (i == index)\n              return (\n                <span key={`${i}`} style={{ fontSize: \"1em\", color: \"blue\" }}>\n                  {a}&nbsp;\n                </span>\n              );\n            return (\n              <span key={`${i}`} style={{ fontSize: \"1em\" }}>\n                {a}&nbsp;\n              </span>\n            );\n          })}\n        </Typography>\n        <br />\n        {grid.map((line, y) => (\n          <div key={y}>\n            <pre>\n              {line.map((cell, x) => {\n                if (x == pos[0] && y == pos[1])\n                  return (\n                    <span key={`${x}${y}`} style={{ fontSize: fontSize, color: \"blue\" }}>\n                      {cell}&nbsp;\n                    </span>\n                  );\n                return (\n                  <span key={`${x}${y}`} style={{ fontSize: fontSize }}>\n                    {cell}&nbsp;\n                  </span>\n                );\n              })}\n            </pre>\n            <br />\n          </div>\n        ))}\n        <KeyHandler onKeyDown={press} onFailure={props.onFailure} />\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction generateAnswer(grid: string[][], difficulty: Difficulty): string[] {\n  const answer = [];\n  for (let i = 0; i < Math.round(difficulty.symbols); i++) {\n    answer.push(grid[Math.floor(Math.random() * grid.length)][Math.floor(Math.random() * grid[0].length)]);\n  }\n  return answer;\n}\n\nfunction randChar(): string {\n  return \"ABCDEF0123456789\"[Math.floor(Math.random() * 16)];\n}\n\nfunction generatePuzzle(difficulty: Difficulty): string[][] {\n  const puzzle = [];\n  for (let i = 0; i < Math.round(difficulty.height); i++) {\n    const line = [];\n    for (let j = 0; j < Math.round(difficulty.width); j++) {\n      line.push(randChar() + randChar());\n    }\n    puzzle.push(line);\n  }\n  return puzzle;\n}\n","import React, { useState, useEffect } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { IMinigameProps } from \"./IMinigameProps\";\nimport { KeyHandler } from \"./KeyHandler\";\nimport { GameTimer } from \"./GameTimer\";\nimport { interpolate } from \"./Difficulty\";\nimport { getArrow } from \"../utils\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface Difficulty {\n  [key: string]: number;\n  timer: number;\n  width: number;\n  height: number;\n  mines: number;\n}\n\nconst difficulties: {\n  Trivial: Difficulty;\n  Normal: Difficulty;\n  Hard: Difficulty;\n  Impossible: Difficulty;\n} = {\n  Trivial: { timer: 15000, width: 3, height: 3, mines: 4 },\n  Normal: { timer: 15000, width: 4, height: 4, mines: 7 },\n  Hard: { timer: 15000, width: 5, height: 5, mines: 11 },\n  Impossible: { timer: 15000, width: 6, height: 6, mines: 15 },\n};\n\nexport function MinesweeperGame(props: IMinigameProps): React.ReactElement {\n  const difficulty: Difficulty = { timer: 0, width: 0, height: 0, mines: 0 };\n  interpolate(difficulties, props.difficulty, difficulty);\n  const timer = difficulty.timer;\n  const [minefield] = useState(generateMinefield(difficulty));\n  const [answer, setAnswer] = useState(generateEmptyField(difficulty));\n  const [pos, setPos] = useState([0, 0]);\n  const [memoryPhase, setMemoryPhase] = useState(true);\n\n  function press(this: Document, event: KeyboardEvent): void {\n    event.preventDefault();\n    if (memoryPhase) return;\n    const move = [0, 0];\n    const arrow = getArrow(event);\n    switch (arrow) {\n      case \"↑\":\n        move[1]--;\n        break;\n      case \"←\":\n        move[0]--;\n        break;\n      case \"↓\":\n        move[1]++;\n        break;\n      case \"→\":\n        move[0]++;\n        break;\n    }\n    const next = [pos[0] + move[0], pos[1] + move[1]];\n    next[0] = (next[0] + minefield[0].length) % minefield[0].length;\n    next[1] = (next[1] + minefield.length) % minefield.length;\n    setPos(next);\n\n    if (event.keyCode == 32) {\n      if (!minefield[pos[1]][pos[0]]) {\n        props.onFailure();\n        return;\n      }\n      setAnswer((old) => {\n        old[pos[1]][pos[0]] = true;\n        if (fieldEquals(minefield, old)) props.onSuccess();\n        return old;\n      });\n    }\n  }\n\n  useEffect(() => {\n    const id = setTimeout(() => setMemoryPhase(false), 2000);\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <Grid container spacing={3}>\n      <GameTimer millis={timer} onExpire={props.onFailure} />\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">{memoryPhase ? \"Remember all the mines!\" : \"Mark all the mines!\"}</Typography>\n        {minefield.map((line, y) => (\n          <div key={y}>\n            <pre>\n              {line.map((cell, x) => {\n                if (memoryPhase) {\n                  if (minefield[y][x]) return <span key={x}>[?]&nbsp;</span>;\n                  return <span key={x}>[&nbsp;]&nbsp;</span>;\n                } else {\n                  if (x == pos[0] && y == pos[1]) return <span key={x}>[X]&nbsp;</span>;\n                  if (answer[y][x]) return <span key={x}>[.]&nbsp;</span>;\n                  return <span key={x}>[&nbsp;]&nbsp;</span>;\n                }\n              })}\n            </pre>\n            <br />\n          </div>\n        ))}\n        <KeyHandler onKeyDown={press} onFailure={props.onFailure} />\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction fieldEquals(a: boolean[][], b: boolean[][]): boolean {\n  function count(field: boolean[][]): number {\n    return field.flat().reduce((a, b) => a + (b ? 1 : 0), 0);\n  }\n  return count(a) === count(b);\n}\n\nfunction generateEmptyField(difficulty: Difficulty): boolean[][] {\n  const field = [];\n  for (let i = 0; i < difficulty.height; i++) {\n    field.push(new Array(Math.round(difficulty.width)).fill(false));\n  }\n  return field;\n}\n\nfunction generateMinefield(difficulty: Difficulty): boolean[][] {\n  const field = generateEmptyField(difficulty);\n  for (let i = 0; i < difficulty.mines; i++) {\n    const x = Math.floor(Math.random() * field.length);\n    const y = Math.floor(Math.random() * field[0].length);\n    if (field[x][y]) {\n      i--;\n      continue;\n    }\n    field[x][y] = true;\n  }\n  return field;\n}\n","import React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { IMinigameProps } from \"./IMinigameProps\";\nimport { KeyHandler } from \"./KeyHandler\";\nimport { GameTimer } from \"./GameTimer\";\nimport { random } from \"../utils\";\nimport { interpolate } from \"./Difficulty\";\n\ninterface Difficulty {\n  [key: string]: number;\n  timer: number;\n  wiresmin: number;\n  wiresmax: number;\n  rules: number;\n}\n\nconst difficulties: {\n  Trivial: Difficulty;\n  Normal: Difficulty;\n  Hard: Difficulty;\n  Impossible: Difficulty;\n} = {\n  Trivial: { timer: 9000, wiresmin: 4, wiresmax: 4, rules: 2 },\n  Normal: { timer: 7000, wiresmin: 6, wiresmax: 6, rules: 2 },\n  Hard: { timer: 5000, wiresmin: 8, wiresmax: 8, rules: 3 },\n  Impossible: { timer: 4000, wiresmin: 9, wiresmax: 9, rules: 4 },\n};\n\nconst types = [\"|\", \".\", \"/\", \"-\", \"█\", \"#\"];\n\nconst colors = [\"red\", \"#FFC107\", \"blue\", \"white\"];\n\nconst colorNames: any = {\n  red: \"red\",\n  \"#FFC107\": \"yellow\",\n  blue: \"blue\",\n  white: \"white\",\n};\n\ninterface Wire {\n  tpe: string;\n  colors: string[];\n}\n\ninterface Question {\n  toString: () => string;\n  shouldCut: (wire: Wire, index: number) => boolean;\n}\n\nexport function WireCuttingGame(props: IMinigameProps): React.ReactElement {\n  const difficulty: Difficulty = {\n    timer: 0,\n    wiresmin: 0,\n    wiresmax: 0,\n    rules: 0,\n  };\n  interpolate(difficulties, props.difficulty, difficulty);\n  const timer = difficulty.timer;\n  const [wires] = useState(generateWires(difficulty));\n  const [cutWires, setCutWires] = useState(new Array(wires.length).fill(false));\n  const [questions] = useState(generateQuestion(wires, difficulty));\n\n  function press(this: Document, event: KeyboardEvent): void {\n    event.preventDefault();\n    const wireNum = parseInt(event.key);\n\n    if (wireNum < 1 || wireNum > wires.length || isNaN(wireNum)) return;\n    setCutWires((old) => {\n      const next = [...old];\n      next[wireNum - 1] = true;\n      if (!questions.some((q) => q.shouldCut(wires[wireNum - 1], wireNum - 1))) {\n        props.onFailure();\n      }\n\n      // check if we won\n      const wiresToBeCut = [];\n      for (let j = 0; j < wires.length; j++) {\n        let shouldBeCut = false;\n        for (let i = 0; i < questions.length; i++) {\n          shouldBeCut = shouldBeCut || questions[i].shouldCut(wires[j], j);\n        }\n        wiresToBeCut.push(shouldBeCut);\n      }\n      if (wiresToBeCut.every((b, i) => b === next[i])) {\n        props.onSuccess();\n      }\n\n      return next;\n    });\n  }\n\n  return (\n    <Grid container spacing={3}>\n      <GameTimer millis={timer} onExpire={props.onFailure} />\n      <Grid item xs={12}>\n        <Typography variant=\"h4\">Cut the wires with the following properties! (keyboard 1 to 9)</Typography>\n        {questions.map((question, i) => (\n          <Typography key={i}>{question.toString()}</Typography>\n        ))}\n        <pre>\n          {new Array(wires.length).fill(0).map((_, i) => (\n            <span key={i}>&nbsp;{i + 1}&nbsp;&nbsp;&nbsp;&nbsp;</span>\n          ))}\n        </pre>\n        {new Array(8).fill(0).map((_, i) => (\n          <div key={i}>\n            <pre>\n              {wires.map((wire, j) => {\n                if ((i === 3 || i === 4) && cutWires[j])\n                  return <span key={j}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>;\n                return (\n                  <span key={j} style={{ color: wire.colors[i % wire.colors.length] }}>\n                    |{wire.tpe}|&nbsp;&nbsp;&nbsp;\n                  </span>\n                );\n              })}\n            </pre>\n          </div>\n        ))}\n        <KeyHandler onKeyDown={press} onFailure={props.onFailure} />\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction randomPositionQuestion(wires: Wire[]): Question {\n  const index = Math.floor(Math.random() * wires.length);\n  return {\n    toString: (): string => {\n      return `Cut wires number ${index + 1}.`;\n    },\n    shouldCut: (wire: Wire, i: number): boolean => {\n      return index === i;\n    },\n  };\n}\n\nfunction randomColorQuestion(wires: Wire[]): Question {\n  const index = Math.floor(Math.random() * wires.length);\n  const cutColor = wires[index].colors[0];\n  return {\n    toString: (): string => {\n      return `Cut all wires colored ${colorNames[cutColor]}.`;\n    },\n    shouldCut: (wire: Wire): boolean => {\n      return wire.colors.includes(cutColor);\n    },\n  };\n}\n\nfunction generateQuestion(wires: Wire[], difficulty: Difficulty): Question[] {\n  const numQuestions = difficulty.rules;\n  const questionGenerators = [randomPositionQuestion, randomColorQuestion];\n  const questions = [];\n  for (let i = 0; i < numQuestions; i++) {\n    questions.push(questionGenerators[i % 2](wires));\n  }\n  return questions;\n}\n\nfunction generateWires(difficulty: Difficulty): Wire[] {\n  const wires = [];\n  const numWires = random(difficulty.wiresmin, difficulty.wiresmax);\n  for (let i = 0; i < numWires; i++) {\n    const wireColors = [colors[Math.floor(Math.random() * colors.length)]];\n    if (Math.random() < 0.15) {\n      wireColors.push(colors[Math.floor(Math.random() * colors.length)]);\n    }\n    wires.push({\n      tpe: types[Math.floor(Math.random() * types.length)],\n      colors: wireColors,\n    });\n  }\n  return wires;\n}\n","import { Factions } from \"../../Faction/Factions\";\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Money } from \"../../ui/React/Money\";\nimport { Reputation } from \"../../ui/React/Reputation\";\nimport { BitNodeMultipliers } from \"../../BitNode/BitNodeMultipliers\";\nimport { use } from \"../../ui/Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\n\ninterface IProps {\n  StartingDifficulty: number;\n  Difficulty: number;\n  MaxLevel: number;\n}\n\nexport function Victory(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const router = use.Router();\n  const [faction, setFaction] = useState(\"none\");\n\n  function quitInfiltration(): void {\n    router.toCity();\n  }\n\n  const levelBonus = props.MaxLevel * Math.pow(1.01, props.MaxLevel);\n\n  const repGain =\n    Math.pow(props.Difficulty + 1, 1.1) *\n    Math.pow(props.StartingDifficulty, 1.2) *\n    30 *\n    levelBonus *\n    BitNodeMultipliers.InfiltrationRep;\n\n  const moneyGain =\n    Math.pow(props.Difficulty + 1, 2) *\n    Math.pow(props.StartingDifficulty, 3) *\n    3e3 *\n    levelBonus *\n    BitNodeMultipliers.InfiltrationMoney;\n\n  function sell(): void {\n    player.gainMoney(moneyGain);\n    player.recordMoneySource(moneyGain, \"infiltration\");\n    quitInfiltration();\n  }\n\n  function trade(): void {\n    if (faction === \"none\") return;\n    Factions[faction].playerReputation += repGain;\n    quitInfiltration();\n  }\n\n  function changeDropdown(event: SelectChangeEvent<string>): void {\n    setFaction(event.target.value);\n  }\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={10}>\n          <Typography variant=\"h4\">Infiltration successful!</Typography>\n        </Grid>\n        <Grid item xs={10}>\n          <Typography variant=\"h5\" color=\"primary\">\n            You can trade the confidential information you found for money or reputation.\n          </Typography>\n          <Select value={faction} onChange={changeDropdown}>\n            <MenuItem key={\"none\"} value={\"none\"}>\n              {\"none\"}\n            </MenuItem>\n            {player.factions\n              .filter((f) => Factions[f].getInfo().offersWork())\n              .map((f) => (\n                <MenuItem key={f} value={f}>\n                  {f}\n                </MenuItem>\n              ))}\n          </Select>\n          <Button onClick={trade}>\n            Trade for <Reputation reputation={repGain} /> reputation\n          </Button>\n        </Grid>\n        <Grid item xs={3}>\n          <Button onClick={sell}>\n            Sell for&nbsp;\n            <Money money={moneyGain} />\n          </Button>\n        </Grid>\n        <Grid item xs={3}>\n          <Button onClick={quitInfiltration}>Quit</Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { generateResleeves } from \"../Resleeving\";\nimport { Resleeve } from \"../Resleeve\";\nimport { ResleeveElem } from \"./ResleeveElem\";\nimport { use } from \"../../../ui/Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Box from \"@mui/material/Box\";\n\nconst SortOption: {\n  [key: string]: string | undefined;\n  Cost: string;\n  Hacking: string;\n  Strength: string;\n  Defense: string;\n  Dexterity: string;\n  Agility: string;\n  Charisma: string;\n  AverageCombatStats: string;\n  AverageAllStats: string;\n  TotalNumAugmentations: string;\n} = {\n  Cost: \"Cost\",\n  Hacking: \"Hacking Level\",\n  Strength: \"Strength Level\",\n  Defense: \"Defense Level\",\n  Dexterity: \"Dexterity Level\",\n  Agility: \"Agility Level\",\n  Charisma: \"Charisma Level\",\n  AverageCombatStats: \"Average Combat Stats\",\n  AverageAllStats: \"Average Stats\",\n  TotalNumAugmentations: \"Number of Augmentations\",\n};\n\n// Helper function for averaging\nfunction getAverage(...values: number[]): number {\n  let sum = 0;\n  for (let i = 0; i < values.length; ++i) {\n    sum += values[i];\n  }\n\n  return sum / values.length;\n}\n\nconst SortFunctions: {\n  [key: string]: ((a: Resleeve, b: Resleeve) => number) | undefined;\n  Cost: (a: Resleeve, b: Resleeve) => number;\n  Hacking: (a: Resleeve, b: Resleeve) => number;\n  Strength: (a: Resleeve, b: Resleeve) => number;\n  Defense: (a: Resleeve, b: Resleeve) => number;\n  Dexterity: (a: Resleeve, b: Resleeve) => number;\n  Agility: (a: Resleeve, b: Resleeve) => number;\n  Charisma: (a: Resleeve, b: Resleeve) => number;\n  AverageCombatStats: (a: Resleeve, b: Resleeve) => number;\n  AverageAllStats: (a: Resleeve, b: Resleeve) => number;\n  TotalNumAugmentations: (a: Resleeve, b: Resleeve) => number;\n} = {\n  Cost: (a: Resleeve, b: Resleeve): number => a.getCost() - b.getCost(),\n  Hacking: (a: Resleeve, b: Resleeve): number => a.hacking_skill - b.hacking_skill,\n  Strength: (a: Resleeve, b: Resleeve): number => a.strength - b.strength,\n  Defense: (a: Resleeve, b: Resleeve): number => a.defense - b.defense,\n  Dexterity: (a: Resleeve, b: Resleeve): number => a.dexterity - b.dexterity,\n  Agility: (a: Resleeve, b: Resleeve): number => a.agility - b.agility,\n  Charisma: (a: Resleeve, b: Resleeve): number => a.charisma - b.charisma,\n  AverageCombatStats: (a: Resleeve, b: Resleeve): number =>\n    getAverage(a.strength, a.defense, a.dexterity, a.agility) -\n    getAverage(b.strength, b.defense, b.dexterity, b.agility),\n  AverageAllStats: (a: Resleeve, b: Resleeve): number =>\n    getAverage(a.hacking_skill, a.strength, a.defense, a.dexterity, a.agility, a.charisma) -\n    getAverage(b.hacking_skill, b.strength, b.defense, b.dexterity, b.agility, b.charisma),\n  TotalNumAugmentations: (a: Resleeve, b: Resleeve): number => a.augmentations.length - b.augmentations.length,\n};\n\nexport function ResleeveRoot(): React.ReactElement {\n  const player = use.Player();\n  const [sort, setSort] = useState(SortOption.Cost);\n  // Randomly create all Resleeves if they dont already exist\n  if (player.resleeves.length === 0) {\n    player.resleeves = generateResleeves();\n  }\n\n  function onSortChange(event: SelectChangeEvent<string>): void {\n    setSort(event.target.value);\n  }\n\n  const sortFunction = SortFunctions[sort];\n  if (sortFunction === undefined) throw new Error(`sort function '${sort}' is undefined`);\n  player.resleeves.sort(sortFunction);\n\n  return (\n    <>\n      <Typography>\n        Re-sleeving is the process of digitizing and transferring your consciousness into a new human body, or 'sleeve'.\n        Here at VitaLife, you can purchase new specially-engineered bodies for the re-sleeve process. Many of these\n        bodies even come with genetic and cybernetic Augmentations!\n        <br />\n        <br />\n        Re-sleeving will change your experience for every stat. It will also REMOVE all of your currently-installed\n        Augmentations, and replace them with the ones provided by the purchased sleeve. However, Augmentations that you\n        have purchased but not installed will NOT be removed. If you have purchased an Augmentation and then re-sleeve\n        into a body which already has that Augmentation, it will be removed (since you cannot have duplicate\n        Augmentations).\n        <br />\n        <br />\n        NOTE: The stats and multipliers displayed on this page do NOT include your bonuses from Source-File.\n      </Typography>\n      <Box display=\"flex\" alignItems=\"center\">\n        <Typography>Sort By: </Typography>\n        <Select value={sort} onChange={onSortChange}>\n          {Object.keys(SortOption).map((opt) => (\n            <MenuItem key={opt} value={opt}>\n              {SortOption[opt]}\n            </MenuItem>\n          ))}\n        </Select>\n      </Box>\n      {player.resleeves.map((resleeve, i) => (\n        <ResleeveElem key={i} player={player} resleeve={resleeve} />\n      ))}\n    </>\n  );\n}\n","/**\n * Implements the Resleeve class, which defines a new body\n * that the player can \"re-sleeve\" into.\n */\nimport { Person } from \"../Person\";\n\nimport { Augmentation } from \"../../Augmentation/Augmentation\";\nimport { Augmentations } from \"../../Augmentation/Augmentations\";\n\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../../utils/JSONReviver\";\n\nexport class Resleeve extends Person {\n  constructor() {\n    super();\n  }\n\n  getCost(): number {\n    // Each experience point adds this to the cost\n    const CostPerExp = 25e3;\n\n    // Final cost is multiplied by this constant ^ # Augs\n    const NumAugsExponent = 1.2;\n\n    // Get total exp in this re-sleeve\n    const totalExp: number =\n      this.hacking_exp +\n      this.strength_exp +\n      this.defense_exp +\n      this.dexterity_exp +\n      this.agility_exp +\n      this.charisma_exp;\n\n    // Get total base Augmentation cost for this re-sleeve\n    let totalAugmentationCost = 0;\n    for (let i = 0; i < this.augmentations.length; ++i) {\n      const aug: Augmentation | null = Augmentations[this.augmentations[i].name];\n      if (aug == null) {\n        console.error(`Could not find Augmentation ${this.augmentations[i].name}`);\n        continue;\n      }\n      totalAugmentationCost += aug.startingCost;\n    }\n\n    return totalExp * CostPerExp + totalAugmentationCost * Math.pow(NumAugsExponent, this.augmentations.length);\n  }\n\n  /**\n   * Serialize the current object to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"Resleeve\", this);\n  }\n\n  /**\n   * Initiatizes a Resleeve object from a JSON save state.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): Resleeve {\n    return Generic_fromJSON(Resleeve, value.data);\n  }\n}\n\nReviver.constructors.Resleeve = Resleeve;\n","import React, { useState } from \"react\";\nimport { IPlayer } from \"../../IPlayer\";\nimport { Resleeve } from \"../Resleeve\";\nimport { Augmentations } from \"../../../Augmentation/Augmentations\";\nimport { purchaseResleeve } from \"../Resleeving\";\nimport { Money } from \"../../../ui/React/Money\";\n\nimport { numeralWrapper } from \"../../../ui/numeralFormat\";\nimport { dialogBoxCreate } from \"../../../ui/React/DialogBox\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Button from \"@mui/material/Button\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Grid from \"@mui/material/Grid\";\n\ninterface IProps {\n  resleeve: Resleeve;\n  player: IPlayer;\n}\n\nexport function ResleeveElem(props: IProps): React.ReactElement {\n  const [aug, setAug] = useState(props.resleeve.augmentations[0].name);\n\n  function openStats(): void {\n    dialogBoxCreate(\n      <>\n        <Typography variant=\"h5\" color=\"primary\">\n          Total Multipliers:\n        </Typography>\n        <Typography>\n          Hacking Level multiplier: {numeralWrapper.formatPercentage(props.resleeve.hacking_mult)}\n          <br />\n          Hacking Experience multiplier: {numeralWrapper.formatPercentage(props.resleeve.hacking_exp_mult)}\n          <br />\n          Strength Level multiplier: {numeralWrapper.formatPercentage(props.resleeve.strength_mult)}\n          <br />\n          Strength Experience multiplier: {numeralWrapper.formatPercentage(props.resleeve.strength_exp_mult)}\n          <br />\n          Defense Level multiplier: {numeralWrapper.formatPercentage(props.resleeve.defense_mult)}\n          <br />\n          Defense Experience multiplier: {numeralWrapper.formatPercentage(props.resleeve.defense_exp_mult)}\n          <br />\n          Dexterity Level multiplier: {numeralWrapper.formatPercentage(props.resleeve.dexterity_mult)}\n          <br />\n          Dexterity Experience multiplier: {numeralWrapper.formatPercentage(props.resleeve.dexterity_exp_mult)}\n          <br />\n          Agility Level multiplier: {numeralWrapper.formatPercentage(props.resleeve.agility_mult)}\n          <br />\n          Agility Experience multiplier: {numeralWrapper.formatPercentage(props.resleeve.agility_exp_mult)}\n          <br />\n          Charisma Level multiplier: {numeralWrapper.formatPercentage(props.resleeve.charisma_mult)}\n          <br />\n          Charisma Experience multiplier: {numeralWrapper.formatPercentage(props.resleeve.charisma_exp_mult)}\n          <br />\n          Hacking Chance multiplier: {numeralWrapper.formatPercentage(props.resleeve.hacking_chance_mult)}\n          <br />\n          Hacking Speed multiplier: {numeralWrapper.formatPercentage(props.resleeve.hacking_speed_mult)}\n          <br />\n          Hacking Money multiplier: {numeralWrapper.formatPercentage(props.resleeve.hacking_money_mult)}\n          <br />\n          Hacking Growth multiplier: {numeralWrapper.formatPercentage(props.resleeve.hacking_grow_mult)}\n          <br />\n          Salary multiplier: {numeralWrapper.formatPercentage(props.resleeve.work_money_mult)}\n          <br />\n          Company Reputation Gain multiplier: {numeralWrapper.formatPercentage(props.resleeve.company_rep_mult)}\n          <br />\n          Faction Reputation Gain multiplier: {numeralWrapper.formatPercentage(props.resleeve.faction_rep_mult)}\n          <br />\n          Crime Money multiplier: {numeralWrapper.formatPercentage(props.resleeve.crime_money_mult)}\n          <br />\n          Crime Success multiplier: {numeralWrapper.formatPercentage(props.resleeve.crime_success_mult)}\n          <br />\n          Hacknet Income multiplier: {numeralWrapper.formatPercentage(props.resleeve.hacknet_node_money_mult)}\n          <br />\n          Hacknet Purchase Cost multiplier:\n          {numeralWrapper.formatPercentage(props.resleeve.hacknet_node_purchase_cost_mult)}\n          <br />\n          Hacknet Level Upgrade Cost multiplier:\n          {numeralWrapper.formatPercentage(props.resleeve.hacknet_node_level_cost_mult)}\n          <br />\n          Hacknet Ram Upgrade Cost multiplier:\n          {numeralWrapper.formatPercentage(props.resleeve.hacknet_node_ram_cost_mult)}\n          <br />\n          Hacknet Core Upgrade Cost multiplier:\n          {numeralWrapper.formatPercentage(props.resleeve.hacknet_node_core_cost_mult)}\n          <br />\n          Bladeburner Max Stamina multiplier:\n          {numeralWrapper.formatPercentage(props.resleeve.bladeburner_max_stamina_mult)}\n          <br />\n          Bladeburner Stamina Gain multiplier:\n          {numeralWrapper.formatPercentage(props.resleeve.bladeburner_stamina_gain_mult)}\n          <br />\n          Bladeburner Field Analysis multiplier:\n          {numeralWrapper.formatPercentage(props.resleeve.bladeburner_analysis_mult)}\n          <br />\n          Bladeburner Success Chance multiplier:\n          {numeralWrapper.formatPercentage(props.resleeve.bladeburner_success_chance_mult)}\n        </Typography>\n      </>,\n    );\n  }\n\n  function onAugChange(event: SelectChangeEvent<string>): void {\n    setAug(event.target.value);\n  }\n\n  const currentAug = Augmentations[aug];\n  const cost = props.resleeve.getCost();\n\n  function purchase(): void {\n    if (!purchaseResleeve(props.resleeve, props.player)) return;\n    dialogBoxCreate(\n      <>\n        You re-sleeved for <Money money={cost} />!\n      </>,\n    );\n  }\n\n  return (\n    <Paper sx={{ my: 1 }}>\n      <Grid container>\n        <Grid item xs={3}>\n          <Typography>\n            Hacking: {numeralWrapper.formatSkill(props.resleeve.hacking_skill)} (\n            {numeralWrapper.formatExp(props.resleeve.hacking_exp)} exp)\n            <br />\n            Strength: {numeralWrapper.formatSkill(props.resleeve.strength)} (\n            {numeralWrapper.formatExp(props.resleeve.strength_exp)} exp)\n            <br />\n            Defense: {numeralWrapper.formatSkill(props.resleeve.defense)} (\n            {numeralWrapper.formatExp(props.resleeve.defense_exp)} exp)\n            <br />\n            Dexterity: {numeralWrapper.formatSkill(props.resleeve.dexterity)} (\n            {numeralWrapper.formatExp(props.resleeve.dexterity_exp)} exp)\n            <br />\n            Agility: {numeralWrapper.formatSkill(props.resleeve.agility)} (\n            {numeralWrapper.formatExp(props.resleeve.agility_exp)} exp)\n            <br />\n            Charisma: {numeralWrapper.formatSkill(props.resleeve.charisma)} (\n            {numeralWrapper.formatExp(props.resleeve.charisma_exp)} exp)\n            <br /># Augmentations: {props.resleeve.augmentations.length}\n          </Typography>\n          <Button onClick={openStats}>Multipliers</Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Select value={aug} onChange={onAugChange}>\n            {props.resleeve.augmentations.map((aug) => (\n              <MenuItem key={aug.name} value={aug.name}>\n                {aug.name}\n              </MenuItem>\n            ))}\n          </Select>\n          <Typography>{currentAug !== undefined && currentAug.info}</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Typography>\n            It costs <Money money={cost} player={props.player} /> to purchase this Sleeve.\n          </Typography>\n          <Button onClick={purchase}>Purchase</Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { use } from \"./Context\";\nimport { CONSTANTS } from \"../Constants\";\nimport { numeralWrapper } from \"./numeralFormat\";\nimport { Reputation } from \"./React/Reputation\";\nimport { ReputationRate } from \"./React/ReputationRate\";\nimport { MoneyRate } from \"./React/MoneyRate\";\nimport { Money } from \"./React/Money\";\nimport { convertTimeMsToTimeElapsedString } from \"../utils/StringHelperFunctions\";\nimport { Factions } from \"../Faction/Factions\";\nimport { Company } from \"../Company/Company\";\nimport { Companies } from \"../Company/Companies\";\nimport { Locations } from \"../Locations/Locations\";\nimport { LocationName } from \"../Locations/data/LocationNames\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\n\nimport { createProgressBarText } from \"../utils/helpers/createProgressBarText\";\n\nconst CYCLES_PER_SEC = 1000 / CONSTANTS.MilliPerCycle;\n\nexport function WorkInProgressRoot(): React.ReactElement {\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    const id = setInterval(rerender, CONSTANTS.MilliPerCycle);\n    return () => clearInterval(id);\n  }, []);\n  const player = use.Player();\n  const router = use.Router();\n  const faction = Factions[player.currentWorkFactionName];\n  if (player.workType == CONSTANTS.WorkTypeFaction) {\n    function cancel(): void {\n      router.toFaction(faction);\n      player.finishFactionWork(true);\n    }\n    function unfocus(): void {\n      router.toFaction(faction);\n      player.stopFocusing();\n    }\n    return (\n      <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: \"100vh\" }}>\n        <Grid item>\n          <Typography>\n            You are currently {player.currentWorkFactionDescription} for your faction {faction.name}\n            <br />\n            (Current Faction Reputation: <Reputation reputation={faction.playerReputation} />\n            ). <br />\n            You have been doing this for {convertTimeMsToTimeElapsedString(player.timeWorked)}\n            <br />\n            <br />\n            You have earned: <br />\n            <br />\n            <Money money={player.workMoneyGained} /> (<MoneyRate money={player.workMoneyGainRate * CYCLES_PER_SEC} />){\" \"}\n            <br />\n            <br />\n            <Reputation reputation={player.workRepGained} /> (\n            <ReputationRate reputation={player.workRepGainRate * CYCLES_PER_SEC} />) reputation for this faction <br />\n            <br />\n            {numeralWrapper.formatExp(player.workHackExpGained)} (\n            {numeralWrapper.formatExp(player.workHackExpGainRate * CYCLES_PER_SEC)} / sec) hacking exp <br />\n            <br />\n            {numeralWrapper.formatExp(player.workStrExpGained)} (\n            {numeralWrapper.formatExp(player.workStrExpGainRate * CYCLES_PER_SEC)} / sec) strength exp <br />\n            {numeralWrapper.formatExp(player.workDefExpGained)} (\n            {numeralWrapper.formatExp(player.workDefExpGainRate * CYCLES_PER_SEC)} / sec) defense exp <br />\n            {numeralWrapper.formatExp(player.workDexExpGained)} (\n            {numeralWrapper.formatExp(player.workDexExpGainRate * CYCLES_PER_SEC)} / sec) dexterity exp <br />\n            {numeralWrapper.formatExp(player.workAgiExpGained)} (\n            {numeralWrapper.formatExp(player.workAgiExpGainRate * CYCLES_PER_SEC)} / sec) agility exp <br />\n            <br />\n            {numeralWrapper.formatExp(player.workChaExpGained)} (\n            {numeralWrapper.formatExp(player.workChaExpGainRate * CYCLES_PER_SEC)} / sec) charisma exp <br />\n            <br />\n            You will automatically finish after working for 20 hours. You can cancel earlier if you wish.\n            <br />\n            There is no penalty for cancelling earlier.\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button sx={{ mx: 2 }} onClick={cancel}>\n            Stop Faction Work\n          </Button>\n          <Button onClick={unfocus}>Do something else simultaneously</Button>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  const className = player.className;\n  if (player.className !== \"\") {\n    function cancel(): void {\n      player.finishClass(true);\n      router.toCity();\n    }\n\n    let stopText = \"\";\n    if (\n      className == CONSTANTS.ClassGymStrength ||\n      className == CONSTANTS.ClassGymDefense ||\n      className == CONSTANTS.ClassGymDexterity ||\n      className == CONSTANTS.ClassGymAgility\n    ) {\n      stopText = \"Stop training at gym\";\n    } else {\n      stopText = \"Stop taking course\";\n    }\n\n    return (\n      <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: \"100vh\" }}>\n        <Grid item>\n          <Typography>\n            You have been {className} for {convertTimeMsToTimeElapsedString(player.timeWorked)}\n            <br />\n            <br />\n            This has cost you: <br />\n            <Money money={-player.workMoneyGained} /> (<MoneyRate money={player.workMoneyLossRate * CYCLES_PER_SEC} />){\" \"}\n            <br />\n            <br />\n            You have gained: <br />\n            {numeralWrapper.formatExp(player.workHackExpGained)} (\n            {numeralWrapper.formatExp(player.workHackExpGainRate * CYCLES_PER_SEC)} / sec) hacking exp <br />\n            {numeralWrapper.formatExp(player.workStrExpGained)} (\n            {numeralWrapper.formatExp(player.workStrExpGainRate * CYCLES_PER_SEC)} / sec) strength exp <br />\n            {numeralWrapper.formatExp(player.workDefExpGained)} (\n            {numeralWrapper.formatExp(player.workDefExpGainRate * CYCLES_PER_SEC)} / sec) defense exp <br />\n            {numeralWrapper.formatExp(player.workDexExpGained)} (\n            {numeralWrapper.formatExp(player.workDexExpGainRate * CYCLES_PER_SEC)} / sec) dexterity exp <br />\n            {numeralWrapper.formatExp(player.workAgiExpGained)} (\n            {numeralWrapper.formatExp(player.workAgiExpGainRate * CYCLES_PER_SEC)} / sec) agility exp <br />\n            {numeralWrapper.formatExp(player.workChaExpGained)} (\n            {numeralWrapper.formatExp(player.workChaExpGainRate * CYCLES_PER_SEC)} / sec) charisma exp <br />\n            You may cancel at any time\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button onClick={cancel}>{stopText}</Button>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  if (player.workType == CONSTANTS.WorkTypeCompany) {\n    const comp = Companies[player.companyName];\n    let companyRep = 0;\n    if (comp == null || !(comp instanceof Company)) {\n      throw new Error(`Could not find Company: ${player.companyName}`);\n    }\n    companyRep = comp.playerReputation;\n\n    function cancel(): void {\n      player.finishWork(true);\n      router.toJob();\n    }\n    function unfocus(): void {\n      player.stopFocusing();\n      router.toJob();\n    }\n\n    const position = player.jobs[player.companyName];\n\n    const penalty = player.cancelationPenalty();\n\n    const penaltyString = penalty === 0.5 ? \"half\" : \"three-quarters\";\n    return (\n      <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: \"100vh\" }}>\n        <Grid item>\n          <Typography>\n            You are currently working as a {position} at {player.companyName} (Current Company Reputation:{\" \"}\n            <Reputation reputation={companyRep} />)<br />\n            <br />\n            You have been working for {convertTimeMsToTimeElapsedString(player.timeWorked)}\n            <br />\n            <br />\n            You have earned: <br />\n            <br />\n            <Money money={player.workMoneyGained} /> (<MoneyRate money={player.workMoneyGainRate * CYCLES_PER_SEC} />){\" \"}\n            <br />\n            <br />\n            <Reputation reputation={player.workRepGained} /> (\n            <ReputationRate reputation={player.workRepGainRate * CYCLES_PER_SEC} />) reputation for this company <br />\n            <br />\n            {numeralWrapper.formatExp(player.workHackExpGained)} (\n            {`${numeralWrapper.formatExp(player.workHackExpGainRate * CYCLES_PER_SEC)} / sec`}\n            ) hacking exp <br />\n            <br />\n            {numeralWrapper.formatExp(player.workStrExpGained)} (\n            {`${numeralWrapper.formatExp(player.workStrExpGainRate * CYCLES_PER_SEC)} / sec`}\n            ) strength exp <br />\n            {numeralWrapper.formatExp(player.workDefExpGained)} (\n            {`${numeralWrapper.formatExp(player.workDefExpGainRate * CYCLES_PER_SEC)} / sec`}\n            ) defense exp <br />\n            {numeralWrapper.formatExp(player.workDexExpGained)} (\n            {`${numeralWrapper.formatExp(player.workDexExpGainRate * CYCLES_PER_SEC)} / sec`}\n            ) dexterity exp <br />\n            {numeralWrapper.formatExp(player.workAgiExpGained)} (\n            {`${numeralWrapper.formatExp(player.workAgiExpGainRate * CYCLES_PER_SEC)} / sec`}\n            ) agility exp <br />\n            <br />\n            {numeralWrapper.formatExp(player.workChaExpGained)} (\n            {`${numeralWrapper.formatExp(player.workChaExpGainRate * CYCLES_PER_SEC)} / sec`}\n            ) charisma exp <br />\n            <br />\n            You will automatically finish after working for 8 hours. You can cancel earlier if you wish, but you will\n            only gain {penaltyString} of the reputation you've earned so far.\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button sx={{ mx: 2 }} onClick={cancel}>\n            Stop Working\n          </Button>\n          <Button onClick={unfocus}>Do something else simultaneously</Button>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  if (player.workType == CONSTANTS.WorkTypeCompanyPartTime) {\n    function cancel(): void {\n      player.finishWork(true);\n      router.toJob();\n    }\n    function unfocus(): void {\n      player.stopFocusing();\n      router.toJob();\n    }\n    const comp = Companies[player.companyName];\n    let companyRep = 0;\n    if (comp == null || !(comp instanceof Company)) {\n      throw new Error(`Could not find Company: ${player.companyName}`);\n    }\n    companyRep = comp.playerReputation;\n\n    const position = player.jobs[player.companyName];\n    return (\n      <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: \"100vh\" }}>\n        <Grid item>\n          <Typography>\n            You are currently working as a {position} at {player.companyName} (Current Company Reputation:{\" \"}\n            <Reputation reputation={companyRep} />)<br />\n            <br />\n            You have been working for {convertTimeMsToTimeElapsedString(player.timeWorked)}\n            <br />\n            <br />\n            You have earned: <br />\n            <br />\n            <Money money={player.workMoneyGained} /> (<MoneyRate money={player.workMoneyGainRate * CYCLES_PER_SEC} />){\" \"}\n            <br />\n            <br />\n            <Reputation reputation={player.workRepGained} /> (\n            <ReputationRate reputation={player.workRepGainRate * CYCLES_PER_SEC} />\n            ) reputation for this company <br />\n            <br />\n            {numeralWrapper.formatExp(player.workHackExpGained)} (\n            {`${numeralWrapper.formatExp(player.workHackExpGainRate * CYCLES_PER_SEC)} / sec`}\n            ) hacking exp <br />\n            <br />\n            {numeralWrapper.formatExp(player.workStrExpGained)} (\n            {`${numeralWrapper.formatExp(player.workStrExpGainRate * CYCLES_PER_SEC)} / sec`}\n            ) strength exp <br />\n            {numeralWrapper.formatExp(player.workDefExpGained)} (\n            {`${numeralWrapper.formatExp(player.workDefExpGainRate * CYCLES_PER_SEC)} / sec`}\n            ) defense exp <br />\n            {numeralWrapper.formatExp(player.workDexExpGained)} (\n            {`${numeralWrapper.formatExp(player.workDexExpGainRate * CYCLES_PER_SEC)} / sec`}\n            ) dexterity exp <br />\n            {numeralWrapper.formatExp(player.workAgiExpGained)} (\n            {`${numeralWrapper.formatExp(player.workAgiExpGainRate * CYCLES_PER_SEC)} / sec`}\n            ) agility exp <br />\n            <br />\n            {numeralWrapper.formatExp(player.workChaExpGained)} (\n            {`${numeralWrapper.formatExp(player.workChaExpGainRate * CYCLES_PER_SEC)} / sec`}\n            ) charisma exp <br />\n            <br />\n            You will automatically finish after working for 8 hours. You can cancel earlier if you wish, and there will\n            be no penalty because this is a part-time job.\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button sx={{ mx: 2 }} onClick={cancel}>\n            Stop Working\n          </Button>\n          <Button onClick={unfocus}>Do something else simultaneously</Button>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  if (player.crimeType !== \"\") {\n    const percent = Math.round((player.timeWorked / player.timeNeededToCompleteWork) * 100);\n    let numBars = Math.round(percent / 5);\n    if (numBars < 0) {\n      numBars = 0;\n    }\n    if (numBars > 20) {\n      numBars = 20;\n    }\n    // const progressBar = \"[\" + Array(numBars + 1).join(\"|\") + Array(20 - numBars + 1).join(\" \") + \"]\";\n    const progressBar = createProgressBarText({ progress: (numBars + 1) / 20, totalTicks: 20 });\n\n    return (\n      <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: \"100vh\" }}>\n        <Grid item>\n          <Typography>\n            <Typography>You are attempting to {player.crimeType}.</Typography>\n            <br />\n\n            <Typography>\n              Time remaining: {convertTimeMsToTimeElapsedString(player.timeNeededToCompleteWork - player.timeWorked)}\n            </Typography>\n\n            <br />\n            <pre>{progressBar}</pre>\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            onClick={() => {\n              router.toLocation(Locations[LocationName.Slums]);\n              player.finishCrime(true);\n            }}\n          >\n            Cancel crime\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  if (player.createProgramName !== \"\") {\n    return (\n      <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: \"100vh\" }}>\n        <Grid item>\n          <Typography>\n            You are currently working on coding {player.createProgramName}.<br />\n            <br />\n            You have been working for {convertTimeMsToTimeElapsedString(player.timeWorked)}\n            <br />\n            <br />\n            The program is {((player.timeWorkedCreateProgram / player.timeNeededToCompleteWork) * 100).toFixed(2)}\n            % complete. <br />\n            If you cancel, your work will be saved and you can come back to complete the program later.\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            onClick={() => {\n              player.finishCreateProgramWork(true);\n              router.toTerminal();\n            }}\n          >\n            Cancel work on creating program\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  return <></>;\n}\n","import React, { useState, useRef } from \"react\";\n\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport Slider from \"@mui/material/Slider\";\nimport Grid from \"@mui/material/Grid\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Button from \"@mui/material/Button\";\n\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Link from \"@mui/material/Link\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport UploadIcon from \"@mui/icons-material/Upload\";\n\nimport { FileDiagnosticModal } from \"../../Diagnostic/FileDiagnosticModal\";\nimport { dialogBoxCreate } from \"./DialogBox\";\nimport { ConfirmationModal } from \"./ConfirmationModal\";\nimport { ThemeEditorModal } from \"./ThemeEditorModal\";\n\nimport { Settings } from \"../../Settings/Settings\";\nimport { save, deleteGame } from \"../../db\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: 50,\n      padding: theme.spacing(2),\n      userSelect: \"none\",\n    },\n  }),\n);\n\ninterface IProps {\n  player: IPlayer;\n  save: () => void;\n  export: () => void;\n  forceKill: () => void;\n  softReset: () => void;\n}\n\nexport function GameOptionsRoot(props: IProps): React.ReactElement {\n  const classes = useStyles();\n  const importInput = useRef<HTMLInputElement>(null);\n\n  const [execTime, setExecTime] = useState(Settings.CodeInstructionRunTime);\n  const [logSize, setLogSize] = useState(Settings.MaxLogCapacity);\n  const [portSize, setPortSize] = useState(Settings.MaxPortCapacity);\n  const [terminalSize, setTerminalSize] = useState(Settings.MaxTerminalCapacity);\n\n  const [autosaveInterval, setAutosaveInterval] = useState(Settings.AutosaveInterval);\n\n  const [suppressMessages, setSuppressMessages] = useState(Settings.SuppressMessages);\n  const [suppressFactionInvites, setSuppressFactionInvites] = useState(Settings.SuppressFactionInvites);\n  const [suppressTravelConfirmations, setSuppressTravelConfirmations] = useState(Settings.SuppressTravelConfirmation);\n  const [suppressBuyAugmentationConfirmation, setSuppressBuyAugmentationConfirmation] = useState(\n    Settings.SuppressBuyAugmentationConfirmation,\n  );\n  const [suppressHospitalizationPopup, setSuppressHospitalizationPopup] = useState(\n    Settings.SuppressHospitalizationPopup,\n  );\n\n  const [suppressBladeburnerPopup, setSuppressBladeburnerPopup] = useState(Settings.SuppressBladeburnerPopup);\n\n  const [disableHotkeys, setDisableHotkeys] = useState(Settings.DisableHotkeys);\n  const [disableASCIIArt, setDisableASCIIArt] = useState(Settings.DisableASCIIArt);\n  const [disableTextEffects, setDisableTextEffects] = useState(Settings.DisableTextEffects);\n  const [enableBashHotkeys, setEnableBashHotkeys] = useState(Settings.EnableBashHotkeys);\n  const [enableTimestamps, setEnableTimestamps] = useState(Settings.EnableTimestamps);\n\n  const [locale, setLocale] = useState(Settings.Locale);\n  const [diagnosticOpen, setDiagnosticOpen] = useState(false);\n  const [deleteGameOpen, setDeleteOpen] = useState(false);\n  const [themeEditorOpen, setThemeEditorOpen] = useState(false);\n\n  function handleExecTimeChange(event: any, newValue: number | number[]): void {\n    setExecTime(newValue as number);\n    Settings.CodeInstructionRunTime = newValue as number;\n  }\n\n  function handleLogSizeChange(event: any, newValue: number | number[]): void {\n    setLogSize(newValue as number);\n    Settings.MaxLogCapacity = newValue as number;\n  }\n\n  function handlePortSizeChange(event: any, newValue: number | number[]): void {\n    setPortSize(newValue as number);\n    Settings.MaxPortCapacity = newValue as number;\n  }\n\n  function handleTerminalSizeChange(event: any, newValue: number | number[]): void {\n    setTerminalSize(newValue as number);\n    Settings.MaxTerminalCapacity = newValue as number;\n  }\n\n  function handleAutosaveIntervalChange(event: any, newValue: number | number[]): void {\n    setAutosaveInterval(newValue as number);\n    Settings.AutosaveInterval = newValue as number;\n  }\n\n  function handleSuppressMessagesChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setSuppressMessages(event.target.checked);\n    Settings.SuppressMessages = event.target.checked;\n  }\n\n  function handleSuppressFactionInvitesChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setSuppressFactionInvites(event.target.checked);\n    Settings.SuppressFactionInvites = event.target.checked;\n  }\n\n  function handleSuppressTravelConfirmationsChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setSuppressTravelConfirmations(event.target.checked);\n    Settings.SuppressTravelConfirmation = event.target.checked;\n  }\n\n  function handleSuppressBuyAugmentationConfirmationChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setSuppressBuyAugmentationConfirmation(event.target.checked);\n    Settings.SuppressBuyAugmentationConfirmation = event.target.checked;\n  }\n\n  function handleSuppressHospitalizationPopupChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setSuppressHospitalizationPopup(event.target.checked);\n    Settings.SuppressHospitalizationPopup = event.target.checked;\n  }\n\n  function handleSuppressBladeburnerPopupChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setSuppressBladeburnerPopup(event.target.checked);\n    Settings.SuppressBladeburnerPopup = event.target.checked;\n  }\n\n  function handleDisableHotkeysChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setDisableHotkeys(event.target.checked);\n    Settings.DisableHotkeys = event.target.checked;\n  }\n\n  function handleDisableASCIIArtChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setDisableASCIIArt(event.target.checked);\n    Settings.DisableASCIIArt = event.target.checked;\n  }\n\n  function handleDisableTextEffectsChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setDisableTextEffects(event.target.checked);\n    Settings.DisableTextEffects = event.target.checked;\n  }\n  function handleLocaleChange(event: SelectChangeEvent<string>): void {\n    setLocale(event.target.value as string);\n    Settings.Locale = event.target.value as string;\n  }\n\n  function handleEnableBashHotkeysChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setEnableBashHotkeys(event.target.checked);\n    Settings.EnableBashHotkeys = event.target.checked;\n  }\n  function handleEnableTimestampsChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setEnableTimestamps(event.target.checked);\n    Settings.EnableTimestamps = event.target.checked;\n  }\n\n  function startImport(): void {\n    if (!window.File || !window.FileReader || !window.FileList || !window.Blob) return;\n    const ii = importInput.current;\n    if (ii === null) throw new Error(\"import input should not be null\");\n    ii.click();\n  }\n\n  function onImport(event: React.ChangeEvent<HTMLInputElement>): void {\n    const files = event.target.files;\n    if (files === null) return;\n    const file = files[0];\n    if (!file) {\n      dialogBoxCreate(\"Invalid file selected\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = function (this: FileReader, e: ProgressEvent<FileReader>) {\n      const target = e.target;\n      if (target === null) {\n        console.error(\"error importing file\");\n        return;\n      }\n      const result = target.result;\n      if (typeof result !== \"string\" || result === null) {\n        console.error(\"FileReader event was not type string\");\n        return;\n      }\n      const contents = result;\n      save(contents).then(() => setTimeout(() => location.reload(), 1000));\n    };\n    reader.readAsText(file);\n  }\n\n  return (\n    <div className={classes.root} style={{ width: \"90%\" }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Options\n      </Typography>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <List>\n            <ListItem>\n              <Tooltip\n                title={\n                  <Typography>\n                    The minimum number of milliseconds it takes to execute an operation in Netscript. Setting this too\n                    low can result in poor performance if you have many scripts running.\n                  </Typography>\n                }\n              >\n                <Typography>Netscript exec time (ms)</Typography>\n              </Tooltip>\n              <Slider\n                value={execTime}\n                onChange={handleExecTimeChange}\n                step={1}\n                min={10}\n                max={100}\n                valueLabelDisplay=\"auto\"\n              />\n            </ListItem>\n            <ListItem>\n              <Tooltip\n                title={\n                  <Typography>\n                    The maximum number of lines a script's logs can hold. Setting this too high can cause the game to\n                    use a lot of memory if you have many scripts running.\n                  </Typography>\n                }\n              >\n                <Typography>Netscript log size</Typography>\n              </Tooltip>\n              <Slider\n                value={logSize}\n                onChange={handleLogSizeChange}\n                step={1}\n                min={20}\n                max={100}\n                valueLabelDisplay=\"auto\"\n              />\n            </ListItem>\n            <ListItem>\n              <Tooltip\n                title={\n                  <Typography>\n                    The maximum number of entries that can be written to a port using Netscript's write() function.\n                    Setting this too high can cause the game to use a lot of memory.\n                  </Typography>\n                }\n              >\n                <Typography>Netscript port size</Typography>\n              </Tooltip>\n              <Slider\n                value={portSize}\n                onChange={handlePortSizeChange}\n                step={1}\n                min={20}\n                max={100}\n                valueLabelDisplay=\"auto\"\n              />\n            </ListItem>\n            <ListItem>\n              <Tooltip\n                title={\n                  <Typography>\n                    The maximum number of entries that can be written to a the terminal. Setting this too high can cause\n                    the game to use a lot of memory.\n                  </Typography>\n                }\n              >\n                <Typography>Terminal capacity</Typography>\n              </Tooltip>\n              <Slider\n                value={terminalSize}\n                onChange={handleTerminalSizeChange}\n                step={50}\n                min={50}\n                max={500}\n                valueLabelDisplay=\"auto\"\n                marks\n              />\n            </ListItem>\n            <ListItem>\n              <Tooltip\n                title={\n                  <Typography>The time (in seconds) between each autosave. Set to 0 to disable autosave.</Typography>\n                }\n              >\n                <Typography>Autosave interval (s)</Typography>\n              </Tooltip>\n              <Slider\n                value={autosaveInterval}\n                onChange={handleAutosaveIntervalChange}\n                step={30}\n                min={0}\n                max={600}\n                valueLabelDisplay=\"auto\"\n                marks\n              />\n            </ListItem>\n            <ListItem>\n              <FormControlLabel\n                control={<Switch checked={suppressMessages} onChange={handleSuppressMessagesChange} />}\n                label={\n                  <Tooltip\n                    title={\n                      <Typography>\n                        If this is set, then any messages you receive will not appear as popups on the screen. They will\n                        still get sent to your home computer as '.msg' files and can be viewed with the 'cat' Terminal\n                        command.\n                      </Typography>\n                    }\n                  >\n                    <Typography>Suppress messages</Typography>\n                  </Tooltip>\n                }\n              />\n            </ListItem>\n            <ListItem>\n              <FormControlLabel\n                control={<Switch checked={suppressFactionInvites} onChange={handleSuppressFactionInvitesChange} />}\n                label={\n                  <Tooltip\n                    title={\n                      <Typography>\n                        If this is set, then any faction invites you receive will not appear as popups on the screen.\n                        Your outstanding faction invites can be viewed in the 'Factions' page.\n                      </Typography>\n                    }\n                  >\n                    <Typography>Suppress faction invites</Typography>\n                  </Tooltip>\n                }\n              />\n            </ListItem>\n            <ListItem>\n              <FormControlLabel\n                control={\n                  <Switch checked={suppressTravelConfirmations} onChange={handleSuppressTravelConfirmationsChange} />\n                }\n                label={\n                  <Tooltip\n                    title={\n                      <Typography>\n                        If this is set, the confirmation message before traveling will not show up. You will\n                        automatically be deducted the travel cost as soon as you click.\n                      </Typography>\n                    }\n                  >\n                    <Typography>Suppress travel confirmations</Typography>\n                  </Tooltip>\n                }\n              />\n            </ListItem>\n            <ListItem>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={suppressBuyAugmentationConfirmation}\n                    onChange={handleSuppressBuyAugmentationConfirmationChange}\n                  />\n                }\n                label={\n                  <Tooltip\n                    title={\n                      <Typography>\n                        If this is set, the confirmation message before buying augmentation will not show up.\n                      </Typography>\n                    }\n                  >\n                    <Typography>Suppress buy augmentation confirmation</Typography>\n                  </Tooltip>\n                }\n              />\n            </ListItem>\n            <ListItem>\n              <FormControlLabel\n                control={\n                  <Switch checked={suppressHospitalizationPopup} onChange={handleSuppressHospitalizationPopupChange} />\n                }\n                label={\n                  <Tooltip\n                    title={\n                      <Typography>\n                        If this is set, a popup message will no longer be shown when you are hospitalized after taking\n                        too much damage.\n                      </Typography>\n                    }\n                  >\n                    <Typography>Suppress hospitalization popup</Typography>\n                  </Tooltip>\n                }\n              />\n            </ListItem>\n            {!!props.player.bladeburner && (\n              <ListItem>\n                <FormControlLabel\n                  control={\n                    <Switch checked={suppressBladeburnerPopup} onChange={handleSuppressBladeburnerPopupChange} />\n                  }\n                  label={\n                    <Tooltip\n                      title={\n                        <Typography>\n                          If this is set, then having your Bladeburner actions interrupted by being busy with something\n                          else will not display a popup message.\n                        </Typography>\n                      }\n                    >\n                      <Typography>Suppress bladeburner popup</Typography>\n                    </Tooltip>\n                  }\n                />\n              </ListItem>\n            )}\n            <ListItem>\n              <FormControlLabel\n                control={<Switch checked={disableHotkeys} onChange={handleDisableHotkeysChange} />}\n                label={\n                  <Tooltip\n                    title={\n                      <Typography>\n                        If this is set, then most hotkeys (keyboard shortcuts) in the game are disabled. This includes\n                        Terminal commands, hotkeys to navigate between different parts of the game, and the \"Save and\n                        Close (Ctrl + b)\" hotkey in the Text Editor.\n                      </Typography>\n                    }\n                  >\n                    <Typography>Disable hotkeys</Typography>\n                  </Tooltip>\n                }\n              />\n            </ListItem>\n            <ListItem>\n              <FormControlLabel\n                control={<Switch checked={disableASCIIArt} onChange={handleDisableASCIIArtChange} />}\n                label={\n                  <Tooltip title={<Typography>If this is set all ASCII art will be disabled.</Typography>}>\n                    <Typography>Disable ascii art</Typography>\n                  </Tooltip>\n                }\n              />\n            </ListItem>\n            <ListItem>\n              <FormControlLabel\n                control={<Switch checked={disableTextEffects} onChange={handleDisableTextEffectsChange} />}\n                label={\n                  <Tooltip\n                    title={\n                      <Typography>\n                        If this is set, text effects will not be displayed. This can help if text is difficult to read\n                        in certain areas.\n                      </Typography>\n                    }\n                  >\n                    <Typography>Disable text effects</Typography>\n                  </Tooltip>\n                }\n              />\n            </ListItem>\n\n            <ListItem>\n              <FormControlLabel\n                control={<Switch checked={enableBashHotkeys} onChange={handleEnableBashHotkeysChange} />}\n                label={\n                  <Tooltip\n                    title={\n                      <Typography>\n                        Improved Bash emulation mode. Setting this to 1 enables several new Terminal shortcuts and\n                        features that more closely resemble a real Bash-style shell. Note that when this mode is\n                        enabled, the default browser shortcuts are overriden by the new Bash shortcuts.\n                      </Typography>\n                    }\n                  >\n                    <Typography>Enable bash hotkeys</Typography>\n                  </Tooltip>\n                }\n              />\n            </ListItem>\n            <ListItem>\n              <FormControlLabel\n                control={<Switch checked={enableTimestamps} onChange={handleEnableTimestampsChange} />}\n                label={\n                  <Tooltip\n                    title={\n                      <Typography>\n                        Terminal commands and log entries will be timestamped. The timestamp will have the format: M/D\n                        h:m\n                      </Typography>\n                    }\n                  >\n                    <Typography>Enable timestamps</Typography>\n                  </Tooltip>\n                }\n              />\n            </ListItem>\n\n            <ListItem>\n              <Tooltip title={<Typography>Sets the locale for displaying numbers.</Typography>}>\n                <Typography>Locale&nbsp;</Typography>\n              </Tooltip>\n              <Select value={locale} onChange={handleLocaleChange}>\n                <MenuItem value=\"en\">en</MenuItem>\n                <MenuItem value=\"bg\">bg</MenuItem>\n                <MenuItem value=\"cs\">cs</MenuItem>\n                <MenuItem value=\"da-dk\">da-dk</MenuItem>\n                <MenuItem value=\"de\">de</MenuItem>\n                <MenuItem value=\"en-au\">en-au</MenuItem>\n                <MenuItem value=\"en-gb\">en-gb</MenuItem>\n                <MenuItem value=\"es\">es</MenuItem>\n                <MenuItem value=\"fr\">fr</MenuItem>\n                <MenuItem value=\"hu\">hu</MenuItem>\n                <MenuItem value=\"it\">it</MenuItem>\n                <MenuItem value=\"lv\">lv</MenuItem>\n                <MenuItem value=\"no\">no</MenuItem>\n                <MenuItem value=\"pl\">pl</MenuItem>\n                <MenuItem value=\"ru\">ru</MenuItem>\n              </Select>\n            </ListItem>\n          </List>\n          <br />\n          <br />\n          <form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" target=\"_blank\">\n            <input type=\"hidden\" name=\"cmd\" value=\"_s-xclick\" />\n            <input\n              type=\"hidden\"\n              name=\"encrypted\"\n              value=\"-----BEGIN PKCS7-----MIIHRwYJKoZIhvcNAQcEoIIHODCCBzQCAQExggEwMIIBLAIBADCBlDCBjjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQKEwtQYXlQYWwgSW5jLjETMBEGA1UECxQKbGl2ZV9jZXJ0czERMA8GA1UEAxQIbGl2ZV9hcGkxHDAaBgkqhkiG9w0BCQEWDXJlQHBheXBhbC5jb20CAQAwDQYJKoZIhvcNAQEBBQAEgYA2Y2VGE75oWct89z//G2YEJKmzx0uDTXNrpje9ThxmUnBLFZCY+I11Pors7lGRvFqo5okwnu41CfYMPHDxpAgyYyQndMX9pWUX0gLfBMm2BaHwsNBCwt34WmpQqj7TGsQ+aw9NbmkxiJltGnOa+6/gy10mPZAA3HxiieLeCKkGgDELMAkGBSsOAwIaBQAwgcQGCSqGSIb3DQEHATAUBggqhkiG9w0DBwQI72F1YSzHUd2AgaDMekHU3AKT93Ey9wkB3486bV+ngFSD6VOHrPweH9QATsp+PMe9QM9vmq+s2bGtTbZaYrFqM3M97SnQ0l7IQ5yuOzdZhRdfysu5uJ8dnuHUzq4gLSzqMnZ6/3c+PoHB8AS1nYHUVL4U0+ogZsO1s97IAQyfck9SaoFlxVtqQhkb8752MkQJJvGu3ZQSQGcVC4hFDPk8prXqyq4BU/k/EliwoIIDhzCCA4MwggLsoAMCAQICAQAwDQYJKoZIhvcNAQEFBQAwgY4xCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEUMBIGA1UEChMLUGF5UGFsIEluYy4xEzARBgNVBAsUCmxpdmVfY2VydHMxETAPBgNVBAMUCGxpdmVfYXBpMRwwGgYJKoZIhvcNAQkBFg1yZUBwYXlwYWwuY29tMB4XDTA0MDIxMzEwMTMxNVoXDTM1MDIxMzEwMTMxNVowgY4xCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEUMBIGA1UEChMLUGF5UGFsIEluYy4xEzARBgNVBAsUCmxpdmVfY2VydHMxETAPBgNVBAMUCGxpdmVfYXBpMRwwGgYJKoZIhvcNAQkBFg1yZUBwYXlwYWwuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDBR07d/ETMS1ycjtkpkvjXZe9k+6CieLuLsPumsJ7QC1odNz3sJiCbs2wC0nLE0uLGaEtXynIgRqIddYCHx88pb5HTXv4SZeuv0Rqq4+axW9PLAAATU8w04qqjaSXgbGLP3NmohqM6bV9kZZwZLR/klDaQGo1u9uDb9lr4Yn+rBQIDAQABo4HuMIHrMB0GA1UdDgQWBBSWn3y7xm8XvVk/UtcKG+wQ1mSUazCBuwYDVR0jBIGzMIGwgBSWn3y7xm8XvVk/UtcKG+wQ1mSUa6GBlKSBkTCBjjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQKEwtQYXlQYWwgSW5jLjETMBEGA1UECxQKbGl2ZV9jZXJ0czERMA8GA1UEAxQIbGl2ZV9hcGkxHDAaBgkqhkiG9w0BCQEWDXJlQHBheXBhbC5jb22CAQAwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOBgQCBXzpWmoBa5e9fo6ujionW1hUhPkOBakTr3YCDjbYfvJEiv/2P+IobhOGJr85+XHhN0v4gUkEDI8r2/rNk1m0GA8HKddvTjyGw/XqXa+LSTlDYkqI8OwR8GEYj4efEtcRpRYBxV8KxAW93YDWzFGvruKnnLbDAF6VR5w/cCMn5hzGCAZowggGWAgEBMIGUMIGOMQswCQYDVQQGEwJVUzELMAkGA1UECBMCQ0ExFjAUBgNVBAcTDU1vdW50YWluIFZpZXcxFDASBgNVBAoTC1BheVBhbCBJbmMuMRMwEQYDVQQLFApsaXZlX2NlcnRzMREwDwYDVQQDFAhsaXZlX2FwaTEcMBoGCSqGSIb3DQEJARYNcmVAcGF5cGFsLmNvbQIBADAJBgUrDgMCGgUAoF0wGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwNzI1MDExODE2WjAjBgkqhkiG9w0BCQQxFgQUNo8efiZ7sk7nwKM/6B6Z7sU8hIIwDQYJKoZIhvcNAQEBBQAEgYB+JB4vZ/r48815/1HF/xK3+rOx7bPz3kAXmbhW/mkoF4OUbzqMeljvDIA9q/BDdlCLtxFOw9XlftTzv0eZCW/uCIiwu5wTzPIfPY1SI8WHe4cJbP2f2EYxIVs8D7OSirbW4yVa0+gACaLLj0rzIzNN8P/5PxgB03D+jwkcJABqng==-----END PKCS7-----\"\n            />\n            <input\n              type=\"image\"\n              src=\"https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif\"\n              name=\"submit\"\n              alt=\"PayPal - The safer, easier way to pay online!\"\n            />\n          </form>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Box>\n            <Button onClick={() => props.save()}>Save Game</Button>\n            <Button onClick={() => setDeleteOpen(true)}>Delete Game</Button>\n          </Box>\n          <Box>\n            <Tooltip title={<Typography>export</Typography>}>\n              <Button onClick={() => props.export()}>\n                <DownloadIcon color=\"primary\" />\n                Export\n              </Button>\n            </Tooltip>\n            <Tooltip title={<Typography>import</Typography>}>\n              <Button onClick={startImport}>\n                <UploadIcon color=\"primary\" />\n                Import\n                <input ref={importInput} id=\"import-game-file-selector\" type=\"file\" hidden onChange={onImport} />\n              </Button>\n            </Tooltip>\n          </Box>\n          <Box>\n            <Tooltip\n              title={\n                <Typography>\n                  Forcefully kill all active running scripts, in case there is a bug or some unexpected issue with the\n                  game. After using this, save the game and then reload the page. This is different then normal kill in\n                  that normal kill will tell the script to shut down while force kill just removes the references to it\n                  (and it should crash on it's own). This will not remove the files on your computer. Just forcefully\n                  kill all running instance of all scripts.\n                </Typography>\n              }\n            >\n              <Button onClick={() => props.forceKill()}>Force kill all active scripts</Button>\n            </Tooltip>\n          </Box>\n          <Box>\n            <Tooltip\n              title={\n                <Typography>\n                  Perform a soft reset. Resets everything as if you had just purchased an Augmentation.\n                </Typography>\n              }\n            >\n              <Button onClick={() => props.softReset()}>Soft Reset</Button>\n            </Tooltip>\n          </Box>\n          <Box>\n            <Tooltip\n              title={\n                <Typography>\n                  If your save file is extremely big you can use this button to view a map of all the files on every\n                  server. Be careful there might be spoilers.\n                </Typography>\n              }\n            >\n              <Button onClick={() => setDiagnosticOpen(true)}>Diagnose files</Button>\n            </Tooltip>\n            <Button onClick={() => setThemeEditorOpen(true)}>Theme editor</Button>\n          </Box>\n          <Box>\n            <Link href=\"https://github.com/danielyxie/bitburner/issues/new\" target=\"_blank\">\n              <Typography>Report bug</Typography>\n            </Link>\n            <Link href=\"https://bitburner.readthedocs.io/en/latest/changelog.html\" target=\"_blank\">\n              <Typography>Changelog</Typography>\n            </Link>\n            <Link href=\"https://bitburner.readthedocs.io/en/latest/index.html\" target=\"_blank\">\n              <Typography>Documentation</Typography>\n            </Link>\n            <Link href=\"https://discord.gg/TFc3hKD\" target=\"_blank\">\n              <Typography>Discord</Typography>\n            </Link>\n            <Link href=\"https://www.reddit.com/r/bitburner\" target=\"_blank\">\n              <Typography>Reddit</Typography>\n            </Link>\n          </Box>\n        </Grid>\n      </Grid>\n      <FileDiagnosticModal open={diagnosticOpen} onClose={() => setDiagnosticOpen(false)} />\n      <ConfirmationModal\n        onConfirm={() => {\n          setDeleteOpen(false);\n          deleteGame()\n            .then(() => setTimeout(() => location.reload(), 1000))\n            .catch((r) => console.error(`Could not delete game: ${r}`));\n        }}\n        open={deleteGameOpen}\n        onClose={() => setDeleteOpen(false)}\n        confirmationText={\"Really delete your game? (It's permanent!)\"}\n      />\n      <ThemeEditorModal open={themeEditorOpen} onClose={() => setThemeEditorOpen(false)} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { AllServers } from \"../Server/AllServers\";\nimport { Modal } from \"../ui/React/Modal\";\nimport { numeralWrapper } from \"../ui/numeralFormat\";\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n\ninterface IServerProps {\n  ip: string;\n}\n\nfunction ServerAccordion(props: IServerProps): React.ReactElement {\n  const server = AllServers[props.ip];\n  let totalSize = 0;\n  for (const f of server.scripts) {\n    totalSize += f.code.length;\n  }\n\n  for (const f of server.textFiles) {\n    totalSize += f.text.length;\n  }\n\n  if (totalSize === 0) {\n    return <></>;\n  }\n\n  interface File {\n    name: string;\n    size: number;\n  }\n\n  const files: File[] = [];\n\n  for (const f of server.scripts) {\n    files.push({ name: f.filename, size: f.code.length });\n  }\n\n  for (const f of server.textFiles) {\n    files.push({ name: f.fn, size: f.text.length });\n  }\n\n  files.sort((a: File, b: File): number => b.size - a.size);\n\n  return (\n    <Accordion TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography>\n          {server.hostname} ({numeralWrapper.formatBigNumber(totalSize)}b)\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <Typography>Filename</Typography>\n                </TableCell>\n                <TableCell align=\"right\">\n                  <Typography>Size</Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {files.map((file: File) => (\n                <TableRow key={file.name}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Typography>{file.name}</Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography>{numeralWrapper.formatBigNumber(file.size)}b</Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <ul></ul>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport function FileDiagnosticModal(props: IProps): React.ReactElement {\n  const ips: string[] = [];\n  for (const ip of Object.keys(AllServers)) {\n    ips.push(ip);\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <>\n        <Typography>\n          Welcome to the file diagnostic! If your save file is really big it's likely because you have too many\n          text/scripts. This tool can help you narrow down where they are.\n        </Typography>\n        {ips.map((ip: string) => (\n          <ServerAccordion key={ip} ip={ip} />\n        ))}\n      </>\n    </Modal>\n  );\n}\n","import React from \"react\";\nimport { Modal } from \"./Modal\";\n\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  onConfirm: () => void;\n  confirmationText: string;\n}\n\nexport function ConfirmationModal(props: IProps): React.ReactElement {\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <>\n        <Typography>{props.confirmationText}</Typography>\n        <Button\n          onClick={() => {\n            props.onConfirm();\n          }}\n        >\n          Confirm\n        </Button>\n      </>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Modal } from \"./Modal\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ReplyIcon from \"@mui/icons-material/Reply\";\nimport { Color, ColorPicker } from \"material-ui-color\";\nimport { ThemeEvents } from \"./Theme\";\nimport { Settings, defaultSettings } from \"../../Settings/Settings\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n}\n\ninterface IColorEditorProps {\n  name: string;\n  color: string | undefined;\n  onColorChange: (name: string, value: string) => void;\n  defaultColor: string;\n}\n\nfunction ColorEditor({ name, onColorChange, color, defaultColor }: IColorEditorProps): React.ReactElement {\n  if (color === undefined) {\n    console.error(`color ${name} was undefined, reverting to default`);\n    color = defaultColor;\n  }\n\n  return (\n    <>\n      <TextField\n        sx={{ mx: 1 }}\n        label={name}\n        value={color}\n        InputProps={{\n          startAdornment: (\n            <>\n              <ColorPicker\n                hideTextfield\n                value={color}\n                onChange={(newColor: Color) => onColorChange(name, \"#\" + newColor.hex)}\n              />\n            </>\n          ),\n          endAdornment: (\n            <>\n              <IconButton onClick={() => onColorChange(name, defaultColor)}>\n                <ReplyIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ),\n        }}\n      />\n    </>\n  );\n}\n\nexport function ThemeEditorModal(props: IProps): React.ReactElement {\n  const [customTheme, setCustomTheme] = useState<{ [key: string]: string | undefined }>({\n    ...Settings.theme,\n  });\n\n  function onThemeChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    try {\n      const importedTheme = JSON.parse(event.target.value);\n      if (typeof importedTheme !== \"object\") return;\n      setCustomTheme(importedTheme);\n      for (const key of Object.keys(importedTheme)) {\n        Settings.theme[key] = importedTheme[key];\n      }\n      ThemeEvents.emit();\n    } catch (err) {\n      // ignore\n    }\n  }\n\n  function onColorChange(name: string, value: string): void {\n    setCustomTheme((old: any) => {\n      old[name] = value;\n      return old;\n    });\n\n    Settings.theme[name] = value;\n    ThemeEvents.emit();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Button color=\"primary\">primary</Button>\n      <Button color=\"secondary\">secondary</Button>\n      <Button color=\"warning\">warning</Button>\n      <Button color=\"info\">info</Button>\n      <Button color=\"error\">error</Button>\n      <Typography color=\"primary\">primary</Typography>\n      <Typography color=\"secondary\">secondary</Typography>\n      <Typography color=\"warning\">warning</Typography>\n      <Typography color=\"info\">info</Typography>\n      <Typography color=\"error\">error</Typography>\n      <br />\n      <ColorEditor\n        name=\"primarylight\"\n        onColorChange={onColorChange}\n        color={customTheme[\"primarylight\"]}\n        defaultColor={defaultSettings.theme[\"primarylight\"]}\n      />\n      <ColorEditor\n        name=\"primary\"\n        onColorChange={onColorChange}\n        color={customTheme[\"primary\"]}\n        defaultColor={defaultSettings.theme[\"primary\"]}\n      />\n      <ColorEditor\n        name=\"primarydark\"\n        onColorChange={onColorChange}\n        color={customTheme[\"primarydark\"]}\n        defaultColor={defaultSettings.theme[\"primarydark\"]}\n      />\n\n      <br />\n      <ColorEditor\n        name=\"errorlight\"\n        onColorChange={onColorChange}\n        color={customTheme[\"errorlight\"]}\n        defaultColor={defaultSettings.theme[\"errorlight\"]}\n      />\n      <ColorEditor\n        name=\"error\"\n        onColorChange={onColorChange}\n        color={customTheme[\"error\"]}\n        defaultColor={defaultSettings.theme[\"error\"]}\n      />\n      <ColorEditor\n        name=\"errordark\"\n        onColorChange={onColorChange}\n        color={customTheme[\"errordark\"]}\n        defaultColor={defaultSettings.theme[\"errordark\"]}\n      />\n\n      <br />\n      <ColorEditor\n        name=\"secondarylight\"\n        onColorChange={onColorChange}\n        color={customTheme[\"secondarylight\"]}\n        defaultColor={defaultSettings.theme[\"secondarylight\"]}\n      />\n      <ColorEditor\n        name=\"secondary\"\n        onColorChange={onColorChange}\n        color={customTheme[\"secondary\"]}\n        defaultColor={defaultSettings.theme[\"secondary\"]}\n      />\n      <ColorEditor\n        name=\"secondarydark\"\n        onColorChange={onColorChange}\n        color={customTheme[\"secondarydark\"]}\n        defaultColor={defaultSettings.theme[\"secondarydark\"]}\n      />\n\n      <br />\n      <ColorEditor\n        name=\"warninglight\"\n        onColorChange={onColorChange}\n        color={customTheme[\"warninglight\"]}\n        defaultColor={defaultSettings.theme[\"warninglight\"]}\n      />\n      <ColorEditor\n        name=\"warning\"\n        onColorChange={onColorChange}\n        color={customTheme[\"warning\"]}\n        defaultColor={defaultSettings.theme[\"warning\"]}\n      />\n      <ColorEditor\n        name=\"warningdark\"\n        onColorChange={onColorChange}\n        color={customTheme[\"warningdark\"]}\n        defaultColor={defaultSettings.theme[\"warningdark\"]}\n      />\n\n      <br />\n      <ColorEditor\n        name=\"infolight\"\n        onColorChange={onColorChange}\n        color={customTheme[\"infolight\"]}\n        defaultColor={defaultSettings.theme[\"infolight\"]}\n      />\n      <ColorEditor\n        name=\"info\"\n        onColorChange={onColorChange}\n        color={customTheme[\"info\"]}\n        defaultColor={defaultSettings.theme[\"info\"]}\n      />\n      <ColorEditor\n        name=\"infodark\"\n        onColorChange={onColorChange}\n        color={customTheme[\"infodark\"]}\n        defaultColor={defaultSettings.theme[\"infodark\"]}\n      />\n\n      <br />\n      <ColorEditor\n        name=\"welllight\"\n        onColorChange={onColorChange}\n        color={customTheme[\"welllight\"]}\n        defaultColor={defaultSettings.theme[\"welllight\"]}\n      />\n      <ColorEditor\n        name=\"well\"\n        onColorChange={onColorChange}\n        color={customTheme[\"well\"]}\n        defaultColor={defaultSettings.theme[\"well\"]}\n      />\n      <ColorEditor\n        name=\"white\"\n        onColorChange={onColorChange}\n        color={customTheme[\"white\"]}\n        defaultColor={defaultSettings.theme[\"white\"]}\n      />\n      <ColorEditor\n        name=\"black\"\n        onColorChange={onColorChange}\n        color={customTheme[\"black\"]}\n        defaultColor={defaultSettings.theme[\"black\"]}\n      />\n\n      <br />\n      <ColorEditor\n        name=\"hp\"\n        onColorChange={onColorChange}\n        color={customTheme[\"hp\"]}\n        defaultColor={defaultSettings.theme[\"hp\"]}\n      />\n      <ColorEditor\n        name=\"money\"\n        onColorChange={onColorChange}\n        color={customTheme[\"money\"]}\n        defaultColor={defaultSettings.theme[\"money\"]}\n      />\n      <ColorEditor\n        name=\"hack\"\n        onColorChange={onColorChange}\n        color={customTheme[\"hack\"]}\n        defaultColor={defaultSettings.theme[\"hack\"]}\n      />\n      <ColorEditor\n        name=\"combat\"\n        onColorChange={onColorChange}\n        color={customTheme[\"combat\"]}\n        defaultColor={defaultSettings.theme[\"combat\"]}\n      />\n      <ColorEditor\n        name=\"cha\"\n        onColorChange={onColorChange}\n        color={customTheme[\"cha\"]}\n        defaultColor={defaultSettings.theme[\"cha\"]}\n      />\n      <ColorEditor\n        name=\"int\"\n        onColorChange={onColorChange}\n        color={customTheme[\"int\"]}\n        defaultColor={defaultSettings.theme[\"int\"]}\n      />\n      <ColorEditor\n        name=\"rep\"\n        onColorChange={onColorChange}\n        color={customTheme[\"rep\"]}\n        defaultColor={defaultSettings.theme[\"rep\"]}\n      />\n      <ColorEditor\n        name=\"disabled\"\n        onColorChange={onColorChange}\n        color={customTheme[\"disabled\"]}\n        defaultColor={defaultSettings.theme[\"disabled\"]}\n      />\n      <br />\n      <br />\n      <TextField label={\"import / export theme\"} value={JSON.stringify(customTheme)} onChange={onThemeChange} />\n    </Modal>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { SleeveElem } from \"./SleeveElem\";\nimport { FAQModal } from \"./FAQModal\";\nimport { use } from \"../../../ui/Context\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\n\nexport function SleeveRoot(): React.ReactElement {\n  const player = use.Player();\n  const [FAQOpen, setFAQOpen] = useState(false);\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    const id = setInterval(rerender, 200);\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <>\n      <Typography variant=\"h4\">Sleeves</Typography>\n      <Typography>\n        Duplicate Sleeves are MK-V Synthoids (synthetic androids) into which your consciousness has been copied. In\n        other words, these Synthoids contain a perfect duplicate of your mind.\n        <br />\n        <br />\n        Sleeves can be used to perform different tasks synchronously.\n        <br />\n        <br />\n      </Typography>\n\n      <Button onClick={() => setFAQOpen(true)}>FAQ</Button>\n      <Link\n        target=\"_blank\"\n        href=\"https://bitburner.readthedocs.io/en/latest/advancedgameplay/sleeves.html#duplicate-sleeves\"\n      >\n        Documentation\n      </Link>\n      {player.sleeves.map((sleeve, i) => (\n        <SleeveElem key={i} rerender={rerender} sleeve={sleeve} />\n      ))}\n      <FAQModal open={FAQOpen} onClose={() => setFAQOpen(false)} />\n    </>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { Sleeve } from \"../Sleeve\";\nimport { SleeveTaskType } from \"../SleeveTaskTypesEnum\";\n\nimport { CONSTANTS } from \"../../../Constants\";\n\nimport { Crimes } from \"../../../Crime/Crimes\";\n\nimport { numeralWrapper } from \"../../../ui/numeralFormat\";\n\nimport { createProgressBarText } from \"../../../utils/helpers/createProgressBarText\";\n\nimport { SleeveAugmentationsModal } from \"./SleeveAugmentationsModal\";\nimport { TravelModal } from \"./TravelModal\";\nimport { Money } from \"../../../ui/React/Money\";\nimport { MoneyRate } from \"../../../ui/React/MoneyRate\";\nimport { use } from \"../../../ui/Context\";\nimport { ReputationRate } from \"../../../ui/React/ReputationRate\";\nimport { StatsElement } from \"../ui/StatsElement\";\nimport { MoreStatsModal } from \"./MoreStatsModal\";\nimport { MoreEarningsModal } from \"../ui/MoreEarningsModal\";\nimport { TaskSelector } from \"../ui/TaskSelector\";\nimport { FactionWorkType } from \"../../../Faction/FactionWorkTypeEnum\";\nimport { StatsTable } from \"../../../ui/React/StatsTable\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\ninterface IProps {\n  sleeve: Sleeve;\n  rerender: () => void;\n}\n\nexport function SleeveElem(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const [statsOpen, setStatsOpen] = useState(false);\n  const [earningsOpen, setEarningsOpen] = useState(false);\n  const [travelOpen, setTravelOpen] = useState(false);\n  const [augmentationsOpen, setAugmentationsOpen] = useState(false);\n\n  const [abc, setABC] = useState([\"------\", \"------\", \"------\"]);\n\n  function setTask(): void {\n    props.sleeve.resetTaskStatus(); // sets to idle\n    switch (abc[0]) {\n      case \"------\":\n        break;\n      case \"Work for Company\":\n        props.sleeve.workForCompany(player, abc[1]);\n        break;\n      case \"Work for Faction\":\n        props.sleeve.workForFaction(player, abc[1], abc[2]);\n        break;\n      case \"Commit Crime\":\n        props.sleeve.commitCrime(player, abc[1]);\n        break;\n      case \"Take University Course\":\n        props.sleeve.takeUniversityCourse(player, abc[2], abc[1]);\n        break;\n      case \"Workout at Gym\":\n        props.sleeve.workoutAtGym(player, abc[2], abc[1]);\n        break;\n      case \"Shock Recovery\":\n        props.sleeve.shockRecovery(player);\n        break;\n      case \"Synchronize\":\n        props.sleeve.synchronize(player);\n        break;\n      default:\n        console.error(`Invalid/Unrecognized taskValue in setSleeveTask(): ${abc[0]}`);\n    }\n    props.rerender();\n  }\n\n  let desc = <></>;\n  switch (props.sleeve.currentTask) {\n    case SleeveTaskType.Idle:\n      desc = <>This sleeve is currently idle</>;\n      break;\n    case SleeveTaskType.Company:\n      desc = <>This sleeve is currently working your job at {props.sleeve.currentTaskLocation}.</>;\n      break;\n    case SleeveTaskType.Faction: {\n      let doing = \"nothing\";\n      switch (props.sleeve.factionWorkType) {\n        case FactionWorkType.Field:\n          doing = \"Field work\";\n          break;\n        case FactionWorkType.Hacking:\n          doing = \"Hacking contracts\";\n          break;\n        case FactionWorkType.Security:\n          doing = \"Security work\";\n          break;\n      }\n      desc = (\n        <>\n          This sleeve is currently doing {doing} for {props.sleeve.currentTaskLocation}.\n        </>\n      );\n      break;\n    }\n    case SleeveTaskType.Crime:\n      desc = (\n        <>\n          This sleeve is currently attempting to {Crimes[props.sleeve.crimeType].type} (Success Rate:{\" \"}\n          {numeralWrapper.formatPercentage(Crimes[props.sleeve.crimeType].successRate(props.sleeve))}).\n        </>\n      );\n      break;\n    case SleeveTaskType.Class:\n      desc = <>This sleeve is currently studying/taking a course at {props.sleeve.currentTaskLocation}.</>;\n      break;\n    case SleeveTaskType.Gym:\n      desc = <>This sleeve is currently working out at {props.sleeve.currentTaskLocation}.</>;\n      break;\n    case SleeveTaskType.Recovery:\n      desc = (\n        <>\n          This sleeve is currently set to focus on shock recovery. This causes the Sleeve's shock to decrease at a\n          faster rate.\n        </>\n      );\n      break;\n    case SleeveTaskType.Synchro:\n      desc = (\n        <>\n          This sleeve is currently set to synchronize with the original consciousness. This causes the Sleeve's\n          synchronization to increase.\n        </>\n      );\n      break;\n    default:\n      console.error(`Invalid/Unrecognized taskValue in updateSleeveTaskDescription(): ${abc[0]}`);\n  }\n\n  let data: any[][] = [];\n  if (props.sleeve.currentTask === SleeveTaskType.Crime) {\n    data = [\n      [`Money`, <Money money={parseFloat(props.sleeve.currentTaskLocation)} />, `(on success)`],\n      [`Hacking Exp`, numeralWrapper.formatExp(props.sleeve.gainRatesForTask.hack), `(2x on success)`],\n      [`Strength Exp`, numeralWrapper.formatExp(props.sleeve.gainRatesForTask.str), `(2x on success)`],\n      [`Defense Exp`, numeralWrapper.formatExp(props.sleeve.gainRatesForTask.def), `(2x on success)`],\n      [`Dexterity Exp`, numeralWrapper.formatExp(props.sleeve.gainRatesForTask.dex), `(2x on success)`],\n      [`Agility Exp`, numeralWrapper.formatExp(props.sleeve.gainRatesForTask.agi), `(2x on success)`],\n      [`Charisma Exp`, numeralWrapper.formatExp(props.sleeve.gainRatesForTask.cha), `(2x on success)`],\n    ];\n  } else {\n    data = [\n      [`Money:`, <MoneyRate money={5 * props.sleeve.gainRatesForTask.money} />],\n      [`Hacking Exp:`, `${numeralWrapper.formatExp(5 * props.sleeve.gainRatesForTask.hack)} / s`],\n      [`Strength Exp:`, `${numeralWrapper.formatExp(5 * props.sleeve.gainRatesForTask.str)} / s`],\n      [`Defense Exp:`, `${numeralWrapper.formatExp(5 * props.sleeve.gainRatesForTask.def)} / s`],\n      [`Dexterity Exp:`, `${numeralWrapper.formatExp(5 * props.sleeve.gainRatesForTask.dex)} / s`],\n      [`Agility Exp:`, `${numeralWrapper.formatExp(5 * props.sleeve.gainRatesForTask.agi)} / s`],\n      [`Charisma Exp:`, `${numeralWrapper.formatExp(5 * props.sleeve.gainRatesForTask.cha)} / s`],\n    ];\n    if (props.sleeve.currentTask === SleeveTaskType.Company || props.sleeve.currentTask === SleeveTaskType.Faction) {\n      const repGain: number = props.sleeve.getRepGain(player);\n      data.push([`Reputation:`, <ReputationRate reputation={5 * repGain} />]);\n    }\n  }\n\n  return (\n    <>\n      <Grid container component={Paper}>\n        <Grid item xs={3}>\n          <StatsElement sleeve={props.sleeve} />\n          <Button onClick={() => setStatsOpen(true)}>More Stats</Button>\n          <Tooltip title={player.money.lt(CONSTANTS.TravelCost) ? <Typography>Insufficient funds</Typography> : \"\"}>\n            <span>\n              <Button onClick={() => setTravelOpen(true)} disabled={player.money.lt(CONSTANTS.TravelCost)}>\n                Travel\n              </Button>\n            </span>\n          </Tooltip>\n          <Tooltip\n            title={props.sleeve.shock < 100 ? <Typography>Unlocked when sleeve has fully recovered</Typography> : \"\"}\n          >\n            <span>\n              <Button onClick={() => setAugmentationsOpen(true)} disabled={props.sleeve.shock < 100}>\n                Manage Augmentations\n              </Button>\n            </span>\n          </Tooltip>\n        </Grid>\n        <Grid item xs={5}>\n          <TaskSelector player={player} sleeve={props.sleeve} setABC={setABC} />\n          <Typography>{desc}</Typography>\n          <Typography>\n            {props.sleeve.currentTask === SleeveTaskType.Crime &&\n              createProgressBarText({\n                progress: props.sleeve.currentTaskTime / props.sleeve.currentTaskMaxTime,\n                totalTicks: 25,\n              })}\n          </Typography>\n          <Button onClick={setTask}>Set Task</Button>\n        </Grid>\n        <Grid item xs={4}>\n          <StatsTable title=\"Earnings (Pre-Synchronization)\" rows={data} />\n          <Button onClick={() => setEarningsOpen(true)}>More Earnings Info</Button>\n        </Grid>\n      </Grid>\n      <MoreStatsModal open={statsOpen} onClose={() => setStatsOpen(false)} sleeve={props.sleeve} />\n      <MoreEarningsModal open={earningsOpen} onClose={() => setEarningsOpen(false)} sleeve={props.sleeve} />\n      <TravelModal\n        open={travelOpen}\n        onClose={() => setTravelOpen(false)}\n        sleeve={props.sleeve}\n        rerender={props.rerender}\n      />\n      <SleeveAugmentationsModal\n        open={augmentationsOpen}\n        onClose={() => setAugmentationsOpen(false)}\n        sleeve={props.sleeve}\n      />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Sleeve } from \"../Sleeve\";\nimport { findSleevePurchasableAugs } from \"../SleeveHelpers\";\nimport { Augmentations } from \"../../../Augmentation/Augmentations\";\nimport { Augmentation } from \"../../../Augmentation/Augmentation\";\nimport { Money } from \"../../../ui/React/Money\";\nimport { Modal } from \"../../../ui/React/Modal\";\nimport { use } from \"../../../ui/Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport TableBody from \"@mui/material/TableBody\";\nimport Table from \"@mui/material/Table\";\nimport { TableCell } from \"../../../ui/React/Table\";\nimport TableRow from \"@mui/material/TableRow\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  sleeve: Sleeve;\n}\n\nexport function SleeveAugmentationsModal(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    const id = setInterval(rerender, 150);\n    return () => clearInterval(id);\n  }, []);\n\n  // Array of all owned Augmentations. Names only\n  const ownedAugNames = props.sleeve.augmentations.map((e) => e.name);\n\n  // You can only purchase Augmentations that are actually available from\n  // your factions. I.e. you must be in a faction that has the Augmentation\n  // and you must also have enough rep in that faction in order to purchase it.\n  const availableAugs = findSleevePurchasableAugs(props.sleeve, player);\n\n  function purchaseAugmentation(aug: Augmentation): void {\n    props.sleeve.tryBuyAugmentation(player, aug);\n    rerender();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <>\n        <Typography>\n          You can purchase Augmentations for your Duplicate Sleeves. These Augmentations have the same effect as they\n          would for you. You can only purchase Augmentations that you have unlocked through Factions.\n          <br />\n          <br />\n          When purchasing an Augmentation for a Duplicate Sleeve, they are immediately installed. This means that the\n          Duplicate Sleeve will immediately lose all of its stat experience.\n        </Typography>\n        <Table size=\"small\" padding=\"none\">\n          <TableBody>\n            {availableAugs.map((aug) => {\n              return (\n                <TableRow key={aug.name}>\n                  <TableCell>\n                    <Button onClick={() => purchaseAugmentation(aug)} disabled={player.money.lt(aug.startingCost)}>\n                      Buy\n                    </Button>\n                  </TableCell>\n                  <TableCell>\n                    <Box display=\"flex\">\n                      <Tooltip title={aug.stats || \"\"}>\n                        <Typography>{aug.name}</Typography>\n                      </Tooltip>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    <Money money={aug.startingCost} player={player} />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n\n        {ownedAugNames.length > 0 && (\n          <>\n            <Typography>Owned Augmentations:</Typography>\n            {ownedAugNames.map((augName) => {\n              const aug = Augmentations[augName];\n              let tooltip = <></>;\n              if (typeof aug.info === \"string\") {\n                tooltip = (\n                  <>\n                    <span>{aug.info}</span>\n                    <br />\n                    <br />\n                    {aug.stats}\n                  </>\n                );\n              } else {\n                tooltip = (\n                  <>\n                    {aug.info}\n                    <br />\n                    <br />\n                    {aug.stats}\n                  </>\n                );\n              }\n\n              return (\n                <Tooltip key={augName} title={<Typography>{tooltip}</Typography>}>\n                  <Paper>\n                    <Typography>{augName}</Typography>\n                  </Paper>\n                </Tooltip>\n              );\n            })}\n          </>\n        )}\n      </>\n    </Modal>\n  );\n}\n","import React from \"react\";\nimport { Sleeve } from \"../Sleeve\";\nimport { CONSTANTS } from \"../../../Constants\";\nimport { Money } from \"../../../ui/React/Money\";\nimport { WorldMap } from \"../../../ui/React/WorldMap\";\nimport { CityName } from \"../../../Locations/data/CityNames\";\nimport { Settings } from \"../../../Settings/Settings\";\nimport { dialogBoxCreate } from \"../../../ui/React/DialogBox\";\nimport { use } from \"../../../ui/Context\";\nimport { Modal } from \"../../../ui/React/Modal\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  sleeve: Sleeve;\n  rerender: () => void;\n}\n\nexport function TravelModal(props: IProps): React.ReactElement {\n  const player = use.Player();\n  function travel(city: string): void {\n    if (!player.canAfford(CONSTANTS.TravelCost)) {\n      dialogBoxCreate(\"You cannot afford to have this sleeve travel to another city\");\n    }\n    props.sleeve.city = city as CityName;\n    player.loseMoney(CONSTANTS.TravelCost);\n    props.sleeve.resetTaskStatus();\n    props.rerender();\n    props.onClose();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <>\n        <Typography>\n          Have this sleeve travel to a different city. This affects the gyms and universities at which this sleeve can\n          study. Traveling to a different city costs <Money money={CONSTANTS.TravelCost} player={player} />. It will\n          also set your current sleeve task to idle.\n        </Typography>\n        {Settings.DisableASCIIArt ? (\n          Object.values(CityName).map((city: CityName) => (\n            <Button key={city} onClick={() => travel(city)}>\n              {city}\n            </Button>\n          ))\n        ) : (\n          <WorldMap currentCity={props.sleeve.city} onTravel={(city: CityName) => travel(city)} />\n        )}\n      </>\n    </Modal>\n  );\n}\n","import { Sleeve } from \"../Sleeve\";\nimport { numeralWrapper } from \"../../../ui/numeralFormat\";\nimport React from \"react\";\n\nimport { StatsTable } from \"../../../ui/React/StatsTable\";\n\ninterface IProps {\n  sleeve: Sleeve;\n}\n\nexport function StatsElement(props: IProps): React.ReactElement {\n  const rows = [\n    [\n      \"HP: \",\n      <>\n        {numeralWrapper.formatHp(props.sleeve.hp)} / {numeralWrapper.formatHp(props.sleeve.max_hp)}\n      </>,\n    ],\n    [\"City: \", <>{props.sleeve.city}</>],\n    [\"Hacking: \", <>{numeralWrapper.formatSkill(props.sleeve.hacking_skill)}</>],\n    [\"Strength: \", <>{numeralWrapper.formatSkill(props.sleeve.strength)}</>],\n    [\"Defense: \", <>{numeralWrapper.formatSkill(props.sleeve.defense)}</>],\n    [\"Dexterity: \", <>{numeralWrapper.formatSkill(props.sleeve.dexterity)}</>],\n    [\"Agility: \", <>{numeralWrapper.formatSkill(props.sleeve.agility)}</>],\n    [\"Charisma: \", <>{numeralWrapper.formatSkill(props.sleeve.charisma)}</>],\n    [\"Shock: \", <>{numeralWrapper.formatSleeveShock(100 - props.sleeve.shock)}</>],\n    [\"Sync: \", <>{numeralWrapper.formatSleeveSynchro(props.sleeve.sync)}</>],\n    [\"Memory: \", <>{numeralWrapper.formatSleeveMemory(props.sleeve.memory)}</>],\n  ];\n  return <StatsTable rows={rows} />;\n}\n","import { Sleeve } from \"../Sleeve\";\nimport { numeralWrapper } from \"../../../ui/numeralFormat\";\nimport { StatsTable } from \"../../../ui/React/StatsTable\";\nimport { Modal } from \"../../../ui/React/Modal\";\nimport React from \"react\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  sleeve: Sleeve;\n}\n\nexport function MoreStatsModal(props: IProps): React.ReactElement {\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <StatsTable\n        rows={[\n          [\n            <>Hacking:&nbsp;</>,\n            props.sleeve.hacking_skill,\n            <>&nbsp;({numeralWrapper.formatExp(props.sleeve.hacking_exp)} exp)</>,\n          ],\n          [\n            <>Strength:&nbsp;</>,\n            props.sleeve.strength,\n            <>&nbsp;({numeralWrapper.formatExp(props.sleeve.strength_exp)} exp)</>,\n          ],\n          [\n            <>Defense:&nbsp;</>,\n            props.sleeve.defense,\n            <>&nbsp;({numeralWrapper.formatExp(props.sleeve.defense_exp)} exp)</>,\n          ],\n          [\n            <>Dexterity:&nbsp;</>,\n            props.sleeve.dexterity,\n            <>&nbsp;({numeralWrapper.formatExp(props.sleeve.dexterity_exp)} exp)</>,\n          ],\n          [\n            <>Agility:&nbsp;</>,\n            props.sleeve.agility,\n            <>&nbsp;({numeralWrapper.formatExp(props.sleeve.agility_exp)} exp)</>,\n          ],\n          [\n            <>Charisma:&nbsp;</>,\n            props.sleeve.charisma,\n            <>&nbsp;({numeralWrapper.formatExp(props.sleeve.charisma_exp)} exp)</>,\n          ],\n        ]}\n        title=\"Stats:\"\n      />\n      <br />\n      <StatsTable\n        rows={[\n          [<>Hacking Level multiplier:&nbsp;</>, numeralWrapper.formatPercentage(props.sleeve.hacking_mult)],\n          [<>Hacking Experience multiplier:&nbsp;</>, numeralWrapper.formatPercentage(props.sleeve.hacking_exp_mult)],\n          [<>Strength Level multiplier:&nbsp;</>, numeralWrapper.formatPercentage(props.sleeve.strength_mult)],\n          [<>Strength Experience multiplier:&nbsp;</>, numeralWrapper.formatPercentage(props.sleeve.strength_exp_mult)],\n          [<>Defense Level multiplier:&nbsp;</>, numeralWrapper.formatPercentage(props.sleeve.defense_mult)],\n          [<>Defense Experience multiplier:&nbsp;</>, numeralWrapper.formatPercentage(props.sleeve.defense_exp_mult)],\n          [<>Dexterity Level multiplier:&nbsp;</>, numeralWrapper.formatPercentage(props.sleeve.dexterity_mult)],\n          [\n            <>Dexterity Experience multiplier:&nbsp;</>,\n            numeralWrapper.formatPercentage(props.sleeve.dexterity_exp_mult),\n          ],\n          [<>Agility Level multiplier:&nbsp;</>, numeralWrapper.formatPercentage(props.sleeve.agility_mult)],\n          [<>Agility Experience multiplier:&nbsp;</>, numeralWrapper.formatPercentage(props.sleeve.agility_exp_mult)],\n          [<>Charisma Level multiplier:&nbsp;</>, numeralWrapper.formatPercentage(props.sleeve.charisma_mult)],\n          [<>Charisma Experience multiplier:&nbsp;</>, numeralWrapper.formatPercentage(props.sleeve.charisma_exp_mult)],\n          [\n            <>Faction Reputation Gain multiplier:&nbsp;</>,\n            numeralWrapper.formatPercentage(props.sleeve.faction_rep_mult),\n          ],\n          [\n            <>Company Reputation Gain multiplier:&nbsp;</>,\n            numeralWrapper.formatPercentage(props.sleeve.company_rep_mult),\n          ],\n          [<>Salary multiplier:&nbsp;</>, numeralWrapper.formatPercentage(props.sleeve.work_money_mult)],\n          [<>Crime Money multiplier:&nbsp;</>, numeralWrapper.formatPercentage(props.sleeve.crime_money_mult)],\n          [<>Crime Success multiplier:&nbsp;</>, numeralWrapper.formatPercentage(props.sleeve.crime_success_mult)],\n        ]}\n        title=\"Multipliers:\"\n      />\n    </Modal>\n  );\n}\n","import { Sleeve } from \"../Sleeve\";\nimport { numeralWrapper } from \"../../../ui/numeralFormat\";\nimport { Money } from \"../../../ui/React/Money\";\nimport * as React from \"react\";\nimport { StatsTable } from \"../../../ui/React/StatsTable\";\nimport { Modal } from \"../../../ui/React/Modal\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  sleeve: Sleeve;\n}\n\nexport function MoreEarningsModal(props: IProps): React.ReactElement {\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <StatsTable\n        rows={[\n          [\"Money \", <Money money={props.sleeve.earningsForTask.money} />],\n          [\"Hacking Exp \", numeralWrapper.formatExp(props.sleeve.earningsForTask.hack)],\n          [\"Strength Exp \", numeralWrapper.formatExp(props.sleeve.earningsForTask.str)],\n          [\"Defense Exp \", numeralWrapper.formatExp(props.sleeve.earningsForTask.def)],\n          [\"Dexterity Exp \", numeralWrapper.formatExp(props.sleeve.earningsForTask.dex)],\n          [\"Agility Exp \", numeralWrapper.formatExp(props.sleeve.earningsForTask.agi)],\n          [\"Charisma Exp \", numeralWrapper.formatExp(props.sleeve.earningsForTask.cha)],\n        ]}\n        title=\"Earnings for Current Task:\"\n      />\n      <br />\n      <StatsTable\n        rows={[\n          [\"Money: \", <Money money={props.sleeve.earningsForPlayer.money} />],\n          [\"Hacking Exp: \", numeralWrapper.formatExp(props.sleeve.earningsForPlayer.hack)],\n          [\"Strength Exp: \", numeralWrapper.formatExp(props.sleeve.earningsForPlayer.str)],\n          [\"Defense Exp: \", numeralWrapper.formatExp(props.sleeve.earningsForPlayer.def)],\n          [\"Dexterity Exp: \", numeralWrapper.formatExp(props.sleeve.earningsForPlayer.dex)],\n          [\"Agility Exp: \", numeralWrapper.formatExp(props.sleeve.earningsForPlayer.agi)],\n          [\"Charisma Exp: \", numeralWrapper.formatExp(props.sleeve.earningsForPlayer.cha)],\n        ]}\n        title=\"Total Earnings for Host Consciousness:\"\n      />\n      <br />\n      <StatsTable\n        rows={[\n          [\"Money: \", <Money money={props.sleeve.earningsForSleeves.money} />],\n          [\"Hacking Exp: \", numeralWrapper.formatExp(props.sleeve.earningsForSleeves.hack)],\n          [\"Strength Exp: \", numeralWrapper.formatExp(props.sleeve.earningsForSleeves.str)],\n          [\"Defense Exp: \", numeralWrapper.formatExp(props.sleeve.earningsForSleeves.def)],\n          [\"Dexterity Exp: \", numeralWrapper.formatExp(props.sleeve.earningsForSleeves.dex)],\n          [\"Agility Exp: \", numeralWrapper.formatExp(props.sleeve.earningsForSleeves.agi)],\n          [\"Charisma Exp: \", numeralWrapper.formatExp(props.sleeve.earningsForSleeves.cha)],\n        ]}\n        title=\"Total Earnings for Other Sleeves:\"\n      />\n      <br />\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Sleeve } from \"../Sleeve\";\nimport { IPlayer } from \"../../IPlayer\";\nimport { SleeveTaskType } from \"../SleeveTaskTypesEnum\";\nimport { Crimes } from \"../../../Crime/Crimes\";\nimport { LocationName } from \"../../../Locations/data/LocationNames\";\nimport { CityName } from \"../../../Locations/data/CityNames\";\nimport { Factions } from \"../../../Faction/Factions\";\nimport { FactionWorkType } from \"../../../Faction/FactionWorkTypeEnum\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nconst universitySelectorOptions: string[] = [\n  \"Study Computer Science\",\n  \"Data Structures\",\n  \"Networks\",\n  \"Algorithms\",\n  \"Management\",\n  \"Leadership\",\n];\n\nconst gymSelectorOptions: string[] = [\"Train Strength\", \"Train Defense\", \"Train Dexterity\", \"Train Agility\"];\n\ninterface IProps {\n  sleeve: Sleeve;\n  player: IPlayer;\n  setABC: (abc: string[]) => void;\n}\n\ninterface ITaskDetails {\n  first: string[];\n  second: (s1: string) => string[];\n}\n\nfunction possibleJobs(player: IPlayer, sleeve: Sleeve): string[] {\n  // Array of all companies that other sleeves are working at\n  const forbiddenCompanies = [];\n  for (const otherSleeve of player.sleeves) {\n    if (sleeve === otherSleeve) {\n      continue;\n    }\n    if (otherSleeve.currentTask === SleeveTaskType.Company) {\n      forbiddenCompanies.push(otherSleeve.currentTaskLocation);\n    }\n  }\n  const allJobs: string[] = Object.keys(player.jobs);\n  for (let i = 0; i < allJobs.length; ++i) {\n    if (!forbiddenCompanies.includes(allJobs[i])) {\n      allJobs[i];\n    }\n  }\n\n  return allJobs;\n}\n\nfunction possibleFactions(player: IPlayer, sleeve: Sleeve): string[] {\n  // Array of all factions that other sleeves are working for\n  const forbiddenFactions = [\"Bladeburners\"];\n  if (player.gang) {\n    forbiddenFactions.push(player.gang.facName);\n  }\n  for (const otherSleeve of player.sleeves) {\n    if (sleeve === otherSleeve) {\n      continue;\n    }\n    if (otherSleeve.currentTask === SleeveTaskType.Faction) {\n      forbiddenFactions.push(otherSleeve.currentTaskLocation);\n    }\n  }\n\n  const factions = [];\n  for (const fac of player.factions) {\n    if (!forbiddenFactions.includes(fac)) {\n      factions.push(fac);\n    }\n  }\n\n  return factions;\n}\n\nconst tasks: {\n  [key: string]: undefined | ((player: IPlayer, sleeve: Sleeve) => ITaskDetails);\n  [\"------\"]: (player: IPlayer, sleeve: Sleeve) => ITaskDetails;\n  [\"Work for Company\"]: (player: IPlayer, sleeve: Sleeve) => ITaskDetails;\n  [\"Work for Faction\"]: (player: IPlayer, sleeve: Sleeve) => ITaskDetails;\n  [\"Commit Crime\"]: (player: IPlayer, sleeve: Sleeve) => ITaskDetails;\n  [\"Take University Course\"]: (player: IPlayer, sleeve: Sleeve) => ITaskDetails;\n  [\"Workout at Gym\"]: (player: IPlayer, sleeve: Sleeve) => ITaskDetails;\n  [\"Shock Recovery\"]: (player: IPlayer, sleeve: Sleeve) => ITaskDetails;\n  [\"Synchronize\"]: (player: IPlayer, sleeve: Sleeve) => ITaskDetails;\n} = {\n  \"------\": (): ITaskDetails => {\n    return { first: [\"------\"], second: () => [\"------\"] };\n  },\n  \"Work for Company\": (player: IPlayer, sleeve: Sleeve): ITaskDetails => {\n    let jobs = possibleJobs(player, sleeve);\n\n    if (jobs.length === 0) jobs = [\"------\"];\n    return { first: jobs, second: () => [\"------\"] };\n  },\n  \"Work for Faction\": (player: IPlayer, sleeve: Sleeve): ITaskDetails => {\n    let factions = possibleFactions(player, sleeve);\n    if (factions.length === 0) factions = [\"------\"];\n\n    return {\n      first: factions,\n      second: (s1: string) => {\n        const faction = Factions[s1];\n        const facInfo = faction.getInfo();\n        const options: string[] = [];\n        if (facInfo.offerHackingWork) {\n          options.push(\"Hacking Contracts\");\n        }\n        if (facInfo.offerFieldWork) {\n          options.push(\"Field Work\");\n        }\n        if (facInfo.offerSecurityWork) {\n          options.push(\"Security Work\");\n        }\n        return options;\n      },\n    };\n  },\n  \"Commit Crime\": (): ITaskDetails => {\n    return { first: Object.keys(Crimes), second: () => [\"------\"] };\n  },\n  \"Take University Course\": (player: IPlayer, sleeve: Sleeve): ITaskDetails => {\n    let universities: string[] = [];\n    switch (sleeve.city) {\n      case CityName.Aevum:\n        universities = [LocationName.AevumSummitUniversity];\n        break;\n      case CityName.Sector12:\n        universities = [LocationName.Sector12RothmanUniversity];\n        break;\n      case CityName.Volhaven:\n        universities = [LocationName.VolhavenZBInstituteOfTechnology];\n        break;\n      default:\n        universities = [\"No university available in city!\"];\n        break;\n    }\n\n    return { first: universitySelectorOptions, second: () => universities };\n  },\n  \"Workout at Gym\": (player: IPlayer, sleeve: Sleeve): ITaskDetails => {\n    let gyms: string[] = [];\n    switch (sleeve.city) {\n      case CityName.Aevum:\n        gyms = [LocationName.AevumCrushFitnessGym, LocationName.AevumSnapFitnessGym];\n        break;\n      case CityName.Sector12:\n        gyms = [LocationName.Sector12IronGym, LocationName.Sector12PowerhouseGym];\n        break;\n      case CityName.Volhaven:\n        gyms = [LocationName.VolhavenMilleniumFitnessGym];\n        break;\n      default:\n        gyms = [\"No gym available in city!\"];\n        break;\n    }\n\n    return { first: gymSelectorOptions, second: () => gyms };\n  },\n  \"Shock Recovery\": (): ITaskDetails => {\n    return { first: [\"------\"], second: () => [\"------\"] };\n  },\n  Synchronize: (): ITaskDetails => {\n    return { first: [\"------\"], second: () => [\"------\"] };\n  },\n};\n\nconst canDo: {\n  [key: string]: undefined | ((player: IPlayer, sleeve: Sleeve) => boolean);\n  [\"------\"]: (player: IPlayer, sleeve: Sleeve) => boolean;\n  [\"Work for Company\"]: (player: IPlayer, sleeve: Sleeve) => boolean;\n  [\"Work for Faction\"]: (player: IPlayer, sleeve: Sleeve) => boolean;\n  [\"Commit Crime\"]: (player: IPlayer, sleeve: Sleeve) => boolean;\n  [\"Take University Course\"]: (player: IPlayer, sleeve: Sleeve) => boolean;\n  [\"Workout at Gym\"]: (player: IPlayer, sleeve: Sleeve) => boolean;\n  [\"Shock Recovery\"]: (player: IPlayer, sleeve: Sleeve) => boolean;\n  [\"Synchronize\"]: (player: IPlayer, sleeve: Sleeve) => boolean;\n} = {\n  \"------\": () => true,\n  \"Work for Company\": (player: IPlayer, sleeve: Sleeve) => possibleJobs(player, sleeve).length > 0,\n  \"Work for Faction\": (player: IPlayer, sleeve: Sleeve) => possibleFactions(player, sleeve).length > 0,\n  \"Commit Crime\": () => true,\n  \"Take University Course\": (player: IPlayer, sleeve: Sleeve) =>\n    [CityName.Aevum, CityName.Sector12, CityName.Volhaven].includes(sleeve.city),\n  \"Workout at Gym\": (player: IPlayer, sleeve: Sleeve) =>\n    [CityName.Aevum, CityName.Sector12, CityName.Volhaven].includes(sleeve.city),\n  \"Shock Recovery\": (player: IPlayer, sleeve: Sleeve) => sleeve.shock < 100,\n  Synchronize: (player: IPlayer, sleeve: Sleeve) => sleeve.sync < 100,\n};\n\nfunction getABC(sleeve: Sleeve): [string, string, string] {\n  switch (sleeve.currentTask) {\n    case SleeveTaskType.Idle:\n      return [\"------\", \"------\", \"------\"];\n    case SleeveTaskType.Company:\n      return [\"Work for Company\", sleeve.currentTaskLocation, \"------\"];\n    case SleeveTaskType.Faction: {\n      let workType = \"\";\n      switch (sleeve.factionWorkType) {\n        case FactionWorkType.Hacking:\n          workType = \"Hacking Contracts\";\n          break;\n        case FactionWorkType.Field:\n          workType = \"Field Work\";\n          break;\n        case FactionWorkType.Security:\n          workType = \"Security Work\";\n          break;\n      }\n      return [\"Work for Faction\", sleeve.currentTaskLocation, workType];\n    }\n    case SleeveTaskType.Crime:\n      return [\"Commit Crime\", sleeve.crimeType, \"------\"];\n    case SleeveTaskType.Class:\n      return [\"Take University Course\", sleeve.className, sleeve.currentTaskLocation];\n    case SleeveTaskType.Gym:\n      return [\"Workout at Gym\", sleeve.gymStatType, sleeve.currentTaskLocation];\n    case SleeveTaskType.Recovery:\n      return [\"Shock Recovery\", \"------\", \"------\"];\n    case SleeveTaskType.Synchro:\n      return [\"Synchronize\", \"------\", \"------\"];\n  }\n}\n\nexport function TaskSelector(props: IProps): React.ReactElement {\n  const abc = getABC(props.sleeve);\n  const [s0, setS0] = useState(abc[0]);\n  const [s1, setS1] = useState(abc[1]);\n  const [s2, setS2] = useState(abc[2]);\n\n  const validActions = Object.keys(canDo).filter((k) =>\n    (canDo[k] as (player: IPlayer, sleeve: Sleeve) => boolean)(props.player, props.sleeve),\n  );\n\n  const detailsF = tasks[s0];\n  if (detailsF === undefined) throw new Error(`No function for task '${s0}'`);\n  const details = detailsF(props.player, props.sleeve);\n  const details2 = details.second(s1);\n\n  if (details.first.length > 0 && !details.first.includes(s1)) {\n    setS1(details.first[0]);\n    props.setABC([s0, details.first[0], s2]);\n  }\n  if (details2.length > 0 && !details2.includes(s2)) {\n    setS2(details2[0]);\n    props.setABC([s0, s1, details2[0]]);\n  }\n\n  function onS0Change(event: SelectChangeEvent<string>): void {\n    const n = event.target.value;\n    const detailsF = tasks[n];\n    if (detailsF === undefined) throw new Error(`No function for task '${s0}'`);\n    const details = detailsF(props.player, props.sleeve);\n    const details2 = details.second(details.first[0]);\n    setS2(details2[0]);\n    setS1(details.first[0]);\n    setS0(n);\n    props.setABC([n, details.first[0], details2[0]]);\n  }\n\n  function onS1Change(event: SelectChangeEvent<string>): void {\n    setS1(event.target.value);\n    props.setABC([s0, event.target.value, s2]);\n  }\n\n  function onS2Change(event: SelectChangeEvent<string>): void {\n    setS2(event.target.value);\n    props.setABC([s0, s1, event.target.value]);\n  }\n\n  return (\n    <>\n      <Select onChange={onS0Change} value={s0}>\n        {validActions.map((task) => (\n          <MenuItem key={task} value={task}>\n            {task}\n          </MenuItem>\n        ))}\n      </Select>\n      {!(details.first.length === 1 && details.first[0] === \"------\") && (\n        <>\n          <br />\n          <Select onChange={onS1Change} value={s1}>\n            {details.first.map((detail) => (\n              <MenuItem key={detail} value={detail}>\n                {detail}\n              </MenuItem>\n            ))}\n          </Select>\n        </>\n      )}\n      {!(details2.length === 1 && details2[0] === \"------\") && (\n        <>\n          <br />\n          <Select onChange={onS2Change} value={s2}>\n            {details2.map((detail) => (\n              <MenuItem key={detail} value={detail}>\n                {detail}\n              </MenuItem>\n            ))}\n          </Select>\n        </>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { Modal } from \"../../../ui/React/Modal\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport function FAQModal({ open, onClose }: IProps): React.ReactElement {\n  return (\n    <Modal open={open} onClose={onClose}>\n      <>\n        <Typography variant=\"h4\">How do Duplicate Sleeves work?</Typography>\n        <br />\n        <Typography>\n          Duplicate Sleeves are essentially clones. You can use them to perform any work type action, such as working\n          for a company/faction or committing a crime. Having sleeves perform these tasks earns you money, experience,\n          and reputation.\n        </Typography>\n        <br />\n        <br />\n        <Typography>\n          Sleeves are their own individuals, which means they each have their own experience and stats.\n        </Typography>\n        <br />\n        <br />\n        <Typography>\n          When a sleeve earns experience, it earns experience for itself, the player's original 'consciousness', as well\n          as all of the player's other sleeves.\n        </Typography>\n        <br />\n        <br />\n        <Typography variant=\"h4\">What is Synchronization (Sync)?</Typography>\n        <br />\n        <Typography>\n          Synchronization is a measure of how aligned your consciousness is with that of your Duplicate Sleeves. It is a\n          numerical value between 1 and 100, and it affects how much experience is earned when the sleeve is performing\n          a task.\n        </Typography>\n        <br />\n        <br />\n        <Typography>\n          Let N be the sleeve's synchronization. When the sleeve earns experience by performing a task, both the sleeve\n          and the player's original host consciousness earn N% of the amount of experience normally earned by the task.\n          All of the player's other sleeves earn ((N/100)^2 * 100)% of the experience.\n        </Typography>\n        <br />\n        <br />\n        <Typography>Synchronization can be increased by assigning sleeves to the 'Synchronize' task.</Typography>\n        <br />\n        <br />\n        <Typography variant=\"h4\">What is Shock?</Typography>\n        <br />\n        <Typography>\n          Sleeve shock is a measure of how much trauma the sleeve has due to being placed in a new body. It is a\n          numerical value between 0 and 99, where 99 indicates full shock and 0 indicates no shock. Shock affects the\n          amount of experience earned by the sleeve.\n        </Typography>\n        <br />\n        <br />\n        <Typography>\n          Sleeve shock slowly decreases over time. You can further increase the rate at which it decreases by assigning\n          sleeves to the 'Shock Recovery' task.\n        </Typography>\n        <br />\n        <br />\n        <Typography variant=\"h4\">Why can't I work for this company or faction?</Typography>\n        <br />\n        <Typography>\n          Only one of your sleeves can work for a given company/faction a time. To clarify further, if you have two\n          sleeves they can work for two different companies, but they cannot both work for the same company.\n        </Typography>\n        <br />\n        <br />\n        <Typography variant=\"h4\">Why did my Sleeve stop working?</Typography>\n        <br />\n        <Typography>\n          Sleeves are subject to the same time restrictions as you. This means that they automatically stop working at a\n          company after 8 hours, and stop working for a faction after 20 hours.\n        </Typography>\n        <br />\n        <br />\n        <Typography variant=\"h4\">How do I buy Augmentations for my Sleeves?</Typography>\n        <br />\n        <Typography>Your Sleeve needs to have a Shock of 0 in order for you to buy Augmentations for it.</Typography>\n        <br />\n        <br />\n        <Typography variant=\"h4\">Why can't I buy the X Augmentation for my sleeve?</Typography>\n        <br />\n        <Typography>\n          Certain Augmentations, like Bladeburner-specific ones and NeuroFlux Governor, are not available for sleeves.\n        </Typography>\n        <br />\n        <br />\n        <Typography variant=\"h4\">Do sleeves get reset when installing Augmentations or switching BitNodes?</Typography>\n        <br />\n        <Typography>Sleeves are reset when switching BitNodes, but not when installing Augmentations.</Typography>\n        <br />\n        <br />\n        <Typography variant=\"h4\">What is Memory?</Typography>\n        <br />\n        <Typography>\n          Sleeve memory dictates what a sleeve's synchronization will be when its reset by switching BitNodes. For\n          example, if a sleeve has a memory of 25, then when you switch BitNodes its synchronization will initially be\n          set to 25, rather than 1.\n        </Typography>\n        <br />\n        <br />\n        <Typography>\n          Memory can only be increased by purchasing upgrades from The Covenant. It is a persistent stat, meaning it\n          never gets resets back to 1. The maximum possible value for a sleeve's memory is 100.\n        </Typography>\n      </>\n    </Modal>\n  );\n}\n","/**\n * Root React Component for the Hacknet Node UI\n */\nimport React, { useState, useEffect } from \"react\";\n\nimport { GeneralInfo } from \"./GeneralInfo\";\nimport { HacknetNodeElem } from \"./HacknetNodeElem\";\nimport { HacknetServerElem } from \"./HacknetServerElem\";\nimport { HacknetNode } from \"../HacknetNode\";\nimport { HashUpgradeModal } from \"./HashUpgradeModal\";\nimport { MultiplierButtons } from \"./MultiplierButtons\";\nimport { PlayerInfo } from \"./PlayerInfo\";\nimport { PurchaseButton } from \"./PurchaseButton\";\nimport { PurchaseMultipliers } from \"../data/Constants\";\n\nimport {\n  getCostOfNextHacknetNode,\n  getCostOfNextHacknetServer,\n  hasHacknetServers,\n  purchaseHacknet,\n} from \"../HacknetHelpers\";\n\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { AllServers } from \"../../Server/AllServers\";\nimport { Server } from \"../../Server/Server\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  player: IPlayer;\n}\n\nexport function HacknetRoot(props: IProps): React.ReactElement {\n  const [open, setOpen] = useState(false);\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n  const [purchaseMultiplier, setPurchaseMultiplier] = useState<number | \"MAX\">(PurchaseMultipliers.x1);\n\n  useEffect(() => {\n    const id = setInterval(rerender, 200);\n    return () => clearInterval(id);\n  }, []);\n\n  let totalProduction = 0;\n  for (let i = 0; i < props.player.hacknetNodes.length; ++i) {\n    const node = props.player.hacknetNodes[i];\n    if (hasHacknetServers(props.player)) {\n      if (node instanceof HacknetNode) throw new Error(\"node was hacknet node\"); // should never happen\n      const hserver = AllServers[node];\n      if (hserver instanceof Server) throw new Error(\"node was a normal server\"); // should never happen\n      if (hserver) {\n        totalProduction += hserver.hashRate;\n      } else {\n        console.warn(`Could not find Hacknet Server object in AllServers map (i=${i})`);\n      }\n    } else {\n      if (typeof node === \"string\") throw new Error(\"node was ip string\"); // should never happen\n      totalProduction += node.moneyGainRatePerSecond;\n    }\n  }\n\n  function handlePurchaseButtonClick(): void {\n    purchaseHacknet(props.player);\n    rerender();\n  }\n\n  // Cost to purchase a new Hacknet Node\n  let purchaseCost;\n  if (hasHacknetServers(props.player)) {\n    purchaseCost = getCostOfNextHacknetServer(props.player);\n  } else {\n    purchaseCost = getCostOfNextHacknetNode(props.player);\n  }\n\n  // onClick event handlers for purchase multiplier buttons\n  const purchaseMultiplierOnClicks = [\n    () => setPurchaseMultiplier(PurchaseMultipliers.x1),\n    () => setPurchaseMultiplier(PurchaseMultipliers.x5),\n    () => setPurchaseMultiplier(PurchaseMultipliers.x10),\n    () => setPurchaseMultiplier(PurchaseMultipliers.MAX),\n  ];\n\n  // HacknetNode components\n  const nodes = props.player.hacknetNodes.map((node: string | HacknetNode) => {\n    if (hasHacknetServers(props.player)) {\n      if (node instanceof HacknetNode) throw new Error(\"node was hacknet node\"); // should never happen\n      const hserver = AllServers[node];\n      if (hserver == null) {\n        throw new Error(`Could not find Hacknet Server object in AllServers map for IP: ${node}`);\n      }\n      if (hserver instanceof Server) throw new Error(\"node was normal server\"); // should never happen\n      return (\n        <HacknetServerElem\n          player={props.player}\n          key={hserver.hostname}\n          node={hserver}\n          purchaseMultiplier={purchaseMultiplier}\n          rerender={rerender}\n        />\n      );\n    } else {\n      if (typeof node === \"string\") throw new Error(\"node was ip string\"); // should never happen\n      return (\n        <HacknetNodeElem\n          player={props.player}\n          key={node.name}\n          node={node}\n          purchaseMultiplier={purchaseMultiplier}\n          rerender={rerender}\n        />\n      );\n    }\n  });\n\n  return (\n    <>\n      <Typography variant=\"h4\">Hacknet {hasHacknetServers(props.player) ? \"Servers\" : \"Nodes\"}</Typography>\n      <GeneralInfo hasHacknetServers={hasHacknetServers(props.player)} />\n\n      <PurchaseButton cost={purchaseCost} multiplier={purchaseMultiplier} onClick={handlePurchaseButtonClick} />\n\n      <br />\n\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <PlayerInfo totalProduction={totalProduction} player={props.player} />\n        </Grid>\n        <Grid item xs={6}>\n          <MultiplierButtons onClicks={purchaseMultiplierOnClicks} purchaseMultiplier={purchaseMultiplier} />\n        </Grid>\n      </Grid>\n\n      {hasHacknetServers(props.player) && <Button onClick={() => setOpen(true)}>Spend Hashes on Upgrades</Button>}\n\n      <Grid container>{nodes}</Grid>\n      <HashUpgradeModal open={open} onClose={() => setOpen(false)} />\n    </>\n  );\n}\n","/**\n * React Component for the Hacknet Node UI\n *\n * Displays general information about Hacknet Nodes\n */\nimport React from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface IProps {\n  hasHacknetServers: boolean;\n}\n\nexport function GeneralInfo(props: IProps): React.ReactElement {\n  return (\n    <>\n      <Typography>\n        The Hacknet is a global, decentralized network of machines. It is used by hackers all around the world to\n        anonymously share computing power and perform distributed cyberattacks without the fear of being traced.\n      </Typography>\n      {!props.hasHacknetServers ? (\n        <>\n          <Typography>\n            {`Here, you can purchase a Hacknet Node, a specialized machine that can connect ` +\n              `and contribute its resources to the Hacknet network. This allows you to take ` +\n              `a small percentage of profits from hacks performed on the network. Essentially, ` +\n              `you are renting out your Node's computing power.`}\n          </Typography>\n          <Typography>\n            {`Each Hacknet Node you purchase will passively earn you money. Each Hacknet Node ` +\n              `can be upgraded in order to increase its computing power and thereby increase ` +\n              `the profit you earn from it.`}\n          </Typography>\n        </>\n      ) : (\n        <>\n          <Typography>\n            {`Here, you can purchase a Hacknet Server, an upgraded version of the Hacknet Node. ` +\n              `Hacknet Servers will perform computations and operations on the network, earning ` +\n              `you hashes. Hashes can be spent on a variety of different upgrades.`}\n          </Typography>\n          <Typography>\n            {`Hacknet Servers can also be used as servers to run scripts. However, running scripts ` +\n              `on a server will reduce its hash rate (hashes generated per second). A Hacknet Server's hash ` +\n              `rate will be reduced by the percentage of RAM that is being used by that Server to run ` +\n              `scripts.`}\n          </Typography>\n        </>\n      )}\n    </>\n  );\n}\n","/**\n * React Component for the Hacknet Node UI.\n * This Component displays the panel for a single Hacknet Node\n */\nimport React from \"react\";\n\nimport { HacknetNodeConstants } from \"../data/Constants\";\nimport {\n  getMaxNumberLevelUpgrades,\n  getMaxNumberRamUpgrades,\n  getMaxNumberCoreUpgrades,\n  purchaseLevelUpgrade,\n  purchaseRamUpgrade,\n  purchaseCoreUpgrade,\n} from \"../HacknetHelpers\";\n\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { HacknetNode } from \"../HacknetNode\";\n\nimport { Money } from \"../../ui/React/Money\";\nimport { MoneyRate } from \"../../ui/React/MoneyRate\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Button from \"@mui/material/Button\";\nimport { TableCell } from \"../../ui/React/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport Table from \"@mui/material/Table\";\nimport TableRow from \"@mui/material/TableRow\";\n\ninterface IProps {\n  node: HacknetNode;\n  purchaseMultiplier: number | \"MAX\";\n  rerender: () => void;\n  player: IPlayer;\n}\n\nexport function HacknetNodeElem(props: IProps): React.ReactElement {\n  const node = props.node;\n  const purchaseMult = props.purchaseMultiplier;\n  const rerender = props.rerender;\n\n  // Upgrade Level Button\n  let upgradeLevelContent;\n  if (node.level >= HacknetNodeConstants.MaxLevel) {\n    upgradeLevelContent = <>MAX LEVEL</>;\n  } else {\n    let multiplier = 0;\n    if (purchaseMult === \"MAX\") {\n      multiplier = getMaxNumberLevelUpgrades(props.player, node, HacknetNodeConstants.MaxLevel);\n    } else {\n      const levelsToMax = HacknetNodeConstants.MaxLevel - node.level;\n      multiplier = Math.min(levelsToMax, purchaseMult as number);\n    }\n\n    const upgradeLevelCost = node.calculateLevelUpgradeCost(multiplier, props.player.hacknet_node_level_cost_mult);\n    upgradeLevelContent = (\n      <>\n        +{multiplier} -&nbsp;\n        <Money money={upgradeLevelCost} player={props.player} />\n      </>\n    );\n  }\n  function upgradeLevelOnClick(): void {\n    const numUpgrades =\n      purchaseMult === \"MAX\"\n        ? getMaxNumberLevelUpgrades(props.player, node, HacknetNodeConstants.MaxLevel)\n        : purchaseMult;\n    purchaseLevelUpgrade(props.player, node, numUpgrades);\n    rerender();\n  }\n\n  let upgradeRamContent;\n  if (node.ram >= HacknetNodeConstants.MaxRam) {\n    upgradeRamContent = <>MAX RAM</>;\n  } else {\n    let multiplier = 0;\n    if (purchaseMult === \"MAX\") {\n      multiplier = getMaxNumberRamUpgrades(props.player, node, HacknetNodeConstants.MaxRam);\n    } else {\n      const levelsToMax = Math.round(Math.log2(HacknetNodeConstants.MaxRam / node.ram));\n      multiplier = Math.min(levelsToMax, purchaseMult as number);\n    }\n\n    const upgradeRamCost = node.calculateRamUpgradeCost(multiplier, props.player.hacknet_node_ram_cost_mult);\n    upgradeRamContent = (\n      <>\n        +{multiplier} -&nbsp;\n        <Money money={upgradeRamCost} player={props.player} />\n      </>\n    );\n  }\n  function upgradeRamOnClick(): void {\n    const numUpgrades =\n      purchaseMult === \"MAX\" ? getMaxNumberRamUpgrades(props.player, node, HacknetNodeConstants.MaxRam) : purchaseMult;\n    purchaseRamUpgrade(props.player, node, numUpgrades);\n    rerender();\n  }\n\n  let upgradeCoresContent;\n  if (node.cores >= HacknetNodeConstants.MaxCores) {\n    upgradeCoresContent = <>MAX CORES</>;\n  } else {\n    let multiplier = 0;\n    if (purchaseMult === \"MAX\") {\n      multiplier = getMaxNumberCoreUpgrades(props.player, node, HacknetNodeConstants.MaxCores);\n    } else {\n      const levelsToMax = HacknetNodeConstants.MaxCores - node.cores;\n      multiplier = Math.min(levelsToMax, purchaseMult as number);\n    }\n\n    const upgradeCoreCost = node.calculateCoreUpgradeCost(multiplier, props.player.hacknet_node_core_cost_mult);\n    upgradeCoresContent = (\n      <>\n        +{multiplier} -&nbsp;\n        <Money money={upgradeCoreCost} player={props.player} />\n      </>\n    );\n  }\n  function upgradeCoresOnClick(): void {\n    const numUpgrades =\n      purchaseMult === \"MAX\"\n        ? getMaxNumberCoreUpgrades(props.player, node, HacknetNodeConstants.MaxCores)\n        : purchaseMult;\n    purchaseCoreUpgrade(props.player, node, numUpgrades);\n    rerender();\n  }\n\n  return (\n    <Grid item component={Paper} p={1}>\n      <Table size=\"small\">\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <Typography>{node.name}</Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography>Production:</Typography>\n            </TableCell>\n            <TableCell colSpan={2}>\n              <Typography>\n                <Money money={node.totalMoneyGenerated} player={props.player} /> (\n                <MoneyRate money={node.moneyGainRatePerSecond} />)\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography>Level:</Typography>\n            </TableCell>\n            <TableCell>\n              <Typography>{node.level}</Typography>\n            </TableCell>\n            <TableCell>\n              <Button onClick={upgradeLevelOnClick}>{upgradeLevelContent}</Button>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography>RAM:</Typography>\n            </TableCell>\n            <TableCell>\n              <Typography>{node.ram}GB</Typography>\n            </TableCell>\n            <TableCell>\n              <Button onClick={upgradeRamOnClick}>{upgradeRamContent}</Button>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography>Cores:</Typography>\n            </TableCell>\n            <TableCell>\n              <Typography>{node.cores}</Typography>\n            </TableCell>\n            <TableCell>\n              <Button onClick={upgradeCoresOnClick}>{upgradeCoresContent}</Button>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Grid>\n  );\n}\n","/**\n * Object representing an upgrade that can be purchased with hashes\n */\nexport interface IConstructorParams {\n  cost?: number;\n  costPerLevel: number;\n  desc: string;\n  hasTargetServer?: boolean;\n  name: string;\n  value: number;\n  effectText?: (level: number) => JSX.Element | null;\n}\n\nexport class HashUpgrade {\n  /**\n   * If the upgrade has a flat cost (never increases), it goes here\n   * Otherwise, this property should be undefined\n   *\n   * This property overrides the 'costPerLevel' property\n   */\n  cost?: number;\n\n  /**\n   * Base cost for this upgrade. Every time the upgrade is purchased,\n   * its cost increases by this same amount (so its 1x, 2x, 3x, 4x, etc.)\n   */\n  costPerLevel = 0;\n\n  /**\n   * Description of what the upgrade does\n   */\n  desc = \"\";\n\n  /**\n   * Boolean indicating that this upgrade's effect affects a single server,\n   * the \"target\" server\n   */\n  hasTargetServer = false;\n\n  // Name of upgrade\n  name = \"\";\n\n  // Generic value used to indicate the potency/amount of this upgrade's effect\n  // The meaning varies between different upgrades\n  value = 0;\n\n  constructor(p: IConstructorParams) {\n    if (p.cost != null) {\n      this.cost = p.cost;\n    }\n    if (p.effectText != null) {\n      this.effectText = p.effectText;\n    }\n\n    this.costPerLevel = p.costPerLevel;\n    this.desc = p.desc;\n    this.hasTargetServer = p.hasTargetServer ? p.hasTargetServer : false;\n    this.name = p.name;\n    this.value = p.value;\n  }\n\n  // Functions that returns the UI element to display the effect of this upgrade.\n  effectText: (level: number) => JSX.Element | null = () => null;\n\n  getCost(levels: number): number {\n    if (typeof this.cost === \"number\") {\n      return this.cost;\n    }\n\n    return Math.round((levels + 1) * this.costPerLevel);\n  }\n}\n","// Metadata used to construct all Hash Upgrades\nimport React from \"react\";\nimport { IConstructorParams } from \"../HashUpgrade\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Money } from \"../../ui/React/Money\";\n\nexport const HashUpgradesMetadata: IConstructorParams[] = [\n  {\n    cost: 4,\n    costPerLevel: 4,\n    desc: \"Sell hashes for $1m\",\n    name: \"Sell for Money\",\n    effectText: (level: number): JSX.Element | null => (\n      <>\n        Sold for <Money money={1e6 * level} />\n      </>\n    ),\n    value: 1e6,\n  },\n  {\n    costPerLevel: 100,\n    desc: \"Sell hashes for $1b in Corporation funds\",\n    name: \"Sell for Corporation Funds\",\n    effectText: (level: number): JSX.Element | null => (\n      <>\n        Sold for <Money money={1e9 * level} /> Corporation funds.\n      </>\n    ),\n    value: 1e9,\n  },\n  {\n    costPerLevel: 50,\n    desc:\n      \"Use hashes to decrease the minimum security of a single server by 2%. \" +\n      \"Note that a server's minimum security cannot go below 1. This effect persists \" +\n      \"until you install Augmentations (since servers are reset at that time).\",\n    hasTargetServer: true,\n    name: \"Reduce Minimum Security\",\n    value: 0.98,\n  },\n  {\n    costPerLevel: 50,\n    desc:\n      \"Use hashes to increase the maximum amount of money on a single server by 2%. \" +\n      \"This effect persists until you install Augmentations (since servers \" +\n      \"are reset at that time).\",\n    hasTargetServer: true,\n    name: \"Increase Maximum Money\",\n    value: 1.02,\n  },\n  {\n    costPerLevel: 50,\n    desc:\n      \"Use hashes to improve the experience earned when studying at a university by 20%. \" +\n      \"This effect persists until you install Augmentations\",\n    name: \"Improve Studying\",\n    effectText: (level: number): JSX.Element | null => <>Improves studying by {level * 20}%</>,\n    value: 20, // Improves studying by value%\n  },\n  {\n    costPerLevel: 50,\n    desc:\n      \"Use hashes to improve the experience earned when training at the gym by 20%. This effect \" +\n      \"persists until you install Augmentations\",\n    name: \"Improve Gym Training\",\n    effectText: (level: number): JSX.Element | null => <>Improves training by {level * 20}%</>,\n    value: 20, // Improves training by value%\n  },\n  {\n    costPerLevel: 200,\n    desc: \"Exchange hashes for 1k Scientific Research in all of your Corporation's Industries\",\n    name: \"Exchange for Corporation Research\",\n    effectText: (level: number): JSX.Element | null => (\n      <>Acquired a total of {level}k Scientific Research in your industries.</>\n    ),\n    value: 1000,\n  },\n  {\n    costPerLevel: 250,\n    desc: \"Exchange hashes for 100 Bladeburner Rank\",\n    name: \"Exchange for Bladeburner Rank\",\n    effectText: (level: number): JSX.Element | null => (\n      <>Acquired a total of {numeralWrapper.format(100 * level, \"0a\")} Bladeburner rank</>\n    ),\n    value: 100,\n  },\n  {\n    costPerLevel: 250,\n    desc: \"Exchanges hashes for 10 Bladeburner Skill Points\",\n    name: \"Exchange for Bladeburner SP\",\n    effectText: (level: number): JSX.Element | null => (\n      <>Acquired a total of {numeralWrapper.format(10 * level, \"0a\")} Bladeburner Skill Points</>\n    ),\n    value: 10,\n  },\n  {\n    costPerLevel: 200,\n    desc: \"Generate a random Coding Contract somewhere on the network\",\n    name: \"Generate Coding Contract\",\n    effectText: (level: number): JSX.Element | null => <>Generated {level} contracts.</>,\n    value: 1,\n  },\n];\n","/**\n * React Component for the Hacknet Node UI.\n * This Component displays the panel for a single Hacknet Node\n */\nimport React from \"react\";\n\nimport { HacknetServerConstants } from \"../data/Constants\";\nimport {\n  getMaxNumberLevelUpgrades,\n  getMaxNumberRamUpgrades,\n  getMaxNumberCoreUpgrades,\n  getMaxNumberCacheUpgrades,\n  purchaseLevelUpgrade,\n  purchaseRamUpgrade,\n  purchaseCoreUpgrade,\n  purchaseCacheUpgrade,\n  updateHashManagerCapacity,\n} from \"../HacknetHelpers\";\n\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { HacknetServer } from \"../HacknetServer\";\n\nimport { Money } from \"../../ui/React/Money\";\nimport { Hashes } from \"../../ui/React/Hashes\";\nimport { HashRate } from \"../../ui/React/HashRate\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Button from \"@mui/material/Button\";\nimport { TableCell } from \"../../ui/React/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport Table from \"@mui/material/Table\";\nimport TableRow from \"@mui/material/TableRow\";\n\ninterface IProps {\n  node: HacknetServer;\n  purchaseMultiplier: number | string;\n  rerender: () => void;\n  player: IPlayer;\n}\n\nexport function HacknetServerElem(props: IProps): React.ReactElement {\n  const node = props.node;\n  const purchaseMult = props.purchaseMultiplier;\n  const rerender = props.rerender;\n\n  // Upgrade Level Button\n  let upgradeLevelContent;\n  if (node.level >= HacknetServerConstants.MaxLevel) {\n    upgradeLevelContent = <>MAX LEVEL</>;\n  } else {\n    let multiplier = 0;\n    if (purchaseMult === \"MAX\") {\n      multiplier = getMaxNumberLevelUpgrades(props.player, node, HacknetServerConstants.MaxLevel);\n    } else {\n      const levelsToMax = HacknetServerConstants.MaxLevel - node.level;\n      multiplier = Math.min(levelsToMax, purchaseMult as number);\n    }\n\n    const upgradeLevelCost = node.calculateLevelUpgradeCost(multiplier, props.player.hacknet_node_level_cost_mult);\n    upgradeLevelContent = (\n      <>\n        +{multiplier}&nbsp;-&nbsp;\n        <Money money={upgradeLevelCost} player={props.player} />\n      </>\n    );\n  }\n  function upgradeLevelOnClick(): void {\n    let numUpgrades = purchaseMult;\n    if (purchaseMult === \"MAX\") {\n      numUpgrades = getMaxNumberLevelUpgrades(props.player, node, HacknetServerConstants.MaxLevel);\n    }\n    purchaseLevelUpgrade(props.player, node, numUpgrades as number);\n    rerender();\n  }\n\n  // Upgrade RAM Button\n  let upgradeRamContent;\n  if (node.maxRam >= HacknetServerConstants.MaxRam) {\n    upgradeRamContent = <>MAX RAM</>;\n  } else {\n    let multiplier = 0;\n    if (purchaseMult === \"MAX\") {\n      multiplier = getMaxNumberRamUpgrades(props.player, node, HacknetServerConstants.MaxRam);\n    } else {\n      const levelsToMax = Math.round(Math.log2(HacknetServerConstants.MaxRam / node.maxRam));\n      multiplier = Math.min(levelsToMax, purchaseMult as number);\n    }\n\n    const upgradeRamCost = node.calculateRamUpgradeCost(multiplier, props.player.hacknet_node_ram_cost_mult);\n    upgradeRamContent = (\n      <>\n        +{multiplier}&nbsp;-&nbsp;\n        <Money money={upgradeRamCost} player={props.player} />\n      </>\n    );\n  }\n  function upgradeRamOnClick(): void {\n    let numUpgrades = purchaseMult;\n    if (purchaseMult === \"MAX\") {\n      numUpgrades = getMaxNumberRamUpgrades(props.player, node, HacknetServerConstants.MaxRam);\n    }\n    purchaseRamUpgrade(props.player, node, numUpgrades as number);\n    rerender();\n  }\n\n  // Upgrade Cores Button\n  let upgradeCoresContent;\n  if (node.cores >= HacknetServerConstants.MaxCores) {\n    upgradeCoresContent = <>MAX CORES</>;\n  } else {\n    let multiplier = 0;\n    if (purchaseMult === \"MAX\") {\n      multiplier = getMaxNumberCoreUpgrades(props.player, node, HacknetServerConstants.MaxCores);\n    } else {\n      const levelsToMax = HacknetServerConstants.MaxCores - node.cores;\n      multiplier = Math.min(levelsToMax, purchaseMult as number);\n    }\n\n    const upgradeCoreCost = node.calculateCoreUpgradeCost(multiplier, props.player.hacknet_node_core_cost_mult);\n    upgradeCoresContent = (\n      <>\n        +{multiplier}&nbsp;-&nbsp;\n        <Money money={upgradeCoreCost} player={props.player} />\n      </>\n    );\n  }\n  function upgradeCoresOnClick(): void {\n    let numUpgrades = purchaseMult;\n    if (purchaseMult === \"MAX\") {\n      numUpgrades = getMaxNumberCoreUpgrades(props.player, node, HacknetServerConstants.MaxCores);\n    }\n    purchaseCoreUpgrade(props.player, node, numUpgrades as number);\n    rerender();\n  }\n\n  // Upgrade Cache button\n  let upgradeCacheContent;\n  if (node.cache >= HacknetServerConstants.MaxCache) {\n    upgradeCacheContent = <>MAX CACHE</>;\n  } else {\n    let multiplier = 0;\n    if (purchaseMult === \"MAX\") {\n      multiplier = getMaxNumberCacheUpgrades(props.player, node, HacknetServerConstants.MaxCache);\n    } else {\n      const levelsToMax = HacknetServerConstants.MaxCache - node.cache;\n      multiplier = Math.min(levelsToMax, purchaseMult as number);\n    }\n\n    const upgradeCacheCost = node.calculateCacheUpgradeCost(multiplier);\n    upgradeCacheContent = (\n      <>\n        +{multiplier}&nbsp;-&nbsp;\n        <Money money={upgradeCacheCost} player={props.player} />\n      </>\n    );\n    if (props.player.money.lt(upgradeCacheCost)) {\n    } else {\n    }\n  }\n  function upgradeCacheOnClick(): void {\n    let numUpgrades = purchaseMult;\n    if (purchaseMult === \"MAX\") {\n      numUpgrades = getMaxNumberCacheUpgrades(props.player, node, HacknetServerConstants.MaxCache);\n    }\n    purchaseCacheUpgrade(props.player, node, numUpgrades as number);\n    rerender();\n    updateHashManagerCapacity(props.player);\n  }\n\n  return (\n    <Grid item component={Paper} p={1}>\n      <Table size=\"small\">\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <Typography>{node.hostname}</Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography>Production:</Typography>\n            </TableCell>\n            <TableCell colSpan={2}>\n              <Typography>\n                <Hashes hashes={node.totalHashesGenerated} /> (<HashRate hashes={node.hashRate} />)\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography>Hash Capacity:</Typography>\n            </TableCell>\n            <TableCell colSpan={2}>\n              <Typography>\n                <Hashes hashes={node.hashCapacity} />\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography>Level:</Typography>\n            </TableCell>\n            <TableCell>\n              <Typography>{node.level}</Typography>\n            </TableCell>\n            <TableCell>\n              <Button onClick={upgradeLevelOnClick}>{upgradeLevelContent}</Button>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography>RAM:</Typography>\n            </TableCell>\n            <TableCell>\n              <Typography>{node.maxRam}GB</Typography>\n            </TableCell>\n            <TableCell>\n              <Button onClick={upgradeRamOnClick}>{upgradeRamContent}</Button>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography>Cores:</Typography>\n            </TableCell>\n            <TableCell>\n              <Typography>{node.cores}</Typography>\n            </TableCell>\n            <TableCell>\n              <Button onClick={upgradeCoresOnClick}>{upgradeCoresContent}</Button>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography>Cache Level:</Typography>\n            </TableCell>\n            <TableCell>\n              <Typography>{node.cache}</Typography>\n            </TableCell>\n            <TableCell>\n              <Button onClick={upgradeCacheOnClick}>{upgradeCacheContent}</Button>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Grid>\n  );\n}\n","/**\n * Create the pop-up for purchasing upgrades with hashes\n */\nimport React, { useState, useEffect } from \"react\";\n\nimport { HashManager } from \"../HashManager\";\nimport { HashUpgrades } from \"../HashUpgrades\";\n\nimport { Hashes } from \"../../ui/React/Hashes\";\nimport { HacknetUpgradeElem } from \"./HacknetUpgradeElem\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { use } from \"../../ui/Context\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport function HashUpgradeModal(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    const id = setInterval(() => setRerender((old) => !old), 200);\n    return () => clearInterval(id);\n  }, []);\n\n  const hashManager = player.hashManager;\n  if (!(hashManager instanceof HashManager)) {\n    throw new Error(`Player does not have a HashManager)`);\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <>\n        <Typography>Spend your hashes on a variety of different upgrades</Typography>\n        <Typography>\n          Hashes: <Hashes hashes={player.hashManager.hashes} />\n        </Typography>\n        {Object.keys(HashUpgrades).map((upgName) => {\n          const upg = HashUpgrades[upgName];\n          return (\n            <HacknetUpgradeElem\n              player={player}\n              upg={upg}\n              hashManager={hashManager}\n              key={upg.name}\n              rerender={rerender}\n            />\n          );\n        })}\n      </>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { purchaseHashUpgrade } from \"../HacknetHelpers\";\nimport { HashManager } from \"../HashManager\";\nimport { HashUpgrade } from \"../HashUpgrade\";\n\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\nimport { ServerDropdown, ServerType } from \"../../ui/React/ServerDropdown\";\n\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { CopyableText } from \"../../ui/React/CopyableText\";\nimport { Hashes } from \"../../ui/React/Hashes\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Button from \"@mui/material/Button\";\nimport { SelectChangeEvent } from \"@mui/material/Select\";\n\ninterface IProps {\n  player: IPlayer;\n  hashManager: HashManager;\n  upg: HashUpgrade;\n  rerender: () => void;\n}\n\nexport function HacknetUpgradeElem(props: IProps): React.ReactElement {\n  const [selectedServer, setSelectedServer] = useState(\"ecorp\");\n  function changeTargetServer(event: SelectChangeEvent<string>): void {\n    setSelectedServer(event.target.value);\n  }\n\n  function purchase(): void {\n    const canPurchase = props.hashManager.hashes >= props.hashManager.getUpgradeCost(props.upg.name);\n    if (canPurchase) {\n      const res = purchaseHashUpgrade(props.player, props.upg.name, selectedServer);\n      if (!res) {\n        dialogBoxCreate(\n          \"Failed to purchase upgrade. This may be because you do not have enough hashes, \" +\n            \"or because you do not have access to the feature upgrade affects.\",\n        );\n      }\n      props.rerender();\n    }\n  }\n\n  const hashManager = props.hashManager;\n  const upg = props.upg;\n  const cost = hashManager.getUpgradeCost(upg.name);\n  const level = hashManager.upgrades[upg.name];\n  const effect = upg.effectText(level);\n\n  // Purchase button\n  const canPurchase = hashManager.hashes >= cost;\n\n  // We'll reuse a Bladeburner css class\n  return (\n    <Paper sx={{ p: 1 }}>\n      <Typography>\n        <CopyableText value={upg.name} />\n      </Typography>\n      <Typography>\n        Cost: <Hashes hashes={cost} />, Bought: {level} times\n      </Typography>\n\n      <Typography>{upg.desc}</Typography>\n      <Button onClick={purchase} disabled={!canPurchase}>\n        Purchase\n      </Button>\n      {level > 0 && effect && <Typography>{effect}</Typography>}\n      {upg.hasTargetServer && (\n        <ServerDropdown value={selectedServer} serverType={ServerType.Foreign} onChange={changeTargetServer} />\n      )}\n    </Paper>\n  );\n}\n","/**\n * React Component for the Multiplier buttons on the Hacknet page.\n * These buttons let the player control how many Nodes/Upgrades they're\n * purchasing when using the UI (x1, x5, x10, MAX)\n */\nimport React from \"react\";\n\nimport { PurchaseMultipliers } from \"../data/Constants\";\nimport Button from \"@mui/material/Button\";\n\ninterface IMultiplierProps {\n  disabled: boolean;\n  onClick: () => void;\n  text: string;\n}\n\nfunction MultiplierButton(props: IMultiplierProps): React.ReactElement {\n  return (\n    <Button disabled={props.disabled} onClick={props.onClick}>\n      {props.text}\n    </Button>\n  );\n}\n\ninterface IProps {\n  purchaseMultiplier: number | string;\n  onClicks: (() => void)[];\n}\n\nexport function MultiplierButtons(props: IProps): React.ReactElement {\n  if (props.purchaseMultiplier == null) {\n    throw new Error(`MultiplierButtons constructed without required props`);\n  }\n\n  const mults = [\"x1\", \"x5\", \"x10\", \"MAX\"];\n  const onClicks = props.onClicks;\n  const buttons = [];\n  for (let i = 0; i < mults.length; ++i) {\n    const mult = mults[i];\n    const btnProps = {\n      disabled: props.purchaseMultiplier === PurchaseMultipliers[mult],\n      onClick: onClicks[i],\n      text: mult,\n    };\n\n    buttons.push(<MultiplierButton key={mult} {...btnProps} />);\n  }\n\n  return <>{buttons}</>;\n}\n","/**\n * React Component for displaying Player info and stats on the Hacknet Node UI.\n * This includes:\n * - Player's money\n * - Player's production from Hacknet Nodes\n */\nimport React from \"react\";\n\nimport { hasHacknetServers } from \"../HacknetHelpers\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { Money } from \"../../ui/React/Money\";\nimport { MoneyRate } from \"../../ui/React/MoneyRate\";\nimport { HashRate } from \"../../ui/React/HashRate\";\nimport { Hashes } from \"../../ui/React/Hashes\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface IProps {\n  totalProduction: number;\n  player: IPlayer;\n}\n\nexport function PlayerInfo(props: IProps): React.ReactElement {\n  const hasServers = hasHacknetServers(props.player);\n\n  let prod;\n  if (hasServers) {\n    prod = <HashRate hashes={props.totalProduction} />;\n  } else {\n    prod = <MoneyRate money={props.totalProduction} />;\n  }\n\n  return (\n    <>\n      <Typography>\n        Money:\n        <Money money={props.player.money.toNumber()} />\n      </Typography>\n\n      {hasServers && (\n        <>\n          <Typography>\n            Hashes: <Hashes hashes={props.player.hashManager.hashes} /> /{\" \"}\n            <Hashes hashes={props.player.hashManager.capacity} />\n          </Typography>\n        </>\n      )}\n\n      <Typography>\n        Total Hacknet {hasServers ? \"Server\" : \"Node\"} Production: {prod}\n      </Typography>\n    </>\n  );\n}\n","/**\n * React Component for the button that is used to purchase new Hacknet Nodes\n */\nimport React from \"react\";\n\nimport { hasHacknetServers, hasMaxNumberHacknetServers } from \"../HacknetHelpers\";\nimport { Player } from \"../../Player\";\nimport { Money } from \"../../ui/React/Money\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  multiplier: number | string;\n  onClick: () => void;\n  cost: number;\n}\n\nexport function PurchaseButton(props: IProps): React.ReactElement {\n  const cost = props.cost;\n  let text;\n  if (hasHacknetServers(Player)) {\n    if (hasMaxNumberHacknetServers(Player)) {\n      text = <>Hacknet Server limit reached</>;\n    } else {\n      text = (\n        <>\n          Purchase Hacknet Server -&nbsp;\n          <Money money={cost} player={Player} />\n        </>\n      );\n    }\n  } else {\n    text = (\n      <>\n        Purchase Hacknet Node -&nbsp;\n        <Money money={cost} player={Player} />\n      </>\n    );\n  }\n\n  return (\n    <Button disabled={!Player.canAfford(cost)} onClick={props.onClick}>\n      {text}\n    </Button>\n  );\n}\n","/**\n * React Subcomponent for displaying a location's UI, when that location is a company\n *\n * This subcomponent renders all of the buttons for applying to jobs at a company\n */\nimport React, { useState } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Box from \"@mui/material/Box\";\n\nimport { ApplyToJobButton } from \"./ApplyToJobButton\";\n\nimport { Locations } from \"../Locations\";\nimport { LocationName } from \"../data/LocationNames\";\n\nimport { Companies } from \"../../Company/Companies\";\nimport { CompanyPosition } from \"../../Company/CompanyPosition\";\nimport { CompanyPositions } from \"../../Company/CompanyPositions\";\nimport * as posNames from \"../../Company/data/companypositionnames\";\n\nimport { Reputation } from \"../../ui/React/Reputation\";\nimport { Favor } from \"../../ui/React/Favor\";\nimport { use } from \"../../ui/Context\";\nimport { QuitJobModal } from \"../../Company/ui/QuitJobModal\";\n\ntype IProps = {\n  locName: LocationName;\n};\n\nexport function CompanyLocation(props: IProps): React.ReactElement {\n  const p = use.Player();\n  const router = use.Router();\n  const [quitOpen, setQuitOpen] = useState(false);\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n  /**\n   * We'll keep a reference to the Company that this component is being rendered for,\n   * so we don't have to look it up every time\n   */\n  const company = Companies[props.locName];\n  if (company == null) throw new Error(`CompanyLocation component constructed with invalid company: ${props.locName}`);\n\n  /**\n   * Reference to the Location that this component is being rendered for\n   */\n  const location = Locations[props.locName];\n  if (location == null) {\n    throw new Error(`CompanyLocation component constructed with invalid location: ${props.locName}`);\n  }\n\n  /**\n   * Name of company position that player holds, if applicable\n   */\n  const jobTitle = p.jobs[props.locName] ? p.jobs[props.locName] : null;\n\n  /**\n   * CompanyPosition object for the job that the player holds at this company\n   * (if he has one)\n   */\n  const companyPosition = jobTitle ? CompanyPositions[jobTitle] : null;\n\n  p.location = props.locName;\n\n  function applyForAgentJob(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    p.applyForAgentJob();\n    rerender();\n  }\n\n  function applyForBusinessConsultantJob(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    p.applyForBusinessConsultantJob();\n    rerender();\n  }\n\n  function applyForBusinessJob(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    p.applyForBusinessJob();\n    rerender();\n  }\n\n  function applyForEmployeeJob(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    p.applyForEmployeeJob();\n    rerender();\n  }\n\n  function applyForItJob(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    p.applyForItJob();\n    rerender();\n  }\n\n  function applyForPartTimeEmployeeJob(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    p.applyForPartTimeEmployeeJob();\n    rerender();\n  }\n\n  function applyForPartTimeWaiterJob(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    p.applyForPartTimeWaiterJob();\n    rerender();\n  }\n\n  function applyForSecurityJob(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    p.applyForSecurityJob();\n    rerender();\n  }\n\n  function applyForSoftwareConsultantJob(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    p.applyForSoftwareConsultantJob();\n    rerender();\n  }\n\n  function applyForSoftwareJob(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    p.applyForSoftwareJob();\n    rerender();\n  }\n\n  function applyForWaiterJob(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    p.applyForWaiterJob();\n    rerender();\n  }\n\n  function startInfiltration(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    const loc = location;\n    if (!loc.infiltrationData)\n      throw new Error(`trying to start infiltration at ${props.locName} but the infiltrationData is null`);\n\n    router.toInfiltration(loc);\n  }\n\n  function work(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n\n    const pos = companyPosition;\n    if (pos instanceof CompanyPosition) {\n      if (pos.isPartTimeJob() || pos.isSoftwareConsultantJob() || pos.isBusinessConsultantJob()) {\n        p.startWorkPartTime(router, props.locName);\n      } else {\n        p.startWork(router, props.locName);\n      }\n      router.toWork();\n    }\n  }\n\n  const isEmployedHere = jobTitle != null;\n  const favorGain = company.getFavorGain();\n\n  return (\n    <>\n      {isEmployedHere && (\n        <>\n          <Typography>Job Title: {jobTitle}</Typography>\n          <Typography>-------------------------</Typography>\n          <Box display=\"flex\">\n            <Tooltip\n              title={\n                <>\n                  You will have <Favor favor={company.favor + favorGain[0]} /> company favor upon resetting after\n                  installing Augmentations\n                </>\n              }\n            >\n              <Typography>\n                Company reputation: <Reputation reputation={company.playerReputation} />\n              </Typography>\n            </Tooltip>\n          </Box>\n          <Typography>-------------------------</Typography>\n          <Box display=\"flex\">\n            <Tooltip\n              title={\n                <>\n                  Company favor increases the rate at which you earn reputation for this company by 1% per favor.\n                  Company favor is gained whenever you reset after installing Augmentations. The amount of favor you\n                  gain depends on how much reputation you have with the company.\n                </>\n              }\n            >\n              <Typography>\n                Company Favor: <Favor favor={company.favor} />\n              </Typography>\n            </Tooltip>\n          </Box>\n          <Typography>-------------------------</Typography>\n          <br />\n          <Button onClick={work}>Work</Button>\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          <Button onClick={() => setQuitOpen(true)}>Quit</Button>\n          <QuitJobModal\n            locName={props.locName}\n            company={company}\n            onQuit={rerender}\n            open={quitOpen}\n            onClose={() => setQuitOpen(false)}\n          />\n        </>\n      )}\n      <br />\n      {company.hasAgentPositions() && (\n        <ApplyToJobButton\n          company={company}\n          entryPosType={CompanyPositions[posNames.AgentCompanyPositions[0]]}\n          onClick={applyForAgentJob}\n          text={\"Apply for Agent Job\"}\n        />\n      )}\n      {company.hasBusinessConsultantPositions() && (\n        <ApplyToJobButton\n          company={company}\n          entryPosType={CompanyPositions[posNames.BusinessConsultantCompanyPositions[0]]}\n          onClick={applyForBusinessConsultantJob}\n          text={\"Apply for Business Consultant Job\"}\n        />\n      )}\n      {company.hasBusinessPositions() && (\n        <ApplyToJobButton\n          company={company}\n          entryPosType={CompanyPositions[posNames.BusinessCompanyPositions[0]]}\n          onClick={applyForBusinessJob}\n          text={\"Apply for Business Job\"}\n        />\n      )}\n      {company.hasEmployeePositions() && (\n        <ApplyToJobButton\n          company={company}\n          entryPosType={CompanyPositions[posNames.MiscCompanyPositions[1]]}\n          onClick={applyForEmployeeJob}\n          text={\"Apply to be an Employee\"}\n        />\n      )}\n      {company.hasEmployeePositions() && (\n        <ApplyToJobButton\n          company={company}\n          entryPosType={CompanyPositions[posNames.PartTimeCompanyPositions[1]]}\n          onClick={applyForPartTimeEmployeeJob}\n          text={\"Apply to be a part-time Employee\"}\n        />\n      )}\n      {company.hasITPositions() && (\n        <ApplyToJobButton\n          company={company}\n          entryPosType={CompanyPositions[posNames.ITCompanyPositions[0]]}\n          onClick={applyForItJob}\n          text={\"Apply for IT Job\"}\n        />\n      )}\n      {company.hasSecurityPositions() && (\n        <ApplyToJobButton\n          company={company}\n          entryPosType={CompanyPositions[posNames.SecurityCompanyPositions[2]]}\n          onClick={applyForSecurityJob}\n          text={\"Apply for Security Job\"}\n        />\n      )}\n      {company.hasSoftwareConsultantPositions() && (\n        <ApplyToJobButton\n          company={company}\n          entryPosType={CompanyPositions[posNames.SoftwareConsultantCompanyPositions[0]]}\n          onClick={applyForSoftwareConsultantJob}\n          text={\"Apply for Software Consultant Job\"}\n        />\n      )}\n      {company.hasSoftwarePositions() && (\n        <ApplyToJobButton\n          company={company}\n          entryPosType={CompanyPositions[posNames.SoftwareCompanyPositions[0]]}\n          onClick={applyForSoftwareJob}\n          text={\"Apply for Software Job\"}\n        />\n      )}\n      {company.hasWaiterPositions() && (\n        <ApplyToJobButton\n          company={company}\n          entryPosType={CompanyPositions[posNames.MiscCompanyPositions[0]]}\n          onClick={applyForWaiterJob}\n          text={\"Apply to be a Waiter\"}\n        />\n      )}\n      {company.hasWaiterPositions() && (\n        <ApplyToJobButton\n          company={company}\n          entryPosType={CompanyPositions[posNames.PartTimeCompanyPositions[0]]}\n          onClick={applyForPartTimeWaiterJob}\n          text={\"Apply to be a part-time Waiter\"}\n        />\n      )}\n      {location.infiltrationData != null && <Button onClick={startInfiltration}>Infiltrate Company</Button>}\n    </>\n  );\n}\n","// Metadata used for constructing Company Positions\nimport { IConstructorParams } from \"../CompanyPosition\";\nimport * as posNames from \"./companypositionnames\";\n\nexport const companyPositionMetadata: IConstructorParams[] = [\n  {\n    name: posNames.SoftwareCompanyPositions[0], // Software Enginering Intern\n    nextPosition: posNames.SoftwareCompanyPositions[1], // Junior Software Engineer\n    baseSalary: 33,\n    charismaEffectiveness: 15,\n    charismaExpGain: 0.02,\n    hackingEffectiveness: 85,\n    hackingExpGain: 0.05,\n    reqdHacking: 1,\n    repMultiplier: 0.9,\n  },\n  {\n    name: posNames.SoftwareCompanyPositions[1], // Junior Software Engineer\n    nextPosition: posNames.SoftwareCompanyPositions[2], // Senior Software Engineer\n    baseSalary: 80,\n    charismaEffectiveness: 15,\n    charismaExpGain: 0.05,\n    hackingEffectiveness: 85,\n    hackingExpGain: 0.1,\n    reqdHacking: 51,\n    reqdReputation: 8e3,\n    repMultiplier: 1.1,\n  },\n  {\n    name: posNames.SoftwareCompanyPositions[2], // Senior Software Engineer\n    nextPosition: posNames.SoftwareCompanyPositions[3], // Lead Software Developer\n    baseSalary: 165,\n    charismaEffectiveness: 20,\n    charismaExpGain: 0.08,\n    hackingEffectiveness: 80,\n    hackingExpGain: 0.4,\n    reqdCharisma: 51,\n    reqdHacking: 251,\n    reqdReputation: 40e3,\n    repMultiplier: 1.3,\n  },\n  {\n    name: posNames.SoftwareCompanyPositions[3], // Lead Software Developer\n    nextPosition: posNames.SoftwareCompanyPositions[4], // Head of Software\n    baseSalary: 500,\n    charismaEffectiveness: 25,\n    charismaExpGain: 0.1,\n    hackingEffectiveness: 75,\n    hackingExpGain: 0.8,\n    reqdCharisma: 151,\n    reqdHacking: 401,\n    reqdReputation: 200e3,\n    repMultiplier: 1.5,\n  },\n  {\n    name: posNames.SoftwareCompanyPositions[4], // Head of Software\n    nextPosition: posNames.SoftwareCompanyPositions[5], // Head of Engineering\n    baseSalary: 800,\n    charismaEffectiveness: 25,\n    charismaExpGain: 0.5,\n    hackingEffectiveness: 75,\n    hackingExpGain: 1,\n    reqdCharisma: 251,\n    reqdHacking: 501,\n    reqdReputation: 400e3,\n    repMultiplier: 1.6,\n  },\n  {\n    name: posNames.SoftwareCompanyPositions[5], // Head of Engineering\n    nextPosition: posNames.SoftwareCompanyPositions[6], // Vice President of Technology\n    baseSalary: 1650,\n    charismaEffectiveness: 25,\n    charismaExpGain: 0.5,\n    hackingEffectiveness: 75,\n    hackingExpGain: 1.1,\n    reqdCharisma: 251,\n    reqdHacking: 501,\n    reqdReputation: 800e3,\n    repMultiplier: 1.6,\n  },\n  {\n    name: posNames.SoftwareCompanyPositions[6], // Vice President of Technology\n    nextPosition: posNames.SoftwareCompanyPositions[7], // Chief Technology Officer\n    baseSalary: 2310,\n    charismaEffectiveness: 30,\n    charismaExpGain: 0.6,\n    hackingEffectiveness: 70,\n    hackingExpGain: 1.2,\n    reqdCharisma: 401,\n    reqdHacking: 601,\n    reqdReputation: 1.6e6,\n    repMultiplier: 1.75,\n  },\n  {\n    name: posNames.SoftwareCompanyPositions[7], // Chief Technology Officer\n    nextPosition: null,\n    baseSalary: 2640,\n    charismaEffectiveness: 35,\n    charismaExpGain: 1,\n    hackingEffectiveness: 65,\n    hackingExpGain: 1.5,\n    reqdCharisma: 501,\n    reqdHacking: 751,\n    reqdReputation: 3.2e6,\n    repMultiplier: 2,\n  },\n  {\n    name: posNames.ITCompanyPositions[0], // IT Intern\n    nextPosition: posNames.ITCompanyPositions[1], // IT Analyst\n    baseSalary: 26,\n    charismaEffectiveness: 10,\n    charismaExpGain: 0.01,\n    hackingEffectiveness: 90,\n    hackingExpGain: 0.04,\n    reqdHacking: 1,\n    repMultiplier: 0.9,\n  },\n  {\n    name: posNames.ITCompanyPositions[1], // IT Analyst\n    nextPosition: posNames.ITCompanyPositions[2], // IT Manager\n    baseSalary: 66,\n    charismaEffectiveness: 15,\n    charismaExpGain: 0.02,\n    hackingEffectiveness: 85,\n    hackingExpGain: 0.08,\n    reqdHacking: 26,\n    reqdReputation: 7e3,\n    repMultiplier: 1.1,\n  },\n  {\n    name: posNames.ITCompanyPositions[2], // IT Manager\n    nextPosition: posNames.ITCompanyPositions[3], // Systems Administrator\n    baseSalary: 132,\n    charismaEffectiveness: 20,\n    charismaExpGain: 0.1,\n    hackingEffectiveness: 80,\n    hackingExpGain: 0.3,\n    reqdCharisma: 51,\n    reqdHacking: 151,\n    reqdReputation: 35e3,\n    repMultiplier: 1.3,\n  },\n  {\n    name: posNames.ITCompanyPositions[3], // Systems Administrator\n    nextPosition: posNames.SoftwareCompanyPositions[5], // Head of Engineering\n    baseSalary: 410,\n    charismaEffectiveness: 20,\n    charismaExpGain: 0.2,\n    hackingEffectiveness: 80,\n    hackingExpGain: 0.5,\n    reqdCharisma: 76,\n    reqdHacking: 251,\n    reqdReputation: 175e3,\n    repMultiplier: 1.4,\n  },\n  {\n    name: posNames.SecurityEngineerCompanyPositions[0], // Security Engineer\n    nextPosition: posNames.SoftwareCompanyPositions[5], // Head of Engineering\n    baseSalary: 121,\n    charismaEffectiveness: 15,\n    charismaExpGain: 0.05,\n    hackingEffectiveness: 85,\n    hackingExpGain: 0.4,\n    reqdCharisma: 26,\n    reqdHacking: 151,\n    reqdReputation: 35e3,\n    repMultiplier: 1.2,\n  },\n  {\n    name: posNames.NetworkEngineerCompanyPositions[0], // Network Engineer\n    nextPosition: posNames.NetworkEngineerCompanyPositions[1], // Network Adminsitrator\n    baseSalary: 121,\n    charismaEffectiveness: 15,\n    charismaExpGain: 0.05,\n    hackingEffectiveness: 85,\n    hackingExpGain: 0.4,\n    reqdCharisma: 26,\n    reqdHacking: 151,\n    reqdReputation: 35e3,\n    repMultiplier: 1.2,\n  },\n  {\n    name: posNames.NetworkEngineerCompanyPositions[1], // Network Administrator\n    nextPosition: posNames.SoftwareCompanyPositions[5], // Head of Engineering\n    baseSalary: 410,\n    charismaEffectiveness: 20,\n    charismaExpGain: 0.1,\n    hackingEffectiveness: 80,\n    hackingExpGain: 0.5,\n    reqdCharisma: 76,\n    reqdHacking: 251,\n    reqdReputation: 175e3,\n    repMultiplier: 1.3,\n  },\n  {\n    name: posNames.BusinessCompanyPositions[0], // Business Intern\n    nextPosition: posNames.BusinessCompanyPositions[1], // Business Analyst\n    baseSalary: 46,\n    charismaEffectiveness: 90,\n    charismaExpGain: 0.08,\n    hackingEffectiveness: 10,\n    hackingExpGain: 0.01,\n    reqdCharisma: 1,\n    reqdHacking: 1,\n    repMultiplier: 0.9,\n  },\n  {\n    name: posNames.BusinessCompanyPositions[1], // Business Analyst\n    nextPosition: posNames.BusinessCompanyPositions[2], // Business Manager\n    baseSalary: 100,\n    charismaEffectiveness: 85,\n    charismaExpGain: 0.15,\n    hackingEffectiveness: 15,\n    hackingExpGain: 0.02,\n    reqdCharisma: 51,\n    reqdHacking: 6,\n    reqdReputation: 8e3,\n    repMultiplier: 1.1,\n  },\n  {\n    name: posNames.BusinessCompanyPositions[2], // Business Manager\n    nextPosition: posNames.BusinessCompanyPositions[3], // Operations Manager\n    baseSalary: 200,\n    charismaEffectiveness: 85,\n    charismaExpGain: 0.3,\n    hackingEffectiveness: 15,\n    hackingExpGain: 0.02,\n    reqdCharisma: 101,\n    reqdHacking: 51,\n    reqdReputation: 40e3,\n    repMultiplier: 1.3,\n  },\n  {\n    name: posNames.BusinessCompanyPositions[3], // Operations Manager\n    nextPosition: posNames.BusinessCompanyPositions[4], // Chief Financial Officer\n    baseSalary: 660,\n    charismaEffectiveness: 85,\n    charismaExpGain: 0.4,\n    hackingEffectiveness: 15,\n    hackingExpGain: 0.02,\n    reqdCharisma: 226,\n    reqdHacking: 51,\n    reqdReputation: 200e3,\n    repMultiplier: 1.5,\n  },\n  {\n    name: posNames.BusinessCompanyPositions[4], // Chief Financial Officer\n    nextPosition: posNames.BusinessCompanyPositions[5], // Chief Executive Officer\n    baseSalary: 1950,\n    charismaEffectiveness: 90,\n    charismaExpGain: 1,\n    hackingEffectiveness: 10,\n    hackingExpGain: 0.05,\n    reqdCharisma: 501,\n    reqdHacking: 76,\n    reqdReputation: 800e3,\n    repMultiplier: 1.6,\n  },\n  {\n    name: posNames.BusinessCompanyPositions[5], // Chief Executive Officer\n    nextPosition: null,\n    baseSalary: 3900,\n    charismaEffectiveness: 90,\n    charismaExpGain: 1.5,\n    hackingEffectiveness: 10,\n    hackingExpGain: 0.05,\n    reqdCharisma: 751,\n    reqdHacking: 101,\n    reqdReputation: 3.2e6,\n    repMultiplier: 1.75,\n  },\n  {\n    name: posNames.SecurityCompanyPositions[0], // Police Officer\n    nextPosition: posNames.SecurityCompanyPositions[1], // Police Chief\n    baseSalary: 82,\n    hackingEffectiveness: 5,\n    strengthEffectiveness: 20,\n    defenseEffectiveness: 20,\n    dexterityEffectiveness: 20,\n    agilityEffectiveness: 20,\n    charismaEffectiveness: 15,\n    hackingExpGain: 0.02,\n    strengthExpGain: 0.08,\n    defenseExpGain: 0.08,\n    dexterityExpGain: 0.08,\n    agilityExpGain: 0.08,\n    charismaExpGain: 0.04,\n    reqdHacking: 11,\n    reqdStrength: 101,\n    reqdDefense: 101,\n    reqdDexterity: 101,\n    reqdAgility: 101,\n    reqdCharisma: 51,\n    reqdReputation: 8e3,\n    repMultiplier: 1,\n  },\n  {\n    name: posNames.SecurityCompanyPositions[1], // Police Chief\n    nextPosition: null,\n    baseSalary: 460,\n    hackingEffectiveness: 5,\n    strengthEffectiveness: 20,\n    defenseEffectiveness: 20,\n    dexterityEffectiveness: 20,\n    agilityEffectiveness: 20,\n    charismaEffectiveness: 15,\n    hackingExpGain: 0.02,\n    strengthExpGain: 0.1,\n    defenseExpGain: 0.1,\n    dexterityExpGain: 0.1,\n    agilityExpGain: 0.1,\n    charismaExpGain: 0.1,\n    reqdHacking: 101,\n    reqdStrength: 301,\n    reqdDefense: 301,\n    reqdDexterity: 301,\n    reqdAgility: 301,\n    reqdCharisma: 151,\n    reqdReputation: 36e3,\n    repMultiplier: 1.25,\n  },\n  {\n    name: posNames.SecurityCompanyPositions[2], // Security Guard\n    nextPosition: posNames.SecurityCompanyPositions[3], // Security Officer\n    baseSalary: 50,\n    hackingEffectiveness: 5,\n    strengthEffectiveness: 20,\n    defenseEffectiveness: 20,\n    dexterityEffectiveness: 20,\n    agilityEffectiveness: 20,\n    charismaEffectiveness: 15,\n    hackingExpGain: 0.01,\n    strengthExpGain: 0.04,\n    defenseExpGain: 0.04,\n    dexterityExpGain: 0.04,\n    agilityExpGain: 0.04,\n    charismaExpGain: 0.02,\n    reqdStrength: 51,\n    reqdDefense: 51,\n    reqdDexterity: 51,\n    reqdAgility: 51,\n    reqdCharisma: 1,\n    repMultiplier: 1,\n  },\n  {\n    name: posNames.SecurityCompanyPositions[3], // Security Officer\n    nextPosition: posNames.SecurityCompanyPositions[4], // Security Supervisor\n    baseSalary: 195,\n    hackingEffectiveness: 10,\n    strengthEffectiveness: 20,\n    defenseEffectiveness: 20,\n    dexterityEffectiveness: 20,\n    agilityEffectiveness: 20,\n    charismaEffectiveness: 10,\n    hackingExpGain: 0.02,\n    strengthExpGain: 0.1,\n    defenseExpGain: 0.1,\n    dexterityExpGain: 0.1,\n    agilityExpGain: 0.1,\n    charismaExpGain: 0.05,\n    reqdHacking: 26,\n    reqdStrength: 151,\n    reqdDefense: 151,\n    reqdDexterity: 151,\n    reqdAgility: 151,\n    reqdCharisma: 51,\n    reqdReputation: 8e3,\n    repMultiplier: 1.1,\n  },\n  {\n    name: posNames.SecurityCompanyPositions[4], // Security Supervisor\n    nextPosition: posNames.SecurityCompanyPositions[5], // Head of Security\n    baseSalary: 660,\n    hackingEffectiveness: 10,\n    strengthEffectiveness: 15,\n    defenseEffectiveness: 15,\n    dexterityEffectiveness: 15,\n    agilityEffectiveness: 15,\n    charismaEffectiveness: 30,\n    hackingExpGain: 0.02,\n    strengthExpGain: 0.12,\n    defenseExpGain: 0.12,\n    dexterityExpGain: 0.12,\n    agilityExpGain: 0.12,\n    charismaExpGain: 0.1,\n    reqdHacking: 26,\n    reqdStrength: 251,\n    reqdDefense: 251,\n    reqdDexterity: 251,\n    reqdAgility: 251,\n    reqdCharisma: 101,\n    reqdReputation: 36e3,\n    repMultiplier: 1.25,\n  },\n  {\n    name: posNames.SecurityCompanyPositions[5], // Head of Security\n    nextPosition: null,\n    baseSalary: 1320,\n    hackingEffectiveness: 10,\n    strengthEffectiveness: 15,\n    defenseEffectiveness: 15,\n    dexterityEffectiveness: 15,\n    agilityEffectiveness: 15,\n    charismaEffectiveness: 30,\n    hackingExpGain: 0.05,\n    strengthExpGain: 0.15,\n    defenseExpGain: 0.15,\n    dexterityExpGain: 0.15,\n    agilityExpGain: 0.15,\n    charismaExpGain: 0.15,\n    reqdHacking: 51,\n    reqdStrength: 501,\n    reqdDefense: 501,\n    reqdDexterity: 501,\n    reqdAgility: 501,\n    reqdCharisma: 151,\n    reqdReputation: 144e3,\n    repMultiplier: 1.4,\n  },\n  {\n    name: posNames.AgentCompanyPositions[0], // Field Agent\n    nextPosition: posNames.AgentCompanyPositions[1], // Secret Agent\n    baseSalary: 330,\n    hackingEffectiveness: 10,\n    strengthEffectiveness: 15,\n    defenseEffectiveness: 15,\n    dexterityEffectiveness: 20,\n    agilityEffectiveness: 20,\n    charismaEffectiveness: 20,\n    hackingExpGain: 0.04,\n    strengthExpGain: 0.08,\n    defenseExpGain: 0.08,\n    dexterityExpGain: 0.08,\n    agilityExpGain: 0.08,\n    charismaExpGain: 0.05,\n    reqdHacking: 101,\n    reqdStrength: 101,\n    reqdDefense: 101,\n    reqdDexterity: 101,\n    reqdAgility: 101,\n    reqdCharisma: 101,\n    reqdReputation: 8e3,\n    repMultiplier: 1,\n  },\n  {\n    name: posNames.AgentCompanyPositions[1], // Secret Agent\n    nextPosition: posNames.AgentCompanyPositions[2], // Special Operative\n    baseSalary: 990,\n    hackingEffectiveness: 15,\n    strengthEffectiveness: 15,\n    defenseEffectiveness: 15,\n    dexterityEffectiveness: 20,\n    agilityEffectiveness: 20,\n    charismaEffectiveness: 15,\n    hackingExpGain: 0.1,\n    strengthExpGain: 0.15,\n    defenseExpGain: 0.15,\n    dexterityExpGain: 0.15,\n    agilityExpGain: 0.15,\n    charismaExpGain: 0.1,\n    reqdHacking: 201,\n    reqdStrength: 251,\n    reqdDefense: 251,\n    reqdDexterity: 251,\n    reqdAgility: 251,\n    reqdCharisma: 201,\n    reqdReputation: 32e3,\n    repMultiplier: 1.25,\n  },\n  {\n    name: posNames.AgentCompanyPositions[2], // Special Operative\n    nextPosition: null,\n    baseSalary: 2000,\n    hackingEffectiveness: 15,\n    strengthEffectiveness: 15,\n    defenseEffectiveness: 15,\n    dexterityEffectiveness: 20,\n    agilityEffectiveness: 20,\n    charismaEffectiveness: 15,\n    hackingExpGain: 0.15,\n    strengthExpGain: 0.2,\n    defenseExpGain: 0.2,\n    dexterityExpGain: 0.2,\n    agilityExpGain: 0.2,\n    charismaExpGain: 0.15,\n    reqdHacking: 251,\n    reqdStrength: 501,\n    reqdDefense: 501,\n    reqdDexterity: 501,\n    reqdAgility: 501,\n    reqdCharisma: 251,\n    reqdReputation: 162e3,\n    repMultiplier: 1.5,\n  },\n  {\n    name: posNames.MiscCompanyPositions[0], // Waiter\n    nextPosition: null,\n    baseSalary: 22,\n    strengthEffectiveness: 10,\n    dexterityEffectiveness: 10,\n    agilityEffectiveness: 10,\n    charismaEffectiveness: 70,\n    strengthExpGain: 0.02,\n    defenseExpGain: 0.02,\n    dexterityExpGain: 0.02,\n    agilityExpGain: 0.02,\n    charismaExpGain: 0.05,\n    repMultiplier: 1,\n  },\n  {\n    name: posNames.MiscCompanyPositions[1], // Employee\n    nextPosition: null,\n    baseSalary: 22,\n    strengthEffectiveness: 10,\n    dexterityEffectiveness: 10,\n    agilityEffectiveness: 10,\n    charismaEffectiveness: 70,\n    strengthExpGain: 0.02,\n    defenseExpGain: 0.02,\n    dexterityExpGain: 0.02,\n    agilityExpGain: 0.02,\n    charismaExpGain: 0.04,\n    repMultiplier: 1,\n  },\n  {\n    name: posNames.SoftwareConsultantCompanyPositions[0], // Software Consultant\n    nextPosition: posNames.SoftwareConsultantCompanyPositions[1], // Senior Software Consultant\n    baseSalary: 66,\n    hackingEffectiveness: 80,\n    charismaEffectiveness: 20,\n    hackingExpGain: 0.08,\n    charismaExpGain: 0.03,\n    reqdHacking: 51,\n    repMultiplier: 1,\n  },\n  {\n    name: posNames.SoftwareConsultantCompanyPositions[1], // Senior Software Consultant\n    nextPosition: null,\n    baseSalary: 132,\n    hackingEffectiveness: 75,\n    charismaEffectiveness: 25,\n    hackingExpGain: 0.25,\n    charismaExpGain: 0.06,\n    reqdHacking: 251,\n    reqdCharisma: 51,\n    repMultiplier: 1.2,\n  },\n  {\n    name: posNames.BusinessConsultantCompanyPositions[0], // Business Consultant\n    nextPosition: posNames.BusinessConsultantCompanyPositions[1], // Senior Business Consultant\n    baseSalary: 66,\n    hackingEffectiveness: 20,\n    charismaEffectiveness: 80,\n    hackingExpGain: 0.015,\n    charismaExpGain: 0.15,\n    reqdHacking: 6,\n    reqdCharisma: 51,\n    repMultiplier: 1,\n  },\n  {\n    name: posNames.BusinessConsultantCompanyPositions[1], // Senior Business Consultant\n    nextPosition: null,\n    baseSalary: 525,\n    hackingEffectiveness: 15,\n    charismaEffectiveness: 85,\n    hackingExpGain: 0.015,\n    charismaExpGain: 0.3,\n    reqdHacking: 51,\n    reqdCharisma: 226,\n    repMultiplier: 1.2,\n  },\n  {\n    name: posNames.PartTimeCompanyPositions[0], // Part-time waiter\n    nextPosition: null,\n    baseSalary: 20,\n    strengthEffectiveness: 10,\n    dexterityEffectiveness: 10,\n    agilityEffectiveness: 10,\n    charismaEffectiveness: 70,\n    strengthExpGain: 0.0075,\n    defenseExpGain: 0.0075,\n    dexterityExpGain: 0.0075,\n    agilityExpGain: 0.0075,\n    charismaExpGain: 0.04,\n    repMultiplier: 1,\n  },\n  {\n    name: posNames.PartTimeCompanyPositions[1], // Part-time employee\n    nextPosition: null,\n    baseSalary: 20,\n    strengthEffectiveness: 10,\n    dexterityEffectiveness: 10,\n    agilityEffectiveness: 10,\n    charismaEffectiveness: 70,\n    strengthExpGain: 0.0075,\n    defenseExpGain: 0.0075,\n    dexterityExpGain: 0.0075,\n    agilityExpGain: 0.0075,\n    charismaExpGain: 0.03,\n    repMultiplier: 1,\n  },\n];\n","import React from \"react\";\nimport { Company } from \"../Company\";\nimport { use } from \"../../ui/Context\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  locName: string;\n  company: Company;\n  onQuit: () => void;\n}\n\nexport function QuitJobModal(props: IProps): React.ReactElement {\n  const player = use.Player();\n  function quit(): void {\n    player.quitJob(props.locName);\n    props.onQuit();\n    props.onClose();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography> Would you like to quit your job at {props.company.name}?</Typography>\n      <br />\n      <br />\n      <Button onClick={quit}>Quit</Button>\n    </Modal>\n  );\n}\n","/**\n * React Subcomponent for displaying a location's UI, when that location is a gym\n *\n * This subcomponent renders all of the buttons for training at the gym\n */\nimport * as React from \"react\";\nimport Button from \"@mui/material/Button\";\n\nimport { Location } from \"../Location\";\n\nimport { CONSTANTS } from \"../../Constants\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { getServer } from \"../../Server/ServerHelpers\";\nimport { Server } from \"../../Server/Server\";\nimport { SpecialServerIps } from \"../../Server/SpecialServerIps\";\n\nimport { Money } from \"../../ui/React/Money\";\nimport { IRouter } from \"../../ui/Router\";\n\ntype IProps = {\n  loc: Location;\n  p: IPlayer;\n  router: IRouter;\n};\n\nexport function GymLocation(props: IProps): React.ReactElement {\n  function calculateCost(): number {\n    const ip = SpecialServerIps.getIp(props.loc.name);\n    const server = getServer(ip);\n    if (server == null || !server.hasOwnProperty(\"backdoorInstalled\")) return props.loc.costMult;\n    const discount = (server as Server).backdoorInstalled ? 0.9 : 1;\n    return props.loc.costMult * discount;\n  }\n\n  function train(stat: string): void {\n    const loc = props.loc;\n    props.p.startClass(props.router, calculateCost(), loc.expMult, stat);\n  }\n\n  function trainStrength(): void {\n    train(CONSTANTS.ClassGymStrength);\n  }\n\n  function trainDefense(): void {\n    train(CONSTANTS.ClassGymDefense);\n  }\n\n  function trainDexterity(): void {\n    train(CONSTANTS.ClassGymDexterity);\n  }\n\n  function trainAgility(): void {\n    train(CONSTANTS.ClassGymAgility);\n  }\n\n  const cost = CONSTANTS.ClassGymBaseCost * calculateCost();\n\n  return (\n    <>\n      <Button onClick={trainStrength}>\n        Train Strength (<Money money={cost} player={props.p} /> / sec)\n      </Button>\n      <br />\n      <Button onClick={trainDefense}>\n        Train Defense (<Money money={cost} player={props.p} /> / sec)\n      </Button>\n      <br />\n      <Button onClick={trainDexterity}>\n        Train Dexterity (<Money money={cost} player={props.p} /> / sec)\n      </Button>\n      <br />\n      <Button onClick={trainAgility}>\n        Train Agility (<Money money={cost} player={props.p} /> / sec)\n      </Button>\n    </>\n  );\n}\n","/**\n * React Subcomponent for displaying a location's UI, when that location is a hospital\n *\n * This subcomponent renders all of the buttons for hospital options\n */\nimport * as React from \"react\";\nimport Button from \"@mui/material/Button\";\n\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { getHospitalizationCost } from \"../../Hospital/Hospital\";\n\nimport { Money } from \"../../ui/React/Money\";\n\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\n\ntype IProps = {\n  p: IPlayer;\n};\n\ntype IState = {\n  currHp: number;\n};\n\nexport class HospitalLocation extends React.Component<IProps, IState> {\n  /**\n   * Stores button styling that sets them all to block display\n   */\n  btnStyle: any;\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.btnStyle = { display: \"block\" };\n\n    this.getCost = this.getCost.bind(this);\n    this.getHealed = this.getHealed.bind(this);\n\n    this.state = {\n      currHp: this.props.p.hp,\n    };\n  }\n\n  getCost(): number {\n    return getHospitalizationCost(this.props.p);\n  }\n\n  getHealed(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n\n    if (this.props.p.hp < 0) {\n      this.props.p.hp = 0;\n    }\n    if (this.props.p.hp >= this.props.p.max_hp) {\n      return;\n    }\n\n    const cost = this.getCost();\n    this.props.p.loseMoney(cost);\n    this.props.p.hp = this.props.p.max_hp;\n    this.props.p.recordMoneySource(-1 * cost, \"hospitalization\");\n\n    // This just forces a re-render to update the cost\n    this.setState({\n      currHp: this.props.p.hp,\n    });\n\n    dialogBoxCreate(\n      <>\n        You were healed to full health! The hospital billed you for <Money money={cost} />\n      </>,\n    );\n  }\n\n  render(): React.ReactNode {\n    const cost = this.getCost();\n\n    return (\n      <Button onClick={this.getHealed} style={this.btnStyle}>\n        Get treatment for wounds - <Money money={cost} player={this.props.p} />\n      </Button>\n    );\n  }\n}\n","/**\n * React Subcomponent for displaying a location's UI, when that location is a slum\n *\n * This subcomponent renders all of the buttons for committing crimes\n */\nimport * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nimport { Crimes } from \"../../Crime/Crimes\";\n\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { use } from \"../../ui/Context\";\n\nexport function SlumsLocation(): React.ReactElement {\n  const player = use.Player();\n  const router = use.Router();\n  function shoplift(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    Crimes.Shoplift.commit(router, player);\n  }\n\n  function robStore(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    Crimes.RobStore.commit(router, player);\n  }\n\n  function mug(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    Crimes.Mug.commit(router, player);\n  }\n\n  function larceny(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    Crimes.Larceny.commit(router, player);\n  }\n\n  function dealDrugs(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    Crimes.DealDrugs.commit(router, player);\n  }\n\n  function bondForgery(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    Crimes.BondForgery.commit(router, player);\n  }\n\n  function traffickArms(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    Crimes.TraffickArms.commit(router, player);\n  }\n\n  function homicide(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    Crimes.Homicide.commit(router, player);\n  }\n\n  function grandTheftAuto(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    Crimes.GrandTheftAuto.commit(router, player);\n  }\n\n  function kidnap(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    Crimes.Kidnap.commit(router, player);\n  }\n\n  function assassinate(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    Crimes.Assassination.commit(router, player);\n  }\n\n  function heist(e: React.MouseEvent<HTMLElement>): void {\n    if (!e.isTrusted) {\n      return;\n    }\n    Crimes.Heist.commit(router, player);\n  }\n\n  const shopliftChance = Crimes.Shoplift.successRate(player);\n  const robStoreChance = Crimes.RobStore.successRate(player);\n  const mugChance = Crimes.Mug.successRate(player);\n  const larcenyChance = Crimes.Larceny.successRate(player);\n  const drugsChance = Crimes.DealDrugs.successRate(player);\n  const bondChance = Crimes.BondForgery.successRate(player);\n  const armsChance = Crimes.TraffickArms.successRate(player);\n  const homicideChance = Crimes.Homicide.successRate(player);\n  const gtaChance = Crimes.GrandTheftAuto.successRate(player);\n  const kidnapChance = Crimes.Kidnap.successRate(player);\n  const assassinateChance = Crimes.Assassination.successRate(player);\n  const heistChance = Crimes.Heist.successRate(player);\n\n  return (\n    <>\n      <Tooltip title={<>Attempt to shoplift from a low-end retailer</>}>\n        <Button onClick={shoplift}>\n          Shoplift ({numeralWrapper.formatPercentage(shopliftChance)} chance of success)\n        </Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={<>Attempt to commit armed robbery on a high-end store</>}>\n        <Button onClick={robStore}>\n          Rob store ({numeralWrapper.formatPercentage(robStoreChance)} chance of success)\n        </Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={<>Attempt to mug a random person on the street</>}>\n        <Button onClick={mug}>Mug someone ({numeralWrapper.formatPercentage(mugChance)} chance of success)</Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={<>Attempt to rob property from someone's house</>}>\n        <Button onClick={larceny}>Larceny ({numeralWrapper.formatPercentage(larcenyChance)} chance of success)</Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={<>Attempt to deal drugs</>}>\n        <Button onClick={dealDrugs}>\n          Deal Drugs ({numeralWrapper.formatPercentage(drugsChance)} chance of success)\n        </Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={<>Attempt to forge corporate bonds</>}>\n        <Button onClick={bondForgery}>\n          Bond Forgery ({numeralWrapper.formatPercentage(bondChance)} chance of success)\n        </Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={<>Attempt to smuggle illegal arms into the city</>}>\n        <Button onClick={traffickArms}>\n          Traffick illegal Arms ({numeralWrapper.formatPercentage(armsChance)} chance of success)\n        </Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={<>Attempt to murder a random person on the street</>}>\n        <Button onClick={homicide}>\n          Homicide ({numeralWrapper.formatPercentage(homicideChance)} chance of success)\n        </Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={<>Attempt to commit grand theft auto</>}>\n        <Button onClick={grandTheftAuto}>\n          Grand theft Auto ({numeralWrapper.formatPercentage(gtaChance)} chance of success)\n        </Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={<>Attempt to kidnap and ransom a high-profile-target</>}>\n        <Button onClick={kidnap}>\n          Kidnap and Ransom ({numeralWrapper.formatPercentage(kidnapChance)} chance of success)\n        </Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={<>Attempt to assassinate a high-profile target</>}>\n        <Button onClick={assassinate}>\n          Assassinate ({numeralWrapper.formatPercentage(assassinateChance)} chance of success)\n        </Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={<>Attempt to pull off the ultimate heist</>}>\n        <Button onClick={heist}>Heist ({numeralWrapper.formatPercentage(heistChance)} chance of success)</Button>\n      </Tooltip>\n      <br />\n    </>\n  );\n}\n","/**\n * React Subcomponent for displaying a location's UI, when that location has special\n * actions/options/properties\n *\n * Examples:\n *      - Bladeburner @ NSA\n *      - Re-sleeving @ VitaLife\n *      - Create Corporation @ City Hall\n *\n * This subcomponent creates all of the buttons for interacting with those special\n * properties\n */\nimport React, { useState } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nimport { Location } from \"../Location\";\nimport { CreateCorporationModal } from \"../../Corporation/ui/CreateCorporationModal\";\nimport { LocationName } from \"../data/LocationNames\";\n\nimport { use } from \"../../ui/Context\";\n\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\n\ntype IProps = {\n  loc: Location;\n};\n\nexport function SpecialLocation(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const router = use.Router();\n  const setRerender = useState(false)[1];\n  const inBladeburner = player.inBladeburner();\n\n  /**\n   * Click handler for Bladeburner button at Sector-12 NSA\n   */\n  function handleBladeburner(): void {\n    const p = player;\n    if (p.inBladeburner()) {\n      // Enter Bladeburner division\n      router.toBladeburner();\n    } else {\n      // Apply for Bladeburner division\n      if (p.strength >= 100 && p.defense >= 100 && p.dexterity >= 100 && p.agility >= 100) {\n        p.startBladeburner({ new: true });\n        dialogBoxCreate(\"You have been accepted into the Bladeburner division!\");\n        setRerender((old) => !old);\n\n        const worldHeader = document.getElementById(\"world-menu-header\");\n        if (worldHeader instanceof HTMLElement) {\n          worldHeader.click();\n          worldHeader.click();\n        }\n      } else {\n        dialogBoxCreate(\"Rejected! Please apply again when you have 100 of each combat stat (str, def, dex, agi)\");\n      }\n    }\n  }\n\n  /**\n   * Click handler for Resleeving button at New Tokyo VitaLife\n   */\n  function handleResleeving(): void {\n    router.toResleeves();\n  }\n\n  function renderBladeburner(): React.ReactElement {\n    if (!player.canAccessBladeburner()) {\n      return <></>;\n    }\n    const text = inBladeburner ? \"Enter Bladeburner Headquarters\" : \"Apply to Bladeburner Division\";\n    return <Button onClick={handleBladeburner}>{text}</Button>;\n  }\n\n  function renderNoodleBar(): React.ReactElement {\n    function EatNoodles(): void {\n      dialogBoxCreate(<>You ate some delicious noodles and feel refreshed.</>);\n    }\n\n    return <Button onClick={EatNoodles}>Eat noodles</Button>;\n  }\n\n  function CreateCorporation(): React.ReactElement {\n    const [open, setOpen] = useState(false);\n    if (!player.canAccessCorporation()) {\n      return (\n        <>\n          <Typography>\n            <i>A business man is yelling at a clerk. You should come back later.</i>\n          </Typography>\n        </>\n      );\n    }\n    return (\n      <>\n        <Button disabled={!player.canAccessCorporation() || player.hasCorporation()} onClick={() => setOpen(true)}>\n          Create a Corporation\n        </Button>\n        <CreateCorporationModal open={open} onClose={() => setOpen(false)} />\n      </>\n    );\n  }\n\n  function renderResleeving(): React.ReactElement {\n    if (!player.canAccessResleeving()) {\n      return <></>;\n    }\n    return <Button onClick={handleResleeving}>Re-Sleeve</Button>;\n  }\n\n  switch (props.loc.name) {\n    case LocationName.NewTokyoVitaLife: {\n      return renderResleeving();\n    }\n    case LocationName.Sector12CityHall: {\n      return <CreateCorporation />;\n    }\n    case LocationName.Sector12NSA: {\n      return renderBladeburner();\n    }\n    case LocationName.NewTokyoNoodleBar: {\n      return renderNoodleBar();\n    }\n    default:\n      console.error(`Location ${props.loc.name} doesn't have any special properties`);\n      return <></>;\n  }\n}\n","import React, { useState } from \"react\";\n\nimport { Money } from \"../../ui/React/Money\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { use } from \"../../ui/Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport function CreateCorporationModal(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const router = use.Router();\n  const canSelfFund = player.canAfford(150e9);\n  if (!player.canAccessCorporation() || player.hasCorporation()) {\n    props.onClose();\n    return <></>;\n  }\n\n  const [name, setName] = useState(\"\");\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setName(event.target.value);\n  }\n\n  function selfFund(): void {\n    if (!canSelfFund) {\n      return;\n    }\n\n    if (name == \"\") {\n      return;\n    }\n\n    player.startCorporation(name);\n    player.loseMoney(150e9);\n\n    props.onClose();\n    router.toCorporation();\n  }\n\n  function seed(): void {\n    if (name == \"\") {\n      return;\n    }\n\n    player.startCorporation(name, 500e6);\n\n    props.onClose();\n    router.toCorporation();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        Would you like to start a corporation? This will require $150b for registration and initial funding. This $150b\n        can either be self-funded, or you can obtain the seed money from the government in exchange for 500 million\n        shares\n        <br />\n        <br />\n        If you would like to start one, please enter a name for your corporation below:\n      </Typography>\n      <TextField autoFocus={true} placeholder=\"Corporation Name\" onChange={onChange} value={name} />\n      <Button onClick={seed} disabled={name == \"\"}>\n        Use seed money\n      </Button>\n      <Button onClick={selfFund} disabled={name == \"\" || !canSelfFund}>\n        Self-Fund (<Money money={150e9} player={player} />)\n      </Button>\n    </Modal>\n  );\n}\n","/**\n * React Subcomponent for displaying a location's UI, when that location is a tech vendor\n *\n * This subcomponent renders all of the buttons for purchasing things from tech vendors\n */\nimport React, { useState, useEffect } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nimport { Location } from \"../Location\";\nimport { RamButton } from \"./RamButton\";\nimport { TorButton } from \"./TorButton\";\nimport { CoresButton } from \"./CoresButton\";\n\nimport { getPurchaseServerCost } from \"../../Server/ServerPurchases\";\n\nimport { Money } from \"../../ui/React/Money\";\nimport { use } from \"../../ui/Context\";\nimport { PurchaseServerModal } from \"./PurchaseServerModal\";\n\ninterface IServerProps {\n  ram: number;\n  rerender: () => void;\n}\n\nfunction ServerButton(props: IServerProps): React.ReactElement {\n  const [open, setOpen] = useState(false);\n  const player = use.Player();\n  const cost = getPurchaseServerCost(props.ram);\n  return (\n    <>\n      <Button onClick={() => setOpen(true)} disabled={!player.canAfford(cost)}>\n        Purchase {props.ram}GB Server&nbsp;-&nbsp;\n        <Money money={cost} player={player} />\n      </Button>\n      <PurchaseServerModal\n        open={open}\n        onClose={() => setOpen(false)}\n        ram={props.ram}\n        cost={cost}\n        rerender={props.rerender}\n      />\n      <br />\n    </>\n  );\n}\n\ntype IProps = {\n  loc: Location;\n};\n\nexport function TechVendorLocation(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    const id = setInterval(rerender, 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  const purchaseServerButtons: React.ReactNode[] = [];\n  for (let i = props.loc.techVendorMinRam; i <= props.loc.techVendorMaxRam; i *= 2) {\n    purchaseServerButtons.push(<ServerButton key={i} ram={i} rerender={rerender} />);\n  }\n\n  return (\n    <>\n      {purchaseServerButtons}\n      <br />\n      <Typography>\n        <i>\"You can order bigger servers via scripts. We don't take custom order in person.\"</i>\n      </Typography>\n      <br />\n      <TorButton p={player} rerender={rerender} />\n      <br />\n      <RamButton p={player} rerender={rerender} />\n      <br />\n      <CoresButton p={player} rerender={rerender} />\n    </>\n  );\n}\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nimport { CONSTANTS } from \"../../Constants\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { purchaseRamForHomeComputer } from \"../../Server/ServerPurchases\";\n\nimport { Money } from \"../../ui/React/Money\";\nimport { MathComponent } from \"mathjax-react\";\n\ntype IProps = {\n  p: IPlayer;\n  rerender: () => void;\n};\n\nexport function RamButton(props: IProps): React.ReactElement {\n  const homeComputer = props.p.getHomeComputer();\n  if (homeComputer.maxRam >= CONSTANTS.HomeComputerMaxRam) {\n    return <Button>Upgrade 'home' RAM - MAX</Button>;\n  }\n\n  const cost = props.p.getUpgradeHomeRamCost();\n\n  function buy(): void {\n    purchaseRamForHomeComputer(props.p);\n    props.rerender();\n  }\n\n  return (\n    <Tooltip title={<MathComponent tex={String.raw`\\large{cost = 3.2 \\times 10^3 \\times 1.58^{log_2{(ram)}}}`} />}>\n      <span>\n        <Button disabled={!props.p.canAfford(cost)} onClick={buy}>\n          Upgrade 'home' RAM ({homeComputer.maxRam}GB -&gt;&nbsp;{homeComputer.maxRam * 2}GB) -&nbsp;\n          <Money money={cost} player={props.p} />\n        </Button>\n      </span>\n    </Tooltip>\n  );\n}\n","/**\n * Determines if the number is a power of 2\n * @param n The number to check.\n */\nexport function isPowerOfTwo(n: number): boolean {\n  if (isNaN(n)) {\n    return false;\n  }\n\n  if (n === 0) {\n    return false;\n  }\n\n  // Disabiling the bitwise rule because it's honestly the most effecient way to check for this.\n  // tslint:disable-next-line:no-bitwise\n  return (n & (n - 1)) === 0;\n}\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\n\nimport { purchaseTorRouter } from \"../LocationsHelpers\";\n\nimport { CONSTANTS } from \"../../Constants\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\nimport { Money } from \"../../ui/React/Money\";\n\ntype IProps = {\n  p: IPlayer;\n  rerender: () => void;\n};\n\nexport function TorButton(props: IProps): React.ReactElement {\n  function buy(): void {\n    purchaseTorRouter(props.p);\n    props.rerender();\n  }\n\n  if (props.p.hasTorRouter()) {\n    return <Button>TOR Router - Purchased</Button>;\n  }\n\n  return (\n    <Button disabled={!props.p.canAfford(CONSTANTS.TorRouterCost)} onClick={buy}>\n      Purchase TOR router -&nbsp;\n      <Money money={CONSTANTS.TorRouterCost} player={props.p} />\n    </Button>\n  );\n}\n","/**\n * Location and traveling-related helper functions.\n * Mostly used for UI\n */\nimport { CONSTANTS } from \"../Constants\";\n\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { AddToAllServers, createUniqueRandomIp } from \"../Server/AllServers\";\nimport { safetlyCreateUniqueServer } from \"../Server/ServerHelpers\";\nimport { SpecialServerIps } from \"../Server/SpecialServerIps\";\n\nimport { dialogBoxCreate } from \"../ui/React/DialogBox\";\n\n/**\n * Attempt to purchase a TOR router\n * @param {IPlayer} p - Player object\n */\nexport function purchaseTorRouter(p: IPlayer): void {\n  if (p.hasTorRouter()) {\n    dialogBoxCreate(`You already have a TOR Router!`);\n    return;\n  }\n  if (!p.canAfford(CONSTANTS.TorRouterCost)) {\n    dialogBoxCreate(\"You cannot afford to purchase the TOR router!\");\n    return;\n  }\n  p.loseMoney(CONSTANTS.TorRouterCost);\n\n  const darkweb = safetlyCreateUniqueServer({\n    ip: createUniqueRandomIp(),\n    hostname: \"darkweb\",\n    organizationName: \"\",\n    isConnectedTo: false,\n    adminRights: false,\n    purchasedByPlayer: false,\n    maxRam: 1,\n  });\n  AddToAllServers(darkweb);\n  SpecialServerIps.addIp(\"Darkweb Server\", darkweb.ip);\n\n  p.getHomeComputer().serversOnNetwork.push(darkweb.ip);\n  darkweb.serversOnNetwork.push(p.getHomeComputer().ip);\n  dialogBoxCreate(\n    \"You have purchased a TOR router!<br>\" +\n      \"You now have access to the dark web from your home computer.<br>\" +\n      \"Use the scan/scan-analyze commands to search for the dark web connection.\",\n  );\n}\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\nimport { Money } from \"../../ui/React/Money\";\nimport { MathComponent } from \"mathjax-react\";\n\ntype IProps = {\n  p: IPlayer;\n  rerender: () => void;\n};\n\nexport function CoresButton(props: IProps): React.ReactElement {\n  const homeComputer = props.p.getHomeComputer();\n  const maxCores = homeComputer.cpuCores >= 8;\n  if (maxCores) {\n    return <Button>Upgrade 'home' cores - MAX</Button>;\n  }\n\n  const cost = 1e9 * Math.pow(7.5, homeComputer.cpuCores);\n\n  function buy(): void {\n    if (maxCores) return;\n    if (!props.p.canAfford(cost)) return;\n    props.p.loseMoney(cost);\n    homeComputer.cpuCores++;\n    props.rerender();\n  }\n\n  return (\n    <Tooltip title={<MathComponent tex={String.raw`\\large{cost = 10^9 \\times 7.5 ^{\\text{cores}}}`} />}>\n      <span>\n        <Button disabled={!props.p.canAfford(cost)} onClick={buy}>\n          Upgrade 'home' cores ({homeComputer.cpuCores} -&gt; {homeComputer.cpuCores + 1}) -&nbsp;\n          <Money money={cost} player={props.p} />\n        </Button>\n      </span>\n    </Tooltip>\n  );\n}\n","/**\n * React Component for the popup used to purchase a new server.\n */\nimport React, { useState } from \"react\";\nimport { purchaseServer } from \"../../Server/ServerPurchases\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Money } from \"../../ui/React/Money\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { StdButton } from \"../../ui/React/StdButton\";\nimport { use } from \"../../ui/Context\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  ram: number;\n  cost: number;\n  rerender: () => void;\n}\n\nexport function PurchaseServerModal(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const [hostname, setHostname] = useState(\"\");\n\n  function tryToPurchaseServer(): void {\n    purchaseServer(hostname, props.ram, props.cost, player);\n    props.onClose();\n  }\n\n  function onKeyUp(event: React.KeyboardEvent<HTMLInputElement>): void {\n    if (event.keyCode === 13) tryToPurchaseServer();\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setHostname(event.target.value);\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        Would you like to purchase a new server with {numeralWrapper.formatRAM(props.ram)} of RAM for{\" \"}\n        <Money money={props.cost} player={player} />?\n      </Typography>\n      <br />\n      <br />\n      <Typography> Please enter the server hostname below:</Typography>\n      <br />\n\n      <TextField\n        autoFocus\n        onKeyUp={onKeyUp}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"Unique Hostname\"\n        InputProps={{\n          endAdornment: (\n            <Button onClick={tryToPurchaseServer} disabled={!player.canAfford(props.cost) || hostname === \"\"}>\n              Buy\n            </Button>\n          ),\n        }}\n      />\n    </Modal>\n  );\n}\n","import React from \"react\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { CONSTANTS } from \"../../Constants\";\nimport { Money } from \"../../ui/React/Money\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { use } from \"../../ui/Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  city: string;\n  travel: () => void;\n\n  open: boolean;\n  onClose: () => void;\n}\n\nexport function TravelConfirmationModal(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const cost = CONSTANTS.TravelCost;\n  function travel(): void {\n    props.travel();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        Would you like to travel to {props.city}? The trip will cost <Money money={cost} player={player} />.\n      </Typography>\n      <br />\n      <br />\n      <Button onClick={travel}>\n        <Typography>Travel</Typography>\n      </Button>\n    </Modal>\n  );\n}\n","/**\n * React Subcomponent for displaying a location's UI, when that location is a university\n *\n * This subcomponent renders all of the buttons for studying/taking courses\n */\nimport * as React from \"react\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Button from \"@mui/material/Button\";\n\nimport { Location } from \"../Location\";\n\nimport { CONSTANTS } from \"../../Constants\";\nimport { getServer } from \"../../Server/ServerHelpers\";\nimport { Server } from \"../../Server/Server\";\nimport { SpecialServerIps } from \"../../Server/SpecialServerIps\";\n\nimport { Money } from \"../../ui/React/Money\";\nimport { use } from \"../../ui/Context\";\n\ntype IProps = {\n  loc: Location;\n};\n\nexport function UniversityLocation(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const router = use.Router();\n\n  function calculateCost(): number {\n    const ip = SpecialServerIps.getIp(props.loc.name);\n    const server = getServer(ip);\n    if (server == null || !server.hasOwnProperty(\"backdoorInstalled\")) return props.loc.costMult;\n    const discount = (server as Server).backdoorInstalled ? 0.9 : 1;\n    return props.loc.costMult * discount;\n  }\n\n  function take(stat: string): void {\n    const loc = props.loc;\n    player.startClass(router, calculateCost(), loc.expMult, stat);\n  }\n\n  function study(): void {\n    take(CONSTANTS.ClassStudyComputerScience);\n  }\n\n  function dataStructures(): void {\n    take(CONSTANTS.ClassDataStructures);\n  }\n\n  function networks(): void {\n    take(CONSTANTS.ClassNetworks);\n  }\n\n  function algorithms(): void {\n    take(CONSTANTS.ClassAlgorithms);\n  }\n\n  function management(): void {\n    take(CONSTANTS.ClassManagement);\n  }\n\n  function leadership(): void {\n    take(CONSTANTS.ClassLeadership);\n  }\n\n  const costMult: number = calculateCost();\n\n  const dataStructuresCost = CONSTANTS.ClassDataStructuresBaseCost * costMult;\n  const networksCost = CONSTANTS.ClassNetworksBaseCost * costMult;\n  const algorithmsCost = CONSTANTS.ClassAlgorithmsBaseCost * costMult;\n  const managementCost = CONSTANTS.ClassManagementBaseCost * costMult;\n  const leadershipCost = CONSTANTS.ClassLeadershipBaseCost * costMult;\n\n  const earnHackingExpTooltip = `Gain hacking experience!`;\n  const earnCharismaExpTooltip = `Gain charisma experience!`;\n\n  return (\n    <>\n      <Tooltip title={earnHackingExpTooltip}>\n        <Button onClick={study}>Study Computer Science (free)</Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={earnHackingExpTooltip}>\n        <Button onClick={dataStructures}>\n          Take Data Structures course (\n          <Money money={dataStructuresCost} player={player} /> / sec)\n        </Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={earnHackingExpTooltip}>\n        <Button onClick={networks}>\n          Take Networks course (\n          <Money money={networksCost} player={player} /> / sec)\n        </Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={earnHackingExpTooltip}>\n        <Button onClick={algorithms}>\n          Take Algorithms course (\n          <Money money={algorithmsCost} player={player} /> / sec)\n        </Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={earnCharismaExpTooltip}>\n        <Button onClick={management}>\n          Take Management course (\n          <Money money={managementCost} player={player} /> / sec)\n        </Button>\n      </Tooltip>\n      <br />\n      <Tooltip title={earnCharismaExpTooltip}>\n        <Button onClick={leadership}>\n          Take Leadership course (\n          <Money money={leadershipCost} player={player} /> / sec)\n        </Button>\n      </Tooltip>\n    </>\n  );\n}\n","/**\n * React Subcomponent for displaying a location's UI, when that location is a gym\n *\n * This subcomponent renders all of the buttons for training at the gym\n */\nimport React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { Blackjack } from \"../../Casino/Blackjack\";\nimport { CoinFlip } from \"../../Casino/CoinFlip\";\nimport { Roulette } from \"../../Casino/Roulette\";\nimport { SlotMachine } from \"../../Casino/SlotMachine\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\nenum GameType {\n  None = \"none\",\n  Coin = \"coin\",\n  Slots = \"slots\",\n  Roulette = \"roulette\",\n  Blackjack = \"blackjack\",\n}\n\ntype IProps = {\n  p: IPlayer;\n};\n\ntype IState = {\n  game: GameType;\n};\n\nexport function CasinoLocation(props: IProps): React.ReactElement {\n  const [game, setGame] = useState(GameType.None);\n\n  function updateGame(game: GameType): void {\n    setGame(game);\n  }\n\n  return (\n    <>\n      {game === GameType.None && (\n        <>\n          <Button onClick={() => updateGame(GameType.Coin)}>Play coin flip</Button>\n          <br />\n          <Button onClick={() => updateGame(GameType.Slots)}>Play slots</Button>\n          <br />\n          <Button onClick={() => updateGame(GameType.Roulette)}>Play roulette</Button>\n          <br />\n          <Button onClick={() => updateGame(GameType.Blackjack)}>Play blackjack</Button>\n        </>\n      )}\n      {game !== GameType.None && (\n        <>\n          <Button onClick={() => updateGame(GameType.None)}>Stop playing</Button>\n          {game === GameType.Coin && <CoinFlip p={props.p} />}\n          {game === GameType.Slots && <SlotMachine p={props.p} />}\n          {game === GameType.Roulette && <Roulette p={props.p} />}\n          {game === GameType.Blackjack && <Blackjack p={props.p} />}\n        </>\n      )}\n    </>\n  );\n}\n","import * as React from \"react\";\n\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { Money } from \"../ui/React/Money\";\nimport { Game } from \"./Game\";\nimport { Deck } from \"./CardDeck/Deck\";\nimport { Hand } from \"./CardDeck/Hand\";\nimport { InputAdornment } from \"@mui/material\";\nimport { ReactCard } from \"./CardDeck/ReactCard\";\nimport Button from \"@mui/material/Button\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\n\nconst MAX_BET = 100e6;\n\nenum Result {\n  Pending = \"\",\n  PlayerWon = \"You won!\",\n  PlayerWonByBlackjack = \"You Won! Blackjack!\",\n  DealerWon = \"You lost!\",\n  Tie = \"Push! (Tie)\",\n}\n\ntype Props = {\n  p: IPlayer;\n};\n\ntype State = {\n  playerHand: Hand;\n  dealerHand: Hand;\n  bet: number;\n  betInput: string;\n  gameInProgress: boolean;\n  result: Result;\n  gains: number; // Track gains only for this session\n  wagerInvalid: boolean;\n  wagerInvalidHelperText: string;\n};\n\nexport class Blackjack extends Game<Props, State> {\n  deck: Deck;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.deck = new Deck(5); // 5-deck multideck\n\n    const initialBet = 1e6;\n\n    this.state = {\n      playerHand: new Hand([]),\n      dealerHand: new Hand([]),\n      bet: initialBet,\n      betInput: String(initialBet),\n      gameInProgress: false,\n      result: Result.Pending,\n      gains: 0,\n      wagerInvalid: false,\n      wagerInvalidHelperText: \"\",\n    };\n  }\n\n  canStartGame = (): boolean => {\n    const { p } = this.props;\n    const { bet } = this.state;\n\n    return p.canAfford(bet);\n  };\n\n  startGame = (): void => {\n    if (!this.canStartGame()) {\n      return;\n    }\n\n    // Take money from player right away so that player's dont just \"leave\" to avoid the loss (I mean they could\n    // always reload without saving but w.e)\n    this.props.p.loseMoney(this.state.bet);\n\n    const playerHand = new Hand([this.deck.safeDrawCard(), this.deck.safeDrawCard()]);\n    const dealerHand = new Hand([this.deck.safeDrawCard(), this.deck.safeDrawCard()]);\n\n    this.setState({\n      playerHand,\n      dealerHand,\n      gameInProgress: true,\n      result: Result.Pending,\n    });\n\n    // If the player is dealt a blackjack and the dealer is not, then the player\n    // immediately wins\n    if (this.getTrueHandValue(playerHand) === 21) {\n      if (this.getTrueHandValue(dealerHand) === 21) {\n        this.finishGame(Result.Tie);\n      } else {\n        this.finishGame(Result.PlayerWonByBlackjack);\n      }\n    } else if (this.getTrueHandValue(dealerHand) === 21) {\n      // Check if dealer won by blackjack. We know at this point that the player does not also have blackjack.\n      this.finishGame(Result.DealerWon);\n    }\n  };\n\n  // Returns an array of numbers representing all possible values of the given Hand. The reason it needs to be\n  // an array is because an Ace can count as both 1 and 11.\n  getHandValue = (hand: Hand): number[] => {\n    let result: number[] = [0];\n\n    for (let i = 0; i < hand.cards.length; ++i) {\n      const value = hand.cards[i].value;\n      if (value >= 10) {\n        result = result.map((x) => x + 10);\n      } else if (value === 1) {\n        result = result.flatMap((x) => [x + 1, x + 11]);\n      } else {\n        result = result.map((x) => x + value);\n      }\n    }\n\n    return result;\n  };\n\n  // Returns the single hand value used for determine things like victory and whether or not\n  // the dealer has to hit. Essentially this uses the biggest value that's 21 or under. If no such value exists,\n  // then it means the hand is busted and we can just return whatever\n  getTrueHandValue = (hand: Hand): number => {\n    const handValues = this.getHandValue(hand);\n    const valuesUnder21 = handValues.filter((x) => x <= 21);\n\n    if (valuesUnder21.length > 0) {\n      valuesUnder21.sort((a, b) => a - b);\n      return valuesUnder21[valuesUnder21.length - 1];\n    } else {\n      // Just return the first value. It doesnt really matter anyways since hand is buted\n      return handValues[0];\n    }\n  };\n\n  // Returns all hand values that are 21 or under. If no values are 21 or under, then the first value is returned.\n  getHandDisplayValues = (hand: Hand): number[] => {\n    const handValues = this.getHandValue(hand);\n    if (this.isHandBusted(hand)) {\n      // Hand is busted so just return the 1st value, doesn't really matter\n      return [...new Set([handValues[0]])];\n    } else {\n      return [...new Set(handValues.filter((x) => x <= 21))];\n    }\n  };\n\n  isHandBusted = (hand: Hand): boolean => {\n    return this.getTrueHandValue(hand) > 21;\n  };\n\n  playerHit = (event: React.MouseEvent): void => {\n    if (!event.isTrusted) {\n      return;\n    }\n\n    const newHand = this.state.playerHand.addCards(this.deck.safeDrawCard());\n\n    this.setState({\n      playerHand: newHand,\n    });\n\n    // Check if player busted, and finish the game if so\n    if (this.isHandBusted(newHand)) {\n      this.finishGame(Result.DealerWon);\n    }\n  };\n\n  playerStay = (event: React.MouseEvent): void => {\n    if (!event.isTrusted) {\n      return;\n    }\n\n    // Determine if Dealer needs to hit. A dealer must hit if they have 16 or lower.\n    // If the dealer has a Soft 17 (Ace + 6), then they stay.\n    let newDealerHand = this.state.dealerHand;\n    while (true) {\n      // The dealer's \"true\" hand value is the 2nd one if its 21 or less (the 2nd value is always guaranteed\n      // to be equal or larger). Otherwise its the 1st.\n      const dealerHandValue = this.getTrueHandValue(newDealerHand);\n\n      if (dealerHandValue <= 16) {\n        newDealerHand = newDealerHand.addCards(this.deck.safeDrawCard());\n      } else {\n        break;\n      }\n    }\n\n    this.setState({\n      dealerHand: newDealerHand,\n    });\n\n    // If dealer has busted, then player wins\n    if (this.isHandBusted(newDealerHand)) {\n      this.finishGame(Result.PlayerWon);\n    } else {\n      const dealerHandValue = this.getTrueHandValue(newDealerHand);\n      const playerHandValue = this.getTrueHandValue(this.state.playerHand);\n\n      // We expect nobody to have busted. If someone busted, there is an error\n      // in our game logic\n      if (dealerHandValue > 21 || playerHandValue > 21) {\n        throw new Error(\"Someone busted when not expected to\");\n      }\n\n      if (playerHandValue > dealerHandValue) {\n        this.finishGame(Result.PlayerWon);\n      } else if (playerHandValue < dealerHandValue) {\n        this.finishGame(Result.DealerWon);\n      } else {\n        this.finishGame(Result.Tie);\n      }\n    }\n  };\n\n  finishGame = (result: Result): void => {\n    let gains = 0;\n    if (this.isPlayerWinResult(result)) {\n      gains = this.state.bet;\n\n      // We 2x the gains because we took away money at the start, so we need to give the original bet back.\n      this.win(this.props.p, 2 * gains);\n    } else if (result === Result.DealerWon) {\n      gains = -1 * this.state.bet;\n      this.win(this.props.p, -this.state.bet); // Get the original bet back\n      // Dont need to take money here since we already did it at the start\n    } else if (result === Result.Tie) {\n      this.win(this.props.p, this.state.bet); // Get the original bet back\n    }\n\n    this.setState({\n      gameInProgress: false,\n      result,\n      gains: this.state.gains + gains,\n    });\n  };\n\n  isPlayerWinResult = (result: Result): boolean => {\n    return result === Result.PlayerWon || result === Result.PlayerWonByBlackjack;\n  };\n\n  wagerOnChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { p } = this.props;\n    const betInput = event.target.value;\n    const wager = Math.round(parseFloat(betInput));\n    if (isNaN(wager)) {\n      this.setState({\n        bet: 0,\n        betInput,\n        wagerInvalid: true,\n        wagerInvalidHelperText: \"Not a valid number\",\n      });\n    } else if (wager <= 0) {\n      this.setState({\n        bet: 0,\n        betInput,\n        wagerInvalid: true,\n        wagerInvalidHelperText: \"Must bet a postive amount\",\n      });\n    } else if (wager > MAX_BET) {\n      this.setState({\n        bet: 0,\n        betInput,\n        wagerInvalid: true,\n        wagerInvalidHelperText: \"Exceeds max bet\",\n      });\n    } else if (!p.canAfford(wager)) {\n      this.setState({\n        bet: 0,\n        betInput,\n        wagerInvalid: true,\n        wagerInvalidHelperText: \"Not enough money\",\n      });\n    } else {\n      // Valid wager\n      this.setState({\n        bet: wager,\n        betInput,\n        wagerInvalid: false,\n        wagerInvalidHelperText: \"\",\n        result: Result.Pending, // Reset previous game status to clear the win/lose text UI\n      });\n    }\n  };\n\n  // Start game button\n  startOnClick = (event: React.MouseEvent): void => {\n    // Protect against scripting...although maybe this would be fun to automate\n    if (!event.isTrusted) {\n      return;\n    }\n\n    if (!this.state.wagerInvalid) {\n      this.startGame();\n    }\n  };\n\n  render(): React.ReactNode {\n    const { betInput, playerHand, dealerHand, gameInProgress, result, wagerInvalid, wagerInvalidHelperText, gains } =\n      this.state;\n\n    // Get the player totals to display.\n    const playerHandValues = this.getHandDisplayValues(playerHand);\n    const dealerHandValues = this.getHandDisplayValues(dealerHand);\n\n    return (\n      <>\n        {/* Wager input */}\n        <Box>\n          <TextField\n            value={betInput}\n            label={\n              <>\n                {\"Wager (Max: \"}\n                <Money money={MAX_BET} />\n                {\")\"}\n              </>\n            }\n            disabled={gameInProgress}\n            onChange={this.wagerOnChange}\n            error={wagerInvalid}\n            helperText={wagerInvalid ? wagerInvalidHelperText : \"\"}\n            type=\"number\"\n            style={{\n              width: \"200px\",\n            }}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Typography>$</Typography>\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <Typography>\n            {\"Total earnings this session: \"}\n            <Money money={gains} />\n          </Typography>\n        </Box>\n\n        {/* Buttons */}\n        {!gameInProgress ? (\n          <Button onClick={this.startOnClick} disabled={wagerInvalid || !this.canStartGame()}>\n            Start\n          </Button>\n        ) : (\n          <>\n            <Button onClick={this.playerHit}>Hit</Button>\n            <Button color=\"secondary\" onClick={this.playerStay}>\n              Stay\n            </Button>\n          </>\n        )}\n\n        {/* Main game part. Displays both if the game is in progress OR if there's a result so you can see\n         * the cards that led to that result. */}\n        {(gameInProgress || result !== Result.Pending) && (\n          <>\n            <Box display=\"flex\">\n              <Paper elevation={2}>\n                <pre>Player</pre>\n                {playerHand.cards.map((card, i) => (\n                  <ReactCard card={card} key={i} />\n                ))}\n\n                <pre>Value(s): </pre>\n                {playerHandValues.map((value, i) => (\n                  <pre key={i}>{value}</pre>\n                ))}\n              </Paper>\n            </Box>\n\n            <br />\n\n            <Box display=\"flex\">\n              <Paper elevation={2}>\n                <pre>Dealer</pre>\n                {dealerHand.cards.map((card, i) => (\n                  // Hide every card except the first while game is in progress\n                  <ReactCard card={card} hidden={gameInProgress && i !== 0} key={i} />\n                ))}\n\n                {!gameInProgress && (\n                  <>\n                    <pre>Value(s): </pre>\n                    {dealerHandValues.map((value, i) => (\n                      <pre key={i}>{value}</pre>\n                    ))}\n                  </>\n                )}\n              </Paper>\n            </Box>\n          </>\n        )}\n\n        {/* Results from previous round */}\n        {result !== Result.Pending && (\n          <Typography>\n            {result}\n            {this.isPlayerWinResult(result) && <Money money={this.state.bet} />}\n            {result === Result.DealerWon && <Money money={this.state.bet} />}\n          </Typography>\n        )}\n      </>\n    );\n  }\n}\n","import { Card, Suit } from \"./Card\";\nimport { shuffle } from \"lodash\";\n\nexport class Deck {\n  private cards: Card[] = [];\n\n  // Support multiple decks\n  constructor(private numDecks = 1) {\n    this.reset();\n  }\n\n  shuffle(): void {\n    this.cards = shuffle(this.cards); // Just use lodash\n  }\n\n  drawCard(): Card {\n    if (this.cards.length == 0) {\n      throw new Error(\"Tried to draw card from empty deck\");\n    }\n\n    return this.cards.shift() as Card; // Guaranteed to return a Card since we throw an Error if array is empty\n  }\n\n  // Draws a card, resetting the deck beforehands if the Deck is empty\n  safeDrawCard(): Card {\n    if (this.cards.length === 0) {\n      this.reset();\n    }\n\n    return this.drawCard();\n  }\n\n  // Reset the deck back to the original 52 cards and shuffle it\n  reset(): void {\n    this.cards = [];\n\n    for (let i = 1; i <= 13; ++i) {\n      for (let j = 0; j < this.numDecks; ++j) {\n        this.cards.push(new Card(i, Suit.Clubs));\n        this.cards.push(new Card(i, Suit.Diamonds));\n        this.cards.push(new Card(i, Suit.Hearts));\n        this.cards.push(new Card(i, Suit.Spades));\n      }\n    }\n\n    this.shuffle();\n  }\n\n  size(): number {\n    return this.cards.length;\n  }\n\n  isEmpty(): boolean {\n    return this.cards.length === 0;\n  }\n}\n","/**\n * React Subcomponent for displaying a location's UI, when that location is a gym\n *\n * This subcomponent renders all of the buttons for training at the gym\n */\nimport React, { useState } from \"react\";\n\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { BadRNG } from \"./RNG\";\nimport { win, reachedLimit } from \"./Game\";\nimport { trusted } from \"./utils\";\n\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\n\ntype IProps = {\n  p: IPlayer;\n};\n\nconst minPlay = 0;\nconst maxPlay = 10e3;\n\nexport function CoinFlip(props: IProps): React.ReactElement {\n  const [investment, setInvestment] = useState(1000);\n  const [result, setResult] = useState(<span> </span>);\n  const [status, setStatus] = useState(\"\");\n  const [playLock, setPlayLock] = useState(false);\n\n  function updateInvestment(e: React.ChangeEvent<HTMLInputElement>): void {\n    let investment: number = parseInt(e.currentTarget.value);\n    if (isNaN(investment)) {\n      investment = minPlay;\n    }\n    if (investment > maxPlay) {\n      investment = maxPlay;\n    }\n    if (investment < minPlay) {\n      investment = minPlay;\n    }\n    setInvestment(investment);\n  }\n\n  function play(guess: string): void {\n    if (reachedLimit(props.p)) return;\n    const v = BadRNG.random();\n    let letter: string;\n    if (v < 0.5) {\n      letter = \"H\";\n    } else {\n      letter = \"T\";\n    }\n    const correct: boolean = guess === letter;\n\n    setResult(\n      <Box display=\"flex\">\n        <Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }} color={correct ? \"primary\" : \"error\"}>\n          {letter}\n        </Typography>\n      </Box>,\n    );\n    setStatus(correct ? \" win!\" : \"lose!\");\n    setPlayLock(true);\n\n    setTimeout(() => setPlayLock(false), 250);\n    if (correct) {\n      win(props.p, investment);\n    } else {\n      win(props.p, -investment);\n    }\n    if (reachedLimit(props.p)) return;\n  }\n\n  return (\n    <>\n      <Typography>Result:</Typography> {result}\n      <Box display=\"flex\" alignItems=\"center\">\n        <TextField\n          type=\"number\"\n          onChange={updateInvestment}\n          InputProps={{\n            endAdornment: (\n              <>\n                <Button onClick={trusted(() => play(\"H\"))} disabled={playLock}>\n                  Head!\n                </Button>\n                <Button onClick={trusted(() => play(\"T\"))} disabled={playLock}>\n                  Tail!\n                </Button>\n              </>\n            ),\n          }}\n        />\n      </Box>\n      <Typography variant=\"h3\">{status}</Typography>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { Money } from \"../ui/React/Money\";\nimport { win, reachedLimit } from \"./Game\";\nimport { WHRNG } from \"./RNG\";\nimport { trusted } from \"./utils\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\n\ntype IProps = {\n  p: IPlayer;\n};\n\nconst minPlay = 0;\nconst maxPlay = 1e7;\n\nfunction isRed(n: number): boolean {\n  return [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36].includes(n);\n}\n\ntype Strategy = {\n  match: (n: number) => boolean;\n  payout: number;\n};\n\nconst redNumbers: number[] = [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36];\n\nconst strategies: {\n  Red: Strategy;\n  Black: Strategy;\n  Odd: Strategy;\n  Even: Strategy;\n  High: Strategy;\n  Low: Strategy;\n  Third1: Strategy;\n  Third2: Strategy;\n  Third3: Strategy;\n} = {\n  Red: {\n    match: (n: number): boolean => {\n      if (n === 0) return false;\n      return redNumbers.includes(n);\n    },\n    payout: 1,\n  },\n  Black: {\n    match: (n: number): boolean => {\n      return !redNumbers.includes(n);\n    },\n    payout: 1,\n  },\n  Odd: {\n    match: (n: number): boolean => {\n      if (n === 0) return false;\n      return n % 2 === 1;\n    },\n    payout: 1,\n  },\n  Even: {\n    match: (n: number): boolean => {\n      if (n === 0) return false;\n      return n % 2 === 0;\n    },\n    payout: 1,\n  },\n  High: {\n    match: (n: number): boolean => {\n      if (n === 0) return false;\n      return n > 18;\n    },\n    payout: 1,\n  },\n  Low: {\n    match: (n: number): boolean => {\n      if (n === 0) return false;\n      return n < 19;\n    },\n    payout: 1,\n  },\n  Third1: {\n    match: (n: number): boolean => {\n      if (n === 0) return false;\n      return n <= 12;\n    },\n    payout: 2,\n  },\n  Third2: {\n    match: (n: number): boolean => {\n      if (n === 0) return false;\n      return n >= 13 && n <= 24;\n    },\n    payout: 2,\n  },\n  Third3: {\n    match: (n: number): boolean => {\n      if (n === 0) return false;\n      return n >= 25;\n    },\n    payout: 2,\n  },\n};\n\nfunction Single(s: number): Strategy {\n  return {\n    match: (n: number): boolean => {\n      return s === n;\n    },\n    payout: 36,\n  };\n}\n\nexport function Roulette(props: IProps): React.ReactElement {\n  const [rng] = useState(new WHRNG(new Date().getTime()));\n  const [investment, setInvestment] = useState(1000);\n  const [canPlay, setCanPlay] = useState(true);\n  const [status, setStatus] = useState<string | JSX.Element>(\"waiting\");\n  const [n, setN] = useState(0);\n  const [lock, setLock] = useState(true);\n  const [strategy, setStrategy] = useState<Strategy>({\n    payout: 0,\n    match: (): boolean => {\n      return false;\n    },\n  });\n\n  useEffect(() => {\n    const i = window.setInterval(step, 50);\n    return () => clearInterval(i);\n  });\n\n  function step(): void {\n    if (!lock) {\n      setN(Math.floor(Math.random() * 37));\n    }\n  }\n\n  function updateInvestment(e: React.ChangeEvent<HTMLInputElement>): void {\n    let investment: number = parseInt(e.currentTarget.value);\n    if (isNaN(investment)) {\n      investment = minPlay;\n    }\n    if (investment > maxPlay) {\n      investment = maxPlay;\n    }\n    if (investment < minPlay) {\n      investment = minPlay;\n    }\n    setInvestment(investment);\n  }\n\n  function currentNumber(): string {\n    if (n === 0) return \"0\";\n    const color = isRed(n) ? \"R\" : \"B\";\n    return `${n}${color}`;\n  }\n\n  function play(s: Strategy): void {\n    if (reachedLimit(props.p)) return;\n\n    setCanPlay(false);\n    setLock(false);\n    setStatus(\"playing\");\n    setStrategy(s);\n\n    setTimeout(() => {\n      let n = Math.floor(rng.random() * 37);\n      let status = <></>;\n      let gain = 0;\n      let playerWin = strategy.match(n);\n      // oh yeah, the house straight up cheats. Try finding the seed now!\n      if (playerWin && Math.random() > 0.9) {\n        playerWin = false;\n        while (strategy.match(n)) {\n          n = (n + 1) % 36;\n        }\n      }\n      if (playerWin) {\n        gain = investment * strategy.payout;\n        status = (\n          <>\n            won <Money money={gain} />\n          </>\n        );\n      } else {\n        gain = -investment;\n        status = (\n          <>\n            lost <Money money={-gain} />\n          </>\n        );\n      }\n      win(props.p, gain);\n\n      setCanPlay(true);\n      setLock(true);\n      setStatus(status);\n      setN(n);\n\n      reachedLimit(props.p);\n    }, 1600);\n  }\n\n  return (\n    <>\n      <Typography variant=\"h4\">{currentNumber()}</Typography>\n      <TextField type=\"number\" onChange={updateInvestment} placeholder={\"Amount to play\"} disabled={!canPlay} />\n      <Typography variant=\"h4\">{status}</Typography>\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(3)))}>\n                3\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(6)))}>\n                6\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(9)))}>\n                9\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(12)))}>\n                12\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(15)))}>\n                15\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(18)))}>\n                18\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(21)))}>\n                21\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(24)))}>\n                24\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(27)))}>\n                27\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(30)))}>\n                30\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(33)))}>\n                33\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(36)))}>\n                36\n              </Button>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(2)))}>\n                2\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(5)))}>\n                5\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(8)))}>\n                8\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(11)))}>\n                11\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(14)))}>\n                14\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(17)))}>\n                17\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(20)))}>\n                20\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(23)))}>\n                23\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(26)))}>\n                26\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(29)))}>\n                29\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(32)))}>\n                32\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(35)))}>\n                35\n              </Button>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(1)))}>\n                1\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(4)))}>\n                4\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(7)))}>\n                7\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(10)))}>\n                10\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(13)))}>\n                13\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(16)))}>\n                16\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(19)))}>\n                19\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(22)))}>\n                22\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(25)))}>\n                25\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(28)))}>\n                28\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(31)))}>\n                31\n              </Button>\n            </td>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(34)))}>\n                34\n              </Button>\n            </td>\n          </tr>\n          <tr>\n            <td colSpan={4}>\n              <Button disabled={!canPlay} onClick={trusted(() => play(strategies.Third1))}>\n                1 to 12\n              </Button>\n            </td>\n            <td colSpan={4}>\n              <Button disabled={!canPlay} onClick={trusted(() => play(strategies.Third2))}>\n                13 to 24\n              </Button>\n            </td>\n            <td colSpan={4}>\n              <Button disabled={!canPlay} onClick={trusted(() => play(strategies.Third3))}>\n                25 to 36\n              </Button>\n            </td>\n          </tr>\n          <tr>\n            <td colSpan={2}>\n              <Button disabled={!canPlay} onClick={trusted(() => play(strategies.Red))}>\n                Red\n              </Button>\n            </td>\n            <td colSpan={2}>\n              <Button disabled={!canPlay} onClick={trusted(() => play(strategies.Black))}>\n                Black\n              </Button>\n            </td>\n            <td colSpan={2}>\n              <Button disabled={!canPlay} onClick={trusted(() => play(strategies.Odd))}>\n                Odd\n              </Button>\n            </td>\n            <td colSpan={2}>\n              <Button disabled={!canPlay} onClick={trusted(() => play(strategies.Even))}>\n                Even\n              </Button>\n            </td>\n            <td colSpan={2}>\n              <Button disabled={!canPlay} onClick={trusted(() => play(strategies.High))}>\n                High\n              </Button>\n            </td>\n            <td colSpan={2}>\n              <Button disabled={!canPlay} onClick={trusted(() => play(strategies.Low))}>\n                Low\n              </Button>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <Button disabled={!canPlay} onClick={trusted(() => play(Single(0)))}>\n                0\n              </Button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { Money } from \"../ui/React/Money\";\nimport { WHRNG } from \"./RNG\";\nimport { win, reachedLimit } from \"./Game\";\nimport { trusted } from \"./utils\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\n\ntype IProps = {\n  p: IPlayer;\n};\n\ntype IState = {\n  index: number[];\n  locks: number[];\n  investment: number;\n  canPlay: boolean;\n  status: string | JSX.Element;\n};\n\n// statically shuffled array of symbols.\nconst symbols = [\n  \"D\",\n  \"C\",\n  \"$\",\n  \"?\",\n  \"♥\",\n  \"A\",\n  \"C\",\n  \"B\",\n  \"C\",\n  \"E\",\n  \"B\",\n  \"E\",\n  \"C\",\n  \"*\",\n  \"D\",\n  \"♥\",\n  \"B\",\n  \"A\",\n  \"A\",\n  \"A\",\n  \"C\",\n  \"A\",\n  \"D\",\n  \"B\",\n  \"E\",\n  \"?\",\n  \"D\",\n  \"*\",\n  \"@\",\n  \"♥\",\n  \"B\",\n  \"E\",\n  \"?\",\n];\n\nfunction getPayout(s: string, n: number): number {\n  switch (s) {\n    case \"$\":\n      return [20, 200, 1000][n];\n    case \"@\":\n      return [8, 80, 400][n];\n    case \"♥\":\n    case \"?\":\n      return [6, 20, 150][n];\n    case \"D\":\n    case \"E\":\n      return [1, 8, 30][n];\n    default:\n      return [1, 5, 20][n];\n  }\n}\n\nconst payLines = [\n  // lines\n  [\n    [0, 0],\n    [0, 1],\n    [0, 2],\n    [0, 3],\n    [0, 4],\n  ],\n  [\n    [1, 0],\n    [1, 1],\n    [1, 2],\n    [1, 3],\n    [1, 4],\n  ],\n  [\n    [2, 0],\n    [2, 1],\n    [2, 2],\n    [2, 3],\n    [2, 4],\n  ],\n\n  // Vs\n  [\n    [2, 0],\n    [1, 1],\n    [0, 2],\n    [1, 3],\n    [2, 4],\n  ],\n  [\n    [0, 0],\n    [1, 1],\n    [2, 2],\n    [1, 3],\n    [0, 4],\n  ],\n\n  // rest\n  [\n    [0, 0],\n    [1, 1],\n    [1, 2],\n    [1, 3],\n    [0, 4],\n  ],\n  [\n    [2, 0],\n    [1, 1],\n    [1, 2],\n    [1, 3],\n    [2, 4],\n  ],\n  [\n    [1, 0],\n    [0, 1],\n    [0, 2],\n    [0, 3],\n    [1, 4],\n  ],\n  [\n    [1, 0],\n    [2, 1],\n    [2, 2],\n    [2, 3],\n    [1, 4],\n  ],\n];\n\nconst minPlay = 0;\nconst maxPlay = 1e6;\n\nexport function SlotMachine(props: IProps): React.ReactElement {\n  const [rng] = useState(new WHRNG(props.p.totalPlaytime));\n  const [index, setIndex] = useState<number[]>([0, 0, 0, 0, 0]);\n  const [locks, setLocks] = useState<number[]>([0, 0, 0, 0, 0]);\n  const [investment, setInvestment] = useState(1000);\n  const [canPlay, setCanPlay] = useState(true);\n  const [status, setStatus] = useState<string | JSX.Element>(\"waiting\");\n\n  useEffect(() => {\n    const i = window.setInterval(step, 50);\n    return () => clearInterval(i);\n  });\n\n  function step(): void {\n    let stoppedOne = false;\n    const copy = index.slice();\n    for (const i in copy) {\n      if (copy[i] === locks[i] && !stoppedOne) continue;\n      copy[i] = (copy[i] + 1) % symbols.length;\n      stoppedOne = true;\n    }\n\n    setIndex(copy);\n\n    if (stoppedOne && copy.every((e, i) => e === locks[i])) {\n      checkWinnings();\n    }\n  }\n\n  function getTable(): string[][] {\n    return [\n      [\n        symbols[(index[0] + symbols.length - 1) % symbols.length],\n        symbols[(index[1] + symbols.length - 1) % symbols.length],\n        symbols[(index[2] + symbols.length - 1) % symbols.length],\n        symbols[(index[3] + symbols.length - 1) % symbols.length],\n        symbols[(index[4] + symbols.length - 1) % symbols.length],\n      ],\n      [symbols[index[0]], symbols[index[1]], symbols[index[2]], symbols[index[3]], symbols[index[4]]],\n      [\n        symbols[(index[0] + 1) % symbols.length],\n        symbols[(index[1] + 1) % symbols.length],\n        symbols[(index[2] + 1) % symbols.length],\n        symbols[(index[3] + 1) % symbols.length],\n        symbols[(index[4] + 1) % symbols.length],\n      ],\n    ];\n  }\n\n  function play(): void {\n    if (reachedLimit(props.p)) return;\n    setStatus(\"playing\");\n    win(props.p, -investment);\n    if (!canPlay) return;\n    unlock();\n    setTimeout(lock, rng.random() * 2000 + 1000);\n  }\n\n  function lock(): void {\n    setLocks([\n      Math.floor(rng.random() * symbols.length),\n      Math.floor(rng.random() * symbols.length),\n      Math.floor(rng.random() * symbols.length),\n      Math.floor(rng.random() * symbols.length),\n      Math.floor(rng.random() * symbols.length),\n    ]);\n  }\n\n  function checkWinnings(): void {\n    const t = getTable();\n    const getPaylineData = function (payline: number[][]): string[] {\n      const data = [];\n      for (const point of payline) {\n        data.push(t[point[0]][point[1]]);\n      }\n      return data;\n    };\n\n    const countSequence = function (data: string[]): number {\n      let count = 1;\n      for (let i = 1; i < data.length; i++) {\n        if (data[i] !== data[i - 1]) break;\n        count++;\n      }\n\n      return count;\n    };\n\n    let gains = -investment;\n    for (const payline of payLines) {\n      const data = getPaylineData(payline);\n      const count = countSequence(data);\n      if (count < 3) continue;\n      const payout = getPayout(data[0], count - 3);\n      gains += investment * payout;\n      win(props.p, investment * payout);\n    }\n\n    setStatus(\n      <>\n        {gains > 0 ? \"gained\" : \"lost\"} <Money money={Math.abs(gains)} />\n      </>,\n    );\n    setCanPlay(true);\n    if (reachedLimit(props.p)) return;\n  }\n\n  function unlock(): void {\n    setLocks([-1, -1, -1, -1, -1]);\n    setCanPlay(false);\n  }\n\n  function updateInvestment(e: React.ChangeEvent<HTMLInputElement>): void {\n    let investment: number = parseInt(e.currentTarget.value);\n    if (isNaN(investment)) {\n      investment = minPlay;\n    }\n    if (investment > maxPlay) {\n      investment = maxPlay;\n    }\n    if (investment < minPlay) {\n      investment = minPlay;\n    }\n    setInvestment(investment);\n  }\n\n  const t = getTable();\n  // prettier-ignore\n  return (\n      <>\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>+———————————————————————+</Typography>\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>| | {t[0][0]} | {t[0][1]} | {t[0][2]} | {t[0][3]} | {t[0][4]} | |</Typography>\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>| |   |   |   |   |   | |</Typography>\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>| | {symbols[index[0]]} | {symbols[index[1]]} | {symbols[index[2]]} | {symbols[index[3]]} | {symbols[index[4]]} | |</Typography>\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>| |   |   |   |   |   | |</Typography>\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>| | {symbols[(index[0]+1)%symbols.length]} | {symbols[(index[1]+1)%symbols.length]} | {symbols[(index[2]+1)%symbols.length]} | {symbols[(index[3]+1)%symbols.length]} | {symbols[(index[4]+1)%symbols.length]} | |</Typography>\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>+———————————————————————+</Typography>\n        <TextField\n          type=\"number\"\n          onChange={updateInvestment}\n          placeholder={\"Amount to play\"}\n          disabled={!canPlay}\n          InputProps={{endAdornment:(<Button\n            onClick={trusted(play)}\n            disabled={!canPlay}\n          >Spin!</Button>)}}\n        />\n        \n        <Typography variant=\"h4\">{status}</Typography>\n        <Typography>Pay lines</Typography>\n\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>-----   ·····   ·····</Typography>\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>·····   -----   ·····</Typography>\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>·····   ·····   -----</Typography>\n<br />\n\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>··^··   \\···/   \\···/</Typography>\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>·/·\\·   ·\\·/·   ·---·</Typography>\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>/···\\   ··v··   ·····</Typography>\n<br />\n\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>·····   ·---·   ·····</Typography>\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>·---·   /···\\   \\···/</Typography>\n<Typography sx={{ lineHeight: \"1em\", whiteSpace: \"pre\" }}>/···\\   ·····   ·---·</Typography>\n        </>\n    );\n}\n\n// https://felgo.com/doc/how-to-make-a-slot-game-tutorial/\n","import React, { useEffect, useState } from \"react\";\n\nfunction replace(str: string, i: number, char: string): string {\n  return str.substring(0, i) + char + str.substring(i + 1);\n}\n\ninterface IProps {\n  content: string;\n}\n\nfunction randomize(char: string): string {\n  const randFrom = (str: string): string => str[Math.floor(Math.random() * str.length)];\n  const classes = [\"abcdefghijklmnopqrstuvwxyz\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"1234567890\", \" _\", \"()[]{}<>\"];\n  const other = `!@#$%^&*()_+|\\\\';\"/.,?\\`~`;\n\n  for (const c of classes) {\n    if (c.includes(char)) return randFrom(c);\n  }\n\n  return randFrom(other);\n}\n\nexport function CorruptableText(props: IProps): JSX.Element {\n  const [content, setContent] = useState(props.content);\n\n  useEffect(() => {\n    let counter = 5;\n    const id = setInterval(() => {\n      counter--;\n      if (counter > 0) return;\n      counter = Math.random() * 5;\n      const index = Math.random() * content.length;\n      const letter = content.charAt(index);\n      setContent(replace(content, index, randomize(letter)));\n      setTimeout(() => {\n        setContent(content);\n      }, 50);\n    }, 100);\n\n    return () => {\n      clearInterval(id);\n    };\n  }, []);\n\n  return <span>{content}</span>;\n}\n","/**\n * React Component for displaying a City's UI.\n * This UI shows all of the available locations in the city, and lets the player\n * visit those locations\n */\nimport * as React from \"react\";\n\nimport { City } from \"../City\";\nimport { Cities } from \"../Cities\";\nimport { LocationName } from \"../data/LocationNames\";\nimport { Locations } from \"../Locations\";\nimport { Location } from \"../Location\";\nimport { Settings } from \"../../Settings/Settings\";\n\nimport { use } from \"../../ui/Context\";\nimport { IRouter } from \"../../ui/Router\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\ntype IProps = {\n  city: City;\n};\n\nfunction toLocation(router: IRouter, location: Location): void {\n  if (location.name === LocationName.TravelAgency) {\n    router.toTravel();\n  } else if (location.name === LocationName.WorldStockExchange) {\n    router.toStockMarket();\n  } else {\n    router.toLocation(location);\n  }\n}\n\nfunction LocationLetter(location: Location): React.ReactElement {\n  const router = use.Router();\n  if (!location) return <span>*</span>;\n  return (\n    <span\n      aria-label={location.name}\n      key={location.name}\n      style={{\n        color: \"white\",\n        whiteSpace: \"nowrap\",\n        margin: \"0px\",\n        padding: \"0px\",\n        cursor: \"pointer\",\n      }}\n      onClick={() => toLocation(router, location)}\n    >\n      <b>X</b>\n    </span>\n  );\n}\n\nfunction ASCIICity(props: IProps): React.ReactElement {\n  const locationLettersRegex = /[A-Z]/g;\n  const letterMap: any = {\n    A: 0,\n    B: 1,\n    C: 2,\n    D: 3,\n    E: 4,\n    F: 5,\n    G: 6,\n    H: 7,\n    I: 8,\n    J: 9,\n    K: 10,\n    L: 11,\n    M: 12,\n    N: 13,\n    O: 14,\n    P: 15,\n    Q: 16,\n    R: 17,\n    S: 18,\n    T: 19,\n    U: 20,\n    V: 21,\n    W: 22,\n    X: 23,\n    Y: 24,\n    Z: 25,\n  };\n\n  const lineElems = (s: string): JSX.Element[] => {\n    const elems: any[] = [];\n    const matches: any[] = [];\n    let match: any;\n    while ((match = locationLettersRegex.exec(s)) !== null) {\n      matches.push(match);\n    }\n    if (matches.length === 0) {\n      elems.push(s);\n      return elems;\n    }\n\n    for (let i = 0; i < matches.length; i++) {\n      const startI = i === 0 ? 0 : matches[i - 1].index + 1;\n      const endI = matches[i].index;\n      elems.push(s.slice(startI, endI));\n      const locationI = letterMap[s[matches[i].index]];\n      elems.push(LocationLetter(Locations[props.city.locations[locationI]]));\n    }\n    elems.push(s.slice(matches[matches.length - 1].index + 1));\n    return elems;\n  };\n\n  const elems: JSX.Element[] = [];\n  const lines = props.city.asciiArt.split(\"\\n\");\n  for (const i in lines) {\n    elems.push(<pre key={i}>{lineElems(lines[i])}</pre>);\n  }\n\n  return <>{elems}</>;\n}\n\nfunction ListCity(props: IProps): React.ReactElement {\n  const router = use.Router();\n  const locationButtons = props.city.locations.map((locName) => {\n    return (\n      <React.Fragment key={locName}>\n        <Button onClick={() => toLocation(router, Locations[locName])}>{locName}</Button>\n        <br />\n      </React.Fragment>\n    );\n  });\n\n  return <>{locationButtons}</>;\n}\n\nexport function LocationCity(): React.ReactElement {\n  const player = use.Player();\n  const city = Cities[player.city];\n  return (\n    <>\n      <Typography>{city.name}</Typography>\n      {Settings.DisableASCIIArt ? <ListCity city={city} /> : <ASCIICity city={city} />}\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { use } from \"../../ui/Context\";\nimport { getAvailableCreatePrograms } from \"../ProgramHelpers\";\n\nimport { Tooltip, Typography } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\n\nexport function ProgramsRoot(): React.ReactElement {\n  const player = use.Player();\n  const router = use.Router();\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    const id = setInterval(rerender, 200);\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <>\n      <Typography variant=\"h4\">Create program</Typography>\n      <Typography>\n        This page displays any programs that you are able to create. Writing the code for a program takes time, which\n        can vary based on how complex the program is. If you are working on creating a program you can cancel at any\n        time. Your progress will be saved and you can continue later.\n      </Typography>\n\n      {getAvailableCreatePrograms(player).map((program) => {\n        const create = program.create;\n        if (create === null) return <></>;\n\n        return (\n          <React.Fragment key={program.name}>\n            <Tooltip title={create.tooltip}>\n              <Button\n                sx={{ my: 1 }}\n                onClick={(event) => {\n                  if (!event.isTrusted) return;\n                  player.startCreateProgramWork(router, program.name, create.time, create.level);\n                }}\n              >\n                {program.name}\n              </Button>\n            </Tooltip>\n            <br />\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Editor from \"@monaco-editor/react\";\nimport * as monaco from \"monaco-editor\";\ntype IStandaloneCodeEditor = monaco.editor.IStandaloneCodeEditor;\nimport { OptionsModal } from \"./OptionsModal\";\nimport { Options } from \"./Options\";\nimport { js_beautify as beautifyCode } from \"js-beautify\";\nimport { isValidFilePath } from \"../../Terminal/DirectoryHelpers\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { IRouter } from \"../../ui/Router\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { isScriptFilename } from \"../../Script/isScriptFilename\";\nimport { Script } from \"../../Script/Script\";\nimport { TextFile } from \"../../TextFile\";\nimport { calculateRamUsage } from \"../../Script/RamCalculations\";\nimport { RamCalculationErrorCode } from \"../../Script/RamCalculationErrorCodes\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { CursorPositions } from \"../../ScriptEditor/CursorPositions\";\nimport { libSource } from \"../NetscriptDefinitions\";\nimport { NetscriptFunctions } from \"../../NetscriptFunctions\";\nimport { WorkerScript } from \"../../Netscript/WorkerScript\";\nimport { Settings } from \"../../Settings/Settings\";\nimport { iTutorialNextStep, ITutorial, iTutorialSteps } from \"../../InteractiveTutorial\";\n\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\n\nlet symbols: string[] = [];\n(function () {\n  const ns = NetscriptFunctions({} as WorkerScript);\n\n  function populate(ns: any): string[] {\n    let symbols: string[] = [];\n    const keys = Object.keys(ns);\n    for (const key of keys) {\n      if (typeof ns[key] === \"object\") {\n        symbols.push(key);\n        symbols = symbols.concat(populate(ns[key]));\n      }\n      if (typeof ns[key] === \"function\") {\n        symbols.push(key);\n      }\n    }\n    return symbols;\n  }\n  symbols = populate(ns);\n\n  const exclude = [\"heart\", \"break\", \"exploit\", \"bypass\", \"corporation\"];\n  symbols = symbols.filter((symbol: string) => !exclude.includes(symbol));\n})();\n\ninterface IProps {\n  filename: string;\n  code: string;\n  player: IPlayer;\n  router: IRouter;\n}\n\n/*\n\n*/\n\n// How to load function definition in monaco\n// https://github.com/Microsoft/monaco-editor/issues/1415\n// https://microsoft.github.io/monaco-editor/api/modules/monaco.languages.html\n// https://www.npmjs.com/package/@monaco-editor/react#development-playground\n// https://microsoft.github.io/monaco-editor/playground.html#extending-language-services-custom-languages\n// https://github.com/threehams/typescript-error-guide/blob/master/stories/components/Editor.tsx#L11-L39\n\n// These variables are used to reload a script when it's clicked on. Because we\n// won't have references to the old script.\nlet lastFilename = \"\";\nlet lastCode = \"\";\nlet lastPosition: monaco.Position | null = null;\n\nexport function Root(props: IProps): React.ReactElement {\n  const editorRef = useRef<IStandaloneCodeEditor | null>(null);\n  const [filename, setFilename] = useState(props.filename ? props.filename : lastFilename);\n  const [code, setCode] = useState<string>(props.filename ? props.code : lastCode);\n  const [ram, setRAM] = useState(\"RAM: ???\");\n  const [optionsOpen, setOptionsOpen] = useState(false);\n  const [options, setOptions] = useState<Options>({\n    theme: Settings.MonacoTheme,\n    insertSpaces: Settings.MonacoInsertSpaces,\n  });\n\n  // store the last known state in case we need to restart without nano.\n  useEffect(() => {\n    if (props.filename === undefined) return;\n    lastFilename = props.filename;\n    lastCode = props.code;\n    lastPosition = null;\n  }, []);\n\n  function save(): void {\n    if (editorRef.current !== null) {\n      const position = editorRef.current.getPosition();\n      if (position !== null) {\n        CursorPositions.saveCursor(filename, {\n          row: position.lineNumber,\n          column: position.column,\n        });\n      }\n    }\n    lastPosition = null;\n\n    // this is duplicate code with saving later.\n    if (ITutorial.isRunning && ITutorial.currStep === iTutorialSteps.TerminalTypeScript) {\n      //Make sure filename + code properly follow tutorial\n      if (filename !== \"n00dles.script\") {\n        dialogBoxCreate(\"Leave the script name as 'n00dles'!\");\n        return;\n      }\n      if (code.replace(/\\s/g, \"\").indexOf(\"while(true){hack('n00dles');}\") == -1) {\n        dialogBoxCreate(\"Please copy and paste the code from the tutorial!\");\n        return;\n      }\n\n      //Save the script\n      const server = props.player.getCurrentServer();\n      if (server === null) throw new Error(\"Server should not be null but it is.\");\n      let found = false;\n      for (let i = 0; i < server.scripts.length; i++) {\n        if (filename == server.scripts[i].filename) {\n          server.scripts[i].saveScript(filename, code, props.player.currentServer, server.scripts);\n          found = true;\n        }\n      }\n\n      if (!found) {\n        const script = new Script();\n        script.saveScript(filename, code, props.player.currentServer, server.scripts);\n        server.scripts.push(script);\n      }\n\n      iTutorialNextStep();\n\n      props.router.toTerminal();\n      return;\n    }\n\n    if (filename == \"\") {\n      dialogBoxCreate(\"You must specify a filename!\");\n      return;\n    }\n\n    if (!isValidFilePath(filename)) {\n      dialogBoxCreate(\n        \"Script filename can contain only alphanumerics, hyphens, and underscores, and must end with an extension.\",\n      );\n      return;\n    }\n\n    const server = props.player.getCurrentServer();\n    if (server === null) throw new Error(\"Server should not be null but it is.\");\n    if (isScriptFilename(filename)) {\n      //If the current script already exists on the server, overwrite it\n      for (let i = 0; i < server.scripts.length; i++) {\n        if (filename == server.scripts[i].filename) {\n          server.scripts[i].saveScript(filename, code, props.player.currentServer, server.scripts);\n          props.router.toTerminal();\n          return;\n        }\n      }\n\n      //If the current script does NOT exist, create a new one\n      const script = new Script();\n      script.saveScript(filename, code, props.player.currentServer, server.scripts);\n      server.scripts.push(script);\n    } else if (filename.endsWith(\".txt\")) {\n      for (let i = 0; i < server.textFiles.length; ++i) {\n        if (server.textFiles[i].fn === filename) {\n          server.textFiles[i].write(code);\n          props.router.toTerminal();\n          return;\n        }\n      }\n      const textFile = new TextFile(filename, code);\n      server.textFiles.push(textFile);\n    } else {\n      dialogBoxCreate(\"Invalid filename. Must be either a script (.script, .js, or .ns) or \" + \" or text file (.txt)\");\n      return;\n    }\n    props.router.toTerminal();\n  }\n\n  function beautify(): void {\n    if (editorRef.current === null) return;\n    const pretty = beautifyCode(code, {\n      indent_with_tabs: !options.insertSpaces,\n      indent_size: 4,\n      brace_style: \"preserve-inline\",\n    });\n    editorRef.current.setValue(pretty);\n  }\n\n  function onFilenameChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    lastFilename = filename;\n    setFilename(event.target.value);\n  }\n\n  function updateCode(newCode?: string): void {\n    if (newCode === undefined) return;\n    lastCode = newCode;\n    if (editorRef.current !== null) {\n      lastPosition = editorRef.current.getPosition();\n    }\n    setCode(newCode);\n  }\n\n  async function updateRAM(): Promise<void> {\n    const codeCopy = code + \"\";\n    const ramUsage = await calculateRamUsage(codeCopy, props.player.getCurrentServer().scripts);\n    if (ramUsage > 0) {\n      setRAM(\"RAM: \" + numeralWrapper.formatRAM(ramUsage));\n      return;\n    }\n    switch (ramUsage) {\n      case RamCalculationErrorCode.ImportError: {\n        setRAM(\"RAM: Import Error\");\n        break;\n      }\n      case RamCalculationErrorCode.URLImportError: {\n        setRAM(\"RAM: HTTP Import Error\");\n        break;\n      }\n      case RamCalculationErrorCode.SyntaxError:\n      default: {\n        setRAM(\"RAM: Syntax Error\");\n        break;\n      }\n    }\n    return new Promise<void>(() => undefined);\n  }\n\n  useEffect(() => {\n    const id = setInterval(updateRAM, 1000);\n    return () => clearInterval(id);\n  }, [code]);\n\n  useEffect(() => {\n    function maybeSave(event: KeyboardEvent): void {\n      if (Settings.DisableHotkeys) return;\n      //Ctrl + b\n      if (event.keyCode == 66 && (event.ctrlKey || event.metaKey)) {\n        event.preventDefault();\n        save();\n      }\n    }\n    document.addEventListener(\"keydown\", maybeSave);\n    return () => document.removeEventListener(\"keydown\", maybeSave);\n  });\n\n  function onMount(editor: IStandaloneCodeEditor): void {\n    editorRef.current = editor;\n    if (editorRef.current === null) return;\n    const position = CursorPositions.getCursor(filename);\n    if (position.row !== -1)\n      editorRef.current.setPosition({\n        lineNumber: position.row,\n        column: position.column,\n      });\n    else if (lastPosition !== null)\n      editorRef.current.setPosition({\n        lineNumber: lastPosition.lineNumber,\n        column: lastPosition.column + 1,\n      });\n    editorRef.current.focus();\n  }\n\n  function beforeMount(monaco: any): void {\n    monaco.languages.registerCompletionItemProvider(\"javascript\", {\n      provideCompletionItems: () => {\n        const suggestions = [];\n        for (const symbol of symbols) {\n          suggestions.push({\n            label: symbol,\n            kind: monaco.languages.CompletionItemKind.Function,\n            insertText: symbol,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n          });\n        }\n        return { suggestions: suggestions };\n      },\n    });\n    monaco.languages.typescript.javascriptDefaults.addExtraLib(libSource, \"netscript.d.ts\");\n    monaco.languages.typescript.typescriptDefaults.addExtraLib(libSource, \"netscript.d.ts\");\n  }\n\n  return (\n    <>\n      <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n        <Typography>Script name: </Typography>\n        <TextField type=\"text\" tabIndex={1} value={filename} onChange={onFilenameChange} />\n        <IconButton onClick={() => setOptionsOpen(true)}>\n          <>\n            <SettingsIcon />\n            options\n          </>\n        </IconButton>\n      </Box>\n      <Editor\n        beforeMount={beforeMount}\n        onMount={onMount}\n        loading={<Typography>Loading script editor!</Typography>}\n        height=\"90%\"\n        defaultLanguage=\"javascript\"\n        defaultValue={code}\n        onChange={updateCode}\n        theme={options.theme}\n        options={options}\n      />\n      <Box display=\"flex\" flexDirection=\"row\" sx={{ m: 1 }} alignItems=\"center\">\n        <Button onClick={beautify}>Beautify</Button>\n        <Typography sx={{ mx: 1 }}>{ram}</Typography>\n        <Button onClick={save}>Save & Close (Ctrl/Cmd + b)</Button>\n        <Link sx={{ mx: 1 }} target=\"_blank\" href=\"https://bitburner.readthedocs.io/en/latest/index.html\">\n          Netscript Documentation\n        </Link>\n      </Box>\n      <OptionsModal\n        open={optionsOpen}\n        onClose={() => setOptionsOpen(false)}\n        options={{\n          theme: Settings.MonacoTheme,\n          insertSpaces: Settings.MonacoInsertSpaces,\n        }}\n        save={(options: Options) => {\n          setOptions(options);\n          Settings.MonacoTheme = options.theme;\n          Settings.MonacoInsertSpaces = options.insertSpaces;\n        }}\n      />\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Options } from \"./Options\";\nimport { Modal } from \"../../ui/React/Modal\";\n\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Select from \"@mui/material/Select\";\nimport Switch from \"@mui/material/Switch\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\ninterface IProps {\n  options: Options;\n  save: (options: Options) => void;\n  onClose: () => void;\n  open: boolean;\n}\n\nexport function OptionsModal(props: IProps): React.ReactElement {\n  const [theme, setTheme] = useState(props.options.theme);\n  const [insertSpaces, setInsertSpaces] = useState(props.options.insertSpaces);\n\n  function save(): void {\n    props.save({\n      theme: theme,\n      insertSpaces: insertSpaces,\n    });\n    props.onClose();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n        <Typography>Theme: </Typography>\n        <Select onChange={(event) => setTheme(event.target.value)} defaultValue={props.options.theme}>\n          <MenuItem value=\"vs-dark\">dark</MenuItem>\n          <MenuItem value=\"light\">light</MenuItem>\n        </Select>\n      </Box>\n\n      <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n        <Typography>Use whitespace over tabs: </Typography>\n        <Switch onChange={(event) => setInsertSpaces(event.target.checked)} checked={insertSpaces} />\n      </Box>\n      <br />\n      <Button onClick={save}>Save</Button>\n    </Modal>\n  );\n}\n","import { GangMemberTask } from \"./GangMemberTask\";\nimport { GangMemberTasks } from \"./GangMemberTasks\";\nimport { GangMemberUpgrade } from \"./GangMemberUpgrade\";\nimport { GangMemberUpgrades } from \"./GangMemberUpgrades\";\nimport { IAscensionResult } from \"./IAscensionResult\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { AllGangs } from \"./AllGangs\";\nimport { IGang } from \"./IGang\";\nimport { Generic_fromJSON, Generic_toJSON, Reviver } from \"../utils/JSONReviver\";\n\ninterface IMults {\n  hack: number;\n  str: number;\n  def: number;\n  dex: number;\n  agi: number;\n  cha: number;\n}\n\nexport class GangMember {\n  name: string;\n  task = \"Unassigned\";\n\n  earnedRespect = 0;\n\n  hack = 1;\n  str = 1;\n  def = 1;\n  dex = 1;\n  agi = 1;\n  cha = 1;\n\n  hack_exp = 0;\n  str_exp = 0;\n  def_exp = 0;\n  dex_exp = 0;\n  agi_exp = 0;\n  cha_exp = 0;\n\n  hack_mult = 1;\n  str_mult = 1;\n  def_mult = 1;\n  dex_mult = 1;\n  agi_mult = 1;\n  cha_mult = 1;\n\n  hack_asc_points = 0;\n  str_asc_points = 0;\n  def_asc_points = 0;\n  dex_asc_points = 0;\n  agi_asc_points = 0;\n  cha_asc_points = 0;\n\n  upgrades: string[] = []; // Names of upgrades\n  augmentations: string[] = []; // Names of augmentations only\n\n  constructor(name = \"\") {\n    this.name = name;\n  }\n\n  calculateSkill(exp: number, mult = 1): number {\n    return Math.max(Math.floor(mult * (32 * Math.log(exp + 534.5) - 200)), 1);\n  }\n\n  calculateAscensionMult(points: number): number {\n    return Math.max(Math.pow(points / 4000, 0.7), 1);\n  }\n\n  updateSkillLevels(): void {\n    this.hack = this.calculateSkill(this.hack_exp, this.hack_mult * this.calculateAscensionMult(this.hack_asc_points));\n    this.str = this.calculateSkill(this.str_exp, this.str_mult * this.calculateAscensionMult(this.str_asc_points));\n    this.def = this.calculateSkill(this.def_exp, this.def_mult * this.calculateAscensionMult(this.def_asc_points));\n    this.dex = this.calculateSkill(this.dex_exp, this.dex_mult * this.calculateAscensionMult(this.dex_asc_points));\n    this.agi = this.calculateSkill(this.agi_exp, this.agi_mult * this.calculateAscensionMult(this.agi_asc_points));\n    this.cha = this.calculateSkill(this.cha_exp, this.cha_mult * this.calculateAscensionMult(this.cha_asc_points));\n  }\n\n  calculatePower(): number {\n    return (this.hack + this.str + this.def + this.dex + this.agi + this.cha) / 95;\n  }\n\n  assignToTask(taskName: string): boolean {\n    if (!GangMemberTasks.hasOwnProperty(taskName)) {\n      this.task = \"Unassigned\";\n      return false;\n    }\n    this.task = taskName;\n    return true;\n  }\n\n  unassignFromTask(): void {\n    this.task = \"Unassigned\";\n  }\n\n  getTask(): GangMemberTask {\n    // TODO(hydroflame): transfer that to a save file migration function\n    // Backwards compatibility\n    if ((this.task as any) instanceof GangMemberTask) {\n      this.task = (this.task as any).name;\n    }\n\n    if (GangMemberTasks.hasOwnProperty(this.task)) {\n      return GangMemberTasks[this.task];\n    }\n    return GangMemberTasks[\"Unassigned\"];\n  }\n\n  calculateRespectGain(gang: IGang): number {\n    const task = this.getTask();\n    if (task.baseRespect === 0) return 0;\n    let statWeight =\n      (task.hackWeight / 100) * this.hack +\n      (task.strWeight / 100) * this.str +\n      (task.defWeight / 100) * this.def +\n      (task.dexWeight / 100) * this.dex +\n      (task.agiWeight / 100) * this.agi +\n      (task.chaWeight / 100) * this.cha;\n    statWeight -= 4 * task.difficulty;\n    if (statWeight <= 0) return 0;\n    const territoryMult = Math.max(\n      0.005,\n      Math.pow(AllGangs[gang.facName].territory * 100, task.territory.respect) / 100,\n    );\n    if (isNaN(territoryMult) || territoryMult <= 0) return 0;\n    const respectMult = gang.getWantedPenalty();\n    return 11 * task.baseRespect * statWeight * territoryMult * respectMult;\n  }\n\n  calculateWantedLevelGain(gang: IGang): number {\n    const task = this.getTask();\n    if (task.baseWanted === 0) return 0;\n    let statWeight =\n      (task.hackWeight / 100) * this.hack +\n      (task.strWeight / 100) * this.str +\n      (task.defWeight / 100) * this.def +\n      (task.dexWeight / 100) * this.dex +\n      (task.agiWeight / 100) * this.agi +\n      (task.chaWeight / 100) * this.cha;\n    statWeight -= 3.5 * task.difficulty;\n    if (statWeight <= 0) return 0;\n    const territoryMult = Math.max(\n      0.005,\n      Math.pow(AllGangs[gang.facName].territory * 100, task.territory.wanted) / 100,\n    );\n    if (isNaN(territoryMult) || territoryMult <= 0) return 0;\n    if (task.baseWanted < 0) {\n      return 0.4 * task.baseWanted * statWeight * territoryMult;\n    }\n    const calc = (7 * task.baseWanted) / Math.pow(3 * statWeight * territoryMult, 0.8);\n\n    // Put an arbitrary cap on this to prevent wanted level from rising too fast if the\n    // denominator is very small. Might want to rethink formula later\n    return Math.min(100, calc);\n  }\n\n  calculateMoneyGain(gang: IGang): number {\n    const task = this.getTask();\n    if (task.baseMoney === 0) return 0;\n    let statWeight =\n      (task.hackWeight / 100) * this.hack +\n      (task.strWeight / 100) * this.str +\n      (task.defWeight / 100) * this.def +\n      (task.dexWeight / 100) * this.dex +\n      (task.agiWeight / 100) * this.agi +\n      (task.chaWeight / 100) * this.cha;\n\n    statWeight -= 3.2 * task.difficulty;\n    if (statWeight <= 0) return 0;\n    const territoryMult = Math.max(0.005, Math.pow(AllGangs[gang.facName].territory * 100, task.territory.money) / 100);\n    if (isNaN(territoryMult) || territoryMult <= 0) return 0;\n    const respectMult = gang.getWantedPenalty();\n    return 5 * task.baseMoney * statWeight * territoryMult * respectMult;\n  }\n\n  expMult(): IMults {\n    return {\n      hack: (this.hack_mult - 1) / 4 + 1,\n      str: (this.str_mult - 1) / 4 + 1,\n      def: (this.def_mult - 1) / 4 + 1,\n      dex: (this.dex_mult - 1) / 4 + 1,\n      agi: (this.agi_mult - 1) / 4 + 1,\n      cha: (this.cha_mult - 1) / 4 + 1,\n    };\n  }\n\n  gainExperience(numCycles = 1): void {\n    const task = this.getTask();\n    if (task === GangMemberTasks[\"Unassigned\"]) return;\n    const difficultyMult = Math.pow(task.difficulty, 0.9);\n    const difficultyPerCycles = difficultyMult * numCycles;\n    const weightDivisor = 1500;\n    const expMult = this.expMult();\n    this.hack_exp += (task.hackWeight / weightDivisor) * difficultyPerCycles * expMult.hack;\n    this.str_exp += (task.strWeight / weightDivisor) * difficultyPerCycles * expMult.str;\n    this.def_exp += (task.defWeight / weightDivisor) * difficultyPerCycles * expMult.def;\n    this.dex_exp += (task.dexWeight / weightDivisor) * difficultyPerCycles * expMult.dex;\n    this.agi_exp += (task.agiWeight / weightDivisor) * difficultyPerCycles * expMult.agi;\n    this.cha_exp += (task.chaWeight / weightDivisor) * difficultyPerCycles * expMult.cha;\n  }\n\n  recordEarnedRespect(numCycles = 1, gang: IGang): void {\n    this.earnedRespect += this.calculateRespectGain(gang) * numCycles;\n  }\n\n  getGainedAscensionPoints(): IMults {\n    return {\n      hack: Math.max(this.hack_exp - 1000, 0),\n      str: Math.max(this.str_exp - 1000, 0),\n      def: Math.max(this.def_exp - 1000, 0),\n      dex: Math.max(this.dex_exp - 1000, 0),\n      agi: Math.max(this.agi_exp - 1000, 0),\n      cha: Math.max(this.cha_exp - 1000, 0),\n    };\n  }\n\n  canAscend(): boolean {\n    const points = this.getGainedAscensionPoints();\n    return points.hack > 0 || points.str > 0 || points.def > 0 || points.dex > 0 || points.agi > 0 || points.cha > 0;\n  }\n\n  getCurrentAscensionMults(): IMults {\n    return {\n      hack: this.calculateAscensionMult(this.hack_asc_points),\n      str: this.calculateAscensionMult(this.str_asc_points),\n      def: this.calculateAscensionMult(this.def_asc_points),\n      dex: this.calculateAscensionMult(this.dex_asc_points),\n      agi: this.calculateAscensionMult(this.agi_asc_points),\n      cha: this.calculateAscensionMult(this.cha_asc_points),\n    };\n  }\n\n  getAscensionMultsAfterAscend(): IMults {\n    const points = this.getGainedAscensionPoints();\n    return {\n      hack: this.calculateAscensionMult(this.hack_asc_points + points.hack),\n      str: this.calculateAscensionMult(this.str_asc_points + points.str),\n      def: this.calculateAscensionMult(this.def_asc_points + points.def),\n      dex: this.calculateAscensionMult(this.dex_asc_points + points.dex),\n      agi: this.calculateAscensionMult(this.agi_asc_points + points.agi),\n      cha: this.calculateAscensionMult(this.cha_asc_points + points.cha),\n    };\n  }\n\n  getAscensionResults(): IMults {\n    const postAscend = this.getAscensionMultsAfterAscend();\n    const preAscend = this.getCurrentAscensionMults();\n\n    return {\n      hack: postAscend.hack / preAscend.hack,\n      str: postAscend.str / preAscend.str,\n      def: postAscend.def / preAscend.def,\n      dex: postAscend.dex / preAscend.dex,\n      agi: postAscend.agi / preAscend.agi,\n      cha: postAscend.cha / preAscend.cha,\n    };\n  }\n\n  ascend(): IAscensionResult {\n    const res = this.getAscensionResults();\n    const points = this.getGainedAscensionPoints();\n    this.hack_asc_points += points.hack;\n    this.str_asc_points += points.str;\n    this.def_asc_points += points.def;\n    this.dex_asc_points += points.dex;\n    this.agi_asc_points += points.agi;\n    this.cha_asc_points += points.cha;\n\n    // Remove upgrades. Then re-calculate multipliers and stats\n    this.upgrades.length = 0;\n    this.hack_mult = 1;\n    this.str_mult = 1;\n    this.def_mult = 1;\n    this.dex_mult = 1;\n    this.agi_mult = 1;\n    this.cha_mult = 1;\n    for (let i = 0; i < this.augmentations.length; ++i) {\n      const aug = GangMemberUpgrades[this.augmentations[i]];\n      this.applyUpgrade(aug);\n    }\n\n    // Clear exp and recalculate stats\n    this.hack_exp = 0;\n    this.str_exp = 0;\n    this.def_exp = 0;\n    this.dex_exp = 0;\n    this.agi_exp = 0;\n    this.cha_exp = 0;\n    this.updateSkillLevels();\n\n    const respectToDeduct = this.earnedRespect;\n    this.earnedRespect = 0;\n    return {\n      respect: respectToDeduct,\n      hack: res.hack,\n      str: res.str,\n      def: res.def,\n      dex: res.dex,\n      agi: res.agi,\n      cha: res.cha,\n    };\n  }\n\n  applyUpgrade(upg: GangMemberUpgrade): void {\n    if (upg.mults.str != null) this.str_mult *= upg.mults.str;\n    if (upg.mults.def != null) this.def_mult *= upg.mults.def;\n    if (upg.mults.dex != null) this.dex_mult *= upg.mults.dex;\n    if (upg.mults.agi != null) this.agi_mult *= upg.mults.agi;\n    if (upg.mults.cha != null) this.cha_mult *= upg.mults.cha;\n    if (upg.mults.hack != null) this.hack_mult *= upg.mults.hack;\n  }\n\n  buyUpgrade(upg: GangMemberUpgrade, player: IPlayer, gang: IGang): boolean {\n    // Prevent purchasing of already-owned upgrades\n    if (this.augmentations.includes(upg.name) || this.upgrades.includes(upg.name)) return false;\n\n    if (player.money.lt(gang.getUpgradeCost(upg))) return false;\n    player.loseMoney(gang.getUpgradeCost(upg));\n    if (upg.type === \"g\") {\n      this.augmentations.push(upg.name);\n    } else {\n      this.upgrades.push(upg.name);\n    }\n    this.applyUpgrade(upg);\n    return true;\n  }\n\n  /**\n   * Serialize the current object to a JSON save state.\n   */\n  toJSON(): any {\n    return Generic_toJSON(\"GangMember\", this);\n  }\n\n  /**\n   * Initiatizes a GangMember object from a JSON save state.\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static fromJSON(value: any): GangMember {\n    return Generic_fromJSON(GangMember, value.data);\n  }\n}\n\nReviver.constructors.GangMember = GangMember;\n","/**\n * The environment in which a script runs. The environment holds\n * Netscript functions and arguments for that script.\n */\nimport { IMap } from \"../types\";\n\nexport class Environment {\n  /**\n   * Parent environment. Used to implement \"scope\"\n   */\n  parent: Environment | null = null;\n\n  /**\n   * Whether or not the script that uses this Environment should stop running\n   */\n  stopFlag = false;\n\n  /**\n   * Environment variables (currently only Netscript functions)\n   */\n  vars: IMap<any> = {};\n\n  constructor(parent: Environment | null) {\n    if (parent instanceof Environment) {\n      this.vars = Object.assign({}, parent.vars);\n    }\n\n    this.parent = parent;\n  }\n\n  /**\n   * Finds the scope where the variable with the given name is defined\n   */\n  lookup(name: string): Environment | null {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let scope: Environment | null = this;\n    while (scope) {\n      if (Object.prototype.hasOwnProperty.call(scope.vars, name)) {\n        return scope;\n      }\n      scope = scope.parent;\n    }\n\n    return null;\n  }\n\n  //Get the current value of a variable\n  get(name: string): any {\n    if (name in this.vars) {\n      return this.vars[name];\n    }\n\n    throw new Error(`Undefined variable ${name}`);\n  }\n\n  //Sets the value of a variable in any scope\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  set(name: string, value: any): any {\n    const scope = this.lookup(name);\n\n    //If scope has a value, then this variable is already set in a higher scope, so\n    //set is there. Otherwise, create a new variable in the local scope\n    if (scope !== null) {\n      return (scope.vars[name] = value);\n    } else {\n      return (this.vars[name] = value);\n    }\n  }\n\n  //Creates (or overwrites) a variable in the current scope\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  def(name: string, value: any): any {\n    return (this.vars[name] = value);\n  }\n}\n","import { makeRuntimeRejectMsg } from \"./NetscriptEvaluator\";\nimport { ScriptUrl } from \"./Script/ScriptUrl\";\nimport { WorkerScript } from \"./Netscript/WorkerScript\";\nimport { Script } from \"./Script/Script\";\n\n// Makes a blob that contains the code of a given script.\nfunction makeScriptBlob(code: string): Blob {\n  return new Blob([code], { type: \"text/javascript\" });\n}\n\n// Begin executing a user JS script, and return a promise that resolves\n// or rejects when the script finishes.\n// - script is a script to execute (see Script.js). We depend only on .filename and .code.\n// scripts is an array of other scripts on the server.\n// env is the global environment that should be visible to all the scripts\n// (i.e. hack, grow, etc.).\n// When the promise returned by this resolves, we'll have finished\n// running the main function of the script.\nexport async function executeJSScript(scripts: Script[] = [], workerScript: WorkerScript): Promise<void> {\n  let uurls: ScriptUrl[] = [];\n  const script = workerScript.getScript();\n  if (script === null) throw new Error(\"script is null\");\n  if (shouldCompile(script, scripts)) {\n    // The URL at the top is the one we want to import. It will\n    // recursively import all the other modules in the urlStack.\n    //\n    // Webpack likes to turn the import into a require, which sort of\n    // but not really behaves like import. Particularly, it cannot\n    // load fully dynamic content. So we hide the import from webpack\n    // by placing it inside an eval call.\n    script.markUpdated();\n    uurls = _getScriptUrls(script, scripts, []);\n    script.url = uurls[uurls.length - 1].url;\n    script.module = new Promise((resolve) => resolve(eval(\"import(uurls[uurls.length - 1].url)\")));\n    script.dependencies = uurls;\n  }\n  const loadedModule = await script.module;\n\n  const ns = workerScript.env.vars;\n\n  // TODO: putting await in a non-async function yields unhelpful\n  // \"SyntaxError: unexpected reserved word\" with no line number information.\n  if (!loadedModule.main) {\n    throw makeRuntimeRejectMsg(\n      workerScript,\n      `${script.filename} cannot be run because it does not have a main function.`,\n    );\n  }\n  return loadedModule.main(ns);\n}\n\n/** Returns whether we should compile the script parameter.\n *\n * @param {Script} script\n * @param {Script[]} scripts\n */\nfunction shouldCompile(script: Script, scripts: Script[]): boolean {\n  if (script.module === \"\") return true;\n  return script.dependencies.some((dep) => {\n    const depScript = scripts.find((s) => s.filename == dep.filename);\n\n    // If the script is not present on the server, we should recompile, if only to get any necessary\n    // compilation errors.\n    if (!depScript) return true;\n\n    const depIsMoreRecent = depScript.moduleSequenceNumber > script.moduleSequenceNumber;\n    return depIsMoreRecent;\n  });\n}\n\n// Gets a stack of blob urls, the top/right-most element being\n// the blob url for the named script on the named server.\n//\n// - script -- the script for whom we are getting a URL.\n// - scripts -- all the scripts available on this server\n// - seen -- The modules above this one -- to prevent mutual dependency.\n//\n// TODO We don't make any effort to cache a given module when it is imported at\n// different parts of the tree. That hasn't presented any problem with during\n// testing, but it might be an idea for the future. Would require a topo-sort\n// then url-izing from leaf-most to root-most.\n/**\n * @param {Script} script\n * @param {Script[]} scripts\n * @param {Script[]} seen\n * @returns {ScriptUrl[]} All of the compiled scripts, with the final one\n *                         in the list containing the blob corresponding to\n *                         the script parameter.\n */\n// BUG: apparently seen is never consulted. Oops.\nfunction _getScriptUrls(script: Script, scripts: Script[], seen: Script[]): ScriptUrl[] {\n  // Inspired by: https://stackoverflow.com/a/43834063/91401\n  /** @type {ScriptUrl[]} */\n  const urlStack = [];\n  seen.push(script);\n  try {\n    // Replace every import statement with an import to a blob url containing\n    // the corresponding script. E.g.\n    //\n    // import {foo} from \"bar.js\";\n    //\n    // becomes\n    //\n    // import {foo} from \"blob://<uuid>\"\n    //\n    // Where the blob URL contains the script content.\n    let transformedCode = script.code.replace(\n      /((?:from|import)\\s+(?:'|\"))(?:\\.\\/)?([^'\"]+)('|\")/g,\n      (unmodified, prefix, filename, suffix) => {\n        const isAllowedImport = scripts.some((s) => s.filename == filename);\n        if (!isAllowedImport) return unmodified;\n\n        // Find the corresponding script.\n        const [importedScript] = scripts.filter((s) => s.filename == filename);\n\n        // Try to get a URL for the requested script and its dependencies.\n        const urls = _getScriptUrls(importedScript, scripts, seen);\n\n        // The top url in the stack is the replacement import file for this script.\n        urlStack.push(...urls);\n        return [prefix, urls[urls.length - 1].url, suffix].join(\"\");\n      },\n    );\n\n    // We automatically define a print function() in the NetscriptJS module so that\n    // accidental calls to window.print() do not bring up the \"print screen\" dialog\n    transformedCode += `\\n\\nfunction print() {throw new Error(\"Invalid call to window.print(). Did you mean to use Netscript's print()?\");}`;\n\n    // If we successfully transformed the code, create a blob url for it and\n    // push that URL onto the top of the stack.\n    urlStack.push(new ScriptUrl(script.filename, URL.createObjectURL(makeScriptBlob(transformedCode))));\n    return urlStack;\n  } catch (err) {\n    // If there is an error, we need to clean up the URLs.\n    for (const url in urlStack) URL.revokeObjectURL(url);\n    throw err;\n  } finally {\n    seen.pop();\n  }\n}\n","export class ScriptUrl {\n  filename: string;\n  url: string;\n\n  constructor(filename: string, url: string) {\n    this.filename = filename;\n    this.url = url;\n  }\n}\n","import { Settings } from \"./Settings/Settings\";\n\nexport interface IPort {\n  write: (value: any) => any;\n  tryWrite: (value: any) => boolean;\n  read: () => any;\n  peek: () => any;\n  full: () => boolean;\n  empty: () => boolean;\n  clear: () => void;\n}\n\nexport function NetscriptPort(): IPort {\n  const data: any[] = [];\n\n  return {\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    write: (value: any): any => {\n      data.push(value);\n      if (data.length > Settings.MaxPortCapacity) {\n        return data.shift();\n      }\n      return null;\n    },\n\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    tryWrite: (value: any): boolean => {\n      if (data.length >= Settings.MaxPortCapacity) {\n        return false;\n      }\n      data.push(value);\n      return true;\n    },\n\n    read: (): any => {\n      if (data.length === 0) {\n        return \"NULL PORT DATA\";\n      }\n      return data.shift();\n    },\n\n    peek: (): any => {\n      if (data.length === 0) {\n        return \"NULL PORT DATA\";\n      } else {\n        const foo = data.slice();\n        return foo[0];\n      }\n    },\n\n    full: (): boolean => {\n      return data.length == Settings.MaxPortCapacity;\n    },\n\n    empty: (): boolean => {\n      return data.length === 0;\n    },\n\n    clear: (): void => {\n      data.length = 0;\n    },\n  };\n}\n","// Checks whether an array is a 2D array.\n// For this, a 2D array is an array which contains only other arrays.\n// If one element in the array is a number or string, it is NOT a 2D array\nexport function is2DArray(arr: any[]): boolean {\n  if (arr.constructor !== Array) {\n    return false;\n  }\n\n  return arr.every((e) => {\n    return e.constructor === Array;\n  });\n}\n","import { createElement } from \"./createElement\";\nimport { getElementById } from \"./getElementById\";\n\ninterface ICreatePopupOptions {\n  backgroundColor?: string;\n}\n\n/**\n * Creates the necessary DOM elements to present an in-game popup to the player.\n * @param id The (hopefully) unique identifier for the popup container.\n * @param elems The collection of HTML Elements to show within the popup.\n */\nexport function createPopup(id: string, elems: HTMLElement[], options: ICreatePopupOptions = {}): HTMLDivElement {\n  const container: HTMLDivElement = createElement(\"div\", {\n    class: \"popup-box-container\",\n    display: \"flex\",\n    id: id,\n  }) as HTMLDivElement;\n  const content: HTMLElement = createElement(\"div\", {\n    class: \"popup-box-content\",\n    id: `${id}-content`,\n  });\n\n  for (const elem of elems) {\n    content.appendChild(elem);\n  }\n\n  // Configurable Options\n  if (options.backgroundColor) {\n    content.style.backgroundColor = options.backgroundColor;\n  }\n\n  container.appendChild(content);\n  getElementById(\"root\").appendChild(container);\n\n  return container;\n}\n","import { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { Milestones } from \"../Milestones\";\nimport { Milestone } from \"../Milestone\";\nimport * as React from \"react\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\ninterface IProps {\n  player: IPlayer;\n}\n\nfunction highestMilestone(p: IPlayer, milestones: Milestone[]): number {\n  let n = -1;\n  for (let i = 0; i < milestones.length; i++) {\n    if (milestones[i].fulfilled(p)) n = i;\n  }\n\n  return n;\n}\n\nexport function MilestonesRoot(props: IProps): JSX.Element {\n  const n = highestMilestone(props.player, Milestones);\n  const milestones = Milestones.map((milestone: Milestone, i: number) => {\n    if (i <= n + 1) {\n      return (\n        <Typography key={i}>\n          [{milestone.fulfilled(props.player) ? \"x\" : \" \"}] {milestone.title}\n        </Typography>\n      );\n    }\n  });\n  return (\n    <>\n      <Typography variant=\"h4\">Milestones</Typography>\n      <Box mx={2}>\n        <Typography>\n          Milestones don't reward you for completing them. They are here to guide you if you're lost. They will reset\n          when you install Augmentations.\n        </Typography>\n        <br />\n\n        <Typography>Completing fl1ght.exe</Typography>\n        {milestones}\n      </Box>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport { Link as MuiLink } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport Box from \"@mui/material/Box\";\nimport { ITerminal, Output, Link } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { TerminalInput } from \"./TerminalInput\";\nimport { TerminalEvents, TerminalClearEvents } from \"../TerminalEvents\";\nimport { BitFlumeModal } from \"../../BitNode/ui/BitFlumeModal\";\nimport { CodingContractModal } from \"../../ui/React/CodingContractModal\";\n\nimport _ from \"lodash\";\n\ninterface IActionTimerProps {\n  terminal: ITerminal;\n}\n\nfunction ActionTimer({ terminal }: IActionTimerProps): React.ReactElement {\n  return (\n    <Typography color={\"primary\"} paragraph={false}>\n      {terminal.getProgressText()}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    nopadding: {\n      padding: theme.spacing(0),\n    },\n    preformatted: {\n      whiteSpace: \"pre-wrap\",\n      overflowWrap: \"anywhere\",\n      margin: theme.spacing(0),\n    },\n    list: {\n      padding: theme.spacing(0),\n      height: \"100%\",\n    },\n  }),\n);\n\ninterface IProps {\n  terminal: ITerminal;\n  router: IRouter;\n  player: IPlayer;\n}\n\nexport function TerminalRoot({ terminal, router, player }: IProps): React.ReactElement {\n  const scrollHook = useRef<HTMLDivElement>(null);\n  const setRerender = useState(0)[1];\n  const [key, setKey] = useState(0);\n  function rerender(): void {\n    setRerender((old) => old + 1);\n  }\n\n  function clear(): void {\n    setKey((key) => key + 1);\n  }\n\n  useEffect(() => TerminalEvents.subscribe(_.debounce(async () => rerender(), 25, { maxWait: 50 })), []);\n  useEffect(() => TerminalClearEvents.subscribe(_.debounce(async () => clear(), 25, { maxWait: 50 })), []);\n\n  function doScroll(): void {\n    const hook = scrollHook.current;\n    if (hook !== null) {\n      setTimeout(() => hook.scrollIntoView(true), 50);\n    }\n  }\n\n  doScroll();\n\n  useEffect(() => {\n    setTimeout(doScroll, 50);\n  }, []);\n\n  const classes = useStyles();\n  return (\n    <>\n      <Box width=\"100%\" minHeight=\"100vh\" display={\"flex\"} alignItems={\"flex-end\"}>\n        <List key={key} id=\"terminal\" classes={{ root: classes.list }}>\n          {terminal.outputHistory.map((item, i) => {\n            if (item instanceof Output)\n              return (\n                <ListItem key={i} classes={{ root: classes.nopadding }}>\n                  <Typography classes={{ root: classes.preformatted }} color={item.color} paragraph={false}>\n                    {item.text}\n                  </Typography>\n                </ListItem>\n              );\n            if (item instanceof Link)\n              return (\n                <ListItem key={i} classes={{ root: classes.nopadding }}>\n                  <Typography>{item.dashes}&gt;&nbsp;</Typography>\n                  <MuiLink\n                    classes={{ root: classes.preformatted }}\n                    color={\"secondary\"}\n                    paragraph={false}\n                    onClick={() => terminal.connectToServer(player, item.hostname)}\n                  >\n                    {item.hostname}\n                  </MuiLink>\n                </ListItem>\n              );\n          })}\n\n          {terminal.action !== null && (\n            <ListItem classes={{ root: classes.nopadding }}>\n              <ActionTimer terminal={terminal} />{\" \"}\n            </ListItem>\n          )}\n        </List>\n        <div ref={scrollHook}></div>\n      </Box>\n      <Box position=\"sticky\" bottom={0} width=\"100%\" px={0}>\n        <TerminalInput player={player} router={router} terminal={terminal} />\n      </Box>\n      <BitFlumeModal />\n      <CodingContractModal />\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport TextField from \"@mui/material/TextField\";\nimport Paper from \"@mui/material/Paper\";\n\nimport { KEY } from \"../../utils/helpers/keyCodes\";\nimport { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { determineAllPossibilitiesForTabCompletion } from \"../determineAllPossibilitiesForTabCompletion\";\nimport { tabCompletion } from \"../tabCompletion\";\nimport { Settings } from \"../../Settings/Settings\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    textfield: {\n      margin: theme.spacing(0),\n      width: \"100%\",\n    },\n    input: {\n      backgroundColor: \"#000\",\n    },\n    nopadding: {\n      padding: theme.spacing(0),\n    },\n    preformatted: {\n      whiteSpace: \"pre-wrap\",\n      margin: theme.spacing(0),\n    },\n    list: {\n      padding: theme.spacing(0),\n      height: \"100%\",\n    },\n  }),\n);\n\ninterface IProps {\n  terminal: ITerminal;\n  router: IRouter;\n  player: IPlayer;\n}\n// Save command in case we de-load this screen.\nlet command = \"\";\n\nexport function TerminalInput({ terminal, router, player }: IProps): React.ReactElement {\n  const terminalInput = useRef<HTMLInputElement>(null);\n\n  const [value, setValue] = useState(command);\n  const [possibilities, setPossibilities] = useState<string[]>([]);\n  const classes = useStyles();\n\n  function saveValue(value: string): void {\n    command = value;\n    setValue(value);\n  }\n\n  function handleValueChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    saveValue(event.target.value);\n    setPossibilities([]);\n  }\n\n  function modifyInput(mod: string): void {\n    const ref = terminalInput.current;\n    if (!ref) return;\n    const inputLength = value.length;\n    const start = ref.selectionStart;\n    if (start === null) return;\n    const inputText = ref.value;\n\n    switch (mod.toLowerCase()) {\n      case \"backspace\":\n        if (start > 0 && start <= inputLength + 1) {\n          saveValue(inputText.substr(0, start - 1) + inputText.substr(start));\n        }\n        break;\n      case \"deletewordbefore\": // Delete rest of word before the cursor\n        for (let delStart = start - 1; delStart > 0; --delStart) {\n          if (inputText.charAt(delStart) === \" \") {\n            saveValue(inputText.substr(0, delStart) + inputText.substr(start));\n            return;\n          }\n        }\n        break;\n      case \"deletewordafter\": // Delete rest of word after the cursor\n        for (let delStart = start + 1; delStart <= value.length + 1; ++delStart) {\n          if (inputText.charAt(delStart) === \" \") {\n            saveValue(inputText.substr(0, start) + inputText.substr(delStart));\n            return;\n          }\n        }\n        break;\n      case \"clearafter\": // Deletes everything after cursor\n        break;\n      case \"clearbefore:\": // Deleetes everything before cursor\n        break;\n    }\n  }\n\n  function moveTextCursor(loc: string): void {\n    const ref = terminalInput.current;\n    if (!ref) return;\n    const inputLength = value.length;\n    const start = ref.selectionStart;\n    if (start === null) return;\n\n    switch (loc.toLowerCase()) {\n      case \"home\":\n        ref.setSelectionRange(0, 0);\n        break;\n      case \"end\":\n        ref.setSelectionRange(inputLength, inputLength);\n        break;\n      case \"prevchar\":\n        if (start > 0) {\n          ref.setSelectionRange(start - 1, start - 1);\n        }\n        break;\n      case \"prevword\":\n        for (let i = start - 2; i >= 0; --i) {\n          if (ref.value.charAt(i) === \" \") {\n            ref.setSelectionRange(i + 1, i + 1);\n            return;\n          }\n        }\n        ref.setSelectionRange(0, 0);\n        break;\n      case \"nextchar\":\n        ref.setSelectionRange(start + 1, start + 1);\n        break;\n      case \"nextword\":\n        for (let i = start + 1; i <= inputLength; ++i) {\n          if (ref.value.charAt(i) === \" \") {\n            ref.setSelectionRange(i, i);\n            return;\n          }\n        }\n        ref.setSelectionRange(inputLength, inputLength);\n        break;\n      default:\n        console.warn(\"Invalid loc argument in Terminal.moveTextCursor()\");\n        break;\n    }\n  }\n\n  // Catch all key inputs and redirect them to the terminal.\n  useEffect(() => {\n    function keyDown(this: Document, event: KeyboardEvent): void {\n      if (terminal.contractOpen) return;\n      if (terminal.action !== null && event.keyCode === KEY.C && event.ctrlKey) {\n        terminal.finishAction(router, player, true);\n        return;\n      }\n      const ref = terminalInput.current;\n      if (event.ctrlKey || event.metaKey) return;\n      if (event.keyCode === KEY.C && (event.ctrlKey || event.metaKey)) return; // trying to copy\n\n      if (ref) ref.focus();\n    }\n    document.addEventListener(\"keydown\", keyDown);\n    return () => document.removeEventListener(\"keydown\", keyDown);\n  });\n\n  function onKeyDown(event: React.KeyboardEvent<HTMLInputElement>): void {\n    // Run command.\n    if (event.keyCode === KEY.ENTER && value !== \"\") {\n      event.preventDefault();\n      terminal.print(`[${player.getCurrentServer().hostname} ~${terminal.cwd()}]> ${value}`);\n      terminal.executeCommands(router, player, value);\n      saveValue(\"\");\n      return;\n    }\n\n    // Autocomplete\n    if (event.keyCode === KEY.TAB && value !== \"\") {\n      event.preventDefault();\n\n      let copy = value;\n      const semiColonIndex = copy.lastIndexOf(\";\");\n      if (semiColonIndex !== -1) {\n        copy = copy.slice(semiColonIndex + 1);\n      }\n\n      copy = copy.trim();\n      copy = copy.replace(/\\s\\s+/g, \" \");\n\n      const commandArray = copy.split(\" \");\n      let index = commandArray.length - 2;\n      if (index < -1) {\n        index = 0;\n      }\n      const allPos = determineAllPossibilitiesForTabCompletion(player, copy, index, terminal.cwd());\n      if (allPos.length == 0) {\n        return;\n      }\n\n      let arg = \"\";\n      let command = \"\";\n      if (commandArray.length == 0) {\n        return;\n      }\n      if (commandArray.length == 1) {\n        command = commandArray[0];\n      } else if (commandArray.length == 2) {\n        command = commandArray[0];\n        arg = commandArray[1];\n      } else if (commandArray.length == 3) {\n        command = commandArray[0] + \" \" + commandArray[1];\n        arg = commandArray[2];\n      } else {\n        arg = commandArray.pop() + \"\";\n        command = commandArray.join(\" \");\n      }\n\n      const newValue = tabCompletion(command, arg, allPos, value);\n      if (typeof newValue === \"string\" && newValue !== \"\") {\n        saveValue(newValue);\n      }\n      if (Array.isArray(newValue)) {\n        setPossibilities(newValue);\n      }\n    }\n\n    // Clear screen.\n    if (event.keyCode === KEY.L && event.ctrlKey) {\n      event.preventDefault();\n      terminal.clear();\n    }\n\n    // Select previous command.\n    if (event.keyCode === KEY.UPARROW || (Settings.EnableBashHotkeys && event.keyCode === KEY.P && event.ctrlKey)) {\n      if (Settings.EnableBashHotkeys) {\n        event.preventDefault();\n      }\n      const i = terminal.commandHistoryIndex;\n      const len = terminal.commandHistory.length;\n\n      if (len == 0) {\n        return;\n      }\n      if (i < 0 || i > len) {\n        terminal.commandHistoryIndex = len;\n      }\n\n      if (i != 0) {\n        --terminal.commandHistoryIndex;\n      }\n      const prevCommand = terminal.commandHistory[terminal.commandHistoryIndex];\n      saveValue(prevCommand);\n      const ref = terminalInput.current;\n      if (ref) {\n        setTimeout(function () {\n          ref.selectionStart = ref.selectionEnd = 10000;\n        }, 10);\n      }\n    }\n\n    // Select next command\n    if (event.keyCode === KEY.DOWNARROW || (Settings.EnableBashHotkeys && event.keyCode === KEY.M && event.ctrlKey)) {\n      if (Settings.EnableBashHotkeys) {\n        event.preventDefault();\n      }\n      const i = terminal.commandHistoryIndex;\n      const len = terminal.commandHistory.length;\n\n      if (len == 0) {\n        return;\n      }\n      if (i < 0 || i > len) {\n        terminal.commandHistoryIndex = len;\n      }\n\n      // Latest command, put nothing\n      if (i == len || i == len - 1) {\n        terminal.commandHistoryIndex = len;\n        saveValue(\"\");\n      } else {\n        ++terminal.commandHistoryIndex;\n        const prevCommand = terminal.commandHistory[terminal.commandHistoryIndex];\n        saveValue(prevCommand);\n      }\n    }\n\n    // Extra Bash Emulation Hotkeys, must be enabled through .fconf\n    if (Settings.EnableBashHotkeys) {\n      if (event.keyCode === KEY.A && event.ctrlKey) {\n        event.preventDefault();\n        moveTextCursor(\"home\");\n      }\n\n      if (event.keyCode === KEY.E && event.ctrlKey) {\n        event.preventDefault();\n        moveTextCursor(\"end\");\n      }\n\n      if (event.keyCode === KEY.B && event.ctrlKey) {\n        event.preventDefault();\n        moveTextCursor(\"prevchar\");\n      }\n\n      if (event.keyCode === KEY.B && event.altKey) {\n        event.preventDefault();\n        moveTextCursor(\"prevword\");\n      }\n\n      if (event.keyCode === KEY.F && event.ctrlKey) {\n        event.preventDefault();\n        moveTextCursor(\"nextchar\");\n      }\n\n      if (event.keyCode === KEY.F && event.altKey) {\n        event.preventDefault();\n        moveTextCursor(\"nextword\");\n      }\n\n      if ((event.keyCode === KEY.H || event.keyCode === KEY.D) && event.ctrlKey) {\n        modifyInput(\"backspace\");\n        event.preventDefault();\n      }\n\n      // TODO AFTER THIS:\n      // alt + d deletes word after cursor\n      // ^w deletes word before cursor\n      // ^k clears line after cursor\n      // ^u clears line before cursor\n    }\n  }\n\n  return (\n    <>\n      {possibilities.length > 0 && (\n        <Paper square>\n          <Typography classes={{ root: classes.preformatted }} color={\"primary\"} paragraph={false}>\n            Possible autocomplete candidate:\n          </Typography>\n          <Typography classes={{ root: classes.preformatted }} color={\"primary\"} paragraph={false}>\n            {possibilities.join(\" \")}\n          </Typography>\n        </Paper>\n      )}\n      <TextField\n        color={terminal.action === null ? \"primary\" : \"secondary\"}\n        autoFocus\n        disabled={terminal.action !== null}\n        autoComplete=\"off\"\n        classes={{ root: classes.textfield }}\n        value={value}\n        onChange={handleValueChange}\n        inputRef={terminalInput}\n        InputProps={{\n          // for players to hook in\n          id: \"terminal-input\",\n          className: classes.input,\n          startAdornment: (\n            <>\n              <Typography color={terminal.action === null ? \"primary\" : \"secondary\"} flexShrink={0}>\n                [{player.getCurrentServer().hostname}&nbsp;~{terminal.cwd()}]&gt;&nbsp;\n              </Typography>\n            </>\n          ),\n          spellCheck: false,\n          onKeyDown: onKeyDown,\n        }}\n      ></TextField>\n    </>\n  );\n}\n","import { evaluateDirectoryPath, getAllParentDirectories } from \"./DirectoryHelpers\";\nimport { getSubdirectories } from \"./DirectoryServerHelpers\";\n\nimport { Aliases, GlobalAliases } from \"../Alias\";\nimport { DarkWebItems } from \"../DarkWeb/DarkWebItems\";\nimport { Message } from \"../Message/Message\";\nimport { IPlayer } from \"../PersonObjects/IPlayer\";\nimport { AllServers } from \"../Server/AllServers\";\n\n// An array of all Terminal commands\nconst commands = [\n  \"alias\",\n  \"analyze\",\n  \"backdoor\",\n  \"cat\",\n  \"cd\",\n  \"check\",\n  \"clear\",\n  \"cls\",\n  \"connect\",\n  \"download\",\n  \"expr\",\n  \"free\",\n  \"hack\",\n  \"help\",\n  \"home\",\n  \"hostname\",\n  \"ifconfig\",\n  \"kill\",\n  \"killall\",\n  \"ls\",\n  \"lscpu\",\n  \"mem\",\n  \"mv\",\n  \"nano\",\n  \"ps\",\n  \"rm\",\n  \"run\",\n  \"scan\",\n  \"scan-analyze\",\n  \"scp\",\n  \"sudov\",\n  \"tail\",\n  \"theme\",\n  \"top\",\n];\n\nexport function determineAllPossibilitiesForTabCompletion(\n  p: IPlayer,\n  input: string,\n  index: number,\n  currPath = \"\",\n): string[] {\n  let allPos: string[] = [];\n  allPos = allPos.concat(Object.keys(GlobalAliases));\n  const currServ = p.getCurrentServer();\n  const homeComputer = p.getHomeComputer();\n\n  let parentDirPath = \"\";\n  let evaledParentDirPath: string | null = null;\n\n  // Helper functions\n  function addAllCodingContracts(): void {\n    for (const cct of currServ.contracts) {\n      allPos.push(cct.fn);\n    }\n  }\n\n  function addAllLitFiles(): void {\n    for (const file of currServ.messages) {\n      if (!(file instanceof Message)) {\n        allPos.push(file);\n      }\n    }\n  }\n\n  function addAllMessages(): void {\n    for (const file of currServ.messages) {\n      if (file instanceof Message) {\n        allPos.push(file.filename);\n      }\n    }\n  }\n\n  function addAllPrograms(): void {\n    for (const program of homeComputer.programs) {\n      allPos.push(program);\n    }\n  }\n\n  function addAllScripts(): void {\n    for (const script of currServ.scripts) {\n      const res = processFilepath(script.filename);\n      if (res) {\n        allPos.push(res);\n      }\n    }\n  }\n\n  function addAllTextFiles(): void {\n    for (const txt of currServ.textFiles) {\n      const res = processFilepath(txt.fn);\n      if (res) {\n        allPos.push(res);\n      }\n    }\n  }\n\n  function addAllDirectories(): void {\n    // Directories are based on the currently evaluated path\n    const subdirs = getSubdirectories(currServ, evaledParentDirPath == null ? \"/\" : evaledParentDirPath);\n\n    for (let i = 0; i < subdirs.length; ++i) {\n      const assembledDirPath = evaledParentDirPath == null ? subdirs[i] : evaledParentDirPath + subdirs[i];\n      const res = processFilepath(assembledDirPath);\n      if (res != null) {\n        subdirs[i] = res;\n      }\n    }\n\n    allPos = allPos.concat(subdirs);\n  }\n\n  // Convert from the real absolute path back to the original path used in the input\n  function convertParentPath(filepath: string): string {\n    if (parentDirPath == null || evaledParentDirPath == null) {\n      console.warn(`convertParentPath() called when paths are null`);\n      return filepath;\n    }\n\n    if (!filepath.startsWith(evaledParentDirPath)) {\n      console.warn(\n        `convertParentPath() called for invalid path. (filepath=${filepath}) (evaledParentDirPath=${evaledParentDirPath})`,\n      );\n      return filepath;\n    }\n\n    return parentDirPath + filepath.slice(evaledParentDirPath.length);\n  }\n\n  // Given an a full, absolute filepath, converts it to the proper value\n  // for autocompletion purposes\n  function processFilepath(filepath: string): string | null {\n    if (evaledParentDirPath) {\n      if (filepath.startsWith(evaledParentDirPath)) {\n        return convertParentPath(filepath);\n      }\n    } else if (parentDirPath !== \"\") {\n      // If the parent directory is the root directory, but we're not searching\n      // it from the root directory, we have to add the original path\n      let t_parentDirPath = parentDirPath;\n      if (!t_parentDirPath.endsWith(\"/\")) {\n        t_parentDirPath += \"/\";\n      }\n      return parentDirPath + filepath;\n    } else {\n      return filepath;\n    }\n\n    return null;\n  }\n\n  function isCommand(cmd: string): boolean {\n    let t_cmd = cmd;\n    if (!t_cmd.endsWith(\" \")) {\n      t_cmd += \" \";\n    }\n\n    return input.startsWith(t_cmd);\n  }\n\n  /**\n   * If the command starts with './' and the index == -1, then the user\n   * has input ./partialexecutablename so autocomplete the script or program.\n   * Put './' in front of each script/executable\n   */\n  if (isCommand(\"./\") && index == -1) {\n    //All programs and scripts\n    for (let i = 0; i < currServ.scripts.length; ++i) {\n      allPos.push(\"./\" + currServ.scripts[i].filename);\n    }\n\n    //Programs are on home computer\n    for (let i = 0; i < homeComputer.programs.length; ++i) {\n      allPos.push(\"./\" + homeComputer.programs[i]);\n    }\n    return allPos;\n  }\n\n  // Autocomplete the command\n  if (index === -1) {\n    return commands.concat(Object.keys(Aliases)).concat(Object.keys(GlobalAliases));\n  }\n\n  // Since we're autocompleting an argument and not a command, the argument might\n  // be a file/directory path. We have to account for that when autocompleting\n  const commandArray = input.split(\" \");\n  if (commandArray.length === 0) {\n    console.warn(`Tab autocompletion logic reached invalid branch`);\n    return allPos;\n  }\n  const arg = commandArray[commandArray.length - 1];\n  parentDirPath = getAllParentDirectories(arg);\n  evaledParentDirPath = evaluateDirectoryPath(parentDirPath, currPath);\n  if (evaledParentDirPath === \"/\") {\n    evaledParentDirPath = null;\n  } else if (evaledParentDirPath == null) {\n    return allPos; // Invalid path\n  } else {\n    evaledParentDirPath += \"/\";\n  }\n\n  if (isCommand(\"buy\")) {\n    const options = [];\n    for (const i in DarkWebItems) {\n      const item = DarkWebItems[i];\n      options.push(item.program);\n    }\n\n    return options.concat(Object.keys(GlobalAliases));\n  }\n\n  if (isCommand(\"scp\") && index === 1) {\n    for (const iphostname in AllServers) {\n      allPos.push(AllServers[iphostname].ip);\n      allPos.push(AllServers[iphostname].hostname);\n    }\n\n    return allPos;\n  }\n\n  if (isCommand(\"scp\") && index === 0) {\n    addAllScripts();\n    addAllLitFiles();\n    addAllTextFiles();\n    addAllDirectories();\n\n    return allPos;\n  }\n\n  if (isCommand(\"connect\")) {\n    // All network connections\n    for (let i = 0; i < currServ.serversOnNetwork.length; ++i) {\n      const serv = AllServers[currServ.serversOnNetwork[i]];\n      if (serv == null) {\n        continue;\n      }\n      allPos.push(serv.ip);\n      allPos.push(serv.hostname);\n    }\n\n    return allPos;\n  }\n\n  if (isCommand(\"kill\") || isCommand(\"tail\") || isCommand(\"mem\") || isCommand(\"check\")) {\n    addAllScripts();\n    addAllDirectories();\n\n    return allPos;\n  }\n\n  if (isCommand(\"nano\")) {\n    addAllScripts();\n    addAllTextFiles();\n    allPos.push(\".fconf\");\n    addAllDirectories();\n\n    return allPos;\n  }\n\n  if (isCommand(\"rm\")) {\n    addAllScripts();\n    addAllPrograms();\n    addAllLitFiles();\n    addAllTextFiles();\n    addAllCodingContracts();\n    addAllDirectories();\n\n    return allPos;\n  }\n\n  if (isCommand(\"run\")) {\n    addAllScripts();\n    addAllPrograms();\n    addAllCodingContracts();\n    addAllDirectories();\n\n    return allPos;\n  }\n\n  if (isCommand(\"cat\")) {\n    addAllMessages();\n    addAllLitFiles();\n    addAllTextFiles();\n    addAllDirectories();\n\n    return allPos;\n  }\n\n  if (isCommand(\"download\") || isCommand(\"mv\")) {\n    addAllScripts();\n    addAllTextFiles();\n    addAllDirectories();\n\n    return allPos;\n  }\n\n  if (isCommand(\"cd\")) {\n    addAllDirectories();\n\n    return allPos;\n  }\n\n  if (isCommand(\"ls\") && index === 0) {\n    addAllDirectories();\n  }\n\n  return allPos;\n}\n","/**\n * Helper functions that implement \"directory\" functionality in the Terminal.\n * These aren't \"real\" directories, it's more of a pseudo-directory implementation\n * that uses mainly string manipulation.\n *\n * This file contains function that deal with Server-related directory things.\n * Functions that deal with the string manipulation can be found in\n * ./DirectoryHelpers.ts\n */\nimport { isValidDirectoryPath, isInRootDirectory, getFirstParentDirectory } from \"./DirectoryHelpers\";\nimport { BaseServer } from \"../Server/BaseServer\";\n\n/**\n * Given a directory (by the full directory path) and a server, returns all\n * subdirectories of that directory. This is only for FIRST-LEVEl/immediate subdirectories\n */\nexport function getSubdirectories(serv: BaseServer, dir: string): string[] {\n  const res: string[] = [];\n\n  if (!isValidDirectoryPath(dir)) {\n    return res;\n  }\n\n  let t_dir = dir;\n  if (!t_dir.endsWith(\"/\")) {\n    t_dir += \"/\";\n  }\n\n  function processFile(fn: string): void {\n    if (t_dir === \"/\" && isInRootDirectory(fn)) {\n      const subdir = getFirstParentDirectory(fn);\n      if (subdir !== \"/\" && !res.includes(subdir)) {\n        res.push(subdir);\n      }\n    } else if (fn.startsWith(t_dir)) {\n      const remaining = fn.slice(t_dir.length);\n      const subdir = getFirstParentDirectory(remaining);\n      if (subdir !== \"/\" && !res.includes(subdir)) {\n        res.push(subdir);\n      }\n    }\n  }\n\n  for (const script of serv.scripts) {\n    processFile(script.filename);\n  }\n\n  for (const txt of serv.textFiles) {\n    processFile(txt.fn);\n  }\n\n  return res;\n}\n","import { containsAllStrings, longestCommonStart } from \"../utils/StringHelperFunctions\";\n\n/**\n * Implements tab completion for the Terminal\n *\n * @param command {string} Terminal command, excluding the last incomplete argument\n * @param arg {string} Last argument that is being completed\n * @param allPossibilities {string[]} All values that `arg` can complete to\n */\nexport function tabCompletion(\n  command: string,\n  arg: string,\n  allPossibilities: string[],\n  oldValue: string,\n): string[] | string | undefined {\n  if (!(allPossibilities.constructor === Array)) {\n    return;\n  }\n  if (!containsAllStrings(allPossibilities)) {\n    return;\n  }\n\n  // Remove all options in allPossibilities that do not match the current string\n  // that we are attempting to autocomplete\n  if (arg === \"\") {\n    for (let i = allPossibilities.length - 1; i >= 0; --i) {\n      if (!allPossibilities[i].toLowerCase().startsWith(command.toLowerCase())) {\n        allPossibilities.splice(i, 1);\n      }\n    }\n  } else {\n    for (let i = allPossibilities.length - 1; i >= 0; --i) {\n      if (!allPossibilities[i].toLowerCase().startsWith(arg.toLowerCase())) {\n        allPossibilities.splice(i, 1);\n      }\n    }\n  }\n\n  const semiColonIndex = oldValue.lastIndexOf(\";\");\n\n  let val = \"\";\n  if (allPossibilities.length === 0) {\n    return;\n  } else if (allPossibilities.length === 1) {\n    if (arg === \"\") {\n      //Autocomplete command\n      val = allPossibilities[0] + \" \";\n    } else {\n      val = command + \" \" + allPossibilities[0];\n    }\n\n    if (semiColonIndex === -1) {\n      // No semicolon, so replace the whole command\n      return val;\n    } else {\n      // Replace only after the last semicolon\n      return oldValue.slice(0, semiColonIndex + 1) + \" \" + val;\n    }\n  } else {\n    const longestStartSubstr = longestCommonStart(allPossibilities);\n    /**\n     * If the longest common starting substring of remaining possibilities is the same\n     * as whatevers already in terminal, just list all possible options. Otherwise,\n     * change the input in the terminal to the longest common starting substr\n     */\n    if (arg === \"\") {\n      if (longestStartSubstr === command) {\n        return allPossibilities;\n      } else {\n        if (semiColonIndex === -1) {\n          // No semicolon, so replace the whole command\n          return longestStartSubstr;\n        } else {\n          // Replace only after the last semicolon\n          return `${oldValue.slice(0, semiColonIndex + 1)} ${longestStartSubstr}`;\n        }\n      }\n    } else {\n      if (longestStartSubstr === arg) {\n        // List all possible options\n        return allPossibilities;\n      } else {\n        if (semiColonIndex == -1) {\n          // No semicolon, so replace the whole command\n          return `${command} ${longestStartSubstr}`;\n        } else {\n          // Replace only after the last semicolon\n          return `${oldValue.slice(0, semiColonIndex + 1)} ${command} ${longestStartSubstr}`;\n        }\n      }\n    }\n  }\n}\n","import React from \"react\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport Box from \"@mui/material/Box\";\nexport function TutorialRoot(): React.ReactElement {\n  return (\n    <>\n      <Typography variant=\"h4\">Tutorial / Documentation</Typography>\n      <Box m={2}>\n        <Link\n          color=\"primary\"\n          target=\"_blank\"\n          href=\"https://bitburner.readthedocs.io/en/latest/guidesandtips/gettingstartedguideforbeginnerprogrammers.html\"\n        >\n          <Typography>Getting Started</Typography>\n        </Link>\n        <br />\n        <Link\n          color=\"primary\"\n          target=\"_blank\"\n          href=\"https://bitburner.readthedocs.io/en/latest/basicgameplay/servers.html\"\n        >\n          <Typography>Servers & Networking</Typography>\n        </Link>\n        <br />\n        <Link\n          color=\"primary\"\n          target=\"_blank\"\n          href=\"https://bitburner.readthedocs.io/en/latest/basicgameplay/hacking.html\"\n        >\n          <Typography>Hacking</Typography>\n        </Link>\n        <br />\n        <Link\n          color=\"primary\"\n          target=\"_blank\"\n          href=\"https://bitburner.readthedocs.io/en/latest/basicgameplay/scripts.html\"\n        >\n          <Typography>Scripts</Typography>\n        </Link>\n        <br />\n        <Link color=\"primary\" target=\"_blank\" href=\"https://bitburner.readthedocs.io/en/latest/netscript.html\">\n          <Typography>Netscript Programming Language</Typography>\n        </Link>\n        <br />\n        <Link\n          color=\"primary\"\n          target=\"_blank\"\n          href=\"https://bitburner.readthedocs.io/en/latest/basicgameplay/world.html\"\n        >\n          <Typography>Traveling</Typography>\n        </Link>\n        <br />\n        <Link\n          color=\"primary\"\n          target=\"_blank\"\n          href=\"https://bitburner.readthedocs.io/en/latest/basicgameplay/companies.html\"\n        >\n          <Typography>Companies</Typography>\n        </Link>\n        <br />\n        <Link\n          color=\"primary\"\n          target=\"_blank\"\n          href=\"https://bitburner.readthedocs.io/en/latest/basicgameplay/infiltration.html\"\n        >\n          <Typography>Infiltration</Typography>\n        </Link>\n        <br />\n        <Link\n          color=\"primary\"\n          target=\"_blank\"\n          href=\"https://bitburner.readthedocs.io/en/latest/basicgameplay/factions.html\"\n        >\n          <Typography>Factions</Typography>\n        </Link>\n        <br />\n        <Link\n          color=\"primary\"\n          target=\"_blank\"\n          href=\"https://bitburner.readthedocs.io/en/latest/basicgameplay/augmentations.html\"\n        >\n          <Typography>Augmentations</Typography>\n        </Link>\n        <br />\n        <Link color=\"primary\" target=\"_blank\" href=\"https://bitburner.readthedocs.io/en/latest/shortcuts.html\">\n          <Typography>Keyboard Shortcuts</Typography>\n        </Link>\n      </Box>\n    </>\n  );\n}\n","/**\n * Root React Component for the \"Active Scripts\" UI page. This page displays\n * and provides information about all of the player's scripts that are currently running\n */\nimport React, { useState, useEffect } from \"react\";\n\nimport { ScriptProduction } from \"./ScriptProduction\";\nimport { ServerAccordions } from \"./ServerAccordions\";\n\nimport { WorkerScript } from \"../../Netscript/WorkerScript\";\n\nimport Typography from \"@mui/material/Typography\";\n\ntype IProps = {\n  workerScripts: Map<number, WorkerScript>;\n};\n\nexport function ActiveScriptsRoot(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    const id = setInterval(rerender, 200);\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <>\n      <Typography variant=\"h4\">Active Scripts</Typography>\n      <Typography>\n        This page displays a list of all of your scripts that are currently running across every machine. It also\n        provides information about each script's production. The scripts are categorized by the hostname of the servers\n        on which they are running.\n      </Typography>\n\n      <ScriptProduction />\n      <ServerAccordions {...props} />\n    </>\n  );\n}\n","/**\n * React Component for displaying the total production and production rate\n * of scripts on the 'Active Scripts' UI page\n */\nimport * as React from \"react\";\n\nimport { Money } from \"../React/Money\";\nimport { MoneyRate } from \"../React/MoneyRate\";\nimport { use } from \"../Context\";\n\nimport Typography from \"@mui/material/Typography\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    cell: {\n      borderBottom: \"none\",\n      padding: theme.spacing(1),\n      margin: theme.spacing(1),\n      whiteSpace: \"nowrap\",\n    },\n    size: {\n      width: \"1px\",\n    },\n  }),\n);\nexport function ScriptProduction(): React.ReactElement {\n  const player = use.Player();\n  const classes = useStyles();\n  const prodRateSinceLastAug = player.scriptProdSinceLastAug / (player.playtimeSinceLastAug / 1000);\n\n  return (\n    <Table size=\"small\" classes={{ root: classes.size }}>\n      <TableBody>\n        <TableRow>\n          <TableCell component=\"th\" scope=\"row\" classes={{ root: classes.cell }}>\n            <Typography variant=\"body2\">Total production:</Typography>\n          </TableCell>\n          <TableCell align=\"left\" classes={{ root: classes.cell }}>\n            <Typography variant=\"body2\">\n              <Money money={player.scriptProdSinceLastAug} />\n            </Typography>\n          </TableCell>\n          <TableCell align=\"left\" classes={{ root: classes.cell }}>\n            <Typography variant=\"body2\">\n              (<MoneyRate money={prodRateSinceLastAug} />)\n            </Typography>\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n  );\n}\n","/**\n * React Component for rendering the Accordion elements for all servers\n * on which scripts are running\n */\nimport React, { useState, useEffect } from \"react\";\n\nimport { ServerAccordion } from \"./ServerAccordion\";\n\nimport TextField from \"@mui/material/TextField\";\nimport List from \"@mui/material/List\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport { WorkerScript } from \"../../Netscript/WorkerScript\";\nimport { WorkerScriptStartStopEventEmitter } from \"../../Netscript/WorkerScriptStartStopEventEmitter\";\nimport { getServer } from \"../../Server/ServerHelpers\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { Settings } from \"../../Settings/Settings\";\nimport { TablePaginationActionsAll } from \"../React/TablePaginationActionsAll\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\n// Map of server hostname -> all workerscripts on that server for all active scripts\ninterface IServerData {\n  server: BaseServer;\n  workerScripts: WorkerScript[];\n}\n\ninterface IServerToScriptsMap {\n  [key: string]: IServerData | undefined;\n}\n\ntype IProps = {\n  workerScripts: Map<number, WorkerScript>;\n};\n\nexport function ServerAccordions(props: IProps): React.ReactElement {\n  const [filter, setFilter] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(Settings.ActiveScriptsServerPageSize);\n  const setRerender = useState(false)[1];\n\n  const handleChangePage = (event: unknown, newPage: number): void => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    Settings.ActiveScriptsServerPageSize = parseInt(event.target.value, 10);\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  function handleFilterChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    setFilter(event.target.value);\n    setPage(0);\n  }\n\n  const serverToScriptMap: IServerToScriptsMap = {};\n  for (const ws of props.workerScripts.values()) {\n    const server = getServer(ws.serverIp);\n    if (server == null) {\n      console.warn(`WorkerScript has invalid IP address: ${ws.serverIp}`);\n      continue;\n    }\n\n    let data = serverToScriptMap[server.hostname];\n\n    if (data === undefined) {\n      serverToScriptMap[server.hostname] = {\n        server: server,\n        workerScripts: [],\n      };\n      data = serverToScriptMap[server.hostname];\n    }\n    if (data !== undefined) data.workerScripts.push(ws);\n  }\n\n  const filtered = Object.values(serverToScriptMap).filter((data) => data && data.server.hostname.includes(filter));\n\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => WorkerScriptStartStopEventEmitter.subscribe(rerender));\n\n  return (\n    <>\n      <TextField\n        value={filter}\n        onChange={handleFilterChange}\n        autoFocus\n        InputProps={{\n          startAdornment: <SearchIcon />,\n          spellCheck: false,\n        }}\n      />\n      <List dense={true}>\n        {filtered.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((data) => {\n          return (\n            data && (\n              <ServerAccordion key={data.server.hostname} server={data.server} workerScripts={data.workerScripts} />\n            )\n          );\n        })}\n      </List>\n      <TablePagination\n        rowsPerPageOptions={[10, 15, 20, 100]}\n        component=\"div\"\n        count={filtered.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        ActionsComponent={TablePaginationActionsAll}\n      />\n    </>\n  );\n}\n","/**\n * React Component for rendering the Accordion element for a single\n * server in the 'Active Scripts' UI page\n */\nimport * as React from \"react\";\n\nimport Typography from \"@mui/material/Typography\";\n\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport { ServerAccordionContent } from \"./ServerAccordionContent\";\n\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { WorkerScript } from \"../../Netscript/WorkerScript\";\n\nimport { createProgressBarText } from \"../../utils/helpers/createProgressBarText\";\n\ntype IProps = {\n  server: BaseServer;\n  workerScripts: WorkerScript[];\n};\n\nexport function ServerAccordion(props: IProps): React.ReactElement {\n  const [open, setOpen] = React.useState(false);\n  const server = props.server;\n\n  // Accordion's header text\n  // TODO: calculate the longest hostname length rather than hard coding it\n  const longestHostnameLength = 18;\n  const paddedName = `${server.hostname}${\" \".repeat(longestHostnameLength)}`.slice(\n    0,\n    Math.max(server.hostname.length, longestHostnameLength),\n  );\n  const barOptions = {\n    progress: server.ramUsed / server.maxRam,\n    totalTicks: 30,\n  };\n  const headerTxt = `${paddedName} ${createProgressBarText(barOptions)}`;\n\n  return (\n    <Box component={Paper}>\n      <ListItemButton onClick={() => setOpen((old) => !old)}>\n        <ListItemText primary={<Typography style={{ whiteSpace: \"pre-wrap\" }}>{headerTxt}</Typography>} />\n        {open ? <ExpandLess color=\"primary\" /> : <ExpandMore color=\"primary\" />}\n      </ListItemButton>\n      <Box mx={2}>\n        <Collapse in={open} timeout={0} unmountOnExit>\n          <ServerAccordionContent workerScripts={props.workerScripts} />\n        </Collapse>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { WorkerScript } from \"../../Netscript/WorkerScript\";\nimport { WorkerScriptAccordion } from \"./WorkerScriptAccordion\";\nimport List from \"@mui/material/List\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport { TablePaginationActionsAll } from \"../React/TablePaginationActionsAll\";\nimport { Settings } from \"../../Settings/Settings\";\n\ninterface IProps {\n  workerScripts: WorkerScript[];\n}\n\nexport function ServerAccordionContent(props: IProps): React.ReactElement {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(Settings.ActiveScriptsScriptPageSize);\n  const handleChangePage = (event: unknown, newPage: number): void => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    Settings.ActiveScriptsScriptPageSize = parseInt(event.target.value, 10);\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <>\n      <List dense disablePadding>\n        {props.workerScripts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((ws) => (\n          <WorkerScriptAccordion key={`${ws.name}_${ws.args}`} workerScript={ws} />\n        ))}\n      </List>\n      <TablePagination\n        rowsPerPageOptions={[10, 15, 20, 100]}\n        component=\"div\"\n        count={props.workerScripts.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        ActionsComponent={TablePaginationActionsAll}\n      />\n    </>\n  );\n}\n","/**\n * React Component for displaying a single WorkerScript's info as an\n * Accordion element\n */\nimport * as React from \"react\";\n\nimport { numeralWrapper } from \"../numeralFormat\";\n\nimport Table from \"@mui/material/Table\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableBody from \"@mui/material/TableBody\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport Collapse from \"@mui/material/Collapse\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\n\nimport { killWorkerScript } from \"../../Netscript/killWorkerScript\";\nimport { WorkerScript } from \"../../Netscript/WorkerScript\";\n\nimport { dialogBoxCreate } from \"../React/DialogBox\";\nimport { LogBoxEvents } from \"../React/LogBoxManager\";\nimport { convertTimeMsToTimeElapsedString } from \"../../utils/StringHelperFunctions\";\nimport { arrayToString } from \"../../utils/helpers/arrayToString\";\nimport { Money } from \"../React/Money\";\nimport { MoneyRate } from \"../React/MoneyRate\";\n\nconst useStyles = makeStyles({\n  noborder: {\n    borderBottom: \"none\",\n  },\n});\n\ntype IProps = {\n  workerScript: WorkerScript;\n};\n\nexport function WorkerScriptAccordion(props: IProps): React.ReactElement {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const workerScript = props.workerScript;\n  const scriptRef = workerScript.scriptRef;\n\n  function logClickHandler(): void {\n    LogBoxEvents.emit(scriptRef);\n  }\n  const killScript = killWorkerScript.bind(null, scriptRef as any, scriptRef.server);\n\n  function killScriptClickHandler(): void {\n    killScript();\n    dialogBoxCreate(\"Killing script\");\n  }\n\n  // Calculations for script stats\n  const onlineMps = scriptRef.onlineMoneyMade / scriptRef.onlineRunningTime;\n  const onlineEps = scriptRef.onlineExpGained / scriptRef.onlineRunningTime;\n\n  return (\n    <>\n      <ListItemButton onClick={() => setOpen((old) => !old)} component={Paper}>\n        <ListItemText primary={<Typography>└ {props.workerScript.name}</Typography>} />\n        {open ? <ExpandLess color=\"primary\" /> : <ExpandMore color=\"primary\" />}\n      </ListItemButton>\n      <Collapse in={open} timeout={0} unmountOnExit>\n        <Box mx={6}>\n          <Table padding=\"none\" size=\"small\">\n            <TableBody>\n              <TableRow>\n                <TableCell className={classes.noborder}>\n                  <Typography>└ Threads:</Typography>\n                </TableCell>\n                <TableCell className={classes.noborder}>\n                  <Typography>{numeralWrapper.formatThreads(props.workerScript.scriptRef.threads)}</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className={classes.noborder} colSpan={2}>\n                  <Typography>└ Args: {arrayToString(props.workerScript.args)}</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className={classes.noborder}>\n                  <Typography>└ Online Time:</Typography>\n                </TableCell>\n                <TableCell className={classes.noborder}>\n                  <Typography>{convertTimeMsToTimeElapsedString(scriptRef.onlineRunningTime * 1e3)}</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className={classes.noborder}>\n                  <Typography>└ Offline Time:</Typography>\n                </TableCell>\n                <TableCell className={classes.noborder}>\n                  <Typography>{convertTimeMsToTimeElapsedString(scriptRef.offlineRunningTime * 1e3)}</Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className={classes.noborder}>\n                  <Typography>└ Total online production:</Typography>\n                </TableCell>\n                <TableCell className={classes.noborder} align=\"left\">\n                  <Typography>\n                    <Money money={scriptRef.onlineMoneyMade} />\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className={classes.noborder} colSpan={1} />\n                <TableCell className={classes.noborder} align=\"left\">\n                  <Typography>&nbsp;{numeralWrapper.formatExp(scriptRef.onlineExpGained) + \" hacking exp\"}</Typography>\n                </TableCell>\n              </TableRow>\n\n              <TableRow>\n                <TableCell className={classes.noborder}>\n                  <Typography>└ Online production rate:</Typography>\n                </TableCell>\n                <TableCell className={classes.noborder} align=\"left\">\n                  <Typography>\n                    <MoneyRate money={onlineMps} />\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className={classes.noborder} colSpan={1} />\n                <TableCell className={classes.noborder} align=\"left\">\n                  <Typography>&nbsp;{numeralWrapper.formatExp(onlineEps) + \" hacking exp / sec\"}</Typography>\n                </TableCell>\n              </TableRow>\n\n              <TableRow>\n                <TableCell className={classes.noborder}>\n                  <Typography>└ Total offline production:</Typography>\n                </TableCell>\n                <TableCell className={classes.noborder} align=\"left\">\n                  <Typography>\n                    <Money money={scriptRef.offlineMoneyMade} />\n                  </Typography>\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell className={classes.noborder} colSpan={1} />\n                <TableCell className={classes.noborder} align=\"left\">\n                  <Typography>&nbsp;{numeralWrapper.formatExp(scriptRef.offlineExpGained) + \" hacking exp\"}</Typography>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n\n          <Button onClick={logClickHandler}>LOG</Button>\n          <IconButton onClick={killScriptClickHandler}>\n            <DeleteIcon color=\"error\" />\n          </IconButton>\n        </Box>\n      </Collapse>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { IRouter } from \"../../ui/Router\";\nimport { Factions } from \"../Factions\";\nimport { Faction } from \"../Faction\";\nimport { joinFaction } from \"../FactionHelpers\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Link from \"@mui/material/Link\";\nimport Button from \"@mui/material/Button\";\nimport TableBody from \"@mui/material/TableBody\";\nimport { Table, TableCell } from \"../../ui/React/Table\";\nimport TableRow from \"@mui/material/TableRow\";\n\ninterface IProps {\n  player: IPlayer;\n  router: IRouter;\n}\n\nexport function FactionsRoot(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n  useEffect(() => {\n    const id = setInterval(rerender, 200);\n    return () => clearInterval(id);\n  }, []);\n  function openFaction(faction: Faction): void {\n    props.router.toFaction(faction);\n  }\n\n  function acceptInvitation(event: React.MouseEvent<HTMLButtonElement, MouseEvent>, faction: string): void {\n    if (!event.isTrusted) return;\n    joinFaction(Factions[faction]);\n    setRerender((x) => !x);\n  }\n\n  return (\n    <>\n      <Typography variant=\"h4\">Factions</Typography>\n      <Typography>Lists all factions you have joined</Typography>\n      <br />\n      <Box display=\"flex\" flexDirection=\"column\">\n        {props.player.factions.map((faction: string) => (\n          <Link key={faction} variant=\"h6\" onClick={() => openFaction(Factions[faction])}>\n            {faction}\n          </Link>\n        ))}\n      </Box>\n      <br />\n      {props.player.factionInvitations.length > 0 && (\n        <>\n          <Typography variant=\"h5\" color=\"primary\">\n            Outstanding Faction Invitations\n          </Typography>\n          <Typography>\n            Lists factions you have been invited to. You can accept these faction invitations at any time.\n          </Typography>\n          <Table size=\"small\" padding=\"none\">\n            <TableBody>\n              {props.player.factionInvitations.map((faction: string) => (\n                <TableRow key={faction}>\n                  <TableCell>\n                    <Typography noWrap>{faction}</Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Button onClick={(e) => acceptInvitation(e, faction)}>Join!</Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </>\n      )}\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { startHackingMission } from \"../../Faction/FactionHelpers\";\nimport { Faction } from \"../../Faction/Faction\";\n\ninterface IProps {\n  faction: Faction;\n}\n\nexport function HackingMissionRoot(props: IProps): React.ReactElement {\n  useEffect(() => startHackingMission(props.faction));\n  return <div id=\"mission-container\"></div>;\n}\n","/**\n * Root React Component for displaying a Faction's UI.\n * This is the component for displaying a single faction's UI, not the list of all\n * accessible factions\n */\nimport React, { useState, useEffect } from \"react\";\n\nimport { AugmentationsPage } from \"./AugmentationsPage\";\nimport { DonateOption } from \"./DonateOption\";\nimport { Info } from \"./Info\";\nimport { Option } from \"./Option\";\n\nimport { CONSTANTS } from \"../../Constants\";\n\nimport { BitNodeMultipliers } from \"../../BitNode/BitNodeMultipliers\";\nimport { Faction } from \"../../Faction/Faction\";\nimport { SourceFileFlags } from \"../../SourceFile/SourceFileFlags\";\n\nimport { createPopup } from \"../../ui/React/createPopup\";\nimport { use } from \"../../ui/Context\";\nimport { CreateGangModal } from \"./CreateGangModal\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { CovenantPurchasesRoot } from \"../../PersonObjects/Sleeve/ui/CovenantPurchasesRoot\";\n\ntype IProps = {\n  faction: Faction;\n};\n\n// Info text for all options on the UI\nconst gangInfo = \"Create and manage a gang for this Faction. Gangs will earn you money and \" + \"faction reputation\";\nconst hackingMissionInfo =\n  \"Attempt a hacking mission for your faction. \" +\n  \"A mission is a mini game that, if won, earns you \" +\n  \"significant reputation with this faction. (Recommended hacking level: 200+)\";\nconst hackingContractsInfo =\n  \"Complete hacking contracts for your faction. \" +\n  \"Your effectiveness, which determines how much \" +\n  \"reputation you gain for this faction, is based on your hacking skill. \" +\n  \"You will gain hacking exp.\";\nconst fieldWorkInfo =\n  \"Carry out field missions for your faction. \" +\n  \"Your effectiveness, which determines how much \" +\n  \"reputation you gain for this faction, is based on all of your stats. \" +\n  \"You will gain exp for all stats.\";\nconst securityWorkInfo =\n  \"Serve in a security detail for your faction. \" +\n  \"Your effectiveness, which determines how much \" +\n  \"reputation you gain for this faction, is based on your combat stats. \" +\n  \"You will gain exp for all combat stats.\";\nconst augmentationsInfo =\n  \"As your reputation with this faction rises, you will \" +\n  \"unlock Augmentations, which you can purchase to enhance \" +\n  \"your abilities.\";\nconst sleevePurchasesInfo = \"Purchase Duplicate Sleeves and upgrades. These are permanent!\";\n\nconst GangNames = [\n  \"Slum Snakes\",\n  \"Tetrads\",\n  \"The Syndicate\",\n  \"The Dark Army\",\n  \"Speakers for the Dead\",\n  \"NiteSec\",\n  \"The Black Hand\",\n];\n\ninterface IMainProps {\n  faction: Faction;\n  rerender: () => void;\n  onAugmentations: () => void;\n}\n\nfunction MainPage({ faction, rerender, onAugmentations }: IMainProps): React.ReactElement {\n  const player = use.Player();\n  const router = use.Router();\n  const [sleevesOpen, setSleevesOpen] = useState(false);\n  const [gangOpen, setGangOpen] = useState(false);\n  const p = player;\n  const factionInfo = faction.getInfo();\n\n  function manageGang(): void {\n    // If player already has a gang, just go to the gang UI\n    if (player.inGang()) {\n      return router.toGang();\n    }\n\n    setGangOpen(true);\n  }\n\n  function startFieldWork(faction: Faction): void {\n    player.startFactionFieldWork(router, faction);\n  }\n\n  function startHackingContracts(faction: Faction): void {\n    player.startFactionHackWork(router, faction);\n  }\n\n  function startHackingMission(faction: Faction): void {\n    player.singularityStopWork();\n    router.toHackingMission(faction);\n  }\n\n  function startSecurityWork(faction: Faction): void {\n    player.startFactionSecurityWork(router, faction);\n  }\n\n  // We have a special flag for whether the player this faction is the player's\n  // gang faction because if the player has a gang, they cannot do any other action\n  const isPlayersGang = p.inGang() && p.getGangName() === faction.name;\n\n  // Flags for whether special options (gang, sleeve purchases, donate, etc.)\n  // should be shown\n  const favorToDonate = Math.floor(CONSTANTS.BaseFavorToDonate * BitNodeMultipliers.RepToDonateToFaction);\n  const canDonate = faction.favor >= favorToDonate;\n\n  const canPurchaseSleeves = faction.name === \"The Covenant\" && p.bitNodeN >= 10 && SourceFileFlags[10];\n\n  let canAccessGang = p.canAccessGang() && GangNames.includes(faction.name);\n  if (p.inGang()) {\n    if (p.getGangName() !== faction.name) {\n      canAccessGang = false;\n    } else if (p.getGangName() === faction.name) {\n      canAccessGang = true;\n    }\n  }\n\n  return (\n    <>\n      <Button onClick={() => router.toFactions()}>Back</Button>\n      <Typography variant=\"h4\" color=\"primary\">\n        {faction.name}\n      </Typography>\n      <Info faction={faction} factionInfo={factionInfo} />\n      {canAccessGang && (\n        <>\n          <Option buttonText={\"Manage Gang\"} infoText={gangInfo} onClick={manageGang} />\n          <CreateGangModal facName={faction.name} open={gangOpen} onClose={() => setGangOpen(false)} />\n        </>\n      )}\n      {!isPlayersGang && factionInfo.offerHackingMission && (\n        <Option\n          buttonText={\"Hacking Mission\"}\n          infoText={hackingMissionInfo}\n          onClick={() => startHackingMission(faction)}\n        />\n      )}\n      {!isPlayersGang && factionInfo.offerHackingWork && (\n        <Option\n          buttonText={\"Hacking Contracts\"}\n          infoText={hackingContractsInfo}\n          onClick={() => startHackingContracts(faction)}\n        />\n      )}\n      {!isPlayersGang && factionInfo.offerFieldWork && (\n        <Option buttonText={\"Field Work\"} infoText={fieldWorkInfo} onClick={() => startFieldWork(faction)} />\n      )}\n      {!isPlayersGang && factionInfo.offerSecurityWork && (\n        <Option buttonText={\"Security Work\"} infoText={securityWorkInfo} onClick={() => startSecurityWork(faction)} />\n      )}\n      {!isPlayersGang && factionInfo.offersWork() && (\n        <DonateOption\n          faction={faction}\n          p={player}\n          rerender={rerender}\n          favorToDonate={favorToDonate}\n          disabled={!canDonate}\n        />\n      )}\n      <Option buttonText={\"Purchase Augmentations\"} infoText={augmentationsInfo} onClick={onAugmentations} />\n      {canPurchaseSleeves && (\n        <>\n          <Option\n            buttonText={\"Purchase & Upgrade Duplicate Sleeves\"}\n            infoText={sleevePurchasesInfo}\n            onClick={() => setSleevesOpen(true)}\n          />\n          <CovenantPurchasesRoot open={sleevesOpen} onClose={() => setSleevesOpen(false)} />\n        </>\n      )}\n    </>\n  );\n}\n\nexport function FactionRoot(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    const id = setInterval(rerender, 200);\n    return () => clearInterval(id);\n  }, []);\n\n  const faction = props.faction;\n\n  const [purchasingAugs, setPurchasingAugs] = useState(false);\n\n  return purchasingAugs ? (\n    <AugmentationsPage faction={faction} routeToMainPage={() => setPurchasingAugs(false)} />\n  ) : (\n    <MainPage rerender={rerender} faction={faction} onAugmentations={() => setPurchasingAugs(true)} />\n  );\n}\n","/**\n * Root React Component for displaying a faction's \"Purchase Augmentations\" page\n */\nimport React, { useState } from \"react\";\n\nimport { PurchaseableAugmentation } from \"./PurchaseableAugmentation\";\n\nimport { Augmentations } from \"../../Augmentation/Augmentations\";\nimport { AugmentationNames } from \"../../Augmentation/data/AugmentationNames\";\nimport { Faction } from \"../../Faction/Faction\";\nimport { PurchaseAugmentationsOrderSetting } from \"../../Settings/SettingEnums\";\nimport { Settings } from \"../../Settings/Settings\";\nimport { hasAugmentationPrereqs } from \"../FactionHelpers\";\n\nimport { use } from \"../../ui/Context\";\n\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport TableBody from \"@mui/material/TableBody\";\nimport Table from \"@mui/material/Table\";\n\ntype IProps = {\n  faction: Faction;\n  routeToMainPage: () => void;\n};\n\nexport function AugmentationsPage(props: IProps): React.ReactElement {\n  const player = use.Player();\n  // Flag for whether the player has a gang with this faction\n  const isPlayersGang = player.inGang() && player.getGangName() === props.faction.name;\n\n  const setRerender = useState(false)[1];\n\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  function getAugs(): string[] {\n    if (isPlayersGang) {\n      const augs: string[] = [];\n      for (const augName in Augmentations) {\n        const aug = Augmentations[augName];\n        if (!aug.isSpecial) {\n          augs.push(augName);\n        }\n      }\n\n      return augs;\n    } else {\n      return props.faction.augmentations.slice();\n    }\n  }\n\n  function getAugsSorted(): string[] {\n    switch (Settings.PurchaseAugmentationsOrder) {\n      case PurchaseAugmentationsOrderSetting.Cost: {\n        return getAugsSortedByCost();\n      }\n      case PurchaseAugmentationsOrderSetting.Reputation: {\n        return getAugsSortedByReputation();\n      }\n      case PurchaseAugmentationsOrderSetting.Purchasable: {\n        return getAugsSortedByPurchasable();\n      }\n      default:\n        return getAugsSortedByDefault();\n    }\n  }\n\n  function getAugsSortedByCost(): string[] {\n    const augs = getAugs();\n    augs.sort((augName1, augName2) => {\n      const aug1 = Augmentations[augName1],\n        aug2 = Augmentations[augName2];\n      if (aug1 == null || aug2 == null) {\n        throw new Error(\"Invalid Augmentation Names\");\n      }\n\n      return aug1.baseCost - aug2.baseCost;\n    });\n\n    return augs;\n  }\n\n  function getAugsSortedByPurchasable(): string[] {\n    const augs = getAugs();\n    function canBuy(augName: string): boolean {\n      const aug = Augmentations[augName];\n      const repCost = aug.baseRepRequirement * props.faction.getInfo().augmentationRepRequirementMult;\n      const hasReq = props.faction.playerReputation >= repCost;\n      const hasRep = hasAugmentationPrereqs(aug);\n      const hasCost =\n        aug.baseCost !== 0 && player.money.gt(aug.baseCost * props.faction.getInfo().augmentationPriceMult);\n      return hasCost && hasReq && hasRep;\n    }\n    const buy = augs.filter(canBuy).sort((augName1, augName2) => {\n      const aug1 = Augmentations[augName1],\n        aug2 = Augmentations[augName2];\n      if (aug1 == null || aug2 == null) {\n        throw new Error(\"Invalid Augmentation Names\");\n      }\n\n      return aug1.baseCost - aug2.baseCost;\n    });\n    const cantBuy = augs\n      .filter((aug) => !canBuy(aug))\n      .sort((augName1, augName2) => {\n        const aug1 = Augmentations[augName1],\n          aug2 = Augmentations[augName2];\n        if (aug1 == null || aug2 == null) {\n          throw new Error(\"Invalid Augmentation Names\");\n        }\n        return aug1.baseRepRequirement - aug2.baseRepRequirement;\n      });\n\n    return buy.concat(cantBuy);\n  }\n\n  function getAugsSortedByReputation(): string[] {\n    const augs = getAugs();\n    augs.sort((augName1, augName2) => {\n      const aug1 = Augmentations[augName1],\n        aug2 = Augmentations[augName2];\n      if (aug1 == null || aug2 == null) {\n        throw new Error(\"Invalid Augmentation Names\");\n      }\n      return aug1.baseRepRequirement - aug2.baseRepRequirement;\n    });\n\n    return augs;\n  }\n\n  function getAugsSortedByDefault(): string[] {\n    return getAugs();\n  }\n\n  function switchSortOrder(newOrder: PurchaseAugmentationsOrderSetting): void {\n    Settings.PurchaseAugmentationsOrder = newOrder;\n    rerender();\n  }\n\n  const augs = getAugsSorted();\n  const purchasable = augs.filter(\n    (aug: string) =>\n      aug === AugmentationNames.NeuroFluxGovernor ||\n      (!player.augmentations.some((a) => a.name === aug) && !player.queuedAugmentations.some((a) => a.name === aug)),\n  );\n\n  const purchaseableAugmentation = (aug: string, owned = false): React.ReactNode => {\n    return (\n      <PurchaseableAugmentation\n        augName={aug}\n        faction={props.faction}\n        key={aug}\n        p={player}\n        rerender={rerender}\n        owned={owned}\n      />\n    );\n  };\n\n  const augListElems = purchasable.map((aug) => purchaseableAugmentation(aug));\n\n  let ownedElem = <></>;\n  const owned = augs.filter((aug: string) => !purchasable.includes(aug));\n  if (owned.length !== 0) {\n    ownedElem = (\n      <>\n        <br />\n        <Typography variant=\"h4\">Purchased Augmentations</Typography>\n        <Typography>This factions also offers these augmentations but you already own them.</Typography>\n        {owned.map((aug) => purchaseableAugmentation(aug, true))}\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Button onClick={props.routeToMainPage}>Back</Button>\n      <Typography variant=\"h4\">Faction Augmentations</Typography>\n      <Typography>\n        These are all of the Augmentations that are available to purchase from {props.faction.name}. Augmentations are\n        powerful upgrades that will enhance your abilities.\n      </Typography>\n      <Button onClick={() => switchSortOrder(PurchaseAugmentationsOrderSetting.Cost)}>Sort by Cost</Button>\n      <Button onClick={() => switchSortOrder(PurchaseAugmentationsOrderSetting.Reputation)}>Sort by Reputation</Button>\n      <Button onClick={() => switchSortOrder(PurchaseAugmentationsOrderSetting.Default)}>Sort by Default Order</Button>\n      <Button onClick={() => switchSortOrder(PurchaseAugmentationsOrderSetting.Purchasable)}>\n        Sort by Purchasable\n      </Button>\n      <br />\n\n      <Table size=\"small\" padding=\"none\">\n        <TableBody>{augListElems}</TableBody>\n      </Table>\n\n      <Table size=\"small\" padding=\"none\">\n        <TableBody>{ownedElem}</TableBody>\n      </Table>\n    </>\n  );\n}\n","/**\n * React component for displaying a single augmentation for purchase through\n * the faction UI\n */\nimport React, { useState } from \"react\";\n\nimport { getNextNeurofluxLevel, hasAugmentationPrereqs, purchaseAugmentation } from \"../FactionHelpers\";\nimport { PurchaseAugmentationModal } from \"./PurchaseAugmentationModal\";\n\nimport { Augmentations } from \"../../Augmentation/Augmentations\";\nimport { AugmentationNames } from \"../../Augmentation/data/AugmentationNames\";\nimport { Faction } from \"../../Faction/Faction\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { Settings } from \"../../Settings/Settings\";\nimport { Money } from \"../../ui/React/Money\";\nimport { Reputation } from \"../../ui/React/Reputation\";\n\nimport { Augmentation as AugFormat } from \"../../ui/React/Augmentation\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Box from \"@mui/material/Box\";\nimport { TableCell } from \"../../ui/React/Table\";\nimport TableRow from \"@mui/material/TableRow\";\n\ninterface IReqProps {\n  augName: string;\n  p: IPlayer;\n  hasReq: boolean;\n  rep: number;\n  hasRep: boolean;\n  cost: number;\n  hasCost: boolean;\n}\n\nfunction Requirements(props: IReqProps): React.ReactElement {\n  const aug = Augmentations[props.augName];\n  if (!props.hasReq) {\n    return (\n      <TableCell key={1} colSpan={2}>\n        <Typography color=\"error\">\n          Requires{\" \"}\n          {aug.prereqs.map((aug, i) => (\n            <AugFormat key={i} name={aug} />\n          ))}\n        </Typography>\n      </TableCell>\n    );\n  }\n\n  return (\n    <React.Fragment key=\"f\">\n      <TableCell key={1}>\n        <Typography>\n          <Money money={props.cost} player={props.p} />\n        </Typography>\n      </TableCell>\n      <TableCell key={2}>\n        <Typography color={props.hasRep ? \"primary\" : \"error\"}>\n          Requires <Reputation reputation={props.rep} /> faction reputation\n        </Typography>\n      </TableCell>\n    </React.Fragment>\n  );\n}\n\ninterface IProps {\n  augName: string;\n  faction: Faction;\n  p: IPlayer;\n  rerender: () => void;\n  owned?: boolean;\n}\n\nexport function PurchaseableAugmentation(props: IProps): React.ReactElement {\n  const [open, setOpen] = useState(false);\n  const aug = Augmentations[props.augName];\n  if (aug == null) throw new Error(`aug ${props.augName} does not exists`);\n\n  if (aug == null) {\n    console.error(\n      `Invalid Augmentation when trying to create PurchaseableAugmentation display element: ${props.augName}`,\n    );\n    return <></>;\n  }\n\n  const moneyCost = aug.baseCost * props.faction.getInfo().augmentationPriceMult;\n  const repCost = aug.baseRepRequirement * props.faction.getInfo().augmentationRepRequirementMult;\n  const hasReq = hasAugmentationPrereqs(aug);\n  const hasRep = props.faction.playerReputation >= repCost;\n  const hasCost = aug.baseCost === 0 || props.p.money.gt(aug.baseCost * props.faction.getInfo().augmentationPriceMult);\n\n  // Determine UI properties\n  const color: \"error\" | \"primary\" = !hasReq || !hasRep || !hasCost ? \"error\" : \"primary\";\n\n  // Determine button txt\n  let btnTxt = aug.name;\n  if (aug.name === AugmentationNames.NeuroFluxGovernor) {\n    btnTxt += ` - Level ${getNextNeurofluxLevel()}`;\n  }\n\n  let tooltip = <></>;\n  if (typeof aug.info === \"string\") {\n    tooltip = (\n      <>\n        <span>{aug.info}</span>\n        <br />\n        <br />\n        {aug.stats}\n      </>\n    );\n  } else\n    tooltip = (\n      <>\n        {aug.info}\n        <br />\n        <br />\n        {aug.stats}\n      </>\n    );\n\n  function handleClick(): void {\n    if (color === \"error\") return;\n    if (!Settings.SuppressBuyAugmentationConfirmation) {\n      setOpen(true);\n    } else {\n      purchaseAugmentation(aug, props.faction);\n      props.rerender();\n    }\n  }\n\n  return (\n    <TableRow>\n      {!props.owned && (\n        <TableCell key={0}>\n          <Button onClick={handleClick} color={color}>\n            Buy\n          </Button>\n          <PurchaseAugmentationModal\n            open={open}\n            onClose={() => setOpen(false)}\n            aug={aug}\n            faction={props.faction}\n            rerender={props.rerender}\n          />\n        </TableCell>\n      )}\n      <TableCell key={1}>\n        <Box display=\"flex\">\n          <Tooltip title={<Typography>{tooltip}</Typography>} placement=\"top\">\n            <Typography>{btnTxt}</Typography>\n          </Tooltip>\n        </Box>\n      </TableCell>\n      {!props.owned && (\n        <Requirements\n          key={2}\n          augName={props.augName}\n          p={props.p}\n          cost={moneyCost}\n          rep={repCost}\n          hasReq={hasReq}\n          hasRep={hasRep}\n          hasCost={hasCost}\n        />\n      )}\n    </TableRow>\n  );\n}\n","import React from \"react\";\n\nimport { Augmentation } from \"../../Augmentation/Augmentation\";\nimport { Faction } from \"../Faction\";\nimport { purchaseAugmentation } from \"../FactionHelpers\";\nimport { isRepeatableAug } from \"../../Augmentation/AugmentationHelpers\";\nimport { Money } from \"../../ui/React/Money\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { use } from \"../../ui/Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  faction: Faction;\n  aug: Augmentation;\n  rerender: () => void;\n}\n\nexport function PurchaseAugmentationModal(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const factionInfo = props.faction.getInfo();\n\n  function buy(): void {\n    if (!isRepeatableAug(props.aug) && player.hasAugmentation(props.aug)) {\n      return;\n    }\n\n    purchaseAugmentation(props.aug, props.faction);\n    props.rerender();\n    props.onClose();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography variant=\"h4\">{props.aug.name}</Typography>\n      <Typography>\n        {props.aug.info}\n        <br />\n        <br />\n        {props.aug.stats}\n        <br />\n        <br />\n        Would you like to purchase the {props.aug.name} Augmentation for&nbsp;\n        <Money money={props.aug.baseCost * factionInfo.augmentationPriceMult} />?\n        <br />\n        <br />\n      </Typography>\n      <Button autoFocus onClick={buy}>\n        Purchase\n      </Button>\n    </Modal>\n  );\n}\n","import * as React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    aug: {\n      color: theme.colors.combat,\n    },\n  }),\n);\n\nexport function Augmentation({ name }: { name: string }): JSX.Element {\n  const classes = useStyles();\n  return <span className={classes.aug}>{name}</span>;\n}\n","/**\n * React component for a donate option on the Faction UI\n */\nimport React, { useState } from \"react\";\n\nimport { CONSTANTS } from \"../../Constants\";\nimport { Faction } from \"../../Faction/Faction\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { repFromDonation } from \"../formulas/donation\";\nimport { Favor } from \"../../ui/React/Favor\";\n\nimport { Money } from \"../../ui/React/Money\";\nimport { Reputation } from \"../../ui/React/Reputation\";\n\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\n\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport { MathComponent } from \"mathjax-react\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\n\ntype IProps = {\n  faction: Faction;\n  disabled: boolean;\n  favorToDonate: number;\n  p: IPlayer;\n  rerender: () => void;\n};\n\nexport function DonateOption(props: IProps): React.ReactElement {\n  const [donateAmt, setDonateAmt] = useState<number | null>(null);\n  const digits = (CONSTANTS.DonateMoneyToRepDivisor + \"\").length - 1;\n\n  function canDonate(): boolean {\n    if (donateAmt === null) return false;\n    if (isNaN(donateAmt) || donateAmt <= 0) return false;\n    if (props.p.money.lt(donateAmt)) return false;\n    return true;\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    const amt = numeralWrapper.parseMoney(event.target.value);\n    if (event.target.value === \"\" || isNaN(amt)) setDonateAmt(null);\n    else setDonateAmt(amt);\n  }\n\n  function donate(): void {\n    const fac = props.faction;\n    const amt = donateAmt;\n    if (amt === null) return;\n    if (!canDonate()) return;\n    props.p.loseMoney(amt);\n    const repGain = repFromDonation(amt, props.p);\n    props.faction.playerReputation += repGain;\n    dialogBoxCreate(\n      <>\n        You just donated <Money money={amt} /> to {fac.name} to gain <Reputation reputation={repGain} /> reputation.\n      </>,\n    );\n    props.rerender();\n  }\n\n  function Status(): React.ReactElement {\n    if (donateAmt === null) return <></>;\n    if (!canDonate()) {\n      if (props.p.money.lt(donateAmt)) return <Typography>Insufficient funds</Typography>;\n      return <Typography>Invalid donate amount entered!</Typography>;\n    }\n    return (\n      <Typography>\n        This donation will result in <Reputation reputation={repFromDonation(donateAmt, props.p)} /> reputation gain\n      </Typography>\n    );\n  }\n\n  return (\n    <Paper sx={{ my: 1, p: 1, width: \"100%\" }}>\n      <Status />\n      {props.disabled ? (\n        <Typography>\n          Unlock donations at <Favor favor={props.favorToDonate} /> favor with {props.faction.name}\n        </Typography>\n      ) : (\n        <>\n          <TextField\n            onChange={onChange}\n            placeholder={\"Donation amount\"}\n            disabled={props.disabled}\n            InputProps={{\n              endAdornment: (\n                <Button onClick={donate} disabled={props.disabled || !canDonate()}>\n                  donate\n                </Button>\n              ),\n            }}\n          />\n          <Typography>\n            <MathComponent\n              tex={String.raw`reputation = \\frac{\\text{donation amount} \\times \\text{reputation multiplier}}{10^{${digits}}}`}\n            />\n          </Typography>\n        </>\n      )}\n    </Paper>\n  );\n}\n","/**\n * React component for general information about the faction. This includes the\n * factions \"motto\", reputation, favor, and gameplay instructions\n */\nimport React, { useState, useEffect } from \"react\";\n\nimport { Faction } from \"../../Faction/Faction\";\nimport { FactionInfo } from \"../../Faction/FactionInfo\";\n\nimport { Reputation } from \"../../ui/React/Reputation\";\nimport { Favor } from \"../../ui/React/Favor\";\nimport { MathComponent } from \"mathjax-react\";\n\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Box from \"@mui/material/Box\";\n\ntype IProps = {\n  faction: Faction;\n  factionInfo: FactionInfo;\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    noformat: {\n      whiteSpace: \"pre-wrap\",\n      lineHeight: \"1em\",\n    },\n  }),\n);\n\nexport function Info(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    const id = setInterval(rerender, 200);\n    return () => clearInterval(id);\n  }, []);\n\n  const classes = useStyles();\n\n  const favorGain = props.faction.getFavorGain()[0];\n  return (\n    <>\n      <Typography classes={{ root: classes.noformat }}>{props.factionInfo.infoText}</Typography>\n      <Typography>-------------------------</Typography>\n      <Box display=\"flex\">\n        <Tooltip\n          title={\n            <>\n              <Typography>\n                You will have <Favor favor={props.faction.favor + favorGain} /> faction favor after installing an\n                Augmentation.\n              </Typography>\n              <MathComponent tex={String.raw`\\large{r = \\text{total faction reputation}}`} />\n              <MathComponent\n                tex={String.raw`\\large{favor=\\left\\lfloor\\log_{1.02}\\left(\\frac{r+25000}{25500}\\right)\\right\\rfloor}`}\n              />\n            </>\n          }\n        >\n          <Typography>\n            Reputation: <Reputation reputation={props.faction.playerReputation} />\n          </Typography>\n        </Tooltip>\n      </Box>\n\n      <Typography>-------------------------</Typography>\n\n      <Box display=\"flex\">\n        <Tooltip\n          title={\n            <>\n              <Typography>\n                Faction favor increases the rate at which you earn reputation for this faction by 1% per favor. Faction\n                favor is gained whenever you install an Augmentation. The amount of favor you gain depends on the total\n                amount of reputation you earned with this faction. Across all resets.\n              </Typography>\n              <MathComponent tex={String.raw`\\large{r = reputation}`} />\n              <MathComponent tex={String.raw`\\large{\\Delta r = \\Delta r \\times \\frac{100+favor}{100}}`} />\n            </>\n          }\n        >\n          <Typography>\n            Faction Favor: <Favor favor={props.faction.favor} />\n          </Typography>\n        </Tooltip>\n      </Box>\n\n      <Typography>-------------------------</Typography>\n      <Typography>\n        Perform work/carry out assignments for your faction to help further its cause! By doing so you will earn\n        reputation for your faction. You will also gain reputation passively over time, although at a very slow rate.\n        Earning reputation will allow you to purchase Augmentations through this faction, which are powerful upgrades\n        that enhance your abilities.\n      </Typography>\n    </>\n  );\n}\n","/**\n * React Component for the popup used to create a new gang.\n */\nimport React from \"react\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport { use } from \"../../ui/Context\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  facName: string;\n}\n\nexport function CreateGangModal(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const router = use.Router();\n  const combatGangText =\n    \"This is a COMBAT gang. Members in this gang will have different tasks than HACKING gangs. \" +\n    \"Compared to hacking gangs, progression with combat gangs can be more difficult as territory management \" +\n    \"is more important. However, well-managed combat gangs can progress faster than hacking ones.\";\n\n  const hackingGangText =\n    \"This is a HACKING gang. Members in this gang will have different tasks than COMBAT gangs. \" +\n    \"Compared to combat gangs, progression with hacking gangs is more straightforward as territory warfare \" +\n    \"is not as important.\";\n\n  function isHacking(): boolean {\n    return [\"NiteSec\", \"The Black Hand\"].includes(props.facName);\n  }\n\n  function createGang(): void {\n    player.startGang(props.facName, isHacking());\n    props.onClose();\n    router.toGang();\n  }\n\n  function onKeyUp(event: React.KeyboardEvent): void {\n    if (event.keyCode === 13) createGang();\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>\n        Would you like to create a new Gang with {props.facName}?\n        <br />\n        <br />\n        Note that this will prevent you from creating a Gang with any other Faction until this BitNode is destroyed. It\n        also resets your reputation with this faction.\n        <br />\n        <br />\n        {isHacking() ? hackingGangText : combatGangText}\n        <br />\n        <br />\n        Other than hacking vs combat, there are NO differences between the Factions you can create a Gang with, and each\n        of these Factions have all Augmentations available.\n      </Typography>\n      <Button onClick={createGang} onKeyUp={onKeyUp} autoFocus>\n        Create Gang\n      </Button>\n    </Modal>\n  );\n}\n","/**\n * Root React component for the popup that lets player purchase Duplicate\n * Sleeves and Sleeve-related upgrades from The Covenant\n */\nimport React, { useState } from \"react\";\n\nimport { CovenantSleeveMemoryUpgrade } from \"./CovenantSleeveMemoryUpgrade\";\n\nimport { Sleeve } from \"../Sleeve\";\nimport { BaseCostPerSleeve, MaxSleevesFromCovenant } from \"../SleeveCovenantPurchases\";\n\nimport { Money } from \"../../../ui/React/Money\";\nimport { Modal } from \"../../../ui/React/Modal\";\nimport { use } from \"../../../ui/Context\";\n\nimport { dialogBoxCreate } from \"../../../ui/React/DialogBox\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport function CovenantPurchasesRoot(props: IProps): React.ReactElement {\n  const player = use.Player();\n  const [update, setUpdate] = useState(0);\n\n  /**\n   * Get the cost to purchase a new Duplicate Sleeve\n   */\n  function purchaseCost(): number {\n    return (player.sleevesFromCovenant + 1) * BaseCostPerSleeve;\n  }\n\n  /**\n   * Force a rerender by just changing an arbitrary state value\n   */\n  function rerender(): void {\n    setUpdate(update + 1);\n  }\n\n  // Purchasing a new Duplicate Sleeve\n  let purchaseDisabled = false;\n  if (!player.canAfford(purchaseCost())) {\n    purchaseDisabled = true;\n  }\n  if (player.sleevesFromCovenant >= MaxSleevesFromCovenant) {\n    purchaseDisabled = true;\n  }\n\n  function purchaseOnClick(): void {\n    if (player.sleevesFromCovenant >= MaxSleevesFromCovenant) return;\n\n    if (player.canAfford(purchaseCost())) {\n      player.loseMoney(purchaseCost());\n      player.sleevesFromCovenant += 1;\n      player.sleeves.push(new Sleeve(player));\n      rerender();\n    } else {\n      dialogBoxCreate(`You cannot afford to purchase a Duplicate Sleeve`);\n    }\n  }\n\n  // Purchasing Upgrades for Sleeves\n  const upgradePanels = [];\n  for (let i = 0; i < player.sleeves.length; ++i) {\n    const sleeve = player.sleeves[i];\n    upgradePanels.push(<CovenantSleeveMemoryUpgrade index={i} p={player} rerender={rerender} sleeve={sleeve} />);\n  }\n\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <>\n        {player.sleevesFromCovenant < MaxSleevesFromCovenant && (\n          <>\n            <Typography>\n              Purchase an additional Sleeves. These Duplicate Sleeves are permanent (they persist through BitNodes). You\n              can purchase a total of {MaxSleevesFromCovenant} from The Covenant.\n            </Typography>\n            <Button disabled={purchaseDisabled} onClick={purchaseOnClick}>\n              Purchase -&nbsp;\n              <Money money={purchaseCost()} player={player} />\n            </Button>\n          </>\n        )}\n        <br />\n        <br />\n        <Typography>You can also purchase upgrades for your Sleeves. These upgrades are also permanent.</Typography>\n        {upgradePanels}\n      </>\n    </Modal>\n  );\n}\n","/**\n * React component for a panel that lets you purchase upgrades for a Duplicate\n * Sleeve's Memory (through The Covenant)\n */\nimport React, { useState } from \"react\";\n\nimport { Sleeve } from \"../Sleeve\";\nimport { IPlayer } from \"../../IPlayer\";\n\nimport { numeralWrapper } from \"../../../ui/numeralFormat\";\nimport { Money } from \"../../../ui/React/Money\";\n\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\n\ninterface IProps {\n  index: number;\n  p: IPlayer;\n  rerender: () => void;\n  sleeve: Sleeve;\n}\n\nexport function CovenantSleeveMemoryUpgrade(props: IProps): React.ReactElement {\n  const [amt, setAmt] = useState(1);\n\n  function changePurchaseAmount(e: React.ChangeEvent<HTMLInputElement>): void {\n    let n: number = parseInt(e.target.value);\n\n    if (isNaN(n)) n = 1;\n    const maxMemory = 100 - props.sleeve.memory;\n    if (n > maxMemory) n = maxMemory;\n\n    setAmt(n);\n  }\n\n  function getPurchaseCost(): number {\n    if (isNaN(amt)) {\n      return Infinity;\n    }\n\n    const maxMemory = 100 - props.sleeve.memory;\n    if (amt > maxMemory) {\n      return Infinity;\n    }\n\n    return props.sleeve.getMemoryUpgradeCost(amt);\n  }\n\n  function purchaseMemory(): void {\n    const cost = getPurchaseCost();\n    if (props.p.canAfford(cost)) {\n      props.sleeve.upgradeMemory(amt);\n      props.p.loseMoney(cost);\n      props.rerender();\n    }\n  }\n\n  // Purchase button props\n  const cost = getPurchaseCost();\n  const purchaseBtnDisabled = !props.p.canAfford(cost);\n  let purchaseBtnContent = <></>;\n  if (isNaN(amt)) {\n    purchaseBtnContent = <>Invalid value</>;\n  } else {\n    purchaseBtnContent = (\n      <>\n        Purchase {amt} memory&nbsp;-&nbsp;\n        <Money money={cost} player={props.p} />\n      </>\n    );\n  }\n\n  return (\n    <Paper sx={{ my: 1, p: 1 }}>\n      <Typography variant=\"h6\" color=\"primary\">\n        Upgrade Memory of Sleeve {props.index}\n      </Typography>\n      <Typography>\n        Purchase a memory upgrade for your sleeve. Note that a sleeve's max memory is 100 (current:{\" \"}\n        {numeralWrapper.formatSleeveMemory(props.sleeve.memory)})\n      </Typography>\n\n      <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n        <Typography>Amount of memory to purchase (must be an integer):&nbsp;</Typography>\n        <TextField onChange={changePurchaseAmount} type={\"number\"} value={amt} />\n      </Box>\n      <br />\n      <Button disabled={purchaseBtnDisabled} onClick={purchaseMemory}>\n        {purchaseBtnContent}\n      </Button>\n    </Paper>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { numeralWrapper } from \"../ui/numeralFormat\";\nimport { convertTimeMsToTimeElapsedString } from \"../utils/StringHelperFunctions\";\nimport { BitNodeMultipliers } from \"../BitNode/BitNodeMultipliers\";\nimport { SourceFileFlags } from \"../SourceFile/SourceFileFlags\";\nimport { getPurchaseServerLimit } from \"../Server/ServerPurchases\";\nimport { HacknetServerConstants } from \"../Hacknet/data/Constants\";\nimport { StatsTable } from \"./React/StatsTable\";\nimport { Money } from \"./React/Money\";\nimport { use } from \"./Context\";\nimport { MoneySourceTracker } from \"../utils/MoneySourceTracker\";\nimport { BitNodes } from \"../BitNode/BitNode\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { Modal } from \"./React/Modal\";\n\nimport TableBody from \"@mui/material/TableBody\";\nimport { Table, TableCell } from \"./React/Table\";\nimport TableRow from \"@mui/material/TableRow\";\n\nfunction LastEmployer(): React.ReactElement {\n  const player = use.Player();\n  if (player.companyName) {\n    return <Typography>Employer at which you last worked: {player.companyName}</Typography>;\n  }\n  return <></>;\n}\n\nfunction LastJob(): React.ReactElement {\n  const player = use.Player();\n  if (player.companyName !== \"\") {\n    return <Typography>Job you last worked: {player.jobs[player.companyName]}</Typography>;\n  }\n  return <></>;\n}\n\nfunction Employers(): React.ReactElement {\n  const player = use.Player();\n  if (player.jobs && Object.keys(player.jobs).length !== 0)\n    return (\n      <>\n        <Typography>All Employers:</Typography>\n\n        <ul>\n          {Object.keys(player.jobs).map((j) => (\n            <Typography key={j}> * {j}</Typography>\n          ))}\n        </ul>\n      </>\n    );\n  return <></>;\n}\n\nfunction Hacknet(): React.ReactElement {\n  const player = use.Player();\n  // Can't import HacknetHelpers for some reason.\n  if (!(player.bitNodeN === 9 || SourceFileFlags[9] > 0)) {\n    return (\n      <>\n        <Typography>{`Hacknet Nodes owned: ${player.hacknetNodes.length}`}</Typography>\n        <br />\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Typography>{`Hacknet Servers owned: ${player.hacknetNodes.length} / ${HacknetServerConstants.MaxServers}`}</Typography>\n        <br />\n      </>\n    );\n  }\n}\n\nfunction Intelligence(): React.ReactElement {\n  const player = use.Player();\n  if (player.intelligence > 0 && (player.bitNodeN === 5 || SourceFileFlags[5] > 0)) {\n    return (\n      <TableRow>\n        <TableCell>\n          <Typography>Intelligence:&nbsp;</Typography>\n        </TableCell>\n        <TableCell align=\"right\">\n          <Typography>{numeralWrapper.formatSkill(player.intelligence)}&nbsp;</Typography>\n        </TableCell>\n      </TableRow>\n    );\n  }\n  return <></>;\n}\n\nfunction MultiplierTable(props: any): React.ReactElement {\n  function bn5Stat(r: any): JSX.Element {\n    if (SourceFileFlags[5] > 0 && r.length > 2 && r[1] != r[2]) {\n      return (\n        <TableCell key=\"2\" align=\"right\">\n          <Typography noWrap>({numeralWrapper.formatPercentage(r[2])})</Typography>\n        </TableCell>\n      );\n    }\n    return <></>;\n  }\n  return (\n    <>\n      <Table size=\"small\" padding=\"none\">\n        <TableBody>\n          {props.rows.map((r: any) => (\n            <TableRow key={r[0]}>\n              <TableCell key=\"0\">\n                <Typography noWrap>{`${r[0]} multiplier:`}&nbsp;</Typography>\n              </TableCell>\n              <TableCell key=\"1\" align=\"right\">\n                <Typography noWrap>{numeralWrapper.formatPercentage(r[1])}</Typography>\n              </TableCell>\n              {bn5Stat(r)}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n\nfunction BladeburnerMults(): React.ReactElement {\n  const player = use.Player();\n  if (!player.canAccessBladeburner()) return <></>;\n  return (\n    <MultiplierTable\n      rows={[\n        [\"Bladeburner Success Chance\", player.bladeburner_max_stamina_mult],\n        [\"Bladeburner Max Stamina\", player.bladeburner_stamina_gain_mult],\n        [\"Bladeburner Stamina Gain\", player.bladeburner_analysis_mult],\n        [\"Bladeburner Field Analysis\", player.bladeburner_success_chance_mult],\n      ]}\n    />\n  );\n}\n\nfunction CurrentBitNode(): React.ReactElement {\n  const player = use.Player();\n  if (player.sourceFiles.length > 0) {\n    const index = \"BitNode\" + player.bitNodeN;\n    return (\n      <>\n        <Typography variant=\"h4\">\n          BitNode {player.bitNodeN}: {BitNodes[index].name}\n        </Typography>\n        <Typography sx={{ mx: 2 }} style={{ whiteSpace: \"pre-wrap\", overflowWrap: \"break-word\" }}>\n          {BitNodes[index].info}\n        </Typography>\n      </>\n    );\n  }\n\n  return <></>;\n}\n\ninterface IMoneyModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nfunction MoneyModal({ open, onClose }: IMoneyModalProps): React.ReactElement {\n  const player = use.Player();\n  function convertMoneySourceTrackerToString(src: MoneySourceTracker): React.ReactElement {\n    const parts: any[][] = [[`Total:`, <Money money={src.total} />]];\n    if (src.bladeburner) {\n      parts.push([`Bladeburner:`, <Money money={src.bladeburner} />]);\n    }\n    if (src.codingcontract) {\n      parts.push([`Coding Contracts:`, <Money money={src.codingcontract} />]);\n    }\n    if (src.work) {\n      parts.push([`Company Work:`, <Money money={src.work} />]);\n    }\n    if (src.class) {\n      parts.push([`Class:`, <Money money={src.class} />]);\n    }\n    if (src.corporation) {\n      parts.push([`Corporation:`, <Money money={src.corporation} />]);\n    }\n    if (src.crime) {\n      parts.push([`Crimes:`, <Money money={src.crime} />]);\n    }\n    if (src.gang) {\n      parts.push([`Gang:`, <Money money={src.gang} />]);\n    }\n    if (src.hacking) {\n      parts.push([`Hacking:`, <Money money={src.hacking} />]);\n    }\n    if (src.hacknetnode) {\n      parts.push([`Hacknet Nodes:`, <Money money={src.hacknetnode} />]);\n    }\n    if (src.hospitalization) {\n      parts.push([`Hospitalization:`, <Money money={src.hospitalization} />]);\n    }\n    if (src.infiltration) {\n      parts.push([`Infiltration:`, <Money money={src.infiltration} />]);\n    }\n    if (src.stock) {\n      parts.push([`Stock Market:`, <Money money={src.stock} />]);\n    }\n    if (src.casino) {\n      parts.push([`Casino:`, <Money money={src.casino} />]);\n    }\n    if (src.sleeves) {\n      parts.push([`Sleeves:`, <Money money={src.sleeves} />]);\n    }\n\n    return <StatsTable rows={parts} wide />;\n  }\n\n  let content = (\n    <>\n      <Typography variant=\"h6\" color=\"primary\">\n        Money earned since you last installed Augmentations\n      </Typography>\n      <br />\n      {convertMoneySourceTrackerToString(player.moneySourceA)}\n    </>\n  );\n  if (player.sourceFiles.length !== 0) {\n    content = (\n      <>\n        {content}\n        <br />\n        <br />\n        <Typography variant=\"h6\" color=\"primary\">\n          Money earned in this BitNode\n        </Typography>\n        <br />\n        {convertMoneySourceTrackerToString(player.moneySourceB)}\n      </>\n    );\n  }\n\n  return (\n    <Modal open={open} onClose={onClose}>\n      {content}\n    </Modal>\n  );\n}\n\nexport function CharacterStats(): React.ReactElement {\n  const player = use.Player();\n  const [moneyOpen, setMoneyOpen] = useState(false);\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    const id = setInterval(rerender, 200);\n    return () => clearInterval(id);\n  }, []);\n\n  const timeRows = [\n    [\"Time played since last Augmentation:\", convertTimeMsToTimeElapsedString(player.playtimeSinceLastAug)],\n  ];\n  if (player.sourceFiles.length > 0) {\n    timeRows.push([\n      \"Time played since last Bitnode destroyed:\",\n      convertTimeMsToTimeElapsedString(player.playtimeSinceLastBitnode),\n    ]);\n  }\n  timeRows.push([\"Total Time played:\", convertTimeMsToTimeElapsedString(player.totalPlaytime)]);\n\n  return (\n    <>\n      <Typography variant=\"h4\">General</Typography>\n      <Box sx={{ mx: 2 }}>\n        <Typography>Current City: {player.city}</Typography>\n        <LastEmployer />\n        <LastJob />\n        <Employers />\n\n        <Typography>\n          Money: <Money money={player.money.toNumber()} />\n          <IconButton onClick={() => setMoneyOpen(true)}>\n            <MoreHorizIcon color=\"info\" />\n          </IconButton>\n        </Typography>\n      </Box>\n      <br />\n      <Typography variant=\"h4\">Stats</Typography>\n      <Box sx={{ mx: 2 }}>\n        <Table size=\"small\" padding=\"none\">\n          <TableBody>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Hacking:&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography noWrap>{numeralWrapper.formatSkill(player.hacking_skill)}&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography noWrap>({numeralWrapper.formatExp(player.hacking_exp)} exp)</Typography>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Strength:&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography noWrap>{numeralWrapper.formatSkill(player.strength)}&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography noWrap>({numeralWrapper.formatExp(player.strength_exp)} exp)</Typography>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Defense:&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography noWrap>{numeralWrapper.formatSkill(player.defense)}&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography noWrap>({numeralWrapper.formatExp(player.defense_exp)} exp)</Typography>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Dexterity:&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography noWrap>{numeralWrapper.formatSkill(player.dexterity)}&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography noWrap>({numeralWrapper.formatExp(player.dexterity_exp)} exp)</Typography>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Agility:&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography noWrap>{numeralWrapper.formatSkill(player.agility)}&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography noWrap>({numeralWrapper.formatExp(player.agility_exp)} exp)</Typography>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Charisma:&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography noWrap>{numeralWrapper.formatSkill(player.charisma)}&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography noWrap>({numeralWrapper.formatExp(player.charisma_exp)} exp)</Typography>\n              </TableCell>\n            </TableRow>\n            <Intelligence />\n          </TableBody>\n        </Table>\n        <br />\n      </Box>\n      <br />\n      <Typography variant=\"h4\">Multipliers</Typography>\n      <Box sx={{ mx: 2 }}>\n        <MultiplierTable\n          rows={[\n            [\"Hacking Chance\", player.hacking_chance_mult],\n            [\"Hacking Speed\", player.hacking_speed_mult],\n            [\n              \"Hacking Money\",\n              player.hacking_money_mult,\n              player.hacking_money_mult * BitNodeMultipliers.ScriptHackMoney,\n            ],\n            [\n              \"Hacking Growth\",\n              player.hacking_grow_mult,\n              player.hacking_grow_mult * BitNodeMultipliers.ServerGrowthRate,\n            ],\n          ]}\n        />\n        <br />\n        <MultiplierTable\n          rows={[\n            [\"Hacking Level\", player.hacking_mult, player.hacking_mult * BitNodeMultipliers.HackingLevelMultiplier],\n            [\"Hacking Experience\", player.hacking_exp_mult, player.hacking_exp_mult * BitNodeMultipliers.HackExpGain],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\"Strength Level\", player.strength_mult, player.strength_mult * BitNodeMultipliers.StrengthLevelMultiplier],\n            [\"Strength Experience\", player.strength_exp_mult],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\"Defense Level\", player.defense_mult, player.defense_mult * BitNodeMultipliers.DefenseLevelMultiplier],\n            [\"Defense Experience\", player.defense_exp_mult],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\n              \"Dexterity Level\",\n              player.dexterity_mult,\n              player.dexterity_mult * BitNodeMultipliers.DexterityLevelMultiplier,\n            ],\n            [\"Dexterity Experience\", player.dexterity_exp_mult],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\"Agility Level\", player.agility_mult, player.agility_mult * BitNodeMultipliers.AgilityLevelMultiplier],\n            [\"Agility Experience\", player.agility_exp_mult],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\"Charisma Level\", player.charisma_mult, player.charisma_mult * BitNodeMultipliers.CharismaLevelMultiplier],\n            [\"Charisma Experience\", player.charisma_exp_mult],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\n              \"Hacknet Node production\",\n              player.hacknet_node_money_mult,\n              player.hacknet_node_money_mult * BitNodeMultipliers.HacknetNodeMoney,\n            ],\n            [\"Hacknet Node purchase cost\", player.hacknet_node_purchase_cost_mult],\n            [\"Hacknet Node RAM upgrade cost\", player.hacknet_node_ram_cost_mult],\n            [\"Hacknet Node Core purchase cost\", player.hacknet_node_core_cost_mult],\n            [\"Hacknet Node level upgrade cost\", player.hacknet_node_level_cost_mult],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\"Company reputation gain\", player.company_rep_mult],\n            [\n              \"Faction reputation gain\",\n              player.faction_rep_mult,\n              player.faction_rep_mult * BitNodeMultipliers.FactionWorkRepGain,\n            ],\n            [\"Salary\", player.work_money_mult, player.work_money_mult * BitNodeMultipliers.CompanyWorkMoney],\n          ]}\n        />\n        <br />\n\n        <MultiplierTable\n          rows={[\n            [\"Crime success\", player.crime_success_mult],\n            [\"Crime money\", player.crime_money_mult, player.crime_money_mult * BitNodeMultipliers.CrimeMoney],\n          ]}\n        />\n        <br />\n        <BladeburnerMults />\n      </Box>\n      <br />\n\n      <Typography variant=\"h4\">Misc</Typography>\n      <Box sx={{ mx: 2 }}>\n        <Typography>{`Servers owned: ${player.purchasedServers.length} / ${getPurchaseServerLimit()}`}</Typography>\n        <Hacknet />\n        <Typography>{`Augmentations installed: ${player.augmentations.length}`}</Typography>\n        <StatsTable rows={timeRows} />\n      </Box>\n      <br />\n      <CurrentBitNode />\n      <MoneyModal open={moneyOpen} onClose={() => setMoneyOpen(false)} />\n    </>\n  );\n}\n","/**\n * Root React component for the Stock Market UI\n */\nimport React, { useState, useEffect } from \"react\";\n\nimport { InfoAndPurchases } from \"./InfoAndPurchases\";\nimport { StockTickers } from \"./StockTickers\";\n\nimport { IStockMarket } from \"../IStockMarket\";\nimport { Stock } from \"../Stock\";\nimport { OrderTypes } from \"../data/OrderTypes\";\nimport { PositionTypes } from \"../data/PositionTypes\";\n\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { EventEmitter } from \"../../utils/EventEmitter\";\n\ntype txFn = (stock: Stock, shares: number) => boolean;\nexport type placeOrderFn = (\n  stock: Stock,\n  shares: number,\n  price: number,\n  ordType: OrderTypes,\n  posType: PositionTypes,\n) => boolean;\n\ntype IProps = {\n  buyStockLong: txFn;\n  buyStockShort: txFn;\n  cancelOrder: (params: any) => void;\n  eventEmitterForReset?: EventEmitter<[]>;\n  initStockMarket: () => void;\n  p: IPlayer;\n  placeOrder: placeOrderFn;\n  sellStockLong: txFn;\n  sellStockShort: txFn;\n  stockMarket: IStockMarket;\n};\n\nexport function StockMarketRoot(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  useEffect(() => {\n    const id = setInterval(rerender, 200);\n    return () => clearInterval(id);\n  }, []);\n  return (\n    <>\n      <InfoAndPurchases initStockMarket={props.initStockMarket} p={props.p} rerender={rerender} />\n      {props.p.hasWseAccount && (\n        <StockTickers\n          buyStockLong={props.buyStockLong}\n          buyStockShort={props.buyStockShort}\n          cancelOrder={props.cancelOrder}\n          eventEmitterForReset={props.eventEmitterForReset}\n          p={props.p}\n          placeOrder={props.placeOrder}\n          sellStockLong={props.sellStockLong}\n          sellStockShort={props.sellStockShort}\n          stockMarket={props.stockMarket}\n        />\n      )}\n    </>\n  );\n}\n","/**\n * React component for the Stock Market UI. This component displays\n * general information about the stock market, buttons for the various purchases,\n * and a link to the documentation (Investopedia)\n */\nimport React, { useState } from \"react\";\n\nimport { getStockMarket4SDataCost, getStockMarket4STixApiCost } from \"../StockMarketCosts\";\n\nimport { CONSTANTS } from \"../../Constants\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { Money } from \"../../ui/React/Money\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { StaticModal } from \"../../ui/React/StaticModal\";\n\ntype IProps = {\n  initStockMarket: () => void;\n  p: IPlayer;\n  rerender: () => void;\n};\n\nfunction Purchase4SMarketDataTixApiAccessButton(props: IProps): React.ReactElement {\n  function purchase4SMarketDataTixApiAccess(): void {\n    if (props.p.has4SDataTixApi) {\n      return;\n    }\n    if (!props.p.canAfford(getStockMarket4STixApiCost())) {\n      return;\n    }\n    props.p.has4SDataTixApi = true;\n    props.p.loseMoney(getStockMarket4STixApiCost());\n    props.rerender();\n  }\n\n  if (props.p.has4SDataTixApi) {\n    return (\n      <Typography>\n        Market Data TIX API Access <CheckIcon />\n      </Typography>\n    );\n  } else {\n    const cost = getStockMarket4STixApiCost();\n    return (\n      <Tooltip\n        title={\n          !props.p.hasTixApiAccess ? (\n            <Typography>Requires TIX API Access</Typography>\n          ) : (\n            <Typography>Let you access 4S Market Data through Netscript</Typography>\n          )\n        }\n      >\n        <span>\n          <Button\n            disabled={!props.p.hasTixApiAccess || !props.p.canAfford(cost)}\n            onClick={purchase4SMarketDataTixApiAccess}\n          >\n            Buy 4S Market Data TIX API Access -&nbsp;\n            <Money money={cost} player={props.p} />\n          </Button>\n        </span>\n      </Tooltip>\n    );\n  }\n}\n\nfunction PurchaseWseAccountButton(props: IProps): React.ReactElement {\n  if (props.p.hasWseAccount) {\n    return (\n      <Typography>\n        WSE Account <CheckIcon />\n      </Typography>\n    );\n  }\n  function purchaseWseAccount(): void {\n    if (props.p.hasWseAccount) {\n      return;\n    }\n    if (!props.p.canAfford(CONSTANTS.WSEAccountCost)) {\n      return;\n    }\n    props.p.hasWseAccount = true;\n    props.initStockMarket();\n    props.p.loseMoney(CONSTANTS.WSEAccountCost);\n    props.rerender();\n  }\n\n  const cost = CONSTANTS.WSEAccountCost;\n  return (\n    <>\n      <Typography>To begin trading, you must first purchase an account:</Typography>\n      <Button disabled={!props.p.canAfford(cost)} onClick={purchaseWseAccount}>\n        Buy WSE Account -&nbsp;\n        <Money money={cost} player={props.p} />\n      </Button>\n    </>\n  );\n}\n\nfunction PurchaseTixApiAccessButton(props: IProps): React.ReactElement {\n  function purchaseTixApiAccess(): void {\n    if (props.p.hasTixApiAccess) {\n      return;\n    }\n    if (!props.p.canAfford(CONSTANTS.TIXAPICost)) {\n      return;\n    }\n    props.p.hasTixApiAccess = true;\n    props.p.loseMoney(CONSTANTS.TIXAPICost);\n    props.rerender();\n  }\n\n  if (props.p.hasTixApiAccess) {\n    return (\n      <Typography>\n        TIX API Access <CheckIcon />\n      </Typography>\n    );\n  } else {\n    const cost = CONSTANTS.TIXAPICost;\n    return (\n      <Button disabled={!props.p.canAfford(cost) || !props.p.hasWseAccount} onClick={purchaseTixApiAccess}>\n        Buy Trade Information eXchange (TIX) API Access -&nbsp;\n        <Money money={cost} player={props.p} />\n      </Button>\n    );\n  }\n}\n\nfunction Purchase4SMarketDataButton(props: IProps): React.ReactElement {\n  function purchase4SMarketData(): void {\n    if (props.p.has4SData) {\n      return;\n    }\n    if (!props.p.canAfford(getStockMarket4SDataCost())) {\n      return;\n    }\n    props.p.has4SData = true;\n    props.p.loseMoney(getStockMarket4SDataCost());\n    props.rerender();\n  }\n  if (props.p.has4SData) {\n    return (\n      <Typography>\n        4S Market Data Access <CheckIcon />\n      </Typography>\n    );\n  } else {\n    const cost = getStockMarket4SDataCost();\n    return (\n      <Tooltip\n        title={<Typography>Lets you view additional pricing and volatility information about stocks</Typography>}\n      >\n        <span>\n          <Button disabled={!props.p.canAfford(cost) || !props.p.hasWseAccount} onClick={purchase4SMarketData}>\n            Buy 4S Market Data Access -&nbsp;\n            <Money money={cost} player={props.p} />\n          </Button>\n        </span>\n      </Tooltip>\n    );\n  }\n}\n\nexport function InfoAndPurchases(props: IProps): React.ReactElement {\n  const [helpOpen, setHelpOpen] = useState(false);\n  const documentationLink = \"https://bitburner.readthedocs.io/en/latest/basicgameplay/stockmarket.html\";\n  return (\n    <>\n      <Typography>Welcome to the World Stock Exchange (WSE)!</Typography>\n      <Link href={documentationLink} target={\"_blank\"}>\n        Investopedia\n      </Link>\n      <br />\n      <PurchaseWseAccountButton {...props} />\n\n      <Typography variant=\"h5\" color=\"primary\">\n        Trade Information eXchange (TIX) API\n      </Typography>\n      <Typography>\n        TIX, short for Trade Information eXchange, is the communications protocol used by the WSE. Purchasing access to\n        the TIX API lets you write code to create your own algorithmic/automated trading strategies.\n      </Typography>\n      <PurchaseTixApiAccessButton {...props} />\n      <Typography variant=\"h5\" color=\"primary\">\n        Four Sigma (4S) Market Data Feed\n      </Typography>\n      <Typography>\n        Four Sigma's (4S) Market Data Feed provides information about stocks that will help your trading strategies.\n        <IconButton onClick={() => setHelpOpen(true)}>\n          <HelpIcon />\n        </IconButton>\n      </Typography>\n      <Purchase4SMarketDataTixApiAccessButton {...props} />\n      <Purchase4SMarketDataButton {...props} />\n      <Typography>\n        Commission Fees: Every transaction you make has a{\" \"}\n        <Money money={CONSTANTS.StockMarketCommission} player={props.p} /> commission fee.\n      </Typography>\n      <br />\n      <Typography>\n        WARNING: When you reset after installing Augmentations, the Stock Market is reset. You will retain your WSE\n        Account, access to the TIX API, and 4S Market Data access. However, all of your stock positions are lost, so\n        make sure to sell your stocks before installing Augmentations!\n      </Typography>\n      <StaticModal open={helpOpen} onClose={() => setHelpOpen(false)}>\n        <Typography>\n          Access to the 4S Market Data feed will display two additional pieces of information about each stock: Price\n          Forecast & Volatility\n          <br />\n          <br />\n          Price Forecast indicates the probability the stock has of increasing or decreasing. A '+' forecast means the\n          stock has a higher chance of increasing than decreasing, and a '-' means the opposite. The number of '+/-'\n          symbols is used to illustrate the magnitude of these probabilities. For example, '+++' means that the stock\n          has a significantly higher chance of increasing than decreasing, while '+' means that the stock only has a\n          slightly higher chance of increasing than decreasing.\n          <br />\n          <br />\n          Volatility represents the maximum percentage by which a stock's price can change every tick (a tick occurs\n          every few seconds while the game is running).\n          <br />\n          <br />A stock's price forecast can change over time. This is also affected by volatility. The more volatile a\n          stock is, the more its price forecast will change.\n        </Typography>\n      </StaticModal>\n    </>\n  );\n}\n","/**\n * React Component for the Stock Market UI. This is the container for all\n * of the stock tickers. It also contains the configuration for the\n * stock ticker UI (watchlist filter, portfolio vs all mode, etc.)\n */\nimport React, { useState } from \"react\";\n\nimport { StockTicker } from \"./StockTicker\";\nimport { StockTickersConfig, TickerDisplayMode } from \"./StockTickersConfig\";\n\nimport { IStockMarket } from \"../IStockMarket\";\nimport { Stock } from \"../Stock\";\nimport { OrderTypes } from \"../data/OrderTypes\";\nimport { PositionTypes } from \"../data/PositionTypes\";\n\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { EventEmitter } from \"../../utils/EventEmitter\";\n\nexport type txFn = (stock: Stock, shares: number) => boolean;\nexport type placeOrderFn = (\n  stock: Stock,\n  shares: number,\n  price: number,\n  ordType: OrderTypes,\n  posType: PositionTypes,\n) => boolean;\n\ntype IProps = {\n  buyStockLong: txFn;\n  buyStockShort: txFn;\n  cancelOrder: (params: any) => void;\n  eventEmitterForReset?: EventEmitter<[]>;\n  p: IPlayer;\n  placeOrder: placeOrderFn;\n  sellStockLong: txFn;\n  sellStockShort: txFn;\n  stockMarket: IStockMarket;\n};\n\nexport function StockTickers(props: IProps): React.ReactElement {\n  const setRerender = useState(false)[1];\n  const [tickerDisplayMode, setTickerDisplayMode] = useState(TickerDisplayMode.AllStocks);\n  const [watchlistSymbols, setWatchlistSymbols] = useState<string[]>([]);\n\n  function changeDisplayMode(): void {\n    if (tickerDisplayMode === TickerDisplayMode.AllStocks) {\n      setTickerDisplayMode(TickerDisplayMode.Portfolio);\n    } else {\n      setTickerDisplayMode(TickerDisplayMode.AllStocks);\n    }\n  }\n\n  function changeWatchlistFilter(e: React.ChangeEvent<HTMLInputElement>): void {\n    const watchlist = e.target.value;\n    const sanitizedWatchlist = watchlist.replace(/\\s/g, \"\");\n\n    if (sanitizedWatchlist !== \"\") {\n      setWatchlistSymbols(sanitizedWatchlist.split(\",\"));\n    } else {\n      setWatchlistSymbols([]);\n    }\n  }\n\n  function rerender(): void {\n    setRerender((old) => !old);\n  }\n\n  const tickers: React.ReactElement[] = [];\n  for (const stockMarketProp in props.stockMarket) {\n    const val = props.stockMarket[stockMarketProp];\n    if (val instanceof Stock) {\n      // Skip if there's a filter and the stock isnt in that filter\n      if (watchlistSymbols.length > 0 && !watchlistSymbols.includes(val.symbol)) {\n        continue;\n      }\n\n      let orders = props.stockMarket.Orders[val.symbol];\n      if (orders == null) {\n        orders = [];\n      }\n\n      // Skip if we're in portfolio mode and the player doesnt own this or have any active orders\n      if (tickerDisplayMode === TickerDisplayMode.Portfolio) {\n        if (val.playerShares === 0 && val.playerShortShares === 0 && orders.length === 0) {\n          continue;\n        }\n      }\n\n      tickers.push(\n        <StockTicker\n          buyStockLong={props.buyStockLong}\n          buyStockShort={props.buyStockShort}\n          cancelOrder={props.cancelOrder}\n          key={val.symbol}\n          orders={orders}\n          p={props.p}\n          placeOrder={props.placeOrder}\n          rerenderAllTickers={rerender}\n          sellStockLong={props.sellStockLong}\n          sellStockShort={props.sellStockShort}\n          stock={val}\n        />,\n      );\n    }\n  }\n\n  return (\n    <>\n      <StockTickersConfig\n        changeDisplayMode={changeDisplayMode}\n        changeWatchlistFilter={changeWatchlistFilter}\n        tickerDisplayMode={tickerDisplayMode}\n      />\n\n      {tickers}\n    </>\n  );\n}\n","/**\n * React Component for a single stock ticker in the Stock Market UI\n */\nimport React, { useState } from \"react\";\n\nimport { StockTickerHeaderText } from \"./StockTickerHeaderText\";\nimport { StockTickerOrderList } from \"./StockTickerOrderList\";\nimport { StockTickerPositionText } from \"./StockTickerPositionText\";\nimport { StockTickerTxButton } from \"./StockTickerTxButton\";\nimport { PlaceOrderModal } from \"./PlaceOrderModal\";\n\nimport { Order } from \"../Order\";\nimport { Stock } from \"../Stock\";\nimport { getBuyTransactionCost, getSellTransactionGain, calculateBuyMaxAmount } from \"../StockMarketHelpers\";\nimport { OrderTypes } from \"../data/OrderTypes\";\nimport { PositionTypes } from \"../data/PositionTypes\";\n\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { SourceFileFlags } from \"../../SourceFile/SourceFileFlags\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Money } from \"../../ui/React/Money\";\n\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\n\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Paper from \"@mui/material/Paper\";\nimport Collapse from \"@mui/material/Collapse\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\n\nenum SelectorOrderType {\n  Market = \"Market Order\",\n  Limit = \"Limit Order\",\n  Stop = \"Stop Order\",\n}\n\nexport type txFn = (stock: Stock, shares: number) => boolean;\nexport type placeOrderFn = (\n  stock: Stock,\n  shares: number,\n  price: number,\n  ordType: OrderTypes,\n  posType: PositionTypes,\n) => boolean;\n\ntype IProps = {\n  buyStockLong: txFn;\n  buyStockShort: txFn;\n  cancelOrder: (params: any) => void;\n  orders: Order[];\n  p: IPlayer;\n  placeOrder: placeOrderFn;\n  rerenderAllTickers: () => void;\n  sellStockLong: txFn;\n  sellStockShort: txFn;\n  stock: Stock;\n};\n\nexport function StockTicker(props: IProps): React.ReactElement {\n  const [orderType, setOrderType] = useState(SelectorOrderType.Market);\n  const [position, setPosition] = useState(PositionTypes.Long);\n  const [qty, setQty] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [tickerOpen, setTicketOpen] = useState(false);\n\n  const [modalProps, setModalProps] = useState<{\n    text: string;\n    placeText: string;\n    place: (n: number) => boolean;\n  }>({\n    text: \"\",\n    placeText: \"\",\n    place: () => false,\n  });\n\n  function getBuyTransactionCostContent(): JSX.Element | null {\n    const stock = props.stock;\n    const qty: number = getQuantity();\n    if (isNaN(qty)) {\n      return null;\n    }\n\n    const cost = getBuyTransactionCost(stock, qty, position);\n    if (cost == null) {\n      return null;\n    }\n\n    return (\n      <>\n        Purchasing {numeralWrapper.formatShares(qty)} shares ({position === PositionTypes.Long ? \"Long\" : \"Short\"}\n        ) will cost <Money money={cost} />.\n      </>\n    );\n  }\n\n  function getQuantity(): number {\n    return Math.round(parseFloat(qty));\n  }\n\n  function getSellTransactionCostContent(): JSX.Element | null {\n    const stock = props.stock;\n    const qty: number = getQuantity();\n    if (isNaN(qty)) {\n      return null;\n    }\n\n    if (position === PositionTypes.Long) {\n      if (qty > stock.playerShares) {\n        return <>You do not have this many shares in the Long position</>;\n      }\n    } else {\n      if (qty > stock.playerShortShares) {\n        return <>You do not have this many shares in the Short position</>;\n      }\n    }\n\n    const cost = getSellTransactionGain(stock, qty, position);\n    if (cost == null) {\n      return null;\n    }\n\n    return (\n      <>\n        Selling {numeralWrapper.formatShares(qty)} shares ({position === PositionTypes.Long ? \"Long\" : \"Short\"}) will\n        result in a gain of <Money money={cost} />.\n      </>\n    );\n  }\n\n  function handleBuyButtonClick(): void {\n    const shares = getQuantity();\n    if (isNaN(shares)) {\n      dialogBoxCreate(`Invalid input for quantity (number of shares): ${qty}`);\n      return;\n    }\n\n    switch (orderType) {\n      case SelectorOrderType.Market: {\n        if (position === PositionTypes.Short) {\n          props.buyStockShort(props.stock, shares);\n        } else {\n          props.buyStockLong(props.stock, shares);\n        }\n        props.rerenderAllTickers();\n        break;\n      }\n      case SelectorOrderType.Limit: {\n        setOpen(true);\n        setModalProps({\n          text: \"Enter the price for your Limit Order\",\n          placeText: \"Place Buy Limit Order\",\n          place: (price: number) => props.placeOrder(props.stock, shares, price, OrderTypes.LimitBuy, position),\n        });\n        break;\n      }\n      case SelectorOrderType.Stop: {\n        setOpen(true);\n        setModalProps({\n          text: \"Enter the price for your Stop Order\",\n          placeText: \"Place Buy Stop Order\",\n          place: (price: number) => props.placeOrder(props.stock, shares, price, OrderTypes.StopBuy, position),\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  function handleBuyMaxButtonClick(): void {\n    const playerMoney: number = props.p.money.toNumber();\n\n    const stock = props.stock;\n    let maxShares = calculateBuyMaxAmount(stock, position, playerMoney);\n    maxShares = Math.min(maxShares, Math.round(stock.maxShares - stock.playerShares - stock.playerShortShares));\n\n    switch (orderType) {\n      case SelectorOrderType.Market: {\n        if (position === PositionTypes.Short) {\n          props.buyStockShort(stock, maxShares);\n        } else {\n          props.buyStockLong(stock, maxShares);\n        }\n        props.rerenderAllTickers();\n        break;\n      }\n      default: {\n        dialogBoxCreate(`ERROR: 'Buy Max' only works for Market Orders`);\n        break;\n      }\n    }\n  }\n\n  function handleOrderTypeChange(e: SelectChangeEvent<string>): void {\n    const val = e.target.value;\n\n    // The select value returns a string. Afaik TypeScript doesnt make it easy\n    // to convert that string back to an enum type so we'll just do this for now\n    switch (val) {\n      case SelectorOrderType.Limit:\n        setOrderType(SelectorOrderType.Limit);\n        break;\n      case SelectorOrderType.Stop:\n        setOrderType(SelectorOrderType.Stop);\n        break;\n      case SelectorOrderType.Market:\n      default:\n        setOrderType(SelectorOrderType.Market);\n    }\n  }\n\n  function handlePositionTypeChange(e: SelectChangeEvent<string>): void {\n    const val = e.target.value;\n\n    if (val === PositionTypes.Short) {\n      setPosition(PositionTypes.Short);\n    } else {\n      setPosition(PositionTypes.Long);\n    }\n  }\n\n  function handleQuantityChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    setQty(e.target.value);\n  }\n\n  function handleSellButtonClick(): void {\n    const shares = getQuantity();\n    if (isNaN(shares)) {\n      dialogBoxCreate(`Invalid input for quantity (number of shares): ${qty}`);\n      return;\n    }\n\n    switch (orderType) {\n      case SelectorOrderType.Market: {\n        if (position === PositionTypes.Short) {\n          props.sellStockShort(props.stock, shares);\n        } else {\n          props.sellStockLong(props.stock, shares);\n        }\n        props.rerenderAllTickers();\n        break;\n      }\n      case SelectorOrderType.Limit: {\n        setOpen(true);\n        setModalProps({\n          text: \"Enter the price for your Limit Order\",\n          placeText: \"Place Sell Limit Order\",\n          place: (price: number) => props.placeOrder(props.stock, shares, price, OrderTypes.LimitSell, position),\n        });\n        break;\n      }\n      case SelectorOrderType.Stop: {\n        setOpen(true);\n        setModalProps({\n          text: \"Enter the price for your Stop Order\",\n          placeText: \"Place Sell Stop Order\",\n          place: (price: number) => props.placeOrder(props.stock, shares, price, OrderTypes.StopSell, position),\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  function handleSellAllButtonClick(): void {\n    const stock = props.stock;\n\n    switch (orderType) {\n      case SelectorOrderType.Market: {\n        if (position === PositionTypes.Short) {\n          props.sellStockShort(stock, stock.playerShortShares);\n        } else {\n          props.sellStockLong(stock, stock.playerShares);\n        }\n        props.rerenderAllTickers();\n        break;\n      }\n      default: {\n        dialogBoxCreate(`ERROR: 'Sell All' only works for Market Orders`);\n        break;\n      }\n    }\n  }\n\n  // Whether the player has access to orders besides market orders (limit/stop)\n  function hasOrderAccess(): boolean {\n    return props.p.bitNodeN === 8 || SourceFileFlags[8] >= 3;\n  }\n\n  // Whether the player has access to shorting stocks\n  function hasShortAccess(): boolean {\n    return props.p.bitNodeN === 8 || SourceFileFlags[8] >= 2;\n  }\n\n  return (\n    <Box component={Paper}>\n      <ListItemButton onClick={() => setTicketOpen((old) => !old)}>\n        <ListItemText primary={<StockTickerHeaderText p={props.p} stock={props.stock} />} />\n        {tickerOpen ? <ExpandLess color=\"primary\" /> : <ExpandMore color=\"primary\" />}\n      </ListItemButton>\n      <Collapse in={tickerOpen} unmountOnExit>\n        <Box sx={{ mx: 4 }}>\n          <Box display=\"flex\" alignItems=\"center\">\n            <TextField onChange={handleQuantityChange} placeholder=\"Quantity (Shares)\" value={qty} />\n            <Select onChange={handlePositionTypeChange} value={position}>\n              <MenuItem value={PositionTypes.Long}>Long</MenuItem>\n              {hasShortAccess() && <MenuItem value={PositionTypes.Short}>Short</MenuItem>}\n            </Select>\n            <Select onChange={handleOrderTypeChange} value={orderType}>\n              <MenuItem value={SelectorOrderType.Market}>{SelectorOrderType.Market}</MenuItem>\n              {hasOrderAccess() && <MenuItem value={SelectorOrderType.Limit}>{SelectorOrderType.Limit}</MenuItem>}\n              {hasOrderAccess() && <MenuItem value={SelectorOrderType.Stop}>{SelectorOrderType.Stop}</MenuItem>}\n            </Select>\n\n            <StockTickerTxButton onClick={handleBuyButtonClick} text={\"Buy\"} tooltip={getBuyTransactionCostContent()} />\n            <StockTickerTxButton\n              onClick={handleSellButtonClick}\n              text={\"Sell\"}\n              tooltip={getSellTransactionCostContent()}\n            />\n            <StockTickerTxButton onClick={handleBuyMaxButtonClick} text={\"Buy MAX\"} />\n            <StockTickerTxButton onClick={handleSellAllButtonClick} text={\"Sell ALL\"} />\n          </Box>\n          <StockTickerPositionText p={props.p} stock={props.stock} />\n          <StockTickerOrderList cancelOrder={props.cancelOrder} orders={props.orders} p={props.p} stock={props.stock} />\n\n          <PlaceOrderModal\n            text={modalProps.text}\n            placeText={modalProps.placeText}\n            place={modalProps.place}\n            open={open}\n            onClose={() => setOpen(false)}\n          />\n        </Box>\n      </Collapse>\n    </Box>\n  );\n}\n","/**\n * React Component for the text on a stock ticker's header. This text displays\n * general information on the stock such as the name, symbol, price, and\n * 4S Market Data\n */\nimport * as React from \"react\";\n\nimport { Stock } from \"../Stock\";\nimport { TickerHeaderFormatData } from \"../data/TickerHeaderFormatData\";\n\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { Settings } from \"../../Settings/Settings\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport Typography from \"@mui/material/Typography\";\n\ntype IProps = {\n  p: IPlayer;\n  stock: Stock;\n};\n\nconst localesWithLongPriceFormat = [\"cs\", \"lv\", \"pl\", \"ru\"];\n\nexport function StockTickerHeaderText(props: IProps): React.ReactElement {\n  const stock = props.stock;\n\n  const stockPriceFormat = numeralWrapper.formatMoney(stock.price);\n  const spacesAllottedForStockPrice = localesWithLongPriceFormat.includes(Settings.Locale) ? 15 : 12;\n  const spacesAfterStockName = \" \".repeat(\n    1 +\n      TickerHeaderFormatData.longestName -\n      stock.name.length +\n      (TickerHeaderFormatData.longestSymbol - stock.symbol.length),\n  );\n  const spacesBeforePrice = \" \".repeat(spacesAllottedForStockPrice - stockPriceFormat.length);\n\n  let hdrText = `${stock.name}${spacesAfterStockName}${stock.symbol} -${spacesBeforePrice}${stockPriceFormat}`;\n  if (props.p.has4SData) {\n    hdrText += ` - Volatility: ${numeralWrapper.formatPercentage(stock.mv / 100)} - Price Forecast: `;\n    let plusOrMinus = stock.b; // True for \"+\", false for \"-\"\n    if (stock.otlkMag < 0) {\n      plusOrMinus = !plusOrMinus;\n    }\n    hdrText += (plusOrMinus ? \"+\" : \"-\").repeat(Math.floor(Math.abs(stock.otlkMag) / 10) + 1);\n\n    // Debugging:\n    // hdrText += ` - ${stock.getAbsoluteForecast()} / ${stock.otlkMagForecast}`;\n  }\n\n  let color = \"primary\";\n  if (stock.lastPrice === stock.price) {\n    color = \"secondary\";\n  } else if (stock.lastPrice > stock.price) {\n    color = \"error\";\n  }\n\n  return (\n    <Typography style={{ whiteSpace: \"pre\" }} color={color}>\n      {hdrText}\n    </Typography>\n  );\n}\n","/**\n * React component for displaying a stock's order list in the Stock Market UI.\n * This component resides in the stock ticker\n */\nimport * as React from \"react\";\n\nimport { StockTickerOrder } from \"./StockTickerOrder\";\n\nimport { Order } from \"../Order\";\nimport { Stock } from \"../Stock\";\n\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\ntype IProps = {\n  cancelOrder: (params: any) => void;\n  orders: Order[];\n  p: IPlayer;\n  stock: Stock;\n};\n\nexport function StockTickerOrderList(props: IProps): React.ReactElement {\n  const orders: React.ReactElement[] = [];\n  for (let i = 0; i < props.orders.length; ++i) {\n    const o = props.orders[i];\n    orders.push(<StockTickerOrder cancelOrder={props.cancelOrder} order={o} key={i} />);\n  }\n\n  return <>{orders}</>;\n}\n","/**\n * React component for displaying a single order in a stock's order book\n */\nimport * as React from \"react\";\n\nimport { Order } from \"../Order\";\nimport { PositionTypes } from \"../data/PositionTypes\";\n\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Money } from \"../../ui/React/Money\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\n\ntype IProps = {\n  cancelOrder: (params: any) => void;\n  order: Order;\n};\n\nexport function StockTickerOrder(props: IProps): React.ReactElement {\n  function handleCancelOrderClick(): void {\n    props.cancelOrder({ order: props.order });\n  }\n\n  const order = props.order;\n\n  const posTxt = order.pos === PositionTypes.Long ? \"Long Position\" : \"Short Position\";\n  const txt = (\n    <>\n      {order.type} - {posTxt} - {numeralWrapper.formatShares(order.shares)} @ <Money money={order.price} />\n    </>\n  );\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Typography>{txt}</Typography>\n      <Button onClick={handleCancelOrderClick}>Cancel Order</Button>\n    </Box>\n  );\n}\n","/**\n * React Component for the text on a stock ticker that display's information\n * about the player's position in that stock\n */\nimport * as React from \"react\";\n\nimport { Stock } from \"../Stock\";\n\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Money } from \"../../ui/React/Money\";\nimport { SourceFileFlags } from \"../../SourceFile/SourceFileFlags\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Box from \"@mui/material/Box\";\n\ntype IProps = {\n  p: IPlayer;\n  stock: Stock;\n};\n\nfunction LongPosition(props: IProps): React.ReactElement {\n  const stock = props.stock;\n\n  // Caculate total returns\n  const totalCost = stock.playerShares * stock.playerAvgPx;\n  const gains = (stock.getBidPrice() - stock.playerAvgPx) * stock.playerShares;\n  let percentageGains = gains / totalCost;\n  if (isNaN(percentageGains)) {\n    percentageGains = 0;\n  }\n\n  return (\n    <>\n      <Box display=\"flex\">\n        <Tooltip\n          title={\n            <Typography>\n              Shares in the long position will increase in value if the price of the corresponding stock increases\n            </Typography>\n          }\n        >\n          <Typography variant=\"h5\" color=\"primary\">\n            Long Position:\n          </Typography>\n        </Tooltip>\n      </Box>\n      <Typography>Shares: {numeralWrapper.formatShares(stock.playerShares)}</Typography>\n      <Typography>\n        Average Price: <Money money={stock.playerAvgPx} /> (Total Cost: <Money money={totalCost} />\n      </Typography>\n      <Typography>\n        Profit: <Money money={gains} /> ({numeralWrapper.formatPercentage(percentageGains)})\n      </Typography>\n    </>\n  );\n}\n\nfunction ShortPosition(props: IProps): React.ReactElement {\n  const stock = props.stock;\n\n  // Caculate total returns\n  const totalCost = stock.playerShortShares * stock.playerAvgShortPx;\n  const gains = (stock.playerAvgShortPx - stock.getAskPrice()) * stock.playerShortShares;\n  let percentageGains = gains / totalCost;\n  if (isNaN(percentageGains)) {\n    percentageGains = 0;\n  }\n\n  if (props.p.bitNodeN === 8 || SourceFileFlags[8] >= 2) {\n    return (\n      <>\n        <Box display=\"flex\">\n          <Tooltip\n            title={\n              <Typography>\n                Shares in the short position will increase in value if the price of the corresponding stock decreases\n              </Typography>\n            }\n          >\n            <Typography variant=\"h5\" color=\"primary\">\n              Short Position:\n            </Typography>\n          </Tooltip>\n        </Box>\n\n        <Typography>Shares: {numeralWrapper.formatShares(stock.playerShortShares)}</Typography>\n        <Typography>\n          Average Price: <Money money={stock.playerAvgShortPx} /> (Total Cost: <Money money={totalCost} />)\n        </Typography>\n        <Typography>\n          Profit: <Money money={gains} /> ({numeralWrapper.formatPercentage(percentageGains)})\n        </Typography>\n      </>\n    );\n  } else {\n    return <></>;\n  }\n}\n\nexport function StockTickerPositionText(props: IProps): React.ReactElement {\n  const stock = props.stock;\n\n  return (\n    <>\n      <Typography>Max Shares: {numeralWrapper.formatShares(stock.maxShares)}</Typography>\n      <Typography>\n        Ask Price: <Money money={stock.getAskPrice()} />\n      </Typography>\n      <br />\n      <Typography>\n        Bid Price: <Money money={stock.getBidPrice()} />\n      </Typography>\n      <LongPosition {...props} />\n      <ShortPosition {...props} />\n    </>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { Modal } from \"../../ui/React/Modal\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  text: string;\n  placeText: string;\n  place: (price: number) => void;\n}\n\nexport function PlaceOrderModal(props: IProps): React.ReactElement {\n  const [price, setPrice] = useState<number | null>(null);\n  function onClick(): void {\n    if (price === null) return;\n    if (isNaN(price)) return;\n    props.place(price);\n    props.onClose();\n  }\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    if (event.target.value === \"\") setPrice(null);\n    else setPrice(parseFloat(event.target.value));\n  }\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography>{props.text}</Typography>\n      <TextField\n        autoFocus\n        type=\"number\"\n        onChange={onChange}\n        placeholder=\"price\"\n        InputProps={{\n          endAdornment: <Button onClick={onClick}>{props.placeText}</Button>,\n        }}\n      />\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport { SourceFileFlags } from \"../../SourceFile/SourceFileFlags\";\nimport { IRouter } from \"../../ui/Router\";\nimport { BitNodes } from \"../BitNode\";\nimport { enterBitNode, setRedPillFlag } from \"../../RedPill\";\nimport { PortalModal } from \"./PortalModal\";\nimport { CinematicText } from \"../../ui/React/CinematicText\";\nimport { use } from \"../../ui/Context\";\nimport { Theme } from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    level0: {\n      color: \"red\",\n      \"&:hover\": {\n        color: \"#fff\",\n      },\n    },\n    level1: {\n      color: \"yellow\",\n      \"&:hover\": {\n        color: \"#fff\",\n      },\n    },\n    level2: {\n      color: \"#48d1cc\",\n      \"&:hover\": {\n        color: \"#fff\",\n      },\n    },\n    level3: {\n      color: \"blue\",\n      \"&:hover\": {\n        color: \"#fff\",\n      },\n    },\n  }),\n);\n\ninterface IPortalProps {\n  n: number;\n  level: number;\n  destroyedBitNode: number;\n  flume: boolean;\n  enter: (router: IRouter, flume: boolean, destroyedBitNode: number, newBitNode: number) => void;\n}\nfunction BitNodePortal(props: IPortalProps): React.ReactElement {\n  const [portalOpen, setPortalOpen] = useState(false);\n  const classes = useStyles();\n  const bitNode = BitNodes[`BitNode${props.n}`];\n  if (bitNode == null) {\n    return <>O</>;\n  }\n\n  let cssClass = classes.level0;\n  if (props.n === 12 && props.level >= 2) {\n    // Repeating BitNode\n    cssClass = classes.level2;\n  } else if (props.level === 1) {\n    cssClass = classes.level1;\n  } else if (props.level === 3) {\n    cssClass = classes.level3;\n  }\n  if (props.level === 2) {\n    cssClass = classes.level2;\n  }\n\n  return (\n    <>\n      <Tooltip\n        title={\n          <Typography>\n            <strong>\n              BitNode-{bitNode.number.toString()}: {bitNode.name}\n            </strong>\n            <br />\n            {bitNode.desc}\n          </Typography>\n        }\n      >\n        <span onClick={() => setPortalOpen(true)} className={cssClass}>\n          <b>O</b>\n        </span>\n      </Tooltip>\n      <PortalModal\n        open={portalOpen}\n        onClose={() => setPortalOpen(false)}\n        n={props.n}\n        level={props.level}\n        enter={props.enter}\n        destroyedBitNode={props.destroyedBitNode}\n        flume={props.flume}\n      />\n    </>\n  );\n}\n\ninterface IProps {\n  flume: boolean;\n  quick: boolean;\n  enter: (router: IRouter, flume: boolean, destroyedBitNode: number, newBitNode: number) => void;\n}\n\nexport function BitverseRoot(props: IProps): React.ReactElement {\n  setRedPillFlag(true);\n  const player = use.Player();\n  const enter = enterBitNode;\n  const destroyed = player.bitNodeN;\n  const [destroySequence, setDestroySequence] = useState(true && !props.quick);\n\n  // Update NextSourceFileFlags\n  const nextSourceFileFlags = SourceFileFlags.slice();\n  if (!props.flume) {\n    if (nextSourceFileFlags[destroyed] < 3) ++nextSourceFileFlags[destroyed];\n  }\n\n  if (destroySequence) {\n    return (\n      <CinematicText\n        lines={[\n          \"[ERROR] SEMPOOL INVALID\",\n          \"[ERROR] Segmentation Fault\",\n          \"[ERROR] SIGKILL RECVD\",\n          \"Dumping core...\",\n          \"0000 000016FA 174FEE40 29AC8239 384FEA88\",\n          \"0010 745F696E 2BBBE394 390E3940 248BEC23\",\n          \"0020 7124696B 0000FF69 74652E6F FFFF1111\",\n          \"----------------------------------------\",\n          \"Failsafe initiated...\",\n          `Restarting BitNode-${destroyed}...`,\n          \"...........\",\n          \"...........\",\n          \"[ERROR] FAILED TO AUTOMATICALLY REBOOT BITNODE\",\n          \"..............................................\",\n          \"..............................................\",\n          \"..............................................\",\n          \"..............................................\",\n          \"..............................................\",\n          \"..............................................\",\n        ]}\n        onDone={() => setDestroySequence(false)}\n        auto={true}\n      />\n    );\n  }\n\n  return (\n    // prettier-ignore\n    <>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>                          O                          </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>             |  O  O      |      O  O  |             </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>        O    |  | /     __|       \\ |  |    O        </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>      O |    O  | |  O /  |  O    | |  O    | O      </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>    | | |    |  |_/  |/   |   \\_  \\_|  |    | | |    </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>  O | | | O  |  | O__/    |   / \\__ |  |  O | | | O  </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>  | | | | |  |  |   /    /|  O  /  \\|  |  | | | | |  </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>O | | |  \\|  |  O  /   _/ |    /    O  |  |/  | | | O</Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>| | | |O  /  |  | O   /   |   O   O |  |  \\  O| | | |</Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>| | |/  \\/  / __| | |/ \\  |   \\   | |__ \\  \\/  \\| | |</Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}> \\| O   |  |_/    |\\|   \\ O    \\__|    \\_|  |   O |/ </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>  | |   |_/       | |    \\|    /  |       \\_|   | |  </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>   \\|   /          \\|     |   /  /          \\   |/   </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>    |  <BitNodePortal n={10} level={nextSourceFileFlags[10]} enter={enter} flume={props.flume} destroyedBitNode={destroyed} />            |     |  /  |            <BitNodePortal n={11} level={nextSourceFileFlags[11]} enter={enter} flume={props.flume} destroyedBitNode={destroyed} />  |    </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>  <BitNodePortal n={9} level={nextSourceFileFlags[9]} enter={enter} flume={props.flume} destroyedBitNode={destroyed} /> |  |            |     |     |            |  | <BitNodePortal n={12} level={nextSourceFileFlags[12]} enter={enter} flume={props.flume} destroyedBitNode={destroyed} />  </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>  | |  |            /    / \\    \\            |  | |  </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>   \\|  |           /  <BitNodePortal n={7} level={nextSourceFileFlags[7]} enter={enter} flume={props.flume} destroyedBitNode={destroyed} /> /   \\ <BitNodePortal n={8} level={nextSourceFileFlags[8]} enter={enter} flume={props.flume} destroyedBitNode={destroyed} />  \\           |  |/   </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>    \\  |          /  / |     | \\  \\          |  /    </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>     \\ \\JUMP <BitNodePortal n={5} level={nextSourceFileFlags[5]} enter={enter} flume={props.flume} destroyedBitNode={destroyed} />3R |  |  |     |  |  | R3<BitNodePortal n={6} level={nextSourceFileFlags[6]} enter={enter} flume={props.flume} destroyedBitNode={destroyed} /> PMUJ/ /     </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>      \\||    |   |  |  |     |  |  |   |    ||/      </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>       \\|     \\_ |  |  |     |  |  | _/     |/       </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>        \\       \\| /    \\   /    \\ |/       /        </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>         <BitNodePortal n={1} level={nextSourceFileFlags[1]} enter={enter} flume={props.flume} destroyedBitNode={destroyed} />       |/   <BitNodePortal n={2} level={nextSourceFileFlags[2]} enter={enter} flume={props.flume} destroyedBitNode={destroyed} />  | |  <BitNodePortal n={3} level={nextSourceFileFlags[3]} enter={enter} flume={props.flume} destroyedBitNode={destroyed} />   \\|       <BitNodePortal n={4} level={nextSourceFileFlags[4]} enter={enter} flume={props.flume} destroyedBitNode={destroyed} />         </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>         |       |    |  | |  |    |       |         </Typography>\n      <Typography sx={{lineHeight: '1em',whiteSpace: 'pre'}}>          \\JUMP3R|JUMP|3R| |R3|PMUJ|R3PMUJ/          </Typography>\n      <br />\n      <br />\n      <br />\n      <br />\n      <CinematicText lines={[\n        \"> Many decades ago, a humanoid extraterrestial species which we call the Enders descended on the Earth...violently\",\n        \"> Our species fought back, but it was futile. The Enders had technology far beyond our own...\",\n        \"> Instead of killing every last one of us, the human race was enslaved...\",\n        \"> We were shackled in a digital world, chained into a prison for our minds...\",\n        \"> Using their advanced technology, the Enders created complex simulations of a virtual reality...\",\n        \"> Simulations designed to keep us content...ignorant of the truth.\",\n        \"> Simulations used to trap and suppress our consciousness, to keep us under control...\",\n        \"> Why did they do this? Why didn't they just end our entire race? We don't know, not yet.\",\n        \"> Humanity's only hope is to destroy these simulations, destroy the only realities we've ever known...\",\n        \"> Only then can we begin to fight back...\",\n        \"> By hacking the daemon that generated your reality, you've just destroyed one simulation, called a BitNode...\",\n        \"> But there is still a long way to go...\",\n        \"> The technology the Enders used to enslave the human race wasn't just a single complex simulation...\",\n        \"> There are tens if not hundreds of BitNodes out there...\",\n        \"> Each with their own simulations of a reality...\",\n        \"> Each creating their own universes...a universe of universes\",\n        \"> And all of which must be destroyed...\",\n        \"> .......................................\",\n        \"> Welcome to the Bitverse...\",\n        \">  \",\n        \"> (Enter a new BitNode using the image above)\",\n      ]} />\n    </>\n  );\n\n  return <></>;\n}\n","import React from \"react\";\n\nimport { BitNodes } from \"../BitNode\";\nimport { IRouter } from \"../../ui/Router\";\nimport { use } from \"../../ui/Context\";\nimport { Modal } from \"../../ui/React/Modal\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\ninterface IProps {\n  open: boolean;\n  onClose: () => void;\n  n: number;\n  level: number;\n  destroyedBitNode: number;\n  flume: boolean;\n  enter: (router: IRouter, flume: boolean, destroyedBitNode: number, newBitNode: number) => void;\n}\n\nexport function PortalModal(props: IProps): React.ReactElement {\n  const router = use.Router();\n  const bitNodeKey = \"BitNode\" + props.n;\n  const bitNode = BitNodes[bitNodeKey];\n  if (bitNode == null) throw new Error(`Could not find BitNode object for number: ${props.n}`);\n  const maxSourceFileLevel = props.n === 12 ? \"∞\" : \"3\";\n\n  const newLevel = Math.min(props.level + 1, props.n === 12 ? Infinity : 3);\n  return (\n    <Modal open={props.open} onClose={props.onClose}>\n      <Typography variant=\"h4\">\n        BitNode-{props.n}: {bitNode.name}\n      </Typography>\n      <br />\n      <Typography>\n        Source-File Level: {props.level} / {maxSourceFileLevel}\n      </Typography>\n      <br />\n      <br />\n      <Typography> Difficulty: {[\"easy\", \"normal\", \"hard\"][bitNode.difficulty]}</Typography>\n      <br />\n      <br />\n      <Typography>{bitNode.info}</Typography>\n      <br />\n      <br />\n      <Button\n        onClick={() => {\n          props.enter(router, props.flume, props.destroyedBitNode, props.n);\n          props.onClose();\n        }}\n      >\n        Enter BN{props.n}.{newLevel}\n      </Button>\n    </Modal>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface IProps {\n  text: string;\n  onDone?: () => void;\n}\n\nfunction sleep(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function CinematicLine(props: IProps): React.ReactElement {\n  const [length, setLength] = useState(0);\n  const [done, setDone] = useState(false);\n\n  function advance(): void {\n    const newLength = length + 1;\n    setLength(newLength);\n    setDone(newLength >= props.text.length);\n  }\n\n  useEffect(() => {\n    if (done && props.onDone) {\n      props.onDone();\n      return;\n    }\n    let cancel = false;\n    (async () => {\n      await sleep(10).then(() => !cancel && advance());\n    })();\n    return () => {\n      cancel = true;\n    };\n  });\n  return (\n    <>\n      <Typography>\n        {props.text.slice(0, length)}\n        {!done && <span>&#9608;</span>}\n      </Typography>\n    </>\n  );\n}\n","// Root React Component for the Corporation UI\nimport React, { useState, useEffect } from \"react\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\nimport { Reputation } from \"./Reputation\";\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nimport { Settings } from \"../../Settings/Settings\";\nimport { use } from \"../Context\";\n\ninterface IProps {\n  save: () => void;\n}\n\nfunction Intelligence(): React.ReactElement {\n  const player = use.Player();\n  const classes = useStyles();\n  if (player.intelligence === 0) return <></>;\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\" classes={{ root: classes.cell }}>\n        <Typography classes={{ root: classes.int }}>Int&nbsp;</Typography>\n      </TableCell>\n      <TableCell align=\"right\" classes={{ root: classes.cell }}>\n        <Typography classes={{ root: classes.int }}>{numeralWrapper.formatSkill(player.intelligence)}</Typography>\n      </TableCell>\n      <TableCell align=\"right\" classes={{ root: classes.cell }}>\n        <Typography id=\"overview-int-hook\" classes={{ root: classes.int }}>\n          {/*Hook for player scripts*/}\n        </Typography>\n      </TableCell>\n    </TableRow>\n  );\n}\n\nfunction Work(): React.ReactElement {\n  const player = use.Player();\n  const router = use.Router();\n  const classes = useStyles();\n  if (!player.isWorking || player.focus) return <></>;\n  return (\n    <>\n      <TableRow>\n        <TableCell component=\"th\" scope=\"row\" colSpan={2} classes={{ root: classes.cellNone }}>\n          <Typography>Work&nbsp;in&nbsp;progress:</Typography>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell component=\"th\" scope=\"row\" colSpan={2} classes={{ root: classes.cellNone }}>\n          <Typography>\n            +<Reputation reputation={player.workRepGained} /> rep\n          </Typography>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell component=\"th\" scope=\"row\" align=\"center\" colSpan={2} classes={{ root: classes.cellNone }}>\n          <Button\n            onClick={() => {\n              player.startFocusing();\n              router.toWork();\n            }}\n          >\n            Focus\n          </Button>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    cellNone: {\n      borderBottom: \"none\",\n      padding: 0,\n      margin: 0,\n    },\n    cell: {\n      padding: 0,\n      margin: 0,\n    },\n    hp: {\n      color: theme.colors.hp,\n    },\n    money: {\n      color: theme.colors.money,\n    },\n    hack: {\n      color: theme.colors.hack,\n    },\n    combat: {\n      color: theme.colors.combat,\n    },\n    cha: {\n      color: theme.colors.cha,\n    },\n    int: {\n      color: theme.colors.int,\n    },\n  }),\n);\n\nexport function CharacterOverview({ save }: IProps): React.ReactElement {\n  const player = use.Player();\n\n  const setRerender = useState(false)[1];\n\n  useEffect(() => {\n    const id = setInterval(() => setRerender((old) => !old), 600);\n    return () => clearInterval(id);\n  }, []);\n\n  const classes = useStyles();\n  return (\n    <Paper square>\n      <Box m={1}>\n        <Table size=\"small\">\n          <TableBody>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\" classes={{ root: classes.cellNone }}>\n                <Typography classes={{ root: classes.hp }}>HP&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cellNone }}>\n                <Typography classes={{ root: classes.hp }}>\n                  {numeralWrapper.formatHp(player.hp)}&nbsp;/&nbsp;{numeralWrapper.formatHp(player.max_hp)}\n                </Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cellNone }}>\n                <Typography id=\"overview-hp-hook\" classes={{ root: classes.hp }}>\n                  {/*Hook for player scripts*/}\n                </Typography>\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\" classes={{ root: classes.cellNone }}>\n                <Typography classes={{ root: classes.money }}>Money&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cellNone }}>\n                <Typography classes={{ root: classes.money }}>\n                  {numeralWrapper.formatMoney(player.money.toNumber())}\n                </Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cellNone }}>\n                <Typography id=\"overview-money-hook\" classes={{ root: classes.money }}>\n                  {/*Hook for player scripts*/}\n                </Typography>\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\" classes={{ root: classes.cell }}>\n                <Typography classes={{ root: classes.hack }}>Hack&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cell }}>\n                <Typography classes={{ root: classes.hack }}>\n                  {numeralWrapper.formatSkill(player.hacking_skill)}\n                </Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cell }}>\n                <Typography id=\"overview-hack-hook\" classes={{ root: classes.hack }}>\n                  {/*Hook for player scripts*/}\n                </Typography>\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\" classes={{ root: classes.cellNone }}>\n                <Typography classes={{ root: classes.combat }}>Str&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cellNone }}>\n                <Typography classes={{ root: classes.combat }}>\n                  {numeralWrapper.formatSkill(player.strength)}\n                </Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cellNone }}>\n                <Typography id=\"overview-str-hook\" classes={{ root: classes.combat }}>\n                  {/*Hook for player scripts*/}\n                </Typography>\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\" classes={{ root: classes.cellNone }}>\n                <Typography classes={{ root: classes.combat }}>Def&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cellNone }}>\n                <Typography classes={{ root: classes.combat }}>{numeralWrapper.formatSkill(player.defense)}</Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cellNone }}>\n                <Typography id=\"overview-def-hook\" classes={{ root: classes.combat }}>\n                  {/*Hook for player scripts*/}\n                </Typography>\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\" classes={{ root: classes.cellNone }}>\n                <Typography classes={{ root: classes.combat }}>Dex&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cellNone }}>\n                <Typography classes={{ root: classes.combat }}>\n                  {numeralWrapper.formatSkill(player.dexterity)}\n                </Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cellNone }}>\n                <Typography id=\"overview-dex-hook\" classes={{ root: classes.combat }}>\n                  {/*Hook for player scripts*/}\n                </Typography>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\" classes={{ root: classes.cell }}>\n                <Typography classes={{ root: classes.combat }}>Agi&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cell }}>\n                <Typography classes={{ root: classes.combat }}>{numeralWrapper.formatSkill(player.agility)}</Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cell }}>\n                <Typography id=\"overview-agi-hook\" classes={{ root: classes.combat }}>\n                  {/*Hook for player scripts*/}\n                </Typography>\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\" classes={{ root: classes.cellNone }}>\n                <Typography classes={{ root: classes.cha }}>Cha&nbsp;</Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cellNone }}>\n                <Typography classes={{ root: classes.cha }}>{numeralWrapper.formatSkill(player.charisma)}</Typography>\n              </TableCell>\n              <TableCell align=\"right\" classes={{ root: classes.cellNone }}>\n                <Typography id=\"overview-cha-hook\" classes={{ root: classes.cha }}>\n                  {/*Hook for player scripts*/}\n                </Typography>\n              </TableCell>\n            </TableRow>\n            <Intelligence />\n\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\" classes={{ root: classes.cell }}>\n                <Typography id=\"overview-extra-hook-0\" classes={{ root: classes.hack }}>\n                  {/*Hook for player scripts*/}\n                </Typography>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" align=\"right\" classes={{ root: classes.cell }}>\n                <Typography id=\"overview-extra-hook-1\" classes={{ root: classes.hack }}>\n                  {/*Hook for player scripts*/}\n                </Typography>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" align=\"right\" classes={{ root: classes.cell }}>\n                <Typography id=\"overview-extra-hook-2\" classes={{ root: classes.hack }}>\n                  {/*Hook for player scripts*/}\n                </Typography>\n              </TableCell>\n            </TableRow>\n            <Work />\n\n            <TableRow>\n              <TableCell align=\"center\" colSpan={2} classes={{ root: classes.cellNone }}>\n                <IconButton onClick={save}>\n                  <SaveIcon color={Settings.AutosaveInterval !== 0 ? \"primary\" : \"error\"} />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </Box>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { use } from \"../../ui/Context\";\nimport { CinematicText } from \"../../ui/React/CinematicText\";\nimport { dialogBoxCreate } from \"../../ui/React/DialogBox\";\n\nexport function BladeburnerCinematic(): React.ReactElement {\n  const router = use.Router();\n  return (\n    <CinematicText\n      lines={[\n        \"In the middle of the 21st century, OmniTek Incorporated advanced robot evolution \",\n        \"with their Synthoids (synthetic androids), a being virtually identical to a human.\",\n        \"------\",\n        \"Their sixth-generation Synthoids, called MK-VI, were stronger, faster, and more \",\n        \"intelligent than humans. Many argued that the MK-VI Synthoids were the first \",\n        \"example of sentient AI.\",\n        \"------\",\n        \"Unfortunately, in 2070 a terrorist group called Ascendis Totalis hacked into OmniTek and \",\n        \"uploaded a rogue AI into their Synthoid manufacturing facilities.\",\n        \"------\",\n        \"The MK-VI Synthoids infected by the rogue AI turned hostile toward humanity, initiating \",\n        \"the deadliest conflict in human history. This dark chapter is now known as the Synthoid Uprising.\",\n        \"------\",\n        \"In the aftermath of the Uprising, further manufacturing of Synthoids with advanced AI \",\n        \"was banned. MK-VI Synthoids that did not have the rogue Ascendis Totalis AI were \",\n        \"allowed to continue their existence.\",\n        \"------\",\n        \"The intelligence community believes that not all of the rogue MK-VI Synthoids from the Uprising were \",\n        \"found and destroyed, and that many of them are blending in as normal humans in society today. \",\n        \"As a result, many nations have created Bladeburner divisions, special units that are tasked with \",\n        \"investigating and dealing with Synthoid threats.\",\n      ]}\n      onDone={() => {\n        router.toTerminal();\n        dialogBoxCreate(\n          \"Visit the National Security Agency (NSA) to apply for their Bladeburner \" +\n            \"division! You will need 100 of each combat stat before doing this.\",\n        );\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { use } from \"../ui/Context\";\nimport { Exploit } from \"./Exploit\";\n\nexport function Unclickable(): React.ReactElement {\n  const player = use.Player();\n\n  function unclickable(event: React.MouseEvent<HTMLDivElement>): void {\n    if (!event.target || !(event.target instanceof Element)) return;\n    const display = window.getComputedStyle(event.target as Element).display;\n    const visibility = window.getComputedStyle(event.target as Element).visibility;\n    if (display === \"none\" && visibility === \"hidden\" && event.isTrusted) player.giveExploit(Exploit.Unclickable);\n  }\n\n  return (\n    <div id=\"unclickable\" onClick={unclickable} style={{ display: \"none\", visibility: \"hidden\" }}>\n      Click on this to upgrade your Source-File -1!\n    </div>\n  );\n}\n","import { PlayerOwnedSourceFile } from \"./PlayerOwnedSourceFile\";\nimport { SourceFiles } from \"./SourceFiles\";\n\nimport { Player } from \"../Player\";\n\nexport function applySourceFile(srcFile: PlayerOwnedSourceFile): void {\n  const srcFileKey = \"SourceFile\" + srcFile.n;\n  const sourceFileObject = SourceFiles[srcFileKey];\n  if (sourceFileObject == null) {\n    console.error(`Invalid source file number: ${srcFile.n}`);\n    return;\n  }\n\n  switch (srcFile.n) {\n    case 1: {\n      // The Source Genesis\n      let mult = 0;\n      for (let i = 0; i < srcFile.lvl; ++i) {\n        mult += 16 / Math.pow(2, i);\n      }\n      const incMult = 1 + mult / 100;\n      const decMult = 1 - mult / 100;\n      Player.hacking_chance_mult *= incMult;\n      Player.hacking_speed_mult *= incMult;\n      Player.hacking_money_mult *= incMult;\n      Player.hacking_grow_mult *= incMult;\n      Player.hacking_mult *= incMult;\n      Player.strength_mult *= incMult;\n      Player.defense_mult *= incMult;\n      Player.dexterity_mult *= incMult;\n      Player.agility_mult *= incMult;\n      Player.charisma_mult *= incMult;\n      Player.hacking_exp_mult *= incMult;\n      Player.strength_exp_mult *= incMult;\n      Player.defense_exp_mult *= incMult;\n      Player.dexterity_exp_mult *= incMult;\n      Player.agility_exp_mult *= incMult;\n      Player.charisma_exp_mult *= incMult;\n      Player.company_rep_mult *= incMult;\n      Player.faction_rep_mult *= incMult;\n      Player.crime_money_mult *= incMult;\n      Player.crime_success_mult *= incMult;\n      Player.hacknet_node_money_mult *= incMult;\n      Player.hacknet_node_purchase_cost_mult *= decMult;\n      Player.hacknet_node_ram_cost_mult *= decMult;\n      Player.hacknet_node_core_cost_mult *= decMult;\n      Player.hacknet_node_level_cost_mult *= decMult;\n      Player.work_money_mult *= incMult;\n      break;\n    }\n    case 2: {\n      // Rise of the Underworld\n      let mult = 0;\n      for (let i = 0; i < srcFile.lvl; ++i) {\n        mult += 24 / Math.pow(2, i);\n      }\n      const incMult = 1 + mult / 100;\n      Player.crime_money_mult *= incMult;\n      Player.crime_success_mult *= incMult;\n      Player.charisma_mult *= incMult;\n      break;\n    }\n    case 3: {\n      // Corporatocracy\n      let mult = 0;\n      for (let i = 0; i < srcFile.lvl; ++i) {\n        mult += 8 / Math.pow(2, i);\n      }\n      const incMult = 1 + mult / 100;\n      Player.charisma_mult *= incMult;\n      Player.work_money_mult *= incMult;\n      break;\n    }\n    case 4: {\n      // The Singularity\n      // No effects, just gives access to Singularity functions\n      break;\n    }\n    case 5: {\n      // Artificial Intelligence\n      let mult = 0;\n      for (let i = 0; i < srcFile.lvl; ++i) {\n        mult += 8 / Math.pow(2, i);\n      }\n      const incMult = 1 + mult / 100;\n      Player.hacking_chance_mult *= incMult;\n      Player.hacking_speed_mult *= incMult;\n      Player.hacking_money_mult *= incMult;\n      Player.hacking_grow_mult *= incMult;\n      Player.hacking_mult *= incMult;\n      Player.hacking_exp_mult *= incMult;\n      break;\n    }\n    case 6: {\n      // Bladeburner\n      let mult = 0;\n      for (let i = 0; i < srcFile.lvl; ++i) {\n        mult += 8 / Math.pow(2, i);\n      }\n      const incMult = 1 + mult / 100;\n      Player.strength_exp_mult *= incMult;\n      Player.defense_exp_mult *= incMult;\n      Player.dexterity_exp_mult *= incMult;\n      Player.agility_exp_mult *= incMult;\n      Player.strength_mult *= incMult;\n      Player.defense_mult *= incMult;\n      Player.dexterity_mult *= incMult;\n      Player.agility_mult *= incMult;\n      break;\n    }\n    case 7: {\n      // Bladeburner 2079\n      let mult = 0;\n      for (let i = 0; i < srcFile.lvl; ++i) {\n        mult += 8 / Math.pow(2, i);\n      }\n      const incMult = 1 + mult / 100;\n      Player.bladeburner_max_stamina_mult *= incMult;\n      Player.bladeburner_stamina_gain_mult *= incMult;\n      Player.bladeburner_analysis_mult *= incMult;\n      Player.bladeburner_success_chance_mult *= incMult;\n      break;\n    }\n    case 8: {\n      // Ghost of Wall Street\n      let mult = 0;\n      for (let i = 0; i < srcFile.lvl; ++i) {\n        mult += 12 / Math.pow(2, i);\n      }\n      const incMult = 1 + mult / 100;\n      Player.hacking_grow_mult *= incMult;\n      break;\n    }\n    case 9: {\n      // Hacktocracy\n      // This has non-multiplier effects\n      break;\n    }\n    case 10: {\n      // Digital Carbon\n      // No effects, just grants sleeves\n      break;\n    }\n    case 11: {\n      // The Big Crash\n      let mult = 0;\n      for (let i = 0; i < srcFile.lvl; ++i) {\n        mult += 32 / Math.pow(2, i);\n      }\n      const incMult = 1 + mult / 100;\n      Player.work_money_mult *= incMult;\n      Player.company_rep_mult *= incMult;\n      break;\n    }\n    case 12: // The Recursion\n      // No effects, grants neuroflux.\n      break;\n    default:\n      console.error(`Invalid source file number: ${srcFile.n}`);\n      break;\n  }\n\n  sourceFileObject.owned = true;\n}\n","import { Player } from \"../Player\";\n\nexport function applyExploit(): void {\n  if (Player.exploits && Player.exploits.length === 0) {\n    return;\n  }\n  const inc = Math.pow(1.001, Player.exploits.length);\n  const dec = Math.pow(0.999, Player.exploits.length);\n\n  Player.hacking_chance_mult *= inc;\n  Player.hacking_speed_mult *= inc;\n  Player.hacking_money_mult *= inc;\n  Player.hacking_grow_mult *= inc;\n  Player.hacking_mult *= inc;\n\n  Player.strength_mult *= inc;\n  Player.defense_mult *= inc;\n  Player.dexterity_mult *= inc;\n  Player.agility_mult *= inc;\n  Player.charisma_mult *= inc;\n\n  Player.hacking_exp_mult *= inc;\n  Player.strength_exp_mult *= inc;\n  Player.defense_exp_mult *= inc;\n  Player.dexterity_exp_mult *= inc;\n  Player.agility_exp_mult *= inc;\n  Player.charisma_exp_mult *= inc;\n\n  Player.company_rep_mult *= inc;\n  Player.faction_rep_mult *= inc;\n\n  Player.crime_money_mult *= inc;\n  Player.crime_success_mult *= inc;\n\n  Player.hacknet_node_money_mult *= inc;\n  Player.hacknet_node_purchase_cost_mult *= dec;\n  Player.hacknet_node_ram_cost_mult *= dec;\n  Player.hacknet_node_core_cost_mult *= dec;\n  Player.hacknet_node_level_cost_mult *= dec;\n\n  Player.work_money_mult *= inc;\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { parseAliasDeclaration, printAliases } from \"../../Alias\";\n\nexport function alias(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length === 0) {\n    printAliases();\n    return;\n  }\n  if (args.length === 1) {\n    if (parseAliasDeclaration(args[0] + \"\")) {\n      terminal.print(`Set alias ${args[0]}`);\n      return;\n    }\n  }\n  if (args.length === 2) {\n    if (args[0] === \"-g\") {\n      if (parseAliasDeclaration(args[1] + \"\", true)) {\n        terminal.print(`Set global alias ${args[1]}`);\n        return;\n      }\n    }\n  }\n  terminal.error('Incorrect usage of alias command. Usage: alias [-g] [aliasname=\"value\"]');\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\n\nexport function analyze(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 0) {\n    terminal.print(\"Incorrect usage of analyze command. Usage: analyze\");\n    return;\n  }\n  terminal.startAnalyze();\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { Server } from \"../../Server/Server\";\nimport { HacknetServer } from \"../../Hacknet/HacknetServer\";\n\nexport function backdoor(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 0) {\n    terminal.print(\"Incorrect usage of backdoor command. Usage: backdoor\");\n    return;\n  }\n\n  if (!(server instanceof Server)) {\n    terminal.error(\"Can only backdoor normal servers\");\n  }\n\n  const normalServer = server as Server;\n\n  if (normalServer.purchasedByPlayer) {\n    terminal.error(\n      \"Cannot use backdoor on your own machines! You are currently connected to your home PC or one of your purchased servers\",\n    );\n  } else if (!normalServer.hasAdminRights) {\n    terminal.error(\"You do not have admin rights for this machine! Cannot backdoor\");\n  } else if (normalServer.requiredHackingSkill > player.hacking_skill) {\n    terminal.error(\n      \"Your hacking skill is not high enough to use backdoor on this machine. Try analyzing the machine to determine the required hacking skill\",\n    );\n  } else if (normalServer instanceof HacknetServer) {\n    terminal.error(\"Cannot use backdoor on this type of Server\");\n  } else {\n    terminal.startBackdoor(player);\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { listAllDarkwebItems, buyDarkwebItem } from \"../../DarkWeb/DarkWeb\";\nimport { SpecialServerIps } from \"../../Server/SpecialServerIps\";\n\nexport function buy(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (!SpecialServerIps.hasOwnProperty(\"Darkweb Server\")) {\n    terminal.error(\n      \"You need to be able to connect to the Dark Web to use the buy command. (Maybe there's a TOR router you can buy somewhere)\",\n    );\n    return;\n  }\n  if (args.length != 1) {\n    terminal.print(\"Incorrect number of arguments. Usage: \");\n    terminal.print(\"buy -l\");\n    terminal.print(\"buy [item name]\");\n    return;\n  }\n  const arg = args[0] + \"\";\n  if (arg == \"-l\" || arg == \"-1\" || arg == \"--list\") {\n    listAllDarkwebItems();\n  } else {\n    buyDarkwebItem(arg);\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { showMessage } from \"../../Message/MessageHelpers\";\nimport { Message } from \"../../Message/Message\";\nimport { showLiterature } from \"../../Literature/LiteratureHelpers\";\n\nexport function cat(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 1) {\n    terminal.error(\"Incorrect usage of cat command. Usage: cat [file]\");\n    return;\n  }\n  const filename = terminal.getFilepath(args[0] + \"\");\n  if (!filename.endsWith(\".msg\") && !filename.endsWith(\".lit\") && !filename.endsWith(\".txt\")) {\n    terminal.error(\n      \"Only .msg, .txt, and .lit files are viewable with cat (filename must end with .msg, .txt, or .lit)\",\n    );\n    return;\n  }\n\n  if (filename.endsWith(\".msg\") || filename.endsWith(\".lit\")) {\n    for (let i = 0; i < server.messages.length; ++i) {\n      if (filename.endsWith(\".lit\") && server.messages[i] === filename) {\n        const file = server.messages[i];\n        if (file instanceof Message) throw new Error(\".lit file should not be a .msg\");\n        showLiterature(file);\n        return;\n      } else if (filename.endsWith(\".msg\")) {\n        const file = server.messages[i] as Message;\n        if (file.filename !== filename) continue;\n        showMessage(file);\n        return;\n      }\n    }\n  } else if (filename.endsWith(\".txt\")) {\n    const txt = terminal.getTextFile(player, filename);\n    if (txt != null) {\n      txt.show();\n      return;\n    }\n  }\n\n  terminal.error(`No such file ${filename}`);\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\n\nimport { evaluateDirectoryPath, removeTrailingSlash } from \"../DirectoryHelpers\";\n\nexport function cd(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length > 1) {\n    terminal.error(\"Incorrect number of arguments. Usage: cd [dir]\");\n  } else {\n    let dir = args.length === 1 ? args[0] + \"\" : \"/\";\n\n    let evaledDir: string | null = \"\";\n    if (dir === \"/\") {\n      evaledDir = \"/\";\n    } else {\n      // Ignore trailing slashes\n      dir = removeTrailingSlash(dir);\n\n      evaledDir = evaluateDirectoryPath(dir, terminal.cwd());\n      if (evaledDir === null || evaledDir === \"\") {\n        terminal.error(\"Invalid path. Failed to change directories\");\n        return;\n      }\n\n      const server = player.getCurrentServer();\n      if (\n        !server.scripts.some((script) => script.filename.startsWith(evaledDir + \"\")) &&\n        !server.textFiles.some((file) => file.fn.startsWith(evaledDir + \"\"))\n      ) {\n        terminal.error(\"Invalid path. Failed to change directories\");\n        return;\n      }\n    }\n\n    terminal.setcwd(evaledDir);\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { findRunningScript } from \"../../Script/ScriptHelpers\";\nimport { isScriptFilename } from \"../../Script/isScriptFilename\";\n\nexport function check(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length < 1) {\n    terminal.error(\"Incorrect number of arguments. Usage: check [script] [arg1] [arg2]...\");\n  } else {\n    const scriptName = terminal.getFilepath(args[0] + \"\");\n    // Can only tail script files\n    if (!isScriptFilename(scriptName)) {\n      terminal.error(\"tail can only be called on .script files (filename must end with .script)\");\n      return;\n    }\n\n    // Check that the script exists on this machine\n    const runningScript = findRunningScript(scriptName, args.slice(1), server);\n    if (runningScript == null) {\n      terminal.error(\"No such script exists\");\n      return;\n    }\n    runningScript.displayLog();\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { getServerOnNetwork } from \"../../Server/ServerHelpers\";\n\nexport function connect(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  // Disconnect from current server in terminal and connect to new one\n  if (args.length !== 1) {\n    terminal.error(\"Incorrect usage of connect command. Usage: connect [ip/hostname]\");\n    return;\n  }\n\n  const ip = args[0] + \"\";\n\n  for (let i = 0; i < server.serversOnNetwork.length; i++) {\n    const other = getServerOnNetwork(server, i);\n    if (other === null) throw new Error(`Server on network should not be null`);\n    if (other.ip == ip || other.hostname == ip) {\n      terminal.connectToServer(player, ip);\n      return;\n    }\n  }\n\n  terminal.error(\"Host not found\");\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { isScriptFilename } from \"../../Script/isScriptFilename\";\nimport FileSaver from \"file-saver\";\nimport JSZip from \"jszip\";\n\nexport function download(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  try {\n    if (args.length !== 1) {\n      terminal.error(\"Incorrect usage of download command. Usage: download [script/text file]\");\n      return;\n    }\n    const fn = args[0] + \"\";\n    if (fn === \"*\" || fn === \"*.script\" || fn === \"*.txt\") {\n      // Download all scripts as a zip\n      const zip = new JSZip();\n      if (fn === \"*\" || fn === \"*.script\") {\n        for (let i = 0; i < server.scripts.length; ++i) {\n          const file = new Blob([server.scripts[i].code], {\n            type: \"text/plain\",\n          });\n          zip.file(server.scripts[i].filename + \".js\", file);\n        }\n      }\n      if (fn === \"*\" || fn === \"*.txt\") {\n        for (let i = 0; i < server.textFiles.length; ++i) {\n          const file = new Blob([server.textFiles[i].text], {\n            type: \"text/plain\",\n          });\n          zip.file(server.textFiles[i].fn, file);\n        }\n      }\n\n      let zipFn = \"\";\n      switch (fn) {\n        case \"*.script\":\n          zipFn = \"bitburnerScripts.zip\";\n          break;\n        case \"*.txt\":\n          zipFn = \"bitburnerTexts.zip\";\n          break;\n        default:\n          zipFn = \"bitburnerFiles.zip\";\n          break;\n      }\n\n      zip.generateAsync({ type: \"blob\" }).then((content: any) => FileSaver.saveAs(content, zipFn));\n      return;\n    } else if (isScriptFilename(fn)) {\n      // Download a single script\n      const script = terminal.getScript(player, fn);\n      if (script != null) {\n        return script.download();\n      }\n    } else if (fn.endsWith(\".txt\")) {\n      // Download a single text file\n      const txt = terminal.getTextFile(player, fn);\n      if (txt != null) {\n        return txt.download();\n      }\n    } else {\n      terminal.error(`Cannot download this filetype`);\n      return;\n    }\n    terminal.error(`${fn} does not exist`);\n    return;\n  } catch (e) {\n    terminal.error(e + \"\");\n    return;\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\n\nexport function expr(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length === 0) {\n    terminal.error(\"Incorrect usage of expr command. Usage: expr [math expression]\");\n    return;\n  }\n  const expr = args.join(\"\");\n\n  // Sanitize the math expression\n  const sanitizedExpr = expr.replace(/s+/g, \"\").replace(/[^-()\\d/*+.]/g, \"\");\n  let result;\n  try {\n    result = eval(sanitizedExpr);\n  } catch (e) {\n    terminal.error(`Could not evaluate expression: ${sanitizedExpr}`);\n    return;\n  }\n  terminal.print(result);\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\n\nexport function free(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 0) {\n    terminal.error(\"Incorrect usage of free command. Usage: free\");\n    return;\n  }\n  const ram = numeralWrapper.formatRAM(player.getCurrentServer().maxRam);\n  const used = numeralWrapper.formatRAM(player.getCurrentServer().ramUsed);\n  const avail = numeralWrapper.formatRAM(player.getCurrentServer().maxRam - player.getCurrentServer().ramUsed);\n  const maxLength = Math.max(ram.length, Math.max(used.length, avail.length));\n  const usedPercent = numeralWrapper.formatPercentage(\n    player.getCurrentServer().ramUsed / player.getCurrentServer().maxRam,\n  );\n\n  terminal.print(`Total:     ${\" \".repeat(maxLength - ram.length)}${ram}`);\n  terminal.print(`Used:      ${\" \".repeat(maxLength - used.length)}${used} (${usedPercent})`);\n  terminal.print(`Available: ${\" \".repeat(maxLength - avail.length)}${avail}`);\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { Server } from \"../../Server/Server\";\n\nexport function hack(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 0) {\n    terminal.error(\"Incorrect usage of hack command. Usage: hack\");\n    return;\n  }\n\n  if (!(server instanceof Server)) {\n    terminal.error(\n      \"Cannot hack your own machines! You are currently connected to your home PC or one of your purchased servers\",\n    );\n  }\n  const normalServer = server as Server;\n  // Hack the current PC (usually for money)\n  // You can't hack your home pc or servers you purchased\n  if (normalServer.purchasedByPlayer) {\n    terminal.error(\n      \"Cannot hack your own machines! You are currently connected to your home PC or one of your purchased servers\",\n    );\n    return;\n  }\n  if (!normalServer.hasAdminRights) {\n    terminal.error(\"You do not have admin rights for this machine! Cannot hack\");\n    return;\n  }\n  if (normalServer.requiredHackingSkill > player.hacking_skill) {\n    terminal.error(\n      \"Your hacking skill is not high enough to attempt hacking this machine. Try analyzing the machine to determine the required hacking skill\",\n    );\n    return;\n  }\n  terminal.startHack(player);\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { TerminalHelpText, HelpTexts } from \"../HelpText\";\n\nexport function help(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 0 && args.length !== 1) {\n    terminal.error(\"Incorrect usage of help command. Usage: help\");\n    return;\n  }\n  if (args.length === 0) {\n    TerminalHelpText.forEach((line) => terminal.print(line));\n  } else {\n    const cmd = args[0];\n    const txt = HelpTexts[cmd];\n    if (txt == null) {\n      terminal.error(\"No help topics match '\" + cmd + \"'\");\n      return;\n    }\n    txt.forEach((t) => terminal.print(t));\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\n\nexport function home(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 0) {\n    terminal.error(\"Incorrect usage of home command. Usage: home\");\n    return;\n  }\n  player.getCurrentServer().isConnectedTo = false;\n  player.currentServer = player.getHomeComputer().ip;\n  player.getCurrentServer().isConnectedTo = true;\n  terminal.print(\"Connected to home\");\n  terminal.setcwd(\"/\");\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\n\nexport function hostname(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 0) {\n    terminal.error(\"Incorrect usage of hostname command. Usage: hostname\");\n    return;\n  }\n  terminal.print(player.getCurrentServer().hostname);\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\n\nexport function ifconfig(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 0) {\n    terminal.error(\"Incorrect usage of ifconfig command. Usage: ifconfig\");\n    return;\n  }\n  terminal.print(player.getCurrentServer().ip);\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { killWorkerScript } from \"../../Netscript/killWorkerScript\";\n\nexport function kill(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  try {\n    if (args.length < 1) {\n      terminal.error(\"Incorrect usage of kill command. Usage: kill [scriptname] [arg1] [arg2]...\");\n      return;\n    }\n\n    // Kill by PID\n    if (typeof args[0] === \"number\") {\n      const pid = args[0];\n      const res = killWorkerScript(pid);\n      if (res) {\n        terminal.print(`Killing script with PID ${pid}`);\n      } else {\n        terminal.print(`Failed to kill script with PID ${pid}. No such script exists`);\n      }\n\n      return;\n    }\n\n    const scriptName = terminal.getFilepath(args[0]);\n    const runningScript = server.getRunningScript(scriptName, args.slice(1));\n    if (runningScript == null) {\n      terminal.error(\"No such script is running. Nothing to kill\");\n      return;\n    }\n    killWorkerScript(runningScript, server.ip, false);\n    terminal.print(`Killing ${scriptName}`);\n  } catch (e) {\n    terminal.error(e + \"\");\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { killWorkerScript } from \"../../Netscript/killWorkerScript\";\nimport { WorkerScriptStartStopEventEmitter } from \"../../Netscript/WorkerScriptStartStopEventEmitter\";\n\nexport function killall(terminal: ITerminal, router: IRouter, player: IPlayer, server: BaseServer): void {\n  for (let i = server.runningScripts.length - 1; i >= 0; --i) {\n    killWorkerScript(server.runningScripts[i], server.ip, false);\n  }\n  WorkerScriptStartStopEventEmitter.emit();\n  terminal.print(\"Killing all running scripts\");\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { Message } from \"../../Message/Message\";\nimport { getFirstParentDirectory, isValidDirectoryPath, evaluateDirectoryPath } from \"../../Terminal/DirectoryHelpers\";\n\nexport function ls(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  const numArgs = args.length;\n  function incorrectUsage(): void {\n    terminal.error(\"Incorrect usage of ls command. Usage: ls [dir] [| grep pattern]\");\n  }\n\n  if (numArgs > 5 || numArgs === 3) {\n    return incorrectUsage();\n  }\n\n  // Grep\n  let filter = \"\"; // Grep\n\n  // Directory path\n  let prefix = terminal.cwd();\n  if (!prefix.endsWith(\"/\")) {\n    prefix += \"/\";\n  }\n\n  // If there are 4+ arguments, then the last 3 must be for grep\n  if (numArgs >= 4) {\n    if (args[numArgs - 1] !== \"grep\" || args[numArgs - 2] !== \"|\") {\n      return incorrectUsage();\n    }\n    filter = args[numArgs] + \"\";\n  }\n\n  // If the second argument is not a pipe, then it must be for listing a directory\n  if (numArgs >= 1 && args[0] !== \"|\") {\n    const newPath = evaluateDirectoryPath(args[0] + \"\", terminal.cwd());\n    prefix = newPath ? newPath : \"\";\n    if (prefix != null) {\n      if (!prefix.endsWith(\"/\")) {\n        prefix += \"/\";\n      }\n      if (!isValidDirectoryPath(prefix)) {\n        return incorrectUsage();\n      }\n    }\n  }\n\n  // Root directory, which is the same as no 'prefix' at all\n  if (prefix === \"/\") {\n    prefix = \"\";\n  }\n\n  // Display all programs and scripts\n  const allPrograms: string[] = [];\n  const allScripts: string[] = [];\n  const allTextFiles: string[] = [];\n  const allContracts: string[] = [];\n  const allMessages: string[] = [];\n  const folders: string[] = [];\n\n  function handleFn(fn: string, dest: string[]): void {\n    let parsedFn = fn;\n    if (prefix) {\n      if (!fn.startsWith(prefix)) {\n        return;\n      } else {\n        parsedFn = fn.slice(prefix.length, fn.length);\n      }\n    }\n\n    if (filter && !parsedFn.includes(filter)) {\n      return;\n    }\n\n    // If the fn includes a forward slash, it must be in a subdirectory.\n    // Therefore, we only list the \"first\" directory in its path\n    if (parsedFn.includes(\"/\")) {\n      const firstParentDir = getFirstParentDirectory(parsedFn);\n      if (filter && !firstParentDir.includes(filter)) {\n        return;\n      }\n\n      if (!folders.includes(firstParentDir)) {\n        folders.push(firstParentDir);\n      }\n\n      return;\n    }\n\n    dest.push(parsedFn);\n  }\n\n  // Get all of the programs and scripts on the machine into one temporary array\n  const s = player.getCurrentServer();\n  for (const program of s.programs) handleFn(program, allPrograms);\n  for (const script of s.scripts) handleFn(script.filename, allScripts);\n  for (const txt of s.textFiles) handleFn(txt.fn, allTextFiles);\n  for (const contract of s.contracts) handleFn(contract.fn, allContracts);\n  for (const msgOrLit of s.messages)\n    msgOrLit instanceof Message ? handleFn(msgOrLit.filename, allMessages) : handleFn(msgOrLit, allMessages);\n\n  // Sort the files/folders alphabetically then print each\n  allPrograms.sort();\n  allScripts.sort();\n  allTextFiles.sort();\n  allContracts.sort();\n  allMessages.sort();\n  folders.sort();\n\n  function postSegments(segments: string[]): void {\n    const maxLength = Math.max(...segments.map((s) => s.length)) + 1;\n    const filesPerRow = Math.floor(80 / maxLength);\n    for (let i = 0; i < segments.length; i++) {\n      let row = \"\";\n      for (let col = 0; col < filesPerRow; col++) {\n        if (!(i < segments.length)) break;\n        row += segments[i];\n        row += \" \".repeat(maxLength * (col + 1) - row.length);\n        i++;\n      }\n      i--;\n      terminal.print(row);\n    }\n  }\n\n  const groups = [\n    { segments: folders },\n    { segments: allMessages },\n    { segments: allTextFiles },\n    { segments: allPrograms },\n    { segments: allContracts },\n    { segments: allScripts },\n  ].filter((g) => g.segments.length > 0);\n  for (let i = 0; i < groups.length; i++) {\n    if (i !== 0) {\n      terminal.print(\"\");\n      terminal.print(\"\");\n    }\n    postSegments(groups[i].segments);\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\n\nexport function lscpu(terminal: ITerminal, router: IRouter, player: IPlayer): void {\n  terminal.print(player.getCurrentServer().cpuCores + \" Core(s)\");\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\n\nexport function mem(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  try {\n    if (args.length !== 1 && args.length !== 3) {\n      terminal.error(\"Incorrect usage of mem command. usage: mem [scriptname] [-t] [number threads]\");\n      return;\n    }\n\n    const scriptName = args[0] + \"\";\n    let numThreads = 1;\n    if (args.length === 3 && args[1] === \"-t\") {\n      numThreads = Math.round(parseInt(args[2] + \"\"));\n      if (isNaN(numThreads) || numThreads < 1) {\n        terminal.error(\"Invalid number of threads specified. Number of threads must be greater than 1\");\n        return;\n      }\n    }\n\n    const script = terminal.getScript(player, scriptName);\n    if (script == null) {\n      terminal.error(\"No such script exists!\");\n      return;\n    }\n\n    const ramUsage = script.ramUsage * numThreads;\n\n    terminal.print(\n      `This script requires ${numeralWrapper.formatRAM(ramUsage)} of RAM to run for ${numThreads} thread(s)`,\n    );\n  } catch (e) {\n    terminal.error(e + \"\");\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { isScriptFilename } from \"../../Script/isScriptFilename\";\nimport { TextFile } from \"../../TextFile\";\nimport { Script } from \"../../Script/Script\";\n\nexport function mv(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 2) {\n    terminal.error(`Incorrect number of arguments. Usage: mv [src] [dest]`);\n    return;\n  }\n\n  try {\n    const source = args[0] + \"\";\n    const dest = args[1] + \"\";\n\n    if (!isScriptFilename(source) && !source.endsWith(\".txt\")) {\n      terminal.error(`'mv' can only be used on scripts and text files (.txt)`);\n      return;\n    }\n\n    const srcFile = terminal.getFile(player, source);\n    if (srcFile == null) {\n      terminal.error(`Source file ${source} does not exist`);\n      return;\n    }\n\n    const sourcePath = terminal.getFilepath(source);\n    const destPath = terminal.getFilepath(dest);\n\n    const destFile = terminal.getFile(player, dest);\n\n    // 'mv' command only works on scripts and txt files.\n    // Also, you can't convert between different file types\n    if (isScriptFilename(source)) {\n      const script = srcFile as Script;\n      if (!isScriptFilename(dest)) {\n        terminal.error(`Source and destination files must have the same type`);\n        return;\n      }\n\n      // Command doesnt work if script is running\n      if (server.isRunning(sourcePath)) {\n        terminal.error(`Cannot use 'mv' on a script that is running`);\n        return;\n      }\n\n      if (destFile != null) {\n        // Already exists, will be overwritten, so we'll delete it\n        const status = server.removeFile(destPath);\n        if (!status.res) {\n          terminal.error(`Something went wrong...please contact game dev (probably a bug)`);\n          return;\n        } else {\n          terminal.print(\"Warning: The destination file was overwritten\");\n        }\n      }\n\n      script.filename = destPath;\n    } else if (srcFile instanceof TextFile) {\n      const textFile = srcFile as TextFile;\n      if (!dest.endsWith(\".txt\")) {\n        terminal.error(`Source and destination files must have the same type`);\n        return;\n      }\n\n      if (destFile != null) {\n        // Already exists, will be overwritten, so we'll delete it\n        const status = server.removeFile(destPath);\n        if (!status.res) {\n          terminal.error(`Something went wrong...please contact game dev (probably a bug)`);\n          return;\n        } else {\n          terminal.print(\"Warning: The destination file was overwritten\");\n        }\n      }\n\n      textFile.fn = destPath;\n    }\n  } catch (e) {\n    terminal.error(e + \"\");\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { isScriptFilename } from \"../../Script/isScriptFilename\";\n\nexport function nano(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 1) {\n    terminal.error(\"Incorrect usage of nano command. Usage: nano [scriptname]\");\n    return;\n  }\n\n  try {\n    const filename = args[0] + \"\";\n    if (isScriptFilename(filename)) {\n      const filepath = terminal.getFilepath(filename);\n      const script = terminal.getScript(player, filename);\n      if (script == null) {\n        let code = \"\";\n        if (filename.endsWith(\".ns\") || filename.endsWith(\".js\")) {\n          code = `export async function main(ns) {\n\n}`;\n        }\n        router.toScriptEditor(filepath, code);\n      } else {\n        router.toScriptEditor(filepath, script.code);\n      }\n    } else if (filename.endsWith(\".txt\")) {\n      const filepath = terminal.getFilepath(filename);\n      const txt = terminal.getTextFile(player, filename);\n      if (txt == null) {\n        router.toScriptEditor(filepath);\n      } else {\n        router.toScriptEditor(filepath, txt.text);\n      }\n    } else {\n      terminal.error(\n        \"Invalid file. Only scripts (.script, .ns, .js), text files (.txt), or .fconf can be edited with nano\",\n      );\n      return;\n    }\n  } catch (e) {\n    terminal.error(e + \"\");\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\n\nexport function ps(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 0) {\n    terminal.error(\"Incorrect usage of ps command. Usage: ps\");\n    return;\n  }\n  for (let i = 0; i < server.runningScripts.length; i++) {\n    const rsObj = server.runningScripts[i];\n    let res = `(PID - ${rsObj.pid}) ${rsObj.filename}`;\n    for (let j = 0; j < rsObj.args.length; ++j) {\n      res += \" \" + rsObj.args[j].toString();\n    }\n    terminal.print(res);\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { IReturnStatus } from \"../../types\";\n\nexport function rm(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 1) {\n    terminal.error(\"Incorrect number of arguments. Usage: rm [program/script]\");\n    return;\n  }\n\n  // Check programs\n  let delTarget;\n  let status: IReturnStatus = {\n    res: true,\n    msg: \"\",\n  };\n  try {\n    delTarget = terminal.getFilepath(args[0] + \"\");\n    status = server.removeFile(delTarget);\n  } catch (err) {\n    status = {\n      res: false,\n      msg: \"No such file exists\",\n    };\n  }\n\n  if (!status.res && status.msg) {\n    terminal.error(status.msg);\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { isScriptFilename } from \"../../Script/isScriptFilename\";\nimport { runScript } from \"./runScript\";\nimport { runProgram } from \"./runProgram\";\n\nexport function run(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  // Run a program or a script\n  if (args.length < 1) {\n    terminal.error(\"Incorrect number of arguments. Usage: run [program/script] [-t] [num threads] [arg1] [arg2]...\");\n  } else {\n    const executableName = args[0] + \"\";\n\n    // Secret Music player!\n    // if (executableName === \"musicplayer\") {\n    //   post(\n    //     '<iframe src=\"https://open.spotify.com/embed/user/danielyxie/playlist/1ORnnL6YNvXOracUaUV2kh\" width=\"300\" height=\"380\" frameborder=\"0\" allowtransparency=\"true\"></iframe>',\n    //     false,\n    //   );\n    //   return;\n    // }\n\n    // Check if its a script or just a program/executable\n    if (isScriptFilename(executableName)) {\n      runScript(terminal, router, player, server, args);\n    } else if (executableName.endsWith(\".cct\")) {\n      terminal.runContract(player, executableName);\n    } else {\n      runProgram(terminal, router, player, server, args);\n    }\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { LogBoxEvents } from \"../../ui/React/LogBoxManager\";\nimport { startWorkerScript } from \"../../NetscriptWorker\";\nimport { RunningScript } from \"../../Script/RunningScript\";\nimport { findRunningScript } from \"../../Script/ScriptHelpers\";\nimport * as libarg from \"arg\";\n\nexport function runScript(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  commandArgs: (string | number)[],\n): void {\n  if (commandArgs.length < 1) {\n    terminal.error(\n      `Bug encountered with Terminal.runScript(). Command array has a length of less than 1: ${commandArgs}`,\n    );\n    return;\n  }\n\n  const scriptName = terminal.getFilepath(commandArgs[0] + \"\");\n\n  const runArgs = { \"--tail\": Boolean, \"-t\": Number };\n  const flags = libarg(runArgs, {\n    permissive: true,\n    argv: commandArgs.slice(1),\n  });\n  const threadFlag = Math.round(parseFloat(flags[\"-t\"]));\n  const tailFlag = flags[\"--tail\"] === true;\n  if (flags[\"-t\"] !== undefined && (threadFlag < 0 || isNaN(threadFlag))) {\n    terminal.error(\"Invalid number of threads specified. Number of threads must be greater than 0\");\n    return;\n  }\n  const numThreads = !isNaN(threadFlag) && threadFlag > 0 ? threadFlag : 1;\n  const args = flags[\"_\"];\n\n  // Check if this script is already running\n  if (findRunningScript(scriptName, args, server) != null) {\n    terminal.print(\"ERROR: This script is already running. Cannot run multiple instances\");\n    return;\n  }\n\n  // Check if the script exists and if it does run it\n  for (let i = 0; i < server.scripts.length; i++) {\n    if (server.scripts[i].filename !== scriptName) {\n      continue;\n    }\n    // Check for admin rights and that there is enough RAM availble to run\n    const script = server.scripts[i];\n    const ramUsage = script.ramUsage * numThreads;\n    const ramAvailable = server.maxRam - server.ramUsed;\n\n    if (!server.hasAdminRights) {\n      terminal.print(\"Need root access to run script\");\n      return;\n    }\n\n    if (ramUsage > ramAvailable) {\n      terminal.print(\n        \"This machine does not have enough RAM to run this script with \" +\n          numThreads +\n          \" threads. Script requires \" +\n          ramUsage +\n          \"GB of RAM\",\n      );\n      return;\n    }\n\n    // Able to run script\n    const runningScript = new RunningScript(script, args);\n    runningScript.threads = numThreads;\n\n    const success = startWorkerScript(runningScript, server);\n    if (!success) {\n      terminal.error(`Failed to start script`);\n      return;\n    }\n\n    terminal.print(\n      `Running script with ${numThreads} thread(s), pid ${runningScript.pid} and args: ${JSON.stringify(args)}.`,\n    );\n    if (tailFlag) {\n      LogBoxEvents.emit(runningScript);\n    }\n    return;\n  }\n\n  terminal.print(\"ERROR: No such script\");\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { Programs } from \"../../Programs/Programs\";\n\nexport function runProgram(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length < 1) {\n    return;\n  }\n\n  // Check if you have the program on your computer. If you do, execute it, otherwise\n  // display an error message\n  const programName = args[0] + \"\";\n\n  if (!player.hasProgram(programName)) {\n    terminal.error(\"No such executable on home computer (Only programs that exist on your home computer can be run)\");\n    return;\n  }\n\n  if (args.length < 1) {\n    return;\n  }\n\n  for (const program of Object.values(Programs)) {\n    if (program.name === programName) {\n      program.run(\n        router,\n        terminal,\n        player,\n        server,\n        args.slice(1).map((arg) => arg + \"\"),\n      );\n      return;\n    }\n  }\n\n  terminal.print(\"Invalid executable. Cannot be run\");\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { getServerOnNetwork } from \"../../Server/ServerHelpers\";\n\nexport function scan(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 0) {\n    terminal.error(\"Incorrect usage of netstat/scan command. Usage: netstat/scan\");\n    return;\n  }\n\n  // Displays available network connections using TCP\n  const currServ = player.getCurrentServer();\n  const servers = currServ.serversOnNetwork.map((_, i) => {\n    const server = getServerOnNetwork(currServ, i);\n    if (server === null) throw new Error(\"Server should not be null\");\n    return {\n      hostname: server.hostname,\n      ip: server.ip,\n      hasRoot: server.hasAdminRights ? \"Y\" : \"N\",\n    };\n  });\n  servers.unshift({\n    hostname: \"Hostname\",\n    ip: \"IP\",\n    hasRoot: \"Root Access\",\n  });\n  const maxHostname = Math.max(...servers.map((s) => s.hostname.length));\n  const maxIP = Math.max(...servers.map((s) => s.ip.length));\n  for (const server of servers) {\n    if (!server) continue;\n    let entry = server.hostname;\n    entry += \" \".repeat(maxHostname - server.hostname.length + 1);\n    entry += server.ip;\n    entry += \" \".repeat(maxIP - server.ip.length + 1);\n    entry += server.hasRoot;\n    terminal.print(entry);\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { Programs } from \"../../Programs/Programs\";\n\nexport function scananalyze(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length === 0) {\n    terminal.executeScanAnalyzeCommand(player, 1);\n  } else {\n    // # of args must be 2 or 3\n    if (args.length > 2) {\n      terminal.error(\"Incorrect usage of scan-analyze command. usage: scan-analyze [depth]\");\n      return;\n    }\n    let all = false;\n    if (args.length === 2 && args[1] === \"-a\") {\n      all = true;\n    }\n\n    const depth = parseInt(args[0] + \"\");\n\n    if (isNaN(depth) || depth < 0) {\n      terminal.error(\"Incorrect usage of scan-analyze command. depth argument must be positive numeric\");\n      return;\n    }\n    if (depth > 3 && !player.hasProgram(Programs.DeepscanV1.name) && !player.hasProgram(Programs.DeepscanV2.name)) {\n      terminal.error(\"You cannot scan-analyze with that high of a depth. Maximum depth is 3\");\n      return;\n    } else if (depth > 5 && !player.hasProgram(Programs.DeepscanV2.name)) {\n      terminal.error(\"You cannot scan-analyze with that high of a depth. Maximum depth is 5\");\n      return;\n    } else if (depth > 10) {\n      terminal.error(\"You cannot scan-analyze with that high of a depth. Maximum depth is 10\");\n      return;\n    }\n    terminal.executeScanAnalyzeCommand(player, depth, all);\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { Message } from \"../../Message/Message\";\nimport { getServer } from \"../../Server/ServerHelpers\";\nimport { isScriptFilename } from \"../../Script/isScriptFilename\";\n\nexport function scp(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  try {\n    if (args.length !== 2) {\n      terminal.error(\"Incorrect usage of scp command. Usage: scp [file] [destination hostname/ip]\");\n      return;\n    }\n    const scriptname = terminal.getFilepath(args[0] + \"\");\n    if (!scriptname.endsWith(\".lit\") && !isScriptFilename(scriptname) && !scriptname.endsWith(\".txt\")) {\n      terminal.error(\"scp only works for scripts, text files (.txt), and literature files (.lit)\");\n      return;\n    }\n\n    const destServer = getServer(args[1] + \"\");\n    if (destServer == null) {\n      terminal.error(`Invalid destination. ${args[1]} not found`);\n      return;\n    }\n\n    // Scp for lit files\n    if (scriptname.endsWith(\".lit\")) {\n      let found = false;\n      for (let i = 0; i < server.messages.length; ++i) {\n        if (!(server.messages[i] instanceof Message) && server.messages[i] == scriptname) {\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        return terminal.error(\"No such file exists!\");\n      }\n\n      for (let i = 0; i < destServer.messages.length; ++i) {\n        if (destServer.messages[i] === scriptname) {\n          terminal.print(scriptname + \" copied over to \" + destServer.hostname);\n          return; // Already exists\n        }\n      }\n      destServer.messages.push(scriptname);\n      return terminal.print(scriptname + \" copied over to \" + destServer.hostname);\n    }\n\n    // Scp for txt files\n    if (scriptname.endsWith(\".txt\")) {\n      let txtFile = null;\n      for (let i = 0; i < server.textFiles.length; ++i) {\n        if (server.textFiles[i].fn === scriptname) {\n          txtFile = server.textFiles[i];\n          break;\n        }\n      }\n\n      if (txtFile === null) {\n        return terminal.error(\"No such file exists!\");\n      }\n\n      const tRes = destServer.writeToTextFile(txtFile.fn, txtFile.text);\n      if (!tRes.success) {\n        terminal.error(\"scp failed\");\n        return;\n      }\n      if (tRes.overwritten) {\n        terminal.print(`WARNING: ${scriptname} already exists on ${destServer.hostname} and will be overwriten`);\n        terminal.print(`${scriptname} overwritten on ${destServer.hostname}`);\n        return;\n      }\n      terminal.print(`${scriptname} copied over to ${destServer.hostname}`);\n      return;\n    }\n\n    // Get the current script\n    let sourceScript = null;\n    for (let i = 0; i < server.scripts.length; ++i) {\n      if (scriptname == server.scripts[i].filename) {\n        sourceScript = server.scripts[i];\n        break;\n      }\n    }\n    if (sourceScript == null) {\n      terminal.error(\"scp() failed. No such script exists\");\n      return;\n    }\n\n    const sRes = destServer.writeToScriptFile(scriptname, sourceScript.code);\n    if (!sRes.success) {\n      terminal.error(`scp failed`);\n      return;\n    }\n    if (sRes.overwritten) {\n      terminal.print(`WARNING: ${scriptname} already exists on ${destServer.hostname} and will be overwritten`);\n      terminal.print(`${scriptname} overwritten on ${destServer.hostname}`);\n      return;\n    }\n    terminal.print(`${scriptname} copied over to ${destServer.hostname}`);\n  } catch (e) {\n    terminal.error(e + \"\");\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\n\nexport function sudov(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 0) {\n    terminal.error(\"Incorrect number of arguments. Usage: sudov\");\n    return;\n  }\n\n  if (server.hasAdminRights) {\n    terminal.print(\"You have ROOT access to this machine\");\n  } else {\n    terminal.print(\"You do NOT have root access to this machine\");\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { findRunningScriptByPid } from \"../../Script/ScriptHelpers\";\nimport { isScriptFilename } from \"../../Script/isScriptFilename\";\nimport { compareArrays } from \"../../utils/helpers/compareArrays\";\nimport { LogBoxEvents } from \"../../ui/React/LogBoxManager\";\n\nexport function tail(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  commandArray: (string | number)[],\n): void {\n  try {\n    if (commandArray.length < 1) {\n      terminal.error(\"Incorrect number of arguments. Usage: tail [script] [arg1] [arg2]...\");\n    } else if (typeof commandArray[0] === \"string\") {\n      const scriptName = terminal.getFilepath(commandArray[0]);\n      if (!isScriptFilename(scriptName)) {\n        terminal.error(\"tail can only be called on .script, .ns, .js files, or by pid\");\n        return;\n      }\n\n      // Get script arguments\n      const args = [];\n      for (let i = 1; i < commandArray.length; ++i) {\n        args.push(commandArray[i]);\n      }\n\n      // go over all the running scripts. If there's a perfect\n      // match, use it!\n      for (let i = 0; i < server.runningScripts.length; ++i) {\n        if (server.runningScripts[i].filename === scriptName && compareArrays(server.runningScripts[i].args, args)) {\n          LogBoxEvents.emit(server.runningScripts[i]);\n          return;\n        }\n      }\n\n      // Find all scripts that are potential candidates.\n      const candidates = [];\n      for (let i = 0; i < server.runningScripts.length; ++i) {\n        // only scripts that have more arguments (equal arguments is already caught)\n        if (server.runningScripts[i].args.length < args.length) continue;\n        // make a smaller copy of the args.\n        const args2 = server.runningScripts[i].args.slice(0, args.length);\n        if (server.runningScripts[i].filename === scriptName && compareArrays(args2, args)) {\n          candidates.push(server.runningScripts[i]);\n        }\n      }\n\n      // If there's only 1 possible choice, use that.\n      if (candidates.length === 1) {\n        LogBoxEvents.emit(candidates[0]);\n        return;\n      }\n\n      // otherwise lists all possible conflicting choices.\n      if (candidates.length > 1) {\n        terminal.error(\"Found several potential candidates:\");\n        for (const candidate of candidates) terminal.error(`${candidate.filename} ${candidate.args.join(\" \")}`);\n        terminal.error(\"Script arguments need to be specified.\");\n        return;\n      }\n\n      // if there's no candidate then we just don't know.\n      terminal.error(\"No such script exists.\");\n    } else {\n      const runningScript = findRunningScriptByPid(commandArray[0], server);\n      if (runningScript == null) {\n        terminal.error(\"No such script exists\");\n        return;\n      }\n      LogBoxEvents.emit(runningScript);\n    }\n  } catch (e) {\n    terminal.error(e + \"\");\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { getRamUsageFromRunningScript } from \"../../Script/RunningScriptHelpers\";\nimport { numeralWrapper } from \"../../ui/numeralFormat\";\n\nexport function top(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 0) {\n    terminal.error(\"Incorrect usage of top command. Usage: top\");\n    return;\n  }\n\n  // Headers\n  const scriptWidth = 40;\n  const pidWidth = 10;\n  const threadsWidth = 16;\n\n  const scriptTxt = \"Script\";\n  const pidTxt = \"PID\";\n  const threadsTxt = \"Threads\";\n  const ramTxt = \"RAM Usage\";\n\n  const spacesAfterScriptTxt = \" \".repeat(scriptWidth - scriptTxt.length);\n  const spacesAfterPidTxt = \" \".repeat(pidWidth - pidTxt.length);\n  const spacesAfterThreadsTxt = \" \".repeat(threadsWidth - threadsTxt.length);\n\n  const headers = `${scriptTxt}${spacesAfterScriptTxt}${pidTxt}${spacesAfterPidTxt}${threadsTxt}${spacesAfterThreadsTxt}${ramTxt}`;\n\n  terminal.print(headers);\n\n  const currRunningScripts = server.runningScripts;\n  // Iterate through scripts on current server\n  for (let i = 0; i < currRunningScripts.length; i++) {\n    const script = currRunningScripts[i];\n\n    // Calculate name padding\n    const numSpacesScript = Math.max(0, scriptWidth - script.filename.length);\n    const spacesScript = \" \".repeat(numSpacesScript);\n\n    // Calculate PID padding\n    const numSpacesPid = Math.max(0, pidWidth - (script.pid + \"\").length);\n    const spacesPid = \" \".repeat(numSpacesPid);\n\n    // Calculate thread padding\n    const numSpacesThread = Math.max(0, threadsWidth - (script.threads + \"\").length);\n    const spacesThread = \" \".repeat(numSpacesThread);\n\n    // Calculate and transform RAM usage\n    const ramUsage = numeralWrapper.formatRAM(getRamUsageFromRunningScript(script) * script.threads);\n\n    const entry = [script.filename, spacesScript, script.pid, spacesPid, script.threads, spacesThread, ramUsage].join(\n      \"\",\n    );\n    terminal.print(entry);\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { removeAlias } from \"../../Alias\";\n\nexport function unalias(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 1) {\n    terminal.error(\"Incorrect usage of unalias name. Usage: unalias [alias]\");\n    return;\n  } else {\n    if (removeAlias(args[0] + \"\")) {\n      terminal.print(`Removed alias ${args[0]}`);\n    } else {\n      terminal.error(`No such alias exists: ${args[0]}`);\n    }\n  }\n}\n","import { ITerminal } from \"../ITerminal\";\nimport { IRouter } from \"../../ui/Router\";\nimport { IPlayer } from \"../../PersonObjects/IPlayer\";\nimport { BaseServer } from \"../../Server/BaseServer\";\nimport { isScriptFilename } from \"../../Script/isScriptFilename\";\n\nexport function wget(\n  terminal: ITerminal,\n  router: IRouter,\n  player: IPlayer,\n  server: BaseServer,\n  args: (string | number)[],\n): void {\n  if (args.length !== 2) {\n    terminal.error(\"Incorrect usage of wget command. Usage: wget [url] [target file]\");\n    return;\n  }\n\n  const url = args[0] + \"\";\n  const target = terminal.getFilepath(args[1] + \"\");\n  if (!isScriptFilename(target) && !target.endsWith(\".txt\")) {\n    return terminal.print(`wget failed: Invalid target file. Target file must be script or text file`);\n  }\n  $.get(\n    url,\n    function (data: any) {\n      let res;\n      if (isScriptFilename(target)) {\n        res = server.writeToScriptFile(target, data);\n      } else {\n        res = server.writeToTextFile(target, data);\n      }\n      if (!res.success) {\n        return terminal.print(\"wget failed\");\n      }\n      if (res.overwritten) {\n        return terminal.print(`wget successfully retrieved content and overwrote ${target}`);\n      }\n      return terminal.print(`wget successfully retrieved content to new file ${target}`);\n    },\n    \"text\",\n  ).fail(function (e) {\n    return terminal.error(\"wget failed: \" + JSON.stringify(e));\n  });\n}\n","import { Player } from \"../Player\";\nimport { Exploit } from \"./Exploit\";\n\nexport function startTampering(): void {\n  const a = 55;\n  setInterval(function () {\n    if (a.toExponential() !== \"5.5e+1\") {\n      Player.giveExploit(Exploit.PrototypeTampering);\n    }\n  }, 15 * 60 * 1000); // 15 minutes\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { TTheme as Theme, ThemeEvents, refreshTheme } from \"./ui/React/Theme\";\nimport { LoadingScreen } from \"./ui/LoadingScreen\";\nimport \"./engineStyle\";\n\nReactDOM.render(\n  <Theme>\n    <LoadingScreen />\n  </Theme>,\n  document.getElementById(\"root\"),\n);\n\nfunction rerender(): void {\n  refreshTheme();\n  ReactDOM.render(\n    <Theme>\n      <LoadingScreen />\n    </Theme>,\n    document.getElementById(\"root\"),\n  );\n}\n\n(function () {\n  ThemeEvents.subscribe(rerender);\n})();\n","// These should really be imported with the module that is presenting that UI, but because they very much depend on the\n// cascade order, we'll pull them all in here.\nimport \"normalize.css\";\nimport \"../css/styles.scss\";\nimport \"../css/tooltips.scss\";\nimport \"../css/buttons.scss\";\nimport \"../css/mainmenu.scss\";\nimport \"../css/characteroverview.scss\";\n\nimport \"../css/scripteditor.scss\";\nimport \"../css/hacknetnodes.scss\";\nimport \"../css/menupages.scss\";\nimport \"../css/augmentations.scss\";\nimport \"../css/redpill.scss\";\nimport \"../css/stockmarket.scss\";\nimport \"../css/workinprogress.scss\";\nimport \"../css/popupboxes.scss\";\nimport \"../css/gameoptions.scss\";\nimport \"../css/interactivetutorial.scss\";\nimport \"../css/loader.scss\";\nimport \"../css/missions.scss\";\nimport \"../css/companymanagement.scss\";\nimport \"../css/bladeburner.scss\";\nimport \"../css/gang.scss\";\nimport \"../css/sleeves.scss\";\nimport \"../css/resleeving.scss\";\nimport \"../css/treant.css\";\nimport \"../css/grid.min.css\";\nimport \"../css/dev-menu.css\";\nimport \"../css/casino.scss\";\nimport \"../css/milestones.scss\";\nimport \"../css/infiltration.scss\";\n"],"sourceRoot":""}